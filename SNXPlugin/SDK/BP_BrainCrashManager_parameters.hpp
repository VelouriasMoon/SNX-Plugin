#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BrainCrashManager

#include "Basic.hpp"

#include "BattlePrototype_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "FBrainCrashSequencerInfo_structs.hpp"
#include "Engine_structs.hpp"
#include "FCrashVisionEnemyInfo_structs.hpp"
#include "MovieScene_structs.hpp"
#include "CinematicCamera_structs.hpp"
#include "SEventSequencerBool_structs.hpp"
#include "FCrashVisionCharaInfo_structs.hpp"


namespace SDK::Params
{

// Function BP_BrainCrashManager.BP_BrainCrashManager_C.ExecuteUbergraph_BP_BrainCrashManager
// 0x0F10 (0x0F10 - 0x0000)
struct BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_Damage;                         // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_KillSolo;                       // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_KillMulti;                      // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_LoadEm8220;                     // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_ASyncLoading;                   // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TSoftObjectPtr<class ULevelSequence>          CallFunc_PrivateGetENPCLoadSequenceAssets_Damage;  // 0x0010(0x0028)(HasGetValueTypeHash)
	TSoftObjectPtr<class ULevelSequence>          CallFunc_PrivateGetENPCLoadSequenceAssets_KillSolo; // 0x0038(0x0028)(HasGetValueTypeHash)
	TSoftObjectPtr<class ULevelSequence>          CallFunc_PrivateGetENPCLoadSequenceAssets_KillMulti; // 0x0060(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B78[0x7];                                     // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue;               // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B79[0x5];                                     // 0x009B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelSequence*                         K2Node_DynamicCast_AsLevel_Sequence;               // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B7A[0x7];                                     // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue_1;             // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B7B[0x7];                                     // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelSequence*                         K2Node_DynamicCast_AsLevel_Sequence_1;             // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue_1; // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B7C[0x6];                                     // 0x00CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue_2;             // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B7D[0x6];                                     // 0x00DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelSequence*                         K2Node_DynamicCast_AsLevel_Sequence_2;             // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue_2; // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x00EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x00EB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_CutinManager_C*                     CallFunc_GetCutinManager_CutinManager;             // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B7E[0x7];                                     // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue;            // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetSequencerMarkPause_Successsed;         // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B7F[0x2];                                     // 0x010A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQualifiedFrameTime                    CallFunc_SetSequencerMarkPause_SequencerFullTime;  // 0x010C(0x0010)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x011C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B80[0x3];                                     // 0x011D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_CutinManager_C*                     CallFunc_GetCutinManager_CutinManager_1;           // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_9;                    // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_10;                   // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B81[0x6];                                     // 0x012A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_CutinManager_C*                     CallFunc_GetCutinManager_CutinManager_2;           // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_11;                   // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_12;                   // 0x0139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_PrivateCheckBrainFieldOverwrite_Overwrite; // 0x013A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B82[0x5];                                     // 0x013B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B83[0x4];                                     // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_GetPlayer_ReturnValue;                    // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameSystemManager_C*                CallFunc_GetGameSystemManager_Manager;             // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_EnemyManager_C*                     CallFunc_GetEnemyManager_Manager;                  // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_13;                   // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B84[0x7];                                     // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BrainCrash_C>     K2Node_DynamicCast_AsBPI_Brain_Crash;              // 0x0170(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_14;                   // 0x0181(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B85[0x6];                                     // 0x0182(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_Array_Get_Item;                           // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0194(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_RemoveGlobalCustomTimeDilation_Success;   // 0x0195(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B86[0x2];                                     // 0x0196(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_EnemyManager_C*                     CallFunc_GetEnemyManager_Manager_1;                // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_EnemyManager_C*                     CallFunc_GetEnemyManager_Manager_2;                // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BrainCrash_C>     K2Node_DynamicCast_AsBPI_Brain_Crash_1;            // 0x01A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B87[0x7];                                     // 0x01B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BrainCrash_C>     K2Node_DynamicCast_AsBPI_Brain_Crash_2;            // 0x01C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_15;                   // 0x01D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_16;                   // 0x01D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B88[0x5];                                     // 0x01D3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GameSystemManager_C*                CallFunc_GetGameSystemManager_Manager_1;           // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BrainFieldManager_C*                CallFunc_GetBrainFieldManager_Manager;             // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurrentCustomTimeDilation_CustomTimeDilation; // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B89[0x4];                                     // 0x01EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetBrainFieldUser_User;                   // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B8A[0x4];                                     // 0x01FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IPlayerInterface>      K2Node_DynamicCast_AsPlayer_Interface;             // 0x0200(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B8B[0x7];                                     // 0x0211(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUDMainGame_C*                         CallFunc_GetHUDMainGame_HUDMainGame;               // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInputOverwriteENPCBrainField_ReturnValue; // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Is_Players_Brain_Field_Return_Value;      // 0x0221(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_17;                   // 0x0222(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B8C[0x5];                                     // 0x0223(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UUi_menu_battle_control_C*              K2Node_DynamicCast_AsUi_Menu_Battle_Control;       // 0x0228(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B8D[0x7];                                     // 0x0231(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IRSGameModeBPInterface_C> K2Node_DynamicCast_AsRSGame_Mode_BPInterface;      // 0x0240(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B8E[0x7];                                     // 0x0251(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_GetMainPlayerBP_Player;                   // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BrainCrash_C>     K2Node_DynamicCast_AsBPI_Brain_Crash_3;            // 0x0260(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_9;                     // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_18;                   // 0x0271(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FSEventSequencerBool                   K2Node_CustomEvent_Enable;                         // 0x0272(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B8F[0x5];                                     // 0x0273(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GameSystemManager_C*                CallFunc_GetGameSystemManager_Manager_2;           // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_19;                   // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_RemoveGlobalCustomTimeDilation_Success_1; // 0x0281(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlaySimulate_ReturnValue;               // 0x0282(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B90[0x1];                                     // 0x0283(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0284(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BrainCrashManager_C*                CallFunc_GetBrainCrashManager_Manager;             // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B91[0x3];                                     // 0x0291(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_Time_Dilation_1;                // 0x0294(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetGlobalCustomTimeDilation_CurrentCustomTimeDilation; // 0x0298(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x029C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetGlobalCustomTimeDilation_CurrentCustomTimeDilation_1; // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B92[0x4];                                     // 0x02A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerManager*                         CallFunc_GetPlayerManager_PlayerManager_1;         // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_20;                   // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B93[0x7];                                     // 0x02B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_GetPlayer_ReturnValue_1;                  // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IPlayerInterface>      K2Node_DynamicCast_AsPlayer_Interface_1;           // 0x02C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_10;                    // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_21;                   // 0x02D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerID                                     CallFunc_GetPlayerID_ReturnValue;                  // 0x02D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B94[0x5];                                     // 0x02D3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUDMainGame_C*                         CallFunc_GetHUDMainGame_HUDMainGame_1;             // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_22;                   // 0x02E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B95[0x7];                                     // 0x02E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUi_menu_battle_control_C*              K2Node_DynamicCast_AsUi_Menu_Battle_Control_1;     // 0x02E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_11;                    // 0x02F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x02F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B96[0x6];                                     // 0x02F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_CutinManager_C*                     CallFunc_GetCutinManager_CutinManager_3;           // 0x02F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameSystemManager_C*                CallFunc_GetGameSystemManager_Manager_3;           // 0x0300(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_23;                   // 0x0308(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B97[0x3];                                     // 0x0309(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurrentCustomTimeDilation_CustomTimeDilation_1; // 0x030C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_2;          // 0x0310(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_24;                   // 0x0314(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B98[0x3];                                     // 0x0315(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_Array_Get_Item_1;                         // 0x0318(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSCharacterBase*                       CallFunc_Array_Get_Item_2;                         // 0x0320(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSCharacterBase*                       CallFunc_Array_Get_Item_3;                         // 0x0328(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSCharacterBase*                       CallFunc_Array_Get_Item_4;                         // 0x0330(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSCharacterBase*                       CallFunc_Array_Get_Item_5;                         // 0x0338(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSCharacterBase*                       CallFunc_Array_Get_Item_6;                         // 0x0340(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_25;                   // 0x0348(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_26;                   // 0x0349(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_27;                   // 0x034A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_28;                   // 0x034B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_29;                   // 0x034C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_30;                   // 0x034D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B99[0x2];                                     // 0x034E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_Array_Get_Item_7;                         // 0x0350(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_31;                   // 0x0358(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B9A[0x7];                                     // 0x0359(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_Array_Get_Item_8;                         // 0x0360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_32;                   // 0x0368(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B9B[0x7];                                     // 0x0369(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_Array_Get_Item_9;                         // 0x0370(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_33;                   // 0x0378(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B9C[0x7];                                     // 0x0379(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_Array_Get_Item_10;                        // 0x0380(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_34;                   // 0x0388(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B9D[0x7];                                     // 0x0389(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_Array_Get_Item_11;                        // 0x0390(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_35;                   // 0x0398(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B9E[0x7];                                     // 0x0399(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_Array_Get_Item_12;                        // 0x03A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_36;                   // 0x03A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B9F[0x7];                                     // 0x03A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_Array_Get_Item_13;                        // 0x03B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_37;                   // 0x03B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BA0[0x7];                                     // 0x03B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_Array_Get_Item_14;                        // 0x03C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_38;                   // 0x03C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BA1[0x7];                                     // 0x03C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_Array_Get_Item_15;                        // 0x03D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_39;                   // 0x03D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BA2[0x7];                                     // 0x03D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_Array_Get_Item_16;                        // 0x03E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_40;                   // 0x03E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BA3[0x7];                                     // 0x03E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_Array_Get_Item_17;                        // 0x03F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_41;                   // 0x03F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BA4[0x7];                                     // 0x03F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_Array_Get_Item_18;                        // 0x0400(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_42;                   // 0x0408(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_43;                   // 0x0409(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BA5[0x6];                                     // 0x040A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_Array_Get_Item_19;                        // 0x0410(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_44;                   // 0x0418(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BA6[0x7];                                     // 0x0419(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_EnemyInterface_C> K2Node_DynamicCast_AsBPI_Enemy_Interface;          // 0x0420(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_12;                    // 0x0430(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsBossEnemy_bBoss;                        // 0x0431(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BA7[0x6];                                     // 0x0432(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_Array_Get_Item_20;                        // 0x0438(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_45;                   // 0x0440(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BA8[0x7];                                     // 0x0441(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_Array_Get_Item_21;                        // 0x0448(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_46;                   // 0x0450(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BA9[0x3];                                     // 0x0451(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0454(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_3BAA[0x4];                                     // 0x0464(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_Array_Get_Item_22;                        // 0x0468(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_47;                   // 0x0470(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_48;                   // 0x0471(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_49;                   // 0x0472(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BAB[0x5];                                     // 0x0473(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_Array_Get_Item_23;                        // 0x0478(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_50;                   // 0x0480(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BAC[0x7];                                     // 0x0481(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_Array_Get_Item_24;                        // 0x0488(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_51;                   // 0x0490(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BAD[0x7];                                     // 0x0491(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_Array_Get_Item_25;                        // 0x0498(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_52;                   // 0x04A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BAE[0x7];                                     // 0x04A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_Array_Get_Item_26;                        // 0x04A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_53;                   // 0x04B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_54;                   // 0x04B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_55;                   // 0x04B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BAF[0x5];                                     // 0x04B3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_EnemyInterface_C> K2Node_DynamicCast_AsBPI_Enemy_Interface_1;        // 0x04B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_13;                    // 0x04C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsBossEnemy_bBoss_1;                      // 0x04C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x04CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x04CB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_6;                 // 0x04CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_56;                   // 0x04CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BB0[0x2];                                     // 0x04CE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_Array_Get_Item_27;                        // 0x04D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_57;                   // 0x04D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BB1[0x7];                                     // 0x04D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_Array_Get_Item_28;                        // 0x04E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_58;                   // 0x04E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BB2[0x7];                                     // 0x04E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_Array_Get_Item_29;                        // 0x04F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_59;                   // 0x04F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BB3[0x7];                                     // 0x04F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_Array_Get_Item_30;                        // 0x0500(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_60;                   // 0x0508(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BB4[0x7];                                     // 0x0509(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_Array_Get_Item_31;                        // 0x0510(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_61;                   // 0x0518(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BB5[0x7];                                     // 0x0519(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_Array_Get_Item_32;                        // 0x0520(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_62;                   // 0x0528(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BB6[0x7];                                     // 0x0529(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_Array_Get_Item_33;                        // 0x0530(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_63;                   // 0x0538(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BB7[0x7];                                     // 0x0539(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_Array_Get_Item_34;                        // 0x0540(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                K2Node_CustomEvent_Loaded_6;                       // 0x0548(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_64;                   // 0x0550(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BB8[0x7];                                     // 0x0551(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_Array_Get_Item_35;                        // 0x0558(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_65;                   // 0x0560(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BB9[0x7];                                     // 0x0561(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_Array_Get_Item_36;                        // 0x0568(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSCharacterBase*                       CallFunc_Array_Get_Item_37;                        // 0x0570(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_66;                   // 0x0578(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_67;                   // 0x0579(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_68;                   // 0x057A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BBA[0x5];                                     // 0x057B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_Array_Get_Item_38;                        // 0x0580(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable;                              // 0x0588(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequence*                         K2Node_DynamicCast_AsLevel_Sequence_3;             // 0x0590(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_14;                    // 0x0598(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_69;                   // 0x0599(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_70;                   // 0x059A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_71;                   // 0x059B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BBB[0x4];                                     // 0x059C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_Array_Get_Item_39;                        // 0x05A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_72;                   // 0x05A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_73;                   // 0x05A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BBC[0x6];                                     // 0x05AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_Array_Get_Item_40;                        // 0x05B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_74;                   // 0x05B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BBD[0x7];                                     // 0x05B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_Array_Get_Item_41;                        // 0x05C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_75;                   // 0x05C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_76;                   // 0x05C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_77;                   // 0x05CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BBE[0x5];                                     // 0x05CB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_Array_Get_Item_42;                        // 0x05D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_78;                   // 0x05D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_79;                   // 0x05D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BBF[0x6];                                     // 0x05DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_Array_Get_Item_43;                        // 0x05E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_80;                   // 0x05E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BC0[0x7];                                     // 0x05E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_Array_Get_Item_44;                        // 0x05F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_81;                   // 0x05F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BC1[0x7];                                     // 0x05F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_Array_Get_Item_45;                        // 0x0600(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_82;                   // 0x0608(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BC2[0x7];                                     // 0x0609(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_Array_Get_Item_46;                        // 0x0610(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_83;                   // 0x0618(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BC3[0x7];                                     // 0x0619(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_Array_Get_Item_47;                        // 0x0620(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_84;                   // 0x0628(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BC4[0x7];                                     // 0x0629(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_Array_Get_Item_48;                        // 0x0630(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_85;                   // 0x0638(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_86;                   // 0x0639(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_87;                   // 0x063A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BC5[0x5];                                     // 0x063B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_Array_Get_Item_49;                        // 0x0640(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class ULevelSequence*                   Temp_object_Variable_1;                            // 0x0648(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_88;                   // 0x0650(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_89;                   // 0x0651(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BC6[0x6];                                     // 0x0652(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded_5;                       // 0x0658(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSCharacterBase*                       CallFunc_Array_Get_Item_50;                        // 0x0660(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSCharacterBase*                       CallFunc_Array_Get_Item_51;                        // 0x0668(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_90;                   // 0x0670(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BC7[0x7];                                     // 0x0671(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_Array_Get_Item_52;                        // 0x0678(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_91;                   // 0x0680(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BC8[0x7];                                     // 0x0681(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_Array_Get_Item_53;                        // 0x0688(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_92;                   // 0x0690(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BC9[0x7];                                     // 0x0691(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_Array_Get_Item_54;                        // 0x0698(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x06A0(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x06B0(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_93;                   // 0x06B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BCA[0x7];                                     // 0x06B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_Array_Get_Item_55;                        // 0x06C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_94;                   // 0x06C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BCB[0x7];                                     // 0x06C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_Array_Get_Item_56;                        // 0x06D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_95;                   // 0x06D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BCC[0x7];                                     // 0x06D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_Array_Get_Item_57;                        // 0x06E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_96;                   // 0x06E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BCD[0x7];                                     // 0x06E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Temp_object_Variable_2;                            // 0x06F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSCharacterBase*                       CallFunc_Array_Get_Item_58;                        // 0x06F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequence*                         K2Node_DynamicCast_AsLevel_Sequence_4;             // 0x0700(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_15;                    // 0x0708(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_97;                   // 0x0709(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_98;                   // 0x070A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BCE[0x5];                                     // 0x070B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_Array_Get_Item_59;                        // 0x0710(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_99;                   // 0x0718(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BCF[0x3];                                     // 0x0719(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable;                                // 0x071C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BD0[0x4];                                     // 0x0724(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_Array_Get_Item_60;                        // 0x0728(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_100;                  // 0x0730(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BD1[0x7];                                     // 0x0731(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_Array_Get_Item_61;                        // 0x0738(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_101;                  // 0x0740(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BD2[0x7];                                     // 0x0741(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_Array_Get_Item_62;                        // 0x0748(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_1;                              // 0x0750(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_102;                  // 0x0758(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BD3[0x7];                                     // 0x0759(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_Array_Get_Item_63;                        // 0x0760(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_103;                  // 0x0768(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BD4[0x7];                                     // 0x0769(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_Array_Get_Item_64;                        // 0x0770(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_104;                  // 0x0778(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BD5[0x7];                                     // 0x0779(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_Array_Get_Item_65;                        // 0x0780(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_105;                  // 0x0788(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BD6[0x7];                                     // 0x0789(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	const class ULevelSequence*                   Temp_object_Variable_3;                            // 0x0790(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSCharacterBase*                       CallFunc_Array_Get_Item_66;                        // 0x0798(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x07A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_106;                  // 0x07A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BD7[0x6];                                     // 0x07A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_Array_Get_Item_67;                        // 0x07A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_107;                  // 0x07B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BD8[0x7];                                     // 0x07B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_Array_Get_Item_68;                        // 0x07B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_108;                  // 0x07C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BD9[0x7];                                     // 0x07C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_Array_Get_Item_69;                        // 0x07C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_109;                  // 0x07D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BDA[0x7];                                     // 0x07D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_Array_Get_Item_70;                        // 0x07D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_110;                  // 0x07E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BDB[0x7];                                     // 0x07E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_Array_Get_Item_71;                        // 0x07E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_111;                  // 0x07F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerID                                     Temp_byte_Variable;                                // 0x07F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_112;                  // 0x07F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x07F3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FName                                   K2Node_Select_Default;                             // 0x07F4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_113;                  // 0x07FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_114;                  // 0x07FD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BDC[0x2];                                     // 0x07FE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_Array_Get_Item_72;                        // 0x0800(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0808(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_PlayerInterface_C> K2Node_DynamicCast_AsBPI_Player_Interface;         // 0x0810(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_16;                    // 0x0820(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BDD[0x7];                                     // 0x0821(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_CustomEvent_Loaded_4;                       // 0x0828(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_WeaponBase_C*>               CallFunc_GetPlayerWeaponList_WeaponList;           // 0x0830(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue_1;              // 0x0840(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_PlayerInterface_C> K2Node_DynamicCast_AsBPI_Player_Interface_1;       // 0x0848(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_17;                    // 0x0858(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BDE[0x7];                                     // 0x0859(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_WeaponBase_C*                       CallFunc_Array_Get_Item_73;                        // 0x0860(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_WeaponBase_C*>               CallFunc_GetPlayerWeaponList_WeaponList_1;         // 0x0868(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class ABP_WeaponBase_C*                       CallFunc_Array_Get_Item_74;                        // 0x0878(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_115;                  // 0x0880(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BDF[0x7];                                     // 0x0881(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_Array_Get_Item_75;                        // 0x0888(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_116;                  // 0x0890(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BE0[0x7];                                     // 0x0891(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_Array_Get_Item_76;                        // 0x0898(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_117;                  // 0x08A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BE1[0x7];                                     // 0x08A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_Array_Get_Item_77;                        // 0x08A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_118;                  // 0x08B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_119;                  // 0x08B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_120;                  // 0x08B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_121;                  // 0x08B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x08B4(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_3BE2[0x4];                                     // 0x08C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x08C8(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_122;                  // 0x08D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_123;                  // 0x08D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BE3[0x6];                                     // 0x08D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 Temp_class_Variable;                               // 0x08D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSCharacterBase*                       CallFunc_Array_Get_Item_78;                        // 0x08E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsBP_Menu_Player_Base;     // 0x08E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x08F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BE4[0x7];                                     // 0x08F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_Array_Get_Item_79;                        // 0x08F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSCharacterBase*                       CallFunc_Array_Get_Item_80;                        // 0x0900(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSCharacterBase*                       CallFunc_Array_Get_Item_81;                        // 0x0908(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_124;                  // 0x0910(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_125;                  // 0x0911(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_126;                  // 0x0912(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_127;                  // 0x0913(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_128;                  // 0x0914(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_129;                  // 0x0915(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BE5[0x2];                                     // 0x0916(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_Array_Get_Item_82;                        // 0x0918(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_130;                  // 0x0920(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_131;                  // 0x0921(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_132;                  // 0x0922(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BE6[0x5];                                     // 0x0923(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_Array_Get_Item_83;                        // 0x0928(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_133;                  // 0x0930(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BE7[0x7];                                     // 0x0931(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_Array_Get_Item_84;                        // 0x0938(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_134;                  // 0x0940(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_135;                  // 0x0941(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_136;                  // 0x0942(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BE8[0x5];                                     // 0x0943(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_Array_Get_Item_85;                        // 0x0948(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_137;                  // 0x0950(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BE9[0x7];                                     // 0x0951(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_Array_Get_Item_86;                        // 0x0958(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_138;                  // 0x0960(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BEA[0x7];                                     // 0x0961(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Temp_object_Variable_4;                            // 0x0968(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_139;                  // 0x0970(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_140;                  // 0x0971(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BEB[0x6];                                     // 0x0972(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelSequence*                         K2Node_DynamicCast_AsLevel_Sequence_5;             // 0x0978(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_18;                    // 0x0980(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BEC[0x7];                                     // 0x0981(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattleEnemy_C*                       K2Node_DynamicCast_AsRSBattle_Enemy;               // 0x0988(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_19;                    // 0x0990(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BED[0x7];                                     // 0x0991(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue_2;              // 0x0998(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_CutinManager_C*                     CallFunc_GetCutinManager_CutinManager_4;           // 0x09A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_GetSkeletalMeshFromActor_ReturnValue;     // 0x09A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_141;                  // 0x09B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayingCurrentSequence_IsPlaying;       // 0x09B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_142;                  // 0x09B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BEE[0x5];                                     // 0x09B3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded_7;                       // 0x09B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_143;                  // 0x09C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_144;                  // 0x09C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BEF[0x6];                                     // 0x09C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_Array_Get_Item_87;                        // 0x09C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IRSUniqueIdInterface>  CallFunc_GetUniqueName_self_CastInput;             // 0x09D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FName                                   CallFunc_GetUniqueName_ReturnValue;                // 0x09E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x09E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchString_CmpSuccess;                    // 0x09F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BF0[0x3];                                     // 0x09F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x09FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetENPCBrainCrashType_IsENPC;             // 0x0A00(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetENPCBrainCrashType_IsKill;             // 0x0A01(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetENPCBrainCrashType_IsSolo;             // 0x0A02(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetENPCBrainCrashType_IsENPC_1;           // 0x0A03(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetENPCBrainCrashType_IsKill_1;           // 0x0A04(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetENPCBrainCrashType_IsSolo_1;           // 0x0A05(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BF1[0x2];                                     // 0x0A06(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0A08(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BF2[0x4];                                     // 0x0A0C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_CutinManager_C*                     CallFunc_GetCutinManager_CutinManager_5;           // 0x0A10(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_145;                  // 0x0A18(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BF3[0x7];                                     // 0x0A19(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue_1;          // 0x0A20(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_146;                  // 0x0A28(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_147;                  // 0x0A29(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0A2A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_5;                // 0x0A2B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BF4[0x4];                                     // 0x0A2C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_CutinManager_C*                     CallFunc_GetCutinManager_CutinManager_6;           // 0x0A30(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_5;                            // 0x0A38(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_148;                  // 0x0A40(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_149;                  // 0x0A41(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BF5[0x6];                                     // 0x0A42(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelSequence*                         K2Node_DynamicCast_AsLevel_Sequence_6;             // 0x0A48(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_20;                    // 0x0A50(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BF6[0x7];                                     // 0x0A51(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue_2;          // 0x0A58(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_150;                  // 0x0A60(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_151;                  // 0x0A61(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CancelSequencerMarkPause_Successsed;      // 0x0A62(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BF7[0x1];                                     // 0x0A63(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0A64(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0A68(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BF8[0x3];                                     // 0x0A69(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0A6C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_7;                 // 0x0A70(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BF9[0x7];                                     // 0x0A71(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSLevelSequenceActor*                  CallFunc_GetCurrentSequencer_Sequencer;            // 0x0A78(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_CrashVisionIndex;               // 0x0A80(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_PlayerIndex;                    // 0x0A84(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattleCharacter_C*                   K2Node_CustomEvent_TargetEnemy;                    // 0x0A88(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_152;                  // 0x0A90(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BFA[0x7];                                     // 0x0A91(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class ULevelSequence>          CallFunc_CV_GetEnemySequencer_Sequencer;           // 0x0A98(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue_3; // 0x0AC0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0AC1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0AC2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue_1;             // 0x0AC3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue_1;              // 0x0AC4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0AC5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0AC6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x0AC7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_3;          // 0x0AC8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0AC9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BFB[0x2];                                     // 0x0ACA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0ACC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0AD0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0AD4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0AD8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x0ADC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x0AE0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BFC[0x4];                                     // 0x0AE4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded_8;                       // 0x0AE8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_153;                  // 0x0AF0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BFD[0x7];                                     // 0x0AF1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0AF8(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0B08(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BFE[0x4];                                     // 0x0B0C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFCrashVisionCharaInfo                 CallFunc_GetDataTableRowFromName_OutRow;           // 0x0B10(0x0030)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0B40(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BFF[0x7];                                     // 0x0B41(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Temp_object_Variable_6;                            // 0x0B48(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_154;                  // 0x0B50(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C00[0x7];                                     // 0x0B51(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelSequence*                         K2Node_DynamicCast_AsLevel_Sequence_7;             // 0x0B58(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_21;                    // 0x0B60(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C01[0x3];                                     // 0x0B61(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_Time_Dilation;                  // 0x0B64(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                K2Node_CustomEvent_Loaded_9;                       // 0x0B68(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0B70(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0BA0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_MenuPlayerBase_C*                   CallFunc_FinishSpawningActor_ReturnValue;          // 0x0BA8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0BB0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C02[0x7];                                     // 0x0BB1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftClassPtr<class UClass>                   CallFunc_Array_Get_Item_88;                        // 0x0BB8(0x0028)(HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_7;                            // 0x0BE0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_MenuPlayerBase_C*                   CallFunc_Array_Get_Item_89;                        // 0x0BE8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          K2Node_DynamicCast_AsSkeletal_Mesh;                // 0x0BF0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_22;                    // 0x0BF8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_155;                  // 0x0BF9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C03[0x6];                                     // 0x0BFA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded;                         // 0x0C00(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerID                                     Temp_byte_Variable_1;                              // 0x0C08(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C04[0x7];                                     // 0x0C09(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_MenuPlayerBase_C*                   CallFunc_Array_Get_Item_90;                        // 0x0C10(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0C18(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C05[0x7];                                     // 0x0C19(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_EnemyManager_C*                     CallFunc_GetEnemyManager_Manager_3;                // 0x0C20(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_156;                  // 0x0C28(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C06[0x7];                                     // 0x0C29(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Temp_object_Variable_8;                            // 0x0C30(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          K2Node_DynamicCast_AsSkeletal_Mesh_1;              // 0x0C38(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_23;                    // 0x0C40(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C07[0x7];                                     // 0x0C41(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_EnemyManager_C*                     CallFunc_GetEnemyManager_Manager_4;                // 0x0C48(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_157;                  // 0x0C50(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C08[0x7];                                     // 0x0C51(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftClassPtr<class UClass>                   CallFunc_Array_Get_Item_91;                        // 0x0C58(0x0028)(HasGetValueTypeHash)
	class UObject*                                K2Node_CustomEvent_Loaded_1;                       // 0x0C80(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_3;            // 0x0C88(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_4;            // 0x0C98(0x0010)(ZeroConstructor, NoDestructor)
	const class ULevelSequence*                   Temp_object_Variable_9;                            // 0x0CA8(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_10;                           // 0x0CB0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                K2Node_CustomEvent_Loaded_2;                       // 0x0CB8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequence*                         K2Node_DynamicCast_AsLevel_Sequence_8;             // 0x0CC0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_24;                    // 0x0CC8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_158;                  // 0x0CC9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C09[0x6];                                     // 0x0CCA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_MenuPlayerBase_C*                   CallFunc_Array_Get_Item_92;                        // 0x0CD0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_159;                  // 0x0CD8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C0A[0x7];                                     // 0x0CD9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_MenuPlayerBase_C*                   CallFunc_Array_Get_Item_93;                        // 0x0CE0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_EnemyManager_C*                     CallFunc_GetEnemyManager_Manager_5;                // 0x0CE8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class ABP_MenuPlayerBase_C*             Temp_object_Variable_11;                           // 0x0CF0(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_160;                  // 0x0CF8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckUseCutin_ReturnValue;                // 0x0CF9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C0B[0x2];                                     // 0x0CFA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_5;            // 0x0CFC(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_3C0C[0x4];                                     // 0x0D0C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x0D10(0x0030)(IsPlainOldData, NoDestructor)
	class UClass*                                 Temp_class_Variable_1;                             // 0x0D40(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsBP_Menu_Player_Base_1;   // 0x0D48(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess_1;                // 0x0D50(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C0D[0x7];                                     // 0x0D51(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1; // 0x0D58(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue_4; // 0x0D60(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C0E[0x7];                                     // 0x0D61(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_MenuPlayerBase_C*                   CallFunc_FinishSpawningActor_ReturnValue_1;        // 0x0D68(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSLevelSequenceActor*                  CallFunc_GetCurrentEnemySequencer_Sequencer;       // 0x0D70(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_161;                  // 0x0D78(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C0F[0x7];                                     // 0x0D79(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSLevelSequenceActor*                  CallFunc_GetCurrentSubSequencer_SubSequencer;      // 0x0D80(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_CustomEvent_Loaded_3;                       // 0x0D88(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_162;                  // 0x0D90(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C10[0x3];                                     // 0x0D91(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetAcceleratorStencil_Stencil;            // 0x0D94(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSeeThroughStencil_Stencil;             // 0x0D98(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0D9C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C11[0x3];                                     // 0x0D9D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Or_IntInt_ReturnValue;                    // 0x0DA0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetAcceleratorStencil_Stencil_1;          // 0x0DA4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSeeThroughStencil_Stencil_1;           // 0x0DA8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Or_IntInt_ReturnValue_1;                  // 0x0DAC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             K2Node_CustomEvent_OffsetTransform;                // 0x0DB0(0x0030)(IsPlainOldData, NoDestructor)
	class FName                                   K2Node_CustomEvent_AttachPointName;                // 0x0DE0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_163;                  // 0x0DE8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C12[0x3];                                     // 0x0DE9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(TSubclassOf<class UObject> Loaded)> K2Node_CreateDelegate_OutputDelegate_6;            // 0x0DEC(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_164;                  // 0x0DFC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_165;                  // 0x0DFD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_1;            // 0x0DFE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_166;                  // 0x0DFF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_167;                  // 0x0E00(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_168;                  // 0x0E01(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_169;                  // 0x0E02(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C13[0x1];                                     // 0x0E03(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(TSubclassOf<class UObject> Loaded)> K2Node_CreateDelegate_OutputDelegate_7;            // 0x0E04(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_170;                  // 0x0E14(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_171;                  // 0x0E15(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_172;                  // 0x0E16(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C14[0x1];                                     // 0x0E17(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_8;            // 0x0E18(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_173;                  // 0x0E28(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_174;                  // 0x0E29(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_175;                  // 0x0E2A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C15[0x1];                                     // 0x0E2B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_9;            // 0x0E2C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_3C16[0x4];                                     // 0x0E3C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_EnemyInterface_C> K2Node_DynamicCast_AsBPI_Enemy_Interface_2;        // 0x0E40(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_25;                    // 0x0E50(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_em8300_DeadBattleSimulator_Dummy;         // 0x0E51(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_176;                  // 0x0E52(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_177;                  // 0x0E53(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_178;                  // 0x0E54(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C17[0x3];                                     // 0x0E55(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_10;           // 0x0E58(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_179;                  // 0x0E68(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_180;                  // 0x0E69(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C18[0x6];                                     // 0x0E6A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerManager*                         CallFunc_GetPlayerManager_PlayerManager_2;         // 0x0E70(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_11;           // 0x0E78(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_181;                  // 0x0E88(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C19[0x7];                                     // 0x0E89(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_GetBattleMemberActorFromKind_ReturnValue; // 0x0E90(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IPlayerInterface>      K2Node_DynamicCast_AsPlayer_Interface_2;           // 0x0E98(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_26;                    // 0x0EA8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C1A[0x3];                                     // 0x0EA9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_12;           // 0x0EAC(0x0010)(ZeroConstructor, NoDestructor)
	EPlayerID                                     CallFunc_GetPlayerID_ReturnValue_1;                // 0x0EBC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C1B[0x3];                                     // 0x0EBD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	const class ABP_MenuPlayerBase_C*             Temp_object_Variable_12;                           // 0x0EC0(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_182;                  // 0x0EC8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_183;                  // 0x0EC9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C1C[0x6];                                     // 0x0ECA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_Array_Get_Item_94;                        // 0x0ED0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_184;                  // 0x0ED8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_185;                  // 0x0ED9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_186;                  // 0x0EDA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C1D[0x5];                                     // 0x0EDB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager_3;         // 0x0EE0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSCharacterBase*                       CallFunc_GetPlayer_ReturnValue_2;                  // 0x0EE8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IEventInterface>       K2Node_DynamicCast_AsEvent_Interface;              // 0x0EF0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_27;                    // 0x0F00(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_187;                  // 0x0F01(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager) == 0x000010, "Wrong alignment on BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager");
static_assert(sizeof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager) == 0x000F10, "Wrong size on BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, EntryPoint) == 0x000000, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_1) == 0x000005, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_Not_PreBool_ReturnValue) == 0x000006, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_Not_PreBool_ReturnValue_1) == 0x000007, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_2) == 0x000008, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, K2Node_CustomEvent_Damage) == 0x000009, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::K2Node_CustomEvent_Damage' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, K2Node_CustomEvent_KillSolo) == 0x00000A, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::K2Node_CustomEvent_KillSolo' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, K2Node_CustomEvent_KillMulti) == 0x00000B, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::K2Node_CustomEvent_KillMulti' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, K2Node_CustomEvent_LoadEm8220) == 0x00000C, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::K2Node_CustomEvent_LoadEm8220' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, K2Node_CustomEvent_ASyncLoading) == 0x00000D, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::K2Node_CustomEvent_ASyncLoading' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_Not_PreBool_ReturnValue_2) == 0x00000E, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_BooleanAND_ReturnValue) == 0x00000F, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_PrivateGetENPCLoadSequenceAssets_Damage) == 0x000010, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_PrivateGetENPCLoadSequenceAssets_Damage' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_PrivateGetENPCLoadSequenceAssets_KillSolo) == 0x000038, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_PrivateGetENPCLoadSequenceAssets_KillSolo' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_PrivateGetENPCLoadSequenceAssets_KillMulti) == 0x000060, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_PrivateGetENPCLoadSequenceAssets_KillMulti' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_BooleanAND_ReturnValue_1) == 0x000088, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_LoadSoftObject_ReturnValue) == 0x000090, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_LoadSoftObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000098, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_3) == 0x000099, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_BooleanAND_ReturnValue_2) == 0x00009A, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, K2Node_DynamicCast_AsLevel_Sequence) == 0x0000A0, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::K2Node_DynamicCast_AsLevel_Sequence' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, K2Node_DynamicCast_bSuccess) == 0x0000A8, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_LoadSoftObject_ReturnValue_1) == 0x0000B0, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_LoadSoftObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_4) == 0x0000B8, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, K2Node_DynamicCast_AsLevel_Sequence_1) == 0x0000C0, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::K2Node_DynamicCast_AsLevel_Sequence_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, K2Node_DynamicCast_bSuccess_1) == 0x0000C8, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValidSoftObjectReference_ReturnValue_1) == 0x0000C9, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValidSoftObjectReference_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_LoadSoftObject_ReturnValue_2) == 0x0000D0, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_LoadSoftObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_BooleanAND_ReturnValue_3) == 0x0000D8, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_5) == 0x0000D9, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, K2Node_DynamicCast_AsLevel_Sequence_2) == 0x0000E0, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::K2Node_DynamicCast_AsLevel_Sequence_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, K2Node_DynamicCast_bSuccess_2) == 0x0000E8, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValidSoftObjectReference_ReturnValue_2) == 0x0000E9, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValidSoftObjectReference_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_BooleanAND_ReturnValue_4) == 0x0000EA, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_BooleanAND_ReturnValue_5) == 0x0000EB, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, K2Node_Event_DeltaSeconds) == 0x0000EC, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_GetCutinManager_CutinManager) == 0x0000F0, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_GetCutinManager_CutinManager' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_6) == 0x0000F8, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_GetSequencePlayer_ReturnValue) == 0x000100, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_GetSequencePlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_7) == 0x000108, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_SetSequencerMarkPause_Successsed) == 0x000109, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_SetSequencerMarkPause_Successsed' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_SetSequencerMarkPause_SequencerFullTime) == 0x00010C, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_SetSequencerMarkPause_SequencerFullTime' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_8) == 0x00011C, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_GetCutinManager_CutinManager_1) == 0x000120, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_GetCutinManager_CutinManager_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_9) == 0x000128, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_10) == 0x000129, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_GetCutinManager_CutinManager_2) == 0x000130, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_GetCutinManager_CutinManager_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_11) == 0x000138, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_12) == 0x000139, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_PrivateCheckBrainFieldOverwrite_Overwrite) == 0x00013A, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_PrivateCheckBrainFieldOverwrite_Overwrite' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_GetPlayerManager_PlayerManager) == 0x000140, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000148, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_GetPlayer_ReturnValue) == 0x000150, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_GetPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_GetGameSystemManager_Manager) == 0x000158, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_GetGameSystemManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_GetEnemyManager_Manager) == 0x000160, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_GetEnemyManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_13) == 0x000168, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, K2Node_DynamicCast_AsBPI_Brain_Crash) == 0x000170, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::K2Node_DynamicCast_AsBPI_Brain_Crash' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, K2Node_DynamicCast_bSuccess_3) == 0x000180, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_14) == 0x000181, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_Array_Get_Item) == 0x000188, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_Array_Length_ReturnValue) == 0x000190, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_Greater_IntInt_ReturnValue) == 0x000194, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_RemoveGlobalCustomTimeDilation_Success) == 0x000195, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_RemoveGlobalCustomTimeDilation_Success' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_GetEnemyManager_Manager_1) == 0x000198, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_GetEnemyManager_Manager_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_GetEnemyManager_Manager_2) == 0x0001A0, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_GetEnemyManager_Manager_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, K2Node_DynamicCast_AsBPI_Brain_Crash_1) == 0x0001A8, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::K2Node_DynamicCast_AsBPI_Brain_Crash_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, K2Node_DynamicCast_bSuccess_4) == 0x0001B8, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, K2Node_DynamicCast_AsBPI_Brain_Crash_2) == 0x0001C0, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::K2Node_DynamicCast_AsBPI_Brain_Crash_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, K2Node_DynamicCast_bSuccess_5) == 0x0001D0, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_15) == 0x0001D1, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_16) == 0x0001D2, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_GetGameSystemManager_Manager_1) == 0x0001D8, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_GetGameSystemManager_Manager_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_GetBrainFieldManager_Manager) == 0x0001E0, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_GetBrainFieldManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_GetCurrentCustomTimeDilation_CustomTimeDilation) == 0x0001E8, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_GetCurrentCustomTimeDilation_CustomTimeDilation' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_GetBrainFieldUser_User) == 0x0001F0, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_GetBrainFieldUser_User' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0001F8, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, K2Node_DynamicCast_AsPlayer_Interface) == 0x000200, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::K2Node_DynamicCast_AsPlayer_Interface' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, K2Node_DynamicCast_bSuccess_6) == 0x000210, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_GetHUDMainGame_HUDMainGame) == 0x000218, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_GetHUDMainGame_HUDMainGame' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsInputOverwriteENPCBrainField_ReturnValue) == 0x000220, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsInputOverwriteENPCBrainField_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_Is_Players_Brain_Field_Return_Value) == 0x000221, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_Is_Players_Brain_Field_Return_Value' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_17) == 0x000222, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, K2Node_DynamicCast_AsUi_Menu_Battle_Control) == 0x000228, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::K2Node_DynamicCast_AsUi_Menu_Battle_Control' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, K2Node_DynamicCast_bSuccess_7) == 0x000230, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_GetGameMode_ReturnValue) == 0x000238, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, K2Node_DynamicCast_AsRSGame_Mode_BPInterface) == 0x000240, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::K2Node_DynamicCast_AsRSGame_Mode_BPInterface' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, K2Node_DynamicCast_bSuccess_8) == 0x000250, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_GetMainPlayerBP_Player) == 0x000258, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_GetMainPlayerBP_Player' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, K2Node_DynamicCast_AsBPI_Brain_Crash_3) == 0x000260, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::K2Node_DynamicCast_AsBPI_Brain_Crash_3' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, K2Node_DynamicCast_bSuccess_9) == 0x000270, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::K2Node_DynamicCast_bSuccess_9' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_18) == 0x000271, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, K2Node_CustomEvent_Enable) == 0x000272, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::K2Node_CustomEvent_Enable' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_GetGameSystemManager_Manager_2) == 0x000278, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_GetGameSystemManager_Manager_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_19) == 0x000280, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_RemoveGlobalCustomTimeDilation_Success_1) == 0x000281, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_RemoveGlobalCustomTimeDilation_Success_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsPlaySimulate_ReturnValue) == 0x000282, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsPlaySimulate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000284, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_GetBrainCrashManager_Manager) == 0x000288, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_GetBrainCrashManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000290, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, K2Node_CustomEvent_Time_Dilation_1) == 0x000294, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::K2Node_CustomEvent_Time_Dilation_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_SetGlobalCustomTimeDilation_CurrentCustomTimeDilation) == 0x000298, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_SetGlobalCustomTimeDilation_CurrentCustomTimeDilation' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x00029C, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_SetGlobalCustomTimeDilation_CurrentCustomTimeDilation_1) == 0x0002A0, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_SetGlobalCustomTimeDilation_CurrentCustomTimeDilation_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_GetPlayerManager_PlayerManager_1) == 0x0002A8, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_GetPlayerManager_PlayerManager_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_20) == 0x0002B0, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_GetPlayer_ReturnValue_1) == 0x0002B8, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_GetPlayer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, K2Node_DynamicCast_AsPlayer_Interface_1) == 0x0002C0, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::K2Node_DynamicCast_AsPlayer_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, K2Node_DynamicCast_bSuccess_10) == 0x0002D0, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::K2Node_DynamicCast_bSuccess_10' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_21) == 0x0002D1, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_GetPlayerID_ReturnValue) == 0x0002D2, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_GetPlayerID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_GetHUDMainGame_HUDMainGame_1) == 0x0002D8, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_GetHUDMainGame_HUDMainGame_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_22) == 0x0002E0, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, K2Node_DynamicCast_AsUi_Menu_Battle_Control_1) == 0x0002E8, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::K2Node_DynamicCast_AsUi_Menu_Battle_Control_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, K2Node_DynamicCast_bSuccess_11) == 0x0002F0, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::K2Node_DynamicCast_bSuccess_11' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0002F1, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_GetCutinManager_CutinManager_3) == 0x0002F8, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_GetCutinManager_CutinManager_3' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_GetGameSystemManager_Manager_3) == 0x000300, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_GetGameSystemManager_Manager_3' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_23) == 0x000308, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_GetCurrentCustomTimeDilation_CustomTimeDilation_1) == 0x00030C, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_GetCurrentCustomTimeDilation_CustomTimeDilation_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_Divide_FloatFloat_ReturnValue_2) == 0x000310, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_Divide_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_24) == 0x000314, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_Array_Get_Item_1) == 0x000318, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_Array_Get_Item_2) == 0x000320, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_Array_Get_Item_3) == 0x000328, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_Array_Get_Item_4) == 0x000330, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_Array_Get_Item_5) == 0x000338, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_Array_Get_Item_6) == 0x000340, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_Array_Get_Item_6' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_25) == 0x000348, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_25' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_26) == 0x000349, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_26' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_27) == 0x00034A, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_27' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_28) == 0x00034B, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_28' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_29) == 0x00034C, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_29' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_30) == 0x00034D, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_30' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_Array_Get_Item_7) == 0x000350, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_Array_Get_Item_7' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_31) == 0x000358, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_31' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_Array_Get_Item_8) == 0x000360, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_Array_Get_Item_8' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_32) == 0x000368, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_32' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_Array_Get_Item_9) == 0x000370, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_Array_Get_Item_9' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_33) == 0x000378, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_33' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_Array_Get_Item_10) == 0x000380, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_Array_Get_Item_10' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_34) == 0x000388, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_34' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_Array_Get_Item_11) == 0x000390, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_Array_Get_Item_11' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_35) == 0x000398, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_35' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_Array_Get_Item_12) == 0x0003A0, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_Array_Get_Item_12' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_36) == 0x0003A8, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_36' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_Array_Get_Item_13) == 0x0003B0, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_Array_Get_Item_13' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_37) == 0x0003B8, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_37' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_Array_Get_Item_14) == 0x0003C0, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_Array_Get_Item_14' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_38) == 0x0003C8, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_38' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_Array_Get_Item_15) == 0x0003D0, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_Array_Get_Item_15' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_39) == 0x0003D8, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_39' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_Array_Get_Item_16) == 0x0003E0, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_Array_Get_Item_16' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_40) == 0x0003E8, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_40' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_Array_Get_Item_17) == 0x0003F0, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_Array_Get_Item_17' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_41) == 0x0003F8, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_41' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_Array_Get_Item_18) == 0x000400, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_Array_Get_Item_18' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_42) == 0x000408, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_42' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_43) == 0x000409, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_43' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_Array_Get_Item_19) == 0x000410, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_Array_Get_Item_19' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_44) == 0x000418, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_44' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, K2Node_DynamicCast_AsBPI_Enemy_Interface) == 0x000420, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::K2Node_DynamicCast_AsBPI_Enemy_Interface' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, K2Node_DynamicCast_bSuccess_12) == 0x000430, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::K2Node_DynamicCast_bSuccess_12' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsBossEnemy_bBoss) == 0x000431, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsBossEnemy_bBoss' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_Array_Get_Item_20) == 0x000438, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_Array_Get_Item_20' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_45) == 0x000440, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_45' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_Array_Get_Item_21) == 0x000448, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_Array_Get_Item_21' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_46) == 0x000450, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_46' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, K2Node_CreateDelegate_OutputDelegate) == 0x000454, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_Array_Get_Item_22) == 0x000468, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_Array_Get_Item_22' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_47) == 0x000470, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_47' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_48) == 0x000471, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_48' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_49) == 0x000472, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_49' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_Array_Get_Item_23) == 0x000478, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_Array_Get_Item_23' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_50) == 0x000480, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_50' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_Array_Get_Item_24) == 0x000488, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_Array_Get_Item_24' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_51) == 0x000490, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_51' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_Array_Get_Item_25) == 0x000498, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_Array_Get_Item_25' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_52) == 0x0004A0, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_52' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_Array_Get_Item_26) == 0x0004A8, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_Array_Get_Item_26' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_53) == 0x0004B0, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_53' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_54) == 0x0004B1, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_54' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_55) == 0x0004B2, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_55' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, K2Node_DynamicCast_AsBPI_Enemy_Interface_1) == 0x0004B8, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::K2Node_DynamicCast_AsBPI_Enemy_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, K2Node_DynamicCast_bSuccess_13) == 0x0004C8, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::K2Node_DynamicCast_bSuccess_13' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsBossEnemy_bBoss_1) == 0x0004C9, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsBossEnemy_bBoss_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_Not_PreBool_ReturnValue_3) == 0x0004CA, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_Not_PreBool_ReturnValue_4) == 0x0004CB, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_BooleanAND_ReturnValue_6) == 0x0004CC, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_BooleanAND_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_56) == 0x0004CD, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_56' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_Array_Get_Item_27) == 0x0004D0, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_Array_Get_Item_27' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_57) == 0x0004D8, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_57' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_Array_Get_Item_28) == 0x0004E0, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_Array_Get_Item_28' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_58) == 0x0004E8, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_58' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_Array_Get_Item_29) == 0x0004F0, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_Array_Get_Item_29' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_59) == 0x0004F8, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_59' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_Array_Get_Item_30) == 0x000500, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_Array_Get_Item_30' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_60) == 0x000508, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_60' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_Array_Get_Item_31) == 0x000510, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_Array_Get_Item_31' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_61) == 0x000518, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_61' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_Array_Get_Item_32) == 0x000520, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_Array_Get_Item_32' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_62) == 0x000528, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_62' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_Array_Get_Item_33) == 0x000530, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_Array_Get_Item_33' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_63) == 0x000538, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_63' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_Array_Get_Item_34) == 0x000540, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_Array_Get_Item_34' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, K2Node_CustomEvent_Loaded_6) == 0x000548, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::K2Node_CustomEvent_Loaded_6' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_64) == 0x000550, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_64' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_Array_Get_Item_35) == 0x000558, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_Array_Get_Item_35' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_65) == 0x000560, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_65' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_Array_Get_Item_36) == 0x000568, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_Array_Get_Item_36' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_Array_Get_Item_37) == 0x000570, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_Array_Get_Item_37' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_66) == 0x000578, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_66' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_67) == 0x000579, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_67' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_68) == 0x00057A, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_68' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_Array_Get_Item_38) == 0x000580, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_Array_Get_Item_38' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, Temp_object_Variable) == 0x000588, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, K2Node_DynamicCast_AsLevel_Sequence_3) == 0x000590, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::K2Node_DynamicCast_AsLevel_Sequence_3' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, K2Node_DynamicCast_bSuccess_14) == 0x000598, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::K2Node_DynamicCast_bSuccess_14' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_69) == 0x000599, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_69' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_70) == 0x00059A, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_70' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_71) == 0x00059B, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_71' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_Array_Get_Item_39) == 0x0005A0, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_Array_Get_Item_39' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_72) == 0x0005A8, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_72' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_73) == 0x0005A9, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_73' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_Array_Get_Item_40) == 0x0005B0, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_Array_Get_Item_40' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_74) == 0x0005B8, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_74' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_Array_Get_Item_41) == 0x0005C0, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_Array_Get_Item_41' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_75) == 0x0005C8, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_75' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_76) == 0x0005C9, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_76' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_77) == 0x0005CA, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_77' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_Array_Get_Item_42) == 0x0005D0, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_Array_Get_Item_42' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_78) == 0x0005D8, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_78' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_79) == 0x0005D9, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_79' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_Array_Get_Item_43) == 0x0005E0, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_Array_Get_Item_43' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_80) == 0x0005E8, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_80' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_Array_Get_Item_44) == 0x0005F0, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_Array_Get_Item_44' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_81) == 0x0005F8, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_81' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_Array_Get_Item_45) == 0x000600, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_Array_Get_Item_45' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_82) == 0x000608, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_82' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_Array_Get_Item_46) == 0x000610, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_Array_Get_Item_46' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_83) == 0x000618, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_83' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_Array_Get_Item_47) == 0x000620, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_Array_Get_Item_47' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_84) == 0x000628, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_84' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_Array_Get_Item_48) == 0x000630, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_Array_Get_Item_48' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_85) == 0x000638, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_85' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_86) == 0x000639, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_86' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_87) == 0x00063A, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_87' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_Array_Get_Item_49) == 0x000640, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_Array_Get_Item_49' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, Temp_object_Variable_1) == 0x000648, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_88) == 0x000650, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_88' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_89) == 0x000651, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_89' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, K2Node_CustomEvent_Loaded_5) == 0x000658, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::K2Node_CustomEvent_Loaded_5' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_Array_Get_Item_50) == 0x000660, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_Array_Get_Item_50' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_Array_Get_Item_51) == 0x000668, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_Array_Get_Item_51' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_90) == 0x000670, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_90' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_Array_Get_Item_52) == 0x000678, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_Array_Get_Item_52' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_91) == 0x000680, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_91' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_Array_Get_Item_53) == 0x000688, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_Array_Get_Item_53' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_92) == 0x000690, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_92' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_Array_Get_Item_54) == 0x000698, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_Array_Get_Item_54' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, K2Node_CreateDelegate_OutputDelegate_1) == 0x0006A0, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x0006B0, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_93) == 0x0006B8, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_93' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_Array_Get_Item_55) == 0x0006C0, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_Array_Get_Item_55' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_94) == 0x0006C8, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_94' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_Array_Get_Item_56) == 0x0006D0, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_Array_Get_Item_56' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_95) == 0x0006D8, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_95' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_Array_Get_Item_57) == 0x0006E0, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_Array_Get_Item_57' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_96) == 0x0006E8, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_96' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, Temp_object_Variable_2) == 0x0006F0, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_Array_Get_Item_58) == 0x0006F8, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_Array_Get_Item_58' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, K2Node_DynamicCast_AsLevel_Sequence_4) == 0x000700, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::K2Node_DynamicCast_AsLevel_Sequence_4' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, K2Node_DynamicCast_bSuccess_15) == 0x000708, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::K2Node_DynamicCast_bSuccess_15' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_97) == 0x000709, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_97' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_98) == 0x00070A, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_98' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_Array_Get_Item_59) == 0x000710, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_Array_Get_Item_59' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_99) == 0x000718, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_99' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, Temp_name_Variable) == 0x00071C, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_Array_Get_Item_60) == 0x000728, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_Array_Get_Item_60' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_100) == 0x000730, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_100' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_Array_Get_Item_61) == 0x000738, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_Array_Get_Item_61' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_101) == 0x000740, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_101' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_Array_Get_Item_62) == 0x000748, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_Array_Get_Item_62' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, Temp_name_Variable_1) == 0x000750, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_102) == 0x000758, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_102' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_Array_Get_Item_63) == 0x000760, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_Array_Get_Item_63' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_103) == 0x000768, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_103' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_Array_Get_Item_64) == 0x000770, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_Array_Get_Item_64' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_104) == 0x000778, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_104' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_Array_Get_Item_65) == 0x000780, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_Array_Get_Item_65' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_105) == 0x000788, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_105' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, Temp_object_Variable_3) == 0x000790, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_Array_Get_Item_66) == 0x000798, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_Array_Get_Item_66' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, Temp_bool_Variable) == 0x0007A0, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_106) == 0x0007A1, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_106' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_Array_Get_Item_67) == 0x0007A8, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_Array_Get_Item_67' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_107) == 0x0007B0, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_107' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_Array_Get_Item_68) == 0x0007B8, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_Array_Get_Item_68' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_108) == 0x0007C0, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_108' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_Array_Get_Item_69) == 0x0007C8, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_Array_Get_Item_69' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_109) == 0x0007D0, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_109' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_Array_Get_Item_70) == 0x0007D8, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_Array_Get_Item_70' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_110) == 0x0007E0, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_110' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_Array_Get_Item_71) == 0x0007E8, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_Array_Get_Item_71' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_111) == 0x0007F0, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_111' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, Temp_byte_Variable) == 0x0007F1, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_112) == 0x0007F2, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_112' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0007F3, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, K2Node_Select_Default) == 0x0007F4, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_113) == 0x0007FC, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_113' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_114) == 0x0007FD, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_114' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_Array_Get_Item_72) == 0x000800, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_Array_Get_Item_72' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_GetPlayerPawn_ReturnValue) == 0x000808, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, K2Node_DynamicCast_AsBPI_Player_Interface) == 0x000810, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::K2Node_DynamicCast_AsBPI_Player_Interface' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, K2Node_DynamicCast_bSuccess_16) == 0x000820, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::K2Node_DynamicCast_bSuccess_16' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, K2Node_CustomEvent_Loaded_4) == 0x000828, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::K2Node_CustomEvent_Loaded_4' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_GetPlayerWeaponList_WeaponList) == 0x000830, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_GetPlayerWeaponList_WeaponList' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_GetPlayerPawn_ReturnValue_1) == 0x000840, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_GetPlayerPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, K2Node_DynamicCast_AsBPI_Player_Interface_1) == 0x000848, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::K2Node_DynamicCast_AsBPI_Player_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, K2Node_DynamicCast_bSuccess_17) == 0x000858, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::K2Node_DynamicCast_bSuccess_17' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_Array_Get_Item_73) == 0x000860, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_Array_Get_Item_73' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_GetPlayerWeaponList_WeaponList_1) == 0x000868, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_GetPlayerWeaponList_WeaponList_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_Array_Get_Item_74) == 0x000878, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_Array_Get_Item_74' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_115) == 0x000880, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_115' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_Array_Get_Item_75) == 0x000888, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_Array_Get_Item_75' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_116) == 0x000890, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_116' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_Array_Get_Item_76) == 0x000898, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_Array_Get_Item_76' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_117) == 0x0008A0, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_117' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_Array_Get_Item_77) == 0x0008A8, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_Array_Get_Item_77' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_118) == 0x0008B0, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_118' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_119) == 0x0008B1, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_119' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_120) == 0x0008B2, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_120' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_121) == 0x0008B3, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_121' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, K2Node_CreateDelegate_OutputDelegate_2) == 0x0008B4, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x0008C8, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_122) == 0x0008D0, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_122' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_123) == 0x0008D1, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_123' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, Temp_class_Variable) == 0x0008D8, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::Temp_class_Variable' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_Array_Get_Item_78) == 0x0008E0, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_Array_Get_Item_78' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, K2Node_ClassDynamicCast_AsBP_Menu_Player_Base) == 0x0008E8, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::K2Node_ClassDynamicCast_AsBP_Menu_Player_Base' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, K2Node_ClassDynamicCast_bSuccess) == 0x0008F0, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_Array_Get_Item_79) == 0x0008F8, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_Array_Get_Item_79' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_Array_Get_Item_80) == 0x000900, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_Array_Get_Item_80' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_Array_Get_Item_81) == 0x000908, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_Array_Get_Item_81' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_124) == 0x000910, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_124' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_125) == 0x000911, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_125' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_126) == 0x000912, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_126' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_127) == 0x000913, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_127' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_128) == 0x000914, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_128' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_129) == 0x000915, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_129' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_Array_Get_Item_82) == 0x000918, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_Array_Get_Item_82' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_130) == 0x000920, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_130' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_131) == 0x000921, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_131' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_132) == 0x000922, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_132' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_Array_Get_Item_83) == 0x000928, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_Array_Get_Item_83' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_133) == 0x000930, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_133' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_Array_Get_Item_84) == 0x000938, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_Array_Get_Item_84' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_134) == 0x000940, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_134' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_135) == 0x000941, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_135' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_136) == 0x000942, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_136' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_Array_Get_Item_85) == 0x000948, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_Array_Get_Item_85' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_137) == 0x000950, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_137' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_Array_Get_Item_86) == 0x000958, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_Array_Get_Item_86' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_138) == 0x000960, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_138' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, Temp_object_Variable_4) == 0x000968, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_139) == 0x000970, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_139' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_140) == 0x000971, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_140' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, K2Node_DynamicCast_AsLevel_Sequence_5) == 0x000978, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::K2Node_DynamicCast_AsLevel_Sequence_5' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, K2Node_DynamicCast_bSuccess_18) == 0x000980, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::K2Node_DynamicCast_bSuccess_18' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, K2Node_DynamicCast_AsRSBattle_Enemy) == 0x000988, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::K2Node_DynamicCast_AsRSBattle_Enemy' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, K2Node_DynamicCast_bSuccess_19) == 0x000990, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::K2Node_DynamicCast_bSuccess_19' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_GetPlayerPawn_ReturnValue_2) == 0x000998, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_GetPlayerPawn_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_GetCutinManager_CutinManager_4) == 0x0009A0, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_GetCutinManager_CutinManager_4' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_GetSkeletalMeshFromActor_ReturnValue) == 0x0009A8, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_GetSkeletalMeshFromActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_141) == 0x0009B0, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_141' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsPlayingCurrentSequence_IsPlaying) == 0x0009B1, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsPlayingCurrentSequence_IsPlaying' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_142) == 0x0009B2, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_142' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, K2Node_CustomEvent_Loaded_7) == 0x0009B8, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::K2Node_CustomEvent_Loaded_7' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_143) == 0x0009C0, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_143' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_144) == 0x0009C1, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_144' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_Array_Get_Item_87) == 0x0009C8, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_Array_Get_Item_87' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_GetUniqueName_self_CastInput) == 0x0009D0, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_GetUniqueName_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_GetUniqueName_ReturnValue) == 0x0009E0, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_GetUniqueName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_Conv_NameToString_ReturnValue) == 0x0009E8, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, K2Node_SwitchString_CmpSuccess) == 0x0009F8, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::K2Node_SwitchString_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, Temp_int_Loop_Num_Variable) == 0x0009FC, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_GetENPCBrainCrashType_IsENPC) == 0x000A00, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_GetENPCBrainCrashType_IsENPC' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_GetENPCBrainCrashType_IsKill) == 0x000A01, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_GetENPCBrainCrashType_IsKill' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_GetENPCBrainCrashType_IsSolo) == 0x000A02, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_GetENPCBrainCrashType_IsSolo' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_GetENPCBrainCrashType_IsENPC_1) == 0x000A03, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_GetENPCBrainCrashType_IsENPC_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_GetENPCBrainCrashType_IsKill_1) == 0x000A04, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_GetENPCBrainCrashType_IsKill_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_GetENPCBrainCrashType_IsSolo_1) == 0x000A05, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_GetENPCBrainCrashType_IsSolo_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, Temp_int_Array_Index_Variable) == 0x000A08, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_GetCutinManager_CutinManager_5) == 0x000A10, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_GetCutinManager_CutinManager_5' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_145) == 0x000A18, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_145' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_GetSequencePlayer_ReturnValue_1) == 0x000A20, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_GetSequencePlayer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_146) == 0x000A28, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_146' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_147) == 0x000A29, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_147' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, Temp_bool_True_if_break_was_hit_Variable) == 0x000A2A, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_Not_PreBool_ReturnValue_5) == 0x000A2B, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_Not_PreBool_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_GetCutinManager_CutinManager_6) == 0x000A30, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_GetCutinManager_CutinManager_6' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, Temp_object_Variable_5) == 0x000A38, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_148) == 0x000A40, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_148' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_149) == 0x000A41, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_149' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, K2Node_DynamicCast_AsLevel_Sequence_6) == 0x000A48, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::K2Node_DynamicCast_AsLevel_Sequence_6' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, K2Node_DynamicCast_bSuccess_20) == 0x000A50, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::K2Node_DynamicCast_bSuccess_20' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_GetSequencePlayer_ReturnValue_2) == 0x000A58, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_GetSequencePlayer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_150) == 0x000A60, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_150' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_151) == 0x000A61, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_151' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_CancelSequencerMarkPause_Successsed) == 0x000A62, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_CancelSequencerMarkPause_Successsed' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, Temp_int_Loop_Counter_Variable) == 0x000A64, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_Less_IntInt_ReturnValue) == 0x000A68, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_Add_IntInt_ReturnValue) == 0x000A6C, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_BooleanAND_ReturnValue_7) == 0x000A70, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_BooleanAND_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_GetCurrentSequencer_Sequencer) == 0x000A78, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_GetCurrentSequencer_Sequencer' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, K2Node_CustomEvent_CrashVisionIndex) == 0x000A80, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::K2Node_CustomEvent_CrashVisionIndex' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, K2Node_CustomEvent_PlayerIndex) == 0x000A84, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::K2Node_CustomEvent_PlayerIndex' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, K2Node_CustomEvent_TargetEnemy) == 0x000A88, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::K2Node_CustomEvent_TargetEnemy' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_152) == 0x000A90, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_152' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_CV_GetEnemySequencer_Sequencer) == 0x000A98, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_CV_GetEnemySequencer_Sequencer' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValidSoftObjectReference_ReturnValue_3) == 0x000AC0, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValidSoftObjectReference_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_Conv_IntToByte_ReturnValue) == 0x000AC1, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_GetValidValue_ReturnValue) == 0x000AC2, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_Conv_IntToByte_ReturnValue_1) == 0x000AC3, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_Conv_IntToByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_GetValidValue_ReturnValue_1) == 0x000AC4, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_GetValidValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000AC5, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000AC6, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x000AC7, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_EqualEqual_IntInt_ReturnValue_3) == 0x000AC8, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_EqualEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_BooleanOR_ReturnValue) == 0x000AC9, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_Add_IntInt_ReturnValue_1) == 0x000ACC, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_Add_IntInt_ReturnValue_2) == 0x000AD0, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_Add_IntInt_ReturnValue_3) == 0x000AD4, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_Add_IntInt_ReturnValue_4) == 0x000AD8, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_Add_IntInt_ReturnValue_5) == 0x000ADC, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_Add_IntInt_ReturnValue_6) == 0x000AE0, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, K2Node_CustomEvent_Loaded_8) == 0x000AE8, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::K2Node_CustomEvent_Loaded_8' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_153) == 0x000AF0, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_153' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000AF8, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_Array_Length_ReturnValue_1) == 0x000B08, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_GetDataTableRowFromName_OutRow) == 0x000B10, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000B40, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, Temp_object_Variable_6) == 0x000B48, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_154) == 0x000B50, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_154' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, K2Node_DynamicCast_AsLevel_Sequence_7) == 0x000B58, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::K2Node_DynamicCast_AsLevel_Sequence_7' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, K2Node_DynamicCast_bSuccess_21) == 0x000B60, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::K2Node_DynamicCast_bSuccess_21' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, K2Node_CustomEvent_Time_Dilation) == 0x000B64, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::K2Node_CustomEvent_Time_Dilation' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, K2Node_CustomEvent_Loaded_9) == 0x000B68, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::K2Node_CustomEvent_Loaded_9' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_MakeTransform_ReturnValue) == 0x000B70, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000BA0, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_FinishSpawningActor_ReturnValue) == 0x000BA8, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, K2Node_Event_EndPlayReason) == 0x000BB0, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_Array_Get_Item_88) == 0x000BB8, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_Array_Get_Item_88' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, Temp_object_Variable_7) == 0x000BE0, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::Temp_object_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_Array_Get_Item_89) == 0x000BE8, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_Array_Get_Item_89' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, K2Node_DynamicCast_AsSkeletal_Mesh) == 0x000BF0, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::K2Node_DynamicCast_AsSkeletal_Mesh' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, K2Node_DynamicCast_bSuccess_22) == 0x000BF8, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::K2Node_DynamicCast_bSuccess_22' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_155) == 0x000BF9, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_155' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, K2Node_CustomEvent_Loaded) == 0x000C00, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, Temp_byte_Variable_1) == 0x000C08, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_Array_Get_Item_90) == 0x000C10, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_Array_Get_Item_90' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000C18, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_GetEnemyManager_Manager_3) == 0x000C20, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_GetEnemyManager_Manager_3' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_156) == 0x000C28, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_156' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, Temp_object_Variable_8) == 0x000C30, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::Temp_object_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, K2Node_DynamicCast_AsSkeletal_Mesh_1) == 0x000C38, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::K2Node_DynamicCast_AsSkeletal_Mesh_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, K2Node_DynamicCast_bSuccess_23) == 0x000C40, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::K2Node_DynamicCast_bSuccess_23' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_GetEnemyManager_Manager_4) == 0x000C48, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_GetEnemyManager_Manager_4' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_157) == 0x000C50, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_157' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_Array_Get_Item_91) == 0x000C58, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_Array_Get_Item_91' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, K2Node_CustomEvent_Loaded_1) == 0x000C80, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::K2Node_CustomEvent_Loaded_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, K2Node_CreateDelegate_OutputDelegate_3) == 0x000C88, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, K2Node_CreateDelegate_OutputDelegate_4) == 0x000C98, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, Temp_object_Variable_9) == 0x000CA8, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::Temp_object_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, Temp_object_Variable_10) == 0x000CB0, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::Temp_object_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, K2Node_CustomEvent_Loaded_2) == 0x000CB8, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::K2Node_CustomEvent_Loaded_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, K2Node_DynamicCast_AsLevel_Sequence_8) == 0x000CC0, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::K2Node_DynamicCast_AsLevel_Sequence_8' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, K2Node_DynamicCast_bSuccess_24) == 0x000CC8, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::K2Node_DynamicCast_bSuccess_24' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_158) == 0x000CC9, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_158' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_Array_Get_Item_92) == 0x000CD0, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_Array_Get_Item_92' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_159) == 0x000CD8, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_159' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_Array_Get_Item_93) == 0x000CE0, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_Array_Get_Item_93' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_GetEnemyManager_Manager_5) == 0x000CE8, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_GetEnemyManager_Manager_5' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, Temp_object_Variable_11) == 0x000CF0, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::Temp_object_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_160) == 0x000CF8, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_160' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_CheckUseCutin_ReturnValue) == 0x000CF9, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_CheckUseCutin_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, K2Node_CreateDelegate_OutputDelegate_5) == 0x000CFC, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_MakeTransform_ReturnValue_1) == 0x000D10, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, Temp_class_Variable_1) == 0x000D40, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::Temp_class_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, K2Node_ClassDynamicCast_AsBP_Menu_Player_Base_1) == 0x000D48, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::K2Node_ClassDynamicCast_AsBP_Menu_Player_Base_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, K2Node_ClassDynamicCast_bSuccess_1) == 0x000D50, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::K2Node_ClassDynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1) == 0x000D58, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValidSoftObjectReference_ReturnValue_4) == 0x000D60, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValidSoftObjectReference_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_FinishSpawningActor_ReturnValue_1) == 0x000D68, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_FinishSpawningActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_GetCurrentEnemySequencer_Sequencer) == 0x000D70, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_GetCurrentEnemySequencer_Sequencer' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_161) == 0x000D78, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_161' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_GetCurrentSubSequencer_SubSequencer) == 0x000D80, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_GetCurrentSubSequencer_SubSequencer' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, K2Node_CustomEvent_Loaded_3) == 0x000D88, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::K2Node_CustomEvent_Loaded_3' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_162) == 0x000D90, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_162' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_GetAcceleratorStencil_Stencil) == 0x000D94, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_GetAcceleratorStencil_Stencil' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_GetSeeThroughStencil_Stencil) == 0x000D98, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_GetSeeThroughStencil_Stencil' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_MakeLiteralByte_ReturnValue) == 0x000D9C, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_Or_IntInt_ReturnValue) == 0x000DA0, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_Or_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_GetAcceleratorStencil_Stencil_1) == 0x000DA4, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_GetAcceleratorStencil_Stencil_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_GetSeeThroughStencil_Stencil_1) == 0x000DA8, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_GetSeeThroughStencil_Stencil_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_Or_IntInt_ReturnValue_1) == 0x000DAC, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_Or_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, K2Node_CustomEvent_OffsetTransform) == 0x000DB0, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::K2Node_CustomEvent_OffsetTransform' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, K2Node_CustomEvent_AttachPointName) == 0x000DE0, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::K2Node_CustomEvent_AttachPointName' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_163) == 0x000DE8, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_163' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, K2Node_CreateDelegate_OutputDelegate_6) == 0x000DEC, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_164) == 0x000DFC, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_164' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_165) == 0x000DFD, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_165' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_MakeLiteralByte_ReturnValue_1) == 0x000DFE, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_MakeLiteralByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_166) == 0x000DFF, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_166' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_167) == 0x000E00, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_167' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_168) == 0x000E01, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_168' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_169) == 0x000E02, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_169' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, K2Node_CreateDelegate_OutputDelegate_7) == 0x000E04, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_170) == 0x000E14, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_170' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_171) == 0x000E15, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_171' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_172) == 0x000E16, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_172' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, K2Node_CreateDelegate_OutputDelegate_8) == 0x000E18, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_173) == 0x000E28, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_173' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_174) == 0x000E29, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_174' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_175) == 0x000E2A, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_175' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, K2Node_CreateDelegate_OutputDelegate_9) == 0x000E2C, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::K2Node_CreateDelegate_OutputDelegate_9' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, K2Node_DynamicCast_AsBPI_Enemy_Interface_2) == 0x000E40, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::K2Node_DynamicCast_AsBPI_Enemy_Interface_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, K2Node_DynamicCast_bSuccess_25) == 0x000E50, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::K2Node_DynamicCast_bSuccess_25' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_em8300_DeadBattleSimulator_Dummy) == 0x000E51, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_em8300_DeadBattleSimulator_Dummy' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_176) == 0x000E52, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_176' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_177) == 0x000E53, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_177' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_178) == 0x000E54, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_178' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, K2Node_CreateDelegate_OutputDelegate_10) == 0x000E58, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::K2Node_CreateDelegate_OutputDelegate_10' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_179) == 0x000E68, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_179' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_180) == 0x000E69, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_180' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_GetPlayerManager_PlayerManager_2) == 0x000E70, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_GetPlayerManager_PlayerManager_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, K2Node_CreateDelegate_OutputDelegate_11) == 0x000E78, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::K2Node_CreateDelegate_OutputDelegate_11' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_181) == 0x000E88, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_181' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_GetBattleMemberActorFromKind_ReturnValue) == 0x000E90, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_GetBattleMemberActorFromKind_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, K2Node_DynamicCast_AsPlayer_Interface_2) == 0x000E98, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::K2Node_DynamicCast_AsPlayer_Interface_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, K2Node_DynamicCast_bSuccess_26) == 0x000EA8, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::K2Node_DynamicCast_bSuccess_26' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, K2Node_CreateDelegate_OutputDelegate_12) == 0x000EAC, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::K2Node_CreateDelegate_OutputDelegate_12' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_GetPlayerID_ReturnValue_1) == 0x000EBC, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_GetPlayerID_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, Temp_object_Variable_12) == 0x000EC0, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::Temp_object_Variable_12' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_182) == 0x000EC8, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_182' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_183) == 0x000EC9, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_183' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_Array_Get_Item_94) == 0x000ED0, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_Array_Get_Item_94' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_184) == 0x000ED8, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_184' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_185) == 0x000ED9, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_185' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_186) == 0x000EDA, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_186' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_GetPlayerManager_PlayerManager_3) == 0x000EE0, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_GetPlayerManager_PlayerManager_3' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_GetPlayer_ReturnValue_2) == 0x000EE8, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_GetPlayer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, K2Node_DynamicCast_AsEvent_Interface) == 0x000EF0, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::K2Node_DynamicCast_AsEvent_Interface' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, K2Node_DynamicCast_bSuccess_27) == 0x000F00, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::K2Node_DynamicCast_bSuccess_27' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager, CallFunc_IsValid_ReturnValue_187) == 0x000F01, "Member 'BP_BrainCrashManager_C_ExecuteUbergraph_BP_BrainCrashManager::CallFunc_IsValid_ReturnValue_187' has a wrong offset!");

// Function BP_BrainCrashManager.BP_BrainCrashManager_C.CrashHPRecovery
// 0x0040 (0x0040 - 0x0000)
struct BP_BrainCrashManager_C_CrashHPRecovery final
{
public:
	struct FTransform                             OffsetTransform;                                   // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	class FName                                   AttachPointName;                                   // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrainCrashManager_C_CrashHPRecovery) == 0x000010, "Wrong alignment on BP_BrainCrashManager_C_CrashHPRecovery");
static_assert(sizeof(BP_BrainCrashManager_C_CrashHPRecovery) == 0x000040, "Wrong size on BP_BrainCrashManager_C_CrashHPRecovery");
static_assert(offsetof(BP_BrainCrashManager_C_CrashHPRecovery, OffsetTransform) == 0x000000, "Member 'BP_BrainCrashManager_C_CrashHPRecovery::OffsetTransform' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CrashHPRecovery, AttachPointName) == 0x000030, "Member 'BP_BrainCrashManager_C_CrashHPRecovery::AttachPointName' has a wrong offset!");

// Function BP_BrainCrashManager.BP_BrainCrashManager_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_BrainCrashManager_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrainCrashManager_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BP_BrainCrashManager_C_ReceiveEndPlay");
static_assert(sizeof(BP_BrainCrashManager_C_ReceiveEndPlay) == 0x000001, "Wrong size on BP_BrainCrashManager_C_ReceiveEndPlay");
static_assert(offsetof(BP_BrainCrashManager_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BP_BrainCrashManager_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BP_BrainCrashManager.BP_BrainCrashManager_C.SlowDilationCrashVision
// 0x0004 (0x0004 - 0x0000)
struct BP_BrainCrashManager_C_SlowDilationCrashVision final
{
public:
	float                                         Time_Dilation;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrainCrashManager_C_SlowDilationCrashVision) == 0x000004, "Wrong alignment on BP_BrainCrashManager_C_SlowDilationCrashVision");
static_assert(sizeof(BP_BrainCrashManager_C_SlowDilationCrashVision) == 0x000004, "Wrong size on BP_BrainCrashManager_C_SlowDilationCrashVision");
static_assert(offsetof(BP_BrainCrashManager_C_SlowDilationCrashVision, Time_Dilation) == 0x000000, "Member 'BP_BrainCrashManager_C_SlowDilationCrashVision::Time_Dilation' has a wrong offset!");

// Function BP_BrainCrashManager.BP_BrainCrashManager_C.Event_LoadCrashVision
// 0x0010 (0x0010 - 0x0000)
struct BP_BrainCrashManager_C_Event_LoadCrashVision final
{
public:
	int32                                         CrashVisionIndex;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PlayerIndex;                                       // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattleCharacter_C*                   TargetEnemy;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrainCrashManager_C_Event_LoadCrashVision) == 0x000008, "Wrong alignment on BP_BrainCrashManager_C_Event_LoadCrashVision");
static_assert(sizeof(BP_BrainCrashManager_C_Event_LoadCrashVision) == 0x000010, "Wrong size on BP_BrainCrashManager_C_Event_LoadCrashVision");
static_assert(offsetof(BP_BrainCrashManager_C_Event_LoadCrashVision, CrashVisionIndex) == 0x000000, "Member 'BP_BrainCrashManager_C_Event_LoadCrashVision::CrashVisionIndex' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Event_LoadCrashVision, PlayerIndex) == 0x000004, "Member 'BP_BrainCrashManager_C_Event_LoadCrashVision::PlayerIndex' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Event_LoadCrashVision, TargetEnemy) == 0x000008, "Member 'BP_BrainCrashManager_C_Event_LoadCrashVision::TargetEnemy' has a wrong offset!");

// Function BP_BrainCrashManager.BP_BrainCrashManager_C.SlowDilation
// 0x0004 (0x0004 - 0x0000)
struct BP_BrainCrashManager_C_SlowDilation final
{
public:
	float                                         Time_Dilation;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrainCrashManager_C_SlowDilation) == 0x000004, "Wrong alignment on BP_BrainCrashManager_C_SlowDilation");
static_assert(sizeof(BP_BrainCrashManager_C_SlowDilation) == 0x000004, "Wrong size on BP_BrainCrashManager_C_SlowDilation");
static_assert(offsetof(BP_BrainCrashManager_C_SlowDilation, Time_Dilation) == 0x000000, "Member 'BP_BrainCrashManager_C_SlowDilation::Time_Dilation' has a wrong offset!");

// Function BP_BrainCrashManager.BP_BrainCrashManager_C.OnPlayerFootIK
// 0x0001 (0x0001 - 0x0000)
struct BP_BrainCrashManager_C_OnPlayerFootIK final
{
public:
	struct FSEventSequencerBool                   Enable;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrainCrashManager_C_OnPlayerFootIK) == 0x000001, "Wrong alignment on BP_BrainCrashManager_C_OnPlayerFootIK");
static_assert(sizeof(BP_BrainCrashManager_C_OnPlayerFootIK) == 0x000001, "Wrong size on BP_BrainCrashManager_C_OnPlayerFootIK");
static_assert(offsetof(BP_BrainCrashManager_C_OnPlayerFootIK, Enable) == 0x000000, "Member 'BP_BrainCrashManager_C_OnPlayerFootIK::Enable' has a wrong offset!");

// Function BP_BrainCrashManager.BP_BrainCrashManager_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_BrainCrashManager_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrainCrashManager_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_BrainCrashManager_C_ReceiveTick");
static_assert(sizeof(BP_BrainCrashManager_C_ReceiveTick) == 0x000004, "Wrong size on BP_BrainCrashManager_C_ReceiveTick");
static_assert(offsetof(BP_BrainCrashManager_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_BrainCrashManager_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_BrainCrashManager.BP_BrainCrashManager_C.PrivateLoadENPC
// 0x0005 (0x0005 - 0x0000)
struct BP_BrainCrashManager_C_PrivateLoadENPC final
{
public:
	bool                                          Damage;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          KillSolo;                                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          KillMulti;                                         // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          LoadEm8220;                                        // 0x0003(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ASyncLoading;                                      // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BrainCrashManager_C_PrivateLoadENPC) == 0x000001, "Wrong alignment on BP_BrainCrashManager_C_PrivateLoadENPC");
static_assert(sizeof(BP_BrainCrashManager_C_PrivateLoadENPC) == 0x000005, "Wrong size on BP_BrainCrashManager_C_PrivateLoadENPC");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateLoadENPC, Damage) == 0x000000, "Member 'BP_BrainCrashManager_C_PrivateLoadENPC::Damage' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateLoadENPC, KillSolo) == 0x000001, "Member 'BP_BrainCrashManager_C_PrivateLoadENPC::KillSolo' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateLoadENPC, KillMulti) == 0x000002, "Member 'BP_BrainCrashManager_C_PrivateLoadENPC::KillMulti' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateLoadENPC, LoadEm8220) == 0x000003, "Member 'BP_BrainCrashManager_C_PrivateLoadENPC::LoadEm8220' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateLoadENPC, ASyncLoading) == 0x000004, "Member 'BP_BrainCrashManager_C_PrivateLoadENPC::ASyncLoading' has a wrong offset!");

// Function BP_BrainCrashManager.BP_BrainCrashManager_C.OnLoaded_8787A5B545EDF86468577ABEA3D32D1C
// 0x0008 (0x0008 - 0x0000)
struct BP_BrainCrashManager_C_OnLoaded_8787A5B545EDF86468577ABEA3D32D1C final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrainCrashManager_C_OnLoaded_8787A5B545EDF86468577ABEA3D32D1C) == 0x000008, "Wrong alignment on BP_BrainCrashManager_C_OnLoaded_8787A5B545EDF86468577ABEA3D32D1C");
static_assert(sizeof(BP_BrainCrashManager_C_OnLoaded_8787A5B545EDF86468577ABEA3D32D1C) == 0x000008, "Wrong size on BP_BrainCrashManager_C_OnLoaded_8787A5B545EDF86468577ABEA3D32D1C");
static_assert(offsetof(BP_BrainCrashManager_C_OnLoaded_8787A5B545EDF86468577ABEA3D32D1C, Loaded) == 0x000000, "Member 'BP_BrainCrashManager_C_OnLoaded_8787A5B545EDF86468577ABEA3D32D1C::Loaded' has a wrong offset!");

// Function BP_BrainCrashManager.BP_BrainCrashManager_C.OnLoaded_756F5E814049ECD7C28C708A311C1A6A
// 0x0008 (0x0008 - 0x0000)
struct BP_BrainCrashManager_C_OnLoaded_756F5E814049ECD7C28C708A311C1A6A final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrainCrashManager_C_OnLoaded_756F5E814049ECD7C28C708A311C1A6A) == 0x000008, "Wrong alignment on BP_BrainCrashManager_C_OnLoaded_756F5E814049ECD7C28C708A311C1A6A");
static_assert(sizeof(BP_BrainCrashManager_C_OnLoaded_756F5E814049ECD7C28C708A311C1A6A) == 0x000008, "Wrong size on BP_BrainCrashManager_C_OnLoaded_756F5E814049ECD7C28C708A311C1A6A");
static_assert(offsetof(BP_BrainCrashManager_C_OnLoaded_756F5E814049ECD7C28C708A311C1A6A, Loaded) == 0x000000, "Member 'BP_BrainCrashManager_C_OnLoaded_756F5E814049ECD7C28C708A311C1A6A::Loaded' has a wrong offset!");

// Function BP_BrainCrashManager.BP_BrainCrashManager_C.OnLoaded_E5C2BEF44E9F80A82237E3AE5021E4BB
// 0x0008 (0x0008 - 0x0000)
struct BP_BrainCrashManager_C_OnLoaded_E5C2BEF44E9F80A82237E3AE5021E4BB final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrainCrashManager_C_OnLoaded_E5C2BEF44E9F80A82237E3AE5021E4BB) == 0x000008, "Wrong alignment on BP_BrainCrashManager_C_OnLoaded_E5C2BEF44E9F80A82237E3AE5021E4BB");
static_assert(sizeof(BP_BrainCrashManager_C_OnLoaded_E5C2BEF44E9F80A82237E3AE5021E4BB) == 0x000008, "Wrong size on BP_BrainCrashManager_C_OnLoaded_E5C2BEF44E9F80A82237E3AE5021E4BB");
static_assert(offsetof(BP_BrainCrashManager_C_OnLoaded_E5C2BEF44E9F80A82237E3AE5021E4BB, Loaded) == 0x000000, "Member 'BP_BrainCrashManager_C_OnLoaded_E5C2BEF44E9F80A82237E3AE5021E4BB::Loaded' has a wrong offset!");

// Function BP_BrainCrashManager.BP_BrainCrashManager_C.OnLoaded_890FCC2347A12411718D4BAB127C5D91
// 0x0008 (0x0008 - 0x0000)
struct BP_BrainCrashManager_C_OnLoaded_890FCC2347A12411718D4BAB127C5D91 final
{
public:
	class UClass*                                 Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrainCrashManager_C_OnLoaded_890FCC2347A12411718D4BAB127C5D91) == 0x000008, "Wrong alignment on BP_BrainCrashManager_C_OnLoaded_890FCC2347A12411718D4BAB127C5D91");
static_assert(sizeof(BP_BrainCrashManager_C_OnLoaded_890FCC2347A12411718D4BAB127C5D91) == 0x000008, "Wrong size on BP_BrainCrashManager_C_OnLoaded_890FCC2347A12411718D4BAB127C5D91");
static_assert(offsetof(BP_BrainCrashManager_C_OnLoaded_890FCC2347A12411718D4BAB127C5D91, Loaded) == 0x000000, "Member 'BP_BrainCrashManager_C_OnLoaded_890FCC2347A12411718D4BAB127C5D91::Loaded' has a wrong offset!");

// Function BP_BrainCrashManager.BP_BrainCrashManager_C.OnLoaded_2ADDCF3F4A5CFB5E43492C9CE1F92B24
// 0x0008 (0x0008 - 0x0000)
struct BP_BrainCrashManager_C_OnLoaded_2ADDCF3F4A5CFB5E43492C9CE1F92B24 final
{
public:
	class UClass*                                 Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrainCrashManager_C_OnLoaded_2ADDCF3F4A5CFB5E43492C9CE1F92B24) == 0x000008, "Wrong alignment on BP_BrainCrashManager_C_OnLoaded_2ADDCF3F4A5CFB5E43492C9CE1F92B24");
static_assert(sizeof(BP_BrainCrashManager_C_OnLoaded_2ADDCF3F4A5CFB5E43492C9CE1F92B24) == 0x000008, "Wrong size on BP_BrainCrashManager_C_OnLoaded_2ADDCF3F4A5CFB5E43492C9CE1F92B24");
static_assert(offsetof(BP_BrainCrashManager_C_OnLoaded_2ADDCF3F4A5CFB5E43492C9CE1F92B24, Loaded) == 0x000000, "Member 'BP_BrainCrashManager_C_OnLoaded_2ADDCF3F4A5CFB5E43492C9CE1F92B24::Loaded' has a wrong offset!");

// Function BP_BrainCrashManager.BP_BrainCrashManager_C.OnLoaded_AF7EF5014B0DE89A2C261D81205A89AB
// 0x0008 (0x0008 - 0x0000)
struct BP_BrainCrashManager_C_OnLoaded_AF7EF5014B0DE89A2C261D81205A89AB final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrainCrashManager_C_OnLoaded_AF7EF5014B0DE89A2C261D81205A89AB) == 0x000008, "Wrong alignment on BP_BrainCrashManager_C_OnLoaded_AF7EF5014B0DE89A2C261D81205A89AB");
static_assert(sizeof(BP_BrainCrashManager_C_OnLoaded_AF7EF5014B0DE89A2C261D81205A89AB) == 0x000008, "Wrong size on BP_BrainCrashManager_C_OnLoaded_AF7EF5014B0DE89A2C261D81205A89AB");
static_assert(offsetof(BP_BrainCrashManager_C_OnLoaded_AF7EF5014B0DE89A2C261D81205A89AB, Loaded) == 0x000000, "Member 'BP_BrainCrashManager_C_OnLoaded_AF7EF5014B0DE89A2C261D81205A89AB::Loaded' has a wrong offset!");

// Function BP_BrainCrashManager.BP_BrainCrashManager_C.OnLoaded_344D119745EB95B4B7F5CFA7F5A0B1E3
// 0x0008 (0x0008 - 0x0000)
struct BP_BrainCrashManager_C_OnLoaded_344D119745EB95B4B7F5CFA7F5A0B1E3 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrainCrashManager_C_OnLoaded_344D119745EB95B4B7F5CFA7F5A0B1E3) == 0x000008, "Wrong alignment on BP_BrainCrashManager_C_OnLoaded_344D119745EB95B4B7F5CFA7F5A0B1E3");
static_assert(sizeof(BP_BrainCrashManager_C_OnLoaded_344D119745EB95B4B7F5CFA7F5A0B1E3) == 0x000008, "Wrong size on BP_BrainCrashManager_C_OnLoaded_344D119745EB95B4B7F5CFA7F5A0B1E3");
static_assert(offsetof(BP_BrainCrashManager_C_OnLoaded_344D119745EB95B4B7F5CFA7F5A0B1E3, Loaded) == 0x000000, "Member 'BP_BrainCrashManager_C_OnLoaded_344D119745EB95B4B7F5CFA7F5A0B1E3::Loaded' has a wrong offset!");

// Function BP_BrainCrashManager.BP_BrainCrashManager_C.OnLoaded_33D5999B4C06E16493524A8CA8AEEB06
// 0x0008 (0x0008 - 0x0000)
struct BP_BrainCrashManager_C_OnLoaded_33D5999B4C06E16493524A8CA8AEEB06 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrainCrashManager_C_OnLoaded_33D5999B4C06E16493524A8CA8AEEB06) == 0x000008, "Wrong alignment on BP_BrainCrashManager_C_OnLoaded_33D5999B4C06E16493524A8CA8AEEB06");
static_assert(sizeof(BP_BrainCrashManager_C_OnLoaded_33D5999B4C06E16493524A8CA8AEEB06) == 0x000008, "Wrong size on BP_BrainCrashManager_C_OnLoaded_33D5999B4C06E16493524A8CA8AEEB06");
static_assert(offsetof(BP_BrainCrashManager_C_OnLoaded_33D5999B4C06E16493524A8CA8AEEB06, Loaded) == 0x000000, "Member 'BP_BrainCrashManager_C_OnLoaded_33D5999B4C06E16493524A8CA8AEEB06::Loaded' has a wrong offset!");

// Function BP_BrainCrashManager.BP_BrainCrashManager_C.OnLoaded_B234BA9E4B9FA682314A0AB58DA24026
// 0x0008 (0x0008 - 0x0000)
struct BP_BrainCrashManager_C_OnLoaded_B234BA9E4B9FA682314A0AB58DA24026 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrainCrashManager_C_OnLoaded_B234BA9E4B9FA682314A0AB58DA24026) == 0x000008, "Wrong alignment on BP_BrainCrashManager_C_OnLoaded_B234BA9E4B9FA682314A0AB58DA24026");
static_assert(sizeof(BP_BrainCrashManager_C_OnLoaded_B234BA9E4B9FA682314A0AB58DA24026) == 0x000008, "Wrong size on BP_BrainCrashManager_C_OnLoaded_B234BA9E4B9FA682314A0AB58DA24026");
static_assert(offsetof(BP_BrainCrashManager_C_OnLoaded_B234BA9E4B9FA682314A0AB58DA24026, Loaded) == 0x000000, "Member 'BP_BrainCrashManager_C_OnLoaded_B234BA9E4B9FA682314A0AB58DA24026::Loaded' has a wrong offset!");

// Function BP_BrainCrashManager.BP_BrainCrashManager_C.OnLoaded_9AAF0560439FC75A4D4CA984758A7DF3
// 0x0008 (0x0008 - 0x0000)
struct BP_BrainCrashManager_C_OnLoaded_9AAF0560439FC75A4D4CA984758A7DF3 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrainCrashManager_C_OnLoaded_9AAF0560439FC75A4D4CA984758A7DF3) == 0x000008, "Wrong alignment on BP_BrainCrashManager_C_OnLoaded_9AAF0560439FC75A4D4CA984758A7DF3");
static_assert(sizeof(BP_BrainCrashManager_C_OnLoaded_9AAF0560439FC75A4D4CA984758A7DF3) == 0x000008, "Wrong size on BP_BrainCrashManager_C_OnLoaded_9AAF0560439FC75A4D4CA984758A7DF3");
static_assert(offsetof(BP_BrainCrashManager_C_OnLoaded_9AAF0560439FC75A4D4CA984758A7DF3, Loaded) == 0x000000, "Member 'BP_BrainCrashManager_C_OnLoaded_9AAF0560439FC75A4D4CA984758A7DF3::Loaded' has a wrong offset!");

// Function BP_BrainCrashManager.BP_BrainCrashManager_C.UpdateBlurCenterPositiion
// 0x0088 (0x0088 - 0x0000)
struct BP_BrainCrashManager_C_UpdateBlurCenterPositiion final
{
public:
	class AActor*                                 TargetEnemy;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              ScreenPosition;                                    // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BrainCrash_C>     K2Node_DynamicCast_AsBPI_Brain_Crash;              // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C1E[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector2D_X;                          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetBrainCrashDamageLocation_WorldLocation; // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetViewportSize_ReturnValue;              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_1;                        // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_1;                        // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetViewportSize_ReturnValue_1;            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DFloat_ReturnValue;         // 0x0054(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_ProjectWorldToScreen_ScreenPosition;      // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ProjectWorldToScreen_ReturnValue;         // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BrainCrashManager_C_UpdateBlurCenterPositiion) == 0x000008, "Wrong alignment on BP_BrainCrashManager_C_UpdateBlurCenterPositiion");
static_assert(sizeof(BP_BrainCrashManager_C_UpdateBlurCenterPositiion) == 0x000088, "Wrong size on BP_BrainCrashManager_C_UpdateBlurCenterPositiion");
static_assert(offsetof(BP_BrainCrashManager_C_UpdateBlurCenterPositiion, TargetEnemy) == 0x000000, "Member 'BP_BrainCrashManager_C_UpdateBlurCenterPositiion::TargetEnemy' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_UpdateBlurCenterPositiion, ScreenPosition) == 0x000008, "Member 'BP_BrainCrashManager_C_UpdateBlurCenterPositiion::ScreenPosition' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_UpdateBlurCenterPositiion, K2Node_DynamicCast_AsBPI_Brain_Crash) == 0x000010, "Member 'BP_BrainCrashManager_C_UpdateBlurCenterPositiion::K2Node_DynamicCast_AsBPI_Brain_Crash' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_UpdateBlurCenterPositiion, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_BrainCrashManager_C_UpdateBlurCenterPositiion::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_UpdateBlurCenterPositiion, CallFunc_BreakVector2D_X) == 0x000024, "Member 'BP_BrainCrashManager_C_UpdateBlurCenterPositiion::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_UpdateBlurCenterPositiion, CallFunc_BreakVector2D_Y) == 0x000028, "Member 'BP_BrainCrashManager_C_UpdateBlurCenterPositiion::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_UpdateBlurCenterPositiion, CallFunc_GetBrainCrashDamageLocation_WorldLocation) == 0x00002C, "Member 'BP_BrainCrashManager_C_UpdateBlurCenterPositiion::CallFunc_GetBrainCrashDamageLocation_WorldLocation' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_UpdateBlurCenterPositiion, CallFunc_GetViewportSize_ReturnValue) == 0x000038, "Member 'BP_BrainCrashManager_C_UpdateBlurCenterPositiion::CallFunc_GetViewportSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_UpdateBlurCenterPositiion, CallFunc_BreakVector2D_X_1) == 0x000040, "Member 'BP_BrainCrashManager_C_UpdateBlurCenterPositiion::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_UpdateBlurCenterPositiion, CallFunc_BreakVector2D_Y_1) == 0x000044, "Member 'BP_BrainCrashManager_C_UpdateBlurCenterPositiion::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_UpdateBlurCenterPositiion, CallFunc_GetViewportSize_ReturnValue_1) == 0x000048, "Member 'BP_BrainCrashManager_C_UpdateBlurCenterPositiion::CallFunc_GetViewportSize_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_UpdateBlurCenterPositiion, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000050, "Member 'BP_BrainCrashManager_C_UpdateBlurCenterPositiion::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_UpdateBlurCenterPositiion, CallFunc_Divide_Vector2DFloat_ReturnValue) == 0x000054, "Member 'BP_BrainCrashManager_C_UpdateBlurCenterPositiion::CallFunc_Divide_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_UpdateBlurCenterPositiion, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x00005C, "Member 'BP_BrainCrashManager_C_UpdateBlurCenterPositiion::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_UpdateBlurCenterPositiion, K2Node_MakeStruct_LinearColor) == 0x000060, "Member 'BP_BrainCrashManager_C_UpdateBlurCenterPositiion::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_UpdateBlurCenterPositiion, CallFunc_GetPlayerController_ReturnValue) == 0x000070, "Member 'BP_BrainCrashManager_C_UpdateBlurCenterPositiion::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_UpdateBlurCenterPositiion, CallFunc_ProjectWorldToScreen_ScreenPosition) == 0x000078, "Member 'BP_BrainCrashManager_C_UpdateBlurCenterPositiion::CallFunc_ProjectWorldToScreen_ScreenPosition' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_UpdateBlurCenterPositiion, CallFunc_ProjectWorldToScreen_ReturnValue) == 0x000080, "Member 'BP_BrainCrashManager_C_UpdateBlurCenterPositiion::CallFunc_ProjectWorldToScreen_ReturnValue' has a wrong offset!");

// Function BP_BrainCrashManager.BP_BrainCrashManager_C.GetCutinManager
// 0x0008 (0x0008 - 0x0000)
struct BP_BrainCrashManager_C_GetCutinManager final
{
public:
	class ABP_CutinManager_C*                     Param_CutinManager;                                // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrainCrashManager_C_GetCutinManager) == 0x000008, "Wrong alignment on BP_BrainCrashManager_C_GetCutinManager");
static_assert(sizeof(BP_BrainCrashManager_C_GetCutinManager) == 0x000008, "Wrong size on BP_BrainCrashManager_C_GetCutinManager");
static_assert(offsetof(BP_BrainCrashManager_C_GetCutinManager, Param_CutinManager) == 0x000000, "Member 'BP_BrainCrashManager_C_GetCutinManager::Param_CutinManager' has a wrong offset!");

// Function BP_BrainCrashManager.BP_BrainCrashManager_C.SetActiveCutinActor
// 0x0002 (0x0002 - 0x0000)
struct BP_BrainCrashManager_C_SetActiveCutinActor final
{
public:
	bool                                          Active;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BrainCrashManager_C_SetActiveCutinActor) == 0x000001, "Wrong alignment on BP_BrainCrashManager_C_SetActiveCutinActor");
static_assert(sizeof(BP_BrainCrashManager_C_SetActiveCutinActor) == 0x000002, "Wrong size on BP_BrainCrashManager_C_SetActiveCutinActor");
static_assert(offsetof(BP_BrainCrashManager_C_SetActiveCutinActor, Active) == 0x000000, "Member 'BP_BrainCrashManager_C_SetActiveCutinActor::Active' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_SetActiveCutinActor, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'BP_BrainCrashManager_C_SetActiveCutinActor::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_BrainCrashManager.BP_BrainCrashManager_C.LoadAssets
// 0x0070 (0x0070 - 0x0000)
struct BP_BrainCrashManager_C_LoadAssets final
{
public:
	class UActorComponent*                        CallFunc_AddActorComponent_ReturnValue;            // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue;               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPostProcessComponent*                  K2Node_DynamicCast_AsPost_Process_Component;       // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C1F[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     K2Node_DynamicCast_AsMaterial_Interface;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C20[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue_1;             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             K2Node_DynamicCast_AsData_Table;                   // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C21[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue_2;             // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             K2Node_DynamicCast_AsData_Table_1;                 // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C22[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_LoadSoftClassActor_ReturnValue;           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrainCrashManager_C_LoadAssets) == 0x000008, "Wrong alignment on BP_BrainCrashManager_C_LoadAssets");
static_assert(sizeof(BP_BrainCrashManager_C_LoadAssets) == 0x000070, "Wrong size on BP_BrainCrashManager_C_LoadAssets");
static_assert(offsetof(BP_BrainCrashManager_C_LoadAssets, CallFunc_AddActorComponent_ReturnValue) == 0x000000, "Member 'BP_BrainCrashManager_C_LoadAssets::CallFunc_AddActorComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_LoadAssets, CallFunc_LoadSoftObject_ReturnValue) == 0x000008, "Member 'BP_BrainCrashManager_C_LoadAssets::CallFunc_LoadSoftObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_LoadAssets, K2Node_DynamicCast_AsPost_Process_Component) == 0x000010, "Member 'BP_BrainCrashManager_C_LoadAssets::K2Node_DynamicCast_AsPost_Process_Component' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_LoadAssets, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_BrainCrashManager_C_LoadAssets::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_LoadAssets, K2Node_DynamicCast_AsMaterial_Interface) == 0x000020, "Member 'BP_BrainCrashManager_C_LoadAssets::K2Node_DynamicCast_AsMaterial_Interface' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_LoadAssets, K2Node_DynamicCast_bSuccess_1) == 0x000028, "Member 'BP_BrainCrashManager_C_LoadAssets::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_LoadAssets, CallFunc_LoadSoftObject_ReturnValue_1) == 0x000030, "Member 'BP_BrainCrashManager_C_LoadAssets::CallFunc_LoadSoftObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_LoadAssets, K2Node_DynamicCast_AsData_Table) == 0x000038, "Member 'BP_BrainCrashManager_C_LoadAssets::K2Node_DynamicCast_AsData_Table' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_LoadAssets, K2Node_DynamicCast_bSuccess_2) == 0x000040, "Member 'BP_BrainCrashManager_C_LoadAssets::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_LoadAssets, CallFunc_LoadSoftObject_ReturnValue_2) == 0x000048, "Member 'BP_BrainCrashManager_C_LoadAssets::CallFunc_LoadSoftObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_LoadAssets, K2Node_DynamicCast_AsData_Table_1) == 0x000050, "Member 'BP_BrainCrashManager_C_LoadAssets::K2Node_DynamicCast_AsData_Table_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_LoadAssets, K2Node_DynamicCast_bSuccess_3) == 0x000058, "Member 'BP_BrainCrashManager_C_LoadAssets::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_LoadAssets, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000060, "Member 'BP_BrainCrashManager_C_LoadAssets::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_LoadAssets, CallFunc_LoadSoftClassActor_ReturnValue) == 0x000068, "Member 'BP_BrainCrashManager_C_LoadAssets::CallFunc_LoadSoftClassActor_ReturnValue' has a wrong offset!");

// Function BP_BrainCrashManager.BP_BrainCrashManager_C.PrivateCheckBrainFieldOverwrite
// 0x00A0 (0x00A0 - 0x0000)
struct BP_BrainCrashManager_C_PrivateCheckBrainFieldOverwrite final
{
public:
	bool                                          Overwrite;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C23[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       Enemy;                                             // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         BrainFieldUserList;                                // 0x0010(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	TArray<class ARSCharacterBase*>               BrainCrashEnemyList;                               // 0x0020(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	class ABP_EnemyManager_C*                     EnemyManager;                                      // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C24[0x3];                                     // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C25[0x3];                                     // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_EnemyManager_C*                     CallFunc_GetEnemyManager_Manager;                  // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BrainFieldManager_C*                CallFunc_GetBrainFieldManager_Manager;             // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetBrainFieldUserList_User;               // 0x0058(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_IsUserIsPlayer_IsPlayer;                  // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInvokeBrainField_InvokeBrainField;      // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C26[0x5];                                     // 0x006B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IPlayerInterface>      K2Node_DynamicCast_AsPlayer_Interface;             // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAbleOverwriteENPCBrainField_ReturnValue; // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C27[0x2];                                     // 0x0082(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C28[0x3];                                     // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0095(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C29[0x2];                                     // 0x0096(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BrainCrashManager_C_PrivateCheckBrainFieldOverwrite) == 0x000008, "Wrong alignment on BP_BrainCrashManager_C_PrivateCheckBrainFieldOverwrite");
static_assert(sizeof(BP_BrainCrashManager_C_PrivateCheckBrainFieldOverwrite) == 0x0000A0, "Wrong size on BP_BrainCrashManager_C_PrivateCheckBrainFieldOverwrite");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateCheckBrainFieldOverwrite, Overwrite) == 0x000000, "Member 'BP_BrainCrashManager_C_PrivateCheckBrainFieldOverwrite::Overwrite' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateCheckBrainFieldOverwrite, Enemy) == 0x000008, "Member 'BP_BrainCrashManager_C_PrivateCheckBrainFieldOverwrite::Enemy' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateCheckBrainFieldOverwrite, BrainFieldUserList) == 0x000010, "Member 'BP_BrainCrashManager_C_PrivateCheckBrainFieldOverwrite::BrainFieldUserList' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateCheckBrainFieldOverwrite, BrainCrashEnemyList) == 0x000020, "Member 'BP_BrainCrashManager_C_PrivateCheckBrainFieldOverwrite::BrainCrashEnemyList' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateCheckBrainFieldOverwrite, EnemyManager) == 0x000030, "Member 'BP_BrainCrashManager_C_PrivateCheckBrainFieldOverwrite::EnemyManager' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateCheckBrainFieldOverwrite, Temp_int_Loop_Num_Variable) == 0x000038, "Member 'BP_BrainCrashManager_C_PrivateCheckBrainFieldOverwrite::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateCheckBrainFieldOverwrite, Temp_bool_True_if_break_was_hit_Variable) == 0x00003C, "Member 'BP_BrainCrashManager_C_PrivateCheckBrainFieldOverwrite::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateCheckBrainFieldOverwrite, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'BP_BrainCrashManager_C_PrivateCheckBrainFieldOverwrite::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateCheckBrainFieldOverwrite, CallFunc_Not_PreBool_ReturnValue) == 0x000044, "Member 'BP_BrainCrashManager_C_PrivateCheckBrainFieldOverwrite::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateCheckBrainFieldOverwrite, CallFunc_GetEnemyManager_Manager) == 0x000048, "Member 'BP_BrainCrashManager_C_PrivateCheckBrainFieldOverwrite::CallFunc_GetEnemyManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateCheckBrainFieldOverwrite, CallFunc_GetBrainFieldManager_Manager) == 0x000050, "Member 'BP_BrainCrashManager_C_PrivateCheckBrainFieldOverwrite::CallFunc_GetBrainFieldManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateCheckBrainFieldOverwrite, CallFunc_GetBrainFieldUserList_User) == 0x000058, "Member 'BP_BrainCrashManager_C_PrivateCheckBrainFieldOverwrite::CallFunc_GetBrainFieldUserList_User' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateCheckBrainFieldOverwrite, CallFunc_IsUserIsPlayer_IsPlayer) == 0x000068, "Member 'BP_BrainCrashManager_C_PrivateCheckBrainFieldOverwrite::CallFunc_IsUserIsPlayer_IsPlayer' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateCheckBrainFieldOverwrite, CallFunc_IsInvokeBrainField_InvokeBrainField) == 0x000069, "Member 'BP_BrainCrashManager_C_PrivateCheckBrainFieldOverwrite::CallFunc_IsInvokeBrainField_InvokeBrainField' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateCheckBrainFieldOverwrite, CallFunc_IsValid_ReturnValue) == 0x00006A, "Member 'BP_BrainCrashManager_C_PrivateCheckBrainFieldOverwrite::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateCheckBrainFieldOverwrite, K2Node_DynamicCast_AsPlayer_Interface) == 0x000070, "Member 'BP_BrainCrashManager_C_PrivateCheckBrainFieldOverwrite::K2Node_DynamicCast_AsPlayer_Interface' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateCheckBrainFieldOverwrite, K2Node_DynamicCast_bSuccess) == 0x000080, "Member 'BP_BrainCrashManager_C_PrivateCheckBrainFieldOverwrite::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateCheckBrainFieldOverwrite, CallFunc_IsAbleOverwriteENPCBrainField_ReturnValue) == 0x000081, "Member 'BP_BrainCrashManager_C_PrivateCheckBrainFieldOverwrite::CallFunc_IsAbleOverwriteENPCBrainField_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateCheckBrainFieldOverwrite, CallFunc_Array_Find_ReturnValue) == 0x000084, "Member 'BP_BrainCrashManager_C_PrivateCheckBrainFieldOverwrite::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateCheckBrainFieldOverwrite, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000088, "Member 'BP_BrainCrashManager_C_PrivateCheckBrainFieldOverwrite::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateCheckBrainFieldOverwrite, Temp_int_Array_Index_Variable) == 0x00008C, "Member 'BP_BrainCrashManager_C_PrivateCheckBrainFieldOverwrite::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateCheckBrainFieldOverwrite, Temp_int_Loop_Counter_Variable) == 0x000090, "Member 'BP_BrainCrashManager_C_PrivateCheckBrainFieldOverwrite::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateCheckBrainFieldOverwrite, CallFunc_IsValid_ReturnValue_1) == 0x000094, "Member 'BP_BrainCrashManager_C_PrivateCheckBrainFieldOverwrite::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateCheckBrainFieldOverwrite, CallFunc_Less_IntInt_ReturnValue) == 0x000095, "Member 'BP_BrainCrashManager_C_PrivateCheckBrainFieldOverwrite::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateCheckBrainFieldOverwrite, CallFunc_Add_IntInt_ReturnValue) == 0x000098, "Member 'BP_BrainCrashManager_C_PrivateCheckBrainFieldOverwrite::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateCheckBrainFieldOverwrite, CallFunc_BooleanAND_ReturnValue) == 0x00009C, "Member 'BP_BrainCrashManager_C_PrivateCheckBrainFieldOverwrite::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_BrainCrashManager.BP_BrainCrashManager_C.PrivateSetupBrainFieldOverwrite
// 0x0030 (0x0030 - 0x0000)
struct BP_BrainCrashManager_C_PrivateSetupBrainFieldOverwrite final
{
public:
	class AActor*                                 BrainFieldUser;                                    // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ARSCharacterBase*>               BrainCrashEnemyList;                               // 0x0008(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	class ABP_EnemyManager_C*                     EnemyManager;                                      // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameSystemManager_C*                CallFunc_GetGameSystemManager_Manager;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C2A[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetGlobalCustomTimeDilation_CurrentCustomTimeDilation; // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrainCrashManager_C_PrivateSetupBrainFieldOverwrite) == 0x000008, "Wrong alignment on BP_BrainCrashManager_C_PrivateSetupBrainFieldOverwrite");
static_assert(sizeof(BP_BrainCrashManager_C_PrivateSetupBrainFieldOverwrite) == 0x000030, "Wrong size on BP_BrainCrashManager_C_PrivateSetupBrainFieldOverwrite");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSetupBrainFieldOverwrite, BrainFieldUser) == 0x000000, "Member 'BP_BrainCrashManager_C_PrivateSetupBrainFieldOverwrite::BrainFieldUser' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSetupBrainFieldOverwrite, BrainCrashEnemyList) == 0x000008, "Member 'BP_BrainCrashManager_C_PrivateSetupBrainFieldOverwrite::BrainCrashEnemyList' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSetupBrainFieldOverwrite, EnemyManager) == 0x000018, "Member 'BP_BrainCrashManager_C_PrivateSetupBrainFieldOverwrite::EnemyManager' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSetupBrainFieldOverwrite, CallFunc_GetGameSystemManager_Manager) == 0x000020, "Member 'BP_BrainCrashManager_C_PrivateSetupBrainFieldOverwrite::CallFunc_GetGameSystemManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSetupBrainFieldOverwrite, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BP_BrainCrashManager_C_PrivateSetupBrainFieldOverwrite::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSetupBrainFieldOverwrite, CallFunc_SetGlobalCustomTimeDilation_CurrentCustomTimeDilation) == 0x00002C, "Member 'BP_BrainCrashManager_C_PrivateSetupBrainFieldOverwrite::CallFunc_SetGlobalCustomTimeDilation_CurrentCustomTimeDilation' has a wrong offset!");

// Function BP_BrainCrashManager.BP_BrainCrashManager_C.PrivateSetupBrainFieldRestart
// 0x0048 (0x0048 - 0x0000)
struct BP_BrainCrashManager_C_PrivateSetupBrainFieldRestart final
{
public:
	class AActor*                                 BrainFieldUser;                                    // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ARSCharacterBase*>               BrainCrashEnemyList;                               // 0x0008(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	class ABP_EnemyManager_C*                     EnemyManager;                                      // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BrainFieldManager_C*                CallFunc_GetBrainFieldManager_Manager;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameSystemManager_C*                CallFunc_GetGameSystemManager_Manager;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_RemoveGlobalCustomTimeDilation_Success;   // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsUserIsPlayer_IsPlayer;                  // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C2B[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSLevelSequenceActor*                  CallFunc_GetCurrentSequencer_Sequencer;            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue;            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrainCrashManager_C_PrivateSetupBrainFieldRestart) == 0x000008, "Wrong alignment on BP_BrainCrashManager_C_PrivateSetupBrainFieldRestart");
static_assert(sizeof(BP_BrainCrashManager_C_PrivateSetupBrainFieldRestart) == 0x000048, "Wrong size on BP_BrainCrashManager_C_PrivateSetupBrainFieldRestart");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSetupBrainFieldRestart, BrainFieldUser) == 0x000000, "Member 'BP_BrainCrashManager_C_PrivateSetupBrainFieldRestart::BrainFieldUser' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSetupBrainFieldRestart, BrainCrashEnemyList) == 0x000008, "Member 'BP_BrainCrashManager_C_PrivateSetupBrainFieldRestart::BrainCrashEnemyList' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSetupBrainFieldRestart, EnemyManager) == 0x000018, "Member 'BP_BrainCrashManager_C_PrivateSetupBrainFieldRestart::EnemyManager' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSetupBrainFieldRestart, CallFunc_GetBrainFieldManager_Manager) == 0x000020, "Member 'BP_BrainCrashManager_C_PrivateSetupBrainFieldRestart::CallFunc_GetBrainFieldManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSetupBrainFieldRestart, CallFunc_GetGameSystemManager_Manager) == 0x000028, "Member 'BP_BrainCrashManager_C_PrivateSetupBrainFieldRestart::CallFunc_GetGameSystemManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSetupBrainFieldRestart, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BP_BrainCrashManager_C_PrivateSetupBrainFieldRestart::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSetupBrainFieldRestart, CallFunc_RemoveGlobalCustomTimeDilation_Success) == 0x000031, "Member 'BP_BrainCrashManager_C_PrivateSetupBrainFieldRestart::CallFunc_RemoveGlobalCustomTimeDilation_Success' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSetupBrainFieldRestart, CallFunc_IsUserIsPlayer_IsPlayer) == 0x000032, "Member 'BP_BrainCrashManager_C_PrivateSetupBrainFieldRestart::CallFunc_IsUserIsPlayer_IsPlayer' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSetupBrainFieldRestart, CallFunc_IsValid_ReturnValue_1) == 0x000033, "Member 'BP_BrainCrashManager_C_PrivateSetupBrainFieldRestart::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSetupBrainFieldRestart, CallFunc_GetCurrentSequencer_Sequencer) == 0x000038, "Member 'BP_BrainCrashManager_C_PrivateSetupBrainFieldRestart::CallFunc_GetCurrentSequencer_Sequencer' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSetupBrainFieldRestart, CallFunc_GetSequencePlayer_ReturnValue) == 0x000040, "Member 'BP_BrainCrashManager_C_PrivateSetupBrainFieldRestart::CallFunc_GetSequencePlayer_ReturnValue' has a wrong offset!");

// Function BP_BrainCrashManager.BP_BrainCrashManager_C.PrivateStartBrainCrash
// 0x00D0 (0x00D0 - 0x0000)
struct BP_BrainCrashManager_C_PrivateStartBrainCrash final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C2C[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUDMainGame_C*                         CallFunc_GetHUDMainGame_HUDMainGame;               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IRSGameModeBPInterface_C> K2Node_DynamicCast_AsRSGame_Mode_BPInterface;      // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C2D[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_GetMainPlayerBP_Player;                   // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C2E[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattlePlayer_C*                      K2Node_DynamicCast_AsRSBattle_Player;              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C2F[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSLevelSequenceActor*                  CallFunc_GetCurrentSequencer_Sequencer;            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class ICameraInterface>      CallFunc_GetPlayerCameraFieldOfView_self_CastInput; // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetPlayerCameraFieldOfView_ReturnValue;   // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C30[0x4];                                     // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue;            // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlaying_ReturnValue;                    // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C31[0x6];                                     // 0x007A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_EnemyManager_C*                     CallFunc_GetEnemyManager_Manager;                  // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BrainCrash_C>     K2Node_DynamicCast_AsBPI_Brain_Crash;              // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C32[0x7];                                     // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ARSCharacterBase*>               CallFunc_GetBrainCrashTarget_TargetsList;          // 0x00A0(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C33[0x7];                                     // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSLevelSequenceActor*                  CallFunc_GetCurrentSequencer_Sequencer_1;          // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue_1;          // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BrainCrashManager_C_PrivateStartBrainCrash) == 0x000008, "Wrong alignment on BP_BrainCrashManager_C_PrivateStartBrainCrash");
static_assert(sizeof(BP_BrainCrashManager_C_PrivateStartBrainCrash) == 0x0000D0, "Wrong size on BP_BrainCrashManager_C_PrivateStartBrainCrash");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateStartBrainCrash, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_BrainCrashManager_C_PrivateStartBrainCrash::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateStartBrainCrash, CallFunc_GetHUDMainGame_HUDMainGame) == 0x000008, "Member 'BP_BrainCrashManager_C_PrivateStartBrainCrash::CallFunc_GetHUDMainGame_HUDMainGame' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateStartBrainCrash, CallFunc_GetGameMode_ReturnValue) == 0x000010, "Member 'BP_BrainCrashManager_C_PrivateStartBrainCrash::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateStartBrainCrash, K2Node_DynamicCast_AsRSGame_Mode_BPInterface) == 0x000018, "Member 'BP_BrainCrashManager_C_PrivateStartBrainCrash::K2Node_DynamicCast_AsRSGame_Mode_BPInterface' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateStartBrainCrash, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_BrainCrashManager_C_PrivateStartBrainCrash::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateStartBrainCrash, CallFunc_GetMainPlayerBP_Player) == 0x000030, "Member 'BP_BrainCrashManager_C_PrivateStartBrainCrash::CallFunc_GetMainPlayerBP_Player' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateStartBrainCrash, CallFunc_IsValid_ReturnValue_1) == 0x000038, "Member 'BP_BrainCrashManager_C_PrivateStartBrainCrash::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateStartBrainCrash, K2Node_DynamicCast_AsRSBattle_Player) == 0x000040, "Member 'BP_BrainCrashManager_C_PrivateStartBrainCrash::K2Node_DynamicCast_AsRSBattle_Player' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateStartBrainCrash, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'BP_BrainCrashManager_C_PrivateStartBrainCrash::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateStartBrainCrash, CallFunc_GetCurrentSequencer_Sequencer) == 0x000050, "Member 'BP_BrainCrashManager_C_PrivateStartBrainCrash::CallFunc_GetCurrentSequencer_Sequencer' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateStartBrainCrash, CallFunc_GetPlayerCameraFieldOfView_self_CastInput) == 0x000058, "Member 'BP_BrainCrashManager_C_PrivateStartBrainCrash::CallFunc_GetPlayerCameraFieldOfView_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateStartBrainCrash, CallFunc_GetPlayerCameraFieldOfView_ReturnValue) == 0x000068, "Member 'BP_BrainCrashManager_C_PrivateStartBrainCrash::CallFunc_GetPlayerCameraFieldOfView_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateStartBrainCrash, CallFunc_GetSequencePlayer_ReturnValue) == 0x000070, "Member 'BP_BrainCrashManager_C_PrivateStartBrainCrash::CallFunc_GetSequencePlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateStartBrainCrash, CallFunc_IsPlaying_ReturnValue) == 0x000078, "Member 'BP_BrainCrashManager_C_PrivateStartBrainCrash::CallFunc_IsPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateStartBrainCrash, CallFunc_IsValid_ReturnValue_2) == 0x000079, "Member 'BP_BrainCrashManager_C_PrivateStartBrainCrash::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateStartBrainCrash, CallFunc_GetEnemyManager_Manager) == 0x000080, "Member 'BP_BrainCrashManager_C_PrivateStartBrainCrash::CallFunc_GetEnemyManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateStartBrainCrash, K2Node_DynamicCast_AsBPI_Brain_Crash) == 0x000088, "Member 'BP_BrainCrashManager_C_PrivateStartBrainCrash::K2Node_DynamicCast_AsBPI_Brain_Crash' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateStartBrainCrash, K2Node_DynamicCast_bSuccess_2) == 0x000098, "Member 'BP_BrainCrashManager_C_PrivateStartBrainCrash::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateStartBrainCrash, CallFunc_GetBrainCrashTarget_TargetsList) == 0x0000A0, "Member 'BP_BrainCrashManager_C_PrivateStartBrainCrash::CallFunc_GetBrainCrashTarget_TargetsList' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateStartBrainCrash, CallFunc_IsValid_ReturnValue_3) == 0x0000B0, "Member 'BP_BrainCrashManager_C_PrivateStartBrainCrash::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateStartBrainCrash, CallFunc_GetCurrentSequencer_Sequencer_1) == 0x0000B8, "Member 'BP_BrainCrashManager_C_PrivateStartBrainCrash::CallFunc_GetCurrentSequencer_Sequencer_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateStartBrainCrash, CallFunc_GetSequencePlayer_ReturnValue_1) == 0x0000C0, "Member 'BP_BrainCrashManager_C_PrivateStartBrainCrash::CallFunc_GetSequencePlayer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateStartBrainCrash, CallFunc_IsValid_ReturnValue_4) == 0x0000C8, "Member 'BP_BrainCrashManager_C_PrivateStartBrainCrash::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");

// Function BP_BrainCrashManager.BP_BrainCrashManager_C.PrivatePlayBrainCrashSequencer
// 0x0530 (0x0530 - 0x0000)
struct BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer final
{
public:
	class ARSCharacterBase*                       RightPlayer;                                       // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSCharacterBase*                       LeftPlayer;                                        // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSCharacterBase*                       MainPlayer;                                        // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SetupSequencer;                                    // 0x0018(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C34[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFBrainCrashSequencerInfo              CallFunc_GetCurrentBrainCrashSequencerInfo_BrainCrashSequencerInfo; // 0x0028(0x0040)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C35[0x4];                                     // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSLevelSequenceActor*                  CallFunc_GetCurrentSequencer_Sequencer;            // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetSequenceInSpawnedActorListFromClass_ReturnValue; // 0x0078(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C36[0x4];                                     // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C37[0x7];                                     // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACineCameraActor*                       K2Node_DynamicCast_AsCine________;                 // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C38[0x3];                                     // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTargetSearchComponent*                 CallFunc_GetTargetSearchComponentFromActor_ReturnValue; // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C39[0x7];                                     // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue;            // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLockTarget_ReturnValue;                 // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C3A[0x7];                                     // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_BoolToText_ReturnValue;              // 0x00D0(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x00E8(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0128(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C3B[0x7];                                     // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0140(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0158(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLastBrainCrash_IsLast;                  // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C3C[0x7];                                     // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BrainFieldManager_C*                CallFunc_GetBrainFieldManager_Manager;             // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_InBranField_InBrainDield;                 // 0x0179(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C3D[0x2];                                     // 0x017A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C3E[0x3];                                     // 0x0181(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0188(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C3F[0x3];                                     // 0x0199(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x019C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IEventInterface>       K2Node_DynamicCast_AsEvent_Interface;              // 0x01A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C40[0x3];                                     // 0x01B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult;      // 0x01BC(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue;         // 0x0244(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0245(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsCrashTargetSeeThroughStealth_SeeThroughStealth; // 0x0246(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0247(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0249(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C41[0x2];                                     // 0x024A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x024C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C42[0x3];                                     // 0x0251(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0254(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C43[0x4];                                     // 0x025C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ICameraInterface>      K2Node_DynamicCast_AsCamera_Interface;             // 0x0260(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C44[0x7];                                     // 0x0271(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ICameraInterface>      K2Node_DynamicCast_AsCamera_Interface_1;           // 0x0278(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C45[0x3];                                     // 0x0289(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_GetPlayerCameraRotation_ReturnValue;      // 0x028C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetPlayerCameraLocation_ReturnValue;      // 0x0298(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C46[0x4];                                     // 0x02A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerInterface_C> K2Node_DynamicCast_AsBPI_Player_Interface;         // 0x02A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x02B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C47[0x7];                                     // 0x02B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetBrainCrashStartTransform_Transform;    // 0x02C0(0x0030)(IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x02F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x02F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x02F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C48[0x7];                                     // 0x02F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FText>                           K2Node_MakeArray_Array_1;                          // 0x0300(0x0010)(ReferenceParm, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0310(0x0030)(IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0340(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C49[0x4];                                     // 0x0344(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ICameraInterface>      K2Node_DynamicCast_AsCamera_Interface_2;           // 0x0348(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0358(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C4A[0x3];                                     // 0x0359(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPlayerCameraFieldOfView_ReturnValue;   // 0x035C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class ICameraInterface>      K2Node_DynamicCast_AsCamera_Interface_3;           // 0x0360(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x0370(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C4B[0x3];                                     // 0x0371(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_GetPlayerCameraRotation_ReturnValue_1;    // 0x0374(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class ICameraInterface>      K2Node_DynamicCast_AsCamera_Interface_4;           // 0x0380(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x0390(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C4C[0x3];                                     // 0x0391(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetPlayerCameraLocation_ReturnValue_1;    // 0x0394(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x03A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C4D[0xF];                                     // 0x03A1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x03B0(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetWorldTransform_SweepHitResult;      // 0x03E0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x0468(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C4E[0x3];                                     // 0x0469(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x046C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0470(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x0478(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C4F[0x3];                                     // 0x0479(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x047C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattlePlayer_C*                      K2Node_DynamicCast_AsRSBattle_Player;              // 0x0480(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x0488(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C50[0x7];                                     // 0x0489(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0490(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSCharacterBase*                       CallFunc_GetPlayer_ReturnValue;                    // 0x0498(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBPC_OptimizeSwitchMaterial_C*          CallFunc_GetOptimizeMaterialSwitcher_OptimizeSwitchComp; // 0x04A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSCharacterBase*                       CallFunc_GetPlayer_ReturnValue_1;                  // 0x04A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSCharacterBase*                       CallFunc_GetPlayer_ReturnValue_2;                  // 0x04B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x04B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x04BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C51[0x3];                                     // 0x04BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FMovieSceneObjectBindingID>     CallFunc_GetSequenceObjectBindingIDList_OutBindingIDList; // 0x04C0(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_GetSequenceObjectBindingIDList_IsFind;    // 0x04D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C52[0x3];                                     // 0x04D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x04D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_SASManager_C*                       CallFunc_GetSASManager_SAS_Manager;                // 0x04D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCutInPlaying_Playing;                   // 0x04E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C53[0x7];                                     // 0x04E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_CutinManager_C*                     CallFunc_GetCutinManager_CutinManager;             // 0x04E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x04F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C54[0x7];                                     // 0x04F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_MakeArray_Array_2;                          // 0x04F8(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_3;                          // 0x0508(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0518(0x0018)()
};
static_assert(alignof(BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer) == 0x000010, "Wrong alignment on BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer");
static_assert(sizeof(BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer) == 0x000530, "Wrong size on BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer, RightPlayer) == 0x000000, "Member 'BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer::RightPlayer' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer, LeftPlayer) == 0x000008, "Member 'BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer::LeftPlayer' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer, MainPlayer) == 0x000010, "Member 'BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer::MainPlayer' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer, SetupSequencer) == 0x000018, "Member 'BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer::SetupSequencer' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer, CallFunc_GetCurrentBrainCrashSequencerInfo_BrainCrashSequencerInfo) == 0x000028, "Member 'BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer::CallFunc_GetCurrentBrainCrashSequencerInfo_BrainCrashSequencerInfo' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer, CallFunc_Array_Length_ReturnValue_1) == 0x000068, "Member 'BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer, CallFunc_GetCurrentSequencer_Sequencer) == 0x000070, "Member 'BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer::CallFunc_GetCurrentSequencer_Sequencer' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer, CallFunc_GetSequenceInSpawnedActorListFromClass_ReturnValue) == 0x000078, "Member 'BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer::CallFunc_GetSequenceInSpawnedActorListFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer, CallFunc_Array_Length_ReturnValue_2) == 0x000088, "Member 'BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer, CallFunc_Array_Get_Item) == 0x000090, "Member 'BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000098, "Member 'BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer, K2Node_DynamicCast_AsCine________) == 0x0000A0, "Member 'BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer::K2Node_DynamicCast_AsCine________' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer, K2Node_DynamicCast_bSuccess) == 0x0000A8, "Member 'BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer, Temp_int_Array_Index_Variable) == 0x0000AC, "Member 'BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer, CallFunc_GetTargetSearchComponentFromActor_ReturnValue) == 0x0000B0, "Member 'BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer::CallFunc_GetTargetSearchComponentFromActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer, CallFunc_IsValid_ReturnValue) == 0x0000B8, "Member 'BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer, CallFunc_GetSequencePlayer_ReturnValue) == 0x0000C0, "Member 'BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer::CallFunc_GetSequencePlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer, CallFunc_IsLockTarget_ReturnValue) == 0x0000C8, "Member 'BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer::CallFunc_IsLockTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer, CallFunc_Conv_BoolToText_ReturnValue) == 0x0000D0, "Member 'BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer::CallFunc_Conv_BoolToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer, K2Node_MakeStruct_FormatArgumentData) == 0x0000E8, "Member 'BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer, K2Node_MakeArray_Array) == 0x000128, "Member 'BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer, CallFunc_IsValid_ReturnValue_1) == 0x000138, "Member 'BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer, CallFunc_Format_ReturnValue) == 0x000140, "Member 'BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer, CallFunc_Conv_TextToString_ReturnValue) == 0x000158, "Member 'BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer, CallFunc_IsLastBrainCrash_IsLast) == 0x000168, "Member 'BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer::CallFunc_IsLastBrainCrash_IsLast' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer, CallFunc_GetBrainFieldManager_Manager) == 0x000170, "Member 'BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer::CallFunc_GetBrainFieldManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer, CallFunc_IsValid_ReturnValue_2) == 0x000178, "Member 'BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer, CallFunc_InBranField_InBrainDield) == 0x000179, "Member 'BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer::CallFunc_InBranField_InBrainDield' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer, Temp_int_Loop_Counter_Variable_1) == 0x00017C, "Member 'BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer, CallFunc_Less_IntInt_ReturnValue) == 0x000180, "Member 'BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer, CallFunc_Add_IntInt_ReturnValue_1) == 0x000184, "Member 'BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer, K2Node_CreateDelegate_OutputDelegate) == 0x000188, "Member 'BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer, CallFunc_IsValid_ReturnValue_3) == 0x000198, "Member 'BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00019C, "Member 'BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer, K2Node_DynamicCast_AsEvent_Interface) == 0x0001A8, "Member 'BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer::K2Node_DynamicCast_AsEvent_Interface' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer, K2Node_DynamicCast_bSuccess_1) == 0x0001B8, "Member 'BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer, CallFunc_K2_SetActorTransform_SweepHitResult) == 0x0001BC, "Member 'BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer::CallFunc_K2_SetActorTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer, CallFunc_K2_SetActorTransform_ReturnValue) == 0x000244, "Member 'BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer::CallFunc_K2_SetActorTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer, CallFunc_IsValid_ReturnValue_4) == 0x000245, "Member 'BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer, CallFunc_IsCrashTargetSeeThroughStealth_SeeThroughStealth) == 0x000246, "Member 'BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer::CallFunc_IsCrashTargetSeeThroughStealth_SeeThroughStealth' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer, CallFunc_Not_PreBool_ReturnValue) == 0x000247, "Member 'BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer, CallFunc_BooleanOR_ReturnValue) == 0x000248, "Member 'BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer, CallFunc_BooleanOR_ReturnValue_1) == 0x000249, "Member 'BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer, Temp_int_Loop_Counter_Variable_2) == 0x00024C, "Member 'BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer, CallFunc_Less_IntInt_ReturnValue_1) == 0x000250, "Member 'BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer, CallFunc_Add_IntInt_ReturnValue_2) == 0x000254, "Member 'BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer, CallFunc_Array_Add_ReturnValue) == 0x000258, "Member 'BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer, K2Node_DynamicCast_AsCamera_Interface) == 0x000260, "Member 'BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer::K2Node_DynamicCast_AsCamera_Interface' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer, K2Node_DynamicCast_bSuccess_2) == 0x000270, "Member 'BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer, K2Node_DynamicCast_AsCamera_Interface_1) == 0x000278, "Member 'BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer::K2Node_DynamicCast_AsCamera_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer, K2Node_DynamicCast_bSuccess_3) == 0x000288, "Member 'BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer, CallFunc_GetPlayerCameraRotation_ReturnValue) == 0x00028C, "Member 'BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer::CallFunc_GetPlayerCameraRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer, CallFunc_GetPlayerCameraLocation_ReturnValue) == 0x000298, "Member 'BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer::CallFunc_GetPlayerCameraLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer, K2Node_DynamicCast_AsBPI_Player_Interface) == 0x0002A8, "Member 'BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer::K2Node_DynamicCast_AsBPI_Player_Interface' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer, K2Node_DynamicCast_bSuccess_4) == 0x0002B8, "Member 'BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer, CallFunc_GetBrainCrashStartTransform_Transform) == 0x0002C0, "Member 'BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer::CallFunc_GetBrainCrashStartTransform_Transform' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer, Temp_int_Loop_Num_Variable) == 0x0002F0, "Member 'BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer, Temp_int_Array_Index_Variable_1) == 0x0002F4, "Member 'BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer, CallFunc_Less_IntInt_ReturnValue_2) == 0x0002F8, "Member 'BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer, K2Node_MakeArray_Array_1) == 0x000300, "Member 'BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer, CallFunc_MakeTransform_ReturnValue) == 0x000310, "Member 'BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer, Temp_int_Array_Index_Variable_2) == 0x000340, "Member 'BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer, K2Node_DynamicCast_AsCamera_Interface_2) == 0x000348, "Member 'BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer::K2Node_DynamicCast_AsCamera_Interface_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer, K2Node_DynamicCast_bSuccess_5) == 0x000358, "Member 'BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer, CallFunc_GetPlayerCameraFieldOfView_ReturnValue) == 0x00035C, "Member 'BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer::CallFunc_GetPlayerCameraFieldOfView_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer, K2Node_DynamicCast_AsCamera_Interface_3) == 0x000360, "Member 'BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer::K2Node_DynamicCast_AsCamera_Interface_3' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer, K2Node_DynamicCast_bSuccess_6) == 0x000370, "Member 'BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer, CallFunc_GetPlayerCameraRotation_ReturnValue_1) == 0x000374, "Member 'BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer::CallFunc_GetPlayerCameraRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer, K2Node_DynamicCast_AsCamera_Interface_4) == 0x000380, "Member 'BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer::K2Node_DynamicCast_AsCamera_Interface_4' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer, K2Node_DynamicCast_bSuccess_7) == 0x000390, "Member 'BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer, CallFunc_GetPlayerCameraLocation_ReturnValue_1) == 0x000394, "Member 'BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer::CallFunc_GetPlayerCameraLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer, CallFunc_IsValid_ReturnValue_5) == 0x0003A0, "Member 'BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer, CallFunc_MakeTransform_ReturnValue_1) == 0x0003B0, "Member 'BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer, CallFunc_K2_SetWorldTransform_SweepHitResult) == 0x0003E0, "Member 'BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer::CallFunc_K2_SetWorldTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer, CallFunc_IsValid_ReturnValue_6) == 0x000468, "Member 'BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer, Temp_int_Loop_Counter_Variable_3) == 0x00046C, "Member 'BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer, CallFunc_GetPlayerController_ReturnValue) == 0x000470, "Member 'BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer, CallFunc_Less_IntInt_ReturnValue_3) == 0x000478, "Member 'BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer, CallFunc_Add_IntInt_ReturnValue_3) == 0x00047C, "Member 'BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer, K2Node_DynamicCast_AsRSBattle_Player) == 0x000480, "Member 'BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer::K2Node_DynamicCast_AsRSBattle_Player' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer, K2Node_DynamicCast_bSuccess_8) == 0x000488, "Member 'BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer, CallFunc_GetPlayerManager_PlayerManager) == 0x000490, "Member 'BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer, CallFunc_GetPlayer_ReturnValue) == 0x000498, "Member 'BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer::CallFunc_GetPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer, CallFunc_GetOptimizeMaterialSwitcher_OptimizeSwitchComp) == 0x0004A0, "Member 'BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer::CallFunc_GetOptimizeMaterialSwitcher_OptimizeSwitchComp' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer, CallFunc_GetPlayer_ReturnValue_1) == 0x0004A8, "Member 'BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer::CallFunc_GetPlayer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer, CallFunc_GetPlayer_ReturnValue_2) == 0x0004B0, "Member 'BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer::CallFunc_GetPlayer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer, Temp_int_Array_Index_Variable_3) == 0x0004B8, "Member 'BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0004BC, "Member 'BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer, CallFunc_GetSequenceObjectBindingIDList_OutBindingIDList) == 0x0004C0, "Member 'BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer::CallFunc_GetSequenceObjectBindingIDList_OutBindingIDList' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer, CallFunc_GetSequenceObjectBindingIDList_IsFind) == 0x0004D0, "Member 'BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer::CallFunc_GetSequenceObjectBindingIDList_IsFind' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer, CallFunc_Array_Length_ReturnValue_3) == 0x0004D4, "Member 'BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer, CallFunc_GetSASManager_SAS_Manager) == 0x0004D8, "Member 'BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer::CallFunc_GetSASManager_SAS_Manager' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer, CallFunc_IsCutInPlaying_Playing) == 0x0004E0, "Member 'BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer::CallFunc_IsCutInPlaying_Playing' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer, CallFunc_GetCutinManager_CutinManager) == 0x0004E8, "Member 'BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer::CallFunc_GetCutinManager_CutinManager' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer, CallFunc_IsValid_ReturnValue_7) == 0x0004F0, "Member 'BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer, K2Node_MakeArray_Array_2) == 0x0004F8, "Member 'BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer, K2Node_MakeArray_Array_3) == 0x000508, "Member 'BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer, CallFunc_Format_ReturnValue_1) == 0x000518, "Member 'BP_BrainCrashManager_C_PrivatePlayBrainCrashSequencer::CallFunc_Format_ReturnValue_1' has a wrong offset!");

// Function BP_BrainCrashManager.BP_BrainCrashManager_C.PrivateUpdate
// 0x0120 (0x0120 - 0x0000)
struct BP_BrainCrashManager_C_PrivateUpdate final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DitherFinish;                                      // 0x0004(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C55[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       MainPlayer;                                        // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URSAtomComponentBase*                   CallFunc_SpawnSoundAtLocationRS_ReturnValue;       // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHUDMainGame_C*                         CallFunc_GetHUDMainGame_HUDMainGame;               // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C56[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GameSystemManager_C*                CallFunc_GetGameSystemManager_Manager;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurrentCustomTimeDilation_CustomTimeDilation; // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayerInputCrashVision_bInput;          // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C57[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeRange_MinTime;                     // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeRange_MaxTime;                     // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C58[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSLevelSequenceActor*                  CallFunc_GetCurrentSequencer_Sequencer;            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue;            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlaying_ReturnValue;                    // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x006B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsTriggerInputStatus_ReturnValue;         // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C59[0x3];                                     // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C5A[0x4];                                     // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_GetPlayer_ReturnValue;                    // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattlePlayer_C*                      K2Node_DynamicCast_AsRSBattle_Player;              // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C5B[0x2];                                     // 0x0092(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C5C[0x6];                                     // 0x009A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x00A0(0x0030)(IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_PrivateUpdateDither_Finish;               // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C5D[0x3];                                     // 0x00D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C5E[0x3];                                     // 0x00DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C5F[0xB];                                     // 0x00E5(0x000B)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue_1;         // 0x00F0(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BrainCrashManager_C_PrivateUpdate) == 0x000010, "Wrong alignment on BP_BrainCrashManager_C_PrivateUpdate");
static_assert(sizeof(BP_BrainCrashManager_C_PrivateUpdate) == 0x000120, "Wrong size on BP_BrainCrashManager_C_PrivateUpdate");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdate, DeltaSeconds) == 0x000000, "Member 'BP_BrainCrashManager_C_PrivateUpdate::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdate, DitherFinish) == 0x000004, "Member 'BP_BrainCrashManager_C_PrivateUpdate::DitherFinish' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdate, MainPlayer) == 0x000008, "Member 'BP_BrainCrashManager_C_PrivateUpdate::MainPlayer' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdate, CallFunc_SpawnSoundAtLocationRS_ReturnValue) == 0x000010, "Member 'BP_BrainCrashManager_C_PrivateUpdate::CallFunc_SpawnSoundAtLocationRS_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdate, CallFunc_GetHUDMainGame_HUDMainGame) == 0x000018, "Member 'BP_BrainCrashManager_C_PrivateUpdate::CallFunc_GetHUDMainGame_HUDMainGame' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdate, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_BrainCrashManager_C_PrivateUpdate::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdate, CallFunc_GetGameSystemManager_Manager) == 0x000028, "Member 'BP_BrainCrashManager_C_PrivateUpdate::CallFunc_GetGameSystemManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdate, CallFunc_GetCurrentCustomTimeDilation_CustomTimeDilation) == 0x000030, "Member 'BP_BrainCrashManager_C_PrivateUpdate::CallFunc_GetCurrentCustomTimeDilation_CustomTimeDilation' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdate, CallFunc_IsPlayerInputCrashVision_bInput) == 0x000034, "Member 'BP_BrainCrashManager_C_PrivateUpdate::CallFunc_IsPlayerInputCrashVision_bInput' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdate, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000038, "Member 'BP_BrainCrashManager_C_PrivateUpdate::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdate, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00003C, "Member 'BP_BrainCrashManager_C_PrivateUpdate::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdate, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000040, "Member 'BP_BrainCrashManager_C_PrivateUpdate::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdate, CallFunc_GetTimeRange_MinTime) == 0x000044, "Member 'BP_BrainCrashManager_C_PrivateUpdate::CallFunc_GetTimeRange_MinTime' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdate, CallFunc_GetTimeRange_MaxTime) == 0x000048, "Member 'BP_BrainCrashManager_C_PrivateUpdate::CallFunc_GetTimeRange_MaxTime' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdate, CallFunc_Add_FloatFloat_ReturnValue) == 0x00004C, "Member 'BP_BrainCrashManager_C_PrivateUpdate::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdate, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000050, "Member 'BP_BrainCrashManager_C_PrivateUpdate::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdate, CallFunc_GetCurrentSequencer_Sequencer) == 0x000058, "Member 'BP_BrainCrashManager_C_PrivateUpdate::CallFunc_GetCurrentSequencer_Sequencer' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdate, CallFunc_GetSequencePlayer_ReturnValue) == 0x000060, "Member 'BP_BrainCrashManager_C_PrivateUpdate::CallFunc_GetSequencePlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdate, CallFunc_IsValid_ReturnValue_1) == 0x000068, "Member 'BP_BrainCrashManager_C_PrivateUpdate::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdate, CallFunc_IsValid_ReturnValue_2) == 0x000069, "Member 'BP_BrainCrashManager_C_PrivateUpdate::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdate, CallFunc_IsPlaying_ReturnValue) == 0x00006A, "Member 'BP_BrainCrashManager_C_PrivateUpdate::CallFunc_IsPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdate, CallFunc_IsValid_ReturnValue_3) == 0x00006B, "Member 'BP_BrainCrashManager_C_PrivateUpdate::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdate, CallFunc_IsTriggerInputStatus_ReturnValue) == 0x00006C, "Member 'BP_BrainCrashManager_C_PrivateUpdate::CallFunc_IsTriggerInputStatus_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdate, CallFunc_GetPlayerManager_PlayerManager) == 0x000070, "Member 'BP_BrainCrashManager_C_PrivateUpdate::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdate, Temp_int_Loop_Num_Variable) == 0x000078, "Member 'BP_BrainCrashManager_C_PrivateUpdate::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdate, CallFunc_GetPlayer_ReturnValue) == 0x000080, "Member 'BP_BrainCrashManager_C_PrivateUpdate::CallFunc_GetPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdate, K2Node_DynamicCast_AsRSBattle_Player) == 0x000088, "Member 'BP_BrainCrashManager_C_PrivateUpdate::K2Node_DynamicCast_AsRSBattle_Player' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdate, K2Node_DynamicCast_bSuccess) == 0x000090, "Member 'BP_BrainCrashManager_C_PrivateUpdate::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdate, CallFunc_IsValid_ReturnValue_4) == 0x000091, "Member 'BP_BrainCrashManager_C_PrivateUpdate::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdate, Temp_int_Array_Index_Variable) == 0x000094, "Member 'BP_BrainCrashManager_C_PrivateUpdate::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdate, CallFunc_IsValid_ReturnValue_5) == 0x000098, "Member 'BP_BrainCrashManager_C_PrivateUpdate::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdate, CallFunc_IsValid_ReturnValue_6) == 0x000099, "Member 'BP_BrainCrashManager_C_PrivateUpdate::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdate, CallFunc_GetSocketTransform_ReturnValue) == 0x0000A0, "Member 'BP_BrainCrashManager_C_PrivateUpdate::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdate, CallFunc_Array_Length_ReturnValue) == 0x0000D0, "Member 'BP_BrainCrashManager_C_PrivateUpdate::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdate, CallFunc_PrivateUpdateDither_Finish) == 0x0000D4, "Member 'BP_BrainCrashManager_C_PrivateUpdate::CallFunc_PrivateUpdateDither_Finish' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdate, Temp_int_Loop_Counter_Variable) == 0x0000D8, "Member 'BP_BrainCrashManager_C_PrivateUpdate::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdate, CallFunc_Less_IntInt_ReturnValue) == 0x0000DC, "Member 'BP_BrainCrashManager_C_PrivateUpdate::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdate, CallFunc_Add_IntInt_ReturnValue) == 0x0000E0, "Member 'BP_BrainCrashManager_C_PrivateUpdate::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdate, CallFunc_IsValid_ReturnValue_7) == 0x0000E4, "Member 'BP_BrainCrashManager_C_PrivateUpdate::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdate, CallFunc_GetSocketTransform_ReturnValue_1) == 0x0000F0, "Member 'BP_BrainCrashManager_C_PrivateUpdate::CallFunc_GetSocketTransform_ReturnValue_1' has a wrong offset!");

// Function BP_BrainCrashManager.BP_BrainCrashManager_C.IsPlayingUniqueBrainCrash
// 0x0003 (0x0003 - 0x0000)
struct BP_BrainCrashManager_C_IsPlayingUniqueBrainCrash final
{
public:
	bool                                          IsUnique;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BrainCrashManager_C_IsPlayingUniqueBrainCrash) == 0x000001, "Wrong alignment on BP_BrainCrashManager_C_IsPlayingUniqueBrainCrash");
static_assert(sizeof(BP_BrainCrashManager_C_IsPlayingUniqueBrainCrash) == 0x000003, "Wrong size on BP_BrainCrashManager_C_IsPlayingUniqueBrainCrash");
static_assert(offsetof(BP_BrainCrashManager_C_IsPlayingUniqueBrainCrash, IsUnique) == 0x000000, "Member 'BP_BrainCrashManager_C_IsPlayingUniqueBrainCrash::IsUnique' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_IsPlayingUniqueBrainCrash, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'BP_BrainCrashManager_C_IsPlayingUniqueBrainCrash::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_IsPlayingUniqueBrainCrash, CallFunc_BooleanAND_ReturnValue) == 0x000002, "Member 'BP_BrainCrashManager_C_IsPlayingUniqueBrainCrash::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_BrainCrashManager.BP_BrainCrashManager_C.IsPlayingGeneralBrainCrash
// 0x0002 (0x0002 - 0x0000)
struct BP_BrainCrashManager_C_IsPlayingGeneralBrainCrash final
{
public:
	bool                                          IsGeneral;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BrainCrashManager_C_IsPlayingGeneralBrainCrash) == 0x000001, "Wrong alignment on BP_BrainCrashManager_C_IsPlayingGeneralBrainCrash");
static_assert(sizeof(BP_BrainCrashManager_C_IsPlayingGeneralBrainCrash) == 0x000002, "Wrong size on BP_BrainCrashManager_C_IsPlayingGeneralBrainCrash");
static_assert(offsetof(BP_BrainCrashManager_C_IsPlayingGeneralBrainCrash, IsGeneral) == 0x000000, "Member 'BP_BrainCrashManager_C_IsPlayingGeneralBrainCrash::IsGeneral' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_IsPlayingGeneralBrainCrash, CallFunc_BooleanAND_ReturnValue) == 0x000001, "Member 'BP_BrainCrashManager_C_IsPlayingGeneralBrainCrash::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_BrainCrashManager.BP_BrainCrashManager_C.PrivateInitialize
// 0x0490 (0x0490 - 0x0000)
struct BP_BrainCrashManager_C_PrivateInitialize final
{
public:
	class ABP_EventManager_C*                     EventManager;                                      // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C60[0x8];                                     // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0010(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x0040(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1; // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_EventCameraRoot_C*                  CallFunc_FinishSpawningActor_ReturnValue;          // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_EventCameraRoot_C*                  CallFunc_FinishSpawningActor_ReturnValue_1;        // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C61[0xF];                                     // 0x0091(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_2;              // 0x00A0(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_2; // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C62[0x8];                                     // 0x00D8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_3;              // 0x00E0(0x0030)(IsPlainOldData, NoDestructor)
	class ABP_EventCameraRoot_C*                  CallFunc_FinishSpawningActor_ReturnValue_2;        // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_3; // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_4;              // 0x0120(0x0030)(IsPlainOldData, NoDestructor)
	class ABP_CutinManager_C*                     CallFunc_FinishSpawningActor_ReturnValue_3;        // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C63[0x8];                                     // 0x0158(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_5;              // 0x0160(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_4; // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSLevelSequenceActor*                  CallFunc_FinishSpawningActor_ReturnValue_4;        // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_1;            // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_2;            // 0x01A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C64[0x6];                                     // 0x01A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_EventManager_C*                     CallFunc_GetEventManager_EventManager;             // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C65[0xF];                                     // 0x01B1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_6;              // 0x01C0(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_5; // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x01F8(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class ABP_EventCameraRoot_C*                  CallFunc_FinishSpawningActor_ReturnValue_5;        // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_7;              // 0x0210(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_6; // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_EventManager_C*                     CallFunc_GetEventManager_EventManager_1;           // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACineCameraActor*                       CallFunc_FinishSpawningActor_ReturnValue_6;        // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C66[0x7];                                     // 0x0259(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_8;              // 0x0260(0x0030)(IsPlainOldData, NoDestructor)
	TArray<class AActor*>                         K2Node_MakeArray_Array_1;                          // 0x0290(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_7; // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_3;            // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C67[0x7];                                     // 0x02A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSLevelSequenceActor*                  CallFunc_FinishSpawningActor_ReturnValue_7;        // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_TriggerEffectManager_C*             CallFunc_GetTriggerEffectManager_BP_TriggerEffectManager; // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_4;            // 0x02C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C68[0x7];                                     // 0x02C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_EventManager_C*                     CallFunc_GetEventManager_EventManager_2;           // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C69[0x3];                                     // 0x02D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x02D4(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_3C6A[0xC];                                     // 0x02E4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_9;              // 0x02F0(0x0030)(IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_5;            // 0x0320(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C6B[0x7];                                     // 0x0321(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_8; // 0x0328(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_FinishSpawningActor_ReturnValue_8;        // 0x0330(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0338(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_3C6C[0x8];                                     // 0x0348(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_10;             // 0x0350(0x0030)(IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Variable;                                 // 0x0380(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C6D[0x4];                                     // 0x0384(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_9; // 0x0388(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSLevelSequenceActor*                  CallFunc_FinishSpawningActor_ReturnValue_9;        // 0x0390(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0398(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C6E[0x3];                                     // 0x0399(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x039C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_6;            // 0x03A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_7;            // 0x03A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_8;            // 0x03A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C6F[0x1];                                     // 0x03A3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x03A4(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_9;            // 0x03B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C70[0xB];                                     // 0x03B5(0x000B)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_11;             // 0x03C0(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_10; // 0x03F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_EventCameraRoot_C*                  CallFunc_FinishSpawningActor_ReturnValue_10;       // 0x03F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFBrainCrashSequencerInfo              K2Node_MakeStruct_FBrainCrashSequencerInfo;        // 0x0400(0x0040)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_11; // 0x0440(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0448(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C71[0x4];                                     // 0x044C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_FinishSpawningActor_ReturnValue_11;       // 0x0450(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BrainCrashCutinCharacter_C*         K2Node_DynamicCast_AsBP_Brain_Crash_Cutin_Character; // 0x0458(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0460(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C72[0x7];                                     // 0x0461(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_CutinManager_C*                     CallFunc_GetCutinManager_CutinManager;             // 0x0468(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_10;           // 0x0470(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C73[0x7];                                     // 0x0471(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_MakeArray_Array_2;                          // 0x0478(0x0010)(ReferenceParm, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrainCrashManager_C_PrivateInitialize) == 0x000010, "Wrong alignment on BP_BrainCrashManager_C_PrivateInitialize");
static_assert(sizeof(BP_BrainCrashManager_C_PrivateInitialize) == 0x000490, "Wrong size on BP_BrainCrashManager_C_PrivateInitialize");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateInitialize, EventManager) == 0x000000, "Member 'BP_BrainCrashManager_C_PrivateInitialize::EventManager' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateInitialize, CallFunc_MakeTransform_ReturnValue) == 0x000010, "Member 'BP_BrainCrashManager_C_PrivateInitialize::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateInitialize, CallFunc_MakeTransform_ReturnValue_1) == 0x000040, "Member 'BP_BrainCrashManager_C_PrivateInitialize::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateInitialize, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000070, "Member 'BP_BrainCrashManager_C_PrivateInitialize::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateInitialize, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1) == 0x000078, "Member 'BP_BrainCrashManager_C_PrivateInitialize::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateInitialize, CallFunc_FinishSpawningActor_ReturnValue) == 0x000080, "Member 'BP_BrainCrashManager_C_PrivateInitialize::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateInitialize, CallFunc_FinishSpawningActor_ReturnValue_1) == 0x000088, "Member 'BP_BrainCrashManager_C_PrivateInitialize::CallFunc_FinishSpawningActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateInitialize, CallFunc_MakeLiteralByte_ReturnValue) == 0x000090, "Member 'BP_BrainCrashManager_C_PrivateInitialize::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateInitialize, CallFunc_MakeTransform_ReturnValue_2) == 0x0000A0, "Member 'BP_BrainCrashManager_C_PrivateInitialize::CallFunc_MakeTransform_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateInitialize, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_2) == 0x0000D0, "Member 'BP_BrainCrashManager_C_PrivateInitialize::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateInitialize, CallFunc_MakeTransform_ReturnValue_3) == 0x0000E0, "Member 'BP_BrainCrashManager_C_PrivateInitialize::CallFunc_MakeTransform_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateInitialize, CallFunc_FinishSpawningActor_ReturnValue_2) == 0x000110, "Member 'BP_BrainCrashManager_C_PrivateInitialize::CallFunc_FinishSpawningActor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateInitialize, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_3) == 0x000118, "Member 'BP_BrainCrashManager_C_PrivateInitialize::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateInitialize, CallFunc_MakeTransform_ReturnValue_4) == 0x000120, "Member 'BP_BrainCrashManager_C_PrivateInitialize::CallFunc_MakeTransform_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateInitialize, CallFunc_FinishSpawningActor_ReturnValue_3) == 0x000150, "Member 'BP_BrainCrashManager_C_PrivateInitialize::CallFunc_FinishSpawningActor_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateInitialize, CallFunc_MakeTransform_ReturnValue_5) == 0x000160, "Member 'BP_BrainCrashManager_C_PrivateInitialize::CallFunc_MakeTransform_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateInitialize, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_4) == 0x000190, "Member 'BP_BrainCrashManager_C_PrivateInitialize::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateInitialize, CallFunc_FinishSpawningActor_ReturnValue_4) == 0x000198, "Member 'BP_BrainCrashManager_C_PrivateInitialize::CallFunc_FinishSpawningActor_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateInitialize, CallFunc_MakeLiteralByte_ReturnValue_1) == 0x0001A0, "Member 'BP_BrainCrashManager_C_PrivateInitialize::CallFunc_MakeLiteralByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateInitialize, CallFunc_MakeLiteralByte_ReturnValue_2) == 0x0001A1, "Member 'BP_BrainCrashManager_C_PrivateInitialize::CallFunc_MakeLiteralByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateInitialize, CallFunc_GetEventManager_EventManager) == 0x0001A8, "Member 'BP_BrainCrashManager_C_PrivateInitialize::CallFunc_GetEventManager_EventManager' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateInitialize, CallFunc_IsValid_ReturnValue) == 0x0001B0, "Member 'BP_BrainCrashManager_C_PrivateInitialize::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateInitialize, CallFunc_MakeTransform_ReturnValue_6) == 0x0001C0, "Member 'BP_BrainCrashManager_C_PrivateInitialize::CallFunc_MakeTransform_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateInitialize, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_5) == 0x0001F0, "Member 'BP_BrainCrashManager_C_PrivateInitialize::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateInitialize, K2Node_MakeArray_Array) == 0x0001F8, "Member 'BP_BrainCrashManager_C_PrivateInitialize::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateInitialize, CallFunc_FinishSpawningActor_ReturnValue_5) == 0x000208, "Member 'BP_BrainCrashManager_C_PrivateInitialize::CallFunc_FinishSpawningActor_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateInitialize, CallFunc_MakeTransform_ReturnValue_7) == 0x000210, "Member 'BP_BrainCrashManager_C_PrivateInitialize::CallFunc_MakeTransform_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateInitialize, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_6) == 0x000240, "Member 'BP_BrainCrashManager_C_PrivateInitialize::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateInitialize, CallFunc_GetEventManager_EventManager_1) == 0x000248, "Member 'BP_BrainCrashManager_C_PrivateInitialize::CallFunc_GetEventManager_EventManager_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateInitialize, CallFunc_FinishSpawningActor_ReturnValue_6) == 0x000250, "Member 'BP_BrainCrashManager_C_PrivateInitialize::CallFunc_FinishSpawningActor_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateInitialize, CallFunc_IsValid_ReturnValue_1) == 0x000258, "Member 'BP_BrainCrashManager_C_PrivateInitialize::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateInitialize, CallFunc_MakeTransform_ReturnValue_8) == 0x000260, "Member 'BP_BrainCrashManager_C_PrivateInitialize::CallFunc_MakeTransform_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateInitialize, K2Node_MakeArray_Array_1) == 0x000290, "Member 'BP_BrainCrashManager_C_PrivateInitialize::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateInitialize, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_7) == 0x0002A0, "Member 'BP_BrainCrashManager_C_PrivateInitialize::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateInitialize, CallFunc_MakeLiteralByte_ReturnValue_3) == 0x0002A8, "Member 'BP_BrainCrashManager_C_PrivateInitialize::CallFunc_MakeLiteralByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateInitialize, CallFunc_FinishSpawningActor_ReturnValue_7) == 0x0002B0, "Member 'BP_BrainCrashManager_C_PrivateInitialize::CallFunc_FinishSpawningActor_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateInitialize, CallFunc_GetTriggerEffectManager_BP_TriggerEffectManager) == 0x0002B8, "Member 'BP_BrainCrashManager_C_PrivateInitialize::CallFunc_GetTriggerEffectManager_BP_TriggerEffectManager' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateInitialize, CallFunc_MakeLiteralByte_ReturnValue_4) == 0x0002C0, "Member 'BP_BrainCrashManager_C_PrivateInitialize::CallFunc_MakeLiteralByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateInitialize, CallFunc_GetEventManager_EventManager_2) == 0x0002C8, "Member 'BP_BrainCrashManager_C_PrivateInitialize::CallFunc_GetEventManager_EventManager_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateInitialize, CallFunc_IsValid_ReturnValue_2) == 0x0002D0, "Member 'BP_BrainCrashManager_C_PrivateInitialize::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateInitialize, K2Node_CreateDelegate_OutputDelegate) == 0x0002D4, "Member 'BP_BrainCrashManager_C_PrivateInitialize::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateInitialize, CallFunc_MakeTransform_ReturnValue_9) == 0x0002F0, "Member 'BP_BrainCrashManager_C_PrivateInitialize::CallFunc_MakeTransform_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateInitialize, CallFunc_MakeLiteralByte_ReturnValue_5) == 0x000320, "Member 'BP_BrainCrashManager_C_PrivateInitialize::CallFunc_MakeLiteralByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateInitialize, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_8) == 0x000328, "Member 'BP_BrainCrashManager_C_PrivateInitialize::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateInitialize, CallFunc_FinishSpawningActor_ReturnValue_8) == 0x000330, "Member 'BP_BrainCrashManager_C_PrivateInitialize::CallFunc_FinishSpawningActor_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateInitialize, K2Node_CreateDelegate_OutputDelegate_1) == 0x000338, "Member 'BP_BrainCrashManager_C_PrivateInitialize::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateInitialize, CallFunc_MakeTransform_ReturnValue_10) == 0x000350, "Member 'BP_BrainCrashManager_C_PrivateInitialize::CallFunc_MakeTransform_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateInitialize, Temp_int_Variable) == 0x000380, "Member 'BP_BrainCrashManager_C_PrivateInitialize::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateInitialize, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_9) == 0x000388, "Member 'BP_BrainCrashManager_C_PrivateInitialize::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateInitialize, CallFunc_FinishSpawningActor_ReturnValue_9) == 0x000390, "Member 'BP_BrainCrashManager_C_PrivateInitialize::CallFunc_FinishSpawningActor_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateInitialize, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000398, "Member 'BP_BrainCrashManager_C_PrivateInitialize::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateInitialize, CallFunc_Add_IntInt_ReturnValue) == 0x00039C, "Member 'BP_BrainCrashManager_C_PrivateInitialize::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateInitialize, CallFunc_MakeLiteralByte_ReturnValue_6) == 0x0003A0, "Member 'BP_BrainCrashManager_C_PrivateInitialize::CallFunc_MakeLiteralByte_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateInitialize, CallFunc_MakeLiteralByte_ReturnValue_7) == 0x0003A1, "Member 'BP_BrainCrashManager_C_PrivateInitialize::CallFunc_MakeLiteralByte_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateInitialize, CallFunc_MakeLiteralByte_ReturnValue_8) == 0x0003A2, "Member 'BP_BrainCrashManager_C_PrivateInitialize::CallFunc_MakeLiteralByte_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateInitialize, K2Node_CreateDelegate_OutputDelegate_2) == 0x0003A4, "Member 'BP_BrainCrashManager_C_PrivateInitialize::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateInitialize, CallFunc_MakeLiteralByte_ReturnValue_9) == 0x0003B4, "Member 'BP_BrainCrashManager_C_PrivateInitialize::CallFunc_MakeLiteralByte_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateInitialize, CallFunc_MakeTransform_ReturnValue_11) == 0x0003C0, "Member 'BP_BrainCrashManager_C_PrivateInitialize::CallFunc_MakeTransform_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateInitialize, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_10) == 0x0003F0, "Member 'BP_BrainCrashManager_C_PrivateInitialize::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateInitialize, CallFunc_FinishSpawningActor_ReturnValue_10) == 0x0003F8, "Member 'BP_BrainCrashManager_C_PrivateInitialize::CallFunc_FinishSpawningActor_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateInitialize, K2Node_MakeStruct_FBrainCrashSequencerInfo) == 0x000400, "Member 'BP_BrainCrashManager_C_PrivateInitialize::K2Node_MakeStruct_FBrainCrashSequencerInfo' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateInitialize, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_11) == 0x000440, "Member 'BP_BrainCrashManager_C_PrivateInitialize::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateInitialize, CallFunc_Array_Add_ReturnValue) == 0x000448, "Member 'BP_BrainCrashManager_C_PrivateInitialize::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateInitialize, CallFunc_FinishSpawningActor_ReturnValue_11) == 0x000450, "Member 'BP_BrainCrashManager_C_PrivateInitialize::CallFunc_FinishSpawningActor_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateInitialize, K2Node_DynamicCast_AsBP_Brain_Crash_Cutin_Character) == 0x000458, "Member 'BP_BrainCrashManager_C_PrivateInitialize::K2Node_DynamicCast_AsBP_Brain_Crash_Cutin_Character' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateInitialize, K2Node_DynamicCast_bSuccess) == 0x000460, "Member 'BP_BrainCrashManager_C_PrivateInitialize::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateInitialize, CallFunc_GetCutinManager_CutinManager) == 0x000468, "Member 'BP_BrainCrashManager_C_PrivateInitialize::CallFunc_GetCutinManager_CutinManager' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateInitialize, CallFunc_MakeLiteralByte_ReturnValue_10) == 0x000470, "Member 'BP_BrainCrashManager_C_PrivateInitialize::CallFunc_MakeLiteralByte_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateInitialize, K2Node_MakeArray_Array_2) == 0x000478, "Member 'BP_BrainCrashManager_C_PrivateInitialize::K2Node_MakeArray_Array_2' has a wrong offset!");

// Function BP_BrainCrashManager.BP_BrainCrashManager_C.PrivateFinishBrainCrashSequencer
// 0x0240 (0x0240 - 0x0000)
struct BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer final
{
public:
	class ARSCharacterBase*                       MainPlayer;                                        // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager_1;         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSCharacterBase*                       CallFunc_GetPlayer_ReturnValue;                    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSCharacterBase*                       CallFunc_GetPlayer_ReturnValue_1;                  // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABattleSimulatorManager*                CallFunc_GetBattleSimulatorManager_BattleSimulatorManager; // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMissionActive_ReturnValue;              // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C74[0x2];                                     // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C75[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ICameraInterface>      K2Node_DynamicCast_AsCamera_Interface;             // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetPlayerCameraViewTarget_ReturnValue;    // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C76[0x6];                                     // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UTargetSearchComponent*                 CallFunc_GetTargetSearchComponentFromActor_ReturnValue; // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C77[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUDMainGame_C*                         CallFunc_GetHUDMainGame_HUDMainGame;               // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_PlayerInterface_C> K2Node_DynamicCast_AsBPI_Player_Interface;         // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ProcEndBrainCrash_bDummy;                 // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C78[0x1];                                     // 0x008B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_PlayerInterface_C> K2Node_DynamicCast_AsBPI_Player_Interface_1;       // 0x0090(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ProcEndBrainCrash_bDummy_1;               // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C79[0x1];                                     // 0x00A3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C7A[0x4];                                     // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_EventManager_C*                     CallFunc_GetEventManager_EventManager;             // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C7B[0x2];                                     // 0x00BA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_PlayerInterface_C> K2Node_DynamicCast_AsBPI_Player_Interface_2;       // 0x00C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_PlayerCameraReset_Dummy;                  // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x00D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C7C[0x1];                                     // 0x00D3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ADropItemManager*                       CallFunc_GetDropItemManager_Drop_Item_Manager;     // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanPlayCutScene_OK;                       // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C7D[0x2];                                     // 0x00EA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C7E[0x3];                                     // 0x00F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C7F[0x7];                                     // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattleEnemy_C*                       K2Node_DynamicCast_AsRSBattle_Enemy;               // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C80[0x3];                                     // 0x0109(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BrainCrash_C>     K2Node_DynamicCast_AsBPI_Brain_Crash;              // 0x0110(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C81[0x2];                                     // 0x0122(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult;      // 0x0124(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue;         // 0x01AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C82[0x3];                                     // 0x01AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BrainCrash_C>     K2Node_DynamicCast_AsBPI_Brain_Crash_1;            // 0x01B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x01C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C83[0x6];                                     // 0x01C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BrainCrash_C>     K2Node_DynamicCast_AsBPI_Brain_Crash_2;            // 0x01C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C84[0x7];                                     // 0x01D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IEventInterface>       K2Node_DynamicCast_AsEvent_Interface;              // 0x01E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C85[0x7];                                     // 0x01F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CharacterParamater_C> CallFunc_IsDead_self_CastInput;                    // 0x01F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDead_bDead;                             // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_9;                    // 0x0209(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C86[0x6];                                     // 0x020A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager_2;         // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSCharacterBase*                       CallFunc_GetPlayer_ReturnValue_2;                  // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_EnemyManager_C*                     CallFunc_GetEnemyManager_Manager;                  // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BrainCrash_C>     K2Node_DynamicCast_AsBPI_Brain_Crash_3;            // 0x0228(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_9;                     // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_10;                   // 0x0239(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer) == 0x000008, "Wrong alignment on BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer");
static_assert(sizeof(BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer) == 0x000240, "Wrong size on BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer, MainPlayer) == 0x000000, "Member 'BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer::MainPlayer' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer, CallFunc_GetPlayerManager_PlayerManager) == 0x000008, "Member 'BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer, CallFunc_GetPlayerManager_PlayerManager_1) == 0x000010, "Member 'BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer::CallFunc_GetPlayerManager_PlayerManager_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer, CallFunc_GetPlayer_ReturnValue) == 0x000018, "Member 'BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer::CallFunc_GetPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer, CallFunc_GetPlayer_ReturnValue_1) == 0x000020, "Member 'BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer::CallFunc_GetPlayer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer, CallFunc_GetBattleSimulatorManager_BattleSimulatorManager) == 0x000028, "Member 'BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer::CallFunc_GetBattleSimulatorManager_BattleSimulatorManager' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer, Temp_int_Loop_Num_Variable) == 0x000030, "Member 'BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer, CallFunc_IsValid_ReturnValue) == 0x000034, "Member 'BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer, CallFunc_IsMissionActive_ReturnValue) == 0x000035, "Member 'BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer::CallFunc_IsMissionActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer, Temp_int_Array_Index_Variable) == 0x000038, "Member 'BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer, CallFunc_Array_Length_ReturnValue) == 0x00003C, "Member 'BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer, Temp_int_Array_Index_Variable_1) == 0x000040, "Member 'BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer, K2Node_DynamicCast_AsCamera_Interface) == 0x000048, "Member 'BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer::K2Node_DynamicCast_AsCamera_Interface' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer, CallFunc_SetPlayerCameraViewTarget_ReturnValue) == 0x000059, "Member 'BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer::CallFunc_SetPlayerCameraViewTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer, CallFunc_GetTargetSearchComponentFromActor_ReturnValue) == 0x000060, "Member 'BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer::CallFunc_GetTargetSearchComponentFromActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer, CallFunc_IsValid_ReturnValue_1) == 0x000068, "Member 'BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer, CallFunc_GetHUDMainGame_HUDMainGame) == 0x000070, "Member 'BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer::CallFunc_GetHUDMainGame_HUDMainGame' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer, K2Node_DynamicCast_AsBPI_Player_Interface) == 0x000078, "Member 'BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer::K2Node_DynamicCast_AsBPI_Player_Interface' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer, K2Node_DynamicCast_bSuccess_1) == 0x000088, "Member 'BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer, CallFunc_ProcEndBrainCrash_bDummy) == 0x000089, "Member 'BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer::CallFunc_ProcEndBrainCrash_bDummy' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer, CallFunc_IsValid_ReturnValue_2) == 0x00008A, "Member 'BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer, CallFunc_Array_Length_ReturnValue_1) == 0x00008C, "Member 'BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer, K2Node_DynamicCast_AsBPI_Player_Interface_1) == 0x000090, "Member 'BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer::K2Node_DynamicCast_AsBPI_Player_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer, K2Node_DynamicCast_bSuccess_2) == 0x0000A0, "Member 'BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer, CallFunc_ProcEndBrainCrash_bDummy_1) == 0x0000A1, "Member 'BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer::CallFunc_ProcEndBrainCrash_bDummy_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer, CallFunc_IsValid_ReturnValue_3) == 0x0000A2, "Member 'BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer, CallFunc_Array_Length_ReturnValue_2) == 0x0000A4, "Member 'BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer, Temp_int_Loop_Counter_Variable) == 0x0000A8, "Member 'BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer, CallFunc_GetEventManager_EventManager) == 0x0000B0, "Member 'BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer::CallFunc_GetEventManager_EventManager' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer, CallFunc_IsValid_ReturnValue_4) == 0x0000B8, "Member 'BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer, CallFunc_Less_IntInt_ReturnValue) == 0x0000B9, "Member 'BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer, CallFunc_Add_IntInt_ReturnValue) == 0x0000BC, "Member 'BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer, K2Node_DynamicCast_AsBPI_Player_Interface_2) == 0x0000C0, "Member 'BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer::K2Node_DynamicCast_AsBPI_Player_Interface_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer, K2Node_DynamicCast_bSuccess_3) == 0x0000D0, "Member 'BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer, CallFunc_PlayerCameraReset_Dummy) == 0x0000D1, "Member 'BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer::CallFunc_PlayerCameraReset_Dummy' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer, CallFunc_IsValid_ReturnValue_5) == 0x0000D2, "Member 'BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000D4, "Member 'BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer, CallFunc_GetDropItemManager_Drop_Item_Manager) == 0x0000E0, "Member 'BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer::CallFunc_GetDropItemManager_Drop_Item_Manager' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer, CallFunc_IsValid_ReturnValue_6) == 0x0000E8, "Member 'BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer, CallFunc_CanPlayCutScene_OK) == 0x0000E9, "Member 'BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer::CallFunc_CanPlayCutScene_OK' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer, Temp_int_Loop_Counter_Variable_1) == 0x0000EC, "Member 'BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000F0, "Member 'BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000F4, "Member 'BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer, CallFunc_IsValid_ReturnValue_7) == 0x0000F8, "Member 'BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer, K2Node_DynamicCast_AsRSBattle_Enemy) == 0x000100, "Member 'BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer::K2Node_DynamicCast_AsRSBattle_Enemy' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer, K2Node_DynamicCast_bSuccess_4) == 0x000108, "Member 'BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer, CallFunc_Array_Length_ReturnValue_3) == 0x00010C, "Member 'BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer, K2Node_DynamicCast_AsBPI_Brain_Crash) == 0x000110, "Member 'BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer::K2Node_DynamicCast_AsBPI_Brain_Crash' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer, K2Node_DynamicCast_bSuccess_5) == 0x000120, "Member 'BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000121, "Member 'BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer, CallFunc_K2_SetActorTransform_SweepHitResult) == 0x000124, "Member 'BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer::CallFunc_K2_SetActorTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer, CallFunc_K2_SetActorTransform_ReturnValue) == 0x0001AC, "Member 'BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer::CallFunc_K2_SetActorTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer, K2Node_DynamicCast_AsBPI_Brain_Crash_1) == 0x0001B0, "Member 'BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer::K2Node_DynamicCast_AsBPI_Brain_Crash_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer, K2Node_DynamicCast_bSuccess_6) == 0x0001C0, "Member 'BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer, CallFunc_IsValid_ReturnValue_8) == 0x0001C1, "Member 'BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer, K2Node_DynamicCast_AsBPI_Brain_Crash_2) == 0x0001C8, "Member 'BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer::K2Node_DynamicCast_AsBPI_Brain_Crash_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer, K2Node_DynamicCast_bSuccess_7) == 0x0001D8, "Member 'BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer, K2Node_DynamicCast_AsEvent_Interface) == 0x0001E0, "Member 'BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer::K2Node_DynamicCast_AsEvent_Interface' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer, K2Node_DynamicCast_bSuccess_8) == 0x0001F0, "Member 'BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer, CallFunc_IsDead_self_CastInput) == 0x0001F8, "Member 'BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer::CallFunc_IsDead_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer, CallFunc_IsDead_bDead) == 0x000208, "Member 'BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer::CallFunc_IsDead_bDead' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer, CallFunc_IsValid_ReturnValue_9) == 0x000209, "Member 'BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer::CallFunc_IsValid_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer, CallFunc_GetPlayerManager_PlayerManager_2) == 0x000210, "Member 'BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer::CallFunc_GetPlayerManager_PlayerManager_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer, CallFunc_GetPlayer_ReturnValue_2) == 0x000218, "Member 'BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer::CallFunc_GetPlayer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer, CallFunc_GetEnemyManager_Manager) == 0x000220, "Member 'BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer::CallFunc_GetEnemyManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer, K2Node_DynamicCast_AsBPI_Brain_Crash_3) == 0x000228, "Member 'BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer::K2Node_DynamicCast_AsBPI_Brain_Crash_3' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer, K2Node_DynamicCast_bSuccess_9) == 0x000238, "Member 'BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer::K2Node_DynamicCast_bSuccess_9' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer, CallFunc_IsValid_ReturnValue_10) == 0x000239, "Member 'BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer::CallFunc_IsValid_ReturnValue_10' has a wrong offset!");

// Function BP_BrainCrashManager.BP_BrainCrashManager_C.PrivateCalcUniqueCrashStartTransform
// 0x0360 (0x0360 - 0x0000)
struct BP_BrainCrashManager_C_PrivateCalcUniqueCrashStartTransform final
{
public:
	struct FTransform                             Transform;                                         // 0x0000(0x0030)(Parm, OutParm, IsPlainOldData, NoDestructor)
	bool                                          Error;                                             // 0x0030(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C87[0xF];                                     // 0x0031(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             EnemyTransform;                                    // 0x0040(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	struct FTransform                             PlayerTransform;                                   // 0x0070(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	class ARSCharacterBase*                       MainPlayer;                                        // 0x00A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C88[0x8];                                     // 0x00A8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00B0(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C89[0x7];                                     // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BrainFieldManager_C*                CallFunc_GetBrainFieldManager_Manager;             // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_InBranField_InBrainDield;                 // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C8A[0x2];                                     // 0x00F2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0100(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x010C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C8B[0x8];                                     // 0x0118(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetRelativeTransform_ReturnValue;         // 0x0120(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x0150(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x015C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x0168(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_2;                // 0x0174(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_2;                // 0x0180(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_2;                   // 0x018C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_3;                // 0x01A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_3;                // 0x01B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_3;                   // 0x01BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C8C[0x8];                                     // 0x01C8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x01D0(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x0200(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x0214(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C8D[0x8];                                     // 0x0218(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x0220(0x0030)(IsPlainOldData, NoDestructor)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0254(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_2;              // 0x0260(0x0030)(IsPlainOldData, NoDestructor)
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C8E[0x7];                                     // 0x0299(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_GetPlayer_ReturnValue;                    // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C8F[0x8];                                     // 0x02A8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue_1;               // 0x02B0(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location_4;                // 0x02E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_4;                // 0x02EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_4;                   // 0x02F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScaledCapsuleHalfHeight_ReturnValue;   // 0x0304(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0308(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x030C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0310(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0314(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0318(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C90[0xC];                                     // 0x0324(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_3;              // 0x0330(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BrainCrashManager_C_PrivateCalcUniqueCrashStartTransform) == 0x000010, "Wrong alignment on BP_BrainCrashManager_C_PrivateCalcUniqueCrashStartTransform");
static_assert(sizeof(BP_BrainCrashManager_C_PrivateCalcUniqueCrashStartTransform) == 0x000360, "Wrong size on BP_BrainCrashManager_C_PrivateCalcUniqueCrashStartTransform");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateCalcUniqueCrashStartTransform, Transform) == 0x000000, "Member 'BP_BrainCrashManager_C_PrivateCalcUniqueCrashStartTransform::Transform' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateCalcUniqueCrashStartTransform, Error) == 0x000030, "Member 'BP_BrainCrashManager_C_PrivateCalcUniqueCrashStartTransform::Error' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateCalcUniqueCrashStartTransform, EnemyTransform) == 0x000040, "Member 'BP_BrainCrashManager_C_PrivateCalcUniqueCrashStartTransform::EnemyTransform' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateCalcUniqueCrashStartTransform, PlayerTransform) == 0x000070, "Member 'BP_BrainCrashManager_C_PrivateCalcUniqueCrashStartTransform::PlayerTransform' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateCalcUniqueCrashStartTransform, MainPlayer) == 0x0000A0, "Member 'BP_BrainCrashManager_C_PrivateCalcUniqueCrashStartTransform::MainPlayer' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateCalcUniqueCrashStartTransform, CallFunc_MakeTransform_ReturnValue) == 0x0000B0, "Member 'BP_BrainCrashManager_C_PrivateCalcUniqueCrashStartTransform::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateCalcUniqueCrashStartTransform, CallFunc_IsValid_ReturnValue) == 0x0000E0, "Member 'BP_BrainCrashManager_C_PrivateCalcUniqueCrashStartTransform::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateCalcUniqueCrashStartTransform, CallFunc_GetBrainFieldManager_Manager) == 0x0000E8, "Member 'BP_BrainCrashManager_C_PrivateCalcUniqueCrashStartTransform::CallFunc_GetBrainFieldManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateCalcUniqueCrashStartTransform, CallFunc_IsValid_ReturnValue_1) == 0x0000F0, "Member 'BP_BrainCrashManager_C_PrivateCalcUniqueCrashStartTransform::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateCalcUniqueCrashStartTransform, CallFunc_InBranField_InBrainDield) == 0x0000F1, "Member 'BP_BrainCrashManager_C_PrivateCalcUniqueCrashStartTransform::CallFunc_InBranField_InBrainDield' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateCalcUniqueCrashStartTransform, CallFunc_BreakTransform_Location) == 0x0000F4, "Member 'BP_BrainCrashManager_C_PrivateCalcUniqueCrashStartTransform::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateCalcUniqueCrashStartTransform, CallFunc_BreakTransform_Rotation) == 0x000100, "Member 'BP_BrainCrashManager_C_PrivateCalcUniqueCrashStartTransform::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateCalcUniqueCrashStartTransform, CallFunc_BreakTransform_Scale) == 0x00010C, "Member 'BP_BrainCrashManager_C_PrivateCalcUniqueCrashStartTransform::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateCalcUniqueCrashStartTransform, CallFunc_GetRelativeTransform_ReturnValue) == 0x000120, "Member 'BP_BrainCrashManager_C_PrivateCalcUniqueCrashStartTransform::CallFunc_GetRelativeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateCalcUniqueCrashStartTransform, CallFunc_BreakTransform_Location_1) == 0x000150, "Member 'BP_BrainCrashManager_C_PrivateCalcUniqueCrashStartTransform::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateCalcUniqueCrashStartTransform, CallFunc_BreakTransform_Rotation_1) == 0x00015C, "Member 'BP_BrainCrashManager_C_PrivateCalcUniqueCrashStartTransform::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateCalcUniqueCrashStartTransform, CallFunc_BreakTransform_Scale_1) == 0x000168, "Member 'BP_BrainCrashManager_C_PrivateCalcUniqueCrashStartTransform::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateCalcUniqueCrashStartTransform, CallFunc_BreakTransform_Location_2) == 0x000174, "Member 'BP_BrainCrashManager_C_PrivateCalcUniqueCrashStartTransform::CallFunc_BreakTransform_Location_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateCalcUniqueCrashStartTransform, CallFunc_BreakTransform_Rotation_2) == 0x000180, "Member 'BP_BrainCrashManager_C_PrivateCalcUniqueCrashStartTransform::CallFunc_BreakTransform_Rotation_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateCalcUniqueCrashStartTransform, CallFunc_BreakTransform_Scale_2) == 0x00018C, "Member 'BP_BrainCrashManager_C_PrivateCalcUniqueCrashStartTransform::CallFunc_BreakTransform_Scale_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateCalcUniqueCrashStartTransform, CallFunc_BreakRotator_Roll) == 0x000198, "Member 'BP_BrainCrashManager_C_PrivateCalcUniqueCrashStartTransform::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateCalcUniqueCrashStartTransform, CallFunc_BreakRotator_Pitch) == 0x00019C, "Member 'BP_BrainCrashManager_C_PrivateCalcUniqueCrashStartTransform::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateCalcUniqueCrashStartTransform, CallFunc_BreakRotator_Yaw) == 0x0001A0, "Member 'BP_BrainCrashManager_C_PrivateCalcUniqueCrashStartTransform::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateCalcUniqueCrashStartTransform, CallFunc_BreakTransform_Location_3) == 0x0001A4, "Member 'BP_BrainCrashManager_C_PrivateCalcUniqueCrashStartTransform::CallFunc_BreakTransform_Location_3' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateCalcUniqueCrashStartTransform, CallFunc_BreakTransform_Rotation_3) == 0x0001B0, "Member 'BP_BrainCrashManager_C_PrivateCalcUniqueCrashStartTransform::CallFunc_BreakTransform_Rotation_3' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateCalcUniqueCrashStartTransform, CallFunc_BreakTransform_Scale_3) == 0x0001BC, "Member 'BP_BrainCrashManager_C_PrivateCalcUniqueCrashStartTransform::CallFunc_BreakTransform_Scale_3' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateCalcUniqueCrashStartTransform, CallFunc_GetTransform_ReturnValue) == 0x0001D0, "Member 'BP_BrainCrashManager_C_PrivateCalcUniqueCrashStartTransform::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateCalcUniqueCrashStartTransform, CallFunc_FindLookAtRotation_ReturnValue) == 0x000200, "Member 'BP_BrainCrashManager_C_PrivateCalcUniqueCrashStartTransform::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateCalcUniqueCrashStartTransform, CallFunc_BreakRotator_Roll_1) == 0x00020C, "Member 'BP_BrainCrashManager_C_PrivateCalcUniqueCrashStartTransform::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateCalcUniqueCrashStartTransform, CallFunc_BreakRotator_Pitch_1) == 0x000210, "Member 'BP_BrainCrashManager_C_PrivateCalcUniqueCrashStartTransform::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateCalcUniqueCrashStartTransform, CallFunc_BreakRotator_Yaw_1) == 0x000214, "Member 'BP_BrainCrashManager_C_PrivateCalcUniqueCrashStartTransform::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateCalcUniqueCrashStartTransform, CallFunc_MakeTransform_ReturnValue_1) == 0x000220, "Member 'BP_BrainCrashManager_C_PrivateCalcUniqueCrashStartTransform::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateCalcUniqueCrashStartTransform, CallFunc_Add_FloatFloat_ReturnValue) == 0x000250, "Member 'BP_BrainCrashManager_C_PrivateCalcUniqueCrashStartTransform::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateCalcUniqueCrashStartTransform, CallFunc_MakeRotator_ReturnValue) == 0x000254, "Member 'BP_BrainCrashManager_C_PrivateCalcUniqueCrashStartTransform::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateCalcUniqueCrashStartTransform, CallFunc_MakeTransform_ReturnValue_2) == 0x000260, "Member 'BP_BrainCrashManager_C_PrivateCalcUniqueCrashStartTransform::CallFunc_MakeTransform_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateCalcUniqueCrashStartTransform, CallFunc_GetPlayerManager_PlayerManager) == 0x000290, "Member 'BP_BrainCrashManager_C_PrivateCalcUniqueCrashStartTransform::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateCalcUniqueCrashStartTransform, CallFunc_IsValid_ReturnValue_2) == 0x000298, "Member 'BP_BrainCrashManager_C_PrivateCalcUniqueCrashStartTransform::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateCalcUniqueCrashStartTransform, CallFunc_GetPlayer_ReturnValue) == 0x0002A0, "Member 'BP_BrainCrashManager_C_PrivateCalcUniqueCrashStartTransform::CallFunc_GetPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateCalcUniqueCrashStartTransform, CallFunc_GetTransform_ReturnValue_1) == 0x0002B0, "Member 'BP_BrainCrashManager_C_PrivateCalcUniqueCrashStartTransform::CallFunc_GetTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateCalcUniqueCrashStartTransform, CallFunc_BreakTransform_Location_4) == 0x0002E0, "Member 'BP_BrainCrashManager_C_PrivateCalcUniqueCrashStartTransform::CallFunc_BreakTransform_Location_4' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateCalcUniqueCrashStartTransform, CallFunc_BreakTransform_Rotation_4) == 0x0002EC, "Member 'BP_BrainCrashManager_C_PrivateCalcUniqueCrashStartTransform::CallFunc_BreakTransform_Rotation_4' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateCalcUniqueCrashStartTransform, CallFunc_BreakTransform_Scale_4) == 0x0002F8, "Member 'BP_BrainCrashManager_C_PrivateCalcUniqueCrashStartTransform::CallFunc_BreakTransform_Scale_4' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateCalcUniqueCrashStartTransform, CallFunc_GetScaledCapsuleHalfHeight_ReturnValue) == 0x000304, "Member 'BP_BrainCrashManager_C_PrivateCalcUniqueCrashStartTransform::CallFunc_GetScaledCapsuleHalfHeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateCalcUniqueCrashStartTransform, CallFunc_BreakVector_X) == 0x000308, "Member 'BP_BrainCrashManager_C_PrivateCalcUniqueCrashStartTransform::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateCalcUniqueCrashStartTransform, CallFunc_BreakVector_Y) == 0x00030C, "Member 'BP_BrainCrashManager_C_PrivateCalcUniqueCrashStartTransform::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateCalcUniqueCrashStartTransform, CallFunc_BreakVector_Z) == 0x000310, "Member 'BP_BrainCrashManager_C_PrivateCalcUniqueCrashStartTransform::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateCalcUniqueCrashStartTransform, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000314, "Member 'BP_BrainCrashManager_C_PrivateCalcUniqueCrashStartTransform::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateCalcUniqueCrashStartTransform, CallFunc_MakeVector_ReturnValue) == 0x000318, "Member 'BP_BrainCrashManager_C_PrivateCalcUniqueCrashStartTransform::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateCalcUniqueCrashStartTransform, CallFunc_MakeTransform_ReturnValue_3) == 0x000330, "Member 'BP_BrainCrashManager_C_PrivateCalcUniqueCrashStartTransform::CallFunc_MakeTransform_ReturnValue_3' has a wrong offset!");

// Function BP_BrainCrashManager.BP_BrainCrashManager_C.Private Calc Unique Crash Finish Restore Transform FixedLoc
// 0x01C0 (0x01C0 - 0x0000)
struct BP_BrainCrashManager_C_Private_Calc_Unique_Crash_Finish_Restore_Transform_FixedLoc final
{
public:
	class ARSCharacterBase*                       Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C91[0x8];                                     // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             MotionTransform;                                   // 0x0010(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FTransform                             Transform;                                         // 0x0040(0x0030)(Parm, OutParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C92[0x2];                                     // 0x0072(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0074(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x008C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x0098(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x00A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x00C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C93[0xC];                                     // 0x00D4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x00E0(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location_2;                // 0x0110(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_2;                // 0x011C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_2;                   // 0x0128(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_LessLess_VectorRotator_ReturnValue;       // 0x0134(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_3;                // 0x0140(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_3;                // 0x014C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_3;                   // 0x0158(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0164(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x0180(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C94[0x4];                                     // 0x018C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0190(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BrainCrashManager_C_Private_Calc_Unique_Crash_Finish_Restore_Transform_FixedLoc) == 0x000010, "Wrong alignment on BP_BrainCrashManager_C_Private_Calc_Unique_Crash_Finish_Restore_Transform_FixedLoc");
static_assert(sizeof(BP_BrainCrashManager_C_Private_Calc_Unique_Crash_Finish_Restore_Transform_FixedLoc) == 0x0001C0, "Wrong size on BP_BrainCrashManager_C_Private_Calc_Unique_Crash_Finish_Restore_Transform_FixedLoc");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Calc_Unique_Crash_Finish_Restore_Transform_FixedLoc, Character) == 0x000000, "Member 'BP_BrainCrashManager_C_Private_Calc_Unique_Crash_Finish_Restore_Transform_FixedLoc::Character' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Calc_Unique_Crash_Finish_Restore_Transform_FixedLoc, MotionTransform) == 0x000010, "Member 'BP_BrainCrashManager_C_Private_Calc_Unique_Crash_Finish_Restore_Transform_FixedLoc::MotionTransform' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Calc_Unique_Crash_Finish_Restore_Transform_FixedLoc, Transform) == 0x000040, "Member 'BP_BrainCrashManager_C_Private_Calc_Unique_Crash_Finish_Restore_Transform_FixedLoc::Transform' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Calc_Unique_Crash_Finish_Restore_Transform_FixedLoc, CallFunc_IsValid_ReturnValue) == 0x000070, "Member 'BP_BrainCrashManager_C_Private_Calc_Unique_Crash_Finish_Restore_Transform_FixedLoc::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Calc_Unique_Crash_Finish_Restore_Transform_FixedLoc, CallFunc_IsValid_ReturnValue_1) == 0x000071, "Member 'BP_BrainCrashManager_C_Private_Calc_Unique_Crash_Finish_Restore_Transform_FixedLoc::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Calc_Unique_Crash_Finish_Restore_Transform_FixedLoc, CallFunc_BreakTransform_Location) == 0x000074, "Member 'BP_BrainCrashManager_C_Private_Calc_Unique_Crash_Finish_Restore_Transform_FixedLoc::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Calc_Unique_Crash_Finish_Restore_Transform_FixedLoc, CallFunc_BreakTransform_Rotation) == 0x000080, "Member 'BP_BrainCrashManager_C_Private_Calc_Unique_Crash_Finish_Restore_Transform_FixedLoc::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Calc_Unique_Crash_Finish_Restore_Transform_FixedLoc, CallFunc_BreakTransform_Scale) == 0x00008C, "Member 'BP_BrainCrashManager_C_Private_Calc_Unique_Crash_Finish_Restore_Transform_FixedLoc::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Calc_Unique_Crash_Finish_Restore_Transform_FixedLoc, CallFunc_BreakTransform_Location_1) == 0x000098, "Member 'BP_BrainCrashManager_C_Private_Calc_Unique_Crash_Finish_Restore_Transform_FixedLoc::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Calc_Unique_Crash_Finish_Restore_Transform_FixedLoc, CallFunc_BreakTransform_Rotation_1) == 0x0000A4, "Member 'BP_BrainCrashManager_C_Private_Calc_Unique_Crash_Finish_Restore_Transform_FixedLoc::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Calc_Unique_Crash_Finish_Restore_Transform_FixedLoc, CallFunc_BreakTransform_Scale_1) == 0x0000B0, "Member 'BP_BrainCrashManager_C_Private_Calc_Unique_Crash_Finish_Restore_Transform_FixedLoc::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Calc_Unique_Crash_Finish_Restore_Transform_FixedLoc, CallFunc_BreakRotator_Roll) == 0x0000BC, "Member 'BP_BrainCrashManager_C_Private_Calc_Unique_Crash_Finish_Restore_Transform_FixedLoc::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Calc_Unique_Crash_Finish_Restore_Transform_FixedLoc, CallFunc_BreakRotator_Pitch) == 0x0000C0, "Member 'BP_BrainCrashManager_C_Private_Calc_Unique_Crash_Finish_Restore_Transform_FixedLoc::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Calc_Unique_Crash_Finish_Restore_Transform_FixedLoc, CallFunc_BreakRotator_Yaw) == 0x0000C4, "Member 'BP_BrainCrashManager_C_Private_Calc_Unique_Crash_Finish_Restore_Transform_FixedLoc::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Calc_Unique_Crash_Finish_Restore_Transform_FixedLoc, CallFunc_MakeRotator_ReturnValue) == 0x0000C8, "Member 'BP_BrainCrashManager_C_Private_Calc_Unique_Crash_Finish_Restore_Transform_FixedLoc::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Calc_Unique_Crash_Finish_Restore_Transform_FixedLoc, CallFunc_GetSocketTransform_ReturnValue) == 0x0000E0, "Member 'BP_BrainCrashManager_C_Private_Calc_Unique_Crash_Finish_Restore_Transform_FixedLoc::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Calc_Unique_Crash_Finish_Restore_Transform_FixedLoc, CallFunc_BreakTransform_Location_2) == 0x000110, "Member 'BP_BrainCrashManager_C_Private_Calc_Unique_Crash_Finish_Restore_Transform_FixedLoc::CallFunc_BreakTransform_Location_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Calc_Unique_Crash_Finish_Restore_Transform_FixedLoc, CallFunc_BreakTransform_Rotation_2) == 0x00011C, "Member 'BP_BrainCrashManager_C_Private_Calc_Unique_Crash_Finish_Restore_Transform_FixedLoc::CallFunc_BreakTransform_Rotation_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Calc_Unique_Crash_Finish_Restore_Transform_FixedLoc, CallFunc_BreakTransform_Scale_2) == 0x000128, "Member 'BP_BrainCrashManager_C_Private_Calc_Unique_Crash_Finish_Restore_Transform_FixedLoc::CallFunc_BreakTransform_Scale_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Calc_Unique_Crash_Finish_Restore_Transform_FixedLoc, CallFunc_LessLess_VectorRotator_ReturnValue) == 0x000134, "Member 'BP_BrainCrashManager_C_Private_Calc_Unique_Crash_Finish_Restore_Transform_FixedLoc::CallFunc_LessLess_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Calc_Unique_Crash_Finish_Restore_Transform_FixedLoc, CallFunc_BreakTransform_Location_3) == 0x000140, "Member 'BP_BrainCrashManager_C_Private_Calc_Unique_Crash_Finish_Restore_Transform_FixedLoc::CallFunc_BreakTransform_Location_3' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Calc_Unique_Crash_Finish_Restore_Transform_FixedLoc, CallFunc_BreakTransform_Rotation_3) == 0x00014C, "Member 'BP_BrainCrashManager_C_Private_Calc_Unique_Crash_Finish_Restore_Transform_FixedLoc::CallFunc_BreakTransform_Rotation_3' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Calc_Unique_Crash_Finish_Restore_Transform_FixedLoc, CallFunc_BreakTransform_Scale_3) == 0x000158, "Member 'BP_BrainCrashManager_C_Private_Calc_Unique_Crash_Finish_Restore_Transform_FixedLoc::CallFunc_BreakTransform_Scale_3' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Calc_Unique_Crash_Finish_Restore_Transform_FixedLoc, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000164, "Member 'BP_BrainCrashManager_C_Private_Calc_Unique_Crash_Finish_Restore_Transform_FixedLoc::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Calc_Unique_Crash_Finish_Restore_Transform_FixedLoc, CallFunc_BreakRotator_Roll_1) == 0x000170, "Member 'BP_BrainCrashManager_C_Private_Calc_Unique_Crash_Finish_Restore_Transform_FixedLoc::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Calc_Unique_Crash_Finish_Restore_Transform_FixedLoc, CallFunc_BreakRotator_Pitch_1) == 0x000174, "Member 'BP_BrainCrashManager_C_Private_Calc_Unique_Crash_Finish_Restore_Transform_FixedLoc::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Calc_Unique_Crash_Finish_Restore_Transform_FixedLoc, CallFunc_BreakRotator_Yaw_1) == 0x000178, "Member 'BP_BrainCrashManager_C_Private_Calc_Unique_Crash_Finish_Restore_Transform_FixedLoc::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Calc_Unique_Crash_Finish_Restore_Transform_FixedLoc, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00017C, "Member 'BP_BrainCrashManager_C_Private_Calc_Unique_Crash_Finish_Restore_Transform_FixedLoc::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Calc_Unique_Crash_Finish_Restore_Transform_FixedLoc, CallFunc_MakeRotator_ReturnValue_1) == 0x000180, "Member 'BP_BrainCrashManager_C_Private_Calc_Unique_Crash_Finish_Restore_Transform_FixedLoc::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Calc_Unique_Crash_Finish_Restore_Transform_FixedLoc, CallFunc_MakeTransform_ReturnValue) == 0x000190, "Member 'BP_BrainCrashManager_C_Private_Calc_Unique_Crash_Finish_Restore_Transform_FixedLoc::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");

// Function BP_BrainCrashManager.BP_BrainCrashManager_C.PrivateEventSetPlayerFootIK
// 0x0030 (0x0030 - 0x0000)
struct BP_BrainCrashManager_C_PrivateEventSetPlayerFootIK final
{
public:
	bool                                          Enable;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C95[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       MainPlayer;                                        // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattleCharacter_C*                   K2Node_DynamicCast_AsRSBattle_Character;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetFootIKEnable_Dummy;                    // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C96[0x5];                                     // 0x001B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSCharacterBase*                       CallFunc_GetPlayer_ReturnValue;                    // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrainCrashManager_C_PrivateEventSetPlayerFootIK) == 0x000008, "Wrong alignment on BP_BrainCrashManager_C_PrivateEventSetPlayerFootIK");
static_assert(sizeof(BP_BrainCrashManager_C_PrivateEventSetPlayerFootIK) == 0x000030, "Wrong size on BP_BrainCrashManager_C_PrivateEventSetPlayerFootIK");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateEventSetPlayerFootIK, Enable) == 0x000000, "Member 'BP_BrainCrashManager_C_PrivateEventSetPlayerFootIK::Enable' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateEventSetPlayerFootIK, MainPlayer) == 0x000008, "Member 'BP_BrainCrashManager_C_PrivateEventSetPlayerFootIK::MainPlayer' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateEventSetPlayerFootIK, K2Node_DynamicCast_AsRSBattle_Character) == 0x000010, "Member 'BP_BrainCrashManager_C_PrivateEventSetPlayerFootIK::K2Node_DynamicCast_AsRSBattle_Character' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateEventSetPlayerFootIK, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_BrainCrashManager_C_PrivateEventSetPlayerFootIK::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateEventSetPlayerFootIK, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'BP_BrainCrashManager_C_PrivateEventSetPlayerFootIK::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateEventSetPlayerFootIK, CallFunc_SetFootIKEnable_Dummy) == 0x00001A, "Member 'BP_BrainCrashManager_C_PrivateEventSetPlayerFootIK::CallFunc_SetFootIKEnable_Dummy' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateEventSetPlayerFootIK, CallFunc_GetPlayerManager_PlayerManager) == 0x000020, "Member 'BP_BrainCrashManager_C_PrivateEventSetPlayerFootIK::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateEventSetPlayerFootIK, CallFunc_GetPlayer_ReturnValue) == 0x000028, "Member 'BP_BrainCrashManager_C_PrivateEventSetPlayerFootIK::CallFunc_GetPlayer_ReturnValue' has a wrong offset!");

// Function BP_BrainCrashManager.BP_BrainCrashManager_C.PrivateUpdateDebug
// 0x0108 (0x0108 - 0x0000)
struct BP_BrainCrashManager_C_PrivateUpdateDebug final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Rate;                                              // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_EventCameraRoot_C*                  CallFunc_GetCurrentSeqUniqueRoot_SeqUniqueRoot;    // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue_1;     // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C97[0x1];                                     // 0x0013(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x0078(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C98[0x3];                                     // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrainCrashManager_C_PrivateUpdateDebug) == 0x000008, "Wrong alignment on BP_BrainCrashManager_C_PrivateUpdateDebug");
static_assert(sizeof(BP_BrainCrashManager_C_PrivateUpdateDebug) == 0x000108, "Wrong size on BP_BrainCrashManager_C_PrivateUpdateDebug");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateDebug, DeltaSeconds) == 0x000000, "Member 'BP_BrainCrashManager_C_PrivateUpdateDebug::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateDebug, Rate) == 0x000004, "Member 'BP_BrainCrashManager_C_PrivateUpdateDebug::Rate' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateDebug, CallFunc_GetCurrentSeqUniqueRoot_SeqUniqueRoot) == 0x000008, "Member 'BP_BrainCrashManager_C_PrivateUpdateDebug::CallFunc_GetCurrentSeqUniqueRoot_SeqUniqueRoot' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateDebug, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000010, "Member 'BP_BrainCrashManager_C_PrivateUpdateDebug::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateDebug, CallFunc_NearlyEqual_FloatFloat_ReturnValue_1) == 0x000011, "Member 'BP_BrainCrashManager_C_PrivateUpdateDebug::CallFunc_NearlyEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateDebug, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000012, "Member 'BP_BrainCrashManager_C_PrivateUpdateDebug::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateDebug, CallFunc_BreakTransform_Location) == 0x000014, "Member 'BP_BrainCrashManager_C_PrivateUpdateDebug::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateDebug, CallFunc_BreakTransform_Rotation) == 0x000020, "Member 'BP_BrainCrashManager_C_PrivateUpdateDebug::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateDebug, CallFunc_BreakTransform_Scale) == 0x00002C, "Member 'BP_BrainCrashManager_C_PrivateUpdateDebug::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateDebug, CallFunc_Add_VectorVector_ReturnValue) == 0x000038, "Member 'BP_BrainCrashManager_C_PrivateUpdateDebug::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateDebug, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000044, "Member 'BP_BrainCrashManager_C_PrivateUpdateDebug::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateDebug, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000048, "Member 'BP_BrainCrashManager_C_PrivateUpdateDebug::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateDebug, CallFunc_MakeVector_ReturnValue) == 0x00004C, "Member 'BP_BrainCrashManager_C_PrivateUpdateDebug::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateDebug, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000058, "Member 'BP_BrainCrashManager_C_PrivateUpdateDebug::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateDebug, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000064, "Member 'BP_BrainCrashManager_C_PrivateUpdateDebug::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateDebug, CallFunc_Add_VectorVector_ReturnValue_2) == 0x000068, "Member 'BP_BrainCrashManager_C_PrivateUpdateDebug::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateDebug, CallFunc_FClamp_ReturnValue) == 0x000074, "Member 'BP_BrainCrashManager_C_PrivateUpdateDebug::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateDebug, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x000078, "Member 'BP_BrainCrashManager_C_PrivateUpdateDebug::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateDebug, CallFunc_K2_SetActorLocation_ReturnValue) == 0x000100, "Member 'BP_BrainCrashManager_C_PrivateUpdateDebug::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateDebug, CallFunc_Add_FloatFloat_ReturnValue) == 0x000104, "Member 'BP_BrainCrashManager_C_PrivateUpdateDebug::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_BrainCrashManager.BP_BrainCrashManager_C.PrivateUpdateTransformAdjust
// 0x04A0 (0x04A0 - 0x0000)
struct BP_BrainCrashManager_C_PrivateUpdateTransformAdjust final
{
public:
	struct FVector                                PlayerStartOffset;                                 // 0x0000(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                EnemyInGameLocationOffset;                         // 0x000C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                EnemyScale;                                        // 0x0018(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                EnemyScaleLocationOffset;                          // 0x0024(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                PlayerJumpUp;                                      // 0x0030(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                PlayerFinalLandOffset;                             // 0x003C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Rate;                                              // 0x0048(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C99[0x4];                                     // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetRelativeTransform_ReturnValue;         // 0x0070(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x00A0(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TransformLocation_ReturnValue;            // 0x00F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x0100(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x010C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x0118(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C9A[0x3];                                     // 0x0125(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_EventCameraRoot_C*                  CallFunc_GetCurrentSeqCameraRoot_SeqCameraRoot;    // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorFloat_ReturnValue;         // 0x0130(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C9B[0x4];                                     // 0x013C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_EventCameraRoot_C*                  CallFunc_GetCurrentSeqUniqueRoot_SeqUniqueRoot;    // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_EventCameraRoot_C*                  CallFunc_GetCurrentSeqUniquePlayerRoot_SeqUniquePlayerRoot; // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0150(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	class ABP_EventCameraRoot_C*                  CallFunc_GetCurrentSeqUniqueEnemyRoot_SeqUniqueEnemyRoot; // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_2;                // 0x0188(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_2;                // 0x0194(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_2;                   // 0x01A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x01AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x01B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x01C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x01D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x01DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C9C[0x3];                                     // 0x01DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue_1;         // 0x01E0(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location_3;                // 0x0210(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_3;                // 0x021C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_3;                   // 0x0228(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0234(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C9D[0x3];                                     // 0x0235(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_1;      // 0x0238(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0244(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_2;       // 0x0250(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_4;                // 0x025C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_4;                // 0x0268(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_4;                   // 0x0274(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VLerp_ReturnValue;                        // 0x0280(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x028C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C9E[0x3];                                     // 0x028D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0290(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorRelativeLocation_SweepHitResult; // 0x029C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_3;       // 0x0324(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0330(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x033C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorRelativeLocation_SweepHitResult_1; // 0x0348(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_2;      // 0x03D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_4;       // 0x03DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_5;       // 0x03E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_3;           // 0x03F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_4;           // 0x0400(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_5;           // 0x040C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorRelativeLocation_SweepHitResult_2; // 0x0418(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_BrainCrashManager_C_PrivateUpdateTransformAdjust) == 0x000010, "Wrong alignment on BP_BrainCrashManager_C_PrivateUpdateTransformAdjust");
static_assert(sizeof(BP_BrainCrashManager_C_PrivateUpdateTransformAdjust) == 0x0004A0, "Wrong size on BP_BrainCrashManager_C_PrivateUpdateTransformAdjust");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateTransformAdjust, PlayerStartOffset) == 0x000000, "Member 'BP_BrainCrashManager_C_PrivateUpdateTransformAdjust::PlayerStartOffset' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateTransformAdjust, EnemyInGameLocationOffset) == 0x00000C, "Member 'BP_BrainCrashManager_C_PrivateUpdateTransformAdjust::EnemyInGameLocationOffset' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateTransformAdjust, EnemyScale) == 0x000018, "Member 'BP_BrainCrashManager_C_PrivateUpdateTransformAdjust::EnemyScale' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateTransformAdjust, EnemyScaleLocationOffset) == 0x000024, "Member 'BP_BrainCrashManager_C_PrivateUpdateTransformAdjust::EnemyScaleLocationOffset' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateTransformAdjust, PlayerJumpUp) == 0x000030, "Member 'BP_BrainCrashManager_C_PrivateUpdateTransformAdjust::PlayerJumpUp' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateTransformAdjust, PlayerFinalLandOffset) == 0x00003C, "Member 'BP_BrainCrashManager_C_PrivateUpdateTransformAdjust::PlayerFinalLandOffset' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateTransformAdjust, Rate) == 0x000048, "Member 'BP_BrainCrashManager_C_PrivateUpdateTransformAdjust::Rate' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateTransformAdjust, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x00004C, "Member 'BP_BrainCrashManager_C_PrivateUpdateTransformAdjust::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateTransformAdjust, CallFunc_MakeVector_ReturnValue) == 0x000058, "Member 'BP_BrainCrashManager_C_PrivateUpdateTransformAdjust::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateTransformAdjust, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000068, "Member 'BP_BrainCrashManager_C_PrivateUpdateTransformAdjust::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateTransformAdjust, CallFunc_GetRelativeTransform_ReturnValue) == 0x000070, "Member 'BP_BrainCrashManager_C_PrivateUpdateTransformAdjust::CallFunc_GetRelativeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateTransformAdjust, CallFunc_GetSocketTransform_ReturnValue) == 0x0000A0, "Member 'BP_BrainCrashManager_C_PrivateUpdateTransformAdjust::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateTransformAdjust, CallFunc_BreakTransform_Location) == 0x0000D0, "Member 'BP_BrainCrashManager_C_PrivateUpdateTransformAdjust::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateTransformAdjust, CallFunc_BreakTransform_Rotation) == 0x0000DC, "Member 'BP_BrainCrashManager_C_PrivateUpdateTransformAdjust::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateTransformAdjust, CallFunc_BreakTransform_Scale) == 0x0000E8, "Member 'BP_BrainCrashManager_C_PrivateUpdateTransformAdjust::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateTransformAdjust, CallFunc_TransformLocation_ReturnValue) == 0x0000F4, "Member 'BP_BrainCrashManager_C_PrivateUpdateTransformAdjust::CallFunc_TransformLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateTransformAdjust, CallFunc_BreakTransform_Location_1) == 0x000100, "Member 'BP_BrainCrashManager_C_PrivateUpdateTransformAdjust::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateTransformAdjust, CallFunc_BreakTransform_Rotation_1) == 0x00010C, "Member 'BP_BrainCrashManager_C_PrivateUpdateTransformAdjust::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateTransformAdjust, CallFunc_BreakTransform_Scale_1) == 0x000118, "Member 'BP_BrainCrashManager_C_PrivateUpdateTransformAdjust::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateTransformAdjust, CallFunc_IsValid_ReturnValue) == 0x000124, "Member 'BP_BrainCrashManager_C_PrivateUpdateTransformAdjust::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateTransformAdjust, CallFunc_GetCurrentSeqCameraRoot_SeqCameraRoot) == 0x000128, "Member 'BP_BrainCrashManager_C_PrivateUpdateTransformAdjust::CallFunc_GetCurrentSeqCameraRoot_SeqCameraRoot' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateTransformAdjust, CallFunc_Subtract_VectorFloat_ReturnValue) == 0x000130, "Member 'BP_BrainCrashManager_C_PrivateUpdateTransformAdjust::CallFunc_Subtract_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateTransformAdjust, CallFunc_GetCurrentSeqUniqueRoot_SeqUniqueRoot) == 0x000140, "Member 'BP_BrainCrashManager_C_PrivateUpdateTransformAdjust::CallFunc_GetCurrentSeqUniqueRoot_SeqUniqueRoot' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateTransformAdjust, CallFunc_GetCurrentSeqUniquePlayerRoot_SeqUniquePlayerRoot) == 0x000148, "Member 'BP_BrainCrashManager_C_PrivateUpdateTransformAdjust::CallFunc_GetCurrentSeqUniquePlayerRoot_SeqUniquePlayerRoot' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateTransformAdjust, CallFunc_GetTransform_ReturnValue) == 0x000150, "Member 'BP_BrainCrashManager_C_PrivateUpdateTransformAdjust::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateTransformAdjust, CallFunc_GetCurrentSeqUniqueEnemyRoot_SeqUniqueEnemyRoot) == 0x000180, "Member 'BP_BrainCrashManager_C_PrivateUpdateTransformAdjust::CallFunc_GetCurrentSeqUniqueEnemyRoot_SeqUniqueEnemyRoot' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateTransformAdjust, CallFunc_BreakTransform_Location_2) == 0x000188, "Member 'BP_BrainCrashManager_C_PrivateUpdateTransformAdjust::CallFunc_BreakTransform_Location_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateTransformAdjust, CallFunc_BreakTransform_Rotation_2) == 0x000194, "Member 'BP_BrainCrashManager_C_PrivateUpdateTransformAdjust::CallFunc_BreakTransform_Rotation_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateTransformAdjust, CallFunc_BreakTransform_Scale_2) == 0x0001A0, "Member 'BP_BrainCrashManager_C_PrivateUpdateTransformAdjust::CallFunc_BreakTransform_Scale_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateTransformAdjust, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0001AC, "Member 'BP_BrainCrashManager_C_PrivateUpdateTransformAdjust::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateTransformAdjust, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x0001B8, "Member 'BP_BrainCrashManager_C_PrivateUpdateTransformAdjust::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateTransformAdjust, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x0001C4, "Member 'BP_BrainCrashManager_C_PrivateUpdateTransformAdjust::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateTransformAdjust, CallFunc_Multiply_VectorVector_ReturnValue) == 0x0001D0, "Member 'BP_BrainCrashManager_C_PrivateUpdateTransformAdjust::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateTransformAdjust, CallFunc_IsValid_ReturnValue_1) == 0x0001DC, "Member 'BP_BrainCrashManager_C_PrivateUpdateTransformAdjust::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateTransformAdjust, CallFunc_GetSocketTransform_ReturnValue_1) == 0x0001E0, "Member 'BP_BrainCrashManager_C_PrivateUpdateTransformAdjust::CallFunc_GetSocketTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateTransformAdjust, CallFunc_BreakTransform_Location_3) == 0x000210, "Member 'BP_BrainCrashManager_C_PrivateUpdateTransformAdjust::CallFunc_BreakTransform_Location_3' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateTransformAdjust, CallFunc_BreakTransform_Rotation_3) == 0x00021C, "Member 'BP_BrainCrashManager_C_PrivateUpdateTransformAdjust::CallFunc_BreakTransform_Rotation_3' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateTransformAdjust, CallFunc_BreakTransform_Scale_3) == 0x000228, "Member 'BP_BrainCrashManager_C_PrivateUpdateTransformAdjust::CallFunc_BreakTransform_Scale_3' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateTransformAdjust, CallFunc_IsValid_ReturnValue_2) == 0x000234, "Member 'BP_BrainCrashManager_C_PrivateUpdateTransformAdjust::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateTransformAdjust, CallFunc_Multiply_VectorVector_ReturnValue_1) == 0x000238, "Member 'BP_BrainCrashManager_C_PrivateUpdateTransformAdjust::CallFunc_Multiply_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateTransformAdjust, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000244, "Member 'BP_BrainCrashManager_C_PrivateUpdateTransformAdjust::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateTransformAdjust, CallFunc_Multiply_VectorFloat_ReturnValue_2) == 0x000250, "Member 'BP_BrainCrashManager_C_PrivateUpdateTransformAdjust::CallFunc_Multiply_VectorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateTransformAdjust, CallFunc_BreakTransform_Location_4) == 0x00025C, "Member 'BP_BrainCrashManager_C_PrivateUpdateTransformAdjust::CallFunc_BreakTransform_Location_4' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateTransformAdjust, CallFunc_BreakTransform_Rotation_4) == 0x000268, "Member 'BP_BrainCrashManager_C_PrivateUpdateTransformAdjust::CallFunc_BreakTransform_Rotation_4' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateTransformAdjust, CallFunc_BreakTransform_Scale_4) == 0x000274, "Member 'BP_BrainCrashManager_C_PrivateUpdateTransformAdjust::CallFunc_BreakTransform_Scale_4' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateTransformAdjust, CallFunc_VLerp_ReturnValue) == 0x000280, "Member 'BP_BrainCrashManager_C_PrivateUpdateTransformAdjust::CallFunc_VLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateTransformAdjust, CallFunc_IsValid_ReturnValue_3) == 0x00028C, "Member 'BP_BrainCrashManager_C_PrivateUpdateTransformAdjust::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateTransformAdjust, CallFunc_Add_VectorVector_ReturnValue) == 0x000290, "Member 'BP_BrainCrashManager_C_PrivateUpdateTransformAdjust::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateTransformAdjust, CallFunc_K2_SetActorRelativeLocation_SweepHitResult) == 0x00029C, "Member 'BP_BrainCrashManager_C_PrivateUpdateTransformAdjust::CallFunc_K2_SetActorRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateTransformAdjust, CallFunc_Multiply_VectorFloat_ReturnValue_3) == 0x000324, "Member 'BP_BrainCrashManager_C_PrivateUpdateTransformAdjust::CallFunc_Multiply_VectorFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateTransformAdjust, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000330, "Member 'BP_BrainCrashManager_C_PrivateUpdateTransformAdjust::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateTransformAdjust, CallFunc_Add_VectorVector_ReturnValue_2) == 0x00033C, "Member 'BP_BrainCrashManager_C_PrivateUpdateTransformAdjust::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateTransformAdjust, CallFunc_K2_SetActorRelativeLocation_SweepHitResult_1) == 0x000348, "Member 'BP_BrainCrashManager_C_PrivateUpdateTransformAdjust::CallFunc_K2_SetActorRelativeLocation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateTransformAdjust, CallFunc_Subtract_VectorVector_ReturnValue_2) == 0x0003D0, "Member 'BP_BrainCrashManager_C_PrivateUpdateTransformAdjust::CallFunc_Subtract_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateTransformAdjust, CallFunc_Multiply_VectorFloat_ReturnValue_4) == 0x0003DC, "Member 'BP_BrainCrashManager_C_PrivateUpdateTransformAdjust::CallFunc_Multiply_VectorFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateTransformAdjust, CallFunc_Multiply_VectorFloat_ReturnValue_5) == 0x0003E8, "Member 'BP_BrainCrashManager_C_PrivateUpdateTransformAdjust::CallFunc_Multiply_VectorFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateTransformAdjust, CallFunc_Add_VectorVector_ReturnValue_3) == 0x0003F4, "Member 'BP_BrainCrashManager_C_PrivateUpdateTransformAdjust::CallFunc_Add_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateTransformAdjust, CallFunc_Add_VectorVector_ReturnValue_4) == 0x000400, "Member 'BP_BrainCrashManager_C_PrivateUpdateTransformAdjust::CallFunc_Add_VectorVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateTransformAdjust, CallFunc_Add_VectorVector_ReturnValue_5) == 0x00040C, "Member 'BP_BrainCrashManager_C_PrivateUpdateTransformAdjust::CallFunc_Add_VectorVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateTransformAdjust, CallFunc_K2_SetActorRelativeLocation_SweepHitResult_2) == 0x000418, "Member 'BP_BrainCrashManager_C_PrivateUpdateTransformAdjust::CallFunc_K2_SetActorRelativeLocation_SweepHitResult_2' has a wrong offset!");

// Function BP_BrainCrashManager.BP_BrainCrashManager_C.IsPlayingAnyBrainCrash
// 0x0004 (0x0004 - 0x0000)
struct BP_BrainCrashManager_C_IsPlayingAnyBrainCrash final
{
public:
	bool                                          NowPlaying;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayingGeneralBrainCrash_IsGeneral;     // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayingUniqueBrainCrash_IsUnique;       // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BrainCrashManager_C_IsPlayingAnyBrainCrash) == 0x000001, "Wrong alignment on BP_BrainCrashManager_C_IsPlayingAnyBrainCrash");
static_assert(sizeof(BP_BrainCrashManager_C_IsPlayingAnyBrainCrash) == 0x000004, "Wrong size on BP_BrainCrashManager_C_IsPlayingAnyBrainCrash");
static_assert(offsetof(BP_BrainCrashManager_C_IsPlayingAnyBrainCrash, NowPlaying) == 0x000000, "Member 'BP_BrainCrashManager_C_IsPlayingAnyBrainCrash::NowPlaying' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_IsPlayingAnyBrainCrash, CallFunc_IsPlayingGeneralBrainCrash_IsGeneral) == 0x000001, "Member 'BP_BrainCrashManager_C_IsPlayingAnyBrainCrash::CallFunc_IsPlayingGeneralBrainCrash_IsGeneral' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_IsPlayingAnyBrainCrash, CallFunc_IsPlayingUniqueBrainCrash_IsUnique) == 0x000002, "Member 'BP_BrainCrashManager_C_IsPlayingAnyBrainCrash::CallFunc_IsPlayingUniqueBrainCrash_IsUnique' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_IsPlayingAnyBrainCrash, CallFunc_BooleanOR_ReturnValue) == 0x000003, "Member 'BP_BrainCrashManager_C_IsPlayingAnyBrainCrash::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_BrainCrashManager.BP_BrainCrashManager_C.SetStartRootTransform
// 0x00E0 (0x00E0 - 0x0000)
struct BP_BrainCrashManager_C_SetStartRootTransform final
{
public:
	struct FTransform                             Transform;                                         // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	class ARSLevelSequenceActor*                  CallFunc_GetCurrentSequencer_Sequencer;            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue;            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_EventCameraRoot_C*                  CallFunc_GetCurrentSeqUniqueRoot_SeqUniqueRoot;    // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlaying_ReturnValue;                    // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C9F[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult;      // 0x004C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue;         // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BrainCrashManager_C_SetStartRootTransform) == 0x000010, "Wrong alignment on BP_BrainCrashManager_C_SetStartRootTransform");
static_assert(sizeof(BP_BrainCrashManager_C_SetStartRootTransform) == 0x0000E0, "Wrong size on BP_BrainCrashManager_C_SetStartRootTransform");
static_assert(offsetof(BP_BrainCrashManager_C_SetStartRootTransform, Transform) == 0x000000, "Member 'BP_BrainCrashManager_C_SetStartRootTransform::Transform' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_SetStartRootTransform, CallFunc_GetCurrentSequencer_Sequencer) == 0x000030, "Member 'BP_BrainCrashManager_C_SetStartRootTransform::CallFunc_GetCurrentSequencer_Sequencer' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_SetStartRootTransform, CallFunc_GetSequencePlayer_ReturnValue) == 0x000038, "Member 'BP_BrainCrashManager_C_SetStartRootTransform::CallFunc_GetSequencePlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_SetStartRootTransform, CallFunc_GetCurrentSeqUniqueRoot_SeqUniqueRoot) == 0x000040, "Member 'BP_BrainCrashManager_C_SetStartRootTransform::CallFunc_GetCurrentSeqUniqueRoot_SeqUniqueRoot' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_SetStartRootTransform, CallFunc_IsPlaying_ReturnValue) == 0x000048, "Member 'BP_BrainCrashManager_C_SetStartRootTransform::CallFunc_IsPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_SetStartRootTransform, CallFunc_K2_SetActorTransform_SweepHitResult) == 0x00004C, "Member 'BP_BrainCrashManager_C_SetStartRootTransform::CallFunc_K2_SetActorTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_SetStartRootTransform, CallFunc_K2_SetActorTransform_ReturnValue) == 0x0000D4, "Member 'BP_BrainCrashManager_C_SetStartRootTransform::CallFunc_K2_SetActorTransform_ReturnValue' has a wrong offset!");

// Function BP_BrainCrashManager.BP_BrainCrashManager_C.PrivateUpdateUniqueCamera
// 0x06A0 (0x06A0 - 0x0000)
struct BP_BrainCrashManager_C_PrivateUpdateUniqueCamera final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3CA0[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTargetSearchComponent*                 TargetSearchComp;                                  // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               FinalMotionRotator;                                // 0x0010(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3CA1[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             InversePlayerTransform;                            // 0x0020(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	struct FTransform                             PlayerActorTransform;                              // 0x0050(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	class ARSCharacterBase*                       MainPlayer;                                        // 0x0080(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3CA2[0x7];                                     // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ICameraInterface>      K2Node_DynamicCast_AsCamera_Interface;             // 0x0090(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3CA3[0x7];                                     // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ICameraInterface>      K2Node_DynamicCast_AsCamera_Interface_1;           // 0x00A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3CA4[0x3];                                     // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_GetPlayerCameraRotation_ReturnValue;      // 0x00BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetPlayerCameraLocation_ReturnValue;      // 0x00C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3CA5[0x4];                                     // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3CA6[0x7];                                     // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCineCameraComponent*                   CallFunc_GetCineCameraComponent_ReturnValue;       // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCineCameraComponent*                   CallFunc_GetCineCameraComponent_ReturnValue_1;     // 0x00F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCineCameraComponent*                   CallFunc_GetCineCameraComponent_ReturnValue_2;     // 0x00F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCineCameraComponent*                   CallFunc_GetCineCameraComponent_ReturnValue_3;     // 0x0100(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3CA7[0x7];                                     // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0110(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetWorldTransform_SweepHitResult;      // 0x0140(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_IsLockTarget_ReturnValue;                 // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3CA8[0x3];                                     // 0x01C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCameraFilmbackSettings                K2Node_MakeStruct_CameraFilmbackSettings;          // 0x01CC(0x000C)(NoDestructor)
	struct FCameraLensSettings                    K2Node_MakeStruct_CameraLensSettings;              // 0x01D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3CA9[0x7];                                     // 0x01F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTargetSearchComponent*                 CallFunc_GetTargetSearchComponentFromActor_ReturnValue; // 0x01F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0201(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3CAA[0x6];                                     // 0x0202(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ICameraInterface>      K2Node_DynamicCast_AsCamera_Interface_2;           // 0x0208(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3CAB[0x3];                                     // 0x0219(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPlayerCameraFieldOfView_ReturnValue;   // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0220(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x022C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0238(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3CAC[0x4];                                     // 0x0244(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ICameraInterface>      K2Node_DynamicCast_AsCamera_Interface_3;           // 0x0248(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3CAD[0x3];                                     // 0x0259(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetPlayerCameraDirection_ReturnValue;     // 0x025C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class ICameraInterface>      K2Node_DynamicCast_AsCamera_Interface_4;           // 0x0268(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3CAE[0x3];                                     // 0x0279(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_GetPlayerCameraRotation_ReturnValue_1;    // 0x027C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x0288(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue_1; // 0x0294(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromX_ReturnValue;                 // 0x02A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x02AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x02AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3CAF[0x2];                                     // 0x02AE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x02B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x02BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x02C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x02D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3CB0[0x3];                                     // 0x02D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x02D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x02E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x02E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3CB1[0x2];                                     // 0x02E6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location_2;                // 0x02E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_2;                // 0x02F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_2;                   // 0x0300(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x030C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0310(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0314(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3CB2[0x8];                                     // 0x0318(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_InvertTransform_ReturnValue;              // 0x0320(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0350(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	TScriptInterface<class ICameraInterface>      K2Node_DynamicCast_AsCamera_Interface_5;           // 0x0380(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0390(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3CB3[0x3];                                     // 0x0391(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetPlayerCameraLocation_ReturnValue_1;    // 0x0394(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_3;                // 0x03A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_3;                // 0x03AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_3;                   // 0x03B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x03C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x03C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x03CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x03D0(0x0030)(IsPlainOldData, NoDestructor)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0400(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3CB4[0xC];                                     // 0x0404(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_ComposeTransforms_ReturnValue;            // 0x0410(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location_4;                // 0x0440(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_4;                // 0x044C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_4;                   // 0x0458(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_5;                // 0x0464(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_5;                // 0x0470(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_5;                   // 0x047C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_2;                      // 0x0488(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_2;                     // 0x048C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_2;                       // 0x0490(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0494(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3CB5[0x8];                                     // 0x0498(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_ComposeTransforms_ReturnValue_1;          // 0x04A0(0x0030)(IsPlainOldData, NoDestructor)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x04D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_6;                // 0x04D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_6;                // 0x04E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_6;                   // 0x04EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x04F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3CB6[0x4];                                     // 0x0504(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSLevelSequenceActor*                  CallFunc_GetCurrentSequencer_Sequencer;            // 0x0508(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTargetSearchComponent*                 CallFunc_GetTargetSearchComponentFromActor_ReturnValue_1; // 0x0510(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetSequenceInSpawnedActorListFromClass_ReturnValue; // 0x0518(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0528(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0530(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3CB7[0x7];                                     // 0x0531(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACineCameraActor*                       K2Node_DynamicCast_AsCine________;                 // 0x0538(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x0540(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3CB8[0x7];                                     // 0x0541(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCineCameraComponent*                   CallFunc_GetCineCameraComponent_ReturnValue_4;     // 0x0548(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCineCameraComponent*                   CallFunc_GetCineCameraComponent_ReturnValue_5;     // 0x0550(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0558(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3CB9[0x3];                                     // 0x0559(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue_2; // 0x055C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0568(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0574(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x0580(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3CBA[0x8];                                     // 0x0588(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x0590(0x0030)(IsPlainOldData, NoDestructor)
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x05C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x05C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3CBB[0x7];                                     // 0x05C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_GetPlayer_ReturnValue;                    // 0x05D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_2;        // 0x05D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x05E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x05E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3CBC[0x6];                                     // 0x05E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_3;        // 0x05E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class ICameraInterface>      K2Node_DynamicCast_AsCamera_Interface_6;           // 0x05F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x0600(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3CBD[0x7];                                     // 0x0601(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCineCameraComponent*                   CallFunc_GetCineCameraComponent_ReturnValue_6;     // 0x0608(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayerCameraFieldOfView_ReturnValue_1; // 0x0610(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3CBE[0x4];                                     // 0x0614(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ICameraInterface>      K2Node_DynamicCast_AsCamera_Interface_7;           // 0x0618(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x0628(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3CBF[0x3];                                     // 0x0629(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_GetPlayerCameraRotation_ReturnValue_2;    // 0x062C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class ICameraInterface>      K2Node_DynamicCast_AsCamera_Interface_8;           // 0x0638(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_9;                     // 0x0648(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3CC0[0x3];                                     // 0x0649(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetPlayerCameraLocation_ReturnValue_2;    // 0x064C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCineCameraComponent*                   CallFunc_GetCineCameraComponent_ReturnValue_7;     // 0x0658(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_2;              // 0x0660(0x0030)(IsPlainOldData, NoDestructor)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0690(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0694(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrainCrashManager_C_PrivateUpdateUniqueCamera) == 0x000010, "Wrong alignment on BP_BrainCrashManager_C_PrivateUpdateUniqueCamera");
static_assert(sizeof(BP_BrainCrashManager_C_PrivateUpdateUniqueCamera) == 0x0006A0, "Wrong size on BP_BrainCrashManager_C_PrivateUpdateUniqueCamera");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateUniqueCamera, DeltaSeconds) == 0x000000, "Member 'BP_BrainCrashManager_C_PrivateUpdateUniqueCamera::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateUniqueCamera, TargetSearchComp) == 0x000008, "Member 'BP_BrainCrashManager_C_PrivateUpdateUniqueCamera::TargetSearchComp' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateUniqueCamera, FinalMotionRotator) == 0x000010, "Member 'BP_BrainCrashManager_C_PrivateUpdateUniqueCamera::FinalMotionRotator' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateUniqueCamera, InversePlayerTransform) == 0x000020, "Member 'BP_BrainCrashManager_C_PrivateUpdateUniqueCamera::InversePlayerTransform' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateUniqueCamera, PlayerActorTransform) == 0x000050, "Member 'BP_BrainCrashManager_C_PrivateUpdateUniqueCamera::PlayerActorTransform' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateUniqueCamera, MainPlayer) == 0x000080, "Member 'BP_BrainCrashManager_C_PrivateUpdateUniqueCamera::MainPlayer' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateUniqueCamera, CallFunc_IsValid_ReturnValue) == 0x000088, "Member 'BP_BrainCrashManager_C_PrivateUpdateUniqueCamera::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateUniqueCamera, K2Node_DynamicCast_AsCamera_Interface) == 0x000090, "Member 'BP_BrainCrashManager_C_PrivateUpdateUniqueCamera::K2Node_DynamicCast_AsCamera_Interface' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateUniqueCamera, K2Node_DynamicCast_bSuccess) == 0x0000A0, "Member 'BP_BrainCrashManager_C_PrivateUpdateUniqueCamera::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateUniqueCamera, K2Node_DynamicCast_AsCamera_Interface_1) == 0x0000A8, "Member 'BP_BrainCrashManager_C_PrivateUpdateUniqueCamera::K2Node_DynamicCast_AsCamera_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateUniqueCamera, K2Node_DynamicCast_bSuccess_1) == 0x0000B8, "Member 'BP_BrainCrashManager_C_PrivateUpdateUniqueCamera::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateUniqueCamera, CallFunc_GetPlayerCameraRotation_ReturnValue) == 0x0000BC, "Member 'BP_BrainCrashManager_C_PrivateUpdateUniqueCamera::CallFunc_GetPlayerCameraRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateUniqueCamera, CallFunc_GetPlayerCameraLocation_ReturnValue) == 0x0000C8, "Member 'BP_BrainCrashManager_C_PrivateUpdateUniqueCamera::CallFunc_GetPlayerCameraLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateUniqueCamera, CallFunc_GetPlayerController_ReturnValue) == 0x0000D8, "Member 'BP_BrainCrashManager_C_PrivateUpdateUniqueCamera::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateUniqueCamera, CallFunc_Not_PreBool_ReturnValue) == 0x0000E0, "Member 'BP_BrainCrashManager_C_PrivateUpdateUniqueCamera::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateUniqueCamera, CallFunc_GetCineCameraComponent_ReturnValue) == 0x0000E8, "Member 'BP_BrainCrashManager_C_PrivateUpdateUniqueCamera::CallFunc_GetCineCameraComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateUniqueCamera, CallFunc_GetCineCameraComponent_ReturnValue_1) == 0x0000F0, "Member 'BP_BrainCrashManager_C_PrivateUpdateUniqueCamera::CallFunc_GetCineCameraComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateUniqueCamera, CallFunc_GetCineCameraComponent_ReturnValue_2) == 0x0000F8, "Member 'BP_BrainCrashManager_C_PrivateUpdateUniqueCamera::CallFunc_GetCineCameraComponent_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateUniqueCamera, CallFunc_GetCineCameraComponent_ReturnValue_3) == 0x000100, "Member 'BP_BrainCrashManager_C_PrivateUpdateUniqueCamera::CallFunc_GetCineCameraComponent_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateUniqueCamera, CallFunc_IsValid_ReturnValue_1) == 0x000108, "Member 'BP_BrainCrashManager_C_PrivateUpdateUniqueCamera::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateUniqueCamera, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000110, "Member 'BP_BrainCrashManager_C_PrivateUpdateUniqueCamera::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateUniqueCamera, CallFunc_K2_SetWorldTransform_SweepHitResult) == 0x000140, "Member 'BP_BrainCrashManager_C_PrivateUpdateUniqueCamera::CallFunc_K2_SetWorldTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateUniqueCamera, CallFunc_IsLockTarget_ReturnValue) == 0x0001C8, "Member 'BP_BrainCrashManager_C_PrivateUpdateUniqueCamera::CallFunc_IsLockTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateUniqueCamera, K2Node_MakeStruct_CameraFilmbackSettings) == 0x0001CC, "Member 'BP_BrainCrashManager_C_PrivateUpdateUniqueCamera::K2Node_MakeStruct_CameraFilmbackSettings' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateUniqueCamera, K2Node_MakeStruct_CameraLensSettings) == 0x0001D8, "Member 'BP_BrainCrashManager_C_PrivateUpdateUniqueCamera::K2Node_MakeStruct_CameraLensSettings' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateUniqueCamera, CallFunc_BooleanOR_ReturnValue) == 0x0001F0, "Member 'BP_BrainCrashManager_C_PrivateUpdateUniqueCamera::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateUniqueCamera, CallFunc_GetTargetSearchComponentFromActor_ReturnValue) == 0x0001F8, "Member 'BP_BrainCrashManager_C_PrivateUpdateUniqueCamera::CallFunc_GetTargetSearchComponentFromActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateUniqueCamera, CallFunc_IsValid_ReturnValue_2) == 0x000200, "Member 'BP_BrainCrashManager_C_PrivateUpdateUniqueCamera::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateUniqueCamera, CallFunc_IsValid_ReturnValue_3) == 0x000201, "Member 'BP_BrainCrashManager_C_PrivateUpdateUniqueCamera::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateUniqueCamera, K2Node_DynamicCast_AsCamera_Interface_2) == 0x000208, "Member 'BP_BrainCrashManager_C_PrivateUpdateUniqueCamera::K2Node_DynamicCast_AsCamera_Interface_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateUniqueCamera, K2Node_DynamicCast_bSuccess_2) == 0x000218, "Member 'BP_BrainCrashManager_C_PrivateUpdateUniqueCamera::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateUniqueCamera, CallFunc_GetPlayerCameraFieldOfView_ReturnValue) == 0x00021C, "Member 'BP_BrainCrashManager_C_PrivateUpdateUniqueCamera::CallFunc_GetPlayerCameraFieldOfView_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateUniqueCamera, CallFunc_BreakTransform_Location) == 0x000220, "Member 'BP_BrainCrashManager_C_PrivateUpdateUniqueCamera::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateUniqueCamera, CallFunc_BreakTransform_Rotation) == 0x00022C, "Member 'BP_BrainCrashManager_C_PrivateUpdateUniqueCamera::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateUniqueCamera, CallFunc_BreakTransform_Scale) == 0x000238, "Member 'BP_BrainCrashManager_C_PrivateUpdateUniqueCamera::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateUniqueCamera, K2Node_DynamicCast_AsCamera_Interface_3) == 0x000248, "Member 'BP_BrainCrashManager_C_PrivateUpdateUniqueCamera::K2Node_DynamicCast_AsCamera_Interface_3' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateUniqueCamera, K2Node_DynamicCast_bSuccess_3) == 0x000258, "Member 'BP_BrainCrashManager_C_PrivateUpdateUniqueCamera::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateUniqueCamera, CallFunc_GetPlayerCameraDirection_ReturnValue) == 0x00025C, "Member 'BP_BrainCrashManager_C_PrivateUpdateUniqueCamera::CallFunc_GetPlayerCameraDirection_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateUniqueCamera, K2Node_DynamicCast_AsCamera_Interface_4) == 0x000268, "Member 'BP_BrainCrashManager_C_PrivateUpdateUniqueCamera::K2Node_DynamicCast_AsCamera_Interface_4' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateUniqueCamera, K2Node_DynamicCast_bSuccess_4) == 0x000278, "Member 'BP_BrainCrashManager_C_PrivateUpdateUniqueCamera::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateUniqueCamera, CallFunc_GetPlayerCameraRotation_ReturnValue_1) == 0x00027C, "Member 'BP_BrainCrashManager_C_PrivateUpdateUniqueCamera::CallFunc_GetPlayerCameraRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateUniqueCamera, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x000288, "Member 'BP_BrainCrashManager_C_PrivateUpdateUniqueCamera::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateUniqueCamera, CallFunc_GreaterGreater_VectorRotator_ReturnValue_1) == 0x000294, "Member 'BP_BrainCrashManager_C_PrivateUpdateUniqueCamera::CallFunc_GreaterGreater_VectorRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateUniqueCamera, CallFunc_MakeRotFromX_ReturnValue) == 0x0002A0, "Member 'BP_BrainCrashManager_C_PrivateUpdateUniqueCamera::CallFunc_MakeRotFromX_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateUniqueCamera, CallFunc_Not_PreBool_ReturnValue_1) == 0x0002AC, "Member 'BP_BrainCrashManager_C_PrivateUpdateUniqueCamera::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateUniqueCamera, CallFunc_BooleanAND_ReturnValue) == 0x0002AD, "Member 'BP_BrainCrashManager_C_PrivateUpdateUniqueCamera::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateUniqueCamera, CallFunc_BreakTransform_Location_1) == 0x0002B0, "Member 'BP_BrainCrashManager_C_PrivateUpdateUniqueCamera::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateUniqueCamera, CallFunc_BreakTransform_Rotation_1) == 0x0002BC, "Member 'BP_BrainCrashManager_C_PrivateUpdateUniqueCamera::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateUniqueCamera, CallFunc_BreakTransform_Scale_1) == 0x0002C8, "Member 'BP_BrainCrashManager_C_PrivateUpdateUniqueCamera::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateUniqueCamera, CallFunc_BooleanOR_ReturnValue_1) == 0x0002D4, "Member 'BP_BrainCrashManager_C_PrivateUpdateUniqueCamera::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateUniqueCamera, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0002D8, "Member 'BP_BrainCrashManager_C_PrivateUpdateUniqueCamera::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateUniqueCamera, CallFunc_Not_PreBool_ReturnValue_2) == 0x0002E4, "Member 'BP_BrainCrashManager_C_PrivateUpdateUniqueCamera::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateUniqueCamera, CallFunc_BooleanAND_ReturnValue_1) == 0x0002E5, "Member 'BP_BrainCrashManager_C_PrivateUpdateUniqueCamera::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateUniqueCamera, CallFunc_BreakTransform_Location_2) == 0x0002E8, "Member 'BP_BrainCrashManager_C_PrivateUpdateUniqueCamera::CallFunc_BreakTransform_Location_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateUniqueCamera, CallFunc_BreakTransform_Rotation_2) == 0x0002F4, "Member 'BP_BrainCrashManager_C_PrivateUpdateUniqueCamera::CallFunc_BreakTransform_Rotation_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateUniqueCamera, CallFunc_BreakTransform_Scale_2) == 0x000300, "Member 'BP_BrainCrashManager_C_PrivateUpdateUniqueCamera::CallFunc_BreakTransform_Scale_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateUniqueCamera, CallFunc_BreakRotator_Roll) == 0x00030C, "Member 'BP_BrainCrashManager_C_PrivateUpdateUniqueCamera::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateUniqueCamera, CallFunc_BreakRotator_Pitch) == 0x000310, "Member 'BP_BrainCrashManager_C_PrivateUpdateUniqueCamera::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateUniqueCamera, CallFunc_BreakRotator_Yaw) == 0x000314, "Member 'BP_BrainCrashManager_C_PrivateUpdateUniqueCamera::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateUniqueCamera, CallFunc_InvertTransform_ReturnValue) == 0x000320, "Member 'BP_BrainCrashManager_C_PrivateUpdateUniqueCamera::CallFunc_InvertTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateUniqueCamera, CallFunc_GetTransform_ReturnValue) == 0x000350, "Member 'BP_BrainCrashManager_C_PrivateUpdateUniqueCamera::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateUniqueCamera, K2Node_DynamicCast_AsCamera_Interface_5) == 0x000380, "Member 'BP_BrainCrashManager_C_PrivateUpdateUniqueCamera::K2Node_DynamicCast_AsCamera_Interface_5' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateUniqueCamera, K2Node_DynamicCast_bSuccess_5) == 0x000390, "Member 'BP_BrainCrashManager_C_PrivateUpdateUniqueCamera::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateUniqueCamera, CallFunc_GetPlayerCameraLocation_ReturnValue_1) == 0x000394, "Member 'BP_BrainCrashManager_C_PrivateUpdateUniqueCamera::CallFunc_GetPlayerCameraLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateUniqueCamera, CallFunc_BreakTransform_Location_3) == 0x0003A0, "Member 'BP_BrainCrashManager_C_PrivateUpdateUniqueCamera::CallFunc_BreakTransform_Location_3' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateUniqueCamera, CallFunc_BreakTransform_Rotation_3) == 0x0003AC, "Member 'BP_BrainCrashManager_C_PrivateUpdateUniqueCamera::CallFunc_BreakTransform_Rotation_3' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateUniqueCamera, CallFunc_BreakTransform_Scale_3) == 0x0003B8, "Member 'BP_BrainCrashManager_C_PrivateUpdateUniqueCamera::CallFunc_BreakTransform_Scale_3' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateUniqueCamera, CallFunc_BreakRotator_Roll_1) == 0x0003C4, "Member 'BP_BrainCrashManager_C_PrivateUpdateUniqueCamera::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateUniqueCamera, CallFunc_BreakRotator_Pitch_1) == 0x0003C8, "Member 'BP_BrainCrashManager_C_PrivateUpdateUniqueCamera::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateUniqueCamera, CallFunc_BreakRotator_Yaw_1) == 0x0003CC, "Member 'BP_BrainCrashManager_C_PrivateUpdateUniqueCamera::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateUniqueCamera, CallFunc_MakeTransform_ReturnValue) == 0x0003D0, "Member 'BP_BrainCrashManager_C_PrivateUpdateUniqueCamera::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateUniqueCamera, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000400, "Member 'BP_BrainCrashManager_C_PrivateUpdateUniqueCamera::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateUniqueCamera, CallFunc_ComposeTransforms_ReturnValue) == 0x000410, "Member 'BP_BrainCrashManager_C_PrivateUpdateUniqueCamera::CallFunc_ComposeTransforms_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateUniqueCamera, CallFunc_BreakTransform_Location_4) == 0x000440, "Member 'BP_BrainCrashManager_C_PrivateUpdateUniqueCamera::CallFunc_BreakTransform_Location_4' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateUniqueCamera, CallFunc_BreakTransform_Rotation_4) == 0x00044C, "Member 'BP_BrainCrashManager_C_PrivateUpdateUniqueCamera::CallFunc_BreakTransform_Rotation_4' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateUniqueCamera, CallFunc_BreakTransform_Scale_4) == 0x000458, "Member 'BP_BrainCrashManager_C_PrivateUpdateUniqueCamera::CallFunc_BreakTransform_Scale_4' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateUniqueCamera, CallFunc_BreakTransform_Location_5) == 0x000464, "Member 'BP_BrainCrashManager_C_PrivateUpdateUniqueCamera::CallFunc_BreakTransform_Location_5' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateUniqueCamera, CallFunc_BreakTransform_Rotation_5) == 0x000470, "Member 'BP_BrainCrashManager_C_PrivateUpdateUniqueCamera::CallFunc_BreakTransform_Rotation_5' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateUniqueCamera, CallFunc_BreakTransform_Scale_5) == 0x00047C, "Member 'BP_BrainCrashManager_C_PrivateUpdateUniqueCamera::CallFunc_BreakTransform_Scale_5' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateUniqueCamera, CallFunc_BreakRotator_Roll_2) == 0x000488, "Member 'BP_BrainCrashManager_C_PrivateUpdateUniqueCamera::CallFunc_BreakRotator_Roll_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateUniqueCamera, CallFunc_BreakRotator_Pitch_2) == 0x00048C, "Member 'BP_BrainCrashManager_C_PrivateUpdateUniqueCamera::CallFunc_BreakRotator_Pitch_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateUniqueCamera, CallFunc_BreakRotator_Yaw_2) == 0x000490, "Member 'BP_BrainCrashManager_C_PrivateUpdateUniqueCamera::CallFunc_BreakRotator_Yaw_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateUniqueCamera, CallFunc_Add_FloatFloat_ReturnValue) == 0x000494, "Member 'BP_BrainCrashManager_C_PrivateUpdateUniqueCamera::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateUniqueCamera, CallFunc_ComposeTransforms_ReturnValue_1) == 0x0004A0, "Member 'BP_BrainCrashManager_C_PrivateUpdateUniqueCamera::CallFunc_ComposeTransforms_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateUniqueCamera, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x0004D0, "Member 'BP_BrainCrashManager_C_PrivateUpdateUniqueCamera::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateUniqueCamera, CallFunc_BreakTransform_Location_6) == 0x0004D4, "Member 'BP_BrainCrashManager_C_PrivateUpdateUniqueCamera::CallFunc_BreakTransform_Location_6' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateUniqueCamera, CallFunc_BreakTransform_Rotation_6) == 0x0004E0, "Member 'BP_BrainCrashManager_C_PrivateUpdateUniqueCamera::CallFunc_BreakTransform_Rotation_6' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateUniqueCamera, CallFunc_BreakTransform_Scale_6) == 0x0004EC, "Member 'BP_BrainCrashManager_C_PrivateUpdateUniqueCamera::CallFunc_BreakTransform_Scale_6' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateUniqueCamera, CallFunc_MakeRotator_ReturnValue) == 0x0004F8, "Member 'BP_BrainCrashManager_C_PrivateUpdateUniqueCamera::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateUniqueCamera, CallFunc_GetCurrentSequencer_Sequencer) == 0x000508, "Member 'BP_BrainCrashManager_C_PrivateUpdateUniqueCamera::CallFunc_GetCurrentSequencer_Sequencer' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateUniqueCamera, CallFunc_GetTargetSearchComponentFromActor_ReturnValue_1) == 0x000510, "Member 'BP_BrainCrashManager_C_PrivateUpdateUniqueCamera::CallFunc_GetTargetSearchComponentFromActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateUniqueCamera, CallFunc_GetSequenceInSpawnedActorListFromClass_ReturnValue) == 0x000518, "Member 'BP_BrainCrashManager_C_PrivateUpdateUniqueCamera::CallFunc_GetSequenceInSpawnedActorListFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateUniqueCamera, CallFunc_Array_Get_Item) == 0x000528, "Member 'BP_BrainCrashManager_C_PrivateUpdateUniqueCamera::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateUniqueCamera, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000530, "Member 'BP_BrainCrashManager_C_PrivateUpdateUniqueCamera::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateUniqueCamera, K2Node_DynamicCast_AsCine________) == 0x000538, "Member 'BP_BrainCrashManager_C_PrivateUpdateUniqueCamera::K2Node_DynamicCast_AsCine________' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateUniqueCamera, K2Node_DynamicCast_bSuccess_6) == 0x000540, "Member 'BP_BrainCrashManager_C_PrivateUpdateUniqueCamera::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateUniqueCamera, CallFunc_GetCineCameraComponent_ReturnValue_4) == 0x000548, "Member 'BP_BrainCrashManager_C_PrivateUpdateUniqueCamera::CallFunc_GetCineCameraComponent_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateUniqueCamera, CallFunc_GetCineCameraComponent_ReturnValue_5) == 0x000550, "Member 'BP_BrainCrashManager_C_PrivateUpdateUniqueCamera::CallFunc_GetCineCameraComponent_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateUniqueCamera, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000558, "Member 'BP_BrainCrashManager_C_PrivateUpdateUniqueCamera::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateUniqueCamera, CallFunc_GreaterGreater_VectorRotator_ReturnValue_2) == 0x00055C, "Member 'BP_BrainCrashManager_C_PrivateUpdateUniqueCamera::CallFunc_GreaterGreater_VectorRotator_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateUniqueCamera, CallFunc_Add_VectorVector_ReturnValue) == 0x000568, "Member 'BP_BrainCrashManager_C_PrivateUpdateUniqueCamera::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateUniqueCamera, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000574, "Member 'BP_BrainCrashManager_C_PrivateUpdateUniqueCamera::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateUniqueCamera, CallFunc_GetPlayerController_ReturnValue_1) == 0x000580, "Member 'BP_BrainCrashManager_C_PrivateUpdateUniqueCamera::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateUniqueCamera, CallFunc_MakeTransform_ReturnValue_1) == 0x000590, "Member 'BP_BrainCrashManager_C_PrivateUpdateUniqueCamera::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateUniqueCamera, CallFunc_GetPlayerManager_PlayerManager) == 0x0005C0, "Member 'BP_BrainCrashManager_C_PrivateUpdateUniqueCamera::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateUniqueCamera, CallFunc_IsValid_ReturnValue_4) == 0x0005C8, "Member 'BP_BrainCrashManager_C_PrivateUpdateUniqueCamera::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateUniqueCamera, CallFunc_GetPlayer_ReturnValue) == 0x0005D0, "Member 'BP_BrainCrashManager_C_PrivateUpdateUniqueCamera::CallFunc_GetPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateUniqueCamera, CallFunc_GetPlayerController_ReturnValue_2) == 0x0005D8, "Member 'BP_BrainCrashManager_C_PrivateUpdateUniqueCamera::CallFunc_GetPlayerController_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateUniqueCamera, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x0005E0, "Member 'BP_BrainCrashManager_C_PrivateUpdateUniqueCamera::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateUniqueCamera, CallFunc_BooleanOR_ReturnValue_2) == 0x0005E1, "Member 'BP_BrainCrashManager_C_PrivateUpdateUniqueCamera::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateUniqueCamera, CallFunc_GetPlayerController_ReturnValue_3) == 0x0005E8, "Member 'BP_BrainCrashManager_C_PrivateUpdateUniqueCamera::CallFunc_GetPlayerController_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateUniqueCamera, K2Node_DynamicCast_AsCamera_Interface_6) == 0x0005F0, "Member 'BP_BrainCrashManager_C_PrivateUpdateUniqueCamera::K2Node_DynamicCast_AsCamera_Interface_6' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateUniqueCamera, K2Node_DynamicCast_bSuccess_7) == 0x000600, "Member 'BP_BrainCrashManager_C_PrivateUpdateUniqueCamera::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateUniqueCamera, CallFunc_GetCineCameraComponent_ReturnValue_6) == 0x000608, "Member 'BP_BrainCrashManager_C_PrivateUpdateUniqueCamera::CallFunc_GetCineCameraComponent_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateUniqueCamera, CallFunc_GetPlayerCameraFieldOfView_ReturnValue_1) == 0x000610, "Member 'BP_BrainCrashManager_C_PrivateUpdateUniqueCamera::CallFunc_GetPlayerCameraFieldOfView_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateUniqueCamera, K2Node_DynamicCast_AsCamera_Interface_7) == 0x000618, "Member 'BP_BrainCrashManager_C_PrivateUpdateUniqueCamera::K2Node_DynamicCast_AsCamera_Interface_7' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateUniqueCamera, K2Node_DynamicCast_bSuccess_8) == 0x000628, "Member 'BP_BrainCrashManager_C_PrivateUpdateUniqueCamera::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateUniqueCamera, CallFunc_GetPlayerCameraRotation_ReturnValue_2) == 0x00062C, "Member 'BP_BrainCrashManager_C_PrivateUpdateUniqueCamera::CallFunc_GetPlayerCameraRotation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateUniqueCamera, K2Node_DynamicCast_AsCamera_Interface_8) == 0x000638, "Member 'BP_BrainCrashManager_C_PrivateUpdateUniqueCamera::K2Node_DynamicCast_AsCamera_Interface_8' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateUniqueCamera, K2Node_DynamicCast_bSuccess_9) == 0x000648, "Member 'BP_BrainCrashManager_C_PrivateUpdateUniqueCamera::K2Node_DynamicCast_bSuccess_9' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateUniqueCamera, CallFunc_GetPlayerCameraLocation_ReturnValue_2) == 0x00064C, "Member 'BP_BrainCrashManager_C_PrivateUpdateUniqueCamera::CallFunc_GetPlayerCameraLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateUniqueCamera, CallFunc_GetCineCameraComponent_ReturnValue_7) == 0x000658, "Member 'BP_BrainCrashManager_C_PrivateUpdateUniqueCamera::CallFunc_GetCineCameraComponent_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateUniqueCamera, CallFunc_MakeTransform_ReturnValue_2) == 0x000660, "Member 'BP_BrainCrashManager_C_PrivateUpdateUniqueCamera::CallFunc_MakeTransform_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateUniqueCamera, CallFunc_FClamp_ReturnValue) == 0x000690, "Member 'BP_BrainCrashManager_C_PrivateUpdateUniqueCamera::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateUniqueCamera, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000694, "Member 'BP_BrainCrashManager_C_PrivateUpdateUniqueCamera::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");

// Function BP_BrainCrashManager.BP_BrainCrashManager_C.Private Calc Unique Crash Finish Restore Transform FreeLoc
// 0x0180 (0x0180 - 0x0000)
struct BP_BrainCrashManager_C_Private_Calc_Unique_Crash_Finish_Restore_Transform_FreeLoc final
{
public:
	class ARSCharacterBase*                       Enemy;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSCharacterBase*                       MainPlayer;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             Transform;                                         // 0x0010(0x0030)(Parm, OutParm, IsPlainOldData, NoDestructor)
	int32                                         CheckRadius;                                       // 0x0040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3CC1[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector>                        CollisionCheckOffsets;                             // 0x0048(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FVector                                CheckLocation;                                     // 0x0058(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SafeLocation;                                      // 0x0064(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3CC2[0xB];                                     // 0x0065(0x000B)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             TmpTransform;                                      // 0x0070(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	float                                         SequencerRotation;                                 // 0x00A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RelativeLocation;                                  // 0x00A4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             EnemyTransform;                                    // 0x00B0(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	struct FTransform                             PlayerTransform;                                   // 0x00E0(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3CC3[0xF];                                     // 0x0111(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0120(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0151(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0152(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3CC4[0x5];                                     // 0x0153(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector>                        K2Node_MakeArray_Array;                            // 0x0158(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array_1;                          // 0x0168(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_SearchUniqueFinishEnemyLocation_ReturnValue; // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BrainCrashManager_C_Private_Calc_Unique_Crash_Finish_Restore_Transform_FreeLoc) == 0x000010, "Wrong alignment on BP_BrainCrashManager_C_Private_Calc_Unique_Crash_Finish_Restore_Transform_FreeLoc");
static_assert(sizeof(BP_BrainCrashManager_C_Private_Calc_Unique_Crash_Finish_Restore_Transform_FreeLoc) == 0x000180, "Wrong size on BP_BrainCrashManager_C_Private_Calc_Unique_Crash_Finish_Restore_Transform_FreeLoc");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Calc_Unique_Crash_Finish_Restore_Transform_FreeLoc, Enemy) == 0x000000, "Member 'BP_BrainCrashManager_C_Private_Calc_Unique_Crash_Finish_Restore_Transform_FreeLoc::Enemy' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Calc_Unique_Crash_Finish_Restore_Transform_FreeLoc, MainPlayer) == 0x000008, "Member 'BP_BrainCrashManager_C_Private_Calc_Unique_Crash_Finish_Restore_Transform_FreeLoc::MainPlayer' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Calc_Unique_Crash_Finish_Restore_Transform_FreeLoc, Transform) == 0x000010, "Member 'BP_BrainCrashManager_C_Private_Calc_Unique_Crash_Finish_Restore_Transform_FreeLoc::Transform' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Calc_Unique_Crash_Finish_Restore_Transform_FreeLoc, CheckRadius) == 0x000040, "Member 'BP_BrainCrashManager_C_Private_Calc_Unique_Crash_Finish_Restore_Transform_FreeLoc::CheckRadius' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Calc_Unique_Crash_Finish_Restore_Transform_FreeLoc, CollisionCheckOffsets) == 0x000048, "Member 'BP_BrainCrashManager_C_Private_Calc_Unique_Crash_Finish_Restore_Transform_FreeLoc::CollisionCheckOffsets' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Calc_Unique_Crash_Finish_Restore_Transform_FreeLoc, CheckLocation) == 0x000058, "Member 'BP_BrainCrashManager_C_Private_Calc_Unique_Crash_Finish_Restore_Transform_FreeLoc::CheckLocation' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Calc_Unique_Crash_Finish_Restore_Transform_FreeLoc, SafeLocation) == 0x000064, "Member 'BP_BrainCrashManager_C_Private_Calc_Unique_Crash_Finish_Restore_Transform_FreeLoc::SafeLocation' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Calc_Unique_Crash_Finish_Restore_Transform_FreeLoc, TmpTransform) == 0x000070, "Member 'BP_BrainCrashManager_C_Private_Calc_Unique_Crash_Finish_Restore_Transform_FreeLoc::TmpTransform' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Calc_Unique_Crash_Finish_Restore_Transform_FreeLoc, SequencerRotation) == 0x0000A0, "Member 'BP_BrainCrashManager_C_Private_Calc_Unique_Crash_Finish_Restore_Transform_FreeLoc::SequencerRotation' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Calc_Unique_Crash_Finish_Restore_Transform_FreeLoc, RelativeLocation) == 0x0000A4, "Member 'BP_BrainCrashManager_C_Private_Calc_Unique_Crash_Finish_Restore_Transform_FreeLoc::RelativeLocation' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Calc_Unique_Crash_Finish_Restore_Transform_FreeLoc, EnemyTransform) == 0x0000B0, "Member 'BP_BrainCrashManager_C_Private_Calc_Unique_Crash_Finish_Restore_Transform_FreeLoc::EnemyTransform' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Calc_Unique_Crash_Finish_Restore_Transform_FreeLoc, PlayerTransform) == 0x0000E0, "Member 'BP_BrainCrashManager_C_Private_Calc_Unique_Crash_Finish_Restore_Transform_FreeLoc::PlayerTransform' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Calc_Unique_Crash_Finish_Restore_Transform_FreeLoc, CallFunc_IsValid_ReturnValue) == 0x000110, "Member 'BP_BrainCrashManager_C_Private_Calc_Unique_Crash_Finish_Restore_Transform_FreeLoc::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Calc_Unique_Crash_Finish_Restore_Transform_FreeLoc, CallFunc_GetTransform_ReturnValue) == 0x000120, "Member 'BP_BrainCrashManager_C_Private_Calc_Unique_Crash_Finish_Restore_Transform_FreeLoc::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Calc_Unique_Crash_Finish_Restore_Transform_FreeLoc, CallFunc_IsValid_ReturnValue_1) == 0x000150, "Member 'BP_BrainCrashManager_C_Private_Calc_Unique_Crash_Finish_Restore_Transform_FreeLoc::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Calc_Unique_Crash_Finish_Restore_Transform_FreeLoc, CallFunc_BooleanAND_ReturnValue) == 0x000151, "Member 'BP_BrainCrashManager_C_Private_Calc_Unique_Crash_Finish_Restore_Transform_FreeLoc::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Calc_Unique_Crash_Finish_Restore_Transform_FreeLoc, CallFunc_IsValid_ReturnValue_2) == 0x000152, "Member 'BP_BrainCrashManager_C_Private_Calc_Unique_Crash_Finish_Restore_Transform_FreeLoc::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Calc_Unique_Crash_Finish_Restore_Transform_FreeLoc, K2Node_MakeArray_Array) == 0x000158, "Member 'BP_BrainCrashManager_C_Private_Calc_Unique_Crash_Finish_Restore_Transform_FreeLoc::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Calc_Unique_Crash_Finish_Restore_Transform_FreeLoc, K2Node_MakeArray_Array_1) == 0x000168, "Member 'BP_BrainCrashManager_C_Private_Calc_Unique_Crash_Finish_Restore_Transform_FreeLoc::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Calc_Unique_Crash_Finish_Restore_Transform_FreeLoc, CallFunc_SearchUniqueFinishEnemyLocation_ReturnValue) == 0x000178, "Member 'BP_BrainCrashManager_C_Private_Calc_Unique_Crash_Finish_Restore_Transform_FreeLoc::CallFunc_SearchUniqueFinishEnemyLocation_ReturnValue' has a wrong offset!");

// Function BP_BrainCrashManager.BP_BrainCrashManager_C.PrivateGetPlayerFinalTransform
// 0x0270 (0x0270 - 0x0000)
struct BP_BrainCrashManager_C_PrivateGetPlayerFinalTransform final
{
public:
	class ARSCharacterBase*                       MainPlayer;                                        // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3CC5[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_GetPlayer_ReturnValue;                    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetBoneIndex_ReturnValue;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0078(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array_1;                          // 0x0088(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	uint8                                         Pad_3CC6[0x8];                                     // 0x0098(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x00A0(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3CC7[0x3];                                     // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_TransformLocation_ReturnValue;            // 0x00D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x00E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit;         // 0x00F8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue;    // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3CC8[0x7];                                     // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0191(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3CC9[0x2];                                     // 0x0192(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x019C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x01A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x01B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x01C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3CCA[0x4];                                     // 0x01CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x01E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0204(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3CCB[0x3];                                     // 0x0211(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X_1;                          // 0x0214(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3CCC[0x4];                                     // 0x0224(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_GetCurrentActiveMontage_ReturnValue;      // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0230(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x023C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3CCD[0x3];                                     // 0x023D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetBoneTransformForAnimMontage_ReturnValue; // 0x0240(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BrainCrashManager_C_PrivateGetPlayerFinalTransform) == 0x000010, "Wrong alignment on BP_BrainCrashManager_C_PrivateGetPlayerFinalTransform");
static_assert(sizeof(BP_BrainCrashManager_C_PrivateGetPlayerFinalTransform) == 0x000270, "Wrong size on BP_BrainCrashManager_C_PrivateGetPlayerFinalTransform");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateGetPlayerFinalTransform, MainPlayer) == 0x000000, "Member 'BP_BrainCrashManager_C_PrivateGetPlayerFinalTransform::MainPlayer' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateGetPlayerFinalTransform, CallFunc_GetPlayerManager_PlayerManager) == 0x000008, "Member 'BP_BrainCrashManager_C_PrivateGetPlayerFinalTransform::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateGetPlayerFinalTransform, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_BrainCrashManager_C_PrivateGetPlayerFinalTransform::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateGetPlayerFinalTransform, CallFunc_GetPlayer_ReturnValue) == 0x000018, "Member 'BP_BrainCrashManager_C_PrivateGetPlayerFinalTransform::CallFunc_GetPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateGetPlayerFinalTransform, CallFunc_BreakTransform_Location) == 0x000020, "Member 'BP_BrainCrashManager_C_PrivateGetPlayerFinalTransform::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateGetPlayerFinalTransform, CallFunc_BreakTransform_Rotation) == 0x00002C, "Member 'BP_BrainCrashManager_C_PrivateGetPlayerFinalTransform::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateGetPlayerFinalTransform, CallFunc_BreakTransform_Scale) == 0x000038, "Member 'BP_BrainCrashManager_C_PrivateGetPlayerFinalTransform::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateGetPlayerFinalTransform, CallFunc_GetBoneIndex_ReturnValue) == 0x000044, "Member 'BP_BrainCrashManager_C_PrivateGetPlayerFinalTransform::CallFunc_GetBoneIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateGetPlayerFinalTransform, CallFunc_BreakTransform_Location_1) == 0x000048, "Member 'BP_BrainCrashManager_C_PrivateGetPlayerFinalTransform::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateGetPlayerFinalTransform, CallFunc_BreakTransform_Rotation_1) == 0x000054, "Member 'BP_BrainCrashManager_C_PrivateGetPlayerFinalTransform::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateGetPlayerFinalTransform, CallFunc_BreakTransform_Scale_1) == 0x000060, "Member 'BP_BrainCrashManager_C_PrivateGetPlayerFinalTransform::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateGetPlayerFinalTransform, CallFunc_BreakVector_X) == 0x00006C, "Member 'BP_BrainCrashManager_C_PrivateGetPlayerFinalTransform::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateGetPlayerFinalTransform, CallFunc_BreakVector_Y) == 0x000070, "Member 'BP_BrainCrashManager_C_PrivateGetPlayerFinalTransform::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateGetPlayerFinalTransform, CallFunc_BreakVector_Z) == 0x000074, "Member 'BP_BrainCrashManager_C_PrivateGetPlayerFinalTransform::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateGetPlayerFinalTransform, K2Node_MakeArray_Array) == 0x000078, "Member 'BP_BrainCrashManager_C_PrivateGetPlayerFinalTransform::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateGetPlayerFinalTransform, K2Node_MakeArray_Array_1) == 0x000088, "Member 'BP_BrainCrashManager_C_PrivateGetPlayerFinalTransform::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateGetPlayerFinalTransform, CallFunc_GetTransform_ReturnValue) == 0x0000A0, "Member 'BP_BrainCrashManager_C_PrivateGetPlayerFinalTransform::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateGetPlayerFinalTransform, CallFunc_IsValid_ReturnValue_1) == 0x0000D0, "Member 'BP_BrainCrashManager_C_PrivateGetPlayerFinalTransform::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateGetPlayerFinalTransform, CallFunc_TransformLocation_ReturnValue) == 0x0000D4, "Member 'BP_BrainCrashManager_C_PrivateGetPlayerFinalTransform::CallFunc_TransformLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateGetPlayerFinalTransform, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0000E0, "Member 'BP_BrainCrashManager_C_PrivateGetPlayerFinalTransform::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateGetPlayerFinalTransform, CallFunc_Add_VectorVector_ReturnValue) == 0x0000EC, "Member 'BP_BrainCrashManager_C_PrivateGetPlayerFinalTransform::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateGetPlayerFinalTransform, CallFunc_LineTraceSingleForObjects_OutHit) == 0x0000F8, "Member 'BP_BrainCrashManager_C_PrivateGetPlayerFinalTransform::CallFunc_LineTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateGetPlayerFinalTransform, CallFunc_LineTraceSingleForObjects_ReturnValue) == 0x000180, "Member 'BP_BrainCrashManager_C_PrivateGetPlayerFinalTransform::CallFunc_LineTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateGetPlayerFinalTransform, CallFunc_GetAnimInstance_ReturnValue) == 0x000188, "Member 'BP_BrainCrashManager_C_PrivateGetPlayerFinalTransform::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateGetPlayerFinalTransform, CallFunc_BreakHitResult_bBlockingHit) == 0x000190, "Member 'BP_BrainCrashManager_C_PrivateGetPlayerFinalTransform::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateGetPlayerFinalTransform, CallFunc_BreakHitResult_bInitialOverlap) == 0x000191, "Member 'BP_BrainCrashManager_C_PrivateGetPlayerFinalTransform::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateGetPlayerFinalTransform, CallFunc_BreakHitResult_Time) == 0x000194, "Member 'BP_BrainCrashManager_C_PrivateGetPlayerFinalTransform::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateGetPlayerFinalTransform, CallFunc_BreakHitResult_Distance) == 0x000198, "Member 'BP_BrainCrashManager_C_PrivateGetPlayerFinalTransform::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateGetPlayerFinalTransform, CallFunc_BreakHitResult_Location) == 0x00019C, "Member 'BP_BrainCrashManager_C_PrivateGetPlayerFinalTransform::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateGetPlayerFinalTransform, CallFunc_BreakHitResult_ImpactPoint) == 0x0001A8, "Member 'BP_BrainCrashManager_C_PrivateGetPlayerFinalTransform::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateGetPlayerFinalTransform, CallFunc_BreakHitResult_Normal) == 0x0001B4, "Member 'BP_BrainCrashManager_C_PrivateGetPlayerFinalTransform::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateGetPlayerFinalTransform, CallFunc_BreakHitResult_ImpactNormal) == 0x0001C0, "Member 'BP_BrainCrashManager_C_PrivateGetPlayerFinalTransform::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateGetPlayerFinalTransform, CallFunc_BreakHitResult_PhysMat) == 0x0001D0, "Member 'BP_BrainCrashManager_C_PrivateGetPlayerFinalTransform::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateGetPlayerFinalTransform, CallFunc_BreakHitResult_HitActor) == 0x0001D8, "Member 'BP_BrainCrashManager_C_PrivateGetPlayerFinalTransform::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateGetPlayerFinalTransform, CallFunc_BreakHitResult_HitComponent) == 0x0001E0, "Member 'BP_BrainCrashManager_C_PrivateGetPlayerFinalTransform::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateGetPlayerFinalTransform, CallFunc_BreakHitResult_HitBoneName) == 0x0001E8, "Member 'BP_BrainCrashManager_C_PrivateGetPlayerFinalTransform::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateGetPlayerFinalTransform, CallFunc_BreakHitResult_HitItem) == 0x0001F0, "Member 'BP_BrainCrashManager_C_PrivateGetPlayerFinalTransform::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateGetPlayerFinalTransform, CallFunc_BreakHitResult_FaceIndex) == 0x0001F4, "Member 'BP_BrainCrashManager_C_PrivateGetPlayerFinalTransform::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateGetPlayerFinalTransform, CallFunc_BreakHitResult_TraceStart) == 0x0001F8, "Member 'BP_BrainCrashManager_C_PrivateGetPlayerFinalTransform::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateGetPlayerFinalTransform, CallFunc_BreakHitResult_TraceEnd) == 0x000204, "Member 'BP_BrainCrashManager_C_PrivateGetPlayerFinalTransform::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateGetPlayerFinalTransform, CallFunc_IsValid_ReturnValue_2) == 0x000210, "Member 'BP_BrainCrashManager_C_PrivateGetPlayerFinalTransform::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateGetPlayerFinalTransform, CallFunc_BreakVector_X_1) == 0x000214, "Member 'BP_BrainCrashManager_C_PrivateGetPlayerFinalTransform::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateGetPlayerFinalTransform, CallFunc_BreakVector_Y_1) == 0x000218, "Member 'BP_BrainCrashManager_C_PrivateGetPlayerFinalTransform::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateGetPlayerFinalTransform, CallFunc_BreakVector_Z_1) == 0x00021C, "Member 'BP_BrainCrashManager_C_PrivateGetPlayerFinalTransform::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateGetPlayerFinalTransform, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000220, "Member 'BP_BrainCrashManager_C_PrivateGetPlayerFinalTransform::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateGetPlayerFinalTransform, CallFunc_GetCurrentActiveMontage_ReturnValue) == 0x000228, "Member 'BP_BrainCrashManager_C_PrivateGetPlayerFinalTransform::CallFunc_GetCurrentActiveMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateGetPlayerFinalTransform, CallFunc_MakeVector_ReturnValue) == 0x000230, "Member 'BP_BrainCrashManager_C_PrivateGetPlayerFinalTransform::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateGetPlayerFinalTransform, CallFunc_IsValid_ReturnValue_3) == 0x00023C, "Member 'BP_BrainCrashManager_C_PrivateGetPlayerFinalTransform::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateGetPlayerFinalTransform, CallFunc_GetBoneTransformForAnimMontage_ReturnValue) == 0x000240, "Member 'BP_BrainCrashManager_C_PrivateGetPlayerFinalTransform::CallFunc_GetBoneTransformForAnimMontage_ReturnValue' has a wrong offset!");

// Function BP_BrainCrashManager.BP_BrainCrashManager_C.PrivateUpdateFixedLocation
// 0x01F0 (0x01F0 - 0x0000)
struct BP_BrainCrashManager_C_PrivateUpdateFixedLocation final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3CCE[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_EventCameraRoot_C*                  CallFunc_GetCurrentSeqUniqueEnemyRoot_SeqUniqueEnemyRoot; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_EventCameraRoot_C*                  CallFunc_GetCurrentSeqCameraRoot_SeqCameraRoot;    // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorRelativeLocation_SweepHitResult; // 0x0018(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetActorRelativeLocation_SweepHitResult_1; // 0x00A0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class ABP_EventCameraRoot_C*                  CallFunc_GetCurrentSeqUniquePlayerRoot_SeqUniquePlayerRoot; // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorRelativeLocation_SweepHitResult_2; // 0x0130(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_3CCF[0x8];                                     // 0x01B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x01C0(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BrainCrashManager_C_PrivateUpdateFixedLocation) == 0x000010, "Wrong alignment on BP_BrainCrashManager_C_PrivateUpdateFixedLocation");
static_assert(sizeof(BP_BrainCrashManager_C_PrivateUpdateFixedLocation) == 0x0001F0, "Wrong size on BP_BrainCrashManager_C_PrivateUpdateFixedLocation");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateFixedLocation, DeltaSeconds) == 0x000000, "Member 'BP_BrainCrashManager_C_PrivateUpdateFixedLocation::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateFixedLocation, CallFunc_GetCurrentSeqUniqueEnemyRoot_SeqUniqueEnemyRoot) == 0x000008, "Member 'BP_BrainCrashManager_C_PrivateUpdateFixedLocation::CallFunc_GetCurrentSeqUniqueEnemyRoot_SeqUniqueEnemyRoot' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateFixedLocation, CallFunc_GetCurrentSeqCameraRoot_SeqCameraRoot) == 0x000010, "Member 'BP_BrainCrashManager_C_PrivateUpdateFixedLocation::CallFunc_GetCurrentSeqCameraRoot_SeqCameraRoot' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateFixedLocation, CallFunc_K2_SetActorRelativeLocation_SweepHitResult) == 0x000018, "Member 'BP_BrainCrashManager_C_PrivateUpdateFixedLocation::CallFunc_K2_SetActorRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateFixedLocation, CallFunc_K2_SetActorRelativeLocation_SweepHitResult_1) == 0x0000A0, "Member 'BP_BrainCrashManager_C_PrivateUpdateFixedLocation::CallFunc_K2_SetActorRelativeLocation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateFixedLocation, CallFunc_GetCurrentSeqUniquePlayerRoot_SeqUniquePlayerRoot) == 0x000128, "Member 'BP_BrainCrashManager_C_PrivateUpdateFixedLocation::CallFunc_GetCurrentSeqUniquePlayerRoot_SeqUniquePlayerRoot' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateFixedLocation, CallFunc_K2_SetActorRelativeLocation_SweepHitResult_2) == 0x000130, "Member 'BP_BrainCrashManager_C_PrivateUpdateFixedLocation::CallFunc_K2_SetActorRelativeLocation_SweepHitResult_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateFixedLocation, CallFunc_MakeTransform_ReturnValue) == 0x0001C0, "Member 'BP_BrainCrashManager_C_PrivateUpdateFixedLocation::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");

// Function BP_BrainCrashManager.BP_BrainCrashManager_C.PrivateUpdateActorDepthOffset
// 0x0014 (0x0014 - 0x0000)
struct BP_BrainCrashManager_C_PrivateUpdateActorDepthOffset final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Rate;                                              // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrainCrashManager_C_PrivateUpdateActorDepthOffset) == 0x000004, "Wrong alignment on BP_BrainCrashManager_C_PrivateUpdateActorDepthOffset");
static_assert(sizeof(BP_BrainCrashManager_C_PrivateUpdateActorDepthOffset) == 0x000014, "Wrong size on BP_BrainCrashManager_C_PrivateUpdateActorDepthOffset");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateActorDepthOffset, DeltaSeconds) == 0x000000, "Member 'BP_BrainCrashManager_C_PrivateUpdateActorDepthOffset::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateActorDepthOffset, Rate) == 0x000004, "Member 'BP_BrainCrashManager_C_PrivateUpdateActorDepthOffset::Rate' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateActorDepthOffset, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000008, "Member 'BP_BrainCrashManager_C_PrivateUpdateActorDepthOffset::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateActorDepthOffset, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00000C, "Member 'BP_BrainCrashManager_C_PrivateUpdateActorDepthOffset::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateActorDepthOffset, CallFunc_SelectFloat_ReturnValue) == 0x000010, "Member 'BP_BrainCrashManager_C_PrivateUpdateActorDepthOffset::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");

// Function BP_BrainCrashManager.BP_BrainCrashManager_C.PrivateEnableActorDepthOffset
// 0x0090 (0x0090 - 0x0000)
struct BP_BrainCrashManager_C_PrivateEnableActorDepthOffset final
{
public:
	class ARSCharacterBase*                       Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Enable;                                            // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3CD0[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_WeaponBase_C*                       Weapon;                                            // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_1;                      // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3CD1[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3CD2[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class USkeletalMeshComponent*>         CallFunc_GetExtraMesh_ExtraMesh;                   // 0x0040(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3CD3[0x2];                                     // 0x0052(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_PlayerInterface_C> K2Node_DynamicCast_AsBPI_Player_Interface;         // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3CD4[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_WeaponBase_C*>               CallFunc_GetPlayerWeaponList_WeaponList;           // 0x0070(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3CD5[0x3];                                     // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BrainCrashManager_C_PrivateEnableActorDepthOffset) == 0x000008, "Wrong alignment on BP_BrainCrashManager_C_PrivateEnableActorDepthOffset");
static_assert(sizeof(BP_BrainCrashManager_C_PrivateEnableActorDepthOffset) == 0x000090, "Wrong size on BP_BrainCrashManager_C_PrivateEnableActorDepthOffset");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateEnableActorDepthOffset, Character) == 0x000000, "Member 'BP_BrainCrashManager_C_PrivateEnableActorDepthOffset::Character' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateEnableActorDepthOffset, Enable) == 0x000008, "Member 'BP_BrainCrashManager_C_PrivateEnableActorDepthOffset::Enable' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateEnableActorDepthOffset, Weapon) == 0x000010, "Member 'BP_BrainCrashManager_C_PrivateEnableActorDepthOffset::Weapon' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateEnableActorDepthOffset, Temp_int_Loop_Num_Variable) == 0x000018, "Member 'BP_BrainCrashManager_C_PrivateEnableActorDepthOffset::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateEnableActorDepthOffset, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'BP_BrainCrashManager_C_PrivateEnableActorDepthOffset::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateEnableActorDepthOffset, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'BP_BrainCrashManager_C_PrivateEnableActorDepthOffset::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateEnableActorDepthOffset, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'BP_BrainCrashManager_C_PrivateEnableActorDepthOffset::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateEnableActorDepthOffset, Temp_int_Array_Index_Variable_1) == 0x000028, "Member 'BP_BrainCrashManager_C_PrivateEnableActorDepthOffset::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateEnableActorDepthOffset, Temp_int_Loop_Num_Variable_1) == 0x00002C, "Member 'BP_BrainCrashManager_C_PrivateEnableActorDepthOffset::Temp_int_Loop_Num_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateEnableActorDepthOffset, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'BP_BrainCrashManager_C_PrivateEnableActorDepthOffset::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateEnableActorDepthOffset, Temp_int_Loop_Counter_Variable_1) == 0x000034, "Member 'BP_BrainCrashManager_C_PrivateEnableActorDepthOffset::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateEnableActorDepthOffset, CallFunc_Less_IntInt_ReturnValue_1) == 0x000038, "Member 'BP_BrainCrashManager_C_PrivateEnableActorDepthOffset::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateEnableActorDepthOffset, CallFunc_Add_IntInt_ReturnValue_1) == 0x00003C, "Member 'BP_BrainCrashManager_C_PrivateEnableActorDepthOffset::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateEnableActorDepthOffset, CallFunc_GetExtraMesh_ExtraMesh) == 0x000040, "Member 'BP_BrainCrashManager_C_PrivateEnableActorDepthOffset::CallFunc_GetExtraMesh_ExtraMesh' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateEnableActorDepthOffset, CallFunc_IsValid_ReturnValue) == 0x000050, "Member 'BP_BrainCrashManager_C_PrivateEnableActorDepthOffset::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateEnableActorDepthOffset, CallFunc_IsValid_ReturnValue_1) == 0x000051, "Member 'BP_BrainCrashManager_C_PrivateEnableActorDepthOffset::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateEnableActorDepthOffset, CallFunc_Array_Length_ReturnValue) == 0x000054, "Member 'BP_BrainCrashManager_C_PrivateEnableActorDepthOffset::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateEnableActorDepthOffset, K2Node_DynamicCast_AsBPI_Player_Interface) == 0x000058, "Member 'BP_BrainCrashManager_C_PrivateEnableActorDepthOffset::K2Node_DynamicCast_AsBPI_Player_Interface' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateEnableActorDepthOffset, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'BP_BrainCrashManager_C_PrivateEnableActorDepthOffset::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateEnableActorDepthOffset, CallFunc_GetPlayerWeaponList_WeaponList) == 0x000070, "Member 'BP_BrainCrashManager_C_PrivateEnableActorDepthOffset::CallFunc_GetPlayerWeaponList_WeaponList' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateEnableActorDepthOffset, CallFunc_IsValid_ReturnValue_2) == 0x000080, "Member 'BP_BrainCrashManager_C_PrivateEnableActorDepthOffset::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateEnableActorDepthOffset, CallFunc_Array_Length_ReturnValue_1) == 0x000084, "Member 'BP_BrainCrashManager_C_PrivateEnableActorDepthOffset::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateEnableActorDepthOffset, CallFunc_IsValid_ReturnValue_3) == 0x000088, "Member 'BP_BrainCrashManager_C_PrivateEnableActorDepthOffset::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");

// Function BP_BrainCrashManager.BP_BrainCrashManager_C.PrivateEnableSkeletalDepthOffset
// 0x0010 (0x0010 - 0x0000)
struct BP_BrainCrashManager_C_PrivateEnableSkeletalDepthOffset final
{
public:
	class USkeletalMeshComponent*                 SkeletalMesh;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Enable;                                            // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3CD6[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Rate;                                              // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrainCrashManager_C_PrivateEnableSkeletalDepthOffset) == 0x000008, "Wrong alignment on BP_BrainCrashManager_C_PrivateEnableSkeletalDepthOffset");
static_assert(sizeof(BP_BrainCrashManager_C_PrivateEnableSkeletalDepthOffset) == 0x000010, "Wrong size on BP_BrainCrashManager_C_PrivateEnableSkeletalDepthOffset");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateEnableSkeletalDepthOffset, SkeletalMesh) == 0x000000, "Member 'BP_BrainCrashManager_C_PrivateEnableSkeletalDepthOffset::SkeletalMesh' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateEnableSkeletalDepthOffset, Enable) == 0x000008, "Member 'BP_BrainCrashManager_C_PrivateEnableSkeletalDepthOffset::Enable' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateEnableSkeletalDepthOffset, Rate) == 0x00000C, "Member 'BP_BrainCrashManager_C_PrivateEnableSkeletalDepthOffset::Rate' has a wrong offset!");

// Function BP_BrainCrashManager.BP_BrainCrashManager_C.PrivateUpdateDither
// 0x0040 (0x0040 - 0x0000)
struct BP_BrainCrashManager_C_PrivateUpdateDither final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Finish;                                            // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3CD7[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         IgnoreActors;                                      // 0x0008(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	float                                         CallFunc_SetupCutSceneActorHideDither_UpdatedTime; // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x001F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetupCutSceneActorHideDither_UpdatedTime_1; // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayingAnyBrainCrash_NowPlaying;        // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3CD8[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetupCutSceneActorHideDither_UpdatedTime_2; // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3CD9[0x2];                                     // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrainCrashManager_C_PrivateUpdateDither) == 0x000008, "Wrong alignment on BP_BrainCrashManager_C_PrivateUpdateDither");
static_assert(sizeof(BP_BrainCrashManager_C_PrivateUpdateDither) == 0x000040, "Wrong size on BP_BrainCrashManager_C_PrivateUpdateDither");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateDither, DeltaSeconds) == 0x000000, "Member 'BP_BrainCrashManager_C_PrivateUpdateDither::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateDither, Finish) == 0x000004, "Member 'BP_BrainCrashManager_C_PrivateUpdateDither::Finish' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateDither, IgnoreActors) == 0x000008, "Member 'BP_BrainCrashManager_C_PrivateUpdateDither::IgnoreActors' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateDither, CallFunc_SetupCutSceneActorHideDither_UpdatedTime) == 0x000018, "Member 'BP_BrainCrashManager_C_PrivateUpdateDither::CallFunc_SetupCutSceneActorHideDither_UpdatedTime' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateDither, CallFunc_Greater_IntInt_ReturnValue) == 0x00001C, "Member 'BP_BrainCrashManager_C_PrivateUpdateDither::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateDither, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00001D, "Member 'BP_BrainCrashManager_C_PrivateUpdateDither::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateDither, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x00001E, "Member 'BP_BrainCrashManager_C_PrivateUpdateDither::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateDither, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x00001F, "Member 'BP_BrainCrashManager_C_PrivateUpdateDither::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateDither, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BP_BrainCrashManager_C_PrivateUpdateDither::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateDither, CallFunc_SetupCutSceneActorHideDither_UpdatedTime_1) == 0x000024, "Member 'BP_BrainCrashManager_C_PrivateUpdateDither::CallFunc_SetupCutSceneActorHideDither_UpdatedTime_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateDither, CallFunc_IsPlayingAnyBrainCrash_NowPlaying) == 0x000028, "Member 'BP_BrainCrashManager_C_PrivateUpdateDither::CallFunc_IsPlayingAnyBrainCrash_NowPlaying' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateDither, CallFunc_Array_Add_ReturnValue) == 0x00002C, "Member 'BP_BrainCrashManager_C_PrivateUpdateDither::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateDither, CallFunc_SetupCutSceneActorHideDither_UpdatedTime_2) == 0x000030, "Member 'BP_BrainCrashManager_C_PrivateUpdateDither::CallFunc_SetupCutSceneActorHideDither_UpdatedTime_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateDither, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000034, "Member 'BP_BrainCrashManager_C_PrivateUpdateDither::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateDither, CallFunc_BooleanOR_ReturnValue) == 0x000035, "Member 'BP_BrainCrashManager_C_PrivateUpdateDither::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateDither, Temp_int_Variable) == 0x000038, "Member 'BP_BrainCrashManager_C_PrivateUpdateDither::Temp_int_Variable' has a wrong offset!");

// Function BP_BrainCrashManager.BP_BrainCrashManager_C.PrivateOnCameraCutChange
// 0x0048 (0x0048 - 0x0000)
struct BP_BrainCrashManager_C_PrivateOnCameraCutChange final
{
public:
	class UCameraComponent*                       CameraComp;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IEventInterface>       CallFunc_EventPhysicsIdling_self_CastInput;        // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3CDA[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetViewTarget_ReturnValue;                // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACineCameraActor*                       K2Node_DynamicCast_AsCine________;                 // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3CDB[0x5];                                     // 0x003B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrainCrashManager_C_PrivateOnCameraCutChange) == 0x000008, "Wrong alignment on BP_BrainCrashManager_C_PrivateOnCameraCutChange");
static_assert(sizeof(BP_BrainCrashManager_C_PrivateOnCameraCutChange) == 0x000048, "Wrong size on BP_BrainCrashManager_C_PrivateOnCameraCutChange");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateOnCameraCutChange, CameraComp) == 0x000000, "Member 'BP_BrainCrashManager_C_PrivateOnCameraCutChange::CameraComp' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateOnCameraCutChange, CallFunc_EventPhysicsIdling_self_CastInput) == 0x000008, "Member 'BP_BrainCrashManager_C_PrivateOnCameraCutChange::CallFunc_EventPhysicsIdling_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateOnCameraCutChange, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_BrainCrashManager_C_PrivateOnCameraCutChange::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateOnCameraCutChange, CallFunc_GetPlayerController_ReturnValue) == 0x000020, "Member 'BP_BrainCrashManager_C_PrivateOnCameraCutChange::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateOnCameraCutChange, CallFunc_GetViewTarget_ReturnValue) == 0x000028, "Member 'BP_BrainCrashManager_C_PrivateOnCameraCutChange::CallFunc_GetViewTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateOnCameraCutChange, K2Node_DynamicCast_AsCine________) == 0x000030, "Member 'BP_BrainCrashManager_C_PrivateOnCameraCutChange::K2Node_DynamicCast_AsCine________' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateOnCameraCutChange, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_BrainCrashManager_C_PrivateOnCameraCutChange::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateOnCameraCutChange, CallFunc_IsValid_ReturnValue_1) == 0x000039, "Member 'BP_BrainCrashManager_C_PrivateOnCameraCutChange::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateOnCameraCutChange, CallFunc_IsValid_ReturnValue_2) == 0x00003A, "Member 'BP_BrainCrashManager_C_PrivateOnCameraCutChange::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateOnCameraCutChange, CallFunc_GetPlayerController_ReturnValue_1) == 0x000040, "Member 'BP_BrainCrashManager_C_PrivateOnCameraCutChange::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");

// Function BP_BrainCrashManager.BP_BrainCrashManager_C.SearchSafePoint
// 0x0170 (0x0170 - 0x0000)
struct BP_BrainCrashManager_C_SearchSafePoint final
{
public:
	struct FVector                                PlayerLocation;                                    // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TargetLocation;                                    // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattleCharacter_C*                   TargetEnemy;                                       // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Valid;                                             // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3CDC[0xF];                                     // 0x0021(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RootTransform;                                     // 0x0030(0x0030)(Parm, OutParm, IsPlainOldData, NoDestructor)
	class FString                                 EnemyName;                                         // 0x0060(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0070(0x0030)(IsPlainOldData, NoDestructor)
	class ABP_BrainFieldManager_C*                CallFunc_GetBrainFieldManager_Manager;             // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_InBranField_InBrainDield;                 // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3CDD[0x6];                                     // 0x00AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetCurrentLevelName_ReturnValue;          // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_FindSubstring_ReturnValue;                // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3CDE[0x3];                                     // 0x00C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3CDF[0x4];                                     // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Mid_ReturnValue;                          // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3CE0[0x3];                                     // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_StringToInt_ReturnValue;             // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x00EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3CE1[0x1];                                     // 0x00EB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetName_ReturnValue;                      // 0x00EC(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SearchSafePointCheckBFETFromLocationSettings_Hit; // 0x00F5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3CE2[0xA];                                     // 0x00F6(0x000A)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_SearchSafePointCheckBFETFromLocationSettings_SafePointTransform; // 0x0100(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_SearchSafePointCheckBFETFromLocationSettings_SequencerRootTransform; // 0x0130(0x0030)(IsPlainOldData, NoDestructor)
	float                                         CallFunc_SearchSafePointCheckBFETFromLocationSettings_Length; // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrainCrashManager_C_SearchSafePoint) == 0x000010, "Wrong alignment on BP_BrainCrashManager_C_SearchSafePoint");
static_assert(sizeof(BP_BrainCrashManager_C_SearchSafePoint) == 0x000170, "Wrong size on BP_BrainCrashManager_C_SearchSafePoint");
static_assert(offsetof(BP_BrainCrashManager_C_SearchSafePoint, PlayerLocation) == 0x000000, "Member 'BP_BrainCrashManager_C_SearchSafePoint::PlayerLocation' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_SearchSafePoint, TargetLocation) == 0x00000C, "Member 'BP_BrainCrashManager_C_SearchSafePoint::TargetLocation' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_SearchSafePoint, TargetEnemy) == 0x000018, "Member 'BP_BrainCrashManager_C_SearchSafePoint::TargetEnemy' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_SearchSafePoint, Valid) == 0x000020, "Member 'BP_BrainCrashManager_C_SearchSafePoint::Valid' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_SearchSafePoint, RootTransform) == 0x000030, "Member 'BP_BrainCrashManager_C_SearchSafePoint::RootTransform' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_SearchSafePoint, EnemyName) == 0x000060, "Member 'BP_BrainCrashManager_C_SearchSafePoint::EnemyName' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_SearchSafePoint, CallFunc_MakeTransform_ReturnValue) == 0x000070, "Member 'BP_BrainCrashManager_C_SearchSafePoint::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_SearchSafePoint, CallFunc_GetBrainFieldManager_Manager) == 0x0000A0, "Member 'BP_BrainCrashManager_C_SearchSafePoint::CallFunc_GetBrainFieldManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_SearchSafePoint, CallFunc_IsValid_ReturnValue) == 0x0000A8, "Member 'BP_BrainCrashManager_C_SearchSafePoint::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_SearchSafePoint, CallFunc_InBranField_InBrainDield) == 0x0000A9, "Member 'BP_BrainCrashManager_C_SearchSafePoint::CallFunc_InBranField_InBrainDield' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_SearchSafePoint, CallFunc_GetCurrentLevelName_ReturnValue) == 0x0000B0, "Member 'BP_BrainCrashManager_C_SearchSafePoint::CallFunc_GetCurrentLevelName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_SearchSafePoint, CallFunc_FindSubstring_ReturnValue) == 0x0000C0, "Member 'BP_BrainCrashManager_C_SearchSafePoint::CallFunc_FindSubstring_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_SearchSafePoint, CallFunc_IsValid_ReturnValue_1) == 0x0000C4, "Member 'BP_BrainCrashManager_C_SearchSafePoint::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_SearchSafePoint, CallFunc_Add_IntInt_ReturnValue) == 0x0000C8, "Member 'BP_BrainCrashManager_C_SearchSafePoint::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_SearchSafePoint, CallFunc_Mid_ReturnValue) == 0x0000D0, "Member 'BP_BrainCrashManager_C_SearchSafePoint::CallFunc_Mid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_SearchSafePoint, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0000E0, "Member 'BP_BrainCrashManager_C_SearchSafePoint::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_SearchSafePoint, CallFunc_Conv_StringToInt_ReturnValue) == 0x0000E4, "Member 'BP_BrainCrashManager_C_SearchSafePoint::CallFunc_Conv_StringToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_SearchSafePoint, CallFunc_IsValid_ReturnValue_2) == 0x0000E8, "Member 'BP_BrainCrashManager_C_SearchSafePoint::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_SearchSafePoint, CallFunc_IsValid_ReturnValue_3) == 0x0000E9, "Member 'BP_BrainCrashManager_C_SearchSafePoint::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_SearchSafePoint, CallFunc_IsValid_ReturnValue_4) == 0x0000EA, "Member 'BP_BrainCrashManager_C_SearchSafePoint::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_SearchSafePoint, CallFunc_GetName_ReturnValue) == 0x0000EC, "Member 'BP_BrainCrashManager_C_SearchSafePoint::CallFunc_GetName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_SearchSafePoint, CallFunc_IsValid_ReturnValue_5) == 0x0000F4, "Member 'BP_BrainCrashManager_C_SearchSafePoint::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_SearchSafePoint, CallFunc_SearchSafePointCheckBFETFromLocationSettings_Hit) == 0x0000F5, "Member 'BP_BrainCrashManager_C_SearchSafePoint::CallFunc_SearchSafePointCheckBFETFromLocationSettings_Hit' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_SearchSafePoint, CallFunc_SearchSafePointCheckBFETFromLocationSettings_SafePointTransform) == 0x000100, "Member 'BP_BrainCrashManager_C_SearchSafePoint::CallFunc_SearchSafePointCheckBFETFromLocationSettings_SafePointTransform' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_SearchSafePoint, CallFunc_SearchSafePointCheckBFETFromLocationSettings_SequencerRootTransform) == 0x000130, "Member 'BP_BrainCrashManager_C_SearchSafePoint::CallFunc_SearchSafePointCheckBFETFromLocationSettings_SequencerRootTransform' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_SearchSafePoint, CallFunc_SearchSafePointCheckBFETFromLocationSettings_Length) == 0x000160, "Member 'BP_BrainCrashManager_C_SearchSafePoint::CallFunc_SearchSafePointCheckBFETFromLocationSettings_Length' has a wrong offset!");

// Function BP_BrainCrashManager.BP_BrainCrashManager_C.ReloadSafePointData
// 0x0028 (0x0028 - 0x0000)
struct BP_BrainCrashManager_C_ReloadSafePointData final
{
public:
	class FString                                 EnemyName;                                         // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class ABP_SceneManager_C*                     CallFunc_GetSceneManager_SceneManager;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCurrentLocationAndArea_LocationID;     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCurrentLocationAndArea_AreaID;         // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BrainCrashManager_C_ReloadSafePointData) == 0x000008, "Wrong alignment on BP_BrainCrashManager_C_ReloadSafePointData");
static_assert(sizeof(BP_BrainCrashManager_C_ReloadSafePointData) == 0x000028, "Wrong size on BP_BrainCrashManager_C_ReloadSafePointData");
static_assert(offsetof(BP_BrainCrashManager_C_ReloadSafePointData, EnemyName) == 0x000000, "Member 'BP_BrainCrashManager_C_ReloadSafePointData::EnemyName' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ReloadSafePointData, CallFunc_GetSceneManager_SceneManager) == 0x000010, "Member 'BP_BrainCrashManager_C_ReloadSafePointData::CallFunc_GetSceneManager_SceneManager' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ReloadSafePointData, CallFunc_GetCurrentLocationAndArea_LocationID) == 0x000018, "Member 'BP_BrainCrashManager_C_ReloadSafePointData::CallFunc_GetCurrentLocationAndArea_LocationID' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ReloadSafePointData, CallFunc_GetCurrentLocationAndArea_AreaID) == 0x00001C, "Member 'BP_BrainCrashManager_C_ReloadSafePointData::CallFunc_GetCurrentLocationAndArea_AreaID' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ReloadSafePointData, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_BrainCrashManager_C_ReloadSafePointData::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_BrainCrashManager.BP_BrainCrashManager_C.LoadSafePointData
// 0x0030 (0x0030 - 0x0000)
struct BP_BrainCrashManager_C_LoadSafePointData final
{
public:
	int32                                         LoationID;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AreaId;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 EnemyName;                                         // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class UBrainCrashLocationSettings*            CallFunc_LoadSafePointLocationAsset_LocationSetting; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_LoadSafePointLocationAsset_AssetPath;     // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrainCrashManager_C_LoadSafePointData) == 0x000008, "Wrong alignment on BP_BrainCrashManager_C_LoadSafePointData");
static_assert(sizeof(BP_BrainCrashManager_C_LoadSafePointData) == 0x000030, "Wrong size on BP_BrainCrashManager_C_LoadSafePointData");
static_assert(offsetof(BP_BrainCrashManager_C_LoadSafePointData, LoationID) == 0x000000, "Member 'BP_BrainCrashManager_C_LoadSafePointData::LoationID' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_LoadSafePointData, AreaId) == 0x000004, "Member 'BP_BrainCrashManager_C_LoadSafePointData::AreaId' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_LoadSafePointData, EnemyName) == 0x000008, "Member 'BP_BrainCrashManager_C_LoadSafePointData::EnemyName' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_LoadSafePointData, CallFunc_LoadSafePointLocationAsset_LocationSetting) == 0x000018, "Member 'BP_BrainCrashManager_C_LoadSafePointData::CallFunc_LoadSafePointLocationAsset_LocationSetting' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_LoadSafePointData, CallFunc_LoadSafePointLocationAsset_AssetPath) == 0x000020, "Member 'BP_BrainCrashManager_C_LoadSafePointData::CallFunc_LoadSafePointLocationAsset_AssetPath' has a wrong offset!");

// Function BP_BrainCrashManager.BP_BrainCrashManager_C.GetSafePointLocationData
// 0x0018 (0x0018 - 0x0000)
struct BP_BrainCrashManager_C_GetSafePointLocationData final
{
public:
	class UBrainCrashLocationSettings*            Param_LocationSafePoint;                           // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 EnemyName;                                         // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrainCrashManager_C_GetSafePointLocationData) == 0x000008, "Wrong alignment on BP_BrainCrashManager_C_GetSafePointLocationData");
static_assert(sizeof(BP_BrainCrashManager_C_GetSafePointLocationData) == 0x000018, "Wrong size on BP_BrainCrashManager_C_GetSafePointLocationData");
static_assert(offsetof(BP_BrainCrashManager_C_GetSafePointLocationData, Param_LocationSafePoint) == 0x000000, "Member 'BP_BrainCrashManager_C_GetSafePointLocationData::Param_LocationSafePoint' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_GetSafePointLocationData, EnemyName) == 0x000008, "Member 'BP_BrainCrashManager_C_GetSafePointLocationData::EnemyName' has a wrong offset!");

// Function BP_BrainCrashManager.BP_BrainCrashManager_C.PrivatePlaySequencerPlayer
// 0x0510 (0x0510 - 0x0000)
struct BP_BrainCrashManager_C_PrivatePlaySequencerPlayer final
{
public:
	TArray<class ARSCharacterBase*>               EnemyList;                                         // 0x0000(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	struct FVector                                PlayerReferenceLocation;                           // 0x0010(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3CE3[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       MainPlayer;                                        // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattleCharacter_C*                   Target;                                            // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          AnimInstance;                                      // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3CE4[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSCharacterBase*                       CallFunc_GetPlayer_ReturnValue;                    // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IEventInterface>       K2Node_DynamicCast_AsEvent_Interface;              // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3CE5[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSLevelSequenceActor*                  CallFunc_GetCurrentSequencer_Sequencer;            // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSLevelSequenceActor*                  CallFunc_GetCurrentSequencer_Sequencer_1;          // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSLevelSequenceActor*                  CallFunc_GetCurrentSequencer_Sequencer_2;          // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue;            // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue_1;          // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FQualifiedFrameTime                    CallFunc_GetEndTime_ReturnValue;                   // 0x0090(0x0010)(NoDestructor, HasGetValueTypeHash)
	struct FQualifiedFrameTime                    CallFunc_GetStartTime_ReturnValue;                 // 0x00A0(0x0010)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_QualifiedFrameTimeToSeconds_ReturnValue; // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PostProcessManager_C*               CallFunc_GetPostProcessManager_Manager;            // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActivePerformShot_IsActive;             // 0x00CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00CE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3CE6[0x1];                                     // 0x00CF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x00D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3CE7[0x4];                                     // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_EnemyManager_C*                     CallFunc_GetEnemyManager_Manager;                  // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3CE8[0x6];                                     // 0x00EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IEventInterface>       CallFunc_EventPhysicsIdling_self_CastInput;        // 0x00F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class ARSCharacterBase*>               CallFunc_GetEnemyList_ReturnValue;                 // 0x0100(0x0010)(ReferenceParm, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0110(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3CE9[0x4];                                     // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0120(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x013C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x0148(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0154(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager_1;         // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3CEA[0x3];                                     // 0x0169(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x016C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0178(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3CEB[0x4];                                     // 0x0184(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_GetPlayer_ReturnValue_1;                  // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0190(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x019C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x01A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3CEC[0x4];                                     // 0x01B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array_1;                          // 0x01B8(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit;         // 0x01D4(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue;    // 0x025C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x025D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x025E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3CED[0x1];                                     // 0x025F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0264(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0268(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0274(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0280(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x028C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x02A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x02B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x02BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x02C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x02CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x02D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x02DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x02E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x02E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x02E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x02EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x02F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x02FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3CEE[0x3];                                     // 0x02FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x0300(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x030C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x0318(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x0324(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0330(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_2;                          // 0x033C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x0340(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x0344(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0348(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x0354(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array_2;                          // 0x0360(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x0370(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3CEF[0x4];                                     // 0x037C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array_3;                          // 0x0380(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit_1;       // 0x0390(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue_1;  // 0x0418(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_1;            // 0x0419(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_1;         // 0x041A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3CF0[0x1];                                     // 0x041B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_1;                    // 0x041C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_1;                // 0x0420(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_1;                // 0x0424(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_1;             // 0x0430(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_1;                  // 0x043C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_1;            // 0x0448(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3CF1[0x4];                                     // 0x0454(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_1;                 // 0x0458(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_1;                // 0x0460(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_1;            // 0x0468(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_1;             // 0x0470(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_1;                 // 0x0478(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_1;               // 0x047C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_1;              // 0x0480(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_1;                // 0x048C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_3;                          // 0x0498(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_3;                          // 0x049C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_3;                          // 0x04A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x04A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x04A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_3;                 // 0x04AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x04B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3CF2[0x7];                                     // 0x04B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattleCharacter_C*                   K2Node_DynamicCast_AsRSBattle_Character;           // 0x04C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x04C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x04C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3CF3[0x6];                                     // 0x04CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerInterface_C> K2Node_DynamicCast_AsBPI_Player_Interface;         // 0x04D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x04E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnemyPlayer_bEnemyPlayer;               // 0x04E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3CF4[0x2];                                     // 0x04E2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Num_Variable_1;                      // 0x04E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x04E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x04E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3CF5[0x6];                                     // 0x04EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x04F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x04F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x04FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattleCharacter_C*                   K2Node_DynamicCast_AsRSBattle_Character_1;         // 0x0500(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0508(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BrainCrashManager_C_PrivatePlaySequencerPlayer) == 0x000008, "Wrong alignment on BP_BrainCrashManager_C_PrivatePlaySequencerPlayer");
static_assert(sizeof(BP_BrainCrashManager_C_PrivatePlaySequencerPlayer) == 0x000510, "Wrong size on BP_BrainCrashManager_C_PrivatePlaySequencerPlayer");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlaySequencerPlayer, EnemyList) == 0x000000, "Member 'BP_BrainCrashManager_C_PrivatePlaySequencerPlayer::EnemyList' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlaySequencerPlayer, PlayerReferenceLocation) == 0x000010, "Member 'BP_BrainCrashManager_C_PrivatePlaySequencerPlayer::PlayerReferenceLocation' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlaySequencerPlayer, MainPlayer) == 0x000020, "Member 'BP_BrainCrashManager_C_PrivatePlaySequencerPlayer::MainPlayer' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlaySequencerPlayer, Target) == 0x000028, "Member 'BP_BrainCrashManager_C_PrivatePlaySequencerPlayer::Target' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlaySequencerPlayer, AnimInstance) == 0x000030, "Member 'BP_BrainCrashManager_C_PrivatePlaySequencerPlayer::AnimInstance' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlaySequencerPlayer, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'BP_BrainCrashManager_C_PrivatePlaySequencerPlayer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlaySequencerPlayer, CallFunc_GetPlayerManager_PlayerManager) == 0x000040, "Member 'BP_BrainCrashManager_C_PrivatePlaySequencerPlayer::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlaySequencerPlayer, CallFunc_GetPlayer_ReturnValue) == 0x000048, "Member 'BP_BrainCrashManager_C_PrivatePlaySequencerPlayer::CallFunc_GetPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlaySequencerPlayer, K2Node_DynamicCast_AsEvent_Interface) == 0x000050, "Member 'BP_BrainCrashManager_C_PrivatePlaySequencerPlayer::K2Node_DynamicCast_AsEvent_Interface' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlaySequencerPlayer, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'BP_BrainCrashManager_C_PrivatePlaySequencerPlayer::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlaySequencerPlayer, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000064, "Member 'BP_BrainCrashManager_C_PrivatePlaySequencerPlayer::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlaySequencerPlayer, CallFunc_GetCurrentSequencer_Sequencer) == 0x000068, "Member 'BP_BrainCrashManager_C_PrivatePlaySequencerPlayer::CallFunc_GetCurrentSequencer_Sequencer' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlaySequencerPlayer, CallFunc_GetCurrentSequencer_Sequencer_1) == 0x000070, "Member 'BP_BrainCrashManager_C_PrivatePlaySequencerPlayer::CallFunc_GetCurrentSequencer_Sequencer_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlaySequencerPlayer, CallFunc_GetCurrentSequencer_Sequencer_2) == 0x000078, "Member 'BP_BrainCrashManager_C_PrivatePlaySequencerPlayer::CallFunc_GetCurrentSequencer_Sequencer_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlaySequencerPlayer, CallFunc_GetSequencePlayer_ReturnValue) == 0x000080, "Member 'BP_BrainCrashManager_C_PrivatePlaySequencerPlayer::CallFunc_GetSequencePlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlaySequencerPlayer, CallFunc_GetSequencePlayer_ReturnValue_1) == 0x000088, "Member 'BP_BrainCrashManager_C_PrivatePlaySequencerPlayer::CallFunc_GetSequencePlayer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlaySequencerPlayer, CallFunc_GetEndTime_ReturnValue) == 0x000090, "Member 'BP_BrainCrashManager_C_PrivatePlaySequencerPlayer::CallFunc_GetEndTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlaySequencerPlayer, CallFunc_GetStartTime_ReturnValue) == 0x0000A0, "Member 'BP_BrainCrashManager_C_PrivatePlaySequencerPlayer::CallFunc_GetStartTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlaySequencerPlayer, CallFunc_Conv_QualifiedFrameTimeToSeconds_ReturnValue) == 0x0000B0, "Member 'BP_BrainCrashManager_C_PrivatePlaySequencerPlayer::CallFunc_Conv_QualifiedFrameTimeToSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlaySequencerPlayer, Temp_int_Loop_Counter_Variable) == 0x0000B4, "Member 'BP_BrainCrashManager_C_PrivatePlaySequencerPlayer::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlaySequencerPlayer, CallFunc_Add_IntInt_ReturnValue) == 0x0000B8, "Member 'BP_BrainCrashManager_C_PrivatePlaySequencerPlayer::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlaySequencerPlayer, Temp_int_Loop_Counter_Variable_1) == 0x0000BC, "Member 'BP_BrainCrashManager_C_PrivatePlaySequencerPlayer::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlaySequencerPlayer, CallFunc_GetPostProcessManager_Manager) == 0x0000C0, "Member 'BP_BrainCrashManager_C_PrivatePlaySequencerPlayer::CallFunc_GetPostProcessManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlaySequencerPlayer, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000C8, "Member 'BP_BrainCrashManager_C_PrivatePlaySequencerPlayer::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlaySequencerPlayer, CallFunc_IsValid_ReturnValue_1) == 0x0000CC, "Member 'BP_BrainCrashManager_C_PrivatePlaySequencerPlayer::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlaySequencerPlayer, CallFunc_IsActivePerformShot_IsActive) == 0x0000CD, "Member 'BP_BrainCrashManager_C_PrivatePlaySequencerPlayer::CallFunc_IsActivePerformShot_IsActive' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlaySequencerPlayer, CallFunc_IsValid_ReturnValue_2) == 0x0000CE, "Member 'BP_BrainCrashManager_C_PrivatePlaySequencerPlayer::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlaySequencerPlayer, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0000D0, "Member 'BP_BrainCrashManager_C_PrivatePlaySequencerPlayer::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlaySequencerPlayer, CallFunc_GetEnemyManager_Manager) == 0x0000E0, "Member 'BP_BrainCrashManager_C_PrivatePlaySequencerPlayer::CallFunc_GetEnemyManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlaySequencerPlayer, CallFunc_IsValid_ReturnValue_3) == 0x0000E8, "Member 'BP_BrainCrashManager_C_PrivatePlaySequencerPlayer::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlaySequencerPlayer, CallFunc_IsValid_ReturnValue_4) == 0x0000E9, "Member 'BP_BrainCrashManager_C_PrivatePlaySequencerPlayer::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlaySequencerPlayer, CallFunc_EventPhysicsIdling_self_CastInput) == 0x0000F0, "Member 'BP_BrainCrashManager_C_PrivatePlaySequencerPlayer::CallFunc_EventPhysicsIdling_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlaySequencerPlayer, CallFunc_GetEnemyList_ReturnValue) == 0x000100, "Member 'BP_BrainCrashManager_C_PrivatePlaySequencerPlayer::CallFunc_GetEnemyList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlaySequencerPlayer, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000110, "Member 'BP_BrainCrashManager_C_PrivatePlaySequencerPlayer::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlaySequencerPlayer, K2Node_MakeArray_Array) == 0x000120, "Member 'BP_BrainCrashManager_C_PrivatePlaySequencerPlayer::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlaySequencerPlayer, CallFunc_BreakRotator_Roll) == 0x000130, "Member 'BP_BrainCrashManager_C_PrivatePlaySequencerPlayer::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlaySequencerPlayer, CallFunc_BreakRotator_Pitch) == 0x000134, "Member 'BP_BrainCrashManager_C_PrivatePlaySequencerPlayer::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlaySequencerPlayer, CallFunc_BreakRotator_Yaw) == 0x000138, "Member 'BP_BrainCrashManager_C_PrivatePlaySequencerPlayer::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlaySequencerPlayer, CallFunc_MakeRotator_ReturnValue) == 0x00013C, "Member 'BP_BrainCrashManager_C_PrivatePlaySequencerPlayer::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlaySequencerPlayer, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x000148, "Member 'BP_BrainCrashManager_C_PrivatePlaySequencerPlayer::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlaySequencerPlayer, CallFunc_GetSocketLocation_ReturnValue) == 0x000154, "Member 'BP_BrainCrashManager_C_PrivatePlaySequencerPlayer::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlaySequencerPlayer, CallFunc_GetPlayerManager_PlayerManager_1) == 0x000160, "Member 'BP_BrainCrashManager_C_PrivatePlaySequencerPlayer::CallFunc_GetPlayerManager_PlayerManager_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlaySequencerPlayer, CallFunc_IsValid_ReturnValue_5) == 0x000168, "Member 'BP_BrainCrashManager_C_PrivatePlaySequencerPlayer::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlaySequencerPlayer, CallFunc_MakeVector_ReturnValue) == 0x00016C, "Member 'BP_BrainCrashManager_C_PrivatePlaySequencerPlayer::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlaySequencerPlayer, CallFunc_Add_VectorVector_ReturnValue) == 0x000178, "Member 'BP_BrainCrashManager_C_PrivatePlaySequencerPlayer::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlaySequencerPlayer, CallFunc_GetPlayer_ReturnValue_1) == 0x000188, "Member 'BP_BrainCrashManager_C_PrivatePlaySequencerPlayer::CallFunc_GetPlayer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlaySequencerPlayer, CallFunc_BreakTransform_Location) == 0x000190, "Member 'BP_BrainCrashManager_C_PrivatePlaySequencerPlayer::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlaySequencerPlayer, CallFunc_BreakTransform_Rotation) == 0x00019C, "Member 'BP_BrainCrashManager_C_PrivatePlaySequencerPlayer::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlaySequencerPlayer, CallFunc_BreakTransform_Scale) == 0x0001A8, "Member 'BP_BrainCrashManager_C_PrivatePlaySequencerPlayer::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlaySequencerPlayer, K2Node_MakeArray_Array_1) == 0x0001B8, "Member 'BP_BrainCrashManager_C_PrivatePlaySequencerPlayer::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlaySequencerPlayer, CallFunc_BreakVector_X) == 0x0001C8, "Member 'BP_BrainCrashManager_C_PrivatePlaySequencerPlayer::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlaySequencerPlayer, CallFunc_BreakVector_Y) == 0x0001CC, "Member 'BP_BrainCrashManager_C_PrivatePlaySequencerPlayer::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlaySequencerPlayer, CallFunc_BreakVector_Z) == 0x0001D0, "Member 'BP_BrainCrashManager_C_PrivatePlaySequencerPlayer::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlaySequencerPlayer, CallFunc_LineTraceSingleForObjects_OutHit) == 0x0001D4, "Member 'BP_BrainCrashManager_C_PrivatePlaySequencerPlayer::CallFunc_LineTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlaySequencerPlayer, CallFunc_LineTraceSingleForObjects_ReturnValue) == 0x00025C, "Member 'BP_BrainCrashManager_C_PrivatePlaySequencerPlayer::CallFunc_LineTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlaySequencerPlayer, CallFunc_BreakHitResult_bBlockingHit) == 0x00025D, "Member 'BP_BrainCrashManager_C_PrivatePlaySequencerPlayer::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlaySequencerPlayer, CallFunc_BreakHitResult_bInitialOverlap) == 0x00025E, "Member 'BP_BrainCrashManager_C_PrivatePlaySequencerPlayer::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlaySequencerPlayer, CallFunc_BreakHitResult_Time) == 0x000260, "Member 'BP_BrainCrashManager_C_PrivatePlaySequencerPlayer::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlaySequencerPlayer, CallFunc_BreakHitResult_Distance) == 0x000264, "Member 'BP_BrainCrashManager_C_PrivatePlaySequencerPlayer::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlaySequencerPlayer, CallFunc_BreakHitResult_Location) == 0x000268, "Member 'BP_BrainCrashManager_C_PrivatePlaySequencerPlayer::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlaySequencerPlayer, CallFunc_BreakHitResult_ImpactPoint) == 0x000274, "Member 'BP_BrainCrashManager_C_PrivatePlaySequencerPlayer::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlaySequencerPlayer, CallFunc_BreakHitResult_Normal) == 0x000280, "Member 'BP_BrainCrashManager_C_PrivatePlaySequencerPlayer::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlaySequencerPlayer, CallFunc_BreakHitResult_ImpactNormal) == 0x00028C, "Member 'BP_BrainCrashManager_C_PrivatePlaySequencerPlayer::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlaySequencerPlayer, CallFunc_BreakHitResult_PhysMat) == 0x000298, "Member 'BP_BrainCrashManager_C_PrivatePlaySequencerPlayer::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlaySequencerPlayer, CallFunc_BreakHitResult_HitActor) == 0x0002A0, "Member 'BP_BrainCrashManager_C_PrivatePlaySequencerPlayer::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlaySequencerPlayer, CallFunc_BreakHitResult_HitComponent) == 0x0002A8, "Member 'BP_BrainCrashManager_C_PrivatePlaySequencerPlayer::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlaySequencerPlayer, CallFunc_BreakHitResult_HitBoneName) == 0x0002B0, "Member 'BP_BrainCrashManager_C_PrivatePlaySequencerPlayer::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlaySequencerPlayer, CallFunc_BreakHitResult_HitItem) == 0x0002B8, "Member 'BP_BrainCrashManager_C_PrivatePlaySequencerPlayer::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlaySequencerPlayer, CallFunc_BreakHitResult_FaceIndex) == 0x0002BC, "Member 'BP_BrainCrashManager_C_PrivatePlaySequencerPlayer::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlaySequencerPlayer, CallFunc_BreakHitResult_TraceStart) == 0x0002C0, "Member 'BP_BrainCrashManager_C_PrivatePlaySequencerPlayer::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlaySequencerPlayer, CallFunc_BreakHitResult_TraceEnd) == 0x0002CC, "Member 'BP_BrainCrashManager_C_PrivatePlaySequencerPlayer::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlaySequencerPlayer, CallFunc_BreakVector_X_1) == 0x0002D8, "Member 'BP_BrainCrashManager_C_PrivatePlaySequencerPlayer::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlaySequencerPlayer, CallFunc_BreakVector_Y_1) == 0x0002DC, "Member 'BP_BrainCrashManager_C_PrivatePlaySequencerPlayer::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlaySequencerPlayer, CallFunc_BreakVector_Z_1) == 0x0002E0, "Member 'BP_BrainCrashManager_C_PrivatePlaySequencerPlayer::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlaySequencerPlayer, CallFunc_Array_Length_ReturnValue) == 0x0002E4, "Member 'BP_BrainCrashManager_C_PrivatePlaySequencerPlayer::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlaySequencerPlayer, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0002E8, "Member 'BP_BrainCrashManager_C_PrivatePlaySequencerPlayer::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlaySequencerPlayer, CallFunc_MakeVector_ReturnValue_1) == 0x0002EC, "Member 'BP_BrainCrashManager_C_PrivatePlaySequencerPlayer::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlaySequencerPlayer, Temp_int_Loop_Num_Variable) == 0x0002F8, "Member 'BP_BrainCrashManager_C_PrivatePlaySequencerPlayer::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlaySequencerPlayer, CallFunc_Less_IntInt_ReturnValue) == 0x0002FC, "Member 'BP_BrainCrashManager_C_PrivatePlaySequencerPlayer::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlaySequencerPlayer, CallFunc_MakeVector_ReturnValue_2) == 0x000300, "Member 'BP_BrainCrashManager_C_PrivatePlaySequencerPlayer::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlaySequencerPlayer, CallFunc_BreakTransform_Location_1) == 0x00030C, "Member 'BP_BrainCrashManager_C_PrivatePlaySequencerPlayer::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlaySequencerPlayer, CallFunc_BreakTransform_Rotation_1) == 0x000318, "Member 'BP_BrainCrashManager_C_PrivatePlaySequencerPlayer::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlaySequencerPlayer, CallFunc_BreakTransform_Scale_1) == 0x000324, "Member 'BP_BrainCrashManager_C_PrivatePlaySequencerPlayer::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlaySequencerPlayer, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000330, "Member 'BP_BrainCrashManager_C_PrivatePlaySequencerPlayer::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlaySequencerPlayer, CallFunc_BreakVector_X_2) == 0x00033C, "Member 'BP_BrainCrashManager_C_PrivatePlaySequencerPlayer::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlaySequencerPlayer, CallFunc_BreakVector_Y_2) == 0x000340, "Member 'BP_BrainCrashManager_C_PrivatePlaySequencerPlayer::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlaySequencerPlayer, CallFunc_BreakVector_Z_2) == 0x000344, "Member 'BP_BrainCrashManager_C_PrivatePlaySequencerPlayer::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlaySequencerPlayer, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000348, "Member 'BP_BrainCrashManager_C_PrivatePlaySequencerPlayer::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlaySequencerPlayer, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x000354, "Member 'BP_BrainCrashManager_C_PrivatePlaySequencerPlayer::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlaySequencerPlayer, K2Node_MakeArray_Array_2) == 0x000360, "Member 'BP_BrainCrashManager_C_PrivatePlaySequencerPlayer::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlaySequencerPlayer, CallFunc_Add_VectorVector_ReturnValue_2) == 0x000370, "Member 'BP_BrainCrashManager_C_PrivatePlaySequencerPlayer::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlaySequencerPlayer, K2Node_MakeArray_Array_3) == 0x000380, "Member 'BP_BrainCrashManager_C_PrivatePlaySequencerPlayer::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlaySequencerPlayer, CallFunc_LineTraceSingleForObjects_OutHit_1) == 0x000390, "Member 'BP_BrainCrashManager_C_PrivatePlaySequencerPlayer::CallFunc_LineTraceSingleForObjects_OutHit_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlaySequencerPlayer, CallFunc_LineTraceSingleForObjects_ReturnValue_1) == 0x000418, "Member 'BP_BrainCrashManager_C_PrivatePlaySequencerPlayer::CallFunc_LineTraceSingleForObjects_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlaySequencerPlayer, CallFunc_BreakHitResult_bBlockingHit_1) == 0x000419, "Member 'BP_BrainCrashManager_C_PrivatePlaySequencerPlayer::CallFunc_BreakHitResult_bBlockingHit_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlaySequencerPlayer, CallFunc_BreakHitResult_bInitialOverlap_1) == 0x00041A, "Member 'BP_BrainCrashManager_C_PrivatePlaySequencerPlayer::CallFunc_BreakHitResult_bInitialOverlap_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlaySequencerPlayer, CallFunc_BreakHitResult_Time_1) == 0x00041C, "Member 'BP_BrainCrashManager_C_PrivatePlaySequencerPlayer::CallFunc_BreakHitResult_Time_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlaySequencerPlayer, CallFunc_BreakHitResult_Distance_1) == 0x000420, "Member 'BP_BrainCrashManager_C_PrivatePlaySequencerPlayer::CallFunc_BreakHitResult_Distance_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlaySequencerPlayer, CallFunc_BreakHitResult_Location_1) == 0x000424, "Member 'BP_BrainCrashManager_C_PrivatePlaySequencerPlayer::CallFunc_BreakHitResult_Location_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlaySequencerPlayer, CallFunc_BreakHitResult_ImpactPoint_1) == 0x000430, "Member 'BP_BrainCrashManager_C_PrivatePlaySequencerPlayer::CallFunc_BreakHitResult_ImpactPoint_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlaySequencerPlayer, CallFunc_BreakHitResult_Normal_1) == 0x00043C, "Member 'BP_BrainCrashManager_C_PrivatePlaySequencerPlayer::CallFunc_BreakHitResult_Normal_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlaySequencerPlayer, CallFunc_BreakHitResult_ImpactNormal_1) == 0x000448, "Member 'BP_BrainCrashManager_C_PrivatePlaySequencerPlayer::CallFunc_BreakHitResult_ImpactNormal_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlaySequencerPlayer, CallFunc_BreakHitResult_PhysMat_1) == 0x000458, "Member 'BP_BrainCrashManager_C_PrivatePlaySequencerPlayer::CallFunc_BreakHitResult_PhysMat_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlaySequencerPlayer, CallFunc_BreakHitResult_HitActor_1) == 0x000460, "Member 'BP_BrainCrashManager_C_PrivatePlaySequencerPlayer::CallFunc_BreakHitResult_HitActor_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlaySequencerPlayer, CallFunc_BreakHitResult_HitComponent_1) == 0x000468, "Member 'BP_BrainCrashManager_C_PrivatePlaySequencerPlayer::CallFunc_BreakHitResult_HitComponent_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlaySequencerPlayer, CallFunc_BreakHitResult_HitBoneName_1) == 0x000470, "Member 'BP_BrainCrashManager_C_PrivatePlaySequencerPlayer::CallFunc_BreakHitResult_HitBoneName_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlaySequencerPlayer, CallFunc_BreakHitResult_HitItem_1) == 0x000478, "Member 'BP_BrainCrashManager_C_PrivatePlaySequencerPlayer::CallFunc_BreakHitResult_HitItem_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlaySequencerPlayer, CallFunc_BreakHitResult_FaceIndex_1) == 0x00047C, "Member 'BP_BrainCrashManager_C_PrivatePlaySequencerPlayer::CallFunc_BreakHitResult_FaceIndex_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlaySequencerPlayer, CallFunc_BreakHitResult_TraceStart_1) == 0x000480, "Member 'BP_BrainCrashManager_C_PrivatePlaySequencerPlayer::CallFunc_BreakHitResult_TraceStart_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlaySequencerPlayer, CallFunc_BreakHitResult_TraceEnd_1) == 0x00048C, "Member 'BP_BrainCrashManager_C_PrivatePlaySequencerPlayer::CallFunc_BreakHitResult_TraceEnd_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlaySequencerPlayer, CallFunc_BreakVector_X_3) == 0x000498, "Member 'BP_BrainCrashManager_C_PrivatePlaySequencerPlayer::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlaySequencerPlayer, CallFunc_BreakVector_Y_3) == 0x00049C, "Member 'BP_BrainCrashManager_C_PrivatePlaySequencerPlayer::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlaySequencerPlayer, CallFunc_BreakVector_Z_3) == 0x0004A0, "Member 'BP_BrainCrashManager_C_PrivatePlaySequencerPlayer::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlaySequencerPlayer, Temp_int_Array_Index_Variable) == 0x0004A4, "Member 'BP_BrainCrashManager_C_PrivatePlaySequencerPlayer::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlaySequencerPlayer, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x0004A8, "Member 'BP_BrainCrashManager_C_PrivatePlaySequencerPlayer::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlaySequencerPlayer, CallFunc_MakeVector_ReturnValue_3) == 0x0004AC, "Member 'BP_BrainCrashManager_C_PrivatePlaySequencerPlayer::CallFunc_MakeVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlaySequencerPlayer, CallFunc_IsValid_ReturnValue_6) == 0x0004B8, "Member 'BP_BrainCrashManager_C_PrivatePlaySequencerPlayer::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlaySequencerPlayer, K2Node_DynamicCast_AsRSBattle_Character) == 0x0004C0, "Member 'BP_BrainCrashManager_C_PrivatePlaySequencerPlayer::K2Node_DynamicCast_AsRSBattle_Character' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlaySequencerPlayer, K2Node_DynamicCast_bSuccess_1) == 0x0004C8, "Member 'BP_BrainCrashManager_C_PrivatePlaySequencerPlayer::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlaySequencerPlayer, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x0004C9, "Member 'BP_BrainCrashManager_C_PrivatePlaySequencerPlayer::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlaySequencerPlayer, K2Node_DynamicCast_AsBPI_Player_Interface) == 0x0004D0, "Member 'BP_BrainCrashManager_C_PrivatePlaySequencerPlayer::K2Node_DynamicCast_AsBPI_Player_Interface' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlaySequencerPlayer, K2Node_DynamicCast_bSuccess_2) == 0x0004E0, "Member 'BP_BrainCrashManager_C_PrivatePlaySequencerPlayer::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlaySequencerPlayer, CallFunc_IsEnemyPlayer_bEnemyPlayer) == 0x0004E1, "Member 'BP_BrainCrashManager_C_PrivatePlaySequencerPlayer::CallFunc_IsEnemyPlayer_bEnemyPlayer' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlaySequencerPlayer, Temp_int_Loop_Num_Variable_1) == 0x0004E4, "Member 'BP_BrainCrashManager_C_PrivatePlaySequencerPlayer::Temp_int_Loop_Num_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlaySequencerPlayer, CallFunc_IsValid_ReturnValue_7) == 0x0004E8, "Member 'BP_BrainCrashManager_C_PrivatePlaySequencerPlayer::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlaySequencerPlayer, CallFunc_Less_IntInt_ReturnValue_1) == 0x0004E9, "Member 'BP_BrainCrashManager_C_PrivatePlaySequencerPlayer::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlaySequencerPlayer, CallFunc_GetAnimInstance_ReturnValue) == 0x0004F0, "Member 'BP_BrainCrashManager_C_PrivatePlaySequencerPlayer::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlaySequencerPlayer, CallFunc_Array_Length_ReturnValue_1) == 0x0004F8, "Member 'BP_BrainCrashManager_C_PrivatePlaySequencerPlayer::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlaySequencerPlayer, Temp_int_Array_Index_Variable_1) == 0x0004FC, "Member 'BP_BrainCrashManager_C_PrivatePlaySequencerPlayer::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlaySequencerPlayer, K2Node_DynamicCast_AsRSBattle_Character_1) == 0x000500, "Member 'BP_BrainCrashManager_C_PrivatePlaySequencerPlayer::K2Node_DynamicCast_AsRSBattle_Character_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivatePlaySequencerPlayer, K2Node_DynamicCast_bSuccess_3) == 0x000508, "Member 'BP_BrainCrashManager_C_PrivatePlaySequencerPlayer::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");

// Function BP_BrainCrashManager.BP_BrainCrashManager_C.Private Finish Unique Restore Player Camera Transform
// 0x0750 (0x0750 - 0x0000)
struct BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform final
{
public:
	bool                                          Interrupt;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          RequestResetPlayerCamera;                          // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3CF6[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UTargetSearchComponent*                 TargetSearchComp;                                  // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             TmpTransform;                                      // 0x0010(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	class ARSCharacterBase*                       TmpActor;                                          // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSCharacterBase*                       MainPlayer;                                        // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x008C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x0098(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_2;                // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_2;                // 0x00BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_2;                   // 0x00C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x00D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x00E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00F0(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult;      // 0x0120(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue;         // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3CF7[0x3];                                     // 0x01A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location_3;                // 0x01AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_3;                // 0x01B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_3;                   // 0x01C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IEventInterface>       K2Node_DynamicCast_AsEvent_Interface;              // 0x01D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3CF8[0x3];                                     // 0x01E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x01E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x01F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3CF9[0x3];                                     // 0x01F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IEventInterface>       CallFunc_BattleSequencerEnd_self_CastInput;        // 0x01F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BattleSequencerEnd_ReturnValue;           // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3CFA[0x3];                                     // 0x0209(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0211(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0212(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3CFB[0xD];                                     // 0x0213(0x000D)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_Private_Calc_Unique_Crash_Finish_Restore_Transform_FixedLoc_Transform; // 0x0220(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult_1;    // 0x0250(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue_1;       // 0x02D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3CFC[0x7];                                     // 0x02D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ICameraInterface>      K2Node_DynamicCast_AsCamera_Interface;             // 0x02E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x02F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x02F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetPlayerCameraRotation_ReturnValue;      // 0x02F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3CFD[0x5];                                     // 0x02F3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ICameraInterface>      K2Node_DynamicCast_AsCamera_Interface_1;           // 0x02F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0308(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetPlayerCameraLocation_ReturnValue;      // 0x0309(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3CFE[0x2];                                     // 0x030A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakRotator_Roll_2;                      // 0x030C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_2;                     // 0x0310(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_2;                       // 0x0314(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x0318(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3CFF[0xC];                                     // 0x0324(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_Private_Calc_Unique_Crash_Finish_Restore_Transform_FreeLoc_Transform; // 0x0330(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult_2;    // 0x0360(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue_2;       // 0x03E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D00[0x3];                                     // 0x03E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x03EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_1;         // 0x03F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D01[0x3];                                     // 0x03F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x03F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_4;                // 0x03F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_4;                // 0x0404(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_4;                   // 0x0410(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_5;                // 0x041C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_5;                // 0x0428(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_5;                   // 0x0434(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_3;                      // 0x0440(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_3;                     // 0x0444(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_3;                       // 0x0448(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_4;                      // 0x044C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_4;                     // 0x0450(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_4;                       // 0x0454(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_2;      // 0x0458(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0464(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_2;                // 0x0468(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D02[0xC];                                     // 0x0474(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x0480(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult_3;    // 0x04B0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue_3;       // 0x0538(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D03[0x7];                                     // 0x0539(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTargetSearchComponent*                 CallFunc_GetTargetSearchComponentFromActor_ReturnValue; // 0x0540(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_SelectRotator_ReturnValue;                // 0x0548(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D04[0xC];                                     // 0x0554(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_2;              // 0x0560(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult_4;    // 0x0590(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue_4;       // 0x0618(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D05[0x7];                                     // 0x0619(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ICameraInterface>      K2Node_DynamicCast_AsCamera_Interface_2;           // 0x0620(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0630(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetPlayerCameraViewTarget_ReturnValue;    // 0x0631(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D06[0x2];                                     // 0x0632(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location_6;                // 0x0634(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_6;                // 0x0640(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_6;                   // 0x064C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D07[0x8];                                     // 0x0658(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_3;              // 0x0660(0x0030)(IsPlainOldData, NoDestructor)
	TScriptInterface<class IEventInterface>       K2Node_DynamicCast_AsEvent_Interface_1;            // 0x0690(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x06A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D08[0x3];                                     // 0x06A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult_5;    // 0x06A4(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue_5;       // 0x072C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D09[0x3];                                     // 0x072D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0730(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0734(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D0A[0x3];                                     // 0x0735(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0738(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0740(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D0B[0x7];                                     // 0x0741(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_GetPlayer_ReturnValue;                    // 0x0748(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform) == 0x000010, "Wrong alignment on BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform");
static_assert(sizeof(BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform) == 0x000750, "Wrong size on BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform, Interrupt) == 0x000000, "Member 'BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform::Interrupt' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform, RequestResetPlayerCamera) == 0x000001, "Member 'BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform::RequestResetPlayerCamera' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform, TargetSearchComp) == 0x000008, "Member 'BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform::TargetSearchComp' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform, TmpTransform) == 0x000010, "Member 'BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform::TmpTransform' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform, TmpActor) == 0x000040, "Member 'BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform::TmpActor' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform, MainPlayer) == 0x000048, "Member 'BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform::MainPlayer' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform, CallFunc_BreakTransform_Location) == 0x000050, "Member 'BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform, CallFunc_BreakTransform_Rotation) == 0x00005C, "Member 'BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform, CallFunc_BreakTransform_Scale) == 0x000068, "Member 'BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform, CallFunc_BreakRotator_Roll) == 0x000074, "Member 'BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform, CallFunc_BreakRotator_Pitch) == 0x000078, "Member 'BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform, CallFunc_BreakRotator_Yaw) == 0x00007C, "Member 'BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform, CallFunc_BreakTransform_Location_1) == 0x000080, "Member 'BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform, CallFunc_BreakTransform_Rotation_1) == 0x00008C, "Member 'BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform, CallFunc_BreakTransform_Scale_1) == 0x000098, "Member 'BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform, CallFunc_BreakRotator_Roll_1) == 0x0000A4, "Member 'BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform, CallFunc_BreakRotator_Pitch_1) == 0x0000A8, "Member 'BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform, CallFunc_BreakRotator_Yaw_1) == 0x0000AC, "Member 'BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform, CallFunc_BreakTransform_Location_2) == 0x0000B0, "Member 'BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform::CallFunc_BreakTransform_Location_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform, CallFunc_BreakTransform_Rotation_2) == 0x0000BC, "Member 'BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform::CallFunc_BreakTransform_Rotation_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform, CallFunc_BreakTransform_Scale_2) == 0x0000C8, "Member 'BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform::CallFunc_BreakTransform_Scale_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0000D4, "Member 'BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0000D8, "Member 'BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform, CallFunc_MakeRotator_ReturnValue) == 0x0000E4, "Member 'BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform, CallFunc_MakeTransform_ReturnValue) == 0x0000F0, "Member 'BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform, CallFunc_K2_SetActorTransform_SweepHitResult) == 0x000120, "Member 'BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform::CallFunc_K2_SetActorTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform, CallFunc_K2_SetActorTransform_ReturnValue) == 0x0001A8, "Member 'BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform::CallFunc_K2_SetActorTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform, CallFunc_BreakTransform_Location_3) == 0x0001AC, "Member 'BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform::CallFunc_BreakTransform_Location_3' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform, CallFunc_BreakTransform_Rotation_3) == 0x0001B8, "Member 'BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform::CallFunc_BreakTransform_Rotation_3' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform, CallFunc_BreakTransform_Scale_3) == 0x0001C4, "Member 'BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform::CallFunc_BreakTransform_Scale_3' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform, K2Node_DynamicCast_AsEvent_Interface) == 0x0001D0, "Member 'BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform::K2Node_DynamicCast_AsEvent_Interface' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform, K2Node_DynamicCast_bSuccess) == 0x0001E0, "Member 'BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x0001E4, "Member 'BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform, Temp_int_Array_Index_Variable) == 0x0001F0, "Member 'BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform, CallFunc_Array_IsValidIndex_ReturnValue) == 0x0001F4, "Member 'BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform, CallFunc_BattleSequencerEnd_self_CastInput) == 0x0001F8, "Member 'BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform::CallFunc_BattleSequencerEnd_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform, CallFunc_BattleSequencerEnd_ReturnValue) == 0x000208, "Member 'BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform::CallFunc_BattleSequencerEnd_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform, CallFunc_Array_Length_ReturnValue) == 0x00020C, "Member 'BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform, CallFunc_IsValid_ReturnValue) == 0x000210, "Member 'BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform, CallFunc_IsValid_ReturnValue_1) == 0x000211, "Member 'BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform, CallFunc_IsValid_ReturnValue_2) == 0x000212, "Member 'BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform, CallFunc_Private_Calc_Unique_Crash_Finish_Restore_Transform_FixedLoc_Transform) == 0x000220, "Member 'BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform::CallFunc_Private_Calc_Unique_Crash_Finish_Restore_Transform_FixedLoc_Transform' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform, CallFunc_K2_SetActorTransform_SweepHitResult_1) == 0x000250, "Member 'BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform::CallFunc_K2_SetActorTransform_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform, CallFunc_K2_SetActorTransform_ReturnValue_1) == 0x0002D8, "Member 'BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform::CallFunc_K2_SetActorTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform, K2Node_DynamicCast_AsCamera_Interface) == 0x0002E0, "Member 'BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform::K2Node_DynamicCast_AsCamera_Interface' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform, K2Node_DynamicCast_bSuccess_1) == 0x0002F0, "Member 'BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform, CallFunc_IsValid_ReturnValue_3) == 0x0002F1, "Member 'BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform, CallFunc_SetPlayerCameraRotation_ReturnValue) == 0x0002F2, "Member 'BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform::CallFunc_SetPlayerCameraRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform, K2Node_DynamicCast_AsCamera_Interface_1) == 0x0002F8, "Member 'BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform::K2Node_DynamicCast_AsCamera_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform, K2Node_DynamicCast_bSuccess_2) == 0x000308, "Member 'BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform, CallFunc_SetPlayerCameraLocation_ReturnValue) == 0x000309, "Member 'BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform::CallFunc_SetPlayerCameraLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform, CallFunc_BreakRotator_Roll_2) == 0x00030C, "Member 'BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform::CallFunc_BreakRotator_Roll_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform, CallFunc_BreakRotator_Pitch_2) == 0x000310, "Member 'BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform::CallFunc_BreakRotator_Pitch_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform, CallFunc_BreakRotator_Yaw_2) == 0x000314, "Member 'BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform::CallFunc_BreakRotator_Yaw_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform, CallFunc_MakeRotator_ReturnValue_1) == 0x000318, "Member 'BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform, CallFunc_Private_Calc_Unique_Crash_Finish_Restore_Transform_FreeLoc_Transform) == 0x000330, "Member 'BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform::CallFunc_Private_Calc_Unique_Crash_Finish_Restore_Transform_FreeLoc_Transform' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform, CallFunc_K2_SetActorTransform_SweepHitResult_2) == 0x000360, "Member 'BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform::CallFunc_K2_SetActorTransform_SweepHitResult_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform, CallFunc_K2_SetActorTransform_ReturnValue_2) == 0x0003E8, "Member 'BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform::CallFunc_K2_SetActorTransform_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform, Temp_int_Loop_Counter_Variable) == 0x0003EC, "Member 'BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform, CallFunc_Array_IsValidIndex_ReturnValue_1) == 0x0003F0, "Member 'BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform::CallFunc_Array_IsValidIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform, CallFunc_Add_IntInt_ReturnValue) == 0x0003F4, "Member 'BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform, CallFunc_BreakTransform_Location_4) == 0x0003F8, "Member 'BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform::CallFunc_BreakTransform_Location_4' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform, CallFunc_BreakTransform_Rotation_4) == 0x000404, "Member 'BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform::CallFunc_BreakTransform_Rotation_4' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform, CallFunc_BreakTransform_Scale_4) == 0x000410, "Member 'BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform::CallFunc_BreakTransform_Scale_4' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform, CallFunc_BreakTransform_Location_5) == 0x00041C, "Member 'BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform::CallFunc_BreakTransform_Location_5' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform, CallFunc_BreakTransform_Rotation_5) == 0x000428, "Member 'BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform::CallFunc_BreakTransform_Rotation_5' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform, CallFunc_BreakTransform_Scale_5) == 0x000434, "Member 'BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform::CallFunc_BreakTransform_Scale_5' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform, CallFunc_BreakRotator_Roll_3) == 0x000440, "Member 'BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform::CallFunc_BreakRotator_Roll_3' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform, CallFunc_BreakRotator_Pitch_3) == 0x000444, "Member 'BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform::CallFunc_BreakRotator_Pitch_3' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform, CallFunc_BreakRotator_Yaw_3) == 0x000448, "Member 'BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform::CallFunc_BreakRotator_Yaw_3' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform, CallFunc_BreakRotator_Roll_4) == 0x00044C, "Member 'BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform::CallFunc_BreakRotator_Roll_4' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform, CallFunc_BreakRotator_Pitch_4) == 0x000450, "Member 'BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform::CallFunc_BreakRotator_Pitch_4' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform, CallFunc_BreakRotator_Yaw_4) == 0x000454, "Member 'BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform::CallFunc_BreakRotator_Yaw_4' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform, CallFunc_Subtract_VectorVector_ReturnValue_2) == 0x000458, "Member 'BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform::CallFunc_Subtract_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000464, "Member 'BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform, CallFunc_MakeRotator_ReturnValue_2) == 0x000468, "Member 'BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform::CallFunc_MakeRotator_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform, CallFunc_MakeTransform_ReturnValue_1) == 0x000480, "Member 'BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform, CallFunc_K2_SetActorTransform_SweepHitResult_3) == 0x0004B0, "Member 'BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform::CallFunc_K2_SetActorTransform_SweepHitResult_3' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform, CallFunc_K2_SetActorTransform_ReturnValue_3) == 0x000538, "Member 'BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform::CallFunc_K2_SetActorTransform_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform, CallFunc_GetTargetSearchComponentFromActor_ReturnValue) == 0x000540, "Member 'BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform::CallFunc_GetTargetSearchComponentFromActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform, CallFunc_SelectRotator_ReturnValue) == 0x000548, "Member 'BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform::CallFunc_SelectRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform, CallFunc_MakeTransform_ReturnValue_2) == 0x000560, "Member 'BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform::CallFunc_MakeTransform_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform, CallFunc_K2_SetActorTransform_SweepHitResult_4) == 0x000590, "Member 'BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform::CallFunc_K2_SetActorTransform_SweepHitResult_4' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform, CallFunc_K2_SetActorTransform_ReturnValue_4) == 0x000618, "Member 'BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform::CallFunc_K2_SetActorTransform_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform, K2Node_DynamicCast_AsCamera_Interface_2) == 0x000620, "Member 'BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform::K2Node_DynamicCast_AsCamera_Interface_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform, K2Node_DynamicCast_bSuccess_3) == 0x000630, "Member 'BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform, CallFunc_SetPlayerCameraViewTarget_ReturnValue) == 0x000631, "Member 'BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform::CallFunc_SetPlayerCameraViewTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform, CallFunc_BreakTransform_Location_6) == 0x000634, "Member 'BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform::CallFunc_BreakTransform_Location_6' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform, CallFunc_BreakTransform_Rotation_6) == 0x000640, "Member 'BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform::CallFunc_BreakTransform_Rotation_6' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform, CallFunc_BreakTransform_Scale_6) == 0x00064C, "Member 'BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform::CallFunc_BreakTransform_Scale_6' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform, CallFunc_MakeTransform_ReturnValue_3) == 0x000660, "Member 'BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform::CallFunc_MakeTransform_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform, K2Node_DynamicCast_AsEvent_Interface_1) == 0x000690, "Member 'BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform::K2Node_DynamicCast_AsEvent_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform, K2Node_DynamicCast_bSuccess_4) == 0x0006A0, "Member 'BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform, CallFunc_K2_SetActorTransform_SweepHitResult_5) == 0x0006A4, "Member 'BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform::CallFunc_K2_SetActorTransform_SweepHitResult_5' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform, CallFunc_K2_SetActorTransform_ReturnValue_5) == 0x00072C, "Member 'BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform::CallFunc_K2_SetActorTransform_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform, Temp_int_Loop_Num_Variable) == 0x000730, "Member 'BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform, CallFunc_Less_IntInt_ReturnValue) == 0x000734, "Member 'BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform, CallFunc_GetPlayerManager_PlayerManager) == 0x000738, "Member 'BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform, CallFunc_IsValid_ReturnValue_4) == 0x000740, "Member 'BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform, CallFunc_GetPlayer_ReturnValue) == 0x000748, "Member 'BP_BrainCrashManager_C_Private_Finish_Unique_Restore_Player_Camera_Transform::CallFunc_GetPlayer_ReturnValue' has a wrong offset!");

// Function BP_BrainCrashManager.BP_BrainCrashManager_C.PrivateGetENPCLoadSequenceAssets
// 0x0168 (0x0168 - 0x0000)
struct BP_BrainCrashManager_C_PrivateGetENPCLoadSequenceAssets final
{
public:
	bool                                          LoadEm8220;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D0C[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class ULevelSequence>          Damage;                                            // 0x0008(0x0028)(Parm, OutParm, HasGetValueTypeHash)
	TSoftObjectPtr<class ULevelSequence>          KillSolo;                                          // 0x0030(0x0028)(Parm, OutParm, HasGetValueTypeHash)
	TSoftObjectPtr<class ULevelSequence>          KillMulti;                                         // 0x0058(0x0028)(Parm, OutParm, HasGetValueTypeHash)
	bool                                          LbCh0200;                                          // 0x0080(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D0D[0x7];                                     // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       Player;                                            // 0x0088(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class ULevelSequence>          RetKillMulti;                                      // 0x0090(0x0028)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TSoftObjectPtr<class ULevelSequence>          RetKillSolo;                                       // 0x00B8(0x0028)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TSoftObjectPtr<class ULevelSequence>          RetDamage;                                         // 0x00E0(0x0028)(Edit, BlueprintVisible, HasGetValueTypeHash)
	EPlayerID                                     Temp_byte_Variable;                                // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D0E[0x6];                                     // 0x010A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IPlayerInterface>      K2Node_DynamicCast_AsPlayer_Interface;             // 0x0110(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerID                                     CallFunc_GetPlayerID_ReturnValue;                  // 0x0122(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0123(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D0F[0x4];                                     // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class ULevelSequence>          K2Node_Select_Default;                             // 0x0128(0x0028)(HasGetValueTypeHash)
	class APlayerManager*                         CallFunc_GetPlayerManager_PlayerManager;           // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D10[0x7];                                     // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_GetPlayer_ReturnValue;                    // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrainCrashManager_C_PrivateGetENPCLoadSequenceAssets) == 0x000008, "Wrong alignment on BP_BrainCrashManager_C_PrivateGetENPCLoadSequenceAssets");
static_assert(sizeof(BP_BrainCrashManager_C_PrivateGetENPCLoadSequenceAssets) == 0x000168, "Wrong size on BP_BrainCrashManager_C_PrivateGetENPCLoadSequenceAssets");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateGetENPCLoadSequenceAssets, LoadEm8220) == 0x000000, "Member 'BP_BrainCrashManager_C_PrivateGetENPCLoadSequenceAssets::LoadEm8220' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateGetENPCLoadSequenceAssets, Damage) == 0x000008, "Member 'BP_BrainCrashManager_C_PrivateGetENPCLoadSequenceAssets::Damage' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateGetENPCLoadSequenceAssets, KillSolo) == 0x000030, "Member 'BP_BrainCrashManager_C_PrivateGetENPCLoadSequenceAssets::KillSolo' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateGetENPCLoadSequenceAssets, KillMulti) == 0x000058, "Member 'BP_BrainCrashManager_C_PrivateGetENPCLoadSequenceAssets::KillMulti' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateGetENPCLoadSequenceAssets, LbCh0200) == 0x000080, "Member 'BP_BrainCrashManager_C_PrivateGetENPCLoadSequenceAssets::LbCh0200' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateGetENPCLoadSequenceAssets, Player) == 0x000088, "Member 'BP_BrainCrashManager_C_PrivateGetENPCLoadSequenceAssets::Player' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateGetENPCLoadSequenceAssets, RetKillMulti) == 0x000090, "Member 'BP_BrainCrashManager_C_PrivateGetENPCLoadSequenceAssets::RetKillMulti' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateGetENPCLoadSequenceAssets, RetKillSolo) == 0x0000B8, "Member 'BP_BrainCrashManager_C_PrivateGetENPCLoadSequenceAssets::RetKillSolo' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateGetENPCLoadSequenceAssets, RetDamage) == 0x0000E0, "Member 'BP_BrainCrashManager_C_PrivateGetENPCLoadSequenceAssets::RetDamage' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateGetENPCLoadSequenceAssets, Temp_byte_Variable) == 0x000108, "Member 'BP_BrainCrashManager_C_PrivateGetENPCLoadSequenceAssets::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateGetENPCLoadSequenceAssets, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000109, "Member 'BP_BrainCrashManager_C_PrivateGetENPCLoadSequenceAssets::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateGetENPCLoadSequenceAssets, K2Node_DynamicCast_AsPlayer_Interface) == 0x000110, "Member 'BP_BrainCrashManager_C_PrivateGetENPCLoadSequenceAssets::K2Node_DynamicCast_AsPlayer_Interface' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateGetENPCLoadSequenceAssets, K2Node_DynamicCast_bSuccess) == 0x000120, "Member 'BP_BrainCrashManager_C_PrivateGetENPCLoadSequenceAssets::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateGetENPCLoadSequenceAssets, CallFunc_IsValid_ReturnValue) == 0x000121, "Member 'BP_BrainCrashManager_C_PrivateGetENPCLoadSequenceAssets::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateGetENPCLoadSequenceAssets, CallFunc_GetPlayerID_ReturnValue) == 0x000122, "Member 'BP_BrainCrashManager_C_PrivateGetENPCLoadSequenceAssets::CallFunc_GetPlayerID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateGetENPCLoadSequenceAssets, Temp_bool_Variable) == 0x000123, "Member 'BP_BrainCrashManager_C_PrivateGetENPCLoadSequenceAssets::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateGetENPCLoadSequenceAssets, K2Node_Select_Default) == 0x000128, "Member 'BP_BrainCrashManager_C_PrivateGetENPCLoadSequenceAssets::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateGetENPCLoadSequenceAssets, CallFunc_GetPlayerManager_PlayerManager) == 0x000150, "Member 'BP_BrainCrashManager_C_PrivateGetENPCLoadSequenceAssets::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateGetENPCLoadSequenceAssets, CallFunc_IsValid_ReturnValue_1) == 0x000158, "Member 'BP_BrainCrashManager_C_PrivateGetENPCLoadSequenceAssets::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateGetENPCLoadSequenceAssets, CallFunc_GetPlayer_ReturnValue) == 0x000160, "Member 'BP_BrainCrashManager_C_PrivateGetENPCLoadSequenceAssets::CallFunc_GetPlayer_ReturnValue' has a wrong offset!");

// Function BP_BrainCrashManager.BP_BrainCrashManager_C.PrivateSequencerBindingGeneral
// 0x0870 (0x0870 - 0x0000)
struct BP_BrainCrashManager_C_PrivateSequencerBindingGeneral final
{
public:
	class ARSCharacterBase*                       MainPlayer;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFBrainCrashSequencerInfo              BrainCrashSequencerInfo;                           // 0x0008(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LukaSeqencerRotAdd;                                // 0x0048(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CutCameraVector;                                   // 0x004C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PlayerToEnemyYaw;                                  // 0x0058(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                PlayerBaseLocation;                                // 0x005C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D11[0x8];                                     // 0x0068(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             TmpRelativeTransform;                              // 0x0070(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	struct FTransform                             TmpTransform;                                      // 0x00A0(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	class ARSBattleCharacter_C*                   TmpEnemy;                                          // 0x00D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D12[0x4];                                     // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_Array_Get_Item;                           // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattleEnemy_C*                       K2Node_DynamicCast_AsRSBattle_Enemy;               // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D13[0x7];                                     // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_Array_Get_Item_1;                         // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_EnemyInterface_C> CallFunc_GetBrainCore_self_CastInput;              // 0x0100(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ABP_co2000Base_C*                       CallFunc_GetBrainCore_CoreObject;                  // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0118(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D14[0x3];                                     // 0x0125(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Conv_VectorToVector2D_ReturnValue;        // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_Vector2DToVector_ReturnValue;        // 0x0130(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x013C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSCharacterBase*                       CallFunc_Array_Get_Item_2;                         // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D15[0x7];                                     // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0158(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_GetSequenceObjectBindingID_IsFind;        // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D16[0x3];                                     // 0x0169(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMovieSceneObjectBindingID             CallFunc_GetSequenceObjectBindingID_ReturnValue;   // 0x016C(0x0018)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0184(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D17[0x3];                                     // 0x0185(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x018C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D18[0x3];                                     // 0x018D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_MenuPlayerBase_C*                   CallFunc_Array_Get_Item_3;                         // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x019C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x01A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x01B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_MenuPlayerBase_C*                   CallFunc_Array_Get_Item_4;                         // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Conv_VectorToVector2D_ReturnValue_1;      // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_Vector2DToVector_ReturnValue_1;      // 0x01D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x01DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D19[0x3];                                     // 0x01E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakRotator_Roll;                        // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x01FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D1A[0x3];                                     // 0x01FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_MenuPlayerBase_C*                   CallFunc_Array_Get_Item_5;                         // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x020C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class AActor*>                         K2Node_MakeArray_Array_1;                          // 0x0218(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	uint8                                         Pad_3D1B[0x8];                                     // 0x0228(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0230(0x0030)(IsPlainOldData, NoDestructor)
	TArray<class AActor*>                         K2Node_MakeArray_Array_2;                          // 0x0260(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult;      // 0x0270(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue;         // 0x02F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetSequenceObjectBindingID_IsFind_1;      // 0x02F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D1C[0x2];                                     // 0x02FA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMovieSceneObjectBindingID             CallFunc_GetSequenceObjectBindingID_ReturnValue_1; // 0x02FC(0x0018)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSequenceObjectBindingID_IsFind_2;      // 0x0314(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D1D[0x3];                                     // 0x0315(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMovieSceneObjectBindingID             CallFunc_GetSequenceObjectBindingID_ReturnValue_2; // 0x0318(0x0018)(NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Calc_Not_Bried_Camera_Location_NewLocation; // 0x0330(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Calc_Not_Bried_Camera_Location_Bried;     // 0x033C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D1E[0x3];                                     // 0x033D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0340(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0344(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0348(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x034C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D1F[0x3];                                     // 0x034D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x0350(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x035C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x0368(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_2;                // 0x0374(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_2;                // 0x0380(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_2;                   // 0x038C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Conv_VectorToVector2D_ReturnValue_2;      // 0x0398(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x03A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x03A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x03A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_Vector2DToVector_ReturnValue_2;      // 0x03AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x03B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x03BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D20[0x8];                                     // 0x03C8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x03D0(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult_1;    // 0x0400(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue_1;       // 0x0488(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D21[0x7];                                     // 0x0489(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_3;                          // 0x0490(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x04A0(0x0018)()
	struct FVector                                CallFunc_BreakTransform_Location_3;                // 0x04B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_3;                // 0x04C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_3;                   // 0x04D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_2;                      // 0x04DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_2;                     // 0x04E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_2;                       // 0x04E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BindingEventSheath_IsBinding;             // 0x04E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D22[0x7];                                     // 0x04E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BrainCrash_C>     K2Node_DynamicCast_AsBPI_Brain_Crash;              // 0x04F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0500(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D23[0xF];                                     // 0x0501(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetRelativeTransform_ReturnValue;         // 0x0510(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0540(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BindingEventPlayer_IsBinding;             // 0x0570(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BindingEventPlayer_IsBindingPlayer;       // 0x0571(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BindingEventPlayer_IsBindingSASCode;      // 0x0572(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BindingEventPlayer_IsBindingBrainCode;    // 0x0573(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D24[0x4];                                     // 0x0574(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<bool>                                  CallFunc_BindingEventPlayer_IsBindingWeapon;       // 0x0578(0x0010)(ReferenceParm, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_4;                // 0x0588(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_4;                // 0x0594(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_4;                   // 0x05A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D25[0x4];                                     // 0x05AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetRelativeTransform_ReturnValue_1;       // 0x05B0(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location_5;                // 0x05E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_5;                // 0x05EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_5;                   // 0x05F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_6;                // 0x0604(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_6;                // 0x0610(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_6;                   // 0x061C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0628(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_3;                      // 0x0634(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_3;                     // 0x0638(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_3;                       // 0x063C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_2;              // 0x0640(0x0030)(IsPlainOldData, NoDestructor)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x0670(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult_2;    // 0x0674(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue_2;       // 0x06FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D26[0x3];                                     // 0x06FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_2;                // 0x0700(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x070C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D27[0x8];                                     // 0x0718(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_3;              // 0x0720(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult_3;    // 0x0750(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue_3;       // 0x07D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D28[0x7];                                     // 0x07D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IEventInterface>       CallFunc_BattleSequencerStart_self_CastInput;      // 0x07E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BattleSequencerStart_ReturnValue;         // 0x07F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D29[0x7];                                     // 0x07F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_4;                          // 0x07F8(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class ARSCharacterBase*                       CallFunc_Array_Get_Item_6;                         // 0x0808(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0810(0x0018)()
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0828(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Conv_VectorToVector2D_ReturnValue_3;      // 0x0834(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_Vector2DToVector_ReturnValue_3;      // 0x083C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue_1;         // 0x0848(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll_4;                      // 0x0854(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_4;                     // 0x0858(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_4;                       // 0x085C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattleCharacter_C*                   K2Node_DynamicCast_AsRSBattle_Character;           // 0x0860(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0868(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D2A[0x3];                                     // 0x0869(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x086C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral) == 0x000010, "Wrong alignment on BP_BrainCrashManager_C_PrivateSequencerBindingGeneral");
static_assert(sizeof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral) == 0x000870, "Wrong size on BP_BrainCrashManager_C_PrivateSequencerBindingGeneral");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral, MainPlayer) == 0x000000, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingGeneral::MainPlayer' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral, BrainCrashSequencerInfo) == 0x000008, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingGeneral::BrainCrashSequencerInfo' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral, LukaSeqencerRotAdd) == 0x000048, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingGeneral::LukaSeqencerRotAdd' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral, CutCameraVector) == 0x00004C, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingGeneral::CutCameraVector' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral, PlayerToEnemyYaw) == 0x000058, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingGeneral::PlayerToEnemyYaw' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral, PlayerBaseLocation) == 0x00005C, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingGeneral::PlayerBaseLocation' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral, TmpRelativeTransform) == 0x000070, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingGeneral::TmpRelativeTransform' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral, TmpTransform) == 0x0000A0, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingGeneral::TmpTransform' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral, TmpEnemy) == 0x0000D0, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingGeneral::TmpEnemy' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral, Temp_int_Array_Index_Variable) == 0x0000D8, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingGeneral::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral, CallFunc_Array_Get_Item) == 0x0000E0, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingGeneral::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral, K2Node_DynamicCast_AsRSBattle_Enemy) == 0x0000E8, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingGeneral::K2Node_DynamicCast_AsRSBattle_Enemy' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral, K2Node_DynamicCast_bSuccess) == 0x0000F0, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingGeneral::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral, CallFunc_Array_Get_Item_1) == 0x0000F8, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingGeneral::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral, CallFunc_GetBrainCore_self_CastInput) == 0x000100, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingGeneral::CallFunc_GetBrainCore_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral, CallFunc_GetBrainCore_CoreObject) == 0x000110, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingGeneral::CallFunc_GetBrainCore_CoreObject' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000118, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingGeneral::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral, CallFunc_IsValid_ReturnValue) == 0x000124, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingGeneral::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral, CallFunc_Conv_VectorToVector2D_ReturnValue) == 0x000128, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingGeneral::CallFunc_Conv_VectorToVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral, CallFunc_Conv_Vector2DToVector_ReturnValue) == 0x000130, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingGeneral::CallFunc_Conv_Vector2DToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral, CallFunc_GetSocketLocation_ReturnValue) == 0x00013C, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingGeneral::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral, CallFunc_Array_Get_Item_2) == 0x000148, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingGeneral::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral, CallFunc_IsValid_ReturnValue_1) == 0x000150, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingGeneral::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral, K2Node_MakeArray_Array) == 0x000158, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingGeneral::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral, CallFunc_GetSequenceObjectBindingID_IsFind) == 0x000168, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingGeneral::CallFunc_GetSequenceObjectBindingID_IsFind' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral, CallFunc_GetSequenceObjectBindingID_ReturnValue) == 0x00016C, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingGeneral::CallFunc_GetSequenceObjectBindingID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral, CallFunc_IsValid_ReturnValue_2) == 0x000184, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingGeneral::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral, CallFunc_Subtract_IntInt_ReturnValue) == 0x000188, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingGeneral::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00018C, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingGeneral::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral, CallFunc_Array_Get_Item_3) == 0x000190, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingGeneral::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000198, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingGeneral::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral, CallFunc_BreakTransform_Location) == 0x00019C, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingGeneral::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral, CallFunc_BreakTransform_Rotation) == 0x0001A8, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingGeneral::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral, CallFunc_BreakTransform_Scale) == 0x0001B4, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingGeneral::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral, CallFunc_Array_Get_Item_4) == 0x0001C0, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingGeneral::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral, CallFunc_Conv_VectorToVector2D_ReturnValue_1) == 0x0001C8, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingGeneral::CallFunc_Conv_VectorToVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral, CallFunc_Conv_Vector2DToVector_ReturnValue_1) == 0x0001D0, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingGeneral::CallFunc_Conv_Vector2DToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral, CallFunc_FindLookAtRotation_ReturnValue) == 0x0001DC, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingGeneral::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0001E8, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingGeneral::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral, CallFunc_BreakRotator_Roll) == 0x0001EC, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingGeneral::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral, CallFunc_BreakRotator_Pitch) == 0x0001F0, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingGeneral::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral, CallFunc_BreakRotator_Yaw) == 0x0001F4, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingGeneral::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x0001F8, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingGeneral::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0001FC, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingGeneral::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral, CallFunc_Array_Get_Item_5) == 0x000200, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingGeneral::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral, CallFunc_Add_FloatFloat_ReturnValue) == 0x000208, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingGeneral::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral, CallFunc_MakeRotator_ReturnValue) == 0x00020C, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingGeneral::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral, K2Node_MakeArray_Array_1) == 0x000218, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingGeneral::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral, CallFunc_MakeTransform_ReturnValue) == 0x000230, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingGeneral::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral, K2Node_MakeArray_Array_2) == 0x000260, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingGeneral::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral, CallFunc_K2_SetActorTransform_SweepHitResult) == 0x000270, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingGeneral::CallFunc_K2_SetActorTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral, CallFunc_K2_SetActorTransform_ReturnValue) == 0x0002F8, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingGeneral::CallFunc_K2_SetActorTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral, CallFunc_GetSequenceObjectBindingID_IsFind_1) == 0x0002F9, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingGeneral::CallFunc_GetSequenceObjectBindingID_IsFind_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral, CallFunc_GetSequenceObjectBindingID_ReturnValue_1) == 0x0002FC, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingGeneral::CallFunc_GetSequenceObjectBindingID_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral, CallFunc_GetSequenceObjectBindingID_IsFind_2) == 0x000314, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingGeneral::CallFunc_GetSequenceObjectBindingID_IsFind_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral, CallFunc_GetSequenceObjectBindingID_ReturnValue_2) == 0x000318, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingGeneral::CallFunc_GetSequenceObjectBindingID_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral, CallFunc_Calc_Not_Bried_Camera_Location_NewLocation) == 0x000330, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingGeneral::CallFunc_Calc_Not_Bried_Camera_Location_NewLocation' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral, CallFunc_Calc_Not_Bried_Camera_Location_Bried) == 0x00033C, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingGeneral::CallFunc_Calc_Not_Bried_Camera_Location_Bried' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral, Temp_int_Loop_Counter_Variable) == 0x000340, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingGeneral::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral, CallFunc_Add_IntInt_ReturnValue) == 0x000344, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingGeneral::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral, Temp_int_Loop_Num_Variable) == 0x000348, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingGeneral::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral, CallFunc_Less_IntInt_ReturnValue) == 0x00034C, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingGeneral::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral, CallFunc_BreakTransform_Location_1) == 0x000350, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingGeneral::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral, CallFunc_BreakTransform_Rotation_1) == 0x00035C, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingGeneral::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral, CallFunc_BreakTransform_Scale_1) == 0x000368, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingGeneral::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral, CallFunc_BreakTransform_Location_2) == 0x000374, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingGeneral::CallFunc_BreakTransform_Location_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral, CallFunc_BreakTransform_Rotation_2) == 0x000380, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingGeneral::CallFunc_BreakTransform_Rotation_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral, CallFunc_BreakTransform_Scale_2) == 0x00038C, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingGeneral::CallFunc_BreakTransform_Scale_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral, CallFunc_Conv_VectorToVector2D_ReturnValue_2) == 0x000398, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingGeneral::CallFunc_Conv_VectorToVector2D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral, CallFunc_BreakRotator_Roll_1) == 0x0003A0, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingGeneral::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral, CallFunc_BreakRotator_Pitch_1) == 0x0003A4, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingGeneral::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral, CallFunc_BreakRotator_Yaw_1) == 0x0003A8, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingGeneral::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral, CallFunc_Conv_Vector2DToVector_ReturnValue_2) == 0x0003AC, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingGeneral::CallFunc_Conv_Vector2DToVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x0003B8, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingGeneral::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral, CallFunc_MakeRotator_ReturnValue_1) == 0x0003BC, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingGeneral::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral, CallFunc_MakeTransform_ReturnValue_1) == 0x0003D0, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingGeneral::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral, CallFunc_K2_SetActorTransform_SweepHitResult_1) == 0x000400, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingGeneral::CallFunc_K2_SetActorTransform_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral, CallFunc_K2_SetActorTransform_ReturnValue_1) == 0x000488, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingGeneral::CallFunc_K2_SetActorTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral, K2Node_MakeArray_Array_3) == 0x000490, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingGeneral::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral, CallFunc_Format_ReturnValue) == 0x0004A0, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingGeneral::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral, CallFunc_BreakTransform_Location_3) == 0x0004B8, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingGeneral::CallFunc_BreakTransform_Location_3' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral, CallFunc_BreakTransform_Rotation_3) == 0x0004C4, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingGeneral::CallFunc_BreakTransform_Rotation_3' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral, CallFunc_BreakTransform_Scale_3) == 0x0004D0, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingGeneral::CallFunc_BreakTransform_Scale_3' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral, CallFunc_BreakRotator_Roll_2) == 0x0004DC, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingGeneral::CallFunc_BreakRotator_Roll_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral, CallFunc_BreakRotator_Pitch_2) == 0x0004E0, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingGeneral::CallFunc_BreakRotator_Pitch_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral, CallFunc_BreakRotator_Yaw_2) == 0x0004E4, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingGeneral::CallFunc_BreakRotator_Yaw_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral, CallFunc_BindingEventSheath_IsBinding) == 0x0004E8, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingGeneral::CallFunc_BindingEventSheath_IsBinding' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral, K2Node_DynamicCast_AsBPI_Brain_Crash) == 0x0004F0, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingGeneral::K2Node_DynamicCast_AsBPI_Brain_Crash' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral, K2Node_DynamicCast_bSuccess_1) == 0x000500, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingGeneral::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral, CallFunc_GetRelativeTransform_ReturnValue) == 0x000510, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingGeneral::CallFunc_GetRelativeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral, CallFunc_GetTransform_ReturnValue) == 0x000540, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingGeneral::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral, CallFunc_BindingEventPlayer_IsBinding) == 0x000570, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingGeneral::CallFunc_BindingEventPlayer_IsBinding' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral, CallFunc_BindingEventPlayer_IsBindingPlayer) == 0x000571, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingGeneral::CallFunc_BindingEventPlayer_IsBindingPlayer' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral, CallFunc_BindingEventPlayer_IsBindingSASCode) == 0x000572, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingGeneral::CallFunc_BindingEventPlayer_IsBindingSASCode' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral, CallFunc_BindingEventPlayer_IsBindingBrainCode) == 0x000573, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingGeneral::CallFunc_BindingEventPlayer_IsBindingBrainCode' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral, CallFunc_BindingEventPlayer_IsBindingWeapon) == 0x000578, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingGeneral::CallFunc_BindingEventPlayer_IsBindingWeapon' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral, CallFunc_BreakTransform_Location_4) == 0x000588, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingGeneral::CallFunc_BreakTransform_Location_4' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral, CallFunc_BreakTransform_Rotation_4) == 0x000594, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingGeneral::CallFunc_BreakTransform_Rotation_4' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral, CallFunc_BreakTransform_Scale_4) == 0x0005A0, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingGeneral::CallFunc_BreakTransform_Scale_4' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral, CallFunc_GetRelativeTransform_ReturnValue_1) == 0x0005B0, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingGeneral::CallFunc_GetRelativeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral, CallFunc_BreakTransform_Location_5) == 0x0005E0, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingGeneral::CallFunc_BreakTransform_Location_5' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral, CallFunc_BreakTransform_Rotation_5) == 0x0005EC, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingGeneral::CallFunc_BreakTransform_Rotation_5' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral, CallFunc_BreakTransform_Scale_5) == 0x0005F8, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingGeneral::CallFunc_BreakTransform_Scale_5' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral, CallFunc_BreakTransform_Location_6) == 0x000604, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingGeneral::CallFunc_BreakTransform_Location_6' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral, CallFunc_BreakTransform_Rotation_6) == 0x000610, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingGeneral::CallFunc_BreakTransform_Rotation_6' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral, CallFunc_BreakTransform_Scale_6) == 0x00061C, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingGeneral::CallFunc_BreakTransform_Scale_6' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral, CallFunc_Add_VectorVector_ReturnValue) == 0x000628, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingGeneral::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral, CallFunc_BreakRotator_Roll_3) == 0x000634, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingGeneral::CallFunc_BreakRotator_Roll_3' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral, CallFunc_BreakRotator_Pitch_3) == 0x000638, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingGeneral::CallFunc_BreakRotator_Pitch_3' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral, CallFunc_BreakRotator_Yaw_3) == 0x00063C, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingGeneral::CallFunc_BreakRotator_Yaw_3' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral, CallFunc_MakeTransform_ReturnValue_2) == 0x000640, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingGeneral::CallFunc_MakeTransform_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x000670, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingGeneral::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral, CallFunc_K2_SetActorTransform_SweepHitResult_2) == 0x000674, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingGeneral::CallFunc_K2_SetActorTransform_SweepHitResult_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral, CallFunc_K2_SetActorTransform_ReturnValue_2) == 0x0006FC, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingGeneral::CallFunc_K2_SetActorTransform_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral, CallFunc_MakeRotator_ReturnValue_2) == 0x000700, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingGeneral::CallFunc_MakeRotator_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral, CallFunc_Add_VectorVector_ReturnValue_1) == 0x00070C, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingGeneral::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral, CallFunc_MakeTransform_ReturnValue_3) == 0x000720, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingGeneral::CallFunc_MakeTransform_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral, CallFunc_K2_SetActorTransform_SweepHitResult_3) == 0x000750, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingGeneral::CallFunc_K2_SetActorTransform_SweepHitResult_3' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral, CallFunc_K2_SetActorTransform_ReturnValue_3) == 0x0007D8, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingGeneral::CallFunc_K2_SetActorTransform_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral, CallFunc_BattleSequencerStart_self_CastInput) == 0x0007E0, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingGeneral::CallFunc_BattleSequencerStart_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral, CallFunc_BattleSequencerStart_ReturnValue) == 0x0007F0, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingGeneral::CallFunc_BattleSequencerStart_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral, K2Node_MakeArray_Array_4) == 0x0007F8, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingGeneral::K2Node_MakeArray_Array_4' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral, CallFunc_Array_Get_Item_6) == 0x000808, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingGeneral::CallFunc_Array_Get_Item_6' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral, CallFunc_Format_ReturnValue_1) == 0x000810, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingGeneral::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000828, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingGeneral::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral, CallFunc_Conv_VectorToVector2D_ReturnValue_3) == 0x000834, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingGeneral::CallFunc_Conv_VectorToVector2D_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral, CallFunc_Conv_Vector2DToVector_ReturnValue_3) == 0x00083C, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingGeneral::CallFunc_Conv_Vector2DToVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral, CallFunc_FindLookAtRotation_ReturnValue_1) == 0x000848, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingGeneral::CallFunc_FindLookAtRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral, CallFunc_BreakRotator_Roll_4) == 0x000854, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingGeneral::CallFunc_BreakRotator_Roll_4' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral, CallFunc_BreakRotator_Pitch_4) == 0x000858, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingGeneral::CallFunc_BreakRotator_Pitch_4' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral, CallFunc_BreakRotator_Yaw_4) == 0x00085C, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingGeneral::CallFunc_BreakRotator_Yaw_4' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral, K2Node_DynamicCast_AsRSBattle_Character) == 0x000860, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingGeneral::K2Node_DynamicCast_AsRSBattle_Character' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral, K2Node_DynamicCast_bSuccess_2) == 0x000868, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingGeneral::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingGeneral, CallFunc_Array_Length_ReturnValue) == 0x00086C, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingGeneral::CallFunc_Array_Length_ReturnValue' has a wrong offset!");

// Function BP_BrainCrashManager.BP_BrainCrashManager_C.PrivateSequencerBindingUnique
// 0x0C00 (0x0C00 - 0x0000)
struct BP_BrainCrashManager_C_PrivateSequencerBindingUnique final
{
public:
	class ARSCharacterBase*                       MainPlayer;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSCharacterBase*                       LeftPlayer;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSCharacterBase*                       RightPlayer;                                       // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          TmpBool;                                           // 0x0018(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D2B[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Param_Name;                                        // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class ARSCharacterBase*                       TmpActor;                                          // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         AttachedActors;                                    // 0x0038(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	bool                                          Hit;                                               // 0x0048(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D2C[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMovieSceneObjectBindingID             TmpBindingID;                                      // 0x004C(0x0018)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D2D[0x3];                                     // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D2E[0x3];                                     // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D2F[0x3];                                     // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FindSubstring_ReturnValue;                // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D30[0x3];                                     // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable_1;        // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D31[0x3];                                     // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D32[0x3];                                     // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_1;                      // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D33[0x2];                                     // 0x00A6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Num_Variable_2;                      // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable_2;        // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D34[0x3];                                     // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_4;                   // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D35[0x3];                                     // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Num_Variable_3;                      // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_EventCameraRoot_C*                  CallFunc_GetCurrentSeqUniquePlayerRoot_SeqUniquePlayerRoot; // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D36[0x7];                                     // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x00D8(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D37[0x7];                                     // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_EventCameraRoot_C*                  CallFunc_GetCurrentSeqUniquePlayerRoot_SeqUniquePlayerRoot_1; // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_EventCameraRoot_C*                  CallFunc_GetCurrentSeqUniqueRoot_SeqUniqueRoot;    // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_EventCameraRoot_C*                  CallFunc_GetCurrentSeqUniqueRoot_SeqUniqueRoot_1;  // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array_1;                          // 0x0108(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	class ABP_EventCameraRoot_C*                  CallFunc_GetCurrentSeqUniqueRoot_SeqUniqueRoot_2;  // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_EventCameraRoot_C*                  CallFunc_GetCurrentSeqUniqueEnemyRoot_SeqUniqueEnemyRoot; // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_EventCameraRoot_C*                  CallFunc_GetCurrentSeqUniqueEnemyRoot_SeqUniqueEnemyRoot_1; // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array_2;                          // 0x0130(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	class ABP_EventCameraRoot_C*                  CallFunc_GetCurrentSeqCameraRoot_SeqCameraRoot;    // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_EventCameraRoot_C*                  CallFunc_GetCurrentSeqCameraRoot_SeqCameraRoot_1;  // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSLevelSequenceActor*                  CallFunc_GetCurrentSequencer_Sequencer;            // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array_3;                          // 0x0158(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	class ARSLevelSequenceActor*                  CallFunc_GetCurrentSequencer_Sequencer_1;          // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSLevelSequenceActor*                  CallFunc_GetCurrentSequencer_Sequencer_2;          // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSLevelSequenceActor*                  CallFunc_GetCurrentSequencer_Sequencer_3;          // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSLevelSequenceActor*                  CallFunc_GetCurrentSequencer_Sequencer_4;          // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSLevelSequenceActor*                  CallFunc_GetCurrentSequencer_Sequencer_5;          // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSLevelSequenceActor*                  CallFunc_GetCurrentSequencer_Sequencer_6;          // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSLevelSequenceActor*                  CallFunc_GetCurrentSequencer_Sequencer_7;          // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSLevelSequenceActor*                  CallFunc_GetCurrentSequencer_Sequencer_8;          // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSLevelSequenceActor*                  CallFunc_GetCurrentSequencer_Sequencer_9;          // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSequenceObjectBindingID_IsFind;        // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D38[0x3];                                     // 0x01B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMovieSceneObjectBindingID             CallFunc_GetSequenceObjectBindingID_ReturnValue;   // 0x01B4(0x0018)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D39[0x4];                                     // 0x01CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSLevelSequenceActor*                  CallFunc_GetCurrentSequencer_Sequencer_10;         // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSequenceObjectBindingID_IsFind_1;      // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D3A[0x3];                                     // 0x01D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMovieSceneObjectBindingID             CallFunc_GetSequenceObjectBindingID_ReturnValue_1; // 0x01DC(0x0018)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D3B[0x4];                                     // 0x01F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSLevelSequenceActor*                  CallFunc_GetCurrentSequencer_Sequencer_11;         // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSLevelSequenceActor*                  CallFunc_GetCurrentSequencer_Sequencer_12;         // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSLevelSequenceActor*                  CallFunc_GetCurrentSequencer_Sequencer_13;         // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSequenceObjectBindingID_IsFind_2;      // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D3C[0x3];                                     // 0x0211(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMovieSceneObjectBindingID             CallFunc_GetSequenceObjectBindingID_ReturnValue_2; // 0x0214(0x0018)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D3D[0x4];                                     // 0x022C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSLevelSequenceActor*                  CallFunc_GetCurrentSequencer_Sequencer_14;         // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSequenceObjectBindingID_IsFind_3;      // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D3E[0x3];                                     // 0x0239(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMovieSceneObjectBindingID             CallFunc_GetSequenceObjectBindingID_ReturnValue_3; // 0x023C(0x0018)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D3F[0x4];                                     // 0x0254(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSLevelSequenceActor*                  CallFunc_GetCurrentSequencer_Sequencer_15;         // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSLevelSequenceActor*                  CallFunc_GetCurrentSequencer_Sequencer_16;         // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSLevelSequenceActor*                  CallFunc_GetCurrentSequencer_Sequencer_17;         // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSLevelSequenceActor*                  CallFunc_GetCurrentSequencer_Sequencer_18;         // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSLevelSequenceActor*                  CallFunc_GetCurrentSequencer_Sequencer_19;         // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSLevelSequenceActor*                  CallFunc_GetCurrentSequencer_Sequencer_20;         // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSLevelSequenceActor*                  CallFunc_GetCurrentSequencer_Sequencer_21;         // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSLevelSequenceActor*                  CallFunc_GetCurrentSequencer_Sequencer_22;         // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSLevelSequenceActor*                  CallFunc_GetCurrentSequencer_Sequencer_23;         // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FMovieSceneObjectBindingID>     CallFunc_GetSequenceObjectBindingIDListFromClass_OutBindingIDList; // 0x02A0(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<class FString>                         CallFunc_GetSequenceObjectBindingIDListFromClass_OutNameList; // 0x02B0(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_GetSequenceObjectBindingIDListFromClass_IsFind; // 0x02C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D40[0x3];                                     // 0x02C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x02C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FindSubstring_ReturnValue_1;              // 0x02C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x02CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D41[0x3];                                     // 0x02CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x02D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable_3;        // 0x02D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x02D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D42[0x2];                                     // 0x02D6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x02D8(0x0018)()
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x02F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FindSubstring_ReturnValue_2;              // 0x02F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_2;        // 0x02F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_True_if_break_was_hit_Variable_4;        // 0x02F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x02FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D43[0x5];                                     // 0x02FB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_PrivateCalcTransform_Transform;           // 0x0300(0x0030)(IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x0330(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult;      // 0x0334(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue;         // 0x03BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x03BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D44[0x2];                                     // 0x03BE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x03C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x03C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D45[0x3];                                     // 0x03C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_1;                              // 0x03C8(0x0018)()
	struct FTransform                             CallFunc_GetRelativeTransform_ReturnValue;         // 0x03E0(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BindingEventSheath_IsBinding;             // 0x0410(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D46[0x3];                                     // 0x0411(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0414(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BrainCrash_C>     K2Node_DynamicCast_AsBPI_Brain_Crash;              // 0x0418(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0428(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D47[0x7];                                     // 0x0429(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0430(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x0460(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0464(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0468(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D48[0x4];                                     // 0x046C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_MakeArray_Array_4;                          // 0x0470(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	TScriptInterface<class IEventInterface>       CallFunc_BattleSequencerStart_self_CastInput;      // 0x0480(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BattleSequencerStart_ReturnValue;         // 0x0490(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D49[0x7];                                     // 0x0491(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FText>                           K2Node_MakeArray_Array_5;                          // 0x0498(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<struct FMovieSceneObjectBindingID>     CallFunc_GetSequenceObjectBindingIDList_OutBindingIDList; // 0x04A8(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_GetSequenceObjectBindingIDList_IsFind;    // 0x04B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D4A[0x7];                                     // 0x04B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_MakeArray_Array_6;                          // 0x04C0(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x04D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D4B[0x4];                                     // 0x04D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FText>                           K2Node_MakeArray_Array_7;                          // 0x04D8(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_4;                      // 0x04E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D4C[0x4];                                     // 0x04EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FMovieSceneObjectBindingID>     CallFunc_GetSequenceObjectBindingIDList_OutBindingIDList_1; // 0x04F0(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_GetSequenceObjectBindingIDList_IsFind_1;  // 0x0500(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D4D[0x3];                                     // 0x0501(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_6;               // 0x0504(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_4;                  // 0x0508(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x050C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D4E[0x3];                                     // 0x050D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0510(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0514(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BindingEventPlayer_IsBinding;             // 0x0515(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BindingEventPlayer_IsBindingPlayer;       // 0x0516(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BindingEventPlayer_IsBindingSASCode;      // 0x0517(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BindingEventPlayer_IsBindingBrainCode;    // 0x0518(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D4F[0x7];                                     // 0x0519(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<bool>                                  CallFunc_BindingEventPlayer_IsBindingWeapon;       // 0x0520(0x0010)(ReferenceParm, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0530(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult_1;    // 0x0560(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue_1;       // 0x05E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D50[0x7];                                     // 0x05E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetRelativeTransform_ReturnValue_1;       // 0x05F0(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x0620(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult_2;    // 0x0650(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue_2;       // 0x06D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D51[0x7];                                     // 0x06D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_2;              // 0x06E0(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_3;              // 0x0710(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult_3;    // 0x0740(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue_3;       // 0x07C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D52[0x3];                                     // 0x07C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult_4;    // 0x07CC(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue_4;       // 0x0854(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_True_if_break_was_hit_Variable_5;        // 0x0855(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D53[0x2];                                     // 0x0856(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Num_Variable_5;                      // 0x0858(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_5;                // 0x085C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D54[0x3];                                     // 0x085D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Num_Variable_6;                      // 0x0860(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D55[0x4];                                     // 0x0864(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FMovieSceneObjectBindingID>     K2Node_MakeArray_Array_8;                          // 0x0868(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x0878(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x0879(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D56[0x2];                                     // 0x087A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_5;                   // 0x087C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FMovieSceneObjectBindingID>     K2Node_MakeArray_Array_9;                          // 0x0880(0x0010)(ReferenceParm, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult_5;    // 0x0890(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue_5;       // 0x0918(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D57[0x3];                                     // 0x0919(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_5;                  // 0x091C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_PrivateCalcUniqueCrashStartTransform_Transform; // 0x0920(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_5;                // 0x0950(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D58[0x3];                                     // 0x0951(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x0954(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x0958(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D59[0x3];                                     // 0x0959(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_6;                   // 0x095C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_10;                         // 0x0960(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0970(0x0018)()
	uint8                                         Pad_3D5A[0x8];                                     // 0x0988(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_PrivateCalcTransform_Transform_1;         // 0x0990(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult_6;    // 0x09C0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue_6;       // 0x0A48(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D5B[0x7];                                     // 0x0A49(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FMovieSceneObjectBindingID>     K2Node_MakeArray_Array_11;                         // 0x0A50(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<struct FMovieSceneObjectBindingID>     K2Node_MakeArray_Array_12;                         // 0x0A60(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array_13;                         // 0x0A70(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetTransform_ReturnValue_1;               // 0x0A80(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_14;                         // 0x0AB0(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array_15;                         // 0x0AC0(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0AD0(0x0018)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_16;                         // 0x0AE8(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x0AF8(0x0018)()
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0B10(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D5C[0x3];                                     // 0x0B11(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_6;                  // 0x0B14(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_EnemyInterface_C> K2Node_DynamicCast_AsBPI_Enemy_Interface;          // 0x0B18(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0B28(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_6;                // 0x0B29(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D5D[0x6];                                     // 0x0B2A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_co2000Base_C*                       CallFunc_GetBrainCore_CoreObject;                  // 0x0B30(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x0B38(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D5E[0x4];                                     // 0x0B3C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FMovieSceneObjectBindingID>     K2Node_MakeArray_Array_17;                         // 0x0B40(0x0010)(ReferenceParm, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x0B50(0x0030)(IsPlainOldData, NoDestructor)
	TArray<class AActor*>                         K2Node_MakeArray_Array_18;                         // 0x0B80(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0B90(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D5F[0x7];                                     // 0x0B91(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IEventInterface>       CallFunc_BattleSequencerStart_self_CastInput_1;    // 0x0B98(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BattleSequencerStart_ReturnValue_1;       // 0x0BA8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D60[0x7];                                     // 0x0BA9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x0BB0(0x0018)()
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0BC8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D61[0x7];                                     // 0x0BC9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FText>                           K2Node_MakeArray_Array_19;                         // 0x0BD0(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<struct FMovieSceneObjectBindingID>     CallFunc_GetSequenceObjectBindingIDList_OutBindingIDList_2; // 0x0BE0(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_GetSequenceObjectBindingIDList_IsFind_2;  // 0x0BF0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D62[0x3];                                     // 0x0BF1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_7;               // 0x0BF4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique) == 0x000010, "Wrong alignment on BP_BrainCrashManager_C_PrivateSequencerBindingUnique");
static_assert(sizeof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique) == 0x000C00, "Wrong size on BP_BrainCrashManager_C_PrivateSequencerBindingUnique");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, MainPlayer) == 0x000000, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::MainPlayer' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, LeftPlayer) == 0x000008, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::LeftPlayer' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, RightPlayer) == 0x000010, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::RightPlayer' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, TmpBool) == 0x000018, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::TmpBool' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, Param_Name) == 0x000020, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::Param_Name' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, TmpActor) == 0x000030, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::TmpActor' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, AttachedActors) == 0x000038, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::AttachedActors' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, Hit) == 0x000048, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::Hit' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, TmpBindingID) == 0x00004C, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::TmpBindingID' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, Temp_bool_True_if_break_was_hit_Variable) == 0x000064, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, Temp_int_Array_Index_Variable) == 0x000068, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, CallFunc_Not_PreBool_ReturnValue) == 0x00006C, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, Temp_int_Loop_Num_Variable) == 0x000070, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, CallFunc_IsValid_ReturnValue) == 0x000074, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, CallFunc_FindSubstring_ReturnValue) == 0x000078, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::CallFunc_FindSubstring_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00007C, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, Temp_int_Loop_Counter_Variable) == 0x000080, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, CallFunc_Add_IntInt_ReturnValue) == 0x000084, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, Temp_int_Loop_Counter_Variable_1) == 0x000088, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, CallFunc_Add_IntInt_ReturnValue_1) == 0x00008C, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, Temp_bool_True_if_break_was_hit_Variable_1) == 0x000090, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::Temp_bool_True_if_break_was_hit_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, Temp_int_Array_Index_Variable_1) == 0x000094, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, CallFunc_Not_PreBool_ReturnValue_1) == 0x000098, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, Temp_int_Array_Index_Variable_2) == 0x00009C, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, Temp_int_Loop_Num_Variable_1) == 0x0000A0, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::Temp_int_Loop_Num_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, CallFunc_Less_IntInt_ReturnValue) == 0x0000A4, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, CallFunc_BooleanAND_ReturnValue) == 0x0000A5, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, Temp_int_Loop_Num_Variable_2) == 0x0000A8, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::Temp_int_Loop_Num_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, Temp_int_Array_Index_Variable_3) == 0x0000AC, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, Temp_int_Loop_Counter_Variable_2) == 0x0000B0, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000B4, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, Temp_bool_True_if_break_was_hit_Variable_2) == 0x0000B8, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::Temp_bool_True_if_break_was_hit_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, Temp_int_Array_Index_Variable_4) == 0x0000BC, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::Temp_int_Array_Index_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, CallFunc_Not_PreBool_ReturnValue_2) == 0x0000C0, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, Temp_int_Loop_Num_Variable_3) == 0x0000C4, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::Temp_int_Loop_Num_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, CallFunc_GetCurrentSeqUniquePlayerRoot_SeqUniquePlayerRoot) == 0x0000C8, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::CallFunc_GetCurrentSeqUniquePlayerRoot_SeqUniquePlayerRoot' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000D0, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, K2Node_MakeArray_Array) == 0x0000D8, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, CallFunc_BooleanAND_ReturnValue_1) == 0x0000E8, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, CallFunc_GetCurrentSeqUniquePlayerRoot_SeqUniquePlayerRoot_1) == 0x0000F0, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::CallFunc_GetCurrentSeqUniquePlayerRoot_SeqUniquePlayerRoot_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, CallFunc_GetCurrentSeqUniqueRoot_SeqUniqueRoot) == 0x0000F8, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::CallFunc_GetCurrentSeqUniqueRoot_SeqUniqueRoot' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, CallFunc_GetCurrentSeqUniqueRoot_SeqUniqueRoot_1) == 0x000100, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::CallFunc_GetCurrentSeqUniqueRoot_SeqUniqueRoot_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, K2Node_MakeArray_Array_1) == 0x000108, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, CallFunc_GetCurrentSeqUniqueRoot_SeqUniqueRoot_2) == 0x000118, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::CallFunc_GetCurrentSeqUniqueRoot_SeqUniqueRoot_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, CallFunc_GetCurrentSeqUniqueEnemyRoot_SeqUniqueEnemyRoot) == 0x000120, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::CallFunc_GetCurrentSeqUniqueEnemyRoot_SeqUniqueEnemyRoot' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, CallFunc_GetCurrentSeqUniqueEnemyRoot_SeqUniqueEnemyRoot_1) == 0x000128, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::CallFunc_GetCurrentSeqUniqueEnemyRoot_SeqUniqueEnemyRoot_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, K2Node_MakeArray_Array_2) == 0x000130, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, CallFunc_GetCurrentSeqCameraRoot_SeqCameraRoot) == 0x000140, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::CallFunc_GetCurrentSeqCameraRoot_SeqCameraRoot' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, CallFunc_GetCurrentSeqCameraRoot_SeqCameraRoot_1) == 0x000148, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::CallFunc_GetCurrentSeqCameraRoot_SeqCameraRoot_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, CallFunc_GetCurrentSequencer_Sequencer) == 0x000150, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::CallFunc_GetCurrentSequencer_Sequencer' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, K2Node_MakeArray_Array_3) == 0x000158, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, CallFunc_GetCurrentSequencer_Sequencer_1) == 0x000168, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::CallFunc_GetCurrentSequencer_Sequencer_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, CallFunc_GetCurrentSequencer_Sequencer_2) == 0x000170, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::CallFunc_GetCurrentSequencer_Sequencer_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, CallFunc_GetCurrentSequencer_Sequencer_3) == 0x000178, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::CallFunc_GetCurrentSequencer_Sequencer_3' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, CallFunc_GetCurrentSequencer_Sequencer_4) == 0x000180, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::CallFunc_GetCurrentSequencer_Sequencer_4' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, CallFunc_GetCurrentSequencer_Sequencer_5) == 0x000188, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::CallFunc_GetCurrentSequencer_Sequencer_5' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, CallFunc_GetCurrentSequencer_Sequencer_6) == 0x000190, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::CallFunc_GetCurrentSequencer_Sequencer_6' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, CallFunc_GetCurrentSequencer_Sequencer_7) == 0x000198, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::CallFunc_GetCurrentSequencer_Sequencer_7' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, CallFunc_GetCurrentSequencer_Sequencer_8) == 0x0001A0, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::CallFunc_GetCurrentSequencer_Sequencer_8' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, CallFunc_GetCurrentSequencer_Sequencer_9) == 0x0001A8, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::CallFunc_GetCurrentSequencer_Sequencer_9' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, CallFunc_GetSequenceObjectBindingID_IsFind) == 0x0001B0, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::CallFunc_GetSequenceObjectBindingID_IsFind' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, CallFunc_GetSequenceObjectBindingID_ReturnValue) == 0x0001B4, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::CallFunc_GetSequenceObjectBindingID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, CallFunc_GetCurrentSequencer_Sequencer_10) == 0x0001D0, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::CallFunc_GetCurrentSequencer_Sequencer_10' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, CallFunc_GetSequenceObjectBindingID_IsFind_1) == 0x0001D8, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::CallFunc_GetSequenceObjectBindingID_IsFind_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, CallFunc_GetSequenceObjectBindingID_ReturnValue_1) == 0x0001DC, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::CallFunc_GetSequenceObjectBindingID_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, CallFunc_GetCurrentSequencer_Sequencer_11) == 0x0001F8, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::CallFunc_GetCurrentSequencer_Sequencer_11' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, CallFunc_GetCurrentSequencer_Sequencer_12) == 0x000200, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::CallFunc_GetCurrentSequencer_Sequencer_12' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, CallFunc_GetCurrentSequencer_Sequencer_13) == 0x000208, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::CallFunc_GetCurrentSequencer_Sequencer_13' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, CallFunc_GetSequenceObjectBindingID_IsFind_2) == 0x000210, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::CallFunc_GetSequenceObjectBindingID_IsFind_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, CallFunc_GetSequenceObjectBindingID_ReturnValue_2) == 0x000214, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::CallFunc_GetSequenceObjectBindingID_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, CallFunc_GetCurrentSequencer_Sequencer_14) == 0x000230, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::CallFunc_GetCurrentSequencer_Sequencer_14' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, CallFunc_GetSequenceObjectBindingID_IsFind_3) == 0x000238, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::CallFunc_GetSequenceObjectBindingID_IsFind_3' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, CallFunc_GetSequenceObjectBindingID_ReturnValue_3) == 0x00023C, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::CallFunc_GetSequenceObjectBindingID_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, CallFunc_GetCurrentSequencer_Sequencer_15) == 0x000258, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::CallFunc_GetCurrentSequencer_Sequencer_15' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, CallFunc_GetCurrentSequencer_Sequencer_16) == 0x000260, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::CallFunc_GetCurrentSequencer_Sequencer_16' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, CallFunc_GetCurrentSequencer_Sequencer_17) == 0x000268, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::CallFunc_GetCurrentSequencer_Sequencer_17' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, CallFunc_GetCurrentSequencer_Sequencer_18) == 0x000270, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::CallFunc_GetCurrentSequencer_Sequencer_18' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, CallFunc_GetCurrentSequencer_Sequencer_19) == 0x000278, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::CallFunc_GetCurrentSequencer_Sequencer_19' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, CallFunc_GetCurrentSequencer_Sequencer_20) == 0x000280, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::CallFunc_GetCurrentSequencer_Sequencer_20' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, CallFunc_GetCurrentSequencer_Sequencer_21) == 0x000288, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::CallFunc_GetCurrentSequencer_Sequencer_21' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, CallFunc_GetCurrentSequencer_Sequencer_22) == 0x000290, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::CallFunc_GetCurrentSequencer_Sequencer_22' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, CallFunc_GetCurrentSequencer_Sequencer_23) == 0x000298, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::CallFunc_GetCurrentSequencer_Sequencer_23' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, CallFunc_GetSequenceObjectBindingIDListFromClass_OutBindingIDList) == 0x0002A0, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::CallFunc_GetSequenceObjectBindingIDListFromClass_OutBindingIDList' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, CallFunc_GetSequenceObjectBindingIDListFromClass_OutNameList) == 0x0002B0, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::CallFunc_GetSequenceObjectBindingIDListFromClass_OutNameList' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, CallFunc_GetSequenceObjectBindingIDListFromClass_IsFind) == 0x0002C0, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::CallFunc_GetSequenceObjectBindingIDListFromClass_IsFind' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, CallFunc_Array_Length_ReturnValue) == 0x0002C4, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, CallFunc_FindSubstring_ReturnValue_1) == 0x0002C8, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::CallFunc_FindSubstring_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x0002CC, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, CallFunc_Array_Length_ReturnValue_1) == 0x0002D0, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, Temp_bool_True_if_break_was_hit_Variable_3) == 0x0002D4, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::Temp_bool_True_if_break_was_hit_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, CallFunc_Not_PreBool_ReturnValue_3) == 0x0002D5, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, Temp_text_Variable) == 0x0002D8, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, CallFunc_Array_Length_ReturnValue_2) == 0x0002F0, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, CallFunc_FindSubstring_ReturnValue_2) == 0x0002F4, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::CallFunc_FindSubstring_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, CallFunc_GreaterEqual_IntInt_ReturnValue_2) == 0x0002F8, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::CallFunc_GreaterEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, Temp_bool_True_if_break_was_hit_Variable_4) == 0x0002F9, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::Temp_bool_True_if_break_was_hit_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, CallFunc_Not_PreBool_ReturnValue_4) == 0x0002FA, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, CallFunc_PrivateCalcTransform_Transform) == 0x000300, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::CallFunc_PrivateCalcTransform_Transform' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, Temp_int_Loop_Counter_Variable_3) == 0x000330, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, CallFunc_K2_SetActorTransform_SweepHitResult) == 0x000334, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::CallFunc_K2_SetActorTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, CallFunc_K2_SetActorTransform_ReturnValue) == 0x0003BC, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::CallFunc_K2_SetActorTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, CallFunc_Less_IntInt_ReturnValue_2) == 0x0003BD, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, CallFunc_Add_IntInt_ReturnValue_3) == 0x0003C0, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, CallFunc_BooleanAND_ReturnValue_2) == 0x0003C4, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, Temp_text_Variable_1) == 0x0003C8, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, CallFunc_GetRelativeTransform_ReturnValue) == 0x0003E0, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::CallFunc_GetRelativeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, CallFunc_BindingEventSheath_IsBinding) == 0x000410, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::CallFunc_BindingEventSheath_IsBinding' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, CallFunc_Array_Length_ReturnValue_3) == 0x000414, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, K2Node_DynamicCast_AsBPI_Brain_Crash) == 0x000418, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::K2Node_DynamicCast_AsBPI_Brain_Crash' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, K2Node_DynamicCast_bSuccess) == 0x000428, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, CallFunc_GetTransform_ReturnValue) == 0x000430, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, CallFunc_Array_Length_ReturnValue_4) == 0x000460, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, CallFunc_Array_Add_ReturnValue) == 0x000464, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, CallFunc_Array_Add_ReturnValue_1) == 0x000468, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, K2Node_MakeArray_Array_4) == 0x000470, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::K2Node_MakeArray_Array_4' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, CallFunc_BattleSequencerStart_self_CastInput) == 0x000480, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::CallFunc_BattleSequencerStart_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, CallFunc_BattleSequencerStart_ReturnValue) == 0x000490, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::CallFunc_BattleSequencerStart_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, K2Node_MakeArray_Array_5) == 0x000498, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::K2Node_MakeArray_Array_5' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, CallFunc_GetSequenceObjectBindingIDList_OutBindingIDList) == 0x0004A8, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::CallFunc_GetSequenceObjectBindingIDList_OutBindingIDList' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, CallFunc_GetSequenceObjectBindingIDList_IsFind) == 0x0004B8, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::CallFunc_GetSequenceObjectBindingIDList_IsFind' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, K2Node_MakeArray_Array_6) == 0x0004C0, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::K2Node_MakeArray_Array_6' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, CallFunc_Array_Length_ReturnValue_5) == 0x0004D0, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, K2Node_MakeArray_Array_7) == 0x0004D8, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::K2Node_MakeArray_Array_7' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, Temp_int_Loop_Num_Variable_4) == 0x0004E8, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::Temp_int_Loop_Num_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, CallFunc_GetSequenceObjectBindingIDList_OutBindingIDList_1) == 0x0004F0, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::CallFunc_GetSequenceObjectBindingIDList_OutBindingIDList_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, CallFunc_GetSequenceObjectBindingIDList_IsFind_1) == 0x000500, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::CallFunc_GetSequenceObjectBindingIDList_IsFind_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, CallFunc_Array_Length_ReturnValue_6) == 0x000504, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::CallFunc_Array_Length_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, Temp_int_Loop_Counter_Variable_4) == 0x000508, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::Temp_int_Loop_Counter_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, CallFunc_Less_IntInt_ReturnValue_3) == 0x00050C, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, CallFunc_Add_IntInt_ReturnValue_4) == 0x000510, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, CallFunc_BooleanAND_ReturnValue_3) == 0x000514, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, CallFunc_BindingEventPlayer_IsBinding) == 0x000515, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::CallFunc_BindingEventPlayer_IsBinding' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, CallFunc_BindingEventPlayer_IsBindingPlayer) == 0x000516, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::CallFunc_BindingEventPlayer_IsBindingPlayer' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, CallFunc_BindingEventPlayer_IsBindingSASCode) == 0x000517, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::CallFunc_BindingEventPlayer_IsBindingSASCode' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, CallFunc_BindingEventPlayer_IsBindingBrainCode) == 0x000518, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::CallFunc_BindingEventPlayer_IsBindingBrainCode' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, CallFunc_BindingEventPlayer_IsBindingWeapon) == 0x000520, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::CallFunc_BindingEventPlayer_IsBindingWeapon' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, CallFunc_MakeTransform_ReturnValue) == 0x000530, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, CallFunc_K2_SetActorTransform_SweepHitResult_1) == 0x000560, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::CallFunc_K2_SetActorTransform_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, CallFunc_K2_SetActorTransform_ReturnValue_1) == 0x0005E8, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::CallFunc_K2_SetActorTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, CallFunc_GetRelativeTransform_ReturnValue_1) == 0x0005F0, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::CallFunc_GetRelativeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, CallFunc_MakeTransform_ReturnValue_1) == 0x000620, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, CallFunc_K2_SetActorTransform_SweepHitResult_2) == 0x000650, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::CallFunc_K2_SetActorTransform_SweepHitResult_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, CallFunc_K2_SetActorTransform_ReturnValue_2) == 0x0006D8, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::CallFunc_K2_SetActorTransform_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, CallFunc_MakeTransform_ReturnValue_2) == 0x0006E0, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::CallFunc_MakeTransform_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, CallFunc_MakeTransform_ReturnValue_3) == 0x000710, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::CallFunc_MakeTransform_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, CallFunc_K2_SetActorTransform_SweepHitResult_3) == 0x000740, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::CallFunc_K2_SetActorTransform_SweepHitResult_3' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, CallFunc_K2_SetActorTransform_ReturnValue_3) == 0x0007C8, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::CallFunc_K2_SetActorTransform_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, CallFunc_K2_SetActorTransform_SweepHitResult_4) == 0x0007CC, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::CallFunc_K2_SetActorTransform_SweepHitResult_4' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, CallFunc_K2_SetActorTransform_ReturnValue_4) == 0x000854, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::CallFunc_K2_SetActorTransform_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, Temp_bool_True_if_break_was_hit_Variable_5) == 0x000855, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::Temp_bool_True_if_break_was_hit_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, Temp_int_Loop_Num_Variable_5) == 0x000858, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::Temp_int_Loop_Num_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, CallFunc_Not_PreBool_ReturnValue_5) == 0x00085C, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::CallFunc_Not_PreBool_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, Temp_int_Loop_Num_Variable_6) == 0x000860, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::Temp_int_Loop_Num_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, K2Node_MakeArray_Array_8) == 0x000868, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::K2Node_MakeArray_Array_8' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, CallFunc_Less_IntInt_ReturnValue_4) == 0x000878, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, CallFunc_BooleanAND_ReturnValue_4) == 0x000879, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, Temp_int_Array_Index_Variable_5) == 0x00087C, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::Temp_int_Array_Index_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, K2Node_MakeArray_Array_9) == 0x000880, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::K2Node_MakeArray_Array_9' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, CallFunc_K2_SetActorTransform_SweepHitResult_5) == 0x000890, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::CallFunc_K2_SetActorTransform_SweepHitResult_5' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, CallFunc_K2_SetActorTransform_ReturnValue_5) == 0x000918, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::CallFunc_K2_SetActorTransform_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, Temp_int_Loop_Counter_Variable_5) == 0x00091C, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::Temp_int_Loop_Counter_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, CallFunc_PrivateCalcUniqueCrashStartTransform_Transform) == 0x000920, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::CallFunc_PrivateCalcUniqueCrashStartTransform_Transform' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, CallFunc_Less_IntInt_ReturnValue_5) == 0x000950, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::CallFunc_Less_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, CallFunc_Add_IntInt_ReturnValue_5) == 0x000954, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, CallFunc_BooleanAND_ReturnValue_5) == 0x000958, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, Temp_int_Array_Index_Variable_6) == 0x00095C, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::Temp_int_Array_Index_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, K2Node_MakeArray_Array_10) == 0x000960, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::K2Node_MakeArray_Array_10' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, CallFunc_Format_ReturnValue) == 0x000970, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, CallFunc_PrivateCalcTransform_Transform_1) == 0x000990, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::CallFunc_PrivateCalcTransform_Transform_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, CallFunc_K2_SetActorTransform_SweepHitResult_6) == 0x0009C0, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::CallFunc_K2_SetActorTransform_SweepHitResult_6' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, CallFunc_K2_SetActorTransform_ReturnValue_6) == 0x000A48, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::CallFunc_K2_SetActorTransform_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, K2Node_MakeArray_Array_11) == 0x000A50, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::K2Node_MakeArray_Array_11' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, K2Node_MakeArray_Array_12) == 0x000A60, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::K2Node_MakeArray_Array_12' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, K2Node_MakeArray_Array_13) == 0x000A70, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::K2Node_MakeArray_Array_13' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, CallFunc_GetTransform_ReturnValue_1) == 0x000A80, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::CallFunc_GetTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, K2Node_MakeArray_Array_14) == 0x000AB0, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::K2Node_MakeArray_Array_14' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, K2Node_MakeArray_Array_15) == 0x000AC0, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::K2Node_MakeArray_Array_15' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, CallFunc_Format_ReturnValue_1) == 0x000AD0, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, K2Node_MakeArray_Array_16) == 0x000AE8, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::K2Node_MakeArray_Array_16' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, CallFunc_Format_ReturnValue_2) == 0x000AF8, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::CallFunc_Format_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, CallFunc_IsValid_ReturnValue_1) == 0x000B10, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, Temp_int_Loop_Counter_Variable_6) == 0x000B14, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::Temp_int_Loop_Counter_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, K2Node_DynamicCast_AsBPI_Enemy_Interface) == 0x000B18, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::K2Node_DynamicCast_AsBPI_Enemy_Interface' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, K2Node_DynamicCast_bSuccess_1) == 0x000B28, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, CallFunc_Less_IntInt_ReturnValue_6) == 0x000B29, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::CallFunc_Less_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, CallFunc_GetBrainCore_CoreObject) == 0x000B30, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::CallFunc_GetBrainCore_CoreObject' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, CallFunc_Add_IntInt_ReturnValue_6) == 0x000B38, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, K2Node_MakeArray_Array_17) == 0x000B40, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::K2Node_MakeArray_Array_17' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, CallFunc_GetSocketTransform_ReturnValue) == 0x000B50, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, K2Node_MakeArray_Array_18) == 0x000B80, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::K2Node_MakeArray_Array_18' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, Temp_bool_Variable) == 0x000B90, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, CallFunc_BattleSequencerStart_self_CastInput_1) == 0x000B98, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::CallFunc_BattleSequencerStart_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, CallFunc_BattleSequencerStart_ReturnValue_1) == 0x000BA8, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::CallFunc_BattleSequencerStart_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, K2Node_Select_Default) == 0x000BB0, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, CallFunc_IsValid_ReturnValue_2) == 0x000BC8, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, K2Node_MakeArray_Array_19) == 0x000BD0, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::K2Node_MakeArray_Array_19' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, CallFunc_GetSequenceObjectBindingIDList_OutBindingIDList_2) == 0x000BE0, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::CallFunc_GetSequenceObjectBindingIDList_OutBindingIDList_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, CallFunc_GetSequenceObjectBindingIDList_IsFind_2) == 0x000BF0, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::CallFunc_GetSequenceObjectBindingIDList_IsFind_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSequencerBindingUnique, CallFunc_Array_Length_ReturnValue_7) == 0x000BF4, "Member 'BP_BrainCrashManager_C_PrivateSequencerBindingUnique::CallFunc_Array_Length_ReturnValue_7' has a wrong offset!");

// Function BP_BrainCrashManager.BP_BrainCrashManager_C.PrintWarning
// 0x02B8 (0x02B8 - 0x0000)
struct BP_BrainCrashManager_C_PrintWarning final
{
public:
	class FText                                   Message;                                           // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          NoSequence;                                        // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D63[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   TypeText;                                          // 0x0020(0x0018)(Edit, BlueprintVisible)
	class ARSLevelSequenceActor*                  CallFunc_GetCurrentSequencer_Sequencer;            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSLevelSequenceActor*                  CallFunc_GetCurrentSequencer_Sequencer_1;          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequence*                         CallFunc_GetSequence_ReturnValue;                  // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequence*                         CallFunc_GetSequence_ReturnValue_1;                // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D64[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0070(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0088(0x0040)(HasGetValueTypeHash)
	class ARSLevelSequenceActor*                  CallFunc_GetCurrentSequencer_Sequencer_2;          // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D65[0x7];                                     // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00D8(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0118(0x0010)(ReferenceParm, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0128(0x0040)(HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0168(0x0018)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0180(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0190(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x01A8(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x01E8(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x01F8(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_4;            // 0x0210(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_5;            // 0x0250(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_3;                          // 0x0290(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue_3;                     // 0x02A0(0x0018)()
};
static_assert(alignof(BP_BrainCrashManager_C_PrintWarning) == 0x000008, "Wrong alignment on BP_BrainCrashManager_C_PrintWarning");
static_assert(sizeof(BP_BrainCrashManager_C_PrintWarning) == 0x0002B8, "Wrong size on BP_BrainCrashManager_C_PrintWarning");
static_assert(offsetof(BP_BrainCrashManager_C_PrintWarning, Message) == 0x000000, "Member 'BP_BrainCrashManager_C_PrintWarning::Message' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrintWarning, NoSequence) == 0x000018, "Member 'BP_BrainCrashManager_C_PrintWarning::NoSequence' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrintWarning, TypeText) == 0x000020, "Member 'BP_BrainCrashManager_C_PrintWarning::TypeText' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrintWarning, CallFunc_GetCurrentSequencer_Sequencer) == 0x000038, "Member 'BP_BrainCrashManager_C_PrintWarning::CallFunc_GetCurrentSequencer_Sequencer' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrintWarning, CallFunc_GetCurrentSequencer_Sequencer_1) == 0x000040, "Member 'BP_BrainCrashManager_C_PrintWarning::CallFunc_GetCurrentSequencer_Sequencer_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrintWarning, CallFunc_GetSequence_ReturnValue) == 0x000048, "Member 'BP_BrainCrashManager_C_PrintWarning::CallFunc_GetSequence_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrintWarning, CallFunc_GetSequence_ReturnValue_1) == 0x000050, "Member 'BP_BrainCrashManager_C_PrintWarning::CallFunc_GetSequence_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrintWarning, CallFunc_GetDisplayName_ReturnValue) == 0x000058, "Member 'BP_BrainCrashManager_C_PrintWarning::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrintWarning, CallFunc_IsValid_ReturnValue) == 0x000068, "Member 'BP_BrainCrashManager_C_PrintWarning::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrintWarning, CallFunc_Conv_StringToText_ReturnValue) == 0x000070, "Member 'BP_BrainCrashManager_C_PrintWarning::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrintWarning, K2Node_MakeStruct_FormatArgumentData) == 0x000088, "Member 'BP_BrainCrashManager_C_PrintWarning::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrintWarning, CallFunc_GetCurrentSequencer_Sequencer_2) == 0x0000C8, "Member 'BP_BrainCrashManager_C_PrintWarning::CallFunc_GetCurrentSequencer_Sequencer_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrintWarning, CallFunc_IsValid_ReturnValue_1) == 0x0000D0, "Member 'BP_BrainCrashManager_C_PrintWarning::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrintWarning, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000D8, "Member 'BP_BrainCrashManager_C_PrintWarning::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrintWarning, K2Node_MakeArray_Array) == 0x000118, "Member 'BP_BrainCrashManager_C_PrintWarning::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrintWarning, K2Node_MakeStruct_FormatArgumentData_2) == 0x000128, "Member 'BP_BrainCrashManager_C_PrintWarning::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrintWarning, CallFunc_Format_ReturnValue) == 0x000168, "Member 'BP_BrainCrashManager_C_PrintWarning::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrintWarning, K2Node_MakeArray_Array_1) == 0x000180, "Member 'BP_BrainCrashManager_C_PrintWarning::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrintWarning, CallFunc_Format_ReturnValue_1) == 0x000190, "Member 'BP_BrainCrashManager_C_PrintWarning::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrintWarning, K2Node_MakeStruct_FormatArgumentData_3) == 0x0001A8, "Member 'BP_BrainCrashManager_C_PrintWarning::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrintWarning, K2Node_MakeArray_Array_2) == 0x0001E8, "Member 'BP_BrainCrashManager_C_PrintWarning::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrintWarning, CallFunc_Format_ReturnValue_2) == 0x0001F8, "Member 'BP_BrainCrashManager_C_PrintWarning::CallFunc_Format_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrintWarning, K2Node_MakeStruct_FormatArgumentData_4) == 0x000210, "Member 'BP_BrainCrashManager_C_PrintWarning::K2Node_MakeStruct_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrintWarning, K2Node_MakeStruct_FormatArgumentData_5) == 0x000250, "Member 'BP_BrainCrashManager_C_PrintWarning::K2Node_MakeStruct_FormatArgumentData_5' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrintWarning, K2Node_MakeArray_Array_3) == 0x000290, "Member 'BP_BrainCrashManager_C_PrintWarning::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrintWarning, CallFunc_Format_ReturnValue_3) == 0x0002A0, "Member 'BP_BrainCrashManager_C_PrintWarning::CallFunc_Format_ReturnValue_3' has a wrong offset!");

// Function BP_BrainCrashManager.BP_BrainCrashManager_C.PrivateSetupTypeSequencer
// 0x0290 (0x0290 - 0x0000)
struct BP_BrainCrashManager_C_PrivateSetupTypeSequencer final
{
public:
	class ARSCharacterBase*                       MainPlayer;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsCrashVisionFlow;                                 // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Once;                                              // 0x0009(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D66[0x6];                                     // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelSequence*                         ENPCSequencer;                                     // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_EnemyManager_C*                     EnemyManager;                                      // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CheckUniqueSafePoint;                              // 0x0020(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ValidUnique;                                       // 0x0021(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D67[0x6];                                     // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSLevelSequenceActor*                  CallFunc_GetCurrentSequencer_Sequencer;            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSLevelSequenceActor*                  CallFunc_GetCurrentSequencer_Sequencer_1;          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSLevelSequenceActor*                  CallFunc_GetCurrentSequencer_Sequencer_2;          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D68[0x6];                                     // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IPlayerInterface>      K2Node_DynamicCast_AsPlayer_Interface;             // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerID                                     CallFunc_GetPlayerID_ReturnValue;                  // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerID                                     Temp_byte_Variable;                                // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D69[0x5];                                     // 0x005B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IPlayerInterface>      K2Node_DynamicCast_AsPlayer_Interface_1;           // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerID                                     CallFunc_GetPlayerID_ReturnValue_1;                // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0073(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0076(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0077(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D6A[0x2];                                     // 0x007A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetName_ReturnValue;                      // 0x007C(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLastBrainCrash_IsLast;                  // 0x0085(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0086(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D6B[0x1];                                     // 0x0087(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetEnemyBossList_ReturnValue;             // 0x0088(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_CV_IsExistNextCrashVision_IsExistNextCrashVision; // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_5;                // 0x009B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D6C[0x7];                                     // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerInterface_C> K2Node_DynamicCast_AsBPI_Player_Interface;         // 0x00A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnemyPlayer_bEnemyPlayer;               // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D6D[0x1];                                     // 0x00BB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckUniqueBrainCrash_IsBoss;             // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckUniqueBrainCrash_IsGeneral;          // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckUniqueBrainCrash_RequestJudgmentUniqueCoolTime; // 0x00C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckUniqueBrainCrash_RequestJudgmentSearchSafePoint; // 0x00C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D6E[0x3];                                     // 0x00C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ARSCharacterBase*>               CallFunc_GetBrainCrashTarget_TargetsList;          // 0x00C8(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckUseCutin_ReturnValue;                // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D6F[0x6];                                     // 0x00DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00E0(0x0030)(IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_EnemyInterface_C> K2Node_DynamicCast_AsBPI_Enemy_Interface;          // 0x0110(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D70[0x7];                                     // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_Array_Get_Item;                           // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequence*                         CallFunc_GetBrainCrashSequence_Sequence;           // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattleCharacter_C*                   K2Node_DynamicCast_AsRSBattle_Character;           // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSoloENPCSequencer_bSolo;                // 0x0142(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0143(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0144(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D71[0x3];                                     // 0x0145(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelSequence*                         K2Node_Select_Default;                             // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequence*                         K2Node_Select_Default_1;                           // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D72[0x7];                                     // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0160(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0170(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0180(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0198(0x0018)()
	EPlayerID                                     Temp_byte_Variable_1;                              // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x01B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D73[0x2];                                     // 0x01B2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x01B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x01C0(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x01D0(0x0018)()
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D74[0x7];                                     // 0x01E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_3;                          // 0x01F0(0x0010)(ReferenceParm, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0200(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D75[0x4];                                     // 0x020C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue_3;                     // 0x0210(0x0018)()
	bool                                          CallFunc_SearchSafePoint_Valid;                    // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D76[0x7];                                     // 0x0229(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_SearchSafePoint_RootTransform;            // 0x0230(0x0030)(IsPlainOldData, NoDestructor)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_4;                          // 0x0260(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue_4;                     // 0x0270(0x0018)()
	class ABP_EnemyManager_C*                     CallFunc_GetEnemyManager_Manager;                  // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrainCrashManager_C_PrivateSetupTypeSequencer) == 0x000010, "Wrong alignment on BP_BrainCrashManager_C_PrivateSetupTypeSequencer");
static_assert(sizeof(BP_BrainCrashManager_C_PrivateSetupTypeSequencer) == 0x000290, "Wrong size on BP_BrainCrashManager_C_PrivateSetupTypeSequencer");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSetupTypeSequencer, MainPlayer) == 0x000000, "Member 'BP_BrainCrashManager_C_PrivateSetupTypeSequencer::MainPlayer' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSetupTypeSequencer, IsCrashVisionFlow) == 0x000008, "Member 'BP_BrainCrashManager_C_PrivateSetupTypeSequencer::IsCrashVisionFlow' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSetupTypeSequencer, Once) == 0x000009, "Member 'BP_BrainCrashManager_C_PrivateSetupTypeSequencer::Once' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSetupTypeSequencer, ENPCSequencer) == 0x000010, "Member 'BP_BrainCrashManager_C_PrivateSetupTypeSequencer::ENPCSequencer' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSetupTypeSequencer, EnemyManager) == 0x000018, "Member 'BP_BrainCrashManager_C_PrivateSetupTypeSequencer::EnemyManager' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSetupTypeSequencer, CheckUniqueSafePoint) == 0x000020, "Member 'BP_BrainCrashManager_C_PrivateSetupTypeSequencer::CheckUniqueSafePoint' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSetupTypeSequencer, ValidUnique) == 0x000021, "Member 'BP_BrainCrashManager_C_PrivateSetupTypeSequencer::ValidUnique' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSetupTypeSequencer, CallFunc_GetCurrentSequencer_Sequencer) == 0x000028, "Member 'BP_BrainCrashManager_C_PrivateSetupTypeSequencer::CallFunc_GetCurrentSequencer_Sequencer' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSetupTypeSequencer, CallFunc_GetCurrentSequencer_Sequencer_1) == 0x000030, "Member 'BP_BrainCrashManager_C_PrivateSetupTypeSequencer::CallFunc_GetCurrentSequencer_Sequencer_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSetupTypeSequencer, CallFunc_GetCurrentSequencer_Sequencer_2) == 0x000038, "Member 'BP_BrainCrashManager_C_PrivateSetupTypeSequencer::CallFunc_GetCurrentSequencer_Sequencer_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSetupTypeSequencer, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'BP_BrainCrashManager_C_PrivateSetupTypeSequencer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSetupTypeSequencer, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000041, "Member 'BP_BrainCrashManager_C_PrivateSetupTypeSequencer::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSetupTypeSequencer, K2Node_DynamicCast_AsPlayer_Interface) == 0x000048, "Member 'BP_BrainCrashManager_C_PrivateSetupTypeSequencer::K2Node_DynamicCast_AsPlayer_Interface' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSetupTypeSequencer, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'BP_BrainCrashManager_C_PrivateSetupTypeSequencer::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSetupTypeSequencer, CallFunc_GetPlayerID_ReturnValue) == 0x000059, "Member 'BP_BrainCrashManager_C_PrivateSetupTypeSequencer::CallFunc_GetPlayerID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSetupTypeSequencer, Temp_byte_Variable) == 0x00005A, "Member 'BP_BrainCrashManager_C_PrivateSetupTypeSequencer::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSetupTypeSequencer, K2Node_DynamicCast_AsPlayer_Interface_1) == 0x000060, "Member 'BP_BrainCrashManager_C_PrivateSetupTypeSequencer::K2Node_DynamicCast_AsPlayer_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSetupTypeSequencer, K2Node_DynamicCast_bSuccess_1) == 0x000070, "Member 'BP_BrainCrashManager_C_PrivateSetupTypeSequencer::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSetupTypeSequencer, CallFunc_IsValid_ReturnValue_1) == 0x000071, "Member 'BP_BrainCrashManager_C_PrivateSetupTypeSequencer::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSetupTypeSequencer, CallFunc_GetPlayerID_ReturnValue_1) == 0x000072, "Member 'BP_BrainCrashManager_C_PrivateSetupTypeSequencer::CallFunc_GetPlayerID_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSetupTypeSequencer, CallFunc_Not_PreBool_ReturnValue) == 0x000073, "Member 'BP_BrainCrashManager_C_PrivateSetupTypeSequencer::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSetupTypeSequencer, CallFunc_Not_PreBool_ReturnValue_1) == 0x000074, "Member 'BP_BrainCrashManager_C_PrivateSetupTypeSequencer::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSetupTypeSequencer, CallFunc_Not_PreBool_ReturnValue_2) == 0x000075, "Member 'BP_BrainCrashManager_C_PrivateSetupTypeSequencer::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSetupTypeSequencer, CallFunc_BooleanAND_ReturnValue) == 0x000076, "Member 'BP_BrainCrashManager_C_PrivateSetupTypeSequencer::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSetupTypeSequencer, CallFunc_BooleanAND_ReturnValue_1) == 0x000077, "Member 'BP_BrainCrashManager_C_PrivateSetupTypeSequencer::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSetupTypeSequencer, CallFunc_Not_PreBool_ReturnValue_3) == 0x000078, "Member 'BP_BrainCrashManager_C_PrivateSetupTypeSequencer::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSetupTypeSequencer, CallFunc_BooleanAND_ReturnValue_2) == 0x000079, "Member 'BP_BrainCrashManager_C_PrivateSetupTypeSequencer::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSetupTypeSequencer, CallFunc_GetName_ReturnValue) == 0x00007C, "Member 'BP_BrainCrashManager_C_PrivateSetupTypeSequencer::CallFunc_GetName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSetupTypeSequencer, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000084, "Member 'BP_BrainCrashManager_C_PrivateSetupTypeSequencer::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSetupTypeSequencer, CallFunc_IsLastBrainCrash_IsLast) == 0x000085, "Member 'BP_BrainCrashManager_C_PrivateSetupTypeSequencer::CallFunc_IsLastBrainCrash_IsLast' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSetupTypeSequencer, CallFunc_IsValid_ReturnValue_2) == 0x000086, "Member 'BP_BrainCrashManager_C_PrivateSetupTypeSequencer::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSetupTypeSequencer, CallFunc_GetEnemyBossList_ReturnValue) == 0x000088, "Member 'BP_BrainCrashManager_C_PrivateSetupTypeSequencer::CallFunc_GetEnemyBossList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSetupTypeSequencer, CallFunc_CV_IsExistNextCrashVision_IsExistNextCrashVision) == 0x000098, "Member 'BP_BrainCrashManager_C_PrivateSetupTypeSequencer::CallFunc_CV_IsExistNextCrashVision_IsExistNextCrashVision' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSetupTypeSequencer, CallFunc_Not_PreBool_ReturnValue_4) == 0x000099, "Member 'BP_BrainCrashManager_C_PrivateSetupTypeSequencer::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSetupTypeSequencer, CallFunc_BooleanAND_ReturnValue_3) == 0x00009A, "Member 'BP_BrainCrashManager_C_PrivateSetupTypeSequencer::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSetupTypeSequencer, CallFunc_Not_PreBool_ReturnValue_5) == 0x00009B, "Member 'BP_BrainCrashManager_C_PrivateSetupTypeSequencer::CallFunc_Not_PreBool_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSetupTypeSequencer, CallFunc_Array_Find_ReturnValue) == 0x00009C, "Member 'BP_BrainCrashManager_C_PrivateSetupTypeSequencer::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSetupTypeSequencer, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000A0, "Member 'BP_BrainCrashManager_C_PrivateSetupTypeSequencer::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSetupTypeSequencer, K2Node_DynamicCast_AsBPI_Player_Interface) == 0x0000A8, "Member 'BP_BrainCrashManager_C_PrivateSetupTypeSequencer::K2Node_DynamicCast_AsBPI_Player_Interface' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSetupTypeSequencer, K2Node_DynamicCast_bSuccess_2) == 0x0000B8, "Member 'BP_BrainCrashManager_C_PrivateSetupTypeSequencer::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSetupTypeSequencer, CallFunc_IsValid_ReturnValue_3) == 0x0000B9, "Member 'BP_BrainCrashManager_C_PrivateSetupTypeSequencer::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSetupTypeSequencer, CallFunc_IsEnemyPlayer_bEnemyPlayer) == 0x0000BA, "Member 'BP_BrainCrashManager_C_PrivateSetupTypeSequencer::CallFunc_IsEnemyPlayer_bEnemyPlayer' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSetupTypeSequencer, CallFunc_Array_Length_ReturnValue) == 0x0000BC, "Member 'BP_BrainCrashManager_C_PrivateSetupTypeSequencer::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSetupTypeSequencer, CallFunc_CheckUniqueBrainCrash_IsBoss) == 0x0000C0, "Member 'BP_BrainCrashManager_C_PrivateSetupTypeSequencer::CallFunc_CheckUniqueBrainCrash_IsBoss' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSetupTypeSequencer, CallFunc_CheckUniqueBrainCrash_IsGeneral) == 0x0000C1, "Member 'BP_BrainCrashManager_C_PrivateSetupTypeSequencer::CallFunc_CheckUniqueBrainCrash_IsGeneral' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSetupTypeSequencer, CallFunc_CheckUniqueBrainCrash_RequestJudgmentUniqueCoolTime) == 0x0000C2, "Member 'BP_BrainCrashManager_C_PrivateSetupTypeSequencer::CallFunc_CheckUniqueBrainCrash_RequestJudgmentUniqueCoolTime' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSetupTypeSequencer, CallFunc_CheckUniqueBrainCrash_RequestJudgmentSearchSafePoint) == 0x0000C3, "Member 'BP_BrainCrashManager_C_PrivateSetupTypeSequencer::CallFunc_CheckUniqueBrainCrash_RequestJudgmentSearchSafePoint' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSetupTypeSequencer, CallFunc_IsValid_ReturnValue_4) == 0x0000C4, "Member 'BP_BrainCrashManager_C_PrivateSetupTypeSequencer::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSetupTypeSequencer, CallFunc_GetBrainCrashTarget_TargetsList) == 0x0000C8, "Member 'BP_BrainCrashManager_C_PrivateSetupTypeSequencer::CallFunc_GetBrainCrashTarget_TargetsList' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSetupTypeSequencer, CallFunc_IsValid_ReturnValue_5) == 0x0000D8, "Member 'BP_BrainCrashManager_C_PrivateSetupTypeSequencer::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSetupTypeSequencer, CallFunc_CheckUseCutin_ReturnValue) == 0x0000D9, "Member 'BP_BrainCrashManager_C_PrivateSetupTypeSequencer::CallFunc_CheckUseCutin_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSetupTypeSequencer, CallFunc_MakeTransform_ReturnValue) == 0x0000E0, "Member 'BP_BrainCrashManager_C_PrivateSetupTypeSequencer::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSetupTypeSequencer, K2Node_DynamicCast_AsBPI_Enemy_Interface) == 0x000110, "Member 'BP_BrainCrashManager_C_PrivateSetupTypeSequencer::K2Node_DynamicCast_AsBPI_Enemy_Interface' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSetupTypeSequencer, K2Node_DynamicCast_bSuccess_3) == 0x000120, "Member 'BP_BrainCrashManager_C_PrivateSetupTypeSequencer::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSetupTypeSequencer, CallFunc_Array_Get_Item) == 0x000128, "Member 'BP_BrainCrashManager_C_PrivateSetupTypeSequencer::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSetupTypeSequencer, CallFunc_GetBrainCrashSequence_Sequence) == 0x000130, "Member 'BP_BrainCrashManager_C_PrivateSetupTypeSequencer::CallFunc_GetBrainCrashSequence_Sequence' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSetupTypeSequencer, K2Node_DynamicCast_AsRSBattle_Character) == 0x000138, "Member 'BP_BrainCrashManager_C_PrivateSetupTypeSequencer::K2Node_DynamicCast_AsRSBattle_Character' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSetupTypeSequencer, K2Node_DynamicCast_bSuccess_4) == 0x000140, "Member 'BP_BrainCrashManager_C_PrivateSetupTypeSequencer::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSetupTypeSequencer, CallFunc_IsValid_ReturnValue_6) == 0x000141, "Member 'BP_BrainCrashManager_C_PrivateSetupTypeSequencer::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSetupTypeSequencer, CallFunc_IsSoloENPCSequencer_bSolo) == 0x000142, "Member 'BP_BrainCrashManager_C_PrivateSetupTypeSequencer::CallFunc_IsSoloENPCSequencer_bSolo' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSetupTypeSequencer, Temp_bool_Variable) == 0x000143, "Member 'BP_BrainCrashManager_C_PrivateSetupTypeSequencer::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSetupTypeSequencer, Temp_bool_Variable_1) == 0x000144, "Member 'BP_BrainCrashManager_C_PrivateSetupTypeSequencer::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSetupTypeSequencer, K2Node_Select_Default) == 0x000148, "Member 'BP_BrainCrashManager_C_PrivateSetupTypeSequencer::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSetupTypeSequencer, K2Node_Select_Default_1) == 0x000150, "Member 'BP_BrainCrashManager_C_PrivateSetupTypeSequencer::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSetupTypeSequencer, CallFunc_IsValid_ReturnValue_7) == 0x000158, "Member 'BP_BrainCrashManager_C_PrivateSetupTypeSequencer::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSetupTypeSequencer, K2Node_MakeArray_Array) == 0x000160, "Member 'BP_BrainCrashManager_C_PrivateSetupTypeSequencer::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSetupTypeSequencer, K2Node_MakeArray_Array_1) == 0x000170, "Member 'BP_BrainCrashManager_C_PrivateSetupTypeSequencer::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSetupTypeSequencer, CallFunc_Format_ReturnValue) == 0x000180, "Member 'BP_BrainCrashManager_C_PrivateSetupTypeSequencer::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSetupTypeSequencer, CallFunc_Format_ReturnValue_1) == 0x000198, "Member 'BP_BrainCrashManager_C_PrivateSetupTypeSequencer::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSetupTypeSequencer, Temp_byte_Variable_1) == 0x0001B0, "Member 'BP_BrainCrashManager_C_PrivateSetupTypeSequencer::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSetupTypeSequencer, CallFunc_BooleanAND_ReturnValue_4) == 0x0001B1, "Member 'BP_BrainCrashManager_C_PrivateSetupTypeSequencer::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSetupTypeSequencer, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0001B4, "Member 'BP_BrainCrashManager_C_PrivateSetupTypeSequencer::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSetupTypeSequencer, K2Node_MakeArray_Array_2) == 0x0001C0, "Member 'BP_BrainCrashManager_C_PrivateSetupTypeSequencer::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSetupTypeSequencer, CallFunc_Format_ReturnValue_2) == 0x0001D0, "Member 'BP_BrainCrashManager_C_PrivateSetupTypeSequencer::CallFunc_Format_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSetupTypeSequencer, CallFunc_BooleanAND_ReturnValue_5) == 0x0001E8, "Member 'BP_BrainCrashManager_C_PrivateSetupTypeSequencer::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSetupTypeSequencer, K2Node_MakeArray_Array_3) == 0x0001F0, "Member 'BP_BrainCrashManager_C_PrivateSetupTypeSequencer::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSetupTypeSequencer, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000200, "Member 'BP_BrainCrashManager_C_PrivateSetupTypeSequencer::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSetupTypeSequencer, CallFunc_Format_ReturnValue_3) == 0x000210, "Member 'BP_BrainCrashManager_C_PrivateSetupTypeSequencer::CallFunc_Format_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSetupTypeSequencer, CallFunc_SearchSafePoint_Valid) == 0x000228, "Member 'BP_BrainCrashManager_C_PrivateSetupTypeSequencer::CallFunc_SearchSafePoint_Valid' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSetupTypeSequencer, CallFunc_SearchSafePoint_RootTransform) == 0x000230, "Member 'BP_BrainCrashManager_C_PrivateSetupTypeSequencer::CallFunc_SearchSafePoint_RootTransform' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSetupTypeSequencer, K2Node_MakeArray_Array_4) == 0x000260, "Member 'BP_BrainCrashManager_C_PrivateSetupTypeSequencer::K2Node_MakeArray_Array_4' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSetupTypeSequencer, CallFunc_Format_ReturnValue_4) == 0x000270, "Member 'BP_BrainCrashManager_C_PrivateSetupTypeSequencer::CallFunc_Format_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSetupTypeSequencer, CallFunc_GetEnemyManager_Manager) == 0x000288, "Member 'BP_BrainCrashManager_C_PrivateSetupTypeSequencer::CallFunc_GetEnemyManager_Manager' has a wrong offset!");

// Function BP_BrainCrashManager.BP_BrainCrashManager_C.PrivateGeneralDamageSetup
// 0x0080 (0x0080 - 0x0000)
struct BP_BrainCrashManager_C_PrivateGeneralDamageSetup final
{
public:
	float                                         TimeDilation;                                      // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D77[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattleCharacter_C*                   Enemy;                                             // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TimeSecondsInterval;                               // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameSystemManager_C*                CallFunc_GetGameSystemManager_Manager;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D78[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurrentCustomTimeDilation_CustomTimeDilation; // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D79[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_EnemyManager_C*                     CallFunc_GetEnemyManager_Manager;                  // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D7A[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue;                         // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D7B[0x3];                                     // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D7C[0x3];                                     // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D7D[0x3];                                     // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattleCharacter_C*                   K2Node_DynamicCast_AsRSBattle_Character;           // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BrainCrashManager_C_PrivateGeneralDamageSetup) == 0x000008, "Wrong alignment on BP_BrainCrashManager_C_PrivateGeneralDamageSetup");
static_assert(sizeof(BP_BrainCrashManager_C_PrivateGeneralDamageSetup) == 0x000080, "Wrong size on BP_BrainCrashManager_C_PrivateGeneralDamageSetup");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateGeneralDamageSetup, TimeDilation) == 0x000000, "Member 'BP_BrainCrashManager_C_PrivateGeneralDamageSetup::TimeDilation' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateGeneralDamageSetup, Enemy) == 0x000008, "Member 'BP_BrainCrashManager_C_PrivateGeneralDamageSetup::Enemy' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateGeneralDamageSetup, TimeSecondsInterval) == 0x000010, "Member 'BP_BrainCrashManager_C_PrivateGeneralDamageSetup::TimeSecondsInterval' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateGeneralDamageSetup, Temp_int_Array_Index_Variable) == 0x000014, "Member 'BP_BrainCrashManager_C_PrivateGeneralDamageSetup::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateGeneralDamageSetup, CallFunc_GetGameSystemManager_Manager) == 0x000018, "Member 'BP_BrainCrashManager_C_PrivateGeneralDamageSetup::CallFunc_GetGameSystemManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateGeneralDamageSetup, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_BrainCrashManager_C_PrivateGeneralDamageSetup::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateGeneralDamageSetup, CallFunc_GetCurrentCustomTimeDilation_CustomTimeDilation) == 0x000024, "Member 'BP_BrainCrashManager_C_PrivateGeneralDamageSetup::CallFunc_GetCurrentCustomTimeDilation_CustomTimeDilation' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateGeneralDamageSetup, Temp_int_Loop_Num_Variable) == 0x000028, "Member 'BP_BrainCrashManager_C_PrivateGeneralDamageSetup::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateGeneralDamageSetup, CallFunc_GetEnemyManager_Manager) == 0x000030, "Member 'BP_BrainCrashManager_C_PrivateGeneralDamageSetup::CallFunc_GetEnemyManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateGeneralDamageSetup, CallFunc_IsValid_ReturnValue_1) == 0x000038, "Member 'BP_BrainCrashManager_C_PrivateGeneralDamageSetup::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateGeneralDamageSetup, CallFunc_Multiply_IntFloat_ReturnValue) == 0x00003C, "Member 'BP_BrainCrashManager_C_PrivateGeneralDamageSetup::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateGeneralDamageSetup, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000040, "Member 'BP_BrainCrashManager_C_PrivateGeneralDamageSetup::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateGeneralDamageSetup, CallFunc_FMin_ReturnValue) == 0x000044, "Member 'BP_BrainCrashManager_C_PrivateGeneralDamageSetup::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateGeneralDamageSetup, Temp_int_Loop_Counter_Variable) == 0x000048, "Member 'BP_BrainCrashManager_C_PrivateGeneralDamageSetup::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateGeneralDamageSetup, CallFunc_Less_IntInt_ReturnValue) == 0x00004C, "Member 'BP_BrainCrashManager_C_PrivateGeneralDamageSetup::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateGeneralDamageSetup, CallFunc_Add_IntInt_ReturnValue) == 0x000050, "Member 'BP_BrainCrashManager_C_PrivateGeneralDamageSetup::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateGeneralDamageSetup, CallFunc_Array_Length_ReturnValue) == 0x000054, "Member 'BP_BrainCrashManager_C_PrivateGeneralDamageSetup::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateGeneralDamageSetup, CallFunc_Array_Length_ReturnValue_1) == 0x000058, "Member 'BP_BrainCrashManager_C_PrivateGeneralDamageSetup::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateGeneralDamageSetup, CallFunc_Greater_IntInt_ReturnValue) == 0x00005C, "Member 'BP_BrainCrashManager_C_PrivateGeneralDamageSetup::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateGeneralDamageSetup, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000060, "Member 'BP_BrainCrashManager_C_PrivateGeneralDamageSetup::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateGeneralDamageSetup, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000064, "Member 'BP_BrainCrashManager_C_PrivateGeneralDamageSetup::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateGeneralDamageSetup, CallFunc_IsValid_ReturnValue_2) == 0x000068, "Member 'BP_BrainCrashManager_C_PrivateGeneralDamageSetup::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateGeneralDamageSetup, CallFunc_Array_Length_ReturnValue_2) == 0x00006C, "Member 'BP_BrainCrashManager_C_PrivateGeneralDamageSetup::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateGeneralDamageSetup, K2Node_DynamicCast_AsRSBattle_Character) == 0x000070, "Member 'BP_BrainCrashManager_C_PrivateGeneralDamageSetup::K2Node_DynamicCast_AsRSBattle_Character' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateGeneralDamageSetup, K2Node_DynamicCast_bSuccess) == 0x000078, "Member 'BP_BrainCrashManager_C_PrivateGeneralDamageSetup::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_BrainCrashManager.BP_BrainCrashManager_C.PrivateUpdateGeneralDamage
// 0x0048 (0x0048 - 0x0000)
struct BP_BrainCrashManager_C_PrivateUpdateGeneralDamage final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSLevelSequenceActor*                  CallFunc_GetCurrentSequencer_Sequencer;            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D7E[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D7F[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D80[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattleEnemy_C*                       K2Node_DynamicCast_AsRSBattle_Enemy;               // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsOver_ReturnValue;                       // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPause_ReturnValue;                      // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D81[0x3];                                     // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrainCrashManager_C_PrivateUpdateGeneralDamage) == 0x000008, "Wrong alignment on BP_BrainCrashManager_C_PrivateUpdateGeneralDamage");
static_assert(sizeof(BP_BrainCrashManager_C_PrivateUpdateGeneralDamage) == 0x000048, "Wrong size on BP_BrainCrashManager_C_PrivateUpdateGeneralDamage");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateGeneralDamage, DeltaSeconds) == 0x000000, "Member 'BP_BrainCrashManager_C_PrivateUpdateGeneralDamage::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateGeneralDamage, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_BrainCrashManager_C_PrivateUpdateGeneralDamage::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateGeneralDamage, CallFunc_GetCurrentSequencer_Sequencer) == 0x000008, "Member 'BP_BrainCrashManager_C_PrivateUpdateGeneralDamage::CallFunc_GetCurrentSequencer_Sequencer' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateGeneralDamage, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_BrainCrashManager_C_PrivateUpdateGeneralDamage::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateGeneralDamage, CallFunc_IsValid_ReturnValue) == 0x000014, "Member 'BP_BrainCrashManager_C_PrivateUpdateGeneralDamage::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateGeneralDamage, Temp_int_Loop_Num_Variable) == 0x000018, "Member 'BP_BrainCrashManager_C_PrivateUpdateGeneralDamage::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateGeneralDamage, CallFunc_Less_IntInt_ReturnValue) == 0x00001C, "Member 'BP_BrainCrashManager_C_PrivateUpdateGeneralDamage::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateGeneralDamage, Temp_int_Array_Index_Variable) == 0x000020, "Member 'BP_BrainCrashManager_C_PrivateUpdateGeneralDamage::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateGeneralDamage, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_BrainCrashManager_C_PrivateUpdateGeneralDamage::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateGeneralDamage, K2Node_DynamicCast_AsRSBattle_Enemy) == 0x000030, "Member 'BP_BrainCrashManager_C_PrivateUpdateGeneralDamage::K2Node_DynamicCast_AsRSBattle_Enemy' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateGeneralDamage, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_BrainCrashManager_C_PrivateUpdateGeneralDamage::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateGeneralDamage, CallFunc_IsValid_ReturnValue_1) == 0x000039, "Member 'BP_BrainCrashManager_C_PrivateUpdateGeneralDamage::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateGeneralDamage, CallFunc_Array_IsValidIndex_ReturnValue) == 0x00003A, "Member 'BP_BrainCrashManager_C_PrivateUpdateGeneralDamage::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateGeneralDamage, CallFunc_IsOver_ReturnValue) == 0x00003B, "Member 'BP_BrainCrashManager_C_PrivateUpdateGeneralDamage::CallFunc_IsOver_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateGeneralDamage, CallFunc_IsPause_ReturnValue) == 0x00003C, "Member 'BP_BrainCrashManager_C_PrivateUpdateGeneralDamage::CallFunc_IsPause_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateGeneralDamage, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'BP_BrainCrashManager_C_PrivateUpdateGeneralDamage::CallFunc_Array_Length_ReturnValue' has a wrong offset!");

// Function BP_BrainCrashManager.BP_BrainCrashManager_C.GetPlayerStartTransform
// 0x00F0 (0x00F0 - 0x0000)
struct BP_BrainCrashManager_C_GetPlayerStartTransform final
{
public:
	bool                                          AddMeshRelative;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D82[0xF];                                     // 0x0001(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Transform;                                         // 0x0010(0x0030)(Parm, OutParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x007C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D83[0x4];                                     // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00C0(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BrainCrashManager_C_GetPlayerStartTransform) == 0x000010, "Wrong alignment on BP_BrainCrashManager_C_GetPlayerStartTransform");
static_assert(sizeof(BP_BrainCrashManager_C_GetPlayerStartTransform) == 0x0000F0, "Wrong size on BP_BrainCrashManager_C_GetPlayerStartTransform");
static_assert(offsetof(BP_BrainCrashManager_C_GetPlayerStartTransform, AddMeshRelative) == 0x000000, "Member 'BP_BrainCrashManager_C_GetPlayerStartTransform::AddMeshRelative' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_GetPlayerStartTransform, Transform) == 0x000010, "Member 'BP_BrainCrashManager_C_GetPlayerStartTransform::Transform' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_GetPlayerStartTransform, CallFunc_BreakTransform_Location) == 0x000040, "Member 'BP_BrainCrashManager_C_GetPlayerStartTransform::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_GetPlayerStartTransform, CallFunc_BreakTransform_Rotation) == 0x00004C, "Member 'BP_BrainCrashManager_C_GetPlayerStartTransform::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_GetPlayerStartTransform, CallFunc_BreakTransform_Scale) == 0x000058, "Member 'BP_BrainCrashManager_C_GetPlayerStartTransform::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_GetPlayerStartTransform, CallFunc_BreakRotator_Roll) == 0x000064, "Member 'BP_BrainCrashManager_C_GetPlayerStartTransform::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_GetPlayerStartTransform, CallFunc_BreakRotator_Pitch) == 0x000068, "Member 'BP_BrainCrashManager_C_GetPlayerStartTransform::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_GetPlayerStartTransform, CallFunc_BreakRotator_Yaw) == 0x00006C, "Member 'BP_BrainCrashManager_C_GetPlayerStartTransform::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_GetPlayerStartTransform, CallFunc_BreakTransform_Location_1) == 0x000070, "Member 'BP_BrainCrashManager_C_GetPlayerStartTransform::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_GetPlayerStartTransform, CallFunc_BreakTransform_Rotation_1) == 0x00007C, "Member 'BP_BrainCrashManager_C_GetPlayerStartTransform::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_GetPlayerStartTransform, CallFunc_BreakTransform_Scale_1) == 0x000088, "Member 'BP_BrainCrashManager_C_GetPlayerStartTransform::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_GetPlayerStartTransform, CallFunc_BreakRotator_Roll_1) == 0x000094, "Member 'BP_BrainCrashManager_C_GetPlayerStartTransform::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_GetPlayerStartTransform, CallFunc_BreakRotator_Pitch_1) == 0x000098, "Member 'BP_BrainCrashManager_C_GetPlayerStartTransform::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_GetPlayerStartTransform, CallFunc_BreakRotator_Yaw_1) == 0x00009C, "Member 'BP_BrainCrashManager_C_GetPlayerStartTransform::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_GetPlayerStartTransform, CallFunc_Add_FloatFloat_ReturnValue) == 0x0000A0, "Member 'BP_BrainCrashManager_C_GetPlayerStartTransform::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_GetPlayerStartTransform, CallFunc_Add_VectorVector_ReturnValue) == 0x0000A4, "Member 'BP_BrainCrashManager_C_GetPlayerStartTransform::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_GetPlayerStartTransform, CallFunc_MakeRotator_ReturnValue) == 0x0000B0, "Member 'BP_BrainCrashManager_C_GetPlayerStartTransform::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_GetPlayerStartTransform, CallFunc_MakeTransform_ReturnValue) == 0x0000C0, "Member 'BP_BrainCrashManager_C_GetPlayerStartTransform::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");

// Function BP_BrainCrashManager.BP_BrainCrashManager_C.LoadENPC
// 0x0005 (0x0005 - 0x0000)
struct BP_BrainCrashManager_C_LoadENPC final
{
public:
	bool                                          Damage;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          KillSolo;                                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          KillMulti;                                         // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          LoadEm8220;                                        // 0x0003(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ASyncLoading;                                      // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BrainCrashManager_C_LoadENPC) == 0x000001, "Wrong alignment on BP_BrainCrashManager_C_LoadENPC");
static_assert(sizeof(BP_BrainCrashManager_C_LoadENPC) == 0x000005, "Wrong size on BP_BrainCrashManager_C_LoadENPC");
static_assert(offsetof(BP_BrainCrashManager_C_LoadENPC, Damage) == 0x000000, "Member 'BP_BrainCrashManager_C_LoadENPC::Damage' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_LoadENPC, KillSolo) == 0x000001, "Member 'BP_BrainCrashManager_C_LoadENPC::KillSolo' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_LoadENPC, KillMulti) == 0x000002, "Member 'BP_BrainCrashManager_C_LoadENPC::KillMulti' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_LoadENPC, LoadEm8220) == 0x000003, "Member 'BP_BrainCrashManager_C_LoadENPC::LoadEm8220' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_LoadENPC, ASyncLoading) == 0x000004, "Member 'BP_BrainCrashManager_C_LoadENPC::ASyncLoading' has a wrong offset!");

// Function BP_BrainCrashManager.BP_BrainCrashManager_C.UnloadENPC
// 0x0003 (0x0003 - 0x0000)
struct BP_BrainCrashManager_C_UnloadENPC final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BrainCrashManager_C_UnloadENPC) == 0x000001, "Wrong alignment on BP_BrainCrashManager_C_UnloadENPC");
static_assert(sizeof(BP_BrainCrashManager_C_UnloadENPC) == 0x000003, "Wrong size on BP_BrainCrashManager_C_UnloadENPC");
static_assert(offsetof(BP_BrainCrashManager_C_UnloadENPC, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_BrainCrashManager_C_UnloadENPC::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_UnloadENPC, CallFunc_IsValid_ReturnValue_1) == 0x000001, "Member 'BP_BrainCrashManager_C_UnloadENPC::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_UnloadENPC, CallFunc_IsValid_ReturnValue_2) == 0x000002, "Member 'BP_BrainCrashManager_C_UnloadENPC::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

// Function BP_BrainCrashManager.BP_BrainCrashManager_C.PrivateCalcTransform
// 0x0140 (0x0140 - 0x0000)
struct BP_BrainCrashManager_C_PrivateCalcTransform final
{
public:
	struct FTransform                             ActorTransform;                                    // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FTransform                             RelativeComponentTransform;                        // 0x0030(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FTransform                             Transform;                                         // 0x0060(0x0030)(Parm, OutParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x009C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x00B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x00C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x00CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0100(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D84[0x4];                                     // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0110(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BrainCrashManager_C_PrivateCalcTransform) == 0x000010, "Wrong alignment on BP_BrainCrashManager_C_PrivateCalcTransform");
static_assert(sizeof(BP_BrainCrashManager_C_PrivateCalcTransform) == 0x000140, "Wrong size on BP_BrainCrashManager_C_PrivateCalcTransform");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateCalcTransform, ActorTransform) == 0x000000, "Member 'BP_BrainCrashManager_C_PrivateCalcTransform::ActorTransform' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateCalcTransform, RelativeComponentTransform) == 0x000030, "Member 'BP_BrainCrashManager_C_PrivateCalcTransform::RelativeComponentTransform' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateCalcTransform, Transform) == 0x000060, "Member 'BP_BrainCrashManager_C_PrivateCalcTransform::Transform' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateCalcTransform, CallFunc_BreakTransform_Location) == 0x000090, "Member 'BP_BrainCrashManager_C_PrivateCalcTransform::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateCalcTransform, CallFunc_BreakTransform_Rotation) == 0x00009C, "Member 'BP_BrainCrashManager_C_PrivateCalcTransform::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateCalcTransform, CallFunc_BreakTransform_Scale) == 0x0000A8, "Member 'BP_BrainCrashManager_C_PrivateCalcTransform::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateCalcTransform, CallFunc_BreakTransform_Location_1) == 0x0000B4, "Member 'BP_BrainCrashManager_C_PrivateCalcTransform::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateCalcTransform, CallFunc_BreakTransform_Rotation_1) == 0x0000C0, "Member 'BP_BrainCrashManager_C_PrivateCalcTransform::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateCalcTransform, CallFunc_BreakTransform_Scale_1) == 0x0000CC, "Member 'BP_BrainCrashManager_C_PrivateCalcTransform::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateCalcTransform, CallFunc_BreakRotator_Roll) == 0x0000D8, "Member 'BP_BrainCrashManager_C_PrivateCalcTransform::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateCalcTransform, CallFunc_BreakRotator_Pitch) == 0x0000DC, "Member 'BP_BrainCrashManager_C_PrivateCalcTransform::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateCalcTransform, CallFunc_BreakRotator_Yaw) == 0x0000E0, "Member 'BP_BrainCrashManager_C_PrivateCalcTransform::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateCalcTransform, CallFunc_BreakRotator_Roll_1) == 0x0000E4, "Member 'BP_BrainCrashManager_C_PrivateCalcTransform::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateCalcTransform, CallFunc_BreakRotator_Pitch_1) == 0x0000E8, "Member 'BP_BrainCrashManager_C_PrivateCalcTransform::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateCalcTransform, CallFunc_BreakRotator_Yaw_1) == 0x0000EC, "Member 'BP_BrainCrashManager_C_PrivateCalcTransform::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateCalcTransform, CallFunc_Add_VectorVector_ReturnValue) == 0x0000F0, "Member 'BP_BrainCrashManager_C_PrivateCalcTransform::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateCalcTransform, CallFunc_Add_FloatFloat_ReturnValue) == 0x0000FC, "Member 'BP_BrainCrashManager_C_PrivateCalcTransform::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateCalcTransform, CallFunc_MakeRotator_ReturnValue) == 0x000100, "Member 'BP_BrainCrashManager_C_PrivateCalcTransform::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateCalcTransform, CallFunc_MakeTransform_ReturnValue) == 0x000110, "Member 'BP_BrainCrashManager_C_PrivateCalcTransform::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");

// Function BP_BrainCrashManager.BP_BrainCrashManager_C.AttachWeapon
// 0x0040 (0x0040 - 0x0000)
struct BP_BrainCrashManager_C_AttachWeapon final
{
public:
	bool                                          ForceBattle;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D85[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BrainFieldManager_C*                CallFunc_GetBrainFieldManager_Manager;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D86[0x6];                                     // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_GetBattleMemberActorFromKind_ReturnValue; // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInvokeBrainField_InvokeBrainField;      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D87[0x6];                                     // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattlePlayer_C*                      K2Node_DynamicCast_AsRSBattle_Player;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BrainCrashManager_C_AttachWeapon) == 0x000008, "Wrong alignment on BP_BrainCrashManager_C_AttachWeapon");
static_assert(sizeof(BP_BrainCrashManager_C_AttachWeapon) == 0x000040, "Wrong size on BP_BrainCrashManager_C_AttachWeapon");
static_assert(offsetof(BP_BrainCrashManager_C_AttachWeapon, ForceBattle) == 0x000000, "Member 'BP_BrainCrashManager_C_AttachWeapon::ForceBattle' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_AttachWeapon, CallFunc_GetBrainFieldManager_Manager) == 0x000008, "Member 'BP_BrainCrashManager_C_AttachWeapon::CallFunc_GetBrainFieldManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_AttachWeapon, CallFunc_GetPlayerManager_PlayerManager) == 0x000010, "Member 'BP_BrainCrashManager_C_AttachWeapon::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_AttachWeapon, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_BrainCrashManager_C_AttachWeapon::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_AttachWeapon, CallFunc_IsValid_ReturnValue_1) == 0x000019, "Member 'BP_BrainCrashManager_C_AttachWeapon::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_AttachWeapon, CallFunc_GetBattleMemberActorFromKind_ReturnValue) == 0x000020, "Member 'BP_BrainCrashManager_C_AttachWeapon::CallFunc_GetBattleMemberActorFromKind_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_AttachWeapon, CallFunc_IsInvokeBrainField_InvokeBrainField) == 0x000028, "Member 'BP_BrainCrashManager_C_AttachWeapon::CallFunc_IsInvokeBrainField_InvokeBrainField' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_AttachWeapon, CallFunc_IsValid_ReturnValue_2) == 0x000029, "Member 'BP_BrainCrashManager_C_AttachWeapon::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_AttachWeapon, K2Node_DynamicCast_AsRSBattle_Player) == 0x000030, "Member 'BP_BrainCrashManager_C_AttachWeapon::K2Node_DynamicCast_AsRSBattle_Player' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_AttachWeapon, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_BrainCrashManager_C_AttachWeapon::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_BrainCrashManager.BP_BrainCrashManager_C.PrivateUpdateGeneral
// 0x0158 (0x0158 - 0x0000)
struct BP_BrainCrashManager_C_PrivateUpdateGeneral final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D88[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattleCharacter_C*                   TargetEnemy;                                       // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_EventCameraRoot_C*                  CallFunc_GetCurrentSeqCameraRoot_SeqCameraRoot;    // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D89[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CharacterParamater_C> CallFunc_IsDead_self_CastInput;                    // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDead_bDead;                             // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D8A[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattleEnemy_C*                       K2Node_DynamicCast_AsRSBattle_Enemy;               // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D8B[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_EnemyInterface_C> CallFunc_GetBrainCore_self_CastInput;              // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ABP_co2000Base_C*                       CallFunc_GetBrainCore_CoreObject;                  // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D8C[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSCharacterBase*                       CallFunc_Array_Get_Item;                           // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattleCharacter_C*                   K2Node_DynamicCast_AsRSBattle_Character;           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D8D[0x6];                                     // 0x0082(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCameraLocation_ReturnValue;            // 0x0090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x009C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x00C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetActorRelativeRotation_SweepHitResult; // 0x00D0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_BrainCrashManager_C_PrivateUpdateGeneral) == 0x000008, "Wrong alignment on BP_BrainCrashManager_C_PrivateUpdateGeneral");
static_assert(sizeof(BP_BrainCrashManager_C_PrivateUpdateGeneral) == 0x000158, "Wrong size on BP_BrainCrashManager_C_PrivateUpdateGeneral");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateGeneral, DeltaSeconds) == 0x000000, "Member 'BP_BrainCrashManager_C_PrivateUpdateGeneral::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateGeneral, TargetEnemy) == 0x000008, "Member 'BP_BrainCrashManager_C_PrivateUpdateGeneral::TargetEnemy' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateGeneral, CallFunc_GetCurrentSeqCameraRoot_SeqCameraRoot) == 0x000010, "Member 'BP_BrainCrashManager_C_PrivateUpdateGeneral::CallFunc_GetCurrentSeqCameraRoot_SeqCameraRoot' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateGeneral, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_BrainCrashManager_C_PrivateUpdateGeneral::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateGeneral, CallFunc_IsDead_self_CastInput) == 0x000020, "Member 'BP_BrainCrashManager_C_PrivateUpdateGeneral::CallFunc_IsDead_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateGeneral, CallFunc_IsDead_bDead) == 0x000030, "Member 'BP_BrainCrashManager_C_PrivateUpdateGeneral::CallFunc_IsDead_bDead' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateGeneral, K2Node_DynamicCast_AsRSBattle_Enemy) == 0x000038, "Member 'BP_BrainCrashManager_C_PrivateUpdateGeneral::K2Node_DynamicCast_AsRSBattle_Enemy' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateGeneral, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_BrainCrashManager_C_PrivateUpdateGeneral::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateGeneral, CallFunc_GetBrainCore_self_CastInput) == 0x000048, "Member 'BP_BrainCrashManager_C_PrivateUpdateGeneral::CallFunc_GetBrainCore_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateGeneral, CallFunc_GetBrainCore_CoreObject) == 0x000058, "Member 'BP_BrainCrashManager_C_PrivateUpdateGeneral::CallFunc_GetBrainCore_CoreObject' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateGeneral, CallFunc_IsValid_ReturnValue_1) == 0x000060, "Member 'BP_BrainCrashManager_C_PrivateUpdateGeneral::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateGeneral, CallFunc_GetSocketLocation_ReturnValue) == 0x000064, "Member 'BP_BrainCrashManager_C_PrivateUpdateGeneral::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateGeneral, CallFunc_Array_Get_Item) == 0x000070, "Member 'BP_BrainCrashManager_C_PrivateUpdateGeneral::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateGeneral, K2Node_DynamicCast_AsRSBattle_Character) == 0x000078, "Member 'BP_BrainCrashManager_C_PrivateUpdateGeneral::K2Node_DynamicCast_AsRSBattle_Character' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateGeneral, K2Node_DynamicCast_bSuccess_1) == 0x000080, "Member 'BP_BrainCrashManager_C_PrivateUpdateGeneral::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateGeneral, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000081, "Member 'BP_BrainCrashManager_C_PrivateUpdateGeneral::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateGeneral, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000088, "Member 'BP_BrainCrashManager_C_PrivateUpdateGeneral::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateGeneral, CallFunc_GetCameraLocation_ReturnValue) == 0x000090, "Member 'BP_BrainCrashManager_C_PrivateUpdateGeneral::CallFunc_GetCameraLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateGeneral, CallFunc_FindLookAtRotation_ReturnValue) == 0x00009C, "Member 'BP_BrainCrashManager_C_PrivateUpdateGeneral::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateGeneral, CallFunc_BreakRotator_Roll) == 0x0000A8, "Member 'BP_BrainCrashManager_C_PrivateUpdateGeneral::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateGeneral, CallFunc_BreakRotator_Pitch) == 0x0000AC, "Member 'BP_BrainCrashManager_C_PrivateUpdateGeneral::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateGeneral, CallFunc_BreakRotator_Yaw) == 0x0000B0, "Member 'BP_BrainCrashManager_C_PrivateUpdateGeneral::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateGeneral, CallFunc_Add_FloatFloat_ReturnValue) == 0x0000B4, "Member 'BP_BrainCrashManager_C_PrivateUpdateGeneral::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateGeneral, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0000B8, "Member 'BP_BrainCrashManager_C_PrivateUpdateGeneral::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateGeneral, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000BC, "Member 'BP_BrainCrashManager_C_PrivateUpdateGeneral::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateGeneral, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x0000C0, "Member 'BP_BrainCrashManager_C_PrivateUpdateGeneral::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateGeneral, CallFunc_MakeRotator_ReturnValue) == 0x0000C4, "Member 'BP_BrainCrashManager_C_PrivateUpdateGeneral::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateUpdateGeneral, CallFunc_K2_SetActorRelativeRotation_SweepHitResult) == 0x0000D0, "Member 'BP_BrainCrashManager_C_PrivateUpdateGeneral::CallFunc_K2_SetActorRelativeRotation_SweepHitResult' has a wrong offset!");

// Function BP_BrainCrashManager.BP_BrainCrashManager_C.PrivateFinishRestoreMaterial
// 0x0030 (0x0030 - 0x0000)
struct BP_BrainCrashManager_C_PrivateFinishRestoreMaterial final
{
public:
	class ARSCharacterBase*                       MainPlayer;                                        // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattlePlayer_C*                      K2Node_DynamicCast_AsRSBattle_Player;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D8E[0x6];                                     // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSCharacterBase*                       CallFunc_GetPlayer_ReturnValue;                    // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BrainCrashManager_C_PrivateFinishRestoreMaterial) == 0x000008, "Wrong alignment on BP_BrainCrashManager_C_PrivateFinishRestoreMaterial");
static_assert(sizeof(BP_BrainCrashManager_C_PrivateFinishRestoreMaterial) == 0x000030, "Wrong size on BP_BrainCrashManager_C_PrivateFinishRestoreMaterial");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateFinishRestoreMaterial, MainPlayer) == 0x000000, "Member 'BP_BrainCrashManager_C_PrivateFinishRestoreMaterial::MainPlayer' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateFinishRestoreMaterial, K2Node_DynamicCast_AsRSBattle_Player) == 0x000008, "Member 'BP_BrainCrashManager_C_PrivateFinishRestoreMaterial::K2Node_DynamicCast_AsRSBattle_Player' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateFinishRestoreMaterial, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_BrainCrashManager_C_PrivateFinishRestoreMaterial::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateFinishRestoreMaterial, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'BP_BrainCrashManager_C_PrivateFinishRestoreMaterial::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateFinishRestoreMaterial, CallFunc_GetPlayerManager_PlayerManager) == 0x000018, "Member 'BP_BrainCrashManager_C_PrivateFinishRestoreMaterial::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateFinishRestoreMaterial, CallFunc_GetPlayer_ReturnValue) == 0x000020, "Member 'BP_BrainCrashManager_C_PrivateFinishRestoreMaterial::CallFunc_GetPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateFinishRestoreMaterial, CallFunc_IsValid_ReturnValue_1) == 0x000028, "Member 'BP_BrainCrashManager_C_PrivateFinishRestoreMaterial::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_BrainCrashManager.BP_BrainCrashManager_C.GetUniqueWaitTime
// 0x0008 (0x0008 - 0x0000)
struct BP_BrainCrashManager_C_GetUniqueWaitTime final
{
public:
	float                                         RemainTime;                                        // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_GetTimerRemainingTimeHandle_ReturnValue; // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrainCrashManager_C_GetUniqueWaitTime) == 0x000004, "Wrong alignment on BP_BrainCrashManager_C_GetUniqueWaitTime");
static_assert(sizeof(BP_BrainCrashManager_C_GetUniqueWaitTime) == 0x000008, "Wrong size on BP_BrainCrashManager_C_GetUniqueWaitTime");
static_assert(offsetof(BP_BrainCrashManager_C_GetUniqueWaitTime, RemainTime) == 0x000000, "Member 'BP_BrainCrashManager_C_GetUniqueWaitTime::RemainTime' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_GetUniqueWaitTime, CallFunc_K2_GetTimerRemainingTimeHandle_ReturnValue) == 0x000004, "Member 'BP_BrainCrashManager_C_GetUniqueWaitTime::CallFunc_K2_GetTimerRemainingTimeHandle_ReturnValue' has a wrong offset!");

// Function BP_BrainCrashManager.BP_BrainCrashManager_C.GetCrashTargetEnemyGeneralNames
// 0x00A0 (0x00A0 - 0x0000)
struct BP_BrainCrashManager_C_GetCrashTargetEnemyGeneralNames final
{
public:
	TArray<class FString>                         TargetEnemyNames;                                  // 0x0000(0x0010)(Parm, OutParm, HasGetValueTypeHash)
	int32                                         TargetNum;                                         // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bGeneral;                                          // 0x0014(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D8F[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Nametemp;                                          // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	TArray<class FString>                         ReturnNames;                                       // 0x0028(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D90[0x3];                                     // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D91[0x3];                                     // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetName_ReturnValue;                      // 0x0054(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D92[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D93[0x3];                                     // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetName_ReturnValue_1;                    // 0x0084(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D94[0x4];                                     // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue_1;          // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrainCrashManager_C_GetCrashTargetEnemyGeneralNames) == 0x000008, "Wrong alignment on BP_BrainCrashManager_C_GetCrashTargetEnemyGeneralNames");
static_assert(sizeof(BP_BrainCrashManager_C_GetCrashTargetEnemyGeneralNames) == 0x0000A0, "Wrong size on BP_BrainCrashManager_C_GetCrashTargetEnemyGeneralNames");
static_assert(offsetof(BP_BrainCrashManager_C_GetCrashTargetEnemyGeneralNames, TargetEnemyNames) == 0x000000, "Member 'BP_BrainCrashManager_C_GetCrashTargetEnemyGeneralNames::TargetEnemyNames' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_GetCrashTargetEnemyGeneralNames, TargetNum) == 0x000010, "Member 'BP_BrainCrashManager_C_GetCrashTargetEnemyGeneralNames::TargetNum' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_GetCrashTargetEnemyGeneralNames, bGeneral) == 0x000014, "Member 'BP_BrainCrashManager_C_GetCrashTargetEnemyGeneralNames::bGeneral' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_GetCrashTargetEnemyGeneralNames, Nametemp) == 0x000018, "Member 'BP_BrainCrashManager_C_GetCrashTargetEnemyGeneralNames::Nametemp' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_GetCrashTargetEnemyGeneralNames, ReturnNames) == 0x000028, "Member 'BP_BrainCrashManager_C_GetCrashTargetEnemyGeneralNames::ReturnNames' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_GetCrashTargetEnemyGeneralNames, Temp_int_Array_Index_Variable) == 0x000038, "Member 'BP_BrainCrashManager_C_GetCrashTargetEnemyGeneralNames::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_GetCrashTargetEnemyGeneralNames, Temp_int_Loop_Num_Variable) == 0x00003C, "Member 'BP_BrainCrashManager_C_GetCrashTargetEnemyGeneralNames::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_GetCrashTargetEnemyGeneralNames, Temp_int_Loop_Counter_Variable) == 0x000040, "Member 'BP_BrainCrashManager_C_GetCrashTargetEnemyGeneralNames::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_GetCrashTargetEnemyGeneralNames, CallFunc_Less_IntInt_ReturnValue) == 0x000044, "Member 'BP_BrainCrashManager_C_GetCrashTargetEnemyGeneralNames::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_GetCrashTargetEnemyGeneralNames, CallFunc_Add_IntInt_ReturnValue) == 0x000048, "Member 'BP_BrainCrashManager_C_GetCrashTargetEnemyGeneralNames::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_GetCrashTargetEnemyGeneralNames, CallFunc_IsValid_ReturnValue) == 0x00004C, "Member 'BP_BrainCrashManager_C_GetCrashTargetEnemyGeneralNames::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_GetCrashTargetEnemyGeneralNames, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'BP_BrainCrashManager_C_GetCrashTargetEnemyGeneralNames::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_GetCrashTargetEnemyGeneralNames, CallFunc_GetName_ReturnValue) == 0x000054, "Member 'BP_BrainCrashManager_C_GetCrashTargetEnemyGeneralNames::CallFunc_GetName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_GetCrashTargetEnemyGeneralNames, CallFunc_Conv_NameToString_ReturnValue) == 0x000060, "Member 'BP_BrainCrashManager_C_GetCrashTargetEnemyGeneralNames::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_GetCrashTargetEnemyGeneralNames, CallFunc_Array_Add_ReturnValue) == 0x000070, "Member 'BP_BrainCrashManager_C_GetCrashTargetEnemyGeneralNames::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_GetCrashTargetEnemyGeneralNames, CallFunc_Array_Add_ReturnValue_1) == 0x000074, "Member 'BP_BrainCrashManager_C_GetCrashTargetEnemyGeneralNames::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_GetCrashTargetEnemyGeneralNames, CallFunc_Array_Find_ReturnValue) == 0x000078, "Member 'BP_BrainCrashManager_C_GetCrashTargetEnemyGeneralNames::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_GetCrashTargetEnemyGeneralNames, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00007C, "Member 'BP_BrainCrashManager_C_GetCrashTargetEnemyGeneralNames::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_GetCrashTargetEnemyGeneralNames, CallFunc_Array_Length_ReturnValue_1) == 0x000080, "Member 'BP_BrainCrashManager_C_GetCrashTargetEnemyGeneralNames::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_GetCrashTargetEnemyGeneralNames, CallFunc_GetName_ReturnValue_1) == 0x000084, "Member 'BP_BrainCrashManager_C_GetCrashTargetEnemyGeneralNames::CallFunc_GetName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_GetCrashTargetEnemyGeneralNames, CallFunc_Conv_NameToString_ReturnValue_1) == 0x000090, "Member 'BP_BrainCrashManager_C_GetCrashTargetEnemyGeneralNames::CallFunc_Conv_NameToString_ReturnValue_1' has a wrong offset!");

// Function BP_BrainCrashManager.BP_BrainCrashManager_C.ReloadPlayerSequencer
// 0x0070 (0x0070 - 0x0000)
struct BP_BrainCrashManager_C_ReloadPlayerSequencer final
{
public:
	EPlayerID                                     PlayerId;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D95[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       Player;                                            // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D96[0x5];                                     // 0x0013(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerManager*                         CallFunc_GetPlayerManager_PlayerManager;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D97[0x6];                                     // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_GetPlayer_ReturnValue;                    // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UObject>                 K2Node_Select_Default;                             // 0x0030(0x0028)(HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue;               // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequence*                         K2Node_DynamicCast_AsLevel_Sequence;               // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BrainCrashManager_C_ReloadPlayerSequencer) == 0x000008, "Wrong alignment on BP_BrainCrashManager_C_ReloadPlayerSequencer");
static_assert(sizeof(BP_BrainCrashManager_C_ReloadPlayerSequencer) == 0x000070, "Wrong size on BP_BrainCrashManager_C_ReloadPlayerSequencer");
static_assert(offsetof(BP_BrainCrashManager_C_ReloadPlayerSequencer, PlayerId) == 0x000000, "Member 'BP_BrainCrashManager_C_ReloadPlayerSequencer::PlayerId' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ReloadPlayerSequencer, Player) == 0x000008, "Member 'BP_BrainCrashManager_C_ReloadPlayerSequencer::Player' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ReloadPlayerSequencer, Temp_bool_Variable) == 0x000010, "Member 'BP_BrainCrashManager_C_ReloadPlayerSequencer::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ReloadPlayerSequencer, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'BP_BrainCrashManager_C_ReloadPlayerSequencer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ReloadPlayerSequencer, CallFunc_IsValid_ReturnValue_1) == 0x000012, "Member 'BP_BrainCrashManager_C_ReloadPlayerSequencer::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ReloadPlayerSequencer, CallFunc_GetPlayerManager_PlayerManager) == 0x000018, "Member 'BP_BrainCrashManager_C_ReloadPlayerSequencer::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ReloadPlayerSequencer, CallFunc_IsValid_ReturnValue_2) == 0x000020, "Member 'BP_BrainCrashManager_C_ReloadPlayerSequencer::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ReloadPlayerSequencer, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000021, "Member 'BP_BrainCrashManager_C_ReloadPlayerSequencer::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ReloadPlayerSequencer, CallFunc_GetPlayer_ReturnValue) == 0x000028, "Member 'BP_BrainCrashManager_C_ReloadPlayerSequencer::CallFunc_GetPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ReloadPlayerSequencer, K2Node_Select_Default) == 0x000030, "Member 'BP_BrainCrashManager_C_ReloadPlayerSequencer::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ReloadPlayerSequencer, CallFunc_LoadSoftObject_ReturnValue) == 0x000058, "Member 'BP_BrainCrashManager_C_ReloadPlayerSequencer::CallFunc_LoadSoftObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ReloadPlayerSequencer, K2Node_DynamicCast_AsLevel_Sequence) == 0x000060, "Member 'BP_BrainCrashManager_C_ReloadPlayerSequencer::K2Node_DynamicCast_AsLevel_Sequence' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ReloadPlayerSequencer, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'BP_BrainCrashManager_C_ReloadPlayerSequencer::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_BrainCrashManager.BP_BrainCrashManager_C.IsCrashTargetSeeThroughStealth
// 0x0038 (0x0038 - 0x0000)
struct BP_BrainCrashManager_C_IsCrashTargetSeeThroughStealth final
{
public:
	bool                                          SeeThroughStealth;                                 // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D98[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     MatInterface;                                      // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               K2Node_DynamicCast_AsMaterial_Instance_Dynamic;    // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D99[0x2];                                     // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x001C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRsScalarParameterValue_OutValue;       // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetRsScalarParameterValue_ReturnValue;    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D9A[0x6];                                     // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue;                  // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrainCrashManager_C_IsCrashTargetSeeThroughStealth) == 0x000008, "Wrong alignment on BP_BrainCrashManager_C_IsCrashTargetSeeThroughStealth");
static_assert(sizeof(BP_BrainCrashManager_C_IsCrashTargetSeeThroughStealth) == 0x000038, "Wrong size on BP_BrainCrashManager_C_IsCrashTargetSeeThroughStealth");
static_assert(offsetof(BP_BrainCrashManager_C_IsCrashTargetSeeThroughStealth, SeeThroughStealth) == 0x000000, "Member 'BP_BrainCrashManager_C_IsCrashTargetSeeThroughStealth::SeeThroughStealth' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_IsCrashTargetSeeThroughStealth, MatInterface) == 0x000008, "Member 'BP_BrainCrashManager_C_IsCrashTargetSeeThroughStealth::MatInterface' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_IsCrashTargetSeeThroughStealth, K2Node_DynamicCast_AsMaterial_Instance_Dynamic) == 0x000010, "Member 'BP_BrainCrashManager_C_IsCrashTargetSeeThroughStealth::K2Node_DynamicCast_AsMaterial_Instance_Dynamic' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_IsCrashTargetSeeThroughStealth, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_BrainCrashManager_C_IsCrashTargetSeeThroughStealth::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_IsCrashTargetSeeThroughStealth, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'BP_BrainCrashManager_C_IsCrashTargetSeeThroughStealth::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_IsCrashTargetSeeThroughStealth, CallFunc_MakeLiteralName_ReturnValue) == 0x00001C, "Member 'BP_BrainCrashManager_C_IsCrashTargetSeeThroughStealth::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_IsCrashTargetSeeThroughStealth, CallFunc_GetRsScalarParameterValue_OutValue) == 0x000024, "Member 'BP_BrainCrashManager_C_IsCrashTargetSeeThroughStealth::CallFunc_GetRsScalarParameterValue_OutValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_IsCrashTargetSeeThroughStealth, CallFunc_GetRsScalarParameterValue_ReturnValue) == 0x000028, "Member 'BP_BrainCrashManager_C_IsCrashTargetSeeThroughStealth::CallFunc_GetRsScalarParameterValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_IsCrashTargetSeeThroughStealth, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000029, "Member 'BP_BrainCrashManager_C_IsCrashTargetSeeThroughStealth::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_IsCrashTargetSeeThroughStealth, CallFunc_GetMaterial_ReturnValue) == 0x000030, "Member 'BP_BrainCrashManager_C_IsCrashTargetSeeThroughStealth::CallFunc_GetMaterial_ReturnValue' has a wrong offset!");

// Function BP_BrainCrashManager.BP_BrainCrashManager_C.GetENPCBrainCrashType
// 0x0004 (0x0004 - 0x0000)
struct BP_BrainCrashManager_C_GetENPCBrainCrashType final
{
public:
	bool                                          IsEnpc;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsKill;                                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsSolo;                                            // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayingUniqueBrainCrash_IsUnique;       // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BrainCrashManager_C_GetENPCBrainCrashType) == 0x000001, "Wrong alignment on BP_BrainCrashManager_C_GetENPCBrainCrashType");
static_assert(sizeof(BP_BrainCrashManager_C_GetENPCBrainCrashType) == 0x000004, "Wrong size on BP_BrainCrashManager_C_GetENPCBrainCrashType");
static_assert(offsetof(BP_BrainCrashManager_C_GetENPCBrainCrashType, IsEnpc) == 0x000000, "Member 'BP_BrainCrashManager_C_GetENPCBrainCrashType::IsEnpc' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_GetENPCBrainCrashType, IsKill) == 0x000001, "Member 'BP_BrainCrashManager_C_GetENPCBrainCrashType::IsKill' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_GetENPCBrainCrashType, IsSolo) == 0x000002, "Member 'BP_BrainCrashManager_C_GetENPCBrainCrashType::IsSolo' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_GetENPCBrainCrashType, CallFunc_IsPlayingUniqueBrainCrash_IsUnique) == 0x000003, "Member 'BP_BrainCrashManager_C_GetENPCBrainCrashType::CallFunc_IsPlayingUniqueBrainCrash_IsUnique' has a wrong offset!");

// Function BP_BrainCrashManager.BP_BrainCrashManager_C.PrivateResetLevelSequenceActor
// 0x0190 (0x0190 - 0x0000)
struct BP_BrainCrashManager_C_PrivateResetLevelSequenceActor final
{
public:
	class ABP_EventManager_C*                     EventManager;                                      // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D9B[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_EventManager_C*                     CallFunc_GetEventManager_EventManager;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D9C[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D9D[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0028(0x0010)(ReferenceParm, HasGetValueTypeHash)
	uint8                                         Pad_3D9E[0x8];                                     // 0x0038(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0040(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_EventManager_C*                     CallFunc_GetEventManager_EventManager_1;           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSLevelSequenceActor*                  CallFunc_FinishSpawningActor_ReturnValue;          // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D9F[0x7];                                     // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x0090(0x0030)(IsPlainOldData, NoDestructor)
	TArray<class AActor*>                         K2Node_MakeArray_Array_1;                          // 0x00C0(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1; // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSLevelSequenceActor*                  CallFunc_FinishSpawningActor_ReturnValue_1;        // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00E6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x00E7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_1;            // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DA0[0x7];                                     // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_EventManager_C*                     CallFunc_GetEventManager_EventManager_2;           // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_2;            // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DA1[0x6];                                     // 0x00FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_MakeArray_Array_2;                          // 0x0100(0x0010)(ReferenceParm, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_2;              // 0x0110(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_2; // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSLevelSequenceActor*                  CallFunc_FinishSpawningActor_ReturnValue_2;        // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFBrainCrashSequencerInfo              K2Node_MakeStruct_FBrainCrashSequencerInfo;        // 0x0150(0x0040)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrainCrashManager_C_PrivateResetLevelSequenceActor) == 0x000010, "Wrong alignment on BP_BrainCrashManager_C_PrivateResetLevelSequenceActor");
static_assert(sizeof(BP_BrainCrashManager_C_PrivateResetLevelSequenceActor) == 0x000190, "Wrong size on BP_BrainCrashManager_C_PrivateResetLevelSequenceActor");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateResetLevelSequenceActor, EventManager) == 0x000000, "Member 'BP_BrainCrashManager_C_PrivateResetLevelSequenceActor::EventManager' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateResetLevelSequenceActor, CallFunc_MakeLiteralByte_ReturnValue) == 0x000008, "Member 'BP_BrainCrashManager_C_PrivateResetLevelSequenceActor::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateResetLevelSequenceActor, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BP_BrainCrashManager_C_PrivateResetLevelSequenceActor::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateResetLevelSequenceActor, CallFunc_GetEventManager_EventManager) == 0x000010, "Member 'BP_BrainCrashManager_C_PrivateResetLevelSequenceActor::CallFunc_GetEventManager_EventManager' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateResetLevelSequenceActor, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_BrainCrashManager_C_PrivateResetLevelSequenceActor::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateResetLevelSequenceActor, CallFunc_IsValid_ReturnValue) == 0x00001C, "Member 'BP_BrainCrashManager_C_PrivateResetLevelSequenceActor::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateResetLevelSequenceActor, Temp_int_Array_Index_Variable) == 0x000020, "Member 'BP_BrainCrashManager_C_PrivateResetLevelSequenceActor::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateResetLevelSequenceActor, K2Node_MakeArray_Array) == 0x000028, "Member 'BP_BrainCrashManager_C_PrivateResetLevelSequenceActor::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateResetLevelSequenceActor, CallFunc_MakeTransform_ReturnValue) == 0x000040, "Member 'BP_BrainCrashManager_C_PrivateResetLevelSequenceActor::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateResetLevelSequenceActor, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000070, "Member 'BP_BrainCrashManager_C_PrivateResetLevelSequenceActor::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateResetLevelSequenceActor, CallFunc_GetEventManager_EventManager_1) == 0x000078, "Member 'BP_BrainCrashManager_C_PrivateResetLevelSequenceActor::CallFunc_GetEventManager_EventManager_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateResetLevelSequenceActor, CallFunc_FinishSpawningActor_ReturnValue) == 0x000080, "Member 'BP_BrainCrashManager_C_PrivateResetLevelSequenceActor::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateResetLevelSequenceActor, CallFunc_IsValid_ReturnValue_1) == 0x000088, "Member 'BP_BrainCrashManager_C_PrivateResetLevelSequenceActor::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateResetLevelSequenceActor, CallFunc_MakeTransform_ReturnValue_1) == 0x000090, "Member 'BP_BrainCrashManager_C_PrivateResetLevelSequenceActor::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateResetLevelSequenceActor, K2Node_MakeArray_Array_1) == 0x0000C0, "Member 'BP_BrainCrashManager_C_PrivateResetLevelSequenceActor::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateResetLevelSequenceActor, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1) == 0x0000D0, "Member 'BP_BrainCrashManager_C_PrivateResetLevelSequenceActor::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateResetLevelSequenceActor, CallFunc_FinishSpawningActor_ReturnValue_1) == 0x0000D8, "Member 'BP_BrainCrashManager_C_PrivateResetLevelSequenceActor::CallFunc_FinishSpawningActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateResetLevelSequenceActor, CallFunc_Array_Length_ReturnValue) == 0x0000E0, "Member 'BP_BrainCrashManager_C_PrivateResetLevelSequenceActor::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateResetLevelSequenceActor, CallFunc_Less_IntInt_ReturnValue) == 0x0000E4, "Member 'BP_BrainCrashManager_C_PrivateResetLevelSequenceActor::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateResetLevelSequenceActor, CallFunc_IsValid_ReturnValue_2) == 0x0000E5, "Member 'BP_BrainCrashManager_C_PrivateResetLevelSequenceActor::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateResetLevelSequenceActor, CallFunc_IsValid_ReturnValue_3) == 0x0000E6, "Member 'BP_BrainCrashManager_C_PrivateResetLevelSequenceActor::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateResetLevelSequenceActor, CallFunc_IsValid_ReturnValue_4) == 0x0000E7, "Member 'BP_BrainCrashManager_C_PrivateResetLevelSequenceActor::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateResetLevelSequenceActor, CallFunc_MakeLiteralByte_ReturnValue_1) == 0x0000E8, "Member 'BP_BrainCrashManager_C_PrivateResetLevelSequenceActor::CallFunc_MakeLiteralByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateResetLevelSequenceActor, CallFunc_GetEventManager_EventManager_2) == 0x0000F0, "Member 'BP_BrainCrashManager_C_PrivateResetLevelSequenceActor::CallFunc_GetEventManager_EventManager_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateResetLevelSequenceActor, CallFunc_IsValid_ReturnValue_5) == 0x0000F8, "Member 'BP_BrainCrashManager_C_PrivateResetLevelSequenceActor::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateResetLevelSequenceActor, CallFunc_MakeLiteralByte_ReturnValue_2) == 0x0000F9, "Member 'BP_BrainCrashManager_C_PrivateResetLevelSequenceActor::CallFunc_MakeLiteralByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateResetLevelSequenceActor, K2Node_MakeArray_Array_2) == 0x000100, "Member 'BP_BrainCrashManager_C_PrivateResetLevelSequenceActor::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateResetLevelSequenceActor, CallFunc_MakeTransform_ReturnValue_2) == 0x000110, "Member 'BP_BrainCrashManager_C_PrivateResetLevelSequenceActor::CallFunc_MakeTransform_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateResetLevelSequenceActor, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_2) == 0x000140, "Member 'BP_BrainCrashManager_C_PrivateResetLevelSequenceActor::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateResetLevelSequenceActor, CallFunc_FinishSpawningActor_ReturnValue_2) == 0x000148, "Member 'BP_BrainCrashManager_C_PrivateResetLevelSequenceActor::CallFunc_FinishSpawningActor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateResetLevelSequenceActor, K2Node_MakeStruct_FBrainCrashSequencerInfo) == 0x000150, "Member 'BP_BrainCrashManager_C_PrivateResetLevelSequenceActor::K2Node_MakeStruct_FBrainCrashSequencerInfo' has a wrong offset!");

// Function BP_BrainCrashManager.BP_BrainCrashManager_C.CheckBrainCrashKill
// 0x0028 (0x0028 - 0x0000)
struct BP_BrainCrashManager_C_CheckBrainCrashKill final
{
public:
	bool                                          bGeneral;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DA2[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattlePlayer_C*                      LPlayer;                                           // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCharacterDead_ReturnValue;              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DA3[0x2];                                     // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattlePlayer_C*                      CallFunc_GetMainPlayer_Player;                     // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrainCrashManager_C_CheckBrainCrashKill) == 0x000008, "Wrong alignment on BP_BrainCrashManager_C_CheckBrainCrashKill");
static_assert(sizeof(BP_BrainCrashManager_C_CheckBrainCrashKill) == 0x000028, "Wrong size on BP_BrainCrashManager_C_CheckBrainCrashKill");
static_assert(offsetof(BP_BrainCrashManager_C_CheckBrainCrashKill, bGeneral) == 0x000000, "Member 'BP_BrainCrashManager_C_CheckBrainCrashKill::bGeneral' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CheckBrainCrashKill, LPlayer) == 0x000008, "Member 'BP_BrainCrashManager_C_CheckBrainCrashKill::LPlayer' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CheckBrainCrashKill, CallFunc_IsCharacterDead_ReturnValue) == 0x000010, "Member 'BP_BrainCrashManager_C_CheckBrainCrashKill::CallFunc_IsCharacterDead_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CheckBrainCrashKill, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'BP_BrainCrashManager_C_CheckBrainCrashKill::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CheckBrainCrashKill, CallFunc_Array_Length_ReturnValue) == 0x000014, "Member 'BP_BrainCrashManager_C_CheckBrainCrashKill::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CheckBrainCrashKill, CallFunc_GetPlayerManager_PlayerManager) == 0x000018, "Member 'BP_BrainCrashManager_C_CheckBrainCrashKill::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CheckBrainCrashKill, CallFunc_GetMainPlayer_Player) == 0x000020, "Member 'BP_BrainCrashManager_C_CheckBrainCrashKill::CallFunc_GetMainPlayer_Player' has a wrong offset!");

// Function BP_BrainCrashManager.BP_BrainCrashManager_C.IsNeedFrameWait
// 0x0001 (0x0001 - 0x0000)
struct BP_BrainCrashManager_C_IsNeedFrameWait final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BrainCrashManager_C_IsNeedFrameWait) == 0x000001, "Wrong alignment on BP_BrainCrashManager_C_IsNeedFrameWait");
static_assert(sizeof(BP_BrainCrashManager_C_IsNeedFrameWait) == 0x000001, "Wrong size on BP_BrainCrashManager_C_IsNeedFrameWait");
static_assert(offsetof(BP_BrainCrashManager_C_IsNeedFrameWait, ReturnValue) == 0x000000, "Member 'BP_BrainCrashManager_C_IsNeedFrameWait::ReturnValue' has a wrong offset!");

// Function BP_BrainCrashManager.BP_BrainCrashManager_C.Calc Not Bried Camera Location
// 0x01B8 (0x01B8 - 0x0000)
struct BP_BrainCrashManager_C_Calc_Not_Bried_Camera_Location final
{
public:
	float                                         PlayerToEnemyYaw;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CutCameraVector;                                   // 0x0004(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                PlayerBaseLocation;                                // 0x0010(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NewLocation;                                       // 0x001C(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Bried;                                             // 0x0028(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DA4[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DA5[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0048(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array_1;                          // 0x0058(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_CapsuleTraceSingleForObjects_OutHit;      // 0x0074(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_CapsuleTraceSingleForObjects_ReturnValue; // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x00FD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x00FE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DA6[0x1];                                     // 0x00FF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0108(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0114(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0120(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x012C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0148(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0160(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x016C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0178(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x0184(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0190(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x01A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x01AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrainCrashManager_C_Calc_Not_Bried_Camera_Location) == 0x000008, "Wrong alignment on BP_BrainCrashManager_C_Calc_Not_Bried_Camera_Location");
static_assert(sizeof(BP_BrainCrashManager_C_Calc_Not_Bried_Camera_Location) == 0x0001B8, "Wrong size on BP_BrainCrashManager_C_Calc_Not_Bried_Camera_Location");
static_assert(offsetof(BP_BrainCrashManager_C_Calc_Not_Bried_Camera_Location, PlayerToEnemyYaw) == 0x000000, "Member 'BP_BrainCrashManager_C_Calc_Not_Bried_Camera_Location::PlayerToEnemyYaw' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Calc_Not_Bried_Camera_Location, CutCameraVector) == 0x000004, "Member 'BP_BrainCrashManager_C_Calc_Not_Bried_Camera_Location::CutCameraVector' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Calc_Not_Bried_Camera_Location, PlayerBaseLocation) == 0x000010, "Member 'BP_BrainCrashManager_C_Calc_Not_Bried_Camera_Location::PlayerBaseLocation' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Calc_Not_Bried_Camera_Location, NewLocation) == 0x00001C, "Member 'BP_BrainCrashManager_C_Calc_Not_Bried_Camera_Location::NewLocation' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Calc_Not_Bried_Camera_Location, Bried) == 0x000028, "Member 'BP_BrainCrashManager_C_Calc_Not_Bried_Camera_Location::Bried' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Calc_Not_Bried_Camera_Location, CallFunc_MakeRotator_ReturnValue) == 0x00002C, "Member 'BP_BrainCrashManager_C_Calc_Not_Bried_Camera_Location::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Calc_Not_Bried_Camera_Location, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x000038, "Member 'BP_BrainCrashManager_C_Calc_Not_Bried_Camera_Location::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Calc_Not_Bried_Camera_Location, K2Node_MakeArray_Array) == 0x000048, "Member 'BP_BrainCrashManager_C_Calc_Not_Bried_Camera_Location::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Calc_Not_Bried_Camera_Location, K2Node_MakeArray_Array_1) == 0x000058, "Member 'BP_BrainCrashManager_C_Calc_Not_Bried_Camera_Location::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Calc_Not_Bried_Camera_Location, CallFunc_Add_VectorVector_ReturnValue) == 0x000068, "Member 'BP_BrainCrashManager_C_Calc_Not_Bried_Camera_Location::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Calc_Not_Bried_Camera_Location, CallFunc_CapsuleTraceSingleForObjects_OutHit) == 0x000074, "Member 'BP_BrainCrashManager_C_Calc_Not_Bried_Camera_Location::CallFunc_CapsuleTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Calc_Not_Bried_Camera_Location, CallFunc_CapsuleTraceSingleForObjects_ReturnValue) == 0x0000FC, "Member 'BP_BrainCrashManager_C_Calc_Not_Bried_Camera_Location::CallFunc_CapsuleTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Calc_Not_Bried_Camera_Location, CallFunc_BreakHitResult_bBlockingHit) == 0x0000FD, "Member 'BP_BrainCrashManager_C_Calc_Not_Bried_Camera_Location::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Calc_Not_Bried_Camera_Location, CallFunc_BreakHitResult_bInitialOverlap) == 0x0000FE, "Member 'BP_BrainCrashManager_C_Calc_Not_Bried_Camera_Location::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Calc_Not_Bried_Camera_Location, CallFunc_BreakHitResult_Time) == 0x000100, "Member 'BP_BrainCrashManager_C_Calc_Not_Bried_Camera_Location::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Calc_Not_Bried_Camera_Location, CallFunc_BreakHitResult_Distance) == 0x000104, "Member 'BP_BrainCrashManager_C_Calc_Not_Bried_Camera_Location::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Calc_Not_Bried_Camera_Location, CallFunc_BreakHitResult_Location) == 0x000108, "Member 'BP_BrainCrashManager_C_Calc_Not_Bried_Camera_Location::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Calc_Not_Bried_Camera_Location, CallFunc_BreakHitResult_ImpactPoint) == 0x000114, "Member 'BP_BrainCrashManager_C_Calc_Not_Bried_Camera_Location::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Calc_Not_Bried_Camera_Location, CallFunc_BreakHitResult_Normal) == 0x000120, "Member 'BP_BrainCrashManager_C_Calc_Not_Bried_Camera_Location::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Calc_Not_Bried_Camera_Location, CallFunc_BreakHitResult_ImpactNormal) == 0x00012C, "Member 'BP_BrainCrashManager_C_Calc_Not_Bried_Camera_Location::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Calc_Not_Bried_Camera_Location, CallFunc_BreakHitResult_PhysMat) == 0x000138, "Member 'BP_BrainCrashManager_C_Calc_Not_Bried_Camera_Location::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Calc_Not_Bried_Camera_Location, CallFunc_BreakHitResult_HitActor) == 0x000140, "Member 'BP_BrainCrashManager_C_Calc_Not_Bried_Camera_Location::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Calc_Not_Bried_Camera_Location, CallFunc_BreakHitResult_HitComponent) == 0x000148, "Member 'BP_BrainCrashManager_C_Calc_Not_Bried_Camera_Location::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Calc_Not_Bried_Camera_Location, CallFunc_BreakHitResult_HitBoneName) == 0x000150, "Member 'BP_BrainCrashManager_C_Calc_Not_Bried_Camera_Location::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Calc_Not_Bried_Camera_Location, CallFunc_BreakHitResult_HitItem) == 0x000158, "Member 'BP_BrainCrashManager_C_Calc_Not_Bried_Camera_Location::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Calc_Not_Bried_Camera_Location, CallFunc_BreakHitResult_FaceIndex) == 0x00015C, "Member 'BP_BrainCrashManager_C_Calc_Not_Bried_Camera_Location::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Calc_Not_Bried_Camera_Location, CallFunc_BreakHitResult_TraceStart) == 0x000160, "Member 'BP_BrainCrashManager_C_Calc_Not_Bried_Camera_Location::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Calc_Not_Bried_Camera_Location, CallFunc_BreakHitResult_TraceEnd) == 0x00016C, "Member 'BP_BrainCrashManager_C_Calc_Not_Bried_Camera_Location::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Calc_Not_Bried_Camera_Location, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000178, "Member 'BP_BrainCrashManager_C_Calc_Not_Bried_Camera_Location::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Calc_Not_Bried_Camera_Location, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x000184, "Member 'BP_BrainCrashManager_C_Calc_Not_Bried_Camera_Location::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Calc_Not_Bried_Camera_Location, CallFunc_Normal_ReturnValue) == 0x000190, "Member 'BP_BrainCrashManager_C_Calc_Not_Bried_Camera_Location::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Calc_Not_Bried_Camera_Location, CallFunc_Dot_VectorVector_ReturnValue) == 0x00019C, "Member 'BP_BrainCrashManager_C_Calc_Not_Bried_Camera_Location::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Calc_Not_Bried_Camera_Location, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0001A0, "Member 'BP_BrainCrashManager_C_Calc_Not_Bried_Camera_Location::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_Calc_Not_Bried_Camera_Location, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0001AC, "Member 'BP_BrainCrashManager_C_Calc_Not_Bried_Camera_Location::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");

// Function BP_BrainCrashManager.BP_BrainCrashManager_C.UnloadENPCCheck
// 0x0028 (0x0028 - 0x0000)
struct BP_BrainCrashManager_C_UnloadENPCCheck final
{
public:
	class ARSBattlePlayer_C*                      Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DA7[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IPlayerInterface>      CallFunc_GetPlayerID_self_CastInput;               // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerID                                     CallFunc_GetPlayerID_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BrainCrashManager_C_UnloadENPCCheck) == 0x000008, "Wrong alignment on BP_BrainCrashManager_C_UnloadENPCCheck");
static_assert(sizeof(BP_BrainCrashManager_C_UnloadENPCCheck) == 0x000028, "Wrong size on BP_BrainCrashManager_C_UnloadENPCCheck");
static_assert(offsetof(BP_BrainCrashManager_C_UnloadENPCCheck, Player) == 0x000000, "Member 'BP_BrainCrashManager_C_UnloadENPCCheck::Player' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_UnloadENPCCheck, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_BrainCrashManager_C_UnloadENPCCheck::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_UnloadENPCCheck, CallFunc_GetPlayerID_self_CastInput) == 0x000010, "Member 'BP_BrainCrashManager_C_UnloadENPCCheck::CallFunc_GetPlayerID_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_UnloadENPCCheck, CallFunc_GetPlayerID_ReturnValue) == 0x000020, "Member 'BP_BrainCrashManager_C_UnloadENPCCheck::CallFunc_GetPlayerID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_UnloadENPCCheck, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000021, "Member 'BP_BrainCrashManager_C_UnloadENPCCheck::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_BrainCrashManager.BP_BrainCrashManager_C.SpawnKilledEnemyDropItem
// 0x0010 (0x0010 - 0x0000)
struct BP_BrainCrashManager_C_SpawnKilledEnemyDropItem final
{
public:
	class ADropItemManager*                       CallFunc_GetDropItemManager_Drop_Item_Manager;     // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BrainCrashManager_C_SpawnKilledEnemyDropItem) == 0x000008, "Wrong alignment on BP_BrainCrashManager_C_SpawnKilledEnemyDropItem");
static_assert(sizeof(BP_BrainCrashManager_C_SpawnKilledEnemyDropItem) == 0x000010, "Wrong size on BP_BrainCrashManager_C_SpawnKilledEnemyDropItem");
static_assert(offsetof(BP_BrainCrashManager_C_SpawnKilledEnemyDropItem, CallFunc_GetDropItemManager_Drop_Item_Manager) == 0x000000, "Member 'BP_BrainCrashManager_C_SpawnKilledEnemyDropItem::CallFunc_GetDropItemManager_Drop_Item_Manager' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_SpawnKilledEnemyDropItem, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_BrainCrashManager_C_SpawnKilledEnemyDropItem::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_BrainCrashManager.BP_BrainCrashManager_C.PrivateSetupCutinCloseBrainFieldClose
// 0x0048 (0x0048 - 0x0000)
struct BP_BrainCrashManager_C_PrivateSetupCutinCloseBrainFieldClose final
{
public:
	class ARSCharacterBase*                       TmpActor;                                          // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DA8[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BrainFieldManager_C*                CallFunc_GetBrainFieldManager_Manager;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_InBranField_InBrainDield;                 // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DA9[0x1];                                     // 0x001B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DAA[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DAB[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BrainCrash_C>     K2Node_DynamicCast_AsBPI_Brain_Crash;              // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DAC[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrainCrashManager_C_PrivateSetupCutinCloseBrainFieldClose) == 0x000008, "Wrong alignment on BP_BrainCrashManager_C_PrivateSetupCutinCloseBrainFieldClose");
static_assert(sizeof(BP_BrainCrashManager_C_PrivateSetupCutinCloseBrainFieldClose) == 0x000048, "Wrong size on BP_BrainCrashManager_C_PrivateSetupCutinCloseBrainFieldClose");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSetupCutinCloseBrainFieldClose, TmpActor) == 0x000000, "Member 'BP_BrainCrashManager_C_PrivateSetupCutinCloseBrainFieldClose::TmpActor' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSetupCutinCloseBrainFieldClose, Temp_int_Loop_Num_Variable) == 0x000008, "Member 'BP_BrainCrashManager_C_PrivateSetupCutinCloseBrainFieldClose::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSetupCutinCloseBrainFieldClose, CallFunc_GetBrainFieldManager_Manager) == 0x000010, "Member 'BP_BrainCrashManager_C_PrivateSetupCutinCloseBrainFieldClose::CallFunc_GetBrainFieldManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSetupCutinCloseBrainFieldClose, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_BrainCrashManager_C_PrivateSetupCutinCloseBrainFieldClose::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSetupCutinCloseBrainFieldClose, CallFunc_IsValid_ReturnValue_1) == 0x000019, "Member 'BP_BrainCrashManager_C_PrivateSetupCutinCloseBrainFieldClose::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSetupCutinCloseBrainFieldClose, CallFunc_InBranField_InBrainDield) == 0x00001A, "Member 'BP_BrainCrashManager_C_PrivateSetupCutinCloseBrainFieldClose::CallFunc_InBranField_InBrainDield' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSetupCutinCloseBrainFieldClose, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'BP_BrainCrashManager_C_PrivateSetupCutinCloseBrainFieldClose::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSetupCutinCloseBrainFieldClose, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'BP_BrainCrashManager_C_PrivateSetupCutinCloseBrainFieldClose::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSetupCutinCloseBrainFieldClose, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'BP_BrainCrashManager_C_PrivateSetupCutinCloseBrainFieldClose::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSetupCutinCloseBrainFieldClose, Temp_int_Array_Index_Variable) == 0x000028, "Member 'BP_BrainCrashManager_C_PrivateSetupCutinCloseBrainFieldClose::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSetupCutinCloseBrainFieldClose, K2Node_DynamicCast_AsBPI_Brain_Crash) == 0x000030, "Member 'BP_BrainCrashManager_C_PrivateSetupCutinCloseBrainFieldClose::K2Node_DynamicCast_AsBPI_Brain_Crash' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSetupCutinCloseBrainFieldClose, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_BrainCrashManager_C_PrivateSetupCutinCloseBrainFieldClose::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateSetupCutinCloseBrainFieldClose, CallFunc_Array_Length_ReturnValue) == 0x000044, "Member 'BP_BrainCrashManager_C_PrivateSetupCutinCloseBrainFieldClose::CallFunc_Array_Length_ReturnValue' has a wrong offset!");

// Function BP_BrainCrashManager.BP_BrainCrashManager_C.GetSequencerDilation
// 0x0004 (0x0004 - 0x0000)
struct BP_BrainCrashManager_C_GetSequencerDilation final
{
public:
	float                                         Dilation;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrainCrashManager_C_GetSequencerDilation) == 0x000004, "Wrong alignment on BP_BrainCrashManager_C_GetSequencerDilation");
static_assert(sizeof(BP_BrainCrashManager_C_GetSequencerDilation) == 0x000004, "Wrong size on BP_BrainCrashManager_C_GetSequencerDilation");
static_assert(offsetof(BP_BrainCrashManager_C_GetSequencerDilation, Dilation) == 0x000000, "Member 'BP_BrainCrashManager_C_GetSequencerDilation::Dilation' has a wrong offset!");

// Function BP_BrainCrashManager.BP_BrainCrashManager_C.CV_ProtectedSetupPlayRangeMarkInternal
// 0x0080 (0x0080 - 0x0000)
struct BP_BrainCrashManager_C_CV_ProtectedSetupPlayRangeMarkInternal final
{
public:
	class FString                                 MarkName;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          IsPauseAtEnd;                                      // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DAD[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         FrameOffset;                                       // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasMark;                                           // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ValidMark;                                         // 0x0019(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DAE[0x6];                                     // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSLevelSequenceActor*                  CallFunc_GetCurrentSequencer_Sequencer;            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSLevelSequenceActor*                  CallFunc_GetCurrentSequencer_Sequencer_1;          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue;            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSLevelSequenceActor*                  CallFunc_GetCurrentSequencer_Sequencer_2;          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue_1;          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSLevelSequenceActor*                  CallFunc_GetCurrentSequencer_Sequencer_3;          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSLevelSequenceActor*                  CallFunc_GetCurrentSequencer_Sequencer_4;          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue_2;          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue_3;          // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFrameTime                             CallFunc_GetMarkedFrameByLabel_MarkTime;           // 0x0068(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetMarkedFrameByLabel_ReturnValue;        // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DAF[0x3];                                     // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrainCrashManager_C_CV_ProtectedSetupPlayRangeMarkInternal) == 0x000008, "Wrong alignment on BP_BrainCrashManager_C_CV_ProtectedSetupPlayRangeMarkInternal");
static_assert(sizeof(BP_BrainCrashManager_C_CV_ProtectedSetupPlayRangeMarkInternal) == 0x000080, "Wrong size on BP_BrainCrashManager_C_CV_ProtectedSetupPlayRangeMarkInternal");
static_assert(offsetof(BP_BrainCrashManager_C_CV_ProtectedSetupPlayRangeMarkInternal, MarkName) == 0x000000, "Member 'BP_BrainCrashManager_C_CV_ProtectedSetupPlayRangeMarkInternal::MarkName' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_ProtectedSetupPlayRangeMarkInternal, IsPauseAtEnd) == 0x000010, "Member 'BP_BrainCrashManager_C_CV_ProtectedSetupPlayRangeMarkInternal::IsPauseAtEnd' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_ProtectedSetupPlayRangeMarkInternal, FrameOffset) == 0x000014, "Member 'BP_BrainCrashManager_C_CV_ProtectedSetupPlayRangeMarkInternal::FrameOffset' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_ProtectedSetupPlayRangeMarkInternal, HasMark) == 0x000018, "Member 'BP_BrainCrashManager_C_CV_ProtectedSetupPlayRangeMarkInternal::HasMark' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_ProtectedSetupPlayRangeMarkInternal, ValidMark) == 0x000019, "Member 'BP_BrainCrashManager_C_CV_ProtectedSetupPlayRangeMarkInternal::ValidMark' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_ProtectedSetupPlayRangeMarkInternal, CallFunc_GetCurrentSequencer_Sequencer) == 0x000020, "Member 'BP_BrainCrashManager_C_CV_ProtectedSetupPlayRangeMarkInternal::CallFunc_GetCurrentSequencer_Sequencer' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_ProtectedSetupPlayRangeMarkInternal, CallFunc_GetCurrentSequencer_Sequencer_1) == 0x000028, "Member 'BP_BrainCrashManager_C_CV_ProtectedSetupPlayRangeMarkInternal::CallFunc_GetCurrentSequencer_Sequencer_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_ProtectedSetupPlayRangeMarkInternal, CallFunc_GetSequencePlayer_ReturnValue) == 0x000030, "Member 'BP_BrainCrashManager_C_CV_ProtectedSetupPlayRangeMarkInternal::CallFunc_GetSequencePlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_ProtectedSetupPlayRangeMarkInternal, CallFunc_GetCurrentSequencer_Sequencer_2) == 0x000038, "Member 'BP_BrainCrashManager_C_CV_ProtectedSetupPlayRangeMarkInternal::CallFunc_GetCurrentSequencer_Sequencer_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_ProtectedSetupPlayRangeMarkInternal, CallFunc_GetSequencePlayer_ReturnValue_1) == 0x000040, "Member 'BP_BrainCrashManager_C_CV_ProtectedSetupPlayRangeMarkInternal::CallFunc_GetSequencePlayer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_ProtectedSetupPlayRangeMarkInternal, CallFunc_GetCurrentSequencer_Sequencer_3) == 0x000048, "Member 'BP_BrainCrashManager_C_CV_ProtectedSetupPlayRangeMarkInternal::CallFunc_GetCurrentSequencer_Sequencer_3' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_ProtectedSetupPlayRangeMarkInternal, CallFunc_GetCurrentSequencer_Sequencer_4) == 0x000050, "Member 'BP_BrainCrashManager_C_CV_ProtectedSetupPlayRangeMarkInternal::CallFunc_GetCurrentSequencer_Sequencer_4' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_ProtectedSetupPlayRangeMarkInternal, CallFunc_GetSequencePlayer_ReturnValue_2) == 0x000058, "Member 'BP_BrainCrashManager_C_CV_ProtectedSetupPlayRangeMarkInternal::CallFunc_GetSequencePlayer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_ProtectedSetupPlayRangeMarkInternal, CallFunc_GetSequencePlayer_ReturnValue_3) == 0x000060, "Member 'BP_BrainCrashManager_C_CV_ProtectedSetupPlayRangeMarkInternal::CallFunc_GetSequencePlayer_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_ProtectedSetupPlayRangeMarkInternal, CallFunc_GetMarkedFrameByLabel_MarkTime) == 0x000068, "Member 'BP_BrainCrashManager_C_CV_ProtectedSetupPlayRangeMarkInternal::CallFunc_GetMarkedFrameByLabel_MarkTime' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_ProtectedSetupPlayRangeMarkInternal, CallFunc_GetMarkedFrameByLabel_ReturnValue) == 0x000070, "Member 'BP_BrainCrashManager_C_CV_ProtectedSetupPlayRangeMarkInternal::CallFunc_GetMarkedFrameByLabel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_ProtectedSetupPlayRangeMarkInternal, CallFunc_Add_IntInt_ReturnValue) == 0x000074, "Member 'BP_BrainCrashManager_C_CV_ProtectedSetupPlayRangeMarkInternal::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_ProtectedSetupPlayRangeMarkInternal, CallFunc_Max_ReturnValue) == 0x000078, "Member 'BP_BrainCrashManager_C_CV_ProtectedSetupPlayRangeMarkInternal::CallFunc_Max_ReturnValue' has a wrong offset!");

// Function BP_BrainCrashManager.BP_BrainCrashManager_C.CV_ProtectedOnCVInputStartResult
// 0x0050 (0x0050 - 0x0000)
struct BP_BrainCrashManager_C_CV_ProtectedOnCVInputStartResult final
{
public:
	class AHUDMainGame_C*                         CallFunc_GetHUDMainGame_HUDMainGame;               // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DB0[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSLevelSequenceActor*                  CallFunc_GetCurrentSequencer_Sequencer;            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue;            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DB1[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSLevelSequenceActor*                  CallFunc_GetCurrentSequencer_Sequencer_1;          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSLevelSequenceActor*                  CallFunc_GetCurrentSequencer_Sequencer_2;          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue_1;          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFrameNumber                           CallFunc_BreakQualifiedFrameTime_Frame;            // 0x0040(0x0004)(NoDestructor, HasGetValueTypeHash)
	struct FFrameRate                             CallFunc_BreakQualifiedFrameTime_FrameRate;        // 0x0044(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakQualifiedFrameTime_SubFrame;         // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrainCrashManager_C_CV_ProtectedOnCVInputStartResult) == 0x000008, "Wrong alignment on BP_BrainCrashManager_C_CV_ProtectedOnCVInputStartResult");
static_assert(sizeof(BP_BrainCrashManager_C_CV_ProtectedOnCVInputStartResult) == 0x000050, "Wrong size on BP_BrainCrashManager_C_CV_ProtectedOnCVInputStartResult");
static_assert(offsetof(BP_BrainCrashManager_C_CV_ProtectedOnCVInputStartResult, CallFunc_GetHUDMainGame_HUDMainGame) == 0x000000, "Member 'BP_BrainCrashManager_C_CV_ProtectedOnCVInputStartResult::CallFunc_GetHUDMainGame_HUDMainGame' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_ProtectedOnCVInputStartResult, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_BrainCrashManager_C_CV_ProtectedOnCVInputStartResult::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_ProtectedOnCVInputStartResult, CallFunc_GetCurrentSequencer_Sequencer) == 0x000010, "Member 'BP_BrainCrashManager_C_CV_ProtectedOnCVInputStartResult::CallFunc_GetCurrentSequencer_Sequencer' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_ProtectedOnCVInputStartResult, CallFunc_GetSequencePlayer_ReturnValue) == 0x000018, "Member 'BP_BrainCrashManager_C_CV_ProtectedOnCVInputStartResult::CallFunc_GetSequencePlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_ProtectedOnCVInputStartResult, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000020, "Member 'BP_BrainCrashManager_C_CV_ProtectedOnCVInputStartResult::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_ProtectedOnCVInputStartResult, CallFunc_GetCurrentSequencer_Sequencer_1) == 0x000028, "Member 'BP_BrainCrashManager_C_CV_ProtectedOnCVInputStartResult::CallFunc_GetCurrentSequencer_Sequencer_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_ProtectedOnCVInputStartResult, CallFunc_GetCurrentSequencer_Sequencer_2) == 0x000030, "Member 'BP_BrainCrashManager_C_CV_ProtectedOnCVInputStartResult::CallFunc_GetCurrentSequencer_Sequencer_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_ProtectedOnCVInputStartResult, CallFunc_GetSequencePlayer_ReturnValue_1) == 0x000038, "Member 'BP_BrainCrashManager_C_CV_ProtectedOnCVInputStartResult::CallFunc_GetSequencePlayer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_ProtectedOnCVInputStartResult, CallFunc_BreakQualifiedFrameTime_Frame) == 0x000040, "Member 'BP_BrainCrashManager_C_CV_ProtectedOnCVInputStartResult::CallFunc_BreakQualifiedFrameTime_Frame' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_ProtectedOnCVInputStartResult, CallFunc_BreakQualifiedFrameTime_FrameRate) == 0x000044, "Member 'BP_BrainCrashManager_C_CV_ProtectedOnCVInputStartResult::CallFunc_BreakQualifiedFrameTime_FrameRate' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_ProtectedOnCVInputStartResult, CallFunc_BreakQualifiedFrameTime_SubFrame) == 0x00004C, "Member 'BP_BrainCrashManager_C_CV_ProtectedOnCVInputStartResult::CallFunc_BreakQualifiedFrameTime_SubFrame' has a wrong offset!");

// Function BP_BrainCrashManager.BP_BrainCrashManager_C.CV_ProtectedOnCVInputEndResult
// 0x00C8 (0x00C8 - 0x0000)
struct BP_BrainCrashManager_C_CV_ProtectedOnCVInputEndResult final
{
public:
	class ARSLevelSequenceActor*                  CallFunc_GetCurrentSubSequencer_SubSequencer;      // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBlendableInterface>   CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput; // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue;            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequence*                         CallFunc_GetSequence_ReturnValue;                  // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DB2[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSLevelSequenceActor*                  CallFunc_GetCurrentEnemySequencer_Sequencer;       // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue_1;          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHUDMainGame_C*                         CallFunc_GetHUDMainGame_HUDMainGame;               // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSLevelSequenceActor*                  CallFunc_GetCurrentSequencer_Sequencer;            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DB3[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue_2;          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSLevelSequenceActor*                  CallFunc_GetCurrentSequencer_Sequencer_1;          // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSLevelSequenceActor*                  CallFunc_GetCurrentSequencer_Sequencer_2;          // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSLevelSequenceActor*                  CallFunc_GetCurrentSequencer_Sequencer_3;          // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSLevelSequenceActor*                  CallFunc_GetCurrentSequencer_Sequencer_4;          // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue_3;          // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue_4;          // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSLevelSequenceActor*                  CallFunc_GetCurrentSequencer_Sequencer_5;          // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ScrubToMarkedFrame_ReturnValue;           // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DB4[0x7];                                     // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue_5;          // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSLevelSequenceActor*                  CallFunc_GetCurrentSequencer_Sequencer_6;          // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue_6;          // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFrameNumber                           CallFunc_BreakQualifiedFrameTime_Frame;            // 0x00B8(0x0004)(NoDestructor, HasGetValueTypeHash)
	struct FFrameRate                             CallFunc_BreakQualifiedFrameTime_FrameRate;        // 0x00BC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakQualifiedFrameTime_SubFrame;         // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrainCrashManager_C_CV_ProtectedOnCVInputEndResult) == 0x000008, "Wrong alignment on BP_BrainCrashManager_C_CV_ProtectedOnCVInputEndResult");
static_assert(sizeof(BP_BrainCrashManager_C_CV_ProtectedOnCVInputEndResult) == 0x0000C8, "Wrong size on BP_BrainCrashManager_C_CV_ProtectedOnCVInputEndResult");
static_assert(offsetof(BP_BrainCrashManager_C_CV_ProtectedOnCVInputEndResult, CallFunc_GetCurrentSubSequencer_SubSequencer) == 0x000000, "Member 'BP_BrainCrashManager_C_CV_ProtectedOnCVInputEndResult::CallFunc_GetCurrentSubSequencer_SubSequencer' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_ProtectedOnCVInputEndResult, CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput) == 0x000008, "Member 'BP_BrainCrashManager_C_CV_ProtectedOnCVInputEndResult::CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_ProtectedOnCVInputEndResult, CallFunc_GetSequencePlayer_ReturnValue) == 0x000018, "Member 'BP_BrainCrashManager_C_CV_ProtectedOnCVInputEndResult::CallFunc_GetSequencePlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_ProtectedOnCVInputEndResult, CallFunc_GetSequence_ReturnValue) == 0x000020, "Member 'BP_BrainCrashManager_C_CV_ProtectedOnCVInputEndResult::CallFunc_GetSequence_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_ProtectedOnCVInputEndResult, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BP_BrainCrashManager_C_CV_ProtectedOnCVInputEndResult::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_ProtectedOnCVInputEndResult, CallFunc_GetCurrentEnemySequencer_Sequencer) == 0x000030, "Member 'BP_BrainCrashManager_C_CV_ProtectedOnCVInputEndResult::CallFunc_GetCurrentEnemySequencer_Sequencer' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_ProtectedOnCVInputEndResult, CallFunc_GetSequencePlayer_ReturnValue_1) == 0x000038, "Member 'BP_BrainCrashManager_C_CV_ProtectedOnCVInputEndResult::CallFunc_GetSequencePlayer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_ProtectedOnCVInputEndResult, CallFunc_GetHUDMainGame_HUDMainGame) == 0x000040, "Member 'BP_BrainCrashManager_C_CV_ProtectedOnCVInputEndResult::CallFunc_GetHUDMainGame_HUDMainGame' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_ProtectedOnCVInputEndResult, CallFunc_GetCurrentSequencer_Sequencer) == 0x000048, "Member 'BP_BrainCrashManager_C_CV_ProtectedOnCVInputEndResult::CallFunc_GetCurrentSequencer_Sequencer' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_ProtectedOnCVInputEndResult, CallFunc_IsValid_ReturnValue_1) == 0x000050, "Member 'BP_BrainCrashManager_C_CV_ProtectedOnCVInputEndResult::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_ProtectedOnCVInputEndResult, CallFunc_GetSequencePlayer_ReturnValue_2) == 0x000058, "Member 'BP_BrainCrashManager_C_CV_ProtectedOnCVInputEndResult::CallFunc_GetSequencePlayer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_ProtectedOnCVInputEndResult, CallFunc_GetCurrentSequencer_Sequencer_1) == 0x000060, "Member 'BP_BrainCrashManager_C_CV_ProtectedOnCVInputEndResult::CallFunc_GetCurrentSequencer_Sequencer_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_ProtectedOnCVInputEndResult, CallFunc_GetCurrentSequencer_Sequencer_2) == 0x000068, "Member 'BP_BrainCrashManager_C_CV_ProtectedOnCVInputEndResult::CallFunc_GetCurrentSequencer_Sequencer_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_ProtectedOnCVInputEndResult, CallFunc_GetCurrentSequencer_Sequencer_3) == 0x000070, "Member 'BP_BrainCrashManager_C_CV_ProtectedOnCVInputEndResult::CallFunc_GetCurrentSequencer_Sequencer_3' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_ProtectedOnCVInputEndResult, CallFunc_GetCurrentSequencer_Sequencer_4) == 0x000078, "Member 'BP_BrainCrashManager_C_CV_ProtectedOnCVInputEndResult::CallFunc_GetCurrentSequencer_Sequencer_4' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_ProtectedOnCVInputEndResult, CallFunc_GetSequencePlayer_ReturnValue_3) == 0x000080, "Member 'BP_BrainCrashManager_C_CV_ProtectedOnCVInputEndResult::CallFunc_GetSequencePlayer_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_ProtectedOnCVInputEndResult, CallFunc_GetSequencePlayer_ReturnValue_4) == 0x000088, "Member 'BP_BrainCrashManager_C_CV_ProtectedOnCVInputEndResult::CallFunc_GetSequencePlayer_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_ProtectedOnCVInputEndResult, CallFunc_GetCurrentSequencer_Sequencer_5) == 0x000090, "Member 'BP_BrainCrashManager_C_CV_ProtectedOnCVInputEndResult::CallFunc_GetCurrentSequencer_Sequencer_5' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_ProtectedOnCVInputEndResult, CallFunc_ScrubToMarkedFrame_ReturnValue) == 0x000098, "Member 'BP_BrainCrashManager_C_CV_ProtectedOnCVInputEndResult::CallFunc_ScrubToMarkedFrame_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_ProtectedOnCVInputEndResult, CallFunc_GetSequencePlayer_ReturnValue_5) == 0x0000A0, "Member 'BP_BrainCrashManager_C_CV_ProtectedOnCVInputEndResult::CallFunc_GetSequencePlayer_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_ProtectedOnCVInputEndResult, CallFunc_GetCurrentSequencer_Sequencer_6) == 0x0000A8, "Member 'BP_BrainCrashManager_C_CV_ProtectedOnCVInputEndResult::CallFunc_GetCurrentSequencer_Sequencer_6' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_ProtectedOnCVInputEndResult, CallFunc_GetSequencePlayer_ReturnValue_6) == 0x0000B0, "Member 'BP_BrainCrashManager_C_CV_ProtectedOnCVInputEndResult::CallFunc_GetSequencePlayer_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_ProtectedOnCVInputEndResult, CallFunc_BreakQualifiedFrameTime_Frame) == 0x0000B8, "Member 'BP_BrainCrashManager_C_CV_ProtectedOnCVInputEndResult::CallFunc_BreakQualifiedFrameTime_Frame' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_ProtectedOnCVInputEndResult, CallFunc_BreakQualifiedFrameTime_FrameRate) == 0x0000BC, "Member 'BP_BrainCrashManager_C_CV_ProtectedOnCVInputEndResult::CallFunc_BreakQualifiedFrameTime_FrameRate' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_ProtectedOnCVInputEndResult, CallFunc_BreakQualifiedFrameTime_SubFrame) == 0x0000C4, "Member 'BP_BrainCrashManager_C_CV_ProtectedOnCVInputEndResult::CallFunc_BreakQualifiedFrameTime_SubFrame' has a wrong offset!");

// Function BP_BrainCrashManager.BP_BrainCrashManager_C.CV_ProtectedSetupPlayRangeMarkCVInputStart
// 0x0028 (0x0028 - 0x0000)
struct BP_BrainCrashManager_C_CV_ProtectedSetupPlayRangeMarkCVInputStart final
{
public:
	bool                                          CallFunc_CV_ProtectedSetupPlayRangeMarkInternal_HasMark; // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CV_ProtectedSetupPlayRangeMarkInternal_HasMark_1; // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DB5[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSLevelSequenceActor*                  CallFunc_GetCurrentSequencer_Sequencer;            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue;            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrainCrashManager_C_CV_ProtectedSetupPlayRangeMarkCVInputStart) == 0x000008, "Wrong alignment on BP_BrainCrashManager_C_CV_ProtectedSetupPlayRangeMarkCVInputStart");
static_assert(sizeof(BP_BrainCrashManager_C_CV_ProtectedSetupPlayRangeMarkCVInputStart) == 0x000028, "Wrong size on BP_BrainCrashManager_C_CV_ProtectedSetupPlayRangeMarkCVInputStart");
static_assert(offsetof(BP_BrainCrashManager_C_CV_ProtectedSetupPlayRangeMarkCVInputStart, CallFunc_CV_ProtectedSetupPlayRangeMarkInternal_HasMark) == 0x000000, "Member 'BP_BrainCrashManager_C_CV_ProtectedSetupPlayRangeMarkCVInputStart::CallFunc_CV_ProtectedSetupPlayRangeMarkInternal_HasMark' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_ProtectedSetupPlayRangeMarkCVInputStart, CallFunc_CV_ProtectedSetupPlayRangeMarkInternal_HasMark_1) == 0x000001, "Member 'BP_BrainCrashManager_C_CV_ProtectedSetupPlayRangeMarkCVInputStart::CallFunc_CV_ProtectedSetupPlayRangeMarkInternal_HasMark_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_ProtectedSetupPlayRangeMarkCVInputStart, CallFunc_GetCurrentSequencer_Sequencer) == 0x000008, "Member 'BP_BrainCrashManager_C_CV_ProtectedSetupPlayRangeMarkCVInputStart::CallFunc_GetCurrentSequencer_Sequencer' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_ProtectedSetupPlayRangeMarkCVInputStart, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'BP_BrainCrashManager_C_CV_ProtectedSetupPlayRangeMarkCVInputStart::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_ProtectedSetupPlayRangeMarkCVInputStart, CallFunc_GetSequencePlayer_ReturnValue) == 0x000020, "Member 'BP_BrainCrashManager_C_CV_ProtectedSetupPlayRangeMarkCVInputStart::CallFunc_GetSequencePlayer_ReturnValue' has a wrong offset!");

// Function BP_BrainCrashManager.BP_BrainCrashManager_C.CV_ProtectedSetupPlayRangeMarkCVInputEnd
// 0x0028 (0x0028 - 0x0000)
struct BP_BrainCrashManager_C_CV_ProtectedSetupPlayRangeMarkCVInputEnd final
{
public:
	class ARSLevelSequenceActor*                  CallFunc_GetCurrentSequencer_Sequencer;            // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue;            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CV_ProtectedSetupPlayRangeMarkInternal_HasMark; // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BrainCrashManager_C_CV_ProtectedSetupPlayRangeMarkCVInputEnd) == 0x000008, "Wrong alignment on BP_BrainCrashManager_C_CV_ProtectedSetupPlayRangeMarkCVInputEnd");
static_assert(sizeof(BP_BrainCrashManager_C_CV_ProtectedSetupPlayRangeMarkCVInputEnd) == 0x000028, "Wrong size on BP_BrainCrashManager_C_CV_ProtectedSetupPlayRangeMarkCVInputEnd");
static_assert(offsetof(BP_BrainCrashManager_C_CV_ProtectedSetupPlayRangeMarkCVInputEnd, CallFunc_GetCurrentSequencer_Sequencer) == 0x000000, "Member 'BP_BrainCrashManager_C_CV_ProtectedSetupPlayRangeMarkCVInputEnd::CallFunc_GetCurrentSequencer_Sequencer' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_ProtectedSetupPlayRangeMarkCVInputEnd, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'BP_BrainCrashManager_C_CV_ProtectedSetupPlayRangeMarkCVInputEnd::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_ProtectedSetupPlayRangeMarkCVInputEnd, CallFunc_GetSequencePlayer_ReturnValue) == 0x000018, "Member 'BP_BrainCrashManager_C_CV_ProtectedSetupPlayRangeMarkCVInputEnd::CallFunc_GetSequencePlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_ProtectedSetupPlayRangeMarkCVInputEnd, CallFunc_CV_ProtectedSetupPlayRangeMarkInternal_HasMark) == 0x000020, "Member 'BP_BrainCrashManager_C_CV_ProtectedSetupPlayRangeMarkCVInputEnd::CallFunc_CV_ProtectedSetupPlayRangeMarkInternal_HasMark' has a wrong offset!");

// Function BP_BrainCrashManager.BP_BrainCrashManager_C.BindBrainCrashSequenceEnd
// 0x0030 (0x0030 - 0x0000)
struct BP_BrainCrashManager_C_BindBrainCrashSequenceEnd final
{
public:
	class ALevelSequenceActor*                    LevelSequencer;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue;            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UCameraComponent* CameraComponent)> K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0020(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(BP_BrainCrashManager_C_BindBrainCrashSequenceEnd) == 0x000008, "Wrong alignment on BP_BrainCrashManager_C_BindBrainCrashSequenceEnd");
static_assert(sizeof(BP_BrainCrashManager_C_BindBrainCrashSequenceEnd) == 0x000030, "Wrong size on BP_BrainCrashManager_C_BindBrainCrashSequenceEnd");
static_assert(offsetof(BP_BrainCrashManager_C_BindBrainCrashSequenceEnd, LevelSequencer) == 0x000000, "Member 'BP_BrainCrashManager_C_BindBrainCrashSequenceEnd::LevelSequencer' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_BindBrainCrashSequenceEnd, CallFunc_GetSequencePlayer_ReturnValue) == 0x000008, "Member 'BP_BrainCrashManager_C_BindBrainCrashSequenceEnd::CallFunc_GetSequencePlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_BindBrainCrashSequenceEnd, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'BP_BrainCrashManager_C_BindBrainCrashSequenceEnd::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_BindBrainCrashSequenceEnd, K2Node_CreateDelegate_OutputDelegate_1) == 0x000020, "Member 'BP_BrainCrashManager_C_BindBrainCrashSequenceEnd::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");

// Function BP_BrainCrashManager.BP_BrainCrashManager_C.UnbindBrainCrashSequenceEnd
// 0x0010 (0x0010 - 0x0000)
struct BP_BrainCrashManager_C_UnbindBrainCrashSequenceEnd final
{
public:
	class ALevelSequenceActor*                    LevelSequencer;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue;            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrainCrashManager_C_UnbindBrainCrashSequenceEnd) == 0x000008, "Wrong alignment on BP_BrainCrashManager_C_UnbindBrainCrashSequenceEnd");
static_assert(sizeof(BP_BrainCrashManager_C_UnbindBrainCrashSequenceEnd) == 0x000010, "Wrong size on BP_BrainCrashManager_C_UnbindBrainCrashSequenceEnd");
static_assert(offsetof(BP_BrainCrashManager_C_UnbindBrainCrashSequenceEnd, LevelSequencer) == 0x000000, "Member 'BP_BrainCrashManager_C_UnbindBrainCrashSequenceEnd::LevelSequencer' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_UnbindBrainCrashSequenceEnd, CallFunc_GetSequencePlayer_ReturnValue) == 0x000008, "Member 'BP_BrainCrashManager_C_UnbindBrainCrashSequenceEnd::CallFunc_GetSequencePlayer_ReturnValue' has a wrong offset!");

// Function BP_BrainCrashManager.BP_BrainCrashManager_C.GetCurrentSequencer
// 0x0048 (0x0048 - 0x0000)
struct BP_BrainCrashManager_C_GetCurrentSequencer final
{
public:
	class ARSLevelSequenceActor*                  Sequencer;                                         // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFBrainCrashSequencerInfo              CallFunc_GetCurrentBrainCrashSequencerInfo_BrainCrashSequencerInfo; // 0x0008(0x0040)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrainCrashManager_C_GetCurrentSequencer) == 0x000008, "Wrong alignment on BP_BrainCrashManager_C_GetCurrentSequencer");
static_assert(sizeof(BP_BrainCrashManager_C_GetCurrentSequencer) == 0x000048, "Wrong size on BP_BrainCrashManager_C_GetCurrentSequencer");
static_assert(offsetof(BP_BrainCrashManager_C_GetCurrentSequencer, Sequencer) == 0x000000, "Member 'BP_BrainCrashManager_C_GetCurrentSequencer::Sequencer' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_GetCurrentSequencer, CallFunc_GetCurrentBrainCrashSequencerInfo_BrainCrashSequencerInfo) == 0x000008, "Member 'BP_BrainCrashManager_C_GetCurrentSequencer::CallFunc_GetCurrentBrainCrashSequencerInfo_BrainCrashSequencerInfo' has a wrong offset!");

// Function BP_BrainCrashManager.BP_BrainCrashManager_C.GetCurrentEnemySequencer
// 0x0048 (0x0048 - 0x0000)
struct BP_BrainCrashManager_C_GetCurrentEnemySequencer final
{
public:
	class ARSLevelSequenceActor*                  Sequencer;                                         // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFBrainCrashSequencerInfo              CallFunc_GetCurrentBrainCrashSequencerInfo_BrainCrashSequencerInfo; // 0x0008(0x0040)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrainCrashManager_C_GetCurrentEnemySequencer) == 0x000008, "Wrong alignment on BP_BrainCrashManager_C_GetCurrentEnemySequencer");
static_assert(sizeof(BP_BrainCrashManager_C_GetCurrentEnemySequencer) == 0x000048, "Wrong size on BP_BrainCrashManager_C_GetCurrentEnemySequencer");
static_assert(offsetof(BP_BrainCrashManager_C_GetCurrentEnemySequencer, Sequencer) == 0x000000, "Member 'BP_BrainCrashManager_C_GetCurrentEnemySequencer::Sequencer' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_GetCurrentEnemySequencer, CallFunc_GetCurrentBrainCrashSequencerInfo_BrainCrashSequencerInfo) == 0x000008, "Member 'BP_BrainCrashManager_C_GetCurrentEnemySequencer::CallFunc_GetCurrentBrainCrashSequencerInfo_BrainCrashSequencerInfo' has a wrong offset!");

// Function BP_BrainCrashManager.BP_BrainCrashManager_C.GetCurrentSeqUniqueRoot
// 0x0048 (0x0048 - 0x0000)
struct BP_BrainCrashManager_C_GetCurrentSeqUniqueRoot final
{
public:
	class ABP_EventCameraRoot_C*                  SeqUniqueRoot;                                     // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFBrainCrashSequencerInfo              CallFunc_GetCurrentBrainCrashSequencerInfo_BrainCrashSequencerInfo; // 0x0008(0x0040)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrainCrashManager_C_GetCurrentSeqUniqueRoot) == 0x000008, "Wrong alignment on BP_BrainCrashManager_C_GetCurrentSeqUniqueRoot");
static_assert(sizeof(BP_BrainCrashManager_C_GetCurrentSeqUniqueRoot) == 0x000048, "Wrong size on BP_BrainCrashManager_C_GetCurrentSeqUniqueRoot");
static_assert(offsetof(BP_BrainCrashManager_C_GetCurrentSeqUniqueRoot, SeqUniqueRoot) == 0x000000, "Member 'BP_BrainCrashManager_C_GetCurrentSeqUniqueRoot::SeqUniqueRoot' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_GetCurrentSeqUniqueRoot, CallFunc_GetCurrentBrainCrashSequencerInfo_BrainCrashSequencerInfo) == 0x000008, "Member 'BP_BrainCrashManager_C_GetCurrentSeqUniqueRoot::CallFunc_GetCurrentBrainCrashSequencerInfo_BrainCrashSequencerInfo' has a wrong offset!");

// Function BP_BrainCrashManager.BP_BrainCrashManager_C.GetCurrentSeqCameraRoot
// 0x0048 (0x0048 - 0x0000)
struct BP_BrainCrashManager_C_GetCurrentSeqCameraRoot final
{
public:
	class ABP_EventCameraRoot_C*                  SeqCameraRoot;                                     // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFBrainCrashSequencerInfo              CallFunc_GetCurrentBrainCrashSequencerInfo_BrainCrashSequencerInfo; // 0x0008(0x0040)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrainCrashManager_C_GetCurrentSeqCameraRoot) == 0x000008, "Wrong alignment on BP_BrainCrashManager_C_GetCurrentSeqCameraRoot");
static_assert(sizeof(BP_BrainCrashManager_C_GetCurrentSeqCameraRoot) == 0x000048, "Wrong size on BP_BrainCrashManager_C_GetCurrentSeqCameraRoot");
static_assert(offsetof(BP_BrainCrashManager_C_GetCurrentSeqCameraRoot, SeqCameraRoot) == 0x000000, "Member 'BP_BrainCrashManager_C_GetCurrentSeqCameraRoot::SeqCameraRoot' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_GetCurrentSeqCameraRoot, CallFunc_GetCurrentBrainCrashSequencerInfo_BrainCrashSequencerInfo) == 0x000008, "Member 'BP_BrainCrashManager_C_GetCurrentSeqCameraRoot::CallFunc_GetCurrentBrainCrashSequencerInfo_BrainCrashSequencerInfo' has a wrong offset!");

// Function BP_BrainCrashManager.BP_BrainCrashManager_C.GetCurrentSeqUniquePlayerRoot
// 0x0048 (0x0048 - 0x0000)
struct BP_BrainCrashManager_C_GetCurrentSeqUniquePlayerRoot final
{
public:
	class ABP_EventCameraRoot_C*                  SeqUniquePlayerRoot;                               // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFBrainCrashSequencerInfo              CallFunc_GetCurrentBrainCrashSequencerInfo_BrainCrashSequencerInfo; // 0x0008(0x0040)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrainCrashManager_C_GetCurrentSeqUniquePlayerRoot) == 0x000008, "Wrong alignment on BP_BrainCrashManager_C_GetCurrentSeqUniquePlayerRoot");
static_assert(sizeof(BP_BrainCrashManager_C_GetCurrentSeqUniquePlayerRoot) == 0x000048, "Wrong size on BP_BrainCrashManager_C_GetCurrentSeqUniquePlayerRoot");
static_assert(offsetof(BP_BrainCrashManager_C_GetCurrentSeqUniquePlayerRoot, SeqUniquePlayerRoot) == 0x000000, "Member 'BP_BrainCrashManager_C_GetCurrentSeqUniquePlayerRoot::SeqUniquePlayerRoot' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_GetCurrentSeqUniquePlayerRoot, CallFunc_GetCurrentBrainCrashSequencerInfo_BrainCrashSequencerInfo) == 0x000008, "Member 'BP_BrainCrashManager_C_GetCurrentSeqUniquePlayerRoot::CallFunc_GetCurrentBrainCrashSequencerInfo_BrainCrashSequencerInfo' has a wrong offset!");

// Function BP_BrainCrashManager.BP_BrainCrashManager_C.GetCurrentSeqUniqueEnemyRoot
// 0x0048 (0x0048 - 0x0000)
struct BP_BrainCrashManager_C_GetCurrentSeqUniqueEnemyRoot final
{
public:
	class ABP_EventCameraRoot_C*                  SeqUniqueEnemyRoot;                                // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFBrainCrashSequencerInfo              CallFunc_GetCurrentBrainCrashSequencerInfo_BrainCrashSequencerInfo; // 0x0008(0x0040)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrainCrashManager_C_GetCurrentSeqUniqueEnemyRoot) == 0x000008, "Wrong alignment on BP_BrainCrashManager_C_GetCurrentSeqUniqueEnemyRoot");
static_assert(sizeof(BP_BrainCrashManager_C_GetCurrentSeqUniqueEnemyRoot) == 0x000048, "Wrong size on BP_BrainCrashManager_C_GetCurrentSeqUniqueEnemyRoot");
static_assert(offsetof(BP_BrainCrashManager_C_GetCurrentSeqUniqueEnemyRoot, SeqUniqueEnemyRoot) == 0x000000, "Member 'BP_BrainCrashManager_C_GetCurrentSeqUniqueEnemyRoot::SeqUniqueEnemyRoot' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_GetCurrentSeqUniqueEnemyRoot, CallFunc_GetCurrentBrainCrashSequencerInfo_BrainCrashSequencerInfo) == 0x000008, "Member 'BP_BrainCrashManager_C_GetCurrentSeqUniqueEnemyRoot::CallFunc_GetCurrentBrainCrashSequencerInfo_BrainCrashSequencerInfo' has a wrong offset!");

// Function BP_BrainCrashManager.BP_BrainCrashManager_C.GetCurrentBrainCrashSequencerInfo
// 0x0040 (0x0040 - 0x0000)
struct BP_BrainCrashManager_C_GetCurrentBrainCrashSequencerInfo final
{
public:
	struct FFBrainCrashSequencerInfo              BrainCrashSequencerInfo;                           // 0x0000(0x0040)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrainCrashManager_C_GetCurrentBrainCrashSequencerInfo) == 0x000008, "Wrong alignment on BP_BrainCrashManager_C_GetCurrentBrainCrashSequencerInfo");
static_assert(sizeof(BP_BrainCrashManager_C_GetCurrentBrainCrashSequencerInfo) == 0x000040, "Wrong size on BP_BrainCrashManager_C_GetCurrentBrainCrashSequencerInfo");
static_assert(offsetof(BP_BrainCrashManager_C_GetCurrentBrainCrashSequencerInfo, BrainCrashSequencerInfo) == 0x000000, "Member 'BP_BrainCrashManager_C_GetCurrentBrainCrashSequencerInfo::BrainCrashSequencerInfo' has a wrong offset!");

// Function BP_BrainCrashManager.BP_BrainCrashManager_C.CV_LoadCrashVision
// 0x0010 (0x0010 - 0x0000)
struct BP_BrainCrashManager_C_CV_LoadCrashVision final
{
public:
	int32                                         CrashVisionIndex;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PlayerIndex;                                       // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattleCharacter_C*                   TargetEnemy;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrainCrashManager_C_CV_LoadCrashVision) == 0x000008, "Wrong alignment on BP_BrainCrashManager_C_CV_LoadCrashVision");
static_assert(sizeof(BP_BrainCrashManager_C_CV_LoadCrashVision) == 0x000010, "Wrong size on BP_BrainCrashManager_C_CV_LoadCrashVision");
static_assert(offsetof(BP_BrainCrashManager_C_CV_LoadCrashVision, CrashVisionIndex) == 0x000000, "Member 'BP_BrainCrashManager_C_CV_LoadCrashVision::CrashVisionIndex' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_LoadCrashVision, PlayerIndex) == 0x000004, "Member 'BP_BrainCrashManager_C_CV_LoadCrashVision::PlayerIndex' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_LoadCrashVision, TargetEnemy) == 0x000008, "Member 'BP_BrainCrashManager_C_CV_LoadCrashVision::TargetEnemy' has a wrong offset!");

// Function BP_BrainCrashManager.BP_BrainCrashManager_C.CV_LoadNextCrashVision
// 0x0014 (0x0014 - 0x0000)
struct BP_BrainCrashManager_C_CV_LoadNextCrashVision final
{
public:
	int32                                         PlayerIndex;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         _index;                                            // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BrainCrashManager_C_CV_LoadNextCrashVision) == 0x000004, "Wrong alignment on BP_BrainCrashManager_C_CV_LoadNextCrashVision");
static_assert(sizeof(BP_BrainCrashManager_C_CV_LoadNextCrashVision) == 0x000014, "Wrong size on BP_BrainCrashManager_C_CV_LoadNextCrashVision");
static_assert(offsetof(BP_BrainCrashManager_C_CV_LoadNextCrashVision, PlayerIndex) == 0x000000, "Member 'BP_BrainCrashManager_C_CV_LoadNextCrashVision::PlayerIndex' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_LoadNextCrashVision, _index) == 0x000004, "Member 'BP_BrainCrashManager_C_CV_LoadNextCrashVision::_index' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_LoadNextCrashVision, CallFunc_Subtract_IntInt_ReturnValue) == 0x000008, "Member 'BP_BrainCrashManager_C_CV_LoadNextCrashVision::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_LoadNextCrashVision, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_BrainCrashManager_C_CV_LoadNextCrashVision::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_LoadNextCrashVision, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000010, "Member 'BP_BrainCrashManager_C_CV_LoadNextCrashVision::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_BrainCrashManager.BP_BrainCrashManager_C.CV_ChangeNextCrashVisionIndex
// 0x0050 (0x0050 - 0x0000)
struct BP_BrainCrashManager_C_CV_ChangeNextCrashVisionIndex final
{
public:
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DB6[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager_1;         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSCharacterBase*                       CallFunc_GetPlayer_ReturnValue;                    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSCharacterBase*                       CallFunc_GetPlayer_ReturnValue_1;                  // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattlePlayer_C*                      K2Node_DynamicCast_AsRSBattle_Player;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_PrivateUpdateDither_Finish;               // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_PrivateUpdateDither_Finish_1;             // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DB7[0x5];                                     // 0x0033(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ARSCharacterBase*>               K2Node_MakeArray_Array;                            // 0x0038(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BrainCrashManager_C_CV_ChangeNextCrashVisionIndex) == 0x000008, "Wrong alignment on BP_BrainCrashManager_C_CV_ChangeNextCrashVisionIndex");
static_assert(sizeof(BP_BrainCrashManager_C_CV_ChangeNextCrashVisionIndex) == 0x000050, "Wrong size on BP_BrainCrashManager_C_CV_ChangeNextCrashVisionIndex");
static_assert(offsetof(BP_BrainCrashManager_C_CV_ChangeNextCrashVisionIndex, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000000, "Member 'BP_BrainCrashManager_C_CV_ChangeNextCrashVisionIndex::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_ChangeNextCrashVisionIndex, CallFunc_GetPlayerManager_PlayerManager) == 0x000008, "Member 'BP_BrainCrashManager_C_CV_ChangeNextCrashVisionIndex::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_ChangeNextCrashVisionIndex, CallFunc_GetPlayerManager_PlayerManager_1) == 0x000010, "Member 'BP_BrainCrashManager_C_CV_ChangeNextCrashVisionIndex::CallFunc_GetPlayerManager_PlayerManager_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_ChangeNextCrashVisionIndex, CallFunc_GetPlayer_ReturnValue) == 0x000018, "Member 'BP_BrainCrashManager_C_CV_ChangeNextCrashVisionIndex::CallFunc_GetPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_ChangeNextCrashVisionIndex, CallFunc_GetPlayer_ReturnValue_1) == 0x000020, "Member 'BP_BrainCrashManager_C_CV_ChangeNextCrashVisionIndex::CallFunc_GetPlayer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_ChangeNextCrashVisionIndex, K2Node_DynamicCast_AsRSBattle_Player) == 0x000028, "Member 'BP_BrainCrashManager_C_CV_ChangeNextCrashVisionIndex::K2Node_DynamicCast_AsRSBattle_Player' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_ChangeNextCrashVisionIndex, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_BrainCrashManager_C_CV_ChangeNextCrashVisionIndex::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_ChangeNextCrashVisionIndex, CallFunc_PrivateUpdateDither_Finish) == 0x000031, "Member 'BP_BrainCrashManager_C_CV_ChangeNextCrashVisionIndex::CallFunc_PrivateUpdateDither_Finish' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_ChangeNextCrashVisionIndex, CallFunc_PrivateUpdateDither_Finish_1) == 0x000032, "Member 'BP_BrainCrashManager_C_CV_ChangeNextCrashVisionIndex::CallFunc_PrivateUpdateDither_Finish_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_ChangeNextCrashVisionIndex, K2Node_MakeArray_Array) == 0x000038, "Member 'BP_BrainCrashManager_C_CV_ChangeNextCrashVisionIndex::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_ChangeNextCrashVisionIndex, CallFunc_Add_IntInt_ReturnValue) == 0x000048, "Member 'BP_BrainCrashManager_C_CV_ChangeNextCrashVisionIndex::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_ChangeNextCrashVisionIndex, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00004C, "Member 'BP_BrainCrashManager_C_CV_ChangeNextCrashVisionIndex::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_BrainCrashManager.BP_BrainCrashManager_C.CV_GetEnemySequencer
// 0x0100 (0x0100 - 0x0000)
struct BP_BrainCrashManager_C_CV_GetEnemySequencer final
{
public:
	class ARSBattleCharacter_C*                   TargetEnemy;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class ULevelSequence>          Sequencer;                                         // 0x0008(0x0028)(Parm, OutParm, HasGetValueTypeHash)
	class FName                                   _EnemyName;                                        // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DB8[0x3];                                     // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DB9[0x2];                                     // 0x0046(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DBA[0x2];                                     // 0x004E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DBB[0x3];                                     // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0058(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TScriptInterface<class IRSUniqueIdInterface>  CallFunc_GetUniqueName_self_CastInput;             // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FName                                   CallFunc_GetUniqueName_ReturnValue;                // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFCrashVisionEnemyInfo                 CallFunc_GetDataTableRowFromName_OutRow;           // 0x0080(0x0038)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DBC[0x7];                                     // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_LeftChop_ReturnValue;                     // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DBD[0x3];                                     // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrainCrashManager_C_CV_GetEnemySequencer) == 0x000008, "Wrong alignment on BP_BrainCrashManager_C_CV_GetEnemySequencer");
static_assert(sizeof(BP_BrainCrashManager_C_CV_GetEnemySequencer) == 0x000100, "Wrong size on BP_BrainCrashManager_C_CV_GetEnemySequencer");
static_assert(offsetof(BP_BrainCrashManager_C_CV_GetEnemySequencer, TargetEnemy) == 0x000000, "Member 'BP_BrainCrashManager_C_CV_GetEnemySequencer::TargetEnemy' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_GetEnemySequencer, Sequencer) == 0x000008, "Member 'BP_BrainCrashManager_C_CV_GetEnemySequencer::Sequencer' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_GetEnemySequencer, _EnemyName) == 0x000030, "Member 'BP_BrainCrashManager_C_CV_GetEnemySequencer::_EnemyName' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_GetEnemySequencer, Temp_int_Array_Index_Variable) == 0x000038, "Member 'BP_BrainCrashManager_C_CV_GetEnemySequencer::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_GetEnemySequencer, CallFunc_IsValid_ReturnValue) == 0x00003C, "Member 'BP_BrainCrashManager_C_CV_GetEnemySequencer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_GetEnemySequencer, Temp_int_Loop_Num_Variable) == 0x000040, "Member 'BP_BrainCrashManager_C_CV_GetEnemySequencer::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_GetEnemySequencer, Temp_bool_True_if_break_was_hit_Variable) == 0x000044, "Member 'BP_BrainCrashManager_C_CV_GetEnemySequencer::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_GetEnemySequencer, CallFunc_Not_PreBool_ReturnValue) == 0x000045, "Member 'BP_BrainCrashManager_C_CV_GetEnemySequencer::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_GetEnemySequencer, Temp_int_Loop_Counter_Variable) == 0x000048, "Member 'BP_BrainCrashManager_C_CV_GetEnemySequencer::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_GetEnemySequencer, CallFunc_IsValid_ReturnValue_1) == 0x00004C, "Member 'BP_BrainCrashManager_C_CV_GetEnemySequencer::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_GetEnemySequencer, CallFunc_Less_IntInt_ReturnValue) == 0x00004D, "Member 'BP_BrainCrashManager_C_CV_GetEnemySequencer::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_GetEnemySequencer, CallFunc_Add_IntInt_ReturnValue) == 0x000050, "Member 'BP_BrainCrashManager_C_CV_GetEnemySequencer::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_GetEnemySequencer, CallFunc_BooleanAND_ReturnValue) == 0x000054, "Member 'BP_BrainCrashManager_C_CV_GetEnemySequencer::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_GetEnemySequencer, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000058, "Member 'BP_BrainCrashManager_C_CV_GetEnemySequencer::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_GetEnemySequencer, CallFunc_GetUniqueName_self_CastInput) == 0x000068, "Member 'BP_BrainCrashManager_C_CV_GetEnemySequencer::CallFunc_GetUniqueName_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_GetEnemySequencer, CallFunc_GetUniqueName_ReturnValue) == 0x000078, "Member 'BP_BrainCrashManager_C_CV_GetEnemySequencer::CallFunc_GetUniqueName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_GetEnemySequencer, CallFunc_GetDataTableRowFromName_OutRow) == 0x000080, "Member 'BP_BrainCrashManager_C_CV_GetEnemySequencer::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_GetEnemySequencer, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0000B8, "Member 'BP_BrainCrashManager_C_CV_GetEnemySequencer::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_GetEnemySequencer, CallFunc_Conv_NameToString_ReturnValue) == 0x0000C0, "Member 'BP_BrainCrashManager_C_CV_GetEnemySequencer::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_GetEnemySequencer, CallFunc_LeftChop_ReturnValue) == 0x0000D0, "Member 'BP_BrainCrashManager_C_CV_GetEnemySequencer::CallFunc_LeftChop_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_GetEnemySequencer, CallFunc_Concat_StrStr_ReturnValue) == 0x0000E0, "Member 'BP_BrainCrashManager_C_CV_GetEnemySequencer::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_GetEnemySequencer, CallFunc_Conv_StringToName_ReturnValue) == 0x0000F0, "Member 'BP_BrainCrashManager_C_CV_GetEnemySequencer::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_GetEnemySequencer, CallFunc_EqualEqual_NameName_ReturnValue) == 0x0000F8, "Member 'BP_BrainCrashManager_C_CV_GetEnemySequencer::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_GetEnemySequencer, CallFunc_Array_Length_ReturnValue) == 0x0000FC, "Member 'BP_BrainCrashManager_C_CV_GetEnemySequencer::CallFunc_Array_Length_ReturnValue' has a wrong offset!");

// Function BP_BrainCrashManager.BP_BrainCrashManager_C.CV_IsExistNextCrashVision
// 0x0048 (0x0048 - 0x0000)
struct BP_BrainCrashManager_C_CV_IsExistNextCrashVision final
{
public:
	bool                                          IsExistNextCrashVision;                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DBE[0x5];                                     // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ARSCharacterBase*>               K2Node_MakeArray_Array;                            // 0x0008(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerID                                     CallFunc_RequestCrashVision_ReturnValue;           // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DBF[0x6];                                     // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ARSCharacterBase*>               K2Node_Select_Default;                             // 0x0020(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class ARSCharacterBase*                       CallFunc_GetNextCrashVisionTarget_ReturnValue;     // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattleCharacter_C*                   K2Node_DynamicCast_AsRSBattle_Character;           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BrainCrashManager_C_CV_IsExistNextCrashVision) == 0x000008, "Wrong alignment on BP_BrainCrashManager_C_CV_IsExistNextCrashVision");
static_assert(sizeof(BP_BrainCrashManager_C_CV_IsExistNextCrashVision) == 0x000048, "Wrong size on BP_BrainCrashManager_C_CV_IsExistNextCrashVision");
static_assert(offsetof(BP_BrainCrashManager_C_CV_IsExistNextCrashVision, IsExistNextCrashVision) == 0x000000, "Member 'BP_BrainCrashManager_C_CV_IsExistNextCrashVision::IsExistNextCrashVision' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_IsExistNextCrashVision, Temp_bool_Variable) == 0x000001, "Member 'BP_BrainCrashManager_C_CV_IsExistNextCrashVision::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_IsExistNextCrashVision, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000002, "Member 'BP_BrainCrashManager_C_CV_IsExistNextCrashVision::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_IsExistNextCrashVision, K2Node_MakeArray_Array) == 0x000008, "Member 'BP_BrainCrashManager_C_CV_IsExistNextCrashVision::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_IsExistNextCrashVision, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000018, "Member 'BP_BrainCrashManager_C_CV_IsExistNextCrashVision::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_IsExistNextCrashVision, CallFunc_RequestCrashVision_ReturnValue) == 0x000019, "Member 'BP_BrainCrashManager_C_CV_IsExistNextCrashVision::CallFunc_RequestCrashVision_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_IsExistNextCrashVision, K2Node_Select_Default) == 0x000020, "Member 'BP_BrainCrashManager_C_CV_IsExistNextCrashVision::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_IsExistNextCrashVision, CallFunc_GetNextCrashVisionTarget_ReturnValue) == 0x000030, "Member 'BP_BrainCrashManager_C_CV_IsExistNextCrashVision::CallFunc_GetNextCrashVisionTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_IsExistNextCrashVision, K2Node_DynamicCast_AsRSBattle_Character) == 0x000038, "Member 'BP_BrainCrashManager_C_CV_IsExistNextCrashVision::K2Node_DynamicCast_AsRSBattle_Character' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_IsExistNextCrashVision, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_BrainCrashManager_C_CV_IsExistNextCrashVision::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_BrainCrashManager.BP_BrainCrashManager_C.PrivateFinishBrainCrashSequencer_CVLoop
// 0x01C0 (0x01C0 - 0x0000)
struct BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer_CVLoop final
{
public:
	class ARSCharacterBase*                       MainPlayer;                                        // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DC0[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_PlayerInterface_C> K2Node_DynamicCast_AsBPI_Player_Interface;         // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_PlayerCameraReset_Dummy;                  // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DC1[0x5];                                     // 0x0033(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ADropItemManager*                       CallFunc_GetDropItemManager_Drop_Item_Manager;     // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattleEnemy_C*                       K2Node_DynamicCast_AsRSBattle_Enemy;               // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DC2[0x2];                                     // 0x004A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult;      // 0x0050(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue;         // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DC3[0x7];                                     // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BrainCrash_C>     K2Node_DynamicCast_AsBPI_Brain_Crash;              // 0x00E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DC4[0x3];                                     // 0x00F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BrainCrash_C>     K2Node_DynamicCast_AsBPI_Brain_Crash_1;            // 0x00F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DC5[0x3];                                     // 0x0109(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BrainCrash_C>     K2Node_DynamicCast_AsBPI_Brain_Crash_2;            // 0x0110(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DC6[0x6];                                     // 0x0122(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerInterface_C> K2Node_DynamicCast_AsBPI_Player_Interface_1;       // 0x0128(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DC7[0x3];                                     // 0x0139(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ProcEndBrainCrash_bDummy;                 // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DC8[0x7];                                     // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerInterface_C> K2Node_DynamicCast_AsBPI_Player_Interface_2;       // 0x0148(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ProcEndBrainCrash_bDummy_1;               // 0x0159(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DC9[0x6];                                     // 0x015A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IEventInterface>       K2Node_DynamicCast_AsEvent_Interface;              // 0x0160(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DCA[0x7];                                     // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CharacterParamater_C> CallFunc_IsDead_self_CastInput;                    // 0x0178(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDead_bDead;                             // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DCB[0x3];                                     // 0x0189(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0191(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DCC[0x6];                                     // 0x0192(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSCharacterBase*                       CallFunc_GetPlayer_ReturnValue;                    // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class ICameraInterface>      K2Node_DynamicCast_AsCamera_Interface;             // 0x01A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetPlayerCameraViewTarget_ReturnValue;    // 0x01B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer_CVLoop) == 0x000008, "Wrong alignment on BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer_CVLoop");
static_assert(sizeof(BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer_CVLoop) == 0x0001C0, "Wrong size on BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer_CVLoop");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer_CVLoop, MainPlayer) == 0x000000, "Member 'BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer_CVLoop::MainPlayer' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer_CVLoop, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer_CVLoop::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer_CVLoop, CallFunc_IsValid_ReturnValue) == 0x00000C, "Member 'BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer_CVLoop::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer_CVLoop, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer_CVLoop::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer_CVLoop, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000014, "Member 'BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer_CVLoop::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer_CVLoop, K2Node_DynamicCast_AsBPI_Player_Interface) == 0x000020, "Member 'BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer_CVLoop::K2Node_DynamicCast_AsBPI_Player_Interface' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer_CVLoop, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer_CVLoop::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer_CVLoop, CallFunc_IsValid_ReturnValue_1) == 0x000031, "Member 'BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer_CVLoop::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer_CVLoop, CallFunc_PlayerCameraReset_Dummy) == 0x000032, "Member 'BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer_CVLoop::CallFunc_PlayerCameraReset_Dummy' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer_CVLoop, CallFunc_GetDropItemManager_Drop_Item_Manager) == 0x000038, "Member 'BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer_CVLoop::CallFunc_GetDropItemManager_Drop_Item_Manager' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer_CVLoop, K2Node_DynamicCast_AsRSBattle_Enemy) == 0x000040, "Member 'BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer_CVLoop::K2Node_DynamicCast_AsRSBattle_Enemy' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer_CVLoop, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer_CVLoop::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer_CVLoop, CallFunc_IsValid_ReturnValue_2) == 0x000049, "Member 'BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer_CVLoop::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer_CVLoop, CallFunc_Array_Length_ReturnValue) == 0x00004C, "Member 'BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer_CVLoop::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer_CVLoop, CallFunc_K2_SetActorTransform_SweepHitResult) == 0x000050, "Member 'BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer_CVLoop::CallFunc_K2_SetActorTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer_CVLoop, CallFunc_K2_SetActorTransform_ReturnValue) == 0x0000D8, "Member 'BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer_CVLoop::CallFunc_K2_SetActorTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer_CVLoop, K2Node_DynamicCast_AsBPI_Brain_Crash) == 0x0000E0, "Member 'BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer_CVLoop::K2Node_DynamicCast_AsBPI_Brain_Crash' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer_CVLoop, K2Node_DynamicCast_bSuccess_2) == 0x0000F0, "Member 'BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer_CVLoop::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer_CVLoop, CallFunc_Array_Length_ReturnValue_1) == 0x0000F4, "Member 'BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer_CVLoop::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer_CVLoop, K2Node_DynamicCast_AsBPI_Brain_Crash_1) == 0x0000F8, "Member 'BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer_CVLoop::K2Node_DynamicCast_AsBPI_Brain_Crash_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer_CVLoop, K2Node_DynamicCast_bSuccess_3) == 0x000108, "Member 'BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer_CVLoop::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer_CVLoop, Temp_int_Array_Index_Variable) == 0x00010C, "Member 'BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer_CVLoop::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer_CVLoop, K2Node_DynamicCast_AsBPI_Brain_Crash_2) == 0x000110, "Member 'BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer_CVLoop::K2Node_DynamicCast_AsBPI_Brain_Crash_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer_CVLoop, K2Node_DynamicCast_bSuccess_4) == 0x000120, "Member 'BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer_CVLoop::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer_CVLoop, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000121, "Member 'BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer_CVLoop::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer_CVLoop, K2Node_DynamicCast_AsBPI_Player_Interface_1) == 0x000128, "Member 'BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer_CVLoop::K2Node_DynamicCast_AsBPI_Player_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer_CVLoop, K2Node_DynamicCast_bSuccess_5) == 0x000138, "Member 'BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer_CVLoop::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer_CVLoop, CallFunc_Array_Length_ReturnValue_2) == 0x00013C, "Member 'BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer_CVLoop::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer_CVLoop, CallFunc_ProcEndBrainCrash_bDummy) == 0x000140, "Member 'BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer_CVLoop::CallFunc_ProcEndBrainCrash_bDummy' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer_CVLoop, K2Node_DynamicCast_AsBPI_Player_Interface_2) == 0x000148, "Member 'BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer_CVLoop::K2Node_DynamicCast_AsBPI_Player_Interface_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer_CVLoop, K2Node_DynamicCast_bSuccess_6) == 0x000158, "Member 'BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer_CVLoop::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer_CVLoop, CallFunc_ProcEndBrainCrash_bDummy_1) == 0x000159, "Member 'BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer_CVLoop::CallFunc_ProcEndBrainCrash_bDummy_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer_CVLoop, K2Node_DynamicCast_AsEvent_Interface) == 0x000160, "Member 'BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer_CVLoop::K2Node_DynamicCast_AsEvent_Interface' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer_CVLoop, K2Node_DynamicCast_bSuccess_7) == 0x000170, "Member 'BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer_CVLoop::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer_CVLoop, CallFunc_IsDead_self_CastInput) == 0x000178, "Member 'BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer_CVLoop::CallFunc_IsDead_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer_CVLoop, CallFunc_IsDead_bDead) == 0x000188, "Member 'BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer_CVLoop::CallFunc_IsDead_bDead' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer_CVLoop, Temp_int_Loop_Num_Variable) == 0x00018C, "Member 'BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer_CVLoop::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer_CVLoop, CallFunc_Less_IntInt_ReturnValue) == 0x000190, "Member 'BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer_CVLoop::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer_CVLoop, CallFunc_IsValid_ReturnValue_3) == 0x000191, "Member 'BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer_CVLoop::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer_CVLoop, CallFunc_GetPlayerManager_PlayerManager) == 0x000198, "Member 'BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer_CVLoop::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer_CVLoop, CallFunc_GetPlayer_ReturnValue) == 0x0001A0, "Member 'BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer_CVLoop::CallFunc_GetPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer_CVLoop, K2Node_DynamicCast_AsCamera_Interface) == 0x0001A8, "Member 'BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer_CVLoop::K2Node_DynamicCast_AsCamera_Interface' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer_CVLoop, K2Node_DynamicCast_bSuccess_8) == 0x0001B8, "Member 'BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer_CVLoop::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer_CVLoop, CallFunc_SetPlayerCameraViewTarget_ReturnValue) == 0x0001B9, "Member 'BP_BrainCrashManager_C_PrivateFinishBrainCrashSequencer_CVLoop::CallFunc_SetPlayerCameraViewTarget_ReturnValue' has a wrong offset!");

// Function BP_BrainCrashManager.BP_BrainCrashManager_C.UpdateHologramActor
// 0x0058 (0x0058 - 0x0000)
struct BP_BrainCrashManager_C_UpdateHologramActor final
{
public:
	bool                                          IsHologramEnable;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DCD[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DCE[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DCF[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSLevelSequenceActor*                  CallFunc_GetCurrentSequencer_Sequencer;            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetSequenceInSpawnedActorListFromClass_ReturnValue; // 0x0030(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DD0[0x3];                                     // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_EventPlayerHologram_C*              K2Node_DynamicCast_AsBP_Event_Player_Hologram;     // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DD1[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrainCrashManager_C_UpdateHologramActor) == 0x000008, "Wrong alignment on BP_BrainCrashManager_C_UpdateHologramActor");
static_assert(sizeof(BP_BrainCrashManager_C_UpdateHologramActor) == 0x000058, "Wrong size on BP_BrainCrashManager_C_UpdateHologramActor");
static_assert(offsetof(BP_BrainCrashManager_C_UpdateHologramActor, IsHologramEnable) == 0x000000, "Member 'BP_BrainCrashManager_C_UpdateHologramActor::IsHologramEnable' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_UpdateHologramActor, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_BrainCrashManager_C_UpdateHologramActor::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_UpdateHologramActor, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_BrainCrashManager_C_UpdateHologramActor::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_UpdateHologramActor, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_BrainCrashManager_C_UpdateHologramActor::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_UpdateHologramActor, Temp_int_Array_Index_Variable_1) == 0x000010, "Member 'BP_BrainCrashManager_C_UpdateHologramActor::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_UpdateHologramActor, CallFunc_Array_Length_ReturnValue) == 0x000014, "Member 'BP_BrainCrashManager_C_UpdateHologramActor::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_UpdateHologramActor, Temp_int_Loop_Counter_Variable_1) == 0x000018, "Member 'BP_BrainCrashManager_C_UpdateHologramActor::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_UpdateHologramActor, CallFunc_Less_IntInt_ReturnValue) == 0x00001C, "Member 'BP_BrainCrashManager_C_UpdateHologramActor::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_UpdateHologramActor, CallFunc_Add_IntInt_ReturnValue_1) == 0x000020, "Member 'BP_BrainCrashManager_C_UpdateHologramActor::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_UpdateHologramActor, CallFunc_GetCurrentSequencer_Sequencer) == 0x000028, "Member 'BP_BrainCrashManager_C_UpdateHologramActor::CallFunc_GetCurrentSequencer_Sequencer' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_UpdateHologramActor, CallFunc_GetSequenceInSpawnedActorListFromClass_ReturnValue) == 0x000030, "Member 'BP_BrainCrashManager_C_UpdateHologramActor::CallFunc_GetSequenceInSpawnedActorListFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_UpdateHologramActor, CallFunc_Array_Length_ReturnValue_1) == 0x000040, "Member 'BP_BrainCrashManager_C_UpdateHologramActor::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_UpdateHologramActor, CallFunc_Less_IntInt_ReturnValue_1) == 0x000044, "Member 'BP_BrainCrashManager_C_UpdateHologramActor::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_UpdateHologramActor, K2Node_DynamicCast_AsBP_Event_Player_Hologram) == 0x000048, "Member 'BP_BrainCrashManager_C_UpdateHologramActor::K2Node_DynamicCast_AsBP_Event_Player_Hologram' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_UpdateHologramActor, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'BP_BrainCrashManager_C_UpdateHologramActor::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_UpdateHologramActor, CallFunc_Array_Add_ReturnValue) == 0x000054, "Member 'BP_BrainCrashManager_C_UpdateHologramActor::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_BrainCrashManager.BP_BrainCrashManager_C.CV_SetRemindPlayerMaterials
// 0x0048 (0x0048 - 0x0000)
struct BP_BrainCrashManager_C_CV_SetRemindPlayerMaterials final
{
public:
	int32                                         MaterialLastIndex;                                 // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DD2[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DD3[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_GetPlayer_ReturnValue;                    // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DD4[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue;                  // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumMaterials_ReturnValue;              // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BrainCrashManager_C_CV_SetRemindPlayerMaterials) == 0x000008, "Wrong alignment on BP_BrainCrashManager_C_CV_SetRemindPlayerMaterials");
static_assert(sizeof(BP_BrainCrashManager_C_CV_SetRemindPlayerMaterials) == 0x000048, "Wrong size on BP_BrainCrashManager_C_CV_SetRemindPlayerMaterials");
static_assert(offsetof(BP_BrainCrashManager_C_CV_SetRemindPlayerMaterials, MaterialLastIndex) == 0x000000, "Member 'BP_BrainCrashManager_C_CV_SetRemindPlayerMaterials::MaterialLastIndex' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_SetRemindPlayerMaterials, Temp_int_Variable) == 0x000004, "Member 'BP_BrainCrashManager_C_CV_SetRemindPlayerMaterials::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_SetRemindPlayerMaterials, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_BrainCrashManager_C_CV_SetRemindPlayerMaterials::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_SetRemindPlayerMaterials, CallFunc_GetPlayerManager_PlayerManager) == 0x000010, "Member 'BP_BrainCrashManager_C_CV_SetRemindPlayerMaterials::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_SetRemindPlayerMaterials, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_BrainCrashManager_C_CV_SetRemindPlayerMaterials::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_SetRemindPlayerMaterials, CallFunc_GetPlayer_ReturnValue) == 0x000020, "Member 'BP_BrainCrashManager_C_CV_SetRemindPlayerMaterials::CallFunc_GetPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_SetRemindPlayerMaterials, CallFunc_IsValid_ReturnValue_1) == 0x000028, "Member 'BP_BrainCrashManager_C_CV_SetRemindPlayerMaterials::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_SetRemindPlayerMaterials, CallFunc_GetMaterial_ReturnValue) == 0x000030, "Member 'BP_BrainCrashManager_C_CV_SetRemindPlayerMaterials::CallFunc_GetMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_SetRemindPlayerMaterials, CallFunc_GetNumMaterials_ReturnValue) == 0x000038, "Member 'BP_BrainCrashManager_C_CV_SetRemindPlayerMaterials::CallFunc_GetNumMaterials_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_SetRemindPlayerMaterials, CallFunc_Subtract_IntInt_ReturnValue) == 0x00003C, "Member 'BP_BrainCrashManager_C_CV_SetRemindPlayerMaterials::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_SetRemindPlayerMaterials, CallFunc_Array_Add_ReturnValue) == 0x000040, "Member 'BP_BrainCrashManager_C_CV_SetRemindPlayerMaterials::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_SetRemindPlayerMaterials, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000044, "Member 'BP_BrainCrashManager_C_CV_SetRemindPlayerMaterials::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_BrainCrashManager.BP_BrainCrashManager_C.CV_SetRestorePlayerMaterials
// 0x0030 (0x0030 - 0x0000)
struct BP_BrainCrashManager_C_CV_SetRestorePlayerMaterials final
{
public:
	int32                                         MaterialLastIndex;                                 // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSCharacterBase*                       CallFunc_GetPlayer_ReturnValue;                    // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BrainCrashManager_C_CV_SetRestorePlayerMaterials) == 0x000008, "Wrong alignment on BP_BrainCrashManager_C_CV_SetRestorePlayerMaterials");
static_assert(sizeof(BP_BrainCrashManager_C_CV_SetRestorePlayerMaterials) == 0x000030, "Wrong size on BP_BrainCrashManager_C_CV_SetRestorePlayerMaterials");
static_assert(offsetof(BP_BrainCrashManager_C_CV_SetRestorePlayerMaterials, MaterialLastIndex) == 0x000000, "Member 'BP_BrainCrashManager_C_CV_SetRestorePlayerMaterials::MaterialLastIndex' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_SetRestorePlayerMaterials, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_BrainCrashManager_C_CV_SetRestorePlayerMaterials::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_SetRestorePlayerMaterials, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_BrainCrashManager_C_CV_SetRestorePlayerMaterials::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_SetRestorePlayerMaterials, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_BrainCrashManager_C_CV_SetRestorePlayerMaterials::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_SetRestorePlayerMaterials, CallFunc_GetPlayerManager_PlayerManager) == 0x000010, "Member 'BP_BrainCrashManager_C_CV_SetRestorePlayerMaterials::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_SetRestorePlayerMaterials, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_BrainCrashManager_C_CV_SetRestorePlayerMaterials::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_SetRestorePlayerMaterials, CallFunc_GetPlayer_ReturnValue) == 0x000020, "Member 'BP_BrainCrashManager_C_CV_SetRestorePlayerMaterials::CallFunc_GetPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_SetRestorePlayerMaterials, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_BrainCrashManager_C_CV_SetRestorePlayerMaterials::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_SetRestorePlayerMaterials, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'BP_BrainCrashManager_C_CV_SetRestorePlayerMaterials::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_BrainCrashManager.BP_BrainCrashManager_C.CV_GotoNextCrashVision
// 0x01A8 (0x01A8 - 0x0000)
struct BP_BrainCrashManager_C_CV_GotoNextCrashVision final
{
public:
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DD5[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DD6[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_GetPlayer_ReturnValue;                    // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DD7[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DD8[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_MenuPlayerBase_C*                   CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DD9[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSLevelSequenceActor*                  CallFunc_GetCurrentSubSequencer_SubSequencer;      // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_MenuPlayerBase_C*                   CallFunc_Array_Get_Item_1;                         // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue;            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DDA[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelSequence*                         CallFunc_GetSequence_ReturnValue;                  // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSLevelSequenceActor*                  CallFunc_GetCurrentSubSequencer_SubSequencer_1;    // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DDB[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue_1;          // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequence*                         CallFunc_GetSequence_ReturnValue_1;                // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DDC[0x3];                                     // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_EnemyInterface_C> K2Node_DynamicCast_AsBPI_Enemy_Interface;          // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BindingCrashVisionEnemy_NewParam;         // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DDD[0x1];                                     // 0x00AB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSLevelSequenceActor*                  CallFunc_GetCurrentSequencer_Sequencer;            // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue_2;          // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FQualifiedFrameTime                    CallFunc_GetEndTime_ReturnValue;                   // 0x00C0(0x0010)(NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager_1;         // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFBrainCrashSequencerInfo              CallFunc_GetCurrentBrainCrashSequencerInfo_BrainCrashSequencerInfo; // 0x00D8(0x0040)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSCharacterBase*                       CallFunc_GetPlayer_ReturnValue_1;                  // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DDE[0x7];                                     // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSLevelSequenceActor*                  CallFunc_GetCurrentSequencer_Sequencer_1;          // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSLevelSequenceActor*                  CallFunc_GetCurrentSequencer_Sequencer_2;          // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue_3;          // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSLevelSequenceActor*                  CallFunc_GetCurrentEnemySequencer_Sequencer;       // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSLevelSequenceActor*                  CallFunc_GetCurrentEnemySequencer_Sequencer_1;     // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue_4;          // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue_5;          // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSLevelSequenceActor*                  CallFunc_GetCurrentSequencer_Sequencer_3;          // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue_6;          // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CV_IsExistNextCrashVision_IsExistNextCrashVision; // 0x0174(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DDF[0x3];                                     // 0x0175(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSLevelSequenceActor*                  CallFunc_GetCurrentSequencer_Sequencer_4;          // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSLevelSequenceActor*                  CallFunc_GetCurrentSequencer_Sequencer_5;          // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue_7;          // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue_8;          // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFrameNumber                           CallFunc_BreakQualifiedFrameTime_Frame;            // 0x0198(0x0004)(NoDestructor, HasGetValueTypeHash)
	struct FFrameRate                             CallFunc_BreakQualifiedFrameTime_FrameRate;        // 0x019C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakQualifiedFrameTime_SubFrame;         // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrainCrashManager_C_CV_GotoNextCrashVision) == 0x000008, "Wrong alignment on BP_BrainCrashManager_C_CV_GotoNextCrashVision");
static_assert(sizeof(BP_BrainCrashManager_C_CV_GotoNextCrashVision) == 0x0001A8, "Wrong size on BP_BrainCrashManager_C_CV_GotoNextCrashVision");
static_assert(offsetof(BP_BrainCrashManager_C_CV_GotoNextCrashVision, Temp_int_Loop_Counter_Variable) == 0x000000, "Member 'BP_BrainCrashManager_C_CV_GotoNextCrashVision::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_GotoNextCrashVision, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'BP_BrainCrashManager_C_CV_GotoNextCrashVision::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_GotoNextCrashVision, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000008, "Member 'BP_BrainCrashManager_C_CV_GotoNextCrashVision::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_GotoNextCrashVision, CallFunc_GetPlayerManager_PlayerManager) == 0x000010, "Member 'BP_BrainCrashManager_C_CV_GotoNextCrashVision::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_GotoNextCrashVision, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_BrainCrashManager_C_CV_GotoNextCrashVision::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_GotoNextCrashVision, CallFunc_GetPlayer_ReturnValue) == 0x000020, "Member 'BP_BrainCrashManager_C_CV_GotoNextCrashVision::CallFunc_GetPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_GotoNextCrashVision, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000028, "Member 'BP_BrainCrashManager_C_CV_GotoNextCrashVision::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_GotoNextCrashVision, Temp_int_Loop_Num_Variable) == 0x00002C, "Member 'BP_BrainCrashManager_C_CV_GotoNextCrashVision::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_GotoNextCrashVision, CallFunc_Subtract_IntInt_ReturnValue) == 0x000030, "Member 'BP_BrainCrashManager_C_CV_GotoNextCrashVision::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_GotoNextCrashVision, CallFunc_Less_IntInt_ReturnValue) == 0x000034, "Member 'BP_BrainCrashManager_C_CV_GotoNextCrashVision::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_GotoNextCrashVision, CallFunc_Array_Get_Item) == 0x000038, "Member 'BP_BrainCrashManager_C_CV_GotoNextCrashVision::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_GotoNextCrashVision, CallFunc_IsValid_ReturnValue_1) == 0x000040, "Member 'BP_BrainCrashManager_C_CV_GotoNextCrashVision::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_GotoNextCrashVision, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000044, "Member 'BP_BrainCrashManager_C_CV_GotoNextCrashVision::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_GotoNextCrashVision, CallFunc_GetCurrentSubSequencer_SubSequencer) == 0x000048, "Member 'BP_BrainCrashManager_C_CV_GotoNextCrashVision::CallFunc_GetCurrentSubSequencer_SubSequencer' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_GotoNextCrashVision, CallFunc_Array_Get_Item_1) == 0x000050, "Member 'BP_BrainCrashManager_C_CV_GotoNextCrashVision::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_GotoNextCrashVision, CallFunc_GetSequencePlayer_ReturnValue) == 0x000058, "Member 'BP_BrainCrashManager_C_CV_GotoNextCrashVision::CallFunc_GetSequencePlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_GotoNextCrashVision, CallFunc_IsValid_ReturnValue_2) == 0x000060, "Member 'BP_BrainCrashManager_C_CV_GotoNextCrashVision::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_GotoNextCrashVision, CallFunc_GetSequence_ReturnValue) == 0x000068, "Member 'BP_BrainCrashManager_C_CV_GotoNextCrashVision::CallFunc_GetSequence_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_GotoNextCrashVision, CallFunc_GetCurrentSubSequencer_SubSequencer_1) == 0x000070, "Member 'BP_BrainCrashManager_C_CV_GotoNextCrashVision::CallFunc_GetCurrentSubSequencer_SubSequencer_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_GotoNextCrashVision, CallFunc_IsValid_ReturnValue_3) == 0x000078, "Member 'BP_BrainCrashManager_C_CV_GotoNextCrashVision::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_GotoNextCrashVision, CallFunc_GetSequencePlayer_ReturnValue_1) == 0x000080, "Member 'BP_BrainCrashManager_C_CV_GotoNextCrashVision::CallFunc_GetSequencePlayer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_GotoNextCrashVision, CallFunc_GetSequence_ReturnValue_1) == 0x000088, "Member 'BP_BrainCrashManager_C_CV_GotoNextCrashVision::CallFunc_GetSequence_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_GotoNextCrashVision, Temp_int_Array_Index_Variable) == 0x000090, "Member 'BP_BrainCrashManager_C_CV_GotoNextCrashVision::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_GotoNextCrashVision, CallFunc_IsValid_ReturnValue_4) == 0x000094, "Member 'BP_BrainCrashManager_C_CV_GotoNextCrashVision::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_GotoNextCrashVision, K2Node_DynamicCast_AsBPI_Enemy_Interface) == 0x000098, "Member 'BP_BrainCrashManager_C_CV_GotoNextCrashVision::K2Node_DynamicCast_AsBPI_Enemy_Interface' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_GotoNextCrashVision, K2Node_DynamicCast_bSuccess) == 0x0000A8, "Member 'BP_BrainCrashManager_C_CV_GotoNextCrashVision::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_GotoNextCrashVision, CallFunc_IsValid_ReturnValue_5) == 0x0000A9, "Member 'BP_BrainCrashManager_C_CV_GotoNextCrashVision::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_GotoNextCrashVision, CallFunc_BindingCrashVisionEnemy_NewParam) == 0x0000AA, "Member 'BP_BrainCrashManager_C_CV_GotoNextCrashVision::CallFunc_BindingCrashVisionEnemy_NewParam' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_GotoNextCrashVision, CallFunc_Array_Length_ReturnValue) == 0x0000AC, "Member 'BP_BrainCrashManager_C_CV_GotoNextCrashVision::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_GotoNextCrashVision, CallFunc_GetCurrentSequencer_Sequencer) == 0x0000B0, "Member 'BP_BrainCrashManager_C_CV_GotoNextCrashVision::CallFunc_GetCurrentSequencer_Sequencer' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_GotoNextCrashVision, CallFunc_GetSequencePlayer_ReturnValue_2) == 0x0000B8, "Member 'BP_BrainCrashManager_C_CV_GotoNextCrashVision::CallFunc_GetSequencePlayer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_GotoNextCrashVision, CallFunc_GetEndTime_ReturnValue) == 0x0000C0, "Member 'BP_BrainCrashManager_C_CV_GotoNextCrashVision::CallFunc_GetEndTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_GotoNextCrashVision, CallFunc_GetPlayerManager_PlayerManager_1) == 0x0000D0, "Member 'BP_BrainCrashManager_C_CV_GotoNextCrashVision::CallFunc_GetPlayerManager_PlayerManager_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_GotoNextCrashVision, CallFunc_GetCurrentBrainCrashSequencerInfo_BrainCrashSequencerInfo) == 0x0000D8, "Member 'BP_BrainCrashManager_C_CV_GotoNextCrashVision::CallFunc_GetCurrentBrainCrashSequencerInfo_BrainCrashSequencerInfo' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_GotoNextCrashVision, CallFunc_GetPlayer_ReturnValue_1) == 0x000118, "Member 'BP_BrainCrashManager_C_CV_GotoNextCrashVision::CallFunc_GetPlayer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_GotoNextCrashVision, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000120, "Member 'BP_BrainCrashManager_C_CV_GotoNextCrashVision::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_GotoNextCrashVision, CallFunc_GetCurrentSequencer_Sequencer_1) == 0x000128, "Member 'BP_BrainCrashManager_C_CV_GotoNextCrashVision::CallFunc_GetCurrentSequencer_Sequencer_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_GotoNextCrashVision, CallFunc_GetCurrentSequencer_Sequencer_2) == 0x000130, "Member 'BP_BrainCrashManager_C_CV_GotoNextCrashVision::CallFunc_GetCurrentSequencer_Sequencer_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_GotoNextCrashVision, CallFunc_GetSequencePlayer_ReturnValue_3) == 0x000138, "Member 'BP_BrainCrashManager_C_CV_GotoNextCrashVision::CallFunc_GetSequencePlayer_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_GotoNextCrashVision, CallFunc_GetCurrentEnemySequencer_Sequencer) == 0x000140, "Member 'BP_BrainCrashManager_C_CV_GotoNextCrashVision::CallFunc_GetCurrentEnemySequencer_Sequencer' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_GotoNextCrashVision, CallFunc_GetCurrentEnemySequencer_Sequencer_1) == 0x000148, "Member 'BP_BrainCrashManager_C_CV_GotoNextCrashVision::CallFunc_GetCurrentEnemySequencer_Sequencer_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_GotoNextCrashVision, CallFunc_GetSequencePlayer_ReturnValue_4) == 0x000150, "Member 'BP_BrainCrashManager_C_CV_GotoNextCrashVision::CallFunc_GetSequencePlayer_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_GotoNextCrashVision, CallFunc_GetSequencePlayer_ReturnValue_5) == 0x000158, "Member 'BP_BrainCrashManager_C_CV_GotoNextCrashVision::CallFunc_GetSequencePlayer_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_GotoNextCrashVision, CallFunc_GetCurrentSequencer_Sequencer_3) == 0x000160, "Member 'BP_BrainCrashManager_C_CV_GotoNextCrashVision::CallFunc_GetCurrentSequencer_Sequencer_3' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_GotoNextCrashVision, CallFunc_GetSequencePlayer_ReturnValue_6) == 0x000168, "Member 'BP_BrainCrashManager_C_CV_GotoNextCrashVision::CallFunc_GetSequencePlayer_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_GotoNextCrashVision, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000170, "Member 'BP_BrainCrashManager_C_CV_GotoNextCrashVision::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_GotoNextCrashVision, CallFunc_CV_IsExistNextCrashVision_IsExistNextCrashVision) == 0x000174, "Member 'BP_BrainCrashManager_C_CV_GotoNextCrashVision::CallFunc_CV_IsExistNextCrashVision_IsExistNextCrashVision' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_GotoNextCrashVision, CallFunc_GetCurrentSequencer_Sequencer_4) == 0x000178, "Member 'BP_BrainCrashManager_C_CV_GotoNextCrashVision::CallFunc_GetCurrentSequencer_Sequencer_4' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_GotoNextCrashVision, CallFunc_GetCurrentSequencer_Sequencer_5) == 0x000180, "Member 'BP_BrainCrashManager_C_CV_GotoNextCrashVision::CallFunc_GetCurrentSequencer_Sequencer_5' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_GotoNextCrashVision, CallFunc_GetSequencePlayer_ReturnValue_7) == 0x000188, "Member 'BP_BrainCrashManager_C_CV_GotoNextCrashVision::CallFunc_GetSequencePlayer_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_GotoNextCrashVision, CallFunc_GetSequencePlayer_ReturnValue_8) == 0x000190, "Member 'BP_BrainCrashManager_C_CV_GotoNextCrashVision::CallFunc_GetSequencePlayer_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_GotoNextCrashVision, CallFunc_BreakQualifiedFrameTime_Frame) == 0x000198, "Member 'BP_BrainCrashManager_C_CV_GotoNextCrashVision::CallFunc_BreakQualifiedFrameTime_Frame' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_GotoNextCrashVision, CallFunc_BreakQualifiedFrameTime_FrameRate) == 0x00019C, "Member 'BP_BrainCrashManager_C_CV_GotoNextCrashVision::CallFunc_BreakQualifiedFrameTime_FrameRate' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_GotoNextCrashVision, CallFunc_BreakQualifiedFrameTime_SubFrame) == 0x0001A4, "Member 'BP_BrainCrashManager_C_CV_GotoNextCrashVision::CallFunc_BreakQualifiedFrameTime_SubFrame' has a wrong offset!");

// Function BP_BrainCrashManager.BP_BrainCrashManager_C.CV_BindMenuPlayer
// 0x00D0 (0x00D0 - 0x0000)
struct BP_BrainCrashManager_C_CV_BindMenuPlayer final
{
public:
	class ABP_MenuPlayerBase_C*                   MenuPlayer;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSLevelSequenceActor*                  Sequencer;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsKyokaCopy;                                       // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DE0[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   IDText;                                            // 0x0018(0x0018)(Edit, BlueprintVisible)
	TArray<class FText>                           BindingSuffix;                                     // 0x0030(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<class FText>                           BindingNames;                                      // 0x0040(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	class FText                                   Temp_text_Variable;                                // 0x0050(0x0018)(ConstParm)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DE1[0x4];                                     // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0080(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class FString                                 CallFunc_GetSubstring_ReturnValue;                 // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x00A0(0x0018)()
	bool                                          CallFunc_Private_BindingEventPlayer_IsBinding;     // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DE2[0x7];                                     // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FText>                           K2Node_MakeArray_Array_1;                          // 0x00C0(0x0010)(ReferenceParm, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrainCrashManager_C_CV_BindMenuPlayer) == 0x000008, "Wrong alignment on BP_BrainCrashManager_C_CV_BindMenuPlayer");
static_assert(sizeof(BP_BrainCrashManager_C_CV_BindMenuPlayer) == 0x0000D0, "Wrong size on BP_BrainCrashManager_C_CV_BindMenuPlayer");
static_assert(offsetof(BP_BrainCrashManager_C_CV_BindMenuPlayer, MenuPlayer) == 0x000000, "Member 'BP_BrainCrashManager_C_CV_BindMenuPlayer::MenuPlayer' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_BindMenuPlayer, Sequencer) == 0x000008, "Member 'BP_BrainCrashManager_C_CV_BindMenuPlayer::Sequencer' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_BindMenuPlayer, IsKyokaCopy) == 0x000010, "Member 'BP_BrainCrashManager_C_CV_BindMenuPlayer::IsKyokaCopy' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_BindMenuPlayer, IDText) == 0x000018, "Member 'BP_BrainCrashManager_C_CV_BindMenuPlayer::IDText' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_BindMenuPlayer, BindingSuffix) == 0x000030, "Member 'BP_BrainCrashManager_C_CV_BindMenuPlayer::BindingSuffix' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_BindMenuPlayer, BindingNames) == 0x000040, "Member 'BP_BrainCrashManager_C_CV_BindMenuPlayer::BindingNames' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_BindMenuPlayer, Temp_text_Variable) == 0x000050, "Member 'BP_BrainCrashManager_C_CV_BindMenuPlayer::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_BindMenuPlayer, CallFunc_Array_Add_ReturnValue) == 0x000068, "Member 'BP_BrainCrashManager_C_CV_BindMenuPlayer::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_BindMenuPlayer, CallFunc_GetDisplayName_ReturnValue) == 0x000070, "Member 'BP_BrainCrashManager_C_CV_BindMenuPlayer::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_BindMenuPlayer, K2Node_MakeArray_Array) == 0x000080, "Member 'BP_BrainCrashManager_C_CV_BindMenuPlayer::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_BindMenuPlayer, CallFunc_GetSubstring_ReturnValue) == 0x000090, "Member 'BP_BrainCrashManager_C_CV_BindMenuPlayer::CallFunc_GetSubstring_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_BindMenuPlayer, CallFunc_Conv_StringToText_ReturnValue) == 0x0000A0, "Member 'BP_BrainCrashManager_C_CV_BindMenuPlayer::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_BindMenuPlayer, CallFunc_Private_BindingEventPlayer_IsBinding) == 0x0000B8, "Member 'BP_BrainCrashManager_C_CV_BindMenuPlayer::CallFunc_Private_BindingEventPlayer_IsBinding' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_BindMenuPlayer, K2Node_MakeArray_Array_1) == 0x0000C0, "Member 'BP_BrainCrashManager_C_CV_BindMenuPlayer::K2Node_MakeArray_Array_1' has a wrong offset!");

// Function BP_BrainCrashManager.BP_BrainCrashManager_C.CV_SetEquipMenuPlayer
// 0x0138 (0x0138 - 0x0000)
struct BP_BrainCrashManager_C_CV_SetEquipMenuPlayer final
{
public:
	class ABP_MenuPlayerBase_C*                   MenuPlayer;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerID                                     PlayerId;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DE3[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerManager*                         CallFunc_GetPlayerManager_PlayerManager;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPlayerInfo                            CallFunc_GetPartyMemberInfo_ReturnValue;           // 0x0018(0x00D0)(NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DE4[0x7];                                     // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_Attachment_C>     CallFunc_EquipAttachmentInterface_self_CastInput;  // 0x00F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EquipAttachmentInterface_bDummy;          // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DE5[0x3];                                     // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_Attachment_C>     CallFunc_EquipAttachmentInterface_self_CastInput_1; // 0x0108(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EquipAttachmentInterface_bDummy_1;        // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DE6[0x7];                                     // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_Attachment_C>     CallFunc_EquipAttachmentInterface_self_CastInput_2; // 0x0120(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EquipAttachmentInterface_bDummy_2;        // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BrainCrashManager_C_CV_SetEquipMenuPlayer) == 0x000008, "Wrong alignment on BP_BrainCrashManager_C_CV_SetEquipMenuPlayer");
static_assert(sizeof(BP_BrainCrashManager_C_CV_SetEquipMenuPlayer) == 0x000138, "Wrong size on BP_BrainCrashManager_C_CV_SetEquipMenuPlayer");
static_assert(offsetof(BP_BrainCrashManager_C_CV_SetEquipMenuPlayer, MenuPlayer) == 0x000000, "Member 'BP_BrainCrashManager_C_CV_SetEquipMenuPlayer::MenuPlayer' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_SetEquipMenuPlayer, PlayerId) == 0x000008, "Member 'BP_BrainCrashManager_C_CV_SetEquipMenuPlayer::PlayerId' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_SetEquipMenuPlayer, CallFunc_GetPlayerManager_PlayerManager) == 0x000010, "Member 'BP_BrainCrashManager_C_CV_SetEquipMenuPlayer::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_SetEquipMenuPlayer, CallFunc_GetPartyMemberInfo_ReturnValue) == 0x000018, "Member 'BP_BrainCrashManager_C_CV_SetEquipMenuPlayer::CallFunc_GetPartyMemberInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_SetEquipMenuPlayer, CallFunc_NotEqual_IntInt_ReturnValue) == 0x0000E8, "Member 'BP_BrainCrashManager_C_CV_SetEquipMenuPlayer::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_SetEquipMenuPlayer, CallFunc_EquipAttachmentInterface_self_CastInput) == 0x0000F0, "Member 'BP_BrainCrashManager_C_CV_SetEquipMenuPlayer::CallFunc_EquipAttachmentInterface_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_SetEquipMenuPlayer, CallFunc_EquipAttachmentInterface_bDummy) == 0x000100, "Member 'BP_BrainCrashManager_C_CV_SetEquipMenuPlayer::CallFunc_EquipAttachmentInterface_bDummy' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_SetEquipMenuPlayer, CallFunc_SelectInt_ReturnValue) == 0x000104, "Member 'BP_BrainCrashManager_C_CV_SetEquipMenuPlayer::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_SetEquipMenuPlayer, CallFunc_EquipAttachmentInterface_self_CastInput_1) == 0x000108, "Member 'BP_BrainCrashManager_C_CV_SetEquipMenuPlayer::CallFunc_EquipAttachmentInterface_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_SetEquipMenuPlayer, CallFunc_EquipAttachmentInterface_bDummy_1) == 0x000118, "Member 'BP_BrainCrashManager_C_CV_SetEquipMenuPlayer::CallFunc_EquipAttachmentInterface_bDummy_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_SetEquipMenuPlayer, CallFunc_EquipAttachmentInterface_self_CastInput_2) == 0x000120, "Member 'BP_BrainCrashManager_C_CV_SetEquipMenuPlayer::CallFunc_EquipAttachmentInterface_self_CastInput_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_SetEquipMenuPlayer, CallFunc_EquipAttachmentInterface_bDummy_2) == 0x000130, "Member 'BP_BrainCrashManager_C_CV_SetEquipMenuPlayer::CallFunc_EquipAttachmentInterface_bDummy_2' has a wrong offset!");

// Function BP_BrainCrashManager.BP_BrainCrashManager_C.CV_SetHologramPatamFromCurve
// 0x0068 (0x0068 - 0x0000)
struct BP_BrainCrashManager_C_CV_SetHologramPatamFromCurve final
{
public:
	float                                         InTime;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsUpdateMaterials;                                 // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DE7[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                _TempVectorValue;                                  // 0x0008(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetViewTarget_ReturnValue;                // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DE8[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetVectorValue_ReturnValue;               // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACineCameraActor*                       K2Node_DynamicCast_AsCine________;                 // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DE9[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X;                            // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BrainCrashManager_C_CV_SetHologramPatamFromCurve) == 0x000008, "Wrong alignment on BP_BrainCrashManager_C_CV_SetHologramPatamFromCurve");
static_assert(sizeof(BP_BrainCrashManager_C_CV_SetHologramPatamFromCurve) == 0x000068, "Wrong size on BP_BrainCrashManager_C_CV_SetHologramPatamFromCurve");
static_assert(offsetof(BP_BrainCrashManager_C_CV_SetHologramPatamFromCurve, InTime) == 0x000000, "Member 'BP_BrainCrashManager_C_CV_SetHologramPatamFromCurve::InTime' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_SetHologramPatamFromCurve, IsUpdateMaterials) == 0x000004, "Member 'BP_BrainCrashManager_C_CV_SetHologramPatamFromCurve::IsUpdateMaterials' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_SetHologramPatamFromCurve, _TempVectorValue) == 0x000008, "Member 'BP_BrainCrashManager_C_CV_SetHologramPatamFromCurve::_TempVectorValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_SetHologramPatamFromCurve, Temp_int_Array_Index_Variable) == 0x000014, "Member 'BP_BrainCrashManager_C_CV_SetHologramPatamFromCurve::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_SetHologramPatamFromCurve, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'BP_BrainCrashManager_C_CV_SetHologramPatamFromCurve::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_SetHologramPatamFromCurve, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'BP_BrainCrashManager_C_CV_SetHologramPatamFromCurve::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_SetHologramPatamFromCurve, CallFunc_GetPlayerController_ReturnValue) == 0x000020, "Member 'BP_BrainCrashManager_C_CV_SetHologramPatamFromCurve::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_SetHologramPatamFromCurve, CallFunc_GetViewTarget_ReturnValue) == 0x000028, "Member 'BP_BrainCrashManager_C_CV_SetHologramPatamFromCurve::CallFunc_GetViewTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_SetHologramPatamFromCurve, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BP_BrainCrashManager_C_CV_SetHologramPatamFromCurve::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_SetHologramPatamFromCurve, CallFunc_GetVectorValue_ReturnValue) == 0x000034, "Member 'BP_BrainCrashManager_C_CV_SetHologramPatamFromCurve::CallFunc_GetVectorValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_SetHologramPatamFromCurve, K2Node_DynamicCast_AsCine________) == 0x000040, "Member 'BP_BrainCrashManager_C_CV_SetHologramPatamFromCurve::K2Node_DynamicCast_AsCine________' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_SetHologramPatamFromCurve, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'BP_BrainCrashManager_C_CV_SetHologramPatamFromCurve::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_SetHologramPatamFromCurve, CallFunc_BreakVector_X) == 0x00004C, "Member 'BP_BrainCrashManager_C_CV_SetHologramPatamFromCurve::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_SetHologramPatamFromCurve, CallFunc_BreakVector_Y) == 0x000050, "Member 'BP_BrainCrashManager_C_CV_SetHologramPatamFromCurve::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_SetHologramPatamFromCurve, CallFunc_BreakVector_Z) == 0x000054, "Member 'BP_BrainCrashManager_C_CV_SetHologramPatamFromCurve::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_SetHologramPatamFromCurve, CallFunc_Add_FloatFloat_ReturnValue) == 0x000058, "Member 'BP_BrainCrashManager_C_CV_SetHologramPatamFromCurve::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_SetHologramPatamFromCurve, CallFunc_Array_Length_ReturnValue) == 0x00005C, "Member 'BP_BrainCrashManager_C_CV_SetHologramPatamFromCurve::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_SetHologramPatamFromCurve, CallFunc_Less_IntInt_ReturnValue) == 0x000060, "Member 'BP_BrainCrashManager_C_CV_SetHologramPatamFromCurve::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_BrainCrashManager.BP_BrainCrashManager_C.CV_RemindCameraFov
// 0x0020 (0x0020 - 0x0000)
struct BP_BrainCrashManager_C_CV_RemindCameraFov final
{
public:
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetViewTarget_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACineCameraActor*                       K2Node_DynamicCast_AsCine________;                 // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BrainCrashManager_C_CV_RemindCameraFov) == 0x000008, "Wrong alignment on BP_BrainCrashManager_C_CV_RemindCameraFov");
static_assert(sizeof(BP_BrainCrashManager_C_CV_RemindCameraFov) == 0x000020, "Wrong size on BP_BrainCrashManager_C_CV_RemindCameraFov");
static_assert(offsetof(BP_BrainCrashManager_C_CV_RemindCameraFov, CallFunc_GetPlayerController_ReturnValue) == 0x000000, "Member 'BP_BrainCrashManager_C_CV_RemindCameraFov::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_RemindCameraFov, CallFunc_GetViewTarget_ReturnValue) == 0x000008, "Member 'BP_BrainCrashManager_C_CV_RemindCameraFov::CallFunc_GetViewTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_RemindCameraFov, K2Node_DynamicCast_AsCine________) == 0x000010, "Member 'BP_BrainCrashManager_C_CV_RemindCameraFov::K2Node_DynamicCast_AsCine________' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_RemindCameraFov, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_BrainCrashManager_C_CV_RemindCameraFov::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_RemindCameraFov, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'BP_BrainCrashManager_C_CV_RemindCameraFov::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_BrainCrashManager.BP_BrainCrashManager_C.CV_StartToCrashVisionDirecting
// 0x0060 (0x0060 - 0x0000)
struct BP_BrainCrashManager_C_CV_StartToCrashVisionDirecting final
{
public:
	class USkeletalMeshComponent*                 _TempSkeletalMesh;                                 // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSLevelSequenceActor*                  CallFunc_GetCurrentSequencer_Sequencer;            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue;            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFrameNumber                           CallFunc_BreakQualifiedFrameTime_Frame;            // 0x0018(0x0004)(NoDestructor, HasGetValueTypeHash)
	struct FFrameRate                             CallFunc_BreakQualifiedFrameTime_FrameRate;        // 0x001C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakQualifiedFrameTime_SubFrame;         // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBlendableInterface>   CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput; // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class URSParticleSystemComponentBase*         CallFunc_SpawnEmitterAttached_ReturnValue;         // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DEA[0x3];                                     // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_MenuPlayerBase_C*                   CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSCharacterBase*                       CallFunc_GetPlayer_ReturnValue;                    // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrainCrashManager_C_CV_StartToCrashVisionDirecting) == 0x000008, "Wrong alignment on BP_BrainCrashManager_C_CV_StartToCrashVisionDirecting");
static_assert(sizeof(BP_BrainCrashManager_C_CV_StartToCrashVisionDirecting) == 0x000060, "Wrong size on BP_BrainCrashManager_C_CV_StartToCrashVisionDirecting");
static_assert(offsetof(BP_BrainCrashManager_C_CV_StartToCrashVisionDirecting, _TempSkeletalMesh) == 0x000000, "Member 'BP_BrainCrashManager_C_CV_StartToCrashVisionDirecting::_TempSkeletalMesh' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_StartToCrashVisionDirecting, CallFunc_GetCurrentSequencer_Sequencer) == 0x000008, "Member 'BP_BrainCrashManager_C_CV_StartToCrashVisionDirecting::CallFunc_GetCurrentSequencer_Sequencer' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_StartToCrashVisionDirecting, CallFunc_GetSequencePlayer_ReturnValue) == 0x000010, "Member 'BP_BrainCrashManager_C_CV_StartToCrashVisionDirecting::CallFunc_GetSequencePlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_StartToCrashVisionDirecting, CallFunc_BreakQualifiedFrameTime_Frame) == 0x000018, "Member 'BP_BrainCrashManager_C_CV_StartToCrashVisionDirecting::CallFunc_BreakQualifiedFrameTime_Frame' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_StartToCrashVisionDirecting, CallFunc_BreakQualifiedFrameTime_FrameRate) == 0x00001C, "Member 'BP_BrainCrashManager_C_CV_StartToCrashVisionDirecting::CallFunc_BreakQualifiedFrameTime_FrameRate' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_StartToCrashVisionDirecting, CallFunc_BreakQualifiedFrameTime_SubFrame) == 0x000024, "Member 'BP_BrainCrashManager_C_CV_StartToCrashVisionDirecting::CallFunc_BreakQualifiedFrameTime_SubFrame' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_StartToCrashVisionDirecting, CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput) == 0x000028, "Member 'BP_BrainCrashManager_C_CV_StartToCrashVisionDirecting::CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_StartToCrashVisionDirecting, CallFunc_SpawnEmitterAttached_ReturnValue) == 0x000038, "Member 'BP_BrainCrashManager_C_CV_StartToCrashVisionDirecting::CallFunc_SpawnEmitterAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_StartToCrashVisionDirecting, CallFunc_Subtract_IntInt_ReturnValue) == 0x000040, "Member 'BP_BrainCrashManager_C_CV_StartToCrashVisionDirecting::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_StartToCrashVisionDirecting, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000044, "Member 'BP_BrainCrashManager_C_CV_StartToCrashVisionDirecting::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_StartToCrashVisionDirecting, CallFunc_Array_Get_Item) == 0x000048, "Member 'BP_BrainCrashManager_C_CV_StartToCrashVisionDirecting::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_StartToCrashVisionDirecting, CallFunc_GetPlayerManager_PlayerManager) == 0x000050, "Member 'BP_BrainCrashManager_C_CV_StartToCrashVisionDirecting::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_StartToCrashVisionDirecting, CallFunc_GetPlayer_ReturnValue) == 0x000058, "Member 'BP_BrainCrashManager_C_CV_StartToCrashVisionDirecting::CallFunc_GetPlayer_ReturnValue' has a wrong offset!");

// Function BP_BrainCrashManager.BP_BrainCrashManager_C.Get Current Crash Vision Player
// 0x0001 (0x0001 - 0x0000)
struct BP_BrainCrashManager_C_Get_Current_Crash_Vision_Player final
{
public:
	EPlayerID                                     PlayerId;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrainCrashManager_C_Get_Current_Crash_Vision_Player) == 0x000001, "Wrong alignment on BP_BrainCrashManager_C_Get_Current_Crash_Vision_Player");
static_assert(sizeof(BP_BrainCrashManager_C_Get_Current_Crash_Vision_Player) == 0x000001, "Wrong size on BP_BrainCrashManager_C_Get_Current_Crash_Vision_Player");
static_assert(offsetof(BP_BrainCrashManager_C_Get_Current_Crash_Vision_Player, PlayerId) == 0x000000, "Member 'BP_BrainCrashManager_C_Get_Current_Crash_Vision_Player::PlayerId' has a wrong offset!");

// Function BP_BrainCrashManager.BP_BrainCrashManager_C.GetCurrentSubSequencer
// 0x0048 (0x0048 - 0x0000)
struct BP_BrainCrashManager_C_GetCurrentSubSequencer final
{
public:
	class ARSLevelSequenceActor*                  SubSequencer;                                      // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFBrainCrashSequencerInfo              CallFunc_GetCurrentBrainCrashSequencerInfo_BrainCrashSequencerInfo; // 0x0008(0x0040)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrainCrashManager_C_GetCurrentSubSequencer) == 0x000008, "Wrong alignment on BP_BrainCrashManager_C_GetCurrentSubSequencer");
static_assert(sizeof(BP_BrainCrashManager_C_GetCurrentSubSequencer) == 0x000048, "Wrong size on BP_BrainCrashManager_C_GetCurrentSubSequencer");
static_assert(offsetof(BP_BrainCrashManager_C_GetCurrentSubSequencer, SubSequencer) == 0x000000, "Member 'BP_BrainCrashManager_C_GetCurrentSubSequencer::SubSequencer' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_GetCurrentSubSequencer, CallFunc_GetCurrentBrainCrashSequencerInfo_BrainCrashSequencerInfo) == 0x000008, "Member 'BP_BrainCrashManager_C_GetCurrentSubSequencer::CallFunc_GetCurrentBrainCrashSequencerInfo_BrainCrashSequencerInfo' has a wrong offset!");

// Function BP_BrainCrashManager.BP_BrainCrashManager_C.CV_PlayCrashVisionVoice
// 0x0128 (0x0128 - 0x0000)
struct BP_BrainCrashManager_C_CV_PlayCrashVisionVoice final
{
public:
	EPlayerID                                     InPlayerID;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DEB[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundAtomCue*                          Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_1;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_2;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_3;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_4;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_5;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_6;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_7;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_8;                            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_9;                            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_10;                           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_11;                           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_12;                           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_13;                           // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_14;                           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_15;                           // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_16;                           // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_17;                           // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_18;                           // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_19;                           // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_20;                           // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_21;                           // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_22;                           // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_23;                           // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_24;                           // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_25;                           // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerID                                     Temp_byte_Variable;                                // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DEC[0x7];                                     // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundAtomCue*                          Temp_object_Variable_26;                           // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          K2Node_Select_Default;                             // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DED[0x7];                                     // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_GetPlayer_ReturnValue;                    // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_GetSkeletalMeshFromActor_ReturnValue;     // 0x0108(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_SoundManager_C*                     CallFunc_GetSoundManager_SoundManager;             // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URSAtomComponentBase*                   CallFunc_PlayVoice_ReturnValue;                    // 0x0118(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BrainCrashManager_C_CV_PlayCrashVisionVoice) == 0x000008, "Wrong alignment on BP_BrainCrashManager_C_CV_PlayCrashVisionVoice");
static_assert(sizeof(BP_BrainCrashManager_C_CV_PlayCrashVisionVoice) == 0x000128, "Wrong size on BP_BrainCrashManager_C_CV_PlayCrashVisionVoice");
static_assert(offsetof(BP_BrainCrashManager_C_CV_PlayCrashVisionVoice, InPlayerID) == 0x000000, "Member 'BP_BrainCrashManager_C_CV_PlayCrashVisionVoice::InPlayerID' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_PlayCrashVisionVoice, Temp_object_Variable) == 0x000008, "Member 'BP_BrainCrashManager_C_CV_PlayCrashVisionVoice::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_PlayCrashVisionVoice, Temp_object_Variable_1) == 0x000010, "Member 'BP_BrainCrashManager_C_CV_PlayCrashVisionVoice::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_PlayCrashVisionVoice, Temp_object_Variable_2) == 0x000018, "Member 'BP_BrainCrashManager_C_CV_PlayCrashVisionVoice::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_PlayCrashVisionVoice, Temp_object_Variable_3) == 0x000020, "Member 'BP_BrainCrashManager_C_CV_PlayCrashVisionVoice::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_PlayCrashVisionVoice, Temp_object_Variable_4) == 0x000028, "Member 'BP_BrainCrashManager_C_CV_PlayCrashVisionVoice::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_PlayCrashVisionVoice, Temp_object_Variable_5) == 0x000030, "Member 'BP_BrainCrashManager_C_CV_PlayCrashVisionVoice::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_PlayCrashVisionVoice, Temp_object_Variable_6) == 0x000038, "Member 'BP_BrainCrashManager_C_CV_PlayCrashVisionVoice::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_PlayCrashVisionVoice, Temp_object_Variable_7) == 0x000040, "Member 'BP_BrainCrashManager_C_CV_PlayCrashVisionVoice::Temp_object_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_PlayCrashVisionVoice, Temp_object_Variable_8) == 0x000048, "Member 'BP_BrainCrashManager_C_CV_PlayCrashVisionVoice::Temp_object_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_PlayCrashVisionVoice, Temp_object_Variable_9) == 0x000050, "Member 'BP_BrainCrashManager_C_CV_PlayCrashVisionVoice::Temp_object_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_PlayCrashVisionVoice, Temp_object_Variable_10) == 0x000058, "Member 'BP_BrainCrashManager_C_CV_PlayCrashVisionVoice::Temp_object_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_PlayCrashVisionVoice, Temp_object_Variable_11) == 0x000060, "Member 'BP_BrainCrashManager_C_CV_PlayCrashVisionVoice::Temp_object_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_PlayCrashVisionVoice, Temp_object_Variable_12) == 0x000068, "Member 'BP_BrainCrashManager_C_CV_PlayCrashVisionVoice::Temp_object_Variable_12' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_PlayCrashVisionVoice, Temp_object_Variable_13) == 0x000070, "Member 'BP_BrainCrashManager_C_CV_PlayCrashVisionVoice::Temp_object_Variable_13' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_PlayCrashVisionVoice, Temp_object_Variable_14) == 0x000078, "Member 'BP_BrainCrashManager_C_CV_PlayCrashVisionVoice::Temp_object_Variable_14' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_PlayCrashVisionVoice, Temp_object_Variable_15) == 0x000080, "Member 'BP_BrainCrashManager_C_CV_PlayCrashVisionVoice::Temp_object_Variable_15' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_PlayCrashVisionVoice, Temp_object_Variable_16) == 0x000088, "Member 'BP_BrainCrashManager_C_CV_PlayCrashVisionVoice::Temp_object_Variable_16' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_PlayCrashVisionVoice, Temp_object_Variable_17) == 0x000090, "Member 'BP_BrainCrashManager_C_CV_PlayCrashVisionVoice::Temp_object_Variable_17' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_PlayCrashVisionVoice, Temp_object_Variable_18) == 0x000098, "Member 'BP_BrainCrashManager_C_CV_PlayCrashVisionVoice::Temp_object_Variable_18' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_PlayCrashVisionVoice, Temp_object_Variable_19) == 0x0000A0, "Member 'BP_BrainCrashManager_C_CV_PlayCrashVisionVoice::Temp_object_Variable_19' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_PlayCrashVisionVoice, Temp_object_Variable_20) == 0x0000A8, "Member 'BP_BrainCrashManager_C_CV_PlayCrashVisionVoice::Temp_object_Variable_20' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_PlayCrashVisionVoice, Temp_object_Variable_21) == 0x0000B0, "Member 'BP_BrainCrashManager_C_CV_PlayCrashVisionVoice::Temp_object_Variable_21' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_PlayCrashVisionVoice, Temp_object_Variable_22) == 0x0000B8, "Member 'BP_BrainCrashManager_C_CV_PlayCrashVisionVoice::Temp_object_Variable_22' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_PlayCrashVisionVoice, Temp_object_Variable_23) == 0x0000C0, "Member 'BP_BrainCrashManager_C_CV_PlayCrashVisionVoice::Temp_object_Variable_23' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_PlayCrashVisionVoice, Temp_object_Variable_24) == 0x0000C8, "Member 'BP_BrainCrashManager_C_CV_PlayCrashVisionVoice::Temp_object_Variable_24' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_PlayCrashVisionVoice, Temp_object_Variable_25) == 0x0000D0, "Member 'BP_BrainCrashManager_C_CV_PlayCrashVisionVoice::Temp_object_Variable_25' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_PlayCrashVisionVoice, Temp_byte_Variable) == 0x0000D8, "Member 'BP_BrainCrashManager_C_CV_PlayCrashVisionVoice::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_PlayCrashVisionVoice, Temp_object_Variable_26) == 0x0000E0, "Member 'BP_BrainCrashManager_C_CV_PlayCrashVisionVoice::Temp_object_Variable_26' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_PlayCrashVisionVoice, CallFunc_GetPlayerManager_PlayerManager) == 0x0000E8, "Member 'BP_BrainCrashManager_C_CV_PlayCrashVisionVoice::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_PlayCrashVisionVoice, K2Node_Select_Default) == 0x0000F0, "Member 'BP_BrainCrashManager_C_CV_PlayCrashVisionVoice::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_PlayCrashVisionVoice, CallFunc_IsValid_ReturnValue) == 0x0000F8, "Member 'BP_BrainCrashManager_C_CV_PlayCrashVisionVoice::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_PlayCrashVisionVoice, CallFunc_GetPlayer_ReturnValue) == 0x000100, "Member 'BP_BrainCrashManager_C_CV_PlayCrashVisionVoice::CallFunc_GetPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_PlayCrashVisionVoice, CallFunc_GetSkeletalMeshFromActor_ReturnValue) == 0x000108, "Member 'BP_BrainCrashManager_C_CV_PlayCrashVisionVoice::CallFunc_GetSkeletalMeshFromActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_PlayCrashVisionVoice, CallFunc_GetSoundManager_SoundManager) == 0x000110, "Member 'BP_BrainCrashManager_C_CV_PlayCrashVisionVoice::CallFunc_GetSoundManager_SoundManager' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_PlayCrashVisionVoice, CallFunc_PlayVoice_ReturnValue) == 0x000118, "Member 'BP_BrainCrashManager_C_CV_PlayCrashVisionVoice::CallFunc_PlayVoice_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_PlayCrashVisionVoice, CallFunc_IsValid_ReturnValue_1) == 0x000120, "Member 'BP_BrainCrashManager_C_CV_PlayCrashVisionVoice::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_BrainCrashManager.BP_BrainCrashManager_C.ReleaseCrashVisionAsset
// 0x0040 (0x0040 - 0x0000)
struct BP_BrainCrashManager_C_ReleaseCrashVisionAsset final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DEE[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class ABP_MenuPlayerBase_C*             Temp_object_Variable;                              // 0x0008(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DEF[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class ABP_MenuPlayerBase_C*             Temp_object_Variable_1;                            // 0x0028(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DF0[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BrainCrashManager_C_ReleaseCrashVisionAsset) == 0x000008, "Wrong alignment on BP_BrainCrashManager_C_ReleaseCrashVisionAsset");
static_assert(sizeof(BP_BrainCrashManager_C_ReleaseCrashVisionAsset) == 0x000040, "Wrong size on BP_BrainCrashManager_C_ReleaseCrashVisionAsset");
static_assert(offsetof(BP_BrainCrashManager_C_ReleaseCrashVisionAsset, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_BrainCrashManager_C_ReleaseCrashVisionAsset::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ReleaseCrashVisionAsset, Temp_object_Variable) == 0x000008, "Member 'BP_BrainCrashManager_C_ReleaseCrashVisionAsset::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ReleaseCrashVisionAsset, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'BP_BrainCrashManager_C_ReleaseCrashVisionAsset::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ReleaseCrashVisionAsset, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_BrainCrashManager_C_ReleaseCrashVisionAsset::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ReleaseCrashVisionAsset, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BP_BrainCrashManager_C_ReleaseCrashVisionAsset::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ReleaseCrashVisionAsset, Temp_int_Array_Index_Variable_1) == 0x00001C, "Member 'BP_BrainCrashManager_C_ReleaseCrashVisionAsset::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ReleaseCrashVisionAsset, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_BrainCrashManager_C_ReleaseCrashVisionAsset::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ReleaseCrashVisionAsset, Temp_int_Loop_Counter_Variable_1) == 0x000024, "Member 'BP_BrainCrashManager_C_ReleaseCrashVisionAsset::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ReleaseCrashVisionAsset, Temp_object_Variable_1) == 0x000028, "Member 'BP_BrainCrashManager_C_ReleaseCrashVisionAsset::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ReleaseCrashVisionAsset, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'BP_BrainCrashManager_C_ReleaseCrashVisionAsset::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ReleaseCrashVisionAsset, CallFunc_Add_IntInt_ReturnValue_1) == 0x000034, "Member 'BP_BrainCrashManager_C_ReleaseCrashVisionAsset::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ReleaseCrashVisionAsset, CallFunc_Array_Length_ReturnValue_1) == 0x000038, "Member 'BP_BrainCrashManager_C_ReleaseCrashVisionAsset::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ReleaseCrashVisionAsset, CallFunc_Less_IntInt_ReturnValue_1) == 0x00003C, "Member 'BP_BrainCrashManager_C_ReleaseCrashVisionAsset::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_ReleaseCrashVisionAsset, CallFunc_IsValid_ReturnValue_1) == 0x00003D, "Member 'BP_BrainCrashManager_C_ReleaseCrashVisionAsset::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_BrainCrashManager.BP_BrainCrashManager_C.CV_ProtectedUpdateLukaAttachSequencerPos
// 0x0110 (0x0110 - 0x0000)
struct BP_BrainCrashManager_C_CV_ProtectedUpdateLukaAttachSequencerPos final
{
public:
	class ABP_EventCameraRoot_C*                  CallFunc_GetCurrentSubSeqUniqueRoot_SubSequencer;  // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSLevelSequenceActor*                  CallFunc_GetCurrentSubSequencer_SubSequencer;      // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DF1[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattleEnemy_C*                       K2Node_DynamicCast_AsRSBattle_Enemy;               // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DF2[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_EnemyInterface_C> CallFunc_GetBrainCore_self_CastInput;              // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ABP_co2000Base_C*                       CallFunc_GetBrainCore_CoreObject;                  // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_GetSkeletalMeshFromActor_ReturnValue;     // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DF3[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue_1;          // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x006C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DF4[0x3];                                     // 0x00F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x00F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BrainCrashManager_C_CV_ProtectedUpdateLukaAttachSequencerPos) == 0x000008, "Wrong alignment on BP_BrainCrashManager_C_CV_ProtectedUpdateLukaAttachSequencerPos");
static_assert(sizeof(BP_BrainCrashManager_C_CV_ProtectedUpdateLukaAttachSequencerPos) == 0x000110, "Wrong size on BP_BrainCrashManager_C_CV_ProtectedUpdateLukaAttachSequencerPos");
static_assert(offsetof(BP_BrainCrashManager_C_CV_ProtectedUpdateLukaAttachSequencerPos, CallFunc_GetCurrentSubSeqUniqueRoot_SubSequencer) == 0x000000, "Member 'BP_BrainCrashManager_C_CV_ProtectedUpdateLukaAttachSequencerPos::CallFunc_GetCurrentSubSeqUniqueRoot_SubSequencer' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_ProtectedUpdateLukaAttachSequencerPos, CallFunc_GetCurrentSubSequencer_SubSequencer) == 0x000008, "Member 'BP_BrainCrashManager_C_CV_ProtectedUpdateLukaAttachSequencerPos::CallFunc_GetCurrentSubSequencer_SubSequencer' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_ProtectedUpdateLukaAttachSequencerPos, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_BrainCrashManager_C_CV_ProtectedUpdateLukaAttachSequencerPos::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_ProtectedUpdateLukaAttachSequencerPos, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_BrainCrashManager_C_CV_ProtectedUpdateLukaAttachSequencerPos::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_ProtectedUpdateLukaAttachSequencerPos, K2Node_DynamicCast_AsRSBattle_Enemy) == 0x000020, "Member 'BP_BrainCrashManager_C_CV_ProtectedUpdateLukaAttachSequencerPos::K2Node_DynamicCast_AsRSBattle_Enemy' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_ProtectedUpdateLukaAttachSequencerPos, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_BrainCrashManager_C_CV_ProtectedUpdateLukaAttachSequencerPos::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_ProtectedUpdateLukaAttachSequencerPos, CallFunc_GetBrainCore_self_CastInput) == 0x000030, "Member 'BP_BrainCrashManager_C_CV_ProtectedUpdateLukaAttachSequencerPos::CallFunc_GetBrainCore_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_ProtectedUpdateLukaAttachSequencerPos, CallFunc_GetBrainCore_CoreObject) == 0x000040, "Member 'BP_BrainCrashManager_C_CV_ProtectedUpdateLukaAttachSequencerPos::CallFunc_GetBrainCore_CoreObject' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_ProtectedUpdateLukaAttachSequencerPos, CallFunc_GetSkeletalMeshFromActor_ReturnValue) == 0x000048, "Member 'BP_BrainCrashManager_C_CV_ProtectedUpdateLukaAttachSequencerPos::CallFunc_GetSkeletalMeshFromActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_ProtectedUpdateLukaAttachSequencerPos, CallFunc_IsValid_ReturnValue_1) == 0x000050, "Member 'BP_BrainCrashManager_C_CV_ProtectedUpdateLukaAttachSequencerPos::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_ProtectedUpdateLukaAttachSequencerPos, CallFunc_GetSocketLocation_ReturnValue) == 0x000054, "Member 'BP_BrainCrashManager_C_CV_ProtectedUpdateLukaAttachSequencerPos::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_ProtectedUpdateLukaAttachSequencerPos, CallFunc_GetSocketLocation_ReturnValue_1) == 0x000060, "Member 'BP_BrainCrashManager_C_CV_ProtectedUpdateLukaAttachSequencerPos::CallFunc_GetSocketLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_ProtectedUpdateLukaAttachSequencerPos, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x00006C, "Member 'BP_BrainCrashManager_C_CV_ProtectedUpdateLukaAttachSequencerPos::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_ProtectedUpdateLukaAttachSequencerPos, CallFunc_K2_SetActorLocation_ReturnValue) == 0x0000F4, "Member 'BP_BrainCrashManager_C_CV_ProtectedUpdateLukaAttachSequencerPos::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_ProtectedUpdateLukaAttachSequencerPos, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0000F8, "Member 'BP_BrainCrashManager_C_CV_ProtectedUpdateLukaAttachSequencerPos::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_ProtectedUpdateLukaAttachSequencerPos, CallFunc_VSize_ReturnValue) == 0x000104, "Member 'BP_BrainCrashManager_C_CV_ProtectedUpdateLukaAttachSequencerPos::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_ProtectedUpdateLukaAttachSequencerPos, CallFunc_Less_FloatFloat_ReturnValue) == 0x000108, "Member 'BP_BrainCrashManager_C_CV_ProtectedUpdateLukaAttachSequencerPos::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_BrainCrashManager.BP_BrainCrashManager_C.GetCurrentSubSeqUniqueRoot
// 0x0048 (0x0048 - 0x0000)
struct BP_BrainCrashManager_C_GetCurrentSubSeqUniqueRoot final
{
public:
	class ABP_EventCameraRoot_C*                  SubSequencer;                                      // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFBrainCrashSequencerInfo              CallFunc_GetCurrentBrainCrashSequencerInfo_BrainCrashSequencerInfo; // 0x0008(0x0040)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrainCrashManager_C_GetCurrentSubSeqUniqueRoot) == 0x000008, "Wrong alignment on BP_BrainCrashManager_C_GetCurrentSubSeqUniqueRoot");
static_assert(sizeof(BP_BrainCrashManager_C_GetCurrentSubSeqUniqueRoot) == 0x000048, "Wrong size on BP_BrainCrashManager_C_GetCurrentSubSeqUniqueRoot");
static_assert(offsetof(BP_BrainCrashManager_C_GetCurrentSubSeqUniqueRoot, SubSequencer) == 0x000000, "Member 'BP_BrainCrashManager_C_GetCurrentSubSeqUniqueRoot::SubSequencer' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_GetCurrentSubSeqUniqueRoot, CallFunc_GetCurrentBrainCrashSequencerInfo_BrainCrashSequencerInfo) == 0x000008, "Member 'BP_BrainCrashManager_C_GetCurrentSubSeqUniqueRoot::CallFunc_GetCurrentBrainCrashSequencerInfo_BrainCrashSequencerInfo' has a wrong offset!");

// Function BP_BrainCrashManager.BP_BrainCrashManager_C.OnCrashHPRecovery
// 0x00B0 (0x00B0 - 0x0000)
struct BP_BrainCrashManager_C_OnCrashHPRecovery final
{
public:
	struct FTransform                             OffsetTransform;                                   // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	class FName                                   AttachPointName;                                   // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 _TempSkeletalMesh;                                 // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DF5[0x4];                                     // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerID                                     CallFunc_GetBattleMemberPlayerID_ReturnValue;      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DF6[0x7];                                     // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URSParticleSystemComponentBase*         CallFunc_SpawnEmitterAttached_ReturnValue;         // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAccessoryEffect_outValue;              // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAccessoryEffect_ReturnValue;           // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DF7[0x3];                                     // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DF8[0x3];                                     // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_MenuPlayerBase_C*                   CallFunc_Array_Get_Item;                           // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager_1;         // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSCharacterBase*                       CallFunc_GetPlayer_ReturnValue;                    // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrainCrashManager_C_OnCrashHPRecovery) == 0x000010, "Wrong alignment on BP_BrainCrashManager_C_OnCrashHPRecovery");
static_assert(sizeof(BP_BrainCrashManager_C_OnCrashHPRecovery) == 0x0000B0, "Wrong size on BP_BrainCrashManager_C_OnCrashHPRecovery");
static_assert(offsetof(BP_BrainCrashManager_C_OnCrashHPRecovery, OffsetTransform) == 0x000000, "Member 'BP_BrainCrashManager_C_OnCrashHPRecovery::OffsetTransform' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_OnCrashHPRecovery, AttachPointName) == 0x000030, "Member 'BP_BrainCrashManager_C_OnCrashHPRecovery::AttachPointName' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_OnCrashHPRecovery, _TempSkeletalMesh) == 0x000038, "Member 'BP_BrainCrashManager_C_OnCrashHPRecovery::_TempSkeletalMesh' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_OnCrashHPRecovery, CallFunc_BreakTransform_Location) == 0x000040, "Member 'BP_BrainCrashManager_C_OnCrashHPRecovery::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_OnCrashHPRecovery, CallFunc_BreakTransform_Rotation) == 0x00004C, "Member 'BP_BrainCrashManager_C_OnCrashHPRecovery::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_OnCrashHPRecovery, CallFunc_BreakTransform_Scale) == 0x000058, "Member 'BP_BrainCrashManager_C_OnCrashHPRecovery::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_OnCrashHPRecovery, CallFunc_GetPlayerManager_PlayerManager) == 0x000068, "Member 'BP_BrainCrashManager_C_OnCrashHPRecovery::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_OnCrashHPRecovery, CallFunc_GetBattleMemberPlayerID_ReturnValue) == 0x000070, "Member 'BP_BrainCrashManager_C_OnCrashHPRecovery::CallFunc_GetBattleMemberPlayerID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_OnCrashHPRecovery, CallFunc_SpawnEmitterAttached_ReturnValue) == 0x000078, "Member 'BP_BrainCrashManager_C_OnCrashHPRecovery::CallFunc_SpawnEmitterAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_OnCrashHPRecovery, CallFunc_GetAccessoryEffect_outValue) == 0x000080, "Member 'BP_BrainCrashManager_C_OnCrashHPRecovery::CallFunc_GetAccessoryEffect_outValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_OnCrashHPRecovery, CallFunc_GetAccessoryEffect_ReturnValue) == 0x000084, "Member 'BP_BrainCrashManager_C_OnCrashHPRecovery::CallFunc_GetAccessoryEffect_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_OnCrashHPRecovery, CallFunc_Subtract_IntInt_ReturnValue) == 0x000088, "Member 'BP_BrainCrashManager_C_OnCrashHPRecovery::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_OnCrashHPRecovery, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00008C, "Member 'BP_BrainCrashManager_C_OnCrashHPRecovery::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_OnCrashHPRecovery, CallFunc_Array_Get_Item) == 0x000090, "Member 'BP_BrainCrashManager_C_OnCrashHPRecovery::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_OnCrashHPRecovery, CallFunc_GetPlayerManager_PlayerManager_1) == 0x000098, "Member 'BP_BrainCrashManager_C_OnCrashHPRecovery::CallFunc_GetPlayerManager_PlayerManager_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_OnCrashHPRecovery, CallFunc_GetPlayer_ReturnValue) == 0x0000A0, "Member 'BP_BrainCrashManager_C_OnCrashHPRecovery::CallFunc_GetPlayer_ReturnValue' has a wrong offset!");

// Function BP_BrainCrashManager.BP_BrainCrashManager_C.PrivateHologramMaterialParameterPop
// 0x0030 (0x0030 - 0x0000)
struct BP_BrainCrashManager_C_PrivateHologramMaterialParameterPop final
{
public:
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DF9[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_GetPlayer_ReturnValue;                    // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DFA[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBPC_OptimizeSwitchMaterial_C*          CallFunc_GetComponentByClass_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BrainCrashManager_C_PrivateHologramMaterialParameterPop) == 0x000008, "Wrong alignment on BP_BrainCrashManager_C_PrivateHologramMaterialParameterPop");
static_assert(sizeof(BP_BrainCrashManager_C_PrivateHologramMaterialParameterPop) == 0x000030, "Wrong size on BP_BrainCrashManager_C_PrivateHologramMaterialParameterPop");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateHologramMaterialParameterPop, CallFunc_GetPlayerManager_PlayerManager) == 0x000000, "Member 'BP_BrainCrashManager_C_PrivateHologramMaterialParameterPop::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateHologramMaterialParameterPop, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000008, "Member 'BP_BrainCrashManager_C_PrivateHologramMaterialParameterPop::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateHologramMaterialParameterPop, CallFunc_GetPlayer_ReturnValue) == 0x000010, "Member 'BP_BrainCrashManager_C_PrivateHologramMaterialParameterPop::CallFunc_GetPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateHologramMaterialParameterPop, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_BrainCrashManager_C_PrivateHologramMaterialParameterPop::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateHologramMaterialParameterPop, CallFunc_GetComponentByClass_ReturnValue) == 0x000020, "Member 'BP_BrainCrashManager_C_PrivateHologramMaterialParameterPop::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_PrivateHologramMaterialParameterPop, CallFunc_IsValid_ReturnValue_1) == 0x000028, "Member 'BP_BrainCrashManager_C_PrivateHologramMaterialParameterPop::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_BrainCrashManager.BP_BrainCrashManager_C.CV_StartSlowAndVignette
// 0x0050 (0x0050 - 0x0000)
struct BP_BrainCrashManager_C_CV_StartSlowAndVignette final
{
public:
	class ARSLevelSequenceActor*                  CallFunc_GetCurrentSubSequencer_SubSequencer;      // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue;            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequence*                         CallFunc_GetSequence_ReturnValue;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DFB[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBlendableInterface>   CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput; // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ARSLevelSequenceActor*                  CallFunc_GetCurrentEnemySequencer_Sequencer;       // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue_1;          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSLevelSequenceActor*                  CallFunc_GetCurrentSequencer_Sequencer;            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue_2;          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrainCrashManager_C_CV_StartSlowAndVignette) == 0x000008, "Wrong alignment on BP_BrainCrashManager_C_CV_StartSlowAndVignette");
static_assert(sizeof(BP_BrainCrashManager_C_CV_StartSlowAndVignette) == 0x000050, "Wrong size on BP_BrainCrashManager_C_CV_StartSlowAndVignette");
static_assert(offsetof(BP_BrainCrashManager_C_CV_StartSlowAndVignette, CallFunc_GetCurrentSubSequencer_SubSequencer) == 0x000000, "Member 'BP_BrainCrashManager_C_CV_StartSlowAndVignette::CallFunc_GetCurrentSubSequencer_SubSequencer' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_StartSlowAndVignette, CallFunc_GetSequencePlayer_ReturnValue) == 0x000008, "Member 'BP_BrainCrashManager_C_CV_StartSlowAndVignette::CallFunc_GetSequencePlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_StartSlowAndVignette, CallFunc_GetSequence_ReturnValue) == 0x000010, "Member 'BP_BrainCrashManager_C_CV_StartSlowAndVignette::CallFunc_GetSequence_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_StartSlowAndVignette, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_BrainCrashManager_C_CV_StartSlowAndVignette::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_StartSlowAndVignette, CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput) == 0x000020, "Member 'BP_BrainCrashManager_C_CV_StartSlowAndVignette::CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_StartSlowAndVignette, CallFunc_GetCurrentEnemySequencer_Sequencer) == 0x000030, "Member 'BP_BrainCrashManager_C_CV_StartSlowAndVignette::CallFunc_GetCurrentEnemySequencer_Sequencer' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_StartSlowAndVignette, CallFunc_GetSequencePlayer_ReturnValue_1) == 0x000038, "Member 'BP_BrainCrashManager_C_CV_StartSlowAndVignette::CallFunc_GetSequencePlayer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_StartSlowAndVignette, CallFunc_GetCurrentSequencer_Sequencer) == 0x000040, "Member 'BP_BrainCrashManager_C_CV_StartSlowAndVignette::CallFunc_GetCurrentSequencer_Sequencer' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_CV_StartSlowAndVignette, CallFunc_GetSequencePlayer_ReturnValue_2) == 0x000048, "Member 'BP_BrainCrashManager_C_CV_StartSlowAndVignette::CallFunc_GetSequencePlayer_ReturnValue_2' has a wrong offset!");

// Function BP_BrainCrashManager.BP_BrainCrashManager_C.IsSoloENPCSequencer
// 0x0068 (0x0068 - 0x0000)
struct BP_BrainCrashManager_C_IsSoloENPCSequencer final
{
public:
	bool                                          bSolo;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DFC[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ARSCharacterBase*>               LPlayerList;                                       // 0x0008(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	bool                                          LbSolo;                                            // 0x0018(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DFD[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DFE[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABattleSimulatorManager*                CallFunc_GetBattleSimulatorManager_BattleSimulatorManager; // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMissionActive_ReturnValue;              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DFF[0x2];                                     // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsCharacterDead_ReturnValue;              // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E00[0x1];                                     // 0x003B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E01[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ARSCharacterBase*>               CallFunc_GetPlayerList_ReturnValue;                // 0x0050(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_GetPlayerNum_ReturnValue;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BrainCrashManager_C_IsSoloENPCSequencer) == 0x000008, "Wrong alignment on BP_BrainCrashManager_C_IsSoloENPCSequencer");
static_assert(sizeof(BP_BrainCrashManager_C_IsSoloENPCSequencer) == 0x000068, "Wrong size on BP_BrainCrashManager_C_IsSoloENPCSequencer");
static_assert(offsetof(BP_BrainCrashManager_C_IsSoloENPCSequencer, bSolo) == 0x000000, "Member 'BP_BrainCrashManager_C_IsSoloENPCSequencer::bSolo' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_IsSoloENPCSequencer, LPlayerList) == 0x000008, "Member 'BP_BrainCrashManager_C_IsSoloENPCSequencer::LPlayerList' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_IsSoloENPCSequencer, LbSolo) == 0x000018, "Member 'BP_BrainCrashManager_C_IsSoloENPCSequencer::LbSolo' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_IsSoloENPCSequencer, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'BP_BrainCrashManager_C_IsSoloENPCSequencer::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_IsSoloENPCSequencer, Temp_int_Loop_Num_Variable) == 0x000020, "Member 'BP_BrainCrashManager_C_IsSoloENPCSequencer::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_IsSoloENPCSequencer, Temp_bool_True_if_break_was_hit_Variable) == 0x000024, "Member 'BP_BrainCrashManager_C_IsSoloENPCSequencer::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_IsSoloENPCSequencer, CallFunc_GetBattleSimulatorManager_BattleSimulatorManager) == 0x000028, "Member 'BP_BrainCrashManager_C_IsSoloENPCSequencer::CallFunc_GetBattleSimulatorManager_BattleSimulatorManager' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_IsSoloENPCSequencer, CallFunc_IsMissionActive_ReturnValue) == 0x000030, "Member 'BP_BrainCrashManager_C_IsSoloENPCSequencer::CallFunc_IsMissionActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_IsSoloENPCSequencer, CallFunc_Not_PreBool_ReturnValue) == 0x000031, "Member 'BP_BrainCrashManager_C_IsSoloENPCSequencer::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_IsSoloENPCSequencer, Temp_int_Loop_Counter_Variable) == 0x000034, "Member 'BP_BrainCrashManager_C_IsSoloENPCSequencer::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_IsSoloENPCSequencer, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'BP_BrainCrashManager_C_IsSoloENPCSequencer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_IsSoloENPCSequencer, CallFunc_IsCharacterDead_ReturnValue) == 0x000039, "Member 'BP_BrainCrashManager_C_IsSoloENPCSequencer::CallFunc_IsCharacterDead_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_IsSoloENPCSequencer, CallFunc_Less_IntInt_ReturnValue) == 0x00003A, "Member 'BP_BrainCrashManager_C_IsSoloENPCSequencer::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_IsSoloENPCSequencer, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'BP_BrainCrashManager_C_IsSoloENPCSequencer::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_IsSoloENPCSequencer, CallFunc_BooleanAND_ReturnValue) == 0x000040, "Member 'BP_BrainCrashManager_C_IsSoloENPCSequencer::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_IsSoloENPCSequencer, CallFunc_Array_Length_ReturnValue) == 0x000044, "Member 'BP_BrainCrashManager_C_IsSoloENPCSequencer::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_IsSoloENPCSequencer, CallFunc_GetPlayerManager_PlayerManager) == 0x000048, "Member 'BP_BrainCrashManager_C_IsSoloENPCSequencer::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_IsSoloENPCSequencer, CallFunc_GetPlayerList_ReturnValue) == 0x000050, "Member 'BP_BrainCrashManager_C_IsSoloENPCSequencer::CallFunc_GetPlayerList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_IsSoloENPCSequencer, CallFunc_GetPlayerNum_ReturnValue) == 0x000060, "Member 'BP_BrainCrashManager_C_IsSoloENPCSequencer::CallFunc_GetPlayerNum_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_IsSoloENPCSequencer, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000064, "Member 'BP_BrainCrashManager_C_IsSoloENPCSequencer::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_BrainCrashManager.BP_BrainCrashManager_C.GetCrashTargetEnemyList
// 0x0030 (0x0030 - 0x0000)
struct BP_BrainCrashManager_C_GetCrashTargetEnemyList final
{
public:
	TArray<class ARSCharacterBase*>               TargetEnemy;                                       // 0x0000(0x0010)(Parm, OutParm, HasGetValueTypeHash)
	TArray<class ARSCharacterBase*>               LEnemyList;                                        // 0x0010(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E02[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E03[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue_1;            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrainCrashManager_C_GetCrashTargetEnemyList) == 0x000008, "Wrong alignment on BP_BrainCrashManager_C_GetCrashTargetEnemyList");
static_assert(sizeof(BP_BrainCrashManager_C_GetCrashTargetEnemyList) == 0x000030, "Wrong size on BP_BrainCrashManager_C_GetCrashTargetEnemyList");
static_assert(offsetof(BP_BrainCrashManager_C_GetCrashTargetEnemyList, TargetEnemy) == 0x000000, "Member 'BP_BrainCrashManager_C_GetCrashTargetEnemyList::TargetEnemy' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_GetCrashTargetEnemyList, LEnemyList) == 0x000010, "Member 'BP_BrainCrashManager_C_GetCrashTargetEnemyList::LEnemyList' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_GetCrashTargetEnemyList, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_BrainCrashManager_C_GetCrashTargetEnemyList::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_GetCrashTargetEnemyList, CallFunc_Array_AddUnique_ReturnValue) == 0x000024, "Member 'BP_BrainCrashManager_C_GetCrashTargetEnemyList::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_GetCrashTargetEnemyList, CallFunc_IsValid_ReturnValue_1) == 0x000028, "Member 'BP_BrainCrashManager_C_GetCrashTargetEnemyList::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashManager_C_GetCrashTargetEnemyList, CallFunc_Array_AddUnique_ReturnValue_1) == 0x00002C, "Member 'BP_BrainCrashManager_C_GetCrashTargetEnemyList::CallFunc_Array_AddUnique_ReturnValue_1' has a wrong offset!");

}

