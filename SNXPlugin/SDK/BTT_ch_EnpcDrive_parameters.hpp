#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTT_ch_EnpcDrive

#include "Basic.hpp"


namespace SDK::Params
{

// Function BTT_ch_EnpcDrive.BTT_ch_EnpcDrive_C.ExecuteUbergraph_BTT_ch_EnpcDrive
// 0x0130 (0x0130 - 0x0000)
struct BTT_ch_EnpcDrive_C_ExecuteUbergraph_BTT_ch_EnpcDrive final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAIController*                          K2Node_Event_OwnerController_1;                    // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn_1;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAIController*                          K2Node_Event_OwnerController_2;                    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn_2;                     // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_PlayerAIInterface_C> K2Node_DynamicCast_AsBPI_Player_AIInterface;       // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_96C7[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerAIInterface_C> K2Node_DynamicCast_AsBPI_Player_AIInterface_1;     // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetEnableInputStick_Dummy;                // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_96C8[0x2];                                     // 0x0052(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetAttackCountAI_Count;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattlePlayer_C*                      K2Node_DynamicCast_AsRSBattle_Player;              // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_96C9[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerInterface_C> CallFunc_GetEnpcComp_self_CastInput;               // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UBP_ENpcComponent_C*                    CallFunc_GetEnpcComp_ReturnComp;                   // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAIController*                          K2Node_Event_OwnerController;                      // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn;                       // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_96CA[0x3];                                     // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerAIInterface_C> K2Node_DynamicCast_AsBPI_Player_AIInterface_2;     // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInputAI_Attack_bON;                     // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_96CB[0x6];                                     // 0x00AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerAIInterface_C> K2Node_DynamicCast_AsBPI_Player_AIInterface_3;     // 0x00B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_96CC[0x7];                                     // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerAIInterface_C> K2Node_DynamicCast_AsBPI_Player_AIInterface_4;     // 0x00C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_96CD[0x7];                                     // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerAIInterface_C> K2Node_DynamicCast_AsBPI_Player_AIInterface_5;     // 0x00E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActionStatusAI_bResult;                 // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAttackAble_bEnable;                     // 0x00F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00F3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_96CE[0x4];                                     // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerAIInterface_C> K2Node_DynamicCast_AsBPI_Player_AIInterface_6;     // 0x00F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_96CF[0x7];                                     // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerAIInterface_C> K2Node_DynamicCast_AsBPI_Player_AIInterface_7;     // 0x0110(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAttackAble_bEnable_1;                   // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Exec_Drive_bDummy;                        // 0x0122(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0123(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_ch_EnpcDrive_C_ExecuteUbergraph_BTT_ch_EnpcDrive) == 0x000008, "Wrong alignment on BTT_ch_EnpcDrive_C_ExecuteUbergraph_BTT_ch_EnpcDrive");
static_assert(sizeof(BTT_ch_EnpcDrive_C_ExecuteUbergraph_BTT_ch_EnpcDrive) == 0x000130, "Wrong size on BTT_ch_EnpcDrive_C_ExecuteUbergraph_BTT_ch_EnpcDrive");
static_assert(offsetof(BTT_ch_EnpcDrive_C_ExecuteUbergraph_BTT_ch_EnpcDrive, EntryPoint) == 0x000000, "Member 'BTT_ch_EnpcDrive_C_ExecuteUbergraph_BTT_ch_EnpcDrive::EntryPoint' has a wrong offset!");
static_assert(offsetof(BTT_ch_EnpcDrive_C_ExecuteUbergraph_BTT_ch_EnpcDrive, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'BTT_ch_EnpcDrive_C_ExecuteUbergraph_BTT_ch_EnpcDrive::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_ch_EnpcDrive_C_ExecuteUbergraph_BTT_ch_EnpcDrive, K2Node_Event_OwnerController_1) == 0x000008, "Member 'BTT_ch_EnpcDrive_C_ExecuteUbergraph_BTT_ch_EnpcDrive::K2Node_Event_OwnerController_1' has a wrong offset!");
static_assert(offsetof(BTT_ch_EnpcDrive_C_ExecuteUbergraph_BTT_ch_EnpcDrive, K2Node_Event_ControlledPawn_1) == 0x000010, "Member 'BTT_ch_EnpcDrive_C_ExecuteUbergraph_BTT_ch_EnpcDrive::K2Node_Event_ControlledPawn_1' has a wrong offset!");
static_assert(offsetof(BTT_ch_EnpcDrive_C_ExecuteUbergraph_BTT_ch_EnpcDrive, K2Node_Event_OwnerController_2) == 0x000018, "Member 'BTT_ch_EnpcDrive_C_ExecuteUbergraph_BTT_ch_EnpcDrive::K2Node_Event_OwnerController_2' has a wrong offset!");
static_assert(offsetof(BTT_ch_EnpcDrive_C_ExecuteUbergraph_BTT_ch_EnpcDrive, K2Node_Event_ControlledPawn_2) == 0x000020, "Member 'BTT_ch_EnpcDrive_C_ExecuteUbergraph_BTT_ch_EnpcDrive::K2Node_Event_ControlledPawn_2' has a wrong offset!");
static_assert(offsetof(BTT_ch_EnpcDrive_C_ExecuteUbergraph_BTT_ch_EnpcDrive, K2Node_DynamicCast_AsBPI_Player_AIInterface) == 0x000028, "Member 'BTT_ch_EnpcDrive_C_ExecuteUbergraph_BTT_ch_EnpcDrive::K2Node_DynamicCast_AsBPI_Player_AIInterface' has a wrong offset!");
static_assert(offsetof(BTT_ch_EnpcDrive_C_ExecuteUbergraph_BTT_ch_EnpcDrive, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BTT_ch_EnpcDrive_C_ExecuteUbergraph_BTT_ch_EnpcDrive::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BTT_ch_EnpcDrive_C_ExecuteUbergraph_BTT_ch_EnpcDrive, K2Node_DynamicCast_AsBPI_Player_AIInterface_1) == 0x000040, "Member 'BTT_ch_EnpcDrive_C_ExecuteUbergraph_BTT_ch_EnpcDrive::K2Node_DynamicCast_AsBPI_Player_AIInterface_1' has a wrong offset!");
static_assert(offsetof(BTT_ch_EnpcDrive_C_ExecuteUbergraph_BTT_ch_EnpcDrive, K2Node_DynamicCast_bSuccess_1) == 0x000050, "Member 'BTT_ch_EnpcDrive_C_ExecuteUbergraph_BTT_ch_EnpcDrive::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BTT_ch_EnpcDrive_C_ExecuteUbergraph_BTT_ch_EnpcDrive, CallFunc_SetEnableInputStick_Dummy) == 0x000051, "Member 'BTT_ch_EnpcDrive_C_ExecuteUbergraph_BTT_ch_EnpcDrive::CallFunc_SetEnableInputStick_Dummy' has a wrong offset!");
static_assert(offsetof(BTT_ch_EnpcDrive_C_ExecuteUbergraph_BTT_ch_EnpcDrive, CallFunc_GetAttackCountAI_Count) == 0x000054, "Member 'BTT_ch_EnpcDrive_C_ExecuteUbergraph_BTT_ch_EnpcDrive::CallFunc_GetAttackCountAI_Count' has a wrong offset!");
static_assert(offsetof(BTT_ch_EnpcDrive_C_ExecuteUbergraph_BTT_ch_EnpcDrive, K2Node_DynamicCast_AsRSBattle_Player) == 0x000058, "Member 'BTT_ch_EnpcDrive_C_ExecuteUbergraph_BTT_ch_EnpcDrive::K2Node_DynamicCast_AsRSBattle_Player' has a wrong offset!");
static_assert(offsetof(BTT_ch_EnpcDrive_C_ExecuteUbergraph_BTT_ch_EnpcDrive, K2Node_DynamicCast_bSuccess_2) == 0x000060, "Member 'BTT_ch_EnpcDrive_C_ExecuteUbergraph_BTT_ch_EnpcDrive::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BTT_ch_EnpcDrive_C_ExecuteUbergraph_BTT_ch_EnpcDrive, CallFunc_GetEnpcComp_self_CastInput) == 0x000068, "Member 'BTT_ch_EnpcDrive_C_ExecuteUbergraph_BTT_ch_EnpcDrive::CallFunc_GetEnpcComp_self_CastInput' has a wrong offset!");
static_assert(offsetof(BTT_ch_EnpcDrive_C_ExecuteUbergraph_BTT_ch_EnpcDrive, CallFunc_GetEnpcComp_ReturnComp) == 0x000078, "Member 'BTT_ch_EnpcDrive_C_ExecuteUbergraph_BTT_ch_EnpcDrive::CallFunc_GetEnpcComp_ReturnComp' has a wrong offset!");
static_assert(offsetof(BTT_ch_EnpcDrive_C_ExecuteUbergraph_BTT_ch_EnpcDrive, K2Node_Event_OwnerController) == 0x000080, "Member 'BTT_ch_EnpcDrive_C_ExecuteUbergraph_BTT_ch_EnpcDrive::K2Node_Event_OwnerController' has a wrong offset!");
static_assert(offsetof(BTT_ch_EnpcDrive_C_ExecuteUbergraph_BTT_ch_EnpcDrive, K2Node_Event_ControlledPawn) == 0x000088, "Member 'BTT_ch_EnpcDrive_C_ExecuteUbergraph_BTT_ch_EnpcDrive::K2Node_Event_ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTT_ch_EnpcDrive_C_ExecuteUbergraph_BTT_ch_EnpcDrive, K2Node_Event_DeltaSeconds) == 0x000090, "Member 'BTT_ch_EnpcDrive_C_ExecuteUbergraph_BTT_ch_EnpcDrive::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BTT_ch_EnpcDrive_C_ExecuteUbergraph_BTT_ch_EnpcDrive, CallFunc_IsValid_ReturnValue) == 0x000094, "Member 'BTT_ch_EnpcDrive_C_ExecuteUbergraph_BTT_ch_EnpcDrive::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_ch_EnpcDrive_C_ExecuteUbergraph_BTT_ch_EnpcDrive, K2Node_DynamicCast_AsBPI_Player_AIInterface_2) == 0x000098, "Member 'BTT_ch_EnpcDrive_C_ExecuteUbergraph_BTT_ch_EnpcDrive::K2Node_DynamicCast_AsBPI_Player_AIInterface_2' has a wrong offset!");
static_assert(offsetof(BTT_ch_EnpcDrive_C_ExecuteUbergraph_BTT_ch_EnpcDrive, K2Node_DynamicCast_bSuccess_3) == 0x0000A8, "Member 'BTT_ch_EnpcDrive_C_ExecuteUbergraph_BTT_ch_EnpcDrive::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BTT_ch_EnpcDrive_C_ExecuteUbergraph_BTT_ch_EnpcDrive, CallFunc_IsInputAI_Attack_bON) == 0x0000A9, "Member 'BTT_ch_EnpcDrive_C_ExecuteUbergraph_BTT_ch_EnpcDrive::CallFunc_IsInputAI_Attack_bON' has a wrong offset!");
static_assert(offsetof(BTT_ch_EnpcDrive_C_ExecuteUbergraph_BTT_ch_EnpcDrive, K2Node_DynamicCast_AsBPI_Player_AIInterface_3) == 0x0000B0, "Member 'BTT_ch_EnpcDrive_C_ExecuteUbergraph_BTT_ch_EnpcDrive::K2Node_DynamicCast_AsBPI_Player_AIInterface_3' has a wrong offset!");
static_assert(offsetof(BTT_ch_EnpcDrive_C_ExecuteUbergraph_BTT_ch_EnpcDrive, K2Node_DynamicCast_bSuccess_4) == 0x0000C0, "Member 'BTT_ch_EnpcDrive_C_ExecuteUbergraph_BTT_ch_EnpcDrive::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BTT_ch_EnpcDrive_C_ExecuteUbergraph_BTT_ch_EnpcDrive, K2Node_DynamicCast_AsBPI_Player_AIInterface_4) == 0x0000C8, "Member 'BTT_ch_EnpcDrive_C_ExecuteUbergraph_BTT_ch_EnpcDrive::K2Node_DynamicCast_AsBPI_Player_AIInterface_4' has a wrong offset!");
static_assert(offsetof(BTT_ch_EnpcDrive_C_ExecuteUbergraph_BTT_ch_EnpcDrive, K2Node_DynamicCast_bSuccess_5) == 0x0000D8, "Member 'BTT_ch_EnpcDrive_C_ExecuteUbergraph_BTT_ch_EnpcDrive::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BTT_ch_EnpcDrive_C_ExecuteUbergraph_BTT_ch_EnpcDrive, K2Node_DynamicCast_AsBPI_Player_AIInterface_5) == 0x0000E0, "Member 'BTT_ch_EnpcDrive_C_ExecuteUbergraph_BTT_ch_EnpcDrive::K2Node_DynamicCast_AsBPI_Player_AIInterface_5' has a wrong offset!");
static_assert(offsetof(BTT_ch_EnpcDrive_C_ExecuteUbergraph_BTT_ch_EnpcDrive, K2Node_DynamicCast_bSuccess_6) == 0x0000F0, "Member 'BTT_ch_EnpcDrive_C_ExecuteUbergraph_BTT_ch_EnpcDrive::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(BTT_ch_EnpcDrive_C_ExecuteUbergraph_BTT_ch_EnpcDrive, CallFunc_IsActionStatusAI_bResult) == 0x0000F1, "Member 'BTT_ch_EnpcDrive_C_ExecuteUbergraph_BTT_ch_EnpcDrive::CallFunc_IsActionStatusAI_bResult' has a wrong offset!");
static_assert(offsetof(BTT_ch_EnpcDrive_C_ExecuteUbergraph_BTT_ch_EnpcDrive, CallFunc_IsAttackAble_bEnable) == 0x0000F2, "Member 'BTT_ch_EnpcDrive_C_ExecuteUbergraph_BTT_ch_EnpcDrive::CallFunc_IsAttackAble_bEnable' has a wrong offset!");
static_assert(offsetof(BTT_ch_EnpcDrive_C_ExecuteUbergraph_BTT_ch_EnpcDrive, CallFunc_Not_PreBool_ReturnValue) == 0x0000F3, "Member 'BTT_ch_EnpcDrive_C_ExecuteUbergraph_BTT_ch_EnpcDrive::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_ch_EnpcDrive_C_ExecuteUbergraph_BTT_ch_EnpcDrive, K2Node_DynamicCast_AsBPI_Player_AIInterface_6) == 0x0000F8, "Member 'BTT_ch_EnpcDrive_C_ExecuteUbergraph_BTT_ch_EnpcDrive::K2Node_DynamicCast_AsBPI_Player_AIInterface_6' has a wrong offset!");
static_assert(offsetof(BTT_ch_EnpcDrive_C_ExecuteUbergraph_BTT_ch_EnpcDrive, K2Node_DynamicCast_bSuccess_7) == 0x000108, "Member 'BTT_ch_EnpcDrive_C_ExecuteUbergraph_BTT_ch_EnpcDrive::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(BTT_ch_EnpcDrive_C_ExecuteUbergraph_BTT_ch_EnpcDrive, K2Node_DynamicCast_AsBPI_Player_AIInterface_7) == 0x000110, "Member 'BTT_ch_EnpcDrive_C_ExecuteUbergraph_BTT_ch_EnpcDrive::K2Node_DynamicCast_AsBPI_Player_AIInterface_7' has a wrong offset!");
static_assert(offsetof(BTT_ch_EnpcDrive_C_ExecuteUbergraph_BTT_ch_EnpcDrive, K2Node_DynamicCast_bSuccess_8) == 0x000120, "Member 'BTT_ch_EnpcDrive_C_ExecuteUbergraph_BTT_ch_EnpcDrive::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(BTT_ch_EnpcDrive_C_ExecuteUbergraph_BTT_ch_EnpcDrive, CallFunc_IsAttackAble_bEnable_1) == 0x000121, "Member 'BTT_ch_EnpcDrive_C_ExecuteUbergraph_BTT_ch_EnpcDrive::CallFunc_IsAttackAble_bEnable_1' has a wrong offset!");
static_assert(offsetof(BTT_ch_EnpcDrive_C_ExecuteUbergraph_BTT_ch_EnpcDrive, CallFunc_Exec_Drive_bDummy) == 0x000122, "Member 'BTT_ch_EnpcDrive_C_ExecuteUbergraph_BTT_ch_EnpcDrive::CallFunc_Exec_Drive_bDummy' has a wrong offset!");
static_assert(offsetof(BTT_ch_EnpcDrive_C_ExecuteUbergraph_BTT_ch_EnpcDrive, K2Node_SwitchInteger_CmpSuccess) == 0x000123, "Member 'BTT_ch_EnpcDrive_C_ExecuteUbergraph_BTT_ch_EnpcDrive::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BTT_ch_EnpcDrive_C_ExecuteUbergraph_BTT_ch_EnpcDrive, CallFunc_Add_IntInt_ReturnValue_1) == 0x000124, "Member 'BTT_ch_EnpcDrive_C_ExecuteUbergraph_BTT_ch_EnpcDrive::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTT_ch_EnpcDrive_C_ExecuteUbergraph_BTT_ch_EnpcDrive, Temp_int_Variable) == 0x000128, "Member 'BTT_ch_EnpcDrive_C_ExecuteUbergraph_BTT_ch_EnpcDrive::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BTT_ch_EnpcDrive_C_ExecuteUbergraph_BTT_ch_EnpcDrive, Temp_int_Variable_1) == 0x00012C, "Member 'BTT_ch_EnpcDrive_C_ExecuteUbergraph_BTT_ch_EnpcDrive::Temp_int_Variable_1' has a wrong offset!");

// Function BTT_ch_EnpcDrive.BTT_ch_EnpcDrive_C.ReceiveTickAI
// 0x0018 (0x0018 - 0x0000)
struct BTT_ch_EnpcDrive_C_ReceiveTickAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaSeconds;                                      // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_ch_EnpcDrive_C_ReceiveTickAI) == 0x000008, "Wrong alignment on BTT_ch_EnpcDrive_C_ReceiveTickAI");
static_assert(sizeof(BTT_ch_EnpcDrive_C_ReceiveTickAI) == 0x000018, "Wrong size on BTT_ch_EnpcDrive_C_ReceiveTickAI");
static_assert(offsetof(BTT_ch_EnpcDrive_C_ReceiveTickAI, OwnerController) == 0x000000, "Member 'BTT_ch_EnpcDrive_C_ReceiveTickAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTT_ch_EnpcDrive_C_ReceiveTickAI, ControlledPawn) == 0x000008, "Member 'BTT_ch_EnpcDrive_C_ReceiveTickAI::ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTT_ch_EnpcDrive_C_ReceiveTickAI, DeltaSeconds) == 0x000010, "Member 'BTT_ch_EnpcDrive_C_ReceiveTickAI::DeltaSeconds' has a wrong offset!");

// Function BTT_ch_EnpcDrive.BTT_ch_EnpcDrive_C.ReceiveAbortAI
// 0x0010 (0x0010 - 0x0000)
struct BTT_ch_EnpcDrive_C_ReceiveAbortAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_ch_EnpcDrive_C_ReceiveAbortAI) == 0x000008, "Wrong alignment on BTT_ch_EnpcDrive_C_ReceiveAbortAI");
static_assert(sizeof(BTT_ch_EnpcDrive_C_ReceiveAbortAI) == 0x000010, "Wrong size on BTT_ch_EnpcDrive_C_ReceiveAbortAI");
static_assert(offsetof(BTT_ch_EnpcDrive_C_ReceiveAbortAI, OwnerController) == 0x000000, "Member 'BTT_ch_EnpcDrive_C_ReceiveAbortAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTT_ch_EnpcDrive_C_ReceiveAbortAI, ControlledPawn) == 0x000008, "Member 'BTT_ch_EnpcDrive_C_ReceiveAbortAI::ControlledPawn' has a wrong offset!");

// Function BTT_ch_EnpcDrive.BTT_ch_EnpcDrive_C.ReceiveExecuteAI
// 0x0010 (0x0010 - 0x0000)
struct BTT_ch_EnpcDrive_C_ReceiveExecuteAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_ch_EnpcDrive_C_ReceiveExecuteAI) == 0x000008, "Wrong alignment on BTT_ch_EnpcDrive_C_ReceiveExecuteAI");
static_assert(sizeof(BTT_ch_EnpcDrive_C_ReceiveExecuteAI) == 0x000010, "Wrong size on BTT_ch_EnpcDrive_C_ReceiveExecuteAI");
static_assert(offsetof(BTT_ch_EnpcDrive_C_ReceiveExecuteAI, OwnerController) == 0x000000, "Member 'BTT_ch_EnpcDrive_C_ReceiveExecuteAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTT_ch_EnpcDrive_C_ReceiveExecuteAI, ControlledPawn) == 0x000008, "Member 'BTT_ch_EnpcDrive_C_ReceiveExecuteAI::ControlledPawn' has a wrong offset!");

// Function BTT_ch_EnpcDrive.BTT_ch_EnpcDrive_C.Exit
// 0x0050 (0x0050 - 0x0000)
struct BTT_ch_EnpcDrive_C_Exit final
{
public:
	class APawn*                                  ControlledPawn;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_PlayerAIInterface_C> K2Node_DynamicCast_AsBPI_Player_AIInterface;       // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_96D0[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerAIInterface_C> K2Node_DynamicCast_AsBPI_Player_AIInterface_1;     // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetEnableInputStick_Dummy;                // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NextBattleThink_Dummy;                    // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_96D1[0x5];                                     // 0x0033(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerAIInterface_C> K2Node_DynamicCast_AsBPI_Player_AIInterface_2;     // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BTT_ch_EnpcDrive_C_Exit) == 0x000008, "Wrong alignment on BTT_ch_EnpcDrive_C_Exit");
static_assert(sizeof(BTT_ch_EnpcDrive_C_Exit) == 0x000050, "Wrong size on BTT_ch_EnpcDrive_C_Exit");
static_assert(offsetof(BTT_ch_EnpcDrive_C_Exit, ControlledPawn) == 0x000000, "Member 'BTT_ch_EnpcDrive_C_Exit::ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTT_ch_EnpcDrive_C_Exit, K2Node_DynamicCast_AsBPI_Player_AIInterface) == 0x000008, "Member 'BTT_ch_EnpcDrive_C_Exit::K2Node_DynamicCast_AsBPI_Player_AIInterface' has a wrong offset!");
static_assert(offsetof(BTT_ch_EnpcDrive_C_Exit, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BTT_ch_EnpcDrive_C_Exit::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BTT_ch_EnpcDrive_C_Exit, K2Node_DynamicCast_AsBPI_Player_AIInterface_1) == 0x000020, "Member 'BTT_ch_EnpcDrive_C_Exit::K2Node_DynamicCast_AsBPI_Player_AIInterface_1' has a wrong offset!");
static_assert(offsetof(BTT_ch_EnpcDrive_C_Exit, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'BTT_ch_EnpcDrive_C_Exit::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BTT_ch_EnpcDrive_C_Exit, CallFunc_SetEnableInputStick_Dummy) == 0x000031, "Member 'BTT_ch_EnpcDrive_C_Exit::CallFunc_SetEnableInputStick_Dummy' has a wrong offset!");
static_assert(offsetof(BTT_ch_EnpcDrive_C_Exit, CallFunc_NextBattleThink_Dummy) == 0x000032, "Member 'BTT_ch_EnpcDrive_C_Exit::CallFunc_NextBattleThink_Dummy' has a wrong offset!");
static_assert(offsetof(BTT_ch_EnpcDrive_C_Exit, K2Node_DynamicCast_AsBPI_Player_AIInterface_2) == 0x000038, "Member 'BTT_ch_EnpcDrive_C_Exit::K2Node_DynamicCast_AsBPI_Player_AIInterface_2' has a wrong offset!");
static_assert(offsetof(BTT_ch_EnpcDrive_C_Exit, K2Node_DynamicCast_bSuccess_2) == 0x000048, "Member 'BTT_ch_EnpcDrive_C_Exit::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");

}

