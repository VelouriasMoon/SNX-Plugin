#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ParticleManager

#include "Basic.hpp"

#include "E_SASKind_structs.hpp"
#include "Engine_structs.hpp"
#include "BattlePrototype_structs.hpp"
#include "BattlePrototype_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_ParticleManager.BP_ParticleManager_C
// 0x0038 (0x2A60 - 0x2A28)
class ABP_ParticleManager_C final : public ARSParticleSystemManager
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x2A28(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x2A30(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_EffectBackground_C*>         BPEffectBackGrounds;                               // 0x2A38(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance, HasGetValueTypeHash)
	TArray<class ABP_EffectBackGroundMother_C*>   EffectBackGroundMothers;                           // 0x2A48(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                          bAllHideNow;                                       // 0x2A58(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BP_ParticleManager(int32 EntryPoint);
	void DelayBeginPlay();
	void HideBGEffect(bool ToHide);
	void UnregistEffectBackGroundMother(class ABP_EffectBackGroundMother_C* MotherActor);
	void UnregistEffectBackGround(class ABP_EffectBackground_C* EffectBackground);
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void ReceiveTick(float DeltaSeconds);
	void OnAcceleratorEnd(const struct FAcceleratorParam& Parameter, class AActor* Param_Owner, float RemainTime, bool bHologram);
	void OnAcceleratorStart(const struct FAcceleratorParam& Parameter, class AActor* Param_Owner, bool bHologram);
	void OnPsychicEnd(const struct FFSASPsychicParam& Param, class AActor* Param_Owner, float RemainTime);
	void OnPsychicStart(const struct FFSASPsychicParam& Param, class AActor* Param_Owner);
	void OnCutInEnd();
	void OnCutInStart();
	void OnCopyEnd(const struct FFSASCopyParam& Param, class AActor* Param_Owner, float RemainTime);
	void OnCopyStart(const struct FFSASCopyParam& Param, class AActor* Param_Owner);
	void OnStealthEnd(const struct FFSASStealthParam& Param, class AActor* Param_Owner, float RemainTime);
	void OnStealthStart(const struct FFSASStealthParam& Param, class AActor* Param_Owner);
	void OnTelepoEnd(const struct FFSASTelepoParam& Param, class AActor* Param_Owner, float RemainTime);
	void OnTelepoStart(const struct FFSASTelepoParam& Param, class AActor* Param_Owner);
	void OnSeeThroughEnd(const struct FFSASSeeThroughParam& Param, class AActor* Param_Owner, float RemainTime);
	void OnSeeThroughStart(const struct FFSASSeeThroughParam& Param, class AActor* Param_Owner);
	void OnMetalEnd(const struct FFSASMetalParam& Param, class AActor* Param_Owner, float RemainTime);
	void OnMetalStart(const struct FFSASMetalParam& Param, class AActor* Param_Owner);
	void OnFireEnd(const struct FFSASFireParam& Param, class AActor* Param_Owner, float RemainTime);
	void OnFireStart(const struct FFSASFireParam& Param, class AActor* Param_Owner);
	void OnElectricEnd(const struct FFSASElectricParam& Param, class AActor* Param_Owner, float RemainTime);
	void OnElectricStart(const struct FFSASElectricParam& Param, class AActor* Param_Owner);
	void StopEventPaticles(const class FString& EventName, class UBP_RSParticleBackgroundComponent_C* BackGroundComponent, bool* Stop);
	void PlayEventParticles(const class FString& EventName, class UBP_RSParticleBackgroundComponent_C* BackGroundComponent, bool* Play);
	void PrivateUnregistEffectBackground(class ABP_EffectBackground_C* Background);
	void PrivateUnregistEffectBackgroundMother(class ABP_EffectBackGroundMother_C* Background);
	void SetupStageParam(const struct FVector& Location, class URSParticleSystemComponentBase* RSParticleSystemComp, bool* IsSetup);
	void TickPauseEventStart(TArray<class URSParticleSystemComponentBase*>* SetupParticleComps);
	void TickPauseEventRestore(TArray<class URSParticleSystemComponentBase*>& RestoreParticleComps);
	void SAS_CommonStart(const struct FFSASCommand& SAS_Command, bool* Dummy);
	void SAS_CommonEnd(E_SASKind SAS_Kind, bool bCancelSASCost, bool* bDummy, float* RemainTime);
	void GetLandingTemplate(EPhysicalSurface SurfaceType, class UParticleSystem** Template);
	void GetFootStepTemplate(EPhysicalSurface SurfaceType, class UParticleSystem** Template);
	void OnBeginConnectEffect(class UParticleSystem* ParticleSystem, class FName ObjectName, EEffectConnectPoint SourceConnectPoint, class FName SourceSocketName, EEffectConnectPoint TargetConnectPoint, class FName TargetSocketName, class USoundAtomCue* PlaySound, bool* bDummy);
	void OnEndConnectEffect(class FName ObjectName, bool* bDummy);
	void RegistEffectBackGround(class ABP_EffectBackground_C* EffectBackground, int32* ArrayNumber);
	void ResetParticleArray(bool* Dummy);
	void CalledAtEventStart(const class FString& EventName, bool* Dummy);
	void CalledAtEventEnd(const class FString& EventName, bool* Dummy);
	void RegistEffectBackGroundMother(class ABP_EffectBackGroundMother_C* MotherActor, int32* ArrayNumber);

	void IsAcceleratorValid(bool* Valid) const;
	void IsAccelerating(bool* Accelerating) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ParticleManager_C">();
	}
	static class ABP_ParticleManager_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_ParticleManager_C>();
	}
};
static_assert(alignof(ABP_ParticleManager_C) == 0x000008, "Wrong alignment on ABP_ParticleManager_C");
static_assert(sizeof(ABP_ParticleManager_C) == 0x002A60, "Wrong size on ABP_ParticleManager_C");
static_assert(offsetof(ABP_ParticleManager_C, UberGraphFrame) == 0x002A28, "Member 'ABP_ParticleManager_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_ParticleManager_C, DefaultSceneRoot) == 0x002A30, "Member 'ABP_ParticleManager_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_ParticleManager_C, BPEffectBackGrounds) == 0x002A38, "Member 'ABP_ParticleManager_C::BPEffectBackGrounds' has a wrong offset!");
static_assert(offsetof(ABP_ParticleManager_C, EffectBackGroundMothers) == 0x002A48, "Member 'ABP_ParticleManager_C::EffectBackGroundMothers' has a wrong offset!");
static_assert(offsetof(ABP_ParticleManager_C, bAllHideNow) == 0x002A58, "Member 'ABP_ParticleManager_C::bAllHideNow' has a wrong offset!");

}

