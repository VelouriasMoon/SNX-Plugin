#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ParticleManager

#include "Basic.hpp"

#include "BattlePrototype_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "E_SASKind_structs.hpp"
#include "Engine_structs.hpp"
#include "FSASCommand_structs.hpp"
#include "FSASElectricParam_structs.hpp"
#include "FSASFireParam_structs.hpp"
#include "FSASSeeThroughParam_structs.hpp"
#include "FSASMetalParam_structs.hpp"
#include "FSASTelepoParam_structs.hpp"
#include "FSASStealthParam_structs.hpp"
#include "FSASCopyParam_structs.hpp"
#include "FSASPsychicParam_structs.hpp"
#include "AcceleratorParam_structs.hpp"


namespace SDK::Params
{

// Function BP_ParticleManager.BP_ParticleManager_C.ExecuteUbergraph_BP_ParticleManager
// 0x01F0 (0x01F0 - 0x0000)
struct BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFSASElectricParam                     K2Node_Event_param_15;                             // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8CC8[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Owner_17;                             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFSASElectricParam                     K2Node_Event_param_14;                             // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8CC9[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Owner_16;                             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_RemainTime_8;                         // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFSASFireParam                         K2Node_Event_param_13;                             // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8CCA[0x3];                                     // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Owner_15;                             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFSASFireParam                         K2Node_Event_param_12;                             // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8CCB[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Owner_14;                             // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_RemainTime_7;                         // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFSASMetalParam                        K2Node_Event_param_11;                             // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8CCC[0x3];                                     // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Owner_13;                             // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFSASMetalParam                        K2Node_Event_param_10;                             // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8CCD[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Owner_12;                             // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_RemainTime_6;                         // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFSASSeeThroughParam                   K2Node_Event_param_9;                              // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8CCE[0x3];                                     // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Owner_11;                             // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFSASSeeThroughParam                   K2Node_Event_param_8;                              // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8CCF[0x7];                                     // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Owner_10;                             // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_RemainTime_5;                         // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFSASTelepoParam                       K2Node_Event_param_7;                              // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8CD0[0x3];                                     // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Owner_9;                              // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFSASTelepoParam                       K2Node_Event_param_6;                              // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8CD1[0x7];                                     // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Owner_8;                              // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_RemainTime_4;                         // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFSASStealthParam                      K2Node_Event_param_5;                              // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8CD2[0x3];                                     // 0x00BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Owner_7;                              // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFSASStealthParam                      K2Node_Event_param_4;                              // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8CD3[0x7];                                     // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Owner_6;                              // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_RemainTime_3;                         // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFSASCopyParam                         K2Node_Event_param_3;                              // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8CD4[0x3];                                     // 0x00DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Owner_5;                              // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFSASCopyParam                         K2Node_Event_param_2;                              // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8CD5[0x7];                                     // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Owner_4;                              // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_RemainTime_2;                         // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFSASPsychicParam                      K2Node_Event_param_1;                              // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8CD6[0x3];                                     // 0x00FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Owner_3;                              // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFSASPsychicParam                      K2Node_Event_param;                                // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8CD7[0x7];                                     // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Owner_2;                              // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_RemainTime_1;                         // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAcceleratorParam                      K2Node_Event_Parameter_1;                          // 0x011C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_Owner_1;                              // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bHologram_1;                          // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8CD8[0x3];                                     // 0x0131(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAcceleratorParam                      K2Node_Event_Parameter;                            // 0x0134(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_Owner;                                // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_RemainTime;                           // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bHologram;                            // 0x014C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8CD9[0x3];                                     // 0x014D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URSParticleSystemComponentBase*         CallFunc_Array_Get_Item;                           // 0x0160(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8CDA[0x4];                                     // 0x016C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_SASInterface_C>   K2Node_DynamicCast_AsBPI_SASInterface;             // 0x0170(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0181(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0182(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8CDB[0x1];                                     // 0x0183(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_EffectBackground_C*                 K2Node_Event_EffectBackGround;                     // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_EffectBackGroundMother_C*           K2Node_Event_MotherActor;                          // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_toHide;                         // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0199(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8CDC[0x2];                                     // 0x019A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_BoolBool_ReturnValue;          // 0x01A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x01A3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue_1;                  // 0x01A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8CDD[0x3];                                     // 0x01A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_BoolBool_ReturnValue_1;        // 0x01AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x01AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8CDE[0x2];                                     // 0x01AE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8CDF[0x3];                                     // 0x01B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URSParticleSystemComponentBase*         CallFunc_Array_Get_Item_1;                         // 0x01C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8CE0[0x7];                                     // 0x01C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_SASInterface_C>   K2Node_DynamicCast_AsBPI_SASInterface_1;           // 0x01D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8CE1[0x3];                                     // 0x01E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8CE2[0x3];                                     // 0x01E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager) == 0x000008, "Wrong alignment on BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager");
static_assert(sizeof(BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager) == 0x0001F0, "Wrong size on BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager");
static_assert(offsetof(BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager, EntryPoint) == 0x000000, "Member 'BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager, Temp_int_Variable) == 0x000004, "Member 'BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager, CallFunc_Add_IntInt_ReturnValue_1) == 0x000014, "Member 'BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager, Temp_int_Array_Index_Variable_1) == 0x000018, "Member 'BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager, K2Node_Event_param_15) == 0x00001C, "Member 'BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager::K2Node_Event_param_15' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager, K2Node_Event_Owner_17) == 0x000020, "Member 'BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager::K2Node_Event_Owner_17' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager, K2Node_Event_param_14) == 0x000028, "Member 'BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager::K2Node_Event_param_14' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager, K2Node_Event_Owner_16) == 0x000030, "Member 'BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager::K2Node_Event_Owner_16' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager, K2Node_Event_RemainTime_8) == 0x000038, "Member 'BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager::K2Node_Event_RemainTime_8' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager, K2Node_Event_param_13) == 0x00003C, "Member 'BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager::K2Node_Event_param_13' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager, K2Node_Event_Owner_15) == 0x000040, "Member 'BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager::K2Node_Event_Owner_15' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager, K2Node_Event_param_12) == 0x000048, "Member 'BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager::K2Node_Event_param_12' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager, K2Node_Event_Owner_14) == 0x000050, "Member 'BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager::K2Node_Event_Owner_14' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager, K2Node_Event_RemainTime_7) == 0x000058, "Member 'BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager::K2Node_Event_RemainTime_7' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager, K2Node_Event_param_11) == 0x00005C, "Member 'BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager::K2Node_Event_param_11' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager, K2Node_Event_Owner_13) == 0x000060, "Member 'BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager::K2Node_Event_Owner_13' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager, K2Node_Event_param_10) == 0x000068, "Member 'BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager::K2Node_Event_param_10' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager, K2Node_Event_Owner_12) == 0x000070, "Member 'BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager::K2Node_Event_Owner_12' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager, K2Node_Event_RemainTime_6) == 0x000078, "Member 'BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager::K2Node_Event_RemainTime_6' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager, K2Node_Event_param_9) == 0x00007C, "Member 'BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager::K2Node_Event_param_9' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager, K2Node_Event_Owner_11) == 0x000080, "Member 'BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager::K2Node_Event_Owner_11' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager, K2Node_Event_param_8) == 0x000088, "Member 'BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager::K2Node_Event_param_8' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager, K2Node_Event_Owner_10) == 0x000090, "Member 'BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager::K2Node_Event_Owner_10' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager, K2Node_Event_RemainTime_5) == 0x000098, "Member 'BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager::K2Node_Event_RemainTime_5' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager, K2Node_Event_param_7) == 0x00009C, "Member 'BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager::K2Node_Event_param_7' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager, K2Node_Event_Owner_9) == 0x0000A0, "Member 'BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager::K2Node_Event_Owner_9' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager, K2Node_Event_param_6) == 0x0000A8, "Member 'BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager::K2Node_Event_param_6' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager, K2Node_Event_Owner_8) == 0x0000B0, "Member 'BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager::K2Node_Event_Owner_8' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager, K2Node_Event_RemainTime_4) == 0x0000B8, "Member 'BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager::K2Node_Event_RemainTime_4' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager, K2Node_Event_param_5) == 0x0000BC, "Member 'BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager::K2Node_Event_param_5' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager, K2Node_Event_Owner_7) == 0x0000C0, "Member 'BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager::K2Node_Event_Owner_7' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager, K2Node_Event_param_4) == 0x0000C8, "Member 'BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager::K2Node_Event_param_4' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager, K2Node_Event_Owner_6) == 0x0000D0, "Member 'BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager::K2Node_Event_Owner_6' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager, K2Node_Event_RemainTime_3) == 0x0000D8, "Member 'BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager::K2Node_Event_RemainTime_3' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager, K2Node_Event_param_3) == 0x0000DC, "Member 'BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager::K2Node_Event_param_3' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager, K2Node_Event_Owner_5) == 0x0000E0, "Member 'BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager::K2Node_Event_Owner_5' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager, K2Node_Event_param_2) == 0x0000E8, "Member 'BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager::K2Node_Event_param_2' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager, K2Node_Event_Owner_4) == 0x0000F0, "Member 'BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager::K2Node_Event_Owner_4' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager, K2Node_Event_RemainTime_2) == 0x0000F8, "Member 'BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager::K2Node_Event_RemainTime_2' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager, K2Node_Event_param_1) == 0x0000FC, "Member 'BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager::K2Node_Event_param_1' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager, K2Node_Event_Owner_3) == 0x000100, "Member 'BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager::K2Node_Event_Owner_3' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager, K2Node_Event_param) == 0x000108, "Member 'BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager::K2Node_Event_param' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager, K2Node_Event_Owner_2) == 0x000110, "Member 'BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager::K2Node_Event_Owner_2' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager, K2Node_Event_RemainTime_1) == 0x000118, "Member 'BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager::K2Node_Event_RemainTime_1' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager, K2Node_Event_Parameter_1) == 0x00011C, "Member 'BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager::K2Node_Event_Parameter_1' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager, K2Node_Event_Owner_1) == 0x000128, "Member 'BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager::K2Node_Event_Owner_1' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager, K2Node_Event_bHologram_1) == 0x000130, "Member 'BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager::K2Node_Event_bHologram_1' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager, K2Node_Event_Parameter) == 0x000134, "Member 'BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager::K2Node_Event_Parameter' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager, K2Node_Event_Owner) == 0x000140, "Member 'BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager::K2Node_Event_Owner' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager, K2Node_Event_RemainTime) == 0x000148, "Member 'BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager::K2Node_Event_RemainTime' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager, K2Node_Event_bHologram) == 0x00014C, "Member 'BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager::K2Node_Event_bHologram' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager, Temp_int_Loop_Counter_Variable_1) == 0x000150, "Member 'BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager, CallFunc_Array_Length_ReturnValue) == 0x000154, "Member 'BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager, CallFunc_Add_IntInt_ReturnValue_2) == 0x000158, "Member 'BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager, K2Node_Event_DeltaSeconds) == 0x00015C, "Member 'BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager, CallFunc_Array_Get_Item) == 0x000160, "Member 'BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager, CallFunc_Array_Length_ReturnValue_1) == 0x000168, "Member 'BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager, K2Node_DynamicCast_AsBPI_SASInterface) == 0x000170, "Member 'BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager::K2Node_DynamicCast_AsBPI_SASInterface' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager, K2Node_DynamicCast_bSuccess) == 0x000180, "Member 'BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager, CallFunc_Less_IntInt_ReturnValue) == 0x000181, "Member 'BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager, K2Node_Event_EndPlayReason) == 0x000182, "Member 'BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager, Temp_int_Array_Index_Variable_2) == 0x000184, "Member 'BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager, K2Node_Event_EffectBackGround) == 0x000188, "Member 'BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager::K2Node_Event_EffectBackGround' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager, K2Node_Event_MotherActor) == 0x000190, "Member 'BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager::K2Node_Event_MotherActor' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager, K2Node_CustomEvent_toHide) == 0x000198, "Member 'BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager::K2Node_CustomEvent_toHide' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager, CallFunc_Not_PreBool_ReturnValue) == 0x000199, "Member 'BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager, CallFunc_Array_Length_ReturnValue_2) == 0x00019C, "Member 'BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager, CallFunc_IsVisible_ReturnValue) == 0x0001A0, "Member 'BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager, CallFunc_IsValid_ReturnValue) == 0x0001A1, "Member 'BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager, CallFunc_EqualEqual_BoolBool_ReturnValue) == 0x0001A2, "Member 'BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager::CallFunc_EqualEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager, CallFunc_IsValid_ReturnValue_1) == 0x0001A3, "Member 'BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager, CallFunc_IsVisible_ReturnValue_1) == 0x0001A4, "Member 'BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager::CallFunc_IsVisible_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager, CallFunc_Array_Length_ReturnValue_3) == 0x0001A8, "Member 'BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager, CallFunc_EqualEqual_BoolBool_ReturnValue_1) == 0x0001AC, "Member 'BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager::CallFunc_EqualEqual_BoolBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager, CallFunc_Less_IntInt_ReturnValue_1) == 0x0001AD, "Member 'BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager, CallFunc_Array_Length_ReturnValue_4) == 0x0001B0, "Member 'BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager, Temp_int_Variable_1) == 0x0001B4, "Member 'BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager, CallFunc_Less_IntInt_ReturnValue_2) == 0x0001B8, "Member 'BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager, CallFunc_Add_IntInt_ReturnValue_3) == 0x0001BC, "Member 'BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager, CallFunc_Array_Get_Item_1) == 0x0001C0, "Member 'BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager, CallFunc_Less_IntInt_ReturnValue_3) == 0x0001C8, "Member 'BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager, K2Node_DynamicCast_AsBPI_SASInterface_1) == 0x0001D0, "Member 'BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager::K2Node_DynamicCast_AsBPI_SASInterface_1' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager, K2Node_DynamicCast_bSuccess_1) == 0x0001E0, "Member 'BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager, Temp_int_Loop_Counter_Variable_2) == 0x0001E4, "Member 'BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager, CallFunc_Less_IntInt_ReturnValue_4) == 0x0001E8, "Member 'BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager, CallFunc_Add_IntInt_ReturnValue_4) == 0x0001EC, "Member 'BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");

// Function BP_ParticleManager.BP_ParticleManager_C.HideBGEffect
// 0x0001 (0x0001 - 0x0000)
struct BP_ParticleManager_C_HideBGEffect final
{
public:
	bool                                          ToHide;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ParticleManager_C_HideBGEffect) == 0x000001, "Wrong alignment on BP_ParticleManager_C_HideBGEffect");
static_assert(sizeof(BP_ParticleManager_C_HideBGEffect) == 0x000001, "Wrong size on BP_ParticleManager_C_HideBGEffect");
static_assert(offsetof(BP_ParticleManager_C_HideBGEffect, ToHide) == 0x000000, "Member 'BP_ParticleManager_C_HideBGEffect::ToHide' has a wrong offset!");

// Function BP_ParticleManager.BP_ParticleManager_C.UnregistEffectBackGroundMother
// 0x0008 (0x0008 - 0x0000)
struct BP_ParticleManager_C_UnregistEffectBackGroundMother final
{
public:
	class ABP_EffectBackGroundMother_C*           MotherActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ParticleManager_C_UnregistEffectBackGroundMother) == 0x000008, "Wrong alignment on BP_ParticleManager_C_UnregistEffectBackGroundMother");
static_assert(sizeof(BP_ParticleManager_C_UnregistEffectBackGroundMother) == 0x000008, "Wrong size on BP_ParticleManager_C_UnregistEffectBackGroundMother");
static_assert(offsetof(BP_ParticleManager_C_UnregistEffectBackGroundMother, MotherActor) == 0x000000, "Member 'BP_ParticleManager_C_UnregistEffectBackGroundMother::MotherActor' has a wrong offset!");

// Function BP_ParticleManager.BP_ParticleManager_C.UnregistEffectBackGround
// 0x0008 (0x0008 - 0x0000)
struct BP_ParticleManager_C_UnregistEffectBackGround final
{
public:
	class ABP_EffectBackground_C*                 EffectBackground;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ParticleManager_C_UnregistEffectBackGround) == 0x000008, "Wrong alignment on BP_ParticleManager_C_UnregistEffectBackGround");
static_assert(sizeof(BP_ParticleManager_C_UnregistEffectBackGround) == 0x000008, "Wrong size on BP_ParticleManager_C_UnregistEffectBackGround");
static_assert(offsetof(BP_ParticleManager_C_UnregistEffectBackGround, EffectBackground) == 0x000000, "Member 'BP_ParticleManager_C_UnregistEffectBackGround::EffectBackground' has a wrong offset!");

// Function BP_ParticleManager.BP_ParticleManager_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_ParticleManager_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ParticleManager_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BP_ParticleManager_C_ReceiveEndPlay");
static_assert(sizeof(BP_ParticleManager_C_ReceiveEndPlay) == 0x000001, "Wrong size on BP_ParticleManager_C_ReceiveEndPlay");
static_assert(offsetof(BP_ParticleManager_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BP_ParticleManager_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BP_ParticleManager.BP_ParticleManager_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_ParticleManager_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ParticleManager_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_ParticleManager_C_ReceiveTick");
static_assert(sizeof(BP_ParticleManager_C_ReceiveTick) == 0x000004, "Wrong size on BP_ParticleManager_C_ReceiveTick");
static_assert(offsetof(BP_ParticleManager_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_ParticleManager_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_ParticleManager.BP_ParticleManager_C.OnAcceleratorEnd
// 0x0020 (0x0020 - 0x0000)
struct BP_ParticleManager_C_OnAcceleratorEnd final
{
public:
	struct FAcceleratorParam                      Parameter;                                         // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8CE3[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Param_Owner;                                       // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RemainTime;                                        // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bHologram;                                         // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ParticleManager_C_OnAcceleratorEnd) == 0x000008, "Wrong alignment on BP_ParticleManager_C_OnAcceleratorEnd");
static_assert(sizeof(BP_ParticleManager_C_OnAcceleratorEnd) == 0x000020, "Wrong size on BP_ParticleManager_C_OnAcceleratorEnd");
static_assert(offsetof(BP_ParticleManager_C_OnAcceleratorEnd, Parameter) == 0x000000, "Member 'BP_ParticleManager_C_OnAcceleratorEnd::Parameter' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_OnAcceleratorEnd, Param_Owner) == 0x000010, "Member 'BP_ParticleManager_C_OnAcceleratorEnd::Param_Owner' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_OnAcceleratorEnd, RemainTime) == 0x000018, "Member 'BP_ParticleManager_C_OnAcceleratorEnd::RemainTime' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_OnAcceleratorEnd, bHologram) == 0x00001C, "Member 'BP_ParticleManager_C_OnAcceleratorEnd::bHologram' has a wrong offset!");

// Function BP_ParticleManager.BP_ParticleManager_C.OnAcceleratorStart
// 0x0020 (0x0020 - 0x0000)
struct BP_ParticleManager_C_OnAcceleratorStart final
{
public:
	struct FAcceleratorParam                      Parameter;                                         // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8CE4[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Param_Owner;                                       // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bHologram;                                         // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ParticleManager_C_OnAcceleratorStart) == 0x000008, "Wrong alignment on BP_ParticleManager_C_OnAcceleratorStart");
static_assert(sizeof(BP_ParticleManager_C_OnAcceleratorStart) == 0x000020, "Wrong size on BP_ParticleManager_C_OnAcceleratorStart");
static_assert(offsetof(BP_ParticleManager_C_OnAcceleratorStart, Parameter) == 0x000000, "Member 'BP_ParticleManager_C_OnAcceleratorStart::Parameter' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_OnAcceleratorStart, Param_Owner) == 0x000010, "Member 'BP_ParticleManager_C_OnAcceleratorStart::Param_Owner' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_OnAcceleratorStart, bHologram) == 0x000018, "Member 'BP_ParticleManager_C_OnAcceleratorStart::bHologram' has a wrong offset!");

// Function BP_ParticleManager.BP_ParticleManager_C.OnPsychicEnd
// 0x0018 (0x0018 - 0x0000)
struct BP_ParticleManager_C_OnPsychicEnd final
{
public:
	struct FFSASPsychicParam                      Param;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8CE5[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Param_Owner;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RemainTime;                                        // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ParticleManager_C_OnPsychicEnd) == 0x000008, "Wrong alignment on BP_ParticleManager_C_OnPsychicEnd");
static_assert(sizeof(BP_ParticleManager_C_OnPsychicEnd) == 0x000018, "Wrong size on BP_ParticleManager_C_OnPsychicEnd");
static_assert(offsetof(BP_ParticleManager_C_OnPsychicEnd, Param) == 0x000000, "Member 'BP_ParticleManager_C_OnPsychicEnd::Param' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_OnPsychicEnd, Param_Owner) == 0x000008, "Member 'BP_ParticleManager_C_OnPsychicEnd::Param_Owner' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_OnPsychicEnd, RemainTime) == 0x000010, "Member 'BP_ParticleManager_C_OnPsychicEnd::RemainTime' has a wrong offset!");

// Function BP_ParticleManager.BP_ParticleManager_C.OnPsychicStart
// 0x0010 (0x0010 - 0x0000)
struct BP_ParticleManager_C_OnPsychicStart final
{
public:
	struct FFSASPsychicParam                      Param;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8CE6[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Param_Owner;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ParticleManager_C_OnPsychicStart) == 0x000008, "Wrong alignment on BP_ParticleManager_C_OnPsychicStart");
static_assert(sizeof(BP_ParticleManager_C_OnPsychicStart) == 0x000010, "Wrong size on BP_ParticleManager_C_OnPsychicStart");
static_assert(offsetof(BP_ParticleManager_C_OnPsychicStart, Param) == 0x000000, "Member 'BP_ParticleManager_C_OnPsychicStart::Param' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_OnPsychicStart, Param_Owner) == 0x000008, "Member 'BP_ParticleManager_C_OnPsychicStart::Param_Owner' has a wrong offset!");

// Function BP_ParticleManager.BP_ParticleManager_C.OnCopyEnd
// 0x0018 (0x0018 - 0x0000)
struct BP_ParticleManager_C_OnCopyEnd final
{
public:
	struct FFSASCopyParam                         Param;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8CE7[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Param_Owner;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RemainTime;                                        // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ParticleManager_C_OnCopyEnd) == 0x000008, "Wrong alignment on BP_ParticleManager_C_OnCopyEnd");
static_assert(sizeof(BP_ParticleManager_C_OnCopyEnd) == 0x000018, "Wrong size on BP_ParticleManager_C_OnCopyEnd");
static_assert(offsetof(BP_ParticleManager_C_OnCopyEnd, Param) == 0x000000, "Member 'BP_ParticleManager_C_OnCopyEnd::Param' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_OnCopyEnd, Param_Owner) == 0x000008, "Member 'BP_ParticleManager_C_OnCopyEnd::Param_Owner' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_OnCopyEnd, RemainTime) == 0x000010, "Member 'BP_ParticleManager_C_OnCopyEnd::RemainTime' has a wrong offset!");

// Function BP_ParticleManager.BP_ParticleManager_C.OnCopyStart
// 0x0010 (0x0010 - 0x0000)
struct BP_ParticleManager_C_OnCopyStart final
{
public:
	struct FFSASCopyParam                         Param;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8CE8[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Param_Owner;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ParticleManager_C_OnCopyStart) == 0x000008, "Wrong alignment on BP_ParticleManager_C_OnCopyStart");
static_assert(sizeof(BP_ParticleManager_C_OnCopyStart) == 0x000010, "Wrong size on BP_ParticleManager_C_OnCopyStart");
static_assert(offsetof(BP_ParticleManager_C_OnCopyStart, Param) == 0x000000, "Member 'BP_ParticleManager_C_OnCopyStart::Param' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_OnCopyStart, Param_Owner) == 0x000008, "Member 'BP_ParticleManager_C_OnCopyStart::Param_Owner' has a wrong offset!");

// Function BP_ParticleManager.BP_ParticleManager_C.OnStealthEnd
// 0x0018 (0x0018 - 0x0000)
struct BP_ParticleManager_C_OnStealthEnd final
{
public:
	struct FFSASStealthParam                      Param;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8CE9[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Param_Owner;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RemainTime;                                        // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ParticleManager_C_OnStealthEnd) == 0x000008, "Wrong alignment on BP_ParticleManager_C_OnStealthEnd");
static_assert(sizeof(BP_ParticleManager_C_OnStealthEnd) == 0x000018, "Wrong size on BP_ParticleManager_C_OnStealthEnd");
static_assert(offsetof(BP_ParticleManager_C_OnStealthEnd, Param) == 0x000000, "Member 'BP_ParticleManager_C_OnStealthEnd::Param' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_OnStealthEnd, Param_Owner) == 0x000008, "Member 'BP_ParticleManager_C_OnStealthEnd::Param_Owner' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_OnStealthEnd, RemainTime) == 0x000010, "Member 'BP_ParticleManager_C_OnStealthEnd::RemainTime' has a wrong offset!");

// Function BP_ParticleManager.BP_ParticleManager_C.OnStealthStart
// 0x0010 (0x0010 - 0x0000)
struct BP_ParticleManager_C_OnStealthStart final
{
public:
	struct FFSASStealthParam                      Param;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8CEA[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Param_Owner;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ParticleManager_C_OnStealthStart) == 0x000008, "Wrong alignment on BP_ParticleManager_C_OnStealthStart");
static_assert(sizeof(BP_ParticleManager_C_OnStealthStart) == 0x000010, "Wrong size on BP_ParticleManager_C_OnStealthStart");
static_assert(offsetof(BP_ParticleManager_C_OnStealthStart, Param) == 0x000000, "Member 'BP_ParticleManager_C_OnStealthStart::Param' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_OnStealthStart, Param_Owner) == 0x000008, "Member 'BP_ParticleManager_C_OnStealthStart::Param_Owner' has a wrong offset!");

// Function BP_ParticleManager.BP_ParticleManager_C.OnTelepoEnd
// 0x0018 (0x0018 - 0x0000)
struct BP_ParticleManager_C_OnTelepoEnd final
{
public:
	struct FFSASTelepoParam                       Param;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8CEB[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Param_Owner;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RemainTime;                                        // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ParticleManager_C_OnTelepoEnd) == 0x000008, "Wrong alignment on BP_ParticleManager_C_OnTelepoEnd");
static_assert(sizeof(BP_ParticleManager_C_OnTelepoEnd) == 0x000018, "Wrong size on BP_ParticleManager_C_OnTelepoEnd");
static_assert(offsetof(BP_ParticleManager_C_OnTelepoEnd, Param) == 0x000000, "Member 'BP_ParticleManager_C_OnTelepoEnd::Param' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_OnTelepoEnd, Param_Owner) == 0x000008, "Member 'BP_ParticleManager_C_OnTelepoEnd::Param_Owner' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_OnTelepoEnd, RemainTime) == 0x000010, "Member 'BP_ParticleManager_C_OnTelepoEnd::RemainTime' has a wrong offset!");

// Function BP_ParticleManager.BP_ParticleManager_C.OnTelepoStart
// 0x0010 (0x0010 - 0x0000)
struct BP_ParticleManager_C_OnTelepoStart final
{
public:
	struct FFSASTelepoParam                       Param;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8CEC[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Param_Owner;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ParticleManager_C_OnTelepoStart) == 0x000008, "Wrong alignment on BP_ParticleManager_C_OnTelepoStart");
static_assert(sizeof(BP_ParticleManager_C_OnTelepoStart) == 0x000010, "Wrong size on BP_ParticleManager_C_OnTelepoStart");
static_assert(offsetof(BP_ParticleManager_C_OnTelepoStart, Param) == 0x000000, "Member 'BP_ParticleManager_C_OnTelepoStart::Param' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_OnTelepoStart, Param_Owner) == 0x000008, "Member 'BP_ParticleManager_C_OnTelepoStart::Param_Owner' has a wrong offset!");

// Function BP_ParticleManager.BP_ParticleManager_C.OnSeeThroughEnd
// 0x0018 (0x0018 - 0x0000)
struct BP_ParticleManager_C_OnSeeThroughEnd final
{
public:
	struct FFSASSeeThroughParam                   Param;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8CED[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Param_Owner;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RemainTime;                                        // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ParticleManager_C_OnSeeThroughEnd) == 0x000008, "Wrong alignment on BP_ParticleManager_C_OnSeeThroughEnd");
static_assert(sizeof(BP_ParticleManager_C_OnSeeThroughEnd) == 0x000018, "Wrong size on BP_ParticleManager_C_OnSeeThroughEnd");
static_assert(offsetof(BP_ParticleManager_C_OnSeeThroughEnd, Param) == 0x000000, "Member 'BP_ParticleManager_C_OnSeeThroughEnd::Param' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_OnSeeThroughEnd, Param_Owner) == 0x000008, "Member 'BP_ParticleManager_C_OnSeeThroughEnd::Param_Owner' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_OnSeeThroughEnd, RemainTime) == 0x000010, "Member 'BP_ParticleManager_C_OnSeeThroughEnd::RemainTime' has a wrong offset!");

// Function BP_ParticleManager.BP_ParticleManager_C.OnSeeThroughStart
// 0x0010 (0x0010 - 0x0000)
struct BP_ParticleManager_C_OnSeeThroughStart final
{
public:
	struct FFSASSeeThroughParam                   Param;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8CEE[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Param_Owner;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ParticleManager_C_OnSeeThroughStart) == 0x000008, "Wrong alignment on BP_ParticleManager_C_OnSeeThroughStart");
static_assert(sizeof(BP_ParticleManager_C_OnSeeThroughStart) == 0x000010, "Wrong size on BP_ParticleManager_C_OnSeeThroughStart");
static_assert(offsetof(BP_ParticleManager_C_OnSeeThroughStart, Param) == 0x000000, "Member 'BP_ParticleManager_C_OnSeeThroughStart::Param' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_OnSeeThroughStart, Param_Owner) == 0x000008, "Member 'BP_ParticleManager_C_OnSeeThroughStart::Param_Owner' has a wrong offset!");

// Function BP_ParticleManager.BP_ParticleManager_C.OnMetalEnd
// 0x0018 (0x0018 - 0x0000)
struct BP_ParticleManager_C_OnMetalEnd final
{
public:
	struct FFSASMetalParam                        Param;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8CEF[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Param_Owner;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RemainTime;                                        // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ParticleManager_C_OnMetalEnd) == 0x000008, "Wrong alignment on BP_ParticleManager_C_OnMetalEnd");
static_assert(sizeof(BP_ParticleManager_C_OnMetalEnd) == 0x000018, "Wrong size on BP_ParticleManager_C_OnMetalEnd");
static_assert(offsetof(BP_ParticleManager_C_OnMetalEnd, Param) == 0x000000, "Member 'BP_ParticleManager_C_OnMetalEnd::Param' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_OnMetalEnd, Param_Owner) == 0x000008, "Member 'BP_ParticleManager_C_OnMetalEnd::Param_Owner' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_OnMetalEnd, RemainTime) == 0x000010, "Member 'BP_ParticleManager_C_OnMetalEnd::RemainTime' has a wrong offset!");

// Function BP_ParticleManager.BP_ParticleManager_C.OnMetalStart
// 0x0010 (0x0010 - 0x0000)
struct BP_ParticleManager_C_OnMetalStart final
{
public:
	struct FFSASMetalParam                        Param;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8CF0[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Param_Owner;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ParticleManager_C_OnMetalStart) == 0x000008, "Wrong alignment on BP_ParticleManager_C_OnMetalStart");
static_assert(sizeof(BP_ParticleManager_C_OnMetalStart) == 0x000010, "Wrong size on BP_ParticleManager_C_OnMetalStart");
static_assert(offsetof(BP_ParticleManager_C_OnMetalStart, Param) == 0x000000, "Member 'BP_ParticleManager_C_OnMetalStart::Param' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_OnMetalStart, Param_Owner) == 0x000008, "Member 'BP_ParticleManager_C_OnMetalStart::Param_Owner' has a wrong offset!");

// Function BP_ParticleManager.BP_ParticleManager_C.OnFireEnd
// 0x0018 (0x0018 - 0x0000)
struct BP_ParticleManager_C_OnFireEnd final
{
public:
	struct FFSASFireParam                         Param;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8CF1[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Param_Owner;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RemainTime;                                        // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ParticleManager_C_OnFireEnd) == 0x000008, "Wrong alignment on BP_ParticleManager_C_OnFireEnd");
static_assert(sizeof(BP_ParticleManager_C_OnFireEnd) == 0x000018, "Wrong size on BP_ParticleManager_C_OnFireEnd");
static_assert(offsetof(BP_ParticleManager_C_OnFireEnd, Param) == 0x000000, "Member 'BP_ParticleManager_C_OnFireEnd::Param' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_OnFireEnd, Param_Owner) == 0x000008, "Member 'BP_ParticleManager_C_OnFireEnd::Param_Owner' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_OnFireEnd, RemainTime) == 0x000010, "Member 'BP_ParticleManager_C_OnFireEnd::RemainTime' has a wrong offset!");

// Function BP_ParticleManager.BP_ParticleManager_C.OnFireStart
// 0x0010 (0x0010 - 0x0000)
struct BP_ParticleManager_C_OnFireStart final
{
public:
	struct FFSASFireParam                         Param;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8CF2[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Param_Owner;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ParticleManager_C_OnFireStart) == 0x000008, "Wrong alignment on BP_ParticleManager_C_OnFireStart");
static_assert(sizeof(BP_ParticleManager_C_OnFireStart) == 0x000010, "Wrong size on BP_ParticleManager_C_OnFireStart");
static_assert(offsetof(BP_ParticleManager_C_OnFireStart, Param) == 0x000000, "Member 'BP_ParticleManager_C_OnFireStart::Param' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_OnFireStart, Param_Owner) == 0x000008, "Member 'BP_ParticleManager_C_OnFireStart::Param_Owner' has a wrong offset!");

// Function BP_ParticleManager.BP_ParticleManager_C.OnElectricEnd
// 0x0018 (0x0018 - 0x0000)
struct BP_ParticleManager_C_OnElectricEnd final
{
public:
	struct FFSASElectricParam                     Param;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8CF3[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Param_Owner;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RemainTime;                                        // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ParticleManager_C_OnElectricEnd) == 0x000008, "Wrong alignment on BP_ParticleManager_C_OnElectricEnd");
static_assert(sizeof(BP_ParticleManager_C_OnElectricEnd) == 0x000018, "Wrong size on BP_ParticleManager_C_OnElectricEnd");
static_assert(offsetof(BP_ParticleManager_C_OnElectricEnd, Param) == 0x000000, "Member 'BP_ParticleManager_C_OnElectricEnd::Param' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_OnElectricEnd, Param_Owner) == 0x000008, "Member 'BP_ParticleManager_C_OnElectricEnd::Param_Owner' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_OnElectricEnd, RemainTime) == 0x000010, "Member 'BP_ParticleManager_C_OnElectricEnd::RemainTime' has a wrong offset!");

// Function BP_ParticleManager.BP_ParticleManager_C.OnElectricStart
// 0x0010 (0x0010 - 0x0000)
struct BP_ParticleManager_C_OnElectricStart final
{
public:
	struct FFSASElectricParam                     Param;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8CF4[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Param_Owner;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ParticleManager_C_OnElectricStart) == 0x000008, "Wrong alignment on BP_ParticleManager_C_OnElectricStart");
static_assert(sizeof(BP_ParticleManager_C_OnElectricStart) == 0x000010, "Wrong size on BP_ParticleManager_C_OnElectricStart");
static_assert(offsetof(BP_ParticleManager_C_OnElectricStart, Param) == 0x000000, "Member 'BP_ParticleManager_C_OnElectricStart::Param' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_OnElectricStart, Param_Owner) == 0x000008, "Member 'BP_ParticleManager_C_OnElectricStart::Param_Owner' has a wrong offset!");

// Function BP_ParticleManager.BP_ParticleManager_C.StopEventPaticles
// 0x0040 (0x0040 - 0x0000)
struct BP_ParticleManager_C_StopEventPaticles final
{
public:
	class FString                                 EventName;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UBP_RSParticleBackgroundComponent_C*    BackGroundComponent;                               // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Stop;                                              // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8CF5[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         EventNames;                                        // 0x0020(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	class FString                                 SplitEventName;                                    // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ParticleManager_C_StopEventPaticles) == 0x000008, "Wrong alignment on BP_ParticleManager_C_StopEventPaticles");
static_assert(sizeof(BP_ParticleManager_C_StopEventPaticles) == 0x000040, "Wrong size on BP_ParticleManager_C_StopEventPaticles");
static_assert(offsetof(BP_ParticleManager_C_StopEventPaticles, EventName) == 0x000000, "Member 'BP_ParticleManager_C_StopEventPaticles::EventName' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_StopEventPaticles, BackGroundComponent) == 0x000010, "Member 'BP_ParticleManager_C_StopEventPaticles::BackGroundComponent' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_StopEventPaticles, Stop) == 0x000018, "Member 'BP_ParticleManager_C_StopEventPaticles::Stop' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_StopEventPaticles, EventNames) == 0x000020, "Member 'BP_ParticleManager_C_StopEventPaticles::EventNames' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_StopEventPaticles, SplitEventName) == 0x000030, "Member 'BP_ParticleManager_C_StopEventPaticles::SplitEventName' has a wrong offset!");

// Function BP_ParticleManager.BP_ParticleManager_C.PlayEventParticles
// 0x0040 (0x0040 - 0x0000)
struct BP_ParticleManager_C_PlayEventParticles final
{
public:
	class FString                                 EventName;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UBP_RSParticleBackgroundComponent_C*    BackGroundComponent;                               // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Play;                                              // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8CF6[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         EventNames;                                        // 0x0020(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	class FString                                 SplitEventName;                                    // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ParticleManager_C_PlayEventParticles) == 0x000008, "Wrong alignment on BP_ParticleManager_C_PlayEventParticles");
static_assert(sizeof(BP_ParticleManager_C_PlayEventParticles) == 0x000040, "Wrong size on BP_ParticleManager_C_PlayEventParticles");
static_assert(offsetof(BP_ParticleManager_C_PlayEventParticles, EventName) == 0x000000, "Member 'BP_ParticleManager_C_PlayEventParticles::EventName' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_PlayEventParticles, BackGroundComponent) == 0x000010, "Member 'BP_ParticleManager_C_PlayEventParticles::BackGroundComponent' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_PlayEventParticles, Play) == 0x000018, "Member 'BP_ParticleManager_C_PlayEventParticles::Play' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_PlayEventParticles, EventNames) == 0x000020, "Member 'BP_ParticleManager_C_PlayEventParticles::EventNames' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_PlayEventParticles, SplitEventName) == 0x000030, "Member 'BP_ParticleManager_C_PlayEventParticles::SplitEventName' has a wrong offset!");

// Function BP_ParticleManager.BP_ParticleManager_C.PrivateUnregistEffectBackground
// 0x0010 (0x0010 - 0x0000)
struct BP_ParticleManager_C_PrivateUnregistEffectBackground final
{
public:
	class ABP_EffectBackground_C*                 Background;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ParticleManager_C_PrivateUnregistEffectBackground) == 0x000008, "Wrong alignment on BP_ParticleManager_C_PrivateUnregistEffectBackground");
static_assert(sizeof(BP_ParticleManager_C_PrivateUnregistEffectBackground) == 0x000010, "Wrong size on BP_ParticleManager_C_PrivateUnregistEffectBackground");
static_assert(offsetof(BP_ParticleManager_C_PrivateUnregistEffectBackground, Background) == 0x000000, "Member 'BP_ParticleManager_C_PrivateUnregistEffectBackground::Background' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_PrivateUnregistEffectBackground, CallFunc_Array_RemoveItem_ReturnValue) == 0x000008, "Member 'BP_ParticleManager_C_PrivateUnregistEffectBackground::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");

// Function BP_ParticleManager.BP_ParticleManager_C.PrivateUnregistEffectBackgroundMother
// 0x0028 (0x0028 - 0x0000)
struct BP_ParticleManager_C_PrivateUnregistEffectBackgroundMother final
{
public:
	class ABP_EffectBackGroundMother_C*           Background;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8CF7[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ParticleManager_C_PrivateUnregistEffectBackgroundMother) == 0x000008, "Wrong alignment on BP_ParticleManager_C_PrivateUnregistEffectBackgroundMother");
static_assert(sizeof(BP_ParticleManager_C_PrivateUnregistEffectBackgroundMother) == 0x000028, "Wrong size on BP_ParticleManager_C_PrivateUnregistEffectBackgroundMother");
static_assert(offsetof(BP_ParticleManager_C_PrivateUnregistEffectBackgroundMother, Background) == 0x000000, "Member 'BP_ParticleManager_C_PrivateUnregistEffectBackgroundMother::Background' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_PrivateUnregistEffectBackgroundMother, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_ParticleManager_C_PrivateUnregistEffectBackgroundMother::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_PrivateUnregistEffectBackgroundMother, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'BP_ParticleManager_C_PrivateUnregistEffectBackgroundMother::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_PrivateUnregistEffectBackgroundMother, Temp_int_Loop_Num_Variable) == 0x000010, "Member 'BP_ParticleManager_C_PrivateUnregistEffectBackgroundMother::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_PrivateUnregistEffectBackgroundMother, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'BP_ParticleManager_C_PrivateUnregistEffectBackgroundMother::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_PrivateUnregistEffectBackgroundMother, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'BP_ParticleManager_C_PrivateUnregistEffectBackgroundMother::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_PrivateUnregistEffectBackgroundMother, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'BP_ParticleManager_C_PrivateUnregistEffectBackgroundMother::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_PrivateUnregistEffectBackgroundMother, CallFunc_Array_RemoveItem_ReturnValue) == 0x000020, "Member 'BP_ParticleManager_C_PrivateUnregistEffectBackgroundMother::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");

// Function BP_ParticleManager.BP_ParticleManager_C.SetupStageParam
// 0x0148 (0x0148 - 0x0000)
struct BP_ParticleManager_C_SetupStageParam final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8CF8[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class URSParticleSystemComponentBase*         RSParticleSystemComp;                              // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSetup;                                           // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8CF9[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           StageEffectColor;                                  // 0x001C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8CFA[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInstanceDynamic*>       CallFunc_GetDynamicMaterialInstanceALL_ReturnValue; // 0x0038(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8CFB[0x2];                                     // 0x004E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_StageParameterSettingVolumeManager_C* CallFunc_GetStageParameterSettingManager_SettingManager; // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8CFC[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStageParameterSettings                CallFunc_CalcParameterEffect_ReturnValue;          // 0x0064(0x00E0)(NoDestructor)
};
static_assert(alignof(BP_ParticleManager_C_SetupStageParam) == 0x000008, "Wrong alignment on BP_ParticleManager_C_SetupStageParam");
static_assert(sizeof(BP_ParticleManager_C_SetupStageParam) == 0x000148, "Wrong size on BP_ParticleManager_C_SetupStageParam");
static_assert(offsetof(BP_ParticleManager_C_SetupStageParam, Location) == 0x000000, "Member 'BP_ParticleManager_C_SetupStageParam::Location' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_SetupStageParam, RSParticleSystemComp) == 0x000010, "Member 'BP_ParticleManager_C_SetupStageParam::RSParticleSystemComp' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_SetupStageParam, IsSetup) == 0x000018, "Member 'BP_ParticleManager_C_SetupStageParam::IsSetup' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_SetupStageParam, StageEffectColor) == 0x00001C, "Member 'BP_ParticleManager_C_SetupStageParam::StageEffectColor' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_SetupStageParam, Temp_int_Array_Index_Variable) == 0x00002C, "Member 'BP_ParticleManager_C_SetupStageParam::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_SetupStageParam, Temp_int_Loop_Num_Variable) == 0x000030, "Member 'BP_ParticleManager_C_SetupStageParam::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_SetupStageParam, CallFunc_IsValid_ReturnValue) == 0x000034, "Member 'BP_ParticleManager_C_SetupStageParam::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_SetupStageParam, CallFunc_GetDynamicMaterialInstanceALL_ReturnValue) == 0x000038, "Member 'BP_ParticleManager_C_SetupStageParam::CallFunc_GetDynamicMaterialInstanceALL_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_SetupStageParam, Temp_int_Loop_Counter_Variable) == 0x000048, "Member 'BP_ParticleManager_C_SetupStageParam::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_SetupStageParam, CallFunc_IsValid_ReturnValue_1) == 0x00004C, "Member 'BP_ParticleManager_C_SetupStageParam::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_SetupStageParam, CallFunc_Less_IntInt_ReturnValue) == 0x00004D, "Member 'BP_ParticleManager_C_SetupStageParam::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_SetupStageParam, CallFunc_Add_IntInt_ReturnValue) == 0x000050, "Member 'BP_ParticleManager_C_SetupStageParam::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_SetupStageParam, CallFunc_Array_Length_ReturnValue) == 0x000054, "Member 'BP_ParticleManager_C_SetupStageParam::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_SetupStageParam, CallFunc_GetStageParameterSettingManager_SettingManager) == 0x000058, "Member 'BP_ParticleManager_C_SetupStageParam::CallFunc_GetStageParameterSettingManager_SettingManager' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_SetupStageParam, CallFunc_IsValid_ReturnValue_2) == 0x000060, "Member 'BP_ParticleManager_C_SetupStageParam::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_SetupStageParam, CallFunc_CalcParameterEffect_ReturnValue) == 0x000064, "Member 'BP_ParticleManager_C_SetupStageParam::CallFunc_CalcParameterEffect_ReturnValue' has a wrong offset!");

// Function BP_ParticleManager.BP_ParticleManager_C.TickPauseEventStart
// 0x0050 (0x0050 - 0x0000)
struct BP_ParticleManager_C_TickPauseEventStart final
{
public:
	TArray<class URSParticleSystemComponentBase*> SetupParticleComps;                                // 0x0000(0x0010)(Parm, OutParm, ContainsInstancedReference, HasGetValueTypeHash)
	TArray<class URSParticleSystemComponentBase*> Emitters;                                          // 0x0010(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	class ABP_EffectBackground_C*                 EffectBackground;                                  // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8CFD[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8CFE[0x3];                                     // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsComponentTickEnabled_ReturnValue;       // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8CFF[0x2];                                     // 0x0046(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ParticleManager_C_TickPauseEventStart) == 0x000008, "Wrong alignment on BP_ParticleManager_C_TickPauseEventStart");
static_assert(sizeof(BP_ParticleManager_C_TickPauseEventStart) == 0x000050, "Wrong size on BP_ParticleManager_C_TickPauseEventStart");
static_assert(offsetof(BP_ParticleManager_C_TickPauseEventStart, SetupParticleComps) == 0x000000, "Member 'BP_ParticleManager_C_TickPauseEventStart::SetupParticleComps' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_TickPauseEventStart, Emitters) == 0x000010, "Member 'BP_ParticleManager_C_TickPauseEventStart::Emitters' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_TickPauseEventStart, EffectBackground) == 0x000020, "Member 'BP_ParticleManager_C_TickPauseEventStart::EffectBackground' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_TickPauseEventStart, Temp_int_Array_Index_Variable) == 0x000028, "Member 'BP_ParticleManager_C_TickPauseEventStart::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_TickPauseEventStart, Temp_int_Loop_Num_Variable) == 0x00002C, "Member 'BP_ParticleManager_C_TickPauseEventStart::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_TickPauseEventStart, Temp_int_Loop_Counter_Variable) == 0x000030, "Member 'BP_ParticleManager_C_TickPauseEventStart::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_TickPauseEventStart, CallFunc_Less_IntInt_ReturnValue) == 0x000034, "Member 'BP_ParticleManager_C_TickPauseEventStart::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_TickPauseEventStart, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'BP_ParticleManager_C_TickPauseEventStart::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_TickPauseEventStart, CallFunc_IsValid_ReturnValue) == 0x00003C, "Member 'BP_ParticleManager_C_TickPauseEventStart::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_TickPauseEventStart, CallFunc_Array_Add_ReturnValue) == 0x000040, "Member 'BP_ParticleManager_C_TickPauseEventStart::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_TickPauseEventStart, CallFunc_IsValid_ReturnValue_1) == 0x000044, "Member 'BP_ParticleManager_C_TickPauseEventStart::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_TickPauseEventStart, CallFunc_IsComponentTickEnabled_ReturnValue) == 0x000045, "Member 'BP_ParticleManager_C_TickPauseEventStart::CallFunc_IsComponentTickEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_TickPauseEventStart, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'BP_ParticleManager_C_TickPauseEventStart::CallFunc_Array_Length_ReturnValue' has a wrong offset!");

// Function BP_ParticleManager.BP_ParticleManager_C.TickPauseEventRestore
// 0x0030 (0x0030 - 0x0000)
struct BP_ParticleManager_C_TickPauseEventRestore final
{
public:
	TArray<class URSParticleSystemComponentBase*> RestoreParticleComps;                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	class URSParticleSystemComponentBase*         Emitter;                                           // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D00[0x2];                                     // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ParticleManager_C_TickPauseEventRestore) == 0x000008, "Wrong alignment on BP_ParticleManager_C_TickPauseEventRestore");
static_assert(sizeof(BP_ParticleManager_C_TickPauseEventRestore) == 0x000030, "Wrong size on BP_ParticleManager_C_TickPauseEventRestore");
static_assert(offsetof(BP_ParticleManager_C_TickPauseEventRestore, RestoreParticleComps) == 0x000000, "Member 'BP_ParticleManager_C_TickPauseEventRestore::RestoreParticleComps' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_TickPauseEventRestore, Emitter) == 0x000010, "Member 'BP_ParticleManager_C_TickPauseEventRestore::Emitter' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_TickPauseEventRestore, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BP_ParticleManager_C_TickPauseEventRestore::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_TickPauseEventRestore, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'BP_ParticleManager_C_TickPauseEventRestore::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_TickPauseEventRestore, Temp_int_Loop_Num_Variable) == 0x000020, "Member 'BP_ParticleManager_C_TickPauseEventRestore::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_TickPauseEventRestore, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'BP_ParticleManager_C_TickPauseEventRestore::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_TickPauseEventRestore, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BP_ParticleManager_C_TickPauseEventRestore::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_TickPauseEventRestore, CallFunc_Less_IntInt_ReturnValue) == 0x000029, "Member 'BP_ParticleManager_C_TickPauseEventRestore::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_TickPauseEventRestore, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'BP_ParticleManager_C_TickPauseEventRestore::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_ParticleManager.BP_ParticleManager_C.SAS_CommonStart
// 0x0038 (0x0038 - 0x0000)
struct BP_ParticleManager_C_SAS_CommonStart final
{
public:
	struct FFSASCommand                           SAS_Command;                                       // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Dummy;                                             // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ParticleManager_C_SAS_CommonStart) == 0x000008, "Wrong alignment on BP_ParticleManager_C_SAS_CommonStart");
static_assert(sizeof(BP_ParticleManager_C_SAS_CommonStart) == 0x000038, "Wrong size on BP_ParticleManager_C_SAS_CommonStart");
static_assert(offsetof(BP_ParticleManager_C_SAS_CommonStart, SAS_Command) == 0x000000, "Member 'BP_ParticleManager_C_SAS_CommonStart::SAS_Command' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_SAS_CommonStart, Dummy) == 0x000030, "Member 'BP_ParticleManager_C_SAS_CommonStart::Dummy' has a wrong offset!");

// Function BP_ParticleManager.BP_ParticleManager_C.SAS_CommonEnd
// 0x0008 (0x0008 - 0x0000)
struct BP_ParticleManager_C_SAS_CommonEnd final
{
public:
	E_SASKind                                     SAS_Kind;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bCancelSASCost;                                    // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bDummy;                                            // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D01[0x1];                                     // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RemainTime;                                        // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ParticleManager_C_SAS_CommonEnd) == 0x000004, "Wrong alignment on BP_ParticleManager_C_SAS_CommonEnd");
static_assert(sizeof(BP_ParticleManager_C_SAS_CommonEnd) == 0x000008, "Wrong size on BP_ParticleManager_C_SAS_CommonEnd");
static_assert(offsetof(BP_ParticleManager_C_SAS_CommonEnd, SAS_Kind) == 0x000000, "Member 'BP_ParticleManager_C_SAS_CommonEnd::SAS_Kind' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_SAS_CommonEnd, bCancelSASCost) == 0x000001, "Member 'BP_ParticleManager_C_SAS_CommonEnd::bCancelSASCost' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_SAS_CommonEnd, bDummy) == 0x000002, "Member 'BP_ParticleManager_C_SAS_CommonEnd::bDummy' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_SAS_CommonEnd, RemainTime) == 0x000004, "Member 'BP_ParticleManager_C_SAS_CommonEnd::RemainTime' has a wrong offset!");

// Function BP_ParticleManager.BP_ParticleManager_C.GetLandingTemplate
// 0x00E8 (0x00E8 - 0x0000)
struct BP_ParticleManager_C_GetLandingTemplate final
{
public:
	EPhysicalSurface                              SurfaceType;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D02[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        Template;                                          // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              Temp_byte_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D03[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        Temp_object_Variable;                              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_1;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_2;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_3;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_4;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_5;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_6;                            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_7;                            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_8;                            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_9;                            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_10;                           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_11;                           // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_12;                           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_13;                           // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_14;                           // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_15;                           // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_16;                           // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_17;                           // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_18;                           // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_19;                           // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_20;                           // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_21;                           // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_22;                           // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_23;                           // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_24;                           // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        K2Node_Select_Default;                             // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ParticleManager_C_GetLandingTemplate) == 0x000008, "Wrong alignment on BP_ParticleManager_C_GetLandingTemplate");
static_assert(sizeof(BP_ParticleManager_C_GetLandingTemplate) == 0x0000E8, "Wrong size on BP_ParticleManager_C_GetLandingTemplate");
static_assert(offsetof(BP_ParticleManager_C_GetLandingTemplate, SurfaceType) == 0x000000, "Member 'BP_ParticleManager_C_GetLandingTemplate::SurfaceType' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_GetLandingTemplate, Template) == 0x000008, "Member 'BP_ParticleManager_C_GetLandingTemplate::Template' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_GetLandingTemplate, Temp_byte_Variable) == 0x000010, "Member 'BP_ParticleManager_C_GetLandingTemplate::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_GetLandingTemplate, Temp_object_Variable) == 0x000018, "Member 'BP_ParticleManager_C_GetLandingTemplate::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_GetLandingTemplate, Temp_object_Variable_1) == 0x000020, "Member 'BP_ParticleManager_C_GetLandingTemplate::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_GetLandingTemplate, Temp_object_Variable_2) == 0x000028, "Member 'BP_ParticleManager_C_GetLandingTemplate::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_GetLandingTemplate, Temp_object_Variable_3) == 0x000030, "Member 'BP_ParticleManager_C_GetLandingTemplate::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_GetLandingTemplate, Temp_object_Variable_4) == 0x000038, "Member 'BP_ParticleManager_C_GetLandingTemplate::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_GetLandingTemplate, Temp_object_Variable_5) == 0x000040, "Member 'BP_ParticleManager_C_GetLandingTemplate::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_GetLandingTemplate, Temp_object_Variable_6) == 0x000048, "Member 'BP_ParticleManager_C_GetLandingTemplate::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_GetLandingTemplate, Temp_object_Variable_7) == 0x000050, "Member 'BP_ParticleManager_C_GetLandingTemplate::Temp_object_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_GetLandingTemplate, Temp_object_Variable_8) == 0x000058, "Member 'BP_ParticleManager_C_GetLandingTemplate::Temp_object_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_GetLandingTemplate, Temp_object_Variable_9) == 0x000060, "Member 'BP_ParticleManager_C_GetLandingTemplate::Temp_object_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_GetLandingTemplate, Temp_object_Variable_10) == 0x000068, "Member 'BP_ParticleManager_C_GetLandingTemplate::Temp_object_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_GetLandingTemplate, Temp_object_Variable_11) == 0x000070, "Member 'BP_ParticleManager_C_GetLandingTemplate::Temp_object_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_GetLandingTemplate, Temp_object_Variable_12) == 0x000078, "Member 'BP_ParticleManager_C_GetLandingTemplate::Temp_object_Variable_12' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_GetLandingTemplate, Temp_object_Variable_13) == 0x000080, "Member 'BP_ParticleManager_C_GetLandingTemplate::Temp_object_Variable_13' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_GetLandingTemplate, Temp_object_Variable_14) == 0x000088, "Member 'BP_ParticleManager_C_GetLandingTemplate::Temp_object_Variable_14' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_GetLandingTemplate, Temp_object_Variable_15) == 0x000090, "Member 'BP_ParticleManager_C_GetLandingTemplate::Temp_object_Variable_15' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_GetLandingTemplate, Temp_object_Variable_16) == 0x000098, "Member 'BP_ParticleManager_C_GetLandingTemplate::Temp_object_Variable_16' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_GetLandingTemplate, Temp_object_Variable_17) == 0x0000A0, "Member 'BP_ParticleManager_C_GetLandingTemplate::Temp_object_Variable_17' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_GetLandingTemplate, Temp_object_Variable_18) == 0x0000A8, "Member 'BP_ParticleManager_C_GetLandingTemplate::Temp_object_Variable_18' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_GetLandingTemplate, Temp_object_Variable_19) == 0x0000B0, "Member 'BP_ParticleManager_C_GetLandingTemplate::Temp_object_Variable_19' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_GetLandingTemplate, Temp_object_Variable_20) == 0x0000B8, "Member 'BP_ParticleManager_C_GetLandingTemplate::Temp_object_Variable_20' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_GetLandingTemplate, Temp_object_Variable_21) == 0x0000C0, "Member 'BP_ParticleManager_C_GetLandingTemplate::Temp_object_Variable_21' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_GetLandingTemplate, Temp_object_Variable_22) == 0x0000C8, "Member 'BP_ParticleManager_C_GetLandingTemplate::Temp_object_Variable_22' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_GetLandingTemplate, Temp_object_Variable_23) == 0x0000D0, "Member 'BP_ParticleManager_C_GetLandingTemplate::Temp_object_Variable_23' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_GetLandingTemplate, Temp_object_Variable_24) == 0x0000D8, "Member 'BP_ParticleManager_C_GetLandingTemplate::Temp_object_Variable_24' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_GetLandingTemplate, K2Node_Select_Default) == 0x0000E0, "Member 'BP_ParticleManager_C_GetLandingTemplate::K2Node_Select_Default' has a wrong offset!");

// Function BP_ParticleManager.BP_ParticleManager_C.GetFootStepTemplate
// 0x00E8 (0x00E8 - 0x0000)
struct BP_ParticleManager_C_GetFootStepTemplate final
{
public:
	EPhysicalSurface                              SurfaceType;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D04[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        Template;                                          // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              Temp_byte_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D05[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        Temp_object_Variable;                              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_1;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_2;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_3;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_4;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_5;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_6;                            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_7;                            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_8;                            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_9;                            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_10;                           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_11;                           // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_12;                           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_13;                           // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_14;                           // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_15;                           // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_16;                           // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_17;                           // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_18;                           // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_19;                           // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_20;                           // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_21;                           // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_22;                           // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_23;                           // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_24;                           // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        K2Node_Select_Default;                             // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ParticleManager_C_GetFootStepTemplate) == 0x000008, "Wrong alignment on BP_ParticleManager_C_GetFootStepTemplate");
static_assert(sizeof(BP_ParticleManager_C_GetFootStepTemplate) == 0x0000E8, "Wrong size on BP_ParticleManager_C_GetFootStepTemplate");
static_assert(offsetof(BP_ParticleManager_C_GetFootStepTemplate, SurfaceType) == 0x000000, "Member 'BP_ParticleManager_C_GetFootStepTemplate::SurfaceType' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_GetFootStepTemplate, Template) == 0x000008, "Member 'BP_ParticleManager_C_GetFootStepTemplate::Template' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_GetFootStepTemplate, Temp_byte_Variable) == 0x000010, "Member 'BP_ParticleManager_C_GetFootStepTemplate::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_GetFootStepTemplate, Temp_object_Variable) == 0x000018, "Member 'BP_ParticleManager_C_GetFootStepTemplate::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_GetFootStepTemplate, Temp_object_Variable_1) == 0x000020, "Member 'BP_ParticleManager_C_GetFootStepTemplate::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_GetFootStepTemplate, Temp_object_Variable_2) == 0x000028, "Member 'BP_ParticleManager_C_GetFootStepTemplate::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_GetFootStepTemplate, Temp_object_Variable_3) == 0x000030, "Member 'BP_ParticleManager_C_GetFootStepTemplate::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_GetFootStepTemplate, Temp_object_Variable_4) == 0x000038, "Member 'BP_ParticleManager_C_GetFootStepTemplate::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_GetFootStepTemplate, Temp_object_Variable_5) == 0x000040, "Member 'BP_ParticleManager_C_GetFootStepTemplate::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_GetFootStepTemplate, Temp_object_Variable_6) == 0x000048, "Member 'BP_ParticleManager_C_GetFootStepTemplate::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_GetFootStepTemplate, Temp_object_Variable_7) == 0x000050, "Member 'BP_ParticleManager_C_GetFootStepTemplate::Temp_object_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_GetFootStepTemplate, Temp_object_Variable_8) == 0x000058, "Member 'BP_ParticleManager_C_GetFootStepTemplate::Temp_object_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_GetFootStepTemplate, Temp_object_Variable_9) == 0x000060, "Member 'BP_ParticleManager_C_GetFootStepTemplate::Temp_object_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_GetFootStepTemplate, Temp_object_Variable_10) == 0x000068, "Member 'BP_ParticleManager_C_GetFootStepTemplate::Temp_object_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_GetFootStepTemplate, Temp_object_Variable_11) == 0x000070, "Member 'BP_ParticleManager_C_GetFootStepTemplate::Temp_object_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_GetFootStepTemplate, Temp_object_Variable_12) == 0x000078, "Member 'BP_ParticleManager_C_GetFootStepTemplate::Temp_object_Variable_12' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_GetFootStepTemplate, Temp_object_Variable_13) == 0x000080, "Member 'BP_ParticleManager_C_GetFootStepTemplate::Temp_object_Variable_13' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_GetFootStepTemplate, Temp_object_Variable_14) == 0x000088, "Member 'BP_ParticleManager_C_GetFootStepTemplate::Temp_object_Variable_14' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_GetFootStepTemplate, Temp_object_Variable_15) == 0x000090, "Member 'BP_ParticleManager_C_GetFootStepTemplate::Temp_object_Variable_15' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_GetFootStepTemplate, Temp_object_Variable_16) == 0x000098, "Member 'BP_ParticleManager_C_GetFootStepTemplate::Temp_object_Variable_16' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_GetFootStepTemplate, Temp_object_Variable_17) == 0x0000A0, "Member 'BP_ParticleManager_C_GetFootStepTemplate::Temp_object_Variable_17' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_GetFootStepTemplate, Temp_object_Variable_18) == 0x0000A8, "Member 'BP_ParticleManager_C_GetFootStepTemplate::Temp_object_Variable_18' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_GetFootStepTemplate, Temp_object_Variable_19) == 0x0000B0, "Member 'BP_ParticleManager_C_GetFootStepTemplate::Temp_object_Variable_19' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_GetFootStepTemplate, Temp_object_Variable_20) == 0x0000B8, "Member 'BP_ParticleManager_C_GetFootStepTemplate::Temp_object_Variable_20' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_GetFootStepTemplate, Temp_object_Variable_21) == 0x0000C0, "Member 'BP_ParticleManager_C_GetFootStepTemplate::Temp_object_Variable_21' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_GetFootStepTemplate, Temp_object_Variable_22) == 0x0000C8, "Member 'BP_ParticleManager_C_GetFootStepTemplate::Temp_object_Variable_22' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_GetFootStepTemplate, Temp_object_Variable_23) == 0x0000D0, "Member 'BP_ParticleManager_C_GetFootStepTemplate::Temp_object_Variable_23' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_GetFootStepTemplate, Temp_object_Variable_24) == 0x0000D8, "Member 'BP_ParticleManager_C_GetFootStepTemplate::Temp_object_Variable_24' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_GetFootStepTemplate, K2Node_Select_Default) == 0x0000E0, "Member 'BP_ParticleManager_C_GetFootStepTemplate::K2Node_Select_Default' has a wrong offset!");

// Function BP_ParticleManager.BP_ParticleManager_C.OnBeginConnectEffect
// 0x0038 (0x0038 - 0x0000)
struct BP_ParticleManager_C_OnBeginConnectEffect final
{
public:
	class UParticleSystem*                        ParticleSystem;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ObjectName;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEffectConnectPoint                           SourceConnectPoint;                                // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D06[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   SourceSocketName;                                  // 0x0014(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEffectConnectPoint                           TargetConnectPoint;                                // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D07[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   TargetSocketName;                                  // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          PlaySound;                                         // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDummy;                                            // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ParticleManager_C_OnBeginConnectEffect) == 0x000008, "Wrong alignment on BP_ParticleManager_C_OnBeginConnectEffect");
static_assert(sizeof(BP_ParticleManager_C_OnBeginConnectEffect) == 0x000038, "Wrong size on BP_ParticleManager_C_OnBeginConnectEffect");
static_assert(offsetof(BP_ParticleManager_C_OnBeginConnectEffect, ParticleSystem) == 0x000000, "Member 'BP_ParticleManager_C_OnBeginConnectEffect::ParticleSystem' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_OnBeginConnectEffect, ObjectName) == 0x000008, "Member 'BP_ParticleManager_C_OnBeginConnectEffect::ObjectName' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_OnBeginConnectEffect, SourceConnectPoint) == 0x000010, "Member 'BP_ParticleManager_C_OnBeginConnectEffect::SourceConnectPoint' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_OnBeginConnectEffect, SourceSocketName) == 0x000014, "Member 'BP_ParticleManager_C_OnBeginConnectEffect::SourceSocketName' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_OnBeginConnectEffect, TargetConnectPoint) == 0x00001C, "Member 'BP_ParticleManager_C_OnBeginConnectEffect::TargetConnectPoint' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_OnBeginConnectEffect, TargetSocketName) == 0x000020, "Member 'BP_ParticleManager_C_OnBeginConnectEffect::TargetSocketName' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_OnBeginConnectEffect, PlaySound) == 0x000028, "Member 'BP_ParticleManager_C_OnBeginConnectEffect::PlaySound' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_OnBeginConnectEffect, bDummy) == 0x000030, "Member 'BP_ParticleManager_C_OnBeginConnectEffect::bDummy' has a wrong offset!");

// Function BP_ParticleManager.BP_ParticleManager_C.OnEndConnectEffect
// 0x000C (0x000C - 0x0000)
struct BP_ParticleManager_C_OnEndConnectEffect final
{
public:
	class FName                                   ObjectName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDummy;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ParticleManager_C_OnEndConnectEffect) == 0x000004, "Wrong alignment on BP_ParticleManager_C_OnEndConnectEffect");
static_assert(sizeof(BP_ParticleManager_C_OnEndConnectEffect) == 0x00000C, "Wrong size on BP_ParticleManager_C_OnEndConnectEffect");
static_assert(offsetof(BP_ParticleManager_C_OnEndConnectEffect, ObjectName) == 0x000000, "Member 'BP_ParticleManager_C_OnEndConnectEffect::ObjectName' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_OnEndConnectEffect, bDummy) == 0x000008, "Member 'BP_ParticleManager_C_OnEndConnectEffect::bDummy' has a wrong offset!");

// Function BP_ParticleManager.BP_ParticleManager_C.RegistEffectBackGround
// 0x0018 (0x0018 - 0x0000)
struct BP_ParticleManager_C_RegistEffectBackGround final
{
public:
	class ABP_EffectBackground_C*                 EffectBackground;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ArrayNumber;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AddedIndex;                                        // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D08[0x2];                                     // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ParticleManager_C_RegistEffectBackGround) == 0x000008, "Wrong alignment on BP_ParticleManager_C_RegistEffectBackGround");
static_assert(sizeof(BP_ParticleManager_C_RegistEffectBackGround) == 0x000018, "Wrong size on BP_ParticleManager_C_RegistEffectBackGround");
static_assert(offsetof(BP_ParticleManager_C_RegistEffectBackGround, EffectBackground) == 0x000000, "Member 'BP_ParticleManager_C_RegistEffectBackGround::EffectBackground' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_RegistEffectBackGround, ArrayNumber) == 0x000008, "Member 'BP_ParticleManager_C_RegistEffectBackGround::ArrayNumber' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_RegistEffectBackGround, AddedIndex) == 0x00000C, "Member 'BP_ParticleManager_C_RegistEffectBackGround::AddedIndex' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_RegistEffectBackGround, CallFunc_Not_PreBool_ReturnValue) == 0x000010, "Member 'BP_ParticleManager_C_RegistEffectBackGround::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_RegistEffectBackGround, CallFunc_BooleanOR_ReturnValue) == 0x000011, "Member 'BP_ParticleManager_C_RegistEffectBackGround::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_RegistEffectBackGround, CallFunc_Array_Add_ReturnValue) == 0x000014, "Member 'BP_ParticleManager_C_RegistEffectBackGround::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_ParticleManager.BP_ParticleManager_C.ResetParticleArray
// 0x0001 (0x0001 - 0x0000)
struct BP_ParticleManager_C_ResetParticleArray final
{
public:
	bool                                          Dummy;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ParticleManager_C_ResetParticleArray) == 0x000001, "Wrong alignment on BP_ParticleManager_C_ResetParticleArray");
static_assert(sizeof(BP_ParticleManager_C_ResetParticleArray) == 0x000001, "Wrong size on BP_ParticleManager_C_ResetParticleArray");
static_assert(offsetof(BP_ParticleManager_C_ResetParticleArray, Dummy) == 0x000000, "Member 'BP_ParticleManager_C_ResetParticleArray::Dummy' has a wrong offset!");

// Function BP_ParticleManager.BP_ParticleManager_C.CalledAtEventStart
// 0x00A0 (0x00A0 - 0x0000)
struct BP_ParticleManager_C_CalledAtEventStart final
{
public:
	class FString                                 EventName;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Dummy;                                             // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D09[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_RSParticleBackgroundComponent_C*    EffectComponent;                                   // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_EffectBackground_C*                 EffectBGActor;                                     // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_1;                      // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D0A[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_2;                      // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D0B[0x3];                                     // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_EventManager_C*                     CallFunc_GetEventManager_EventManager;             // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D0C[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABPCaptureActor_C*                      CallFunc_GetCaptureActor_ReturnCaptureActor;       // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D0D[0x2];                                     // 0x0076(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x007C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_StopEventPaticles_Stop;                   // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D0E[0x3];                                     // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_StopEventPaticles_Stop_1;                 // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D0F[0x1];                                     // 0x0093(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D10[0x3];                                     // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ParticleManager_C_CalledAtEventStart) == 0x000008, "Wrong alignment on BP_ParticleManager_C_CalledAtEventStart");
static_assert(sizeof(BP_ParticleManager_C_CalledAtEventStart) == 0x0000A0, "Wrong size on BP_ParticleManager_C_CalledAtEventStart");
static_assert(offsetof(BP_ParticleManager_C_CalledAtEventStart, EventName) == 0x000000, "Member 'BP_ParticleManager_C_CalledAtEventStart::EventName' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_CalledAtEventStart, Dummy) == 0x000010, "Member 'BP_ParticleManager_C_CalledAtEventStart::Dummy' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_CalledAtEventStart, EffectComponent) == 0x000018, "Member 'BP_ParticleManager_C_CalledAtEventStart::EffectComponent' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_CalledAtEventStart, EffectBGActor) == 0x000020, "Member 'BP_ParticleManager_C_CalledAtEventStart::EffectBGActor' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_CalledAtEventStart, Temp_int_Array_Index_Variable) == 0x000028, "Member 'BP_ParticleManager_C_CalledAtEventStart::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_CalledAtEventStart, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'BP_ParticleManager_C_CalledAtEventStart::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_CalledAtEventStart, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'BP_ParticleManager_C_CalledAtEventStart::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_CalledAtEventStart, Temp_int_Loop_Num_Variable) == 0x000034, "Member 'BP_ParticleManager_C_CalledAtEventStart::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_CalledAtEventStart, Temp_int_Loop_Num_Variable_1) == 0x000038, "Member 'BP_ParticleManager_C_CalledAtEventStart::Temp_int_Loop_Num_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_CalledAtEventStart, Temp_int_Array_Index_Variable_1) == 0x00003C, "Member 'BP_ParticleManager_C_CalledAtEventStart::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_CalledAtEventStart, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'BP_ParticleManager_C_CalledAtEventStart::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_CalledAtEventStart, Temp_int_Loop_Counter_Variable_1) == 0x000044, "Member 'BP_ParticleManager_C_CalledAtEventStart::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_CalledAtEventStart, CallFunc_Add_IntInt_ReturnValue_1) == 0x000048, "Member 'BP_ParticleManager_C_CalledAtEventStart::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_CalledAtEventStart, Temp_int_Array_Index_Variable_2) == 0x00004C, "Member 'BP_ParticleManager_C_CalledAtEventStart::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_CalledAtEventStart, Temp_int_Loop_Num_Variable_2) == 0x000050, "Member 'BP_ParticleManager_C_CalledAtEventStart::Temp_int_Loop_Num_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_CalledAtEventStart, CallFunc_Less_IntInt_ReturnValue_1) == 0x000054, "Member 'BP_ParticleManager_C_CalledAtEventStart::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_CalledAtEventStart, CallFunc_GetEventManager_EventManager) == 0x000058, "Member 'BP_ParticleManager_C_CalledAtEventStart::CallFunc_GetEventManager_EventManager' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_CalledAtEventStart, CallFunc_IsValid_ReturnValue) == 0x000060, "Member 'BP_ParticleManager_C_CalledAtEventStart::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_CalledAtEventStart, CallFunc_GetCaptureActor_ReturnCaptureActor) == 0x000068, "Member 'BP_ParticleManager_C_CalledAtEventStart::CallFunc_GetCaptureActor_ReturnCaptureActor' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_CalledAtEventStart, Temp_int_Loop_Counter_Variable_2) == 0x000070, "Member 'BP_ParticleManager_C_CalledAtEventStart::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_CalledAtEventStart, CallFunc_IsValid_ReturnValue_1) == 0x000074, "Member 'BP_ParticleManager_C_CalledAtEventStart::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_CalledAtEventStart, CallFunc_Less_IntInt_ReturnValue_2) == 0x000075, "Member 'BP_ParticleManager_C_CalledAtEventStart::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_CalledAtEventStart, CallFunc_Add_IntInt_ReturnValue_2) == 0x000078, "Member 'BP_ParticleManager_C_CalledAtEventStart::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_CalledAtEventStart, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00007C, "Member 'BP_ParticleManager_C_CalledAtEventStart::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_CalledAtEventStart, CallFunc_StopEventPaticles_Stop) == 0x000088, "Member 'BP_ParticleManager_C_CalledAtEventStart::CallFunc_StopEventPaticles_Stop' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_CalledAtEventStart, CallFunc_Array_Length_ReturnValue) == 0x00008C, "Member 'BP_ParticleManager_C_CalledAtEventStart::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_CalledAtEventStart, CallFunc_StopEventPaticles_Stop_1) == 0x000090, "Member 'BP_ParticleManager_C_CalledAtEventStart::CallFunc_StopEventPaticles_Stop_1' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_CalledAtEventStart, CallFunc_Not_PreBool_ReturnValue) == 0x000091, "Member 'BP_ParticleManager_C_CalledAtEventStart::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_CalledAtEventStart, CallFunc_IsValid_ReturnValue_2) == 0x000092, "Member 'BP_ParticleManager_C_CalledAtEventStart::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_CalledAtEventStart, CallFunc_Array_Length_ReturnValue_1) == 0x000094, "Member 'BP_ParticleManager_C_CalledAtEventStart::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_CalledAtEventStart, CallFunc_IsValid_ReturnValue_3) == 0x000098, "Member 'BP_ParticleManager_C_CalledAtEventStart::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_CalledAtEventStart, CallFunc_Array_Length_ReturnValue_2) == 0x00009C, "Member 'BP_ParticleManager_C_CalledAtEventStart::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");

// Function BP_ParticleManager.BP_ParticleManager_C.CalledAtEventEnd
// 0x0080 (0x0080 - 0x0000)
struct BP_ParticleManager_C_CalledAtEventEnd final
{
public:
	class FString                                 EventName;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Dummy;                                             // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D11[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_RSParticleBackgroundComponent_C*    EffectComponent;                                   // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_EffectBackground_C*                 EffectBGActor;                                     // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_1;                      // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D12[0x3];                                     // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_2;                      // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D13[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D14[0x3];                                     // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_PlayEventParticles_Play;                  // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D15[0x3];                                     // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_PlayEventParticles_Play_1;                // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x006D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D16[0x2];                                     // 0x006E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D17[0x3];                                     // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ParticleManager_C_CalledAtEventEnd) == 0x000008, "Wrong alignment on BP_ParticleManager_C_CalledAtEventEnd");
static_assert(sizeof(BP_ParticleManager_C_CalledAtEventEnd) == 0x000080, "Wrong size on BP_ParticleManager_C_CalledAtEventEnd");
static_assert(offsetof(BP_ParticleManager_C_CalledAtEventEnd, EventName) == 0x000000, "Member 'BP_ParticleManager_C_CalledAtEventEnd::EventName' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_CalledAtEventEnd, Dummy) == 0x000010, "Member 'BP_ParticleManager_C_CalledAtEventEnd::Dummy' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_CalledAtEventEnd, EffectComponent) == 0x000018, "Member 'BP_ParticleManager_C_CalledAtEventEnd::EffectComponent' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_CalledAtEventEnd, EffectBGActor) == 0x000020, "Member 'BP_ParticleManager_C_CalledAtEventEnd::EffectBGActor' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_CalledAtEventEnd, Temp_int_Array_Index_Variable) == 0x000028, "Member 'BP_ParticleManager_C_CalledAtEventEnd::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_CalledAtEventEnd, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'BP_ParticleManager_C_CalledAtEventEnd::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_CalledAtEventEnd, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'BP_ParticleManager_C_CalledAtEventEnd::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_CalledAtEventEnd, Temp_int_Loop_Num_Variable) == 0x000034, "Member 'BP_ParticleManager_C_CalledAtEventEnd::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_CalledAtEventEnd, Temp_int_Loop_Num_Variable_1) == 0x000038, "Member 'BP_ParticleManager_C_CalledAtEventEnd::Temp_int_Loop_Num_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_CalledAtEventEnd, CallFunc_Less_IntInt_ReturnValue) == 0x00003C, "Member 'BP_ParticleManager_C_CalledAtEventEnd::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_CalledAtEventEnd, Temp_int_Loop_Counter_Variable_1) == 0x000040, "Member 'BP_ParticleManager_C_CalledAtEventEnd::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_CalledAtEventEnd, CallFunc_Add_IntInt_ReturnValue_1) == 0x000044, "Member 'BP_ParticleManager_C_CalledAtEventEnd::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_CalledAtEventEnd, Temp_int_Array_Index_Variable_1) == 0x000048, "Member 'BP_ParticleManager_C_CalledAtEventEnd::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_CalledAtEventEnd, Temp_int_Loop_Num_Variable_2) == 0x00004C, "Member 'BP_ParticleManager_C_CalledAtEventEnd::Temp_int_Loop_Num_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_CalledAtEventEnd, CallFunc_Less_IntInt_ReturnValue_1) == 0x000050, "Member 'BP_ParticleManager_C_CalledAtEventEnd::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_CalledAtEventEnd, Temp_int_Array_Index_Variable_2) == 0x000054, "Member 'BP_ParticleManager_C_CalledAtEventEnd::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_CalledAtEventEnd, Temp_int_Loop_Counter_Variable_2) == 0x000058, "Member 'BP_ParticleManager_C_CalledAtEventEnd::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_CalledAtEventEnd, CallFunc_Less_IntInt_ReturnValue_2) == 0x00005C, "Member 'BP_ParticleManager_C_CalledAtEventEnd::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_CalledAtEventEnd, CallFunc_Add_IntInt_ReturnValue_2) == 0x000060, "Member 'BP_ParticleManager_C_CalledAtEventEnd::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_CalledAtEventEnd, CallFunc_PlayEventParticles_Play) == 0x000064, "Member 'BP_ParticleManager_C_CalledAtEventEnd::CallFunc_PlayEventParticles_Play' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_CalledAtEventEnd, CallFunc_Array_Length_ReturnValue) == 0x000068, "Member 'BP_ParticleManager_C_CalledAtEventEnd::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_CalledAtEventEnd, CallFunc_PlayEventParticles_Play_1) == 0x00006C, "Member 'BP_ParticleManager_C_CalledAtEventEnd::CallFunc_PlayEventParticles_Play_1' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_CalledAtEventEnd, CallFunc_IsValid_ReturnValue) == 0x00006D, "Member 'BP_ParticleManager_C_CalledAtEventEnd::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_CalledAtEventEnd, CallFunc_Array_Length_ReturnValue_1) == 0x000070, "Member 'BP_ParticleManager_C_CalledAtEventEnd::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_CalledAtEventEnd, CallFunc_IsValid_ReturnValue_1) == 0x000074, "Member 'BP_ParticleManager_C_CalledAtEventEnd::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_CalledAtEventEnd, CallFunc_Array_Length_ReturnValue_2) == 0x000078, "Member 'BP_ParticleManager_C_CalledAtEventEnd::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");

// Function BP_ParticleManager.BP_ParticleManager_C.RegistEffectBackGroundMother
// 0x0028 (0x0028 - 0x0000)
struct BP_ParticleManager_C_RegistEffectBackGroundMother final
{
public:
	class ABP_EffectBackGroundMother_C*           MotherActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ArrayNumber;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D18[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ParticleManager_C_RegistEffectBackGroundMother) == 0x000008, "Wrong alignment on BP_ParticleManager_C_RegistEffectBackGroundMother");
static_assert(sizeof(BP_ParticleManager_C_RegistEffectBackGroundMother) == 0x000028, "Wrong size on BP_ParticleManager_C_RegistEffectBackGroundMother");
static_assert(offsetof(BP_ParticleManager_C_RegistEffectBackGroundMother, MotherActor) == 0x000000, "Member 'BP_ParticleManager_C_RegistEffectBackGroundMother::MotherActor' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_RegistEffectBackGroundMother, ArrayNumber) == 0x000008, "Member 'BP_ParticleManager_C_RegistEffectBackGroundMother::ArrayNumber' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_RegistEffectBackGroundMother, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'BP_ParticleManager_C_RegistEffectBackGroundMother::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_RegistEffectBackGroundMother, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'BP_ParticleManager_C_RegistEffectBackGroundMother::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_RegistEffectBackGroundMother, Temp_int_Loop_Num_Variable) == 0x000014, "Member 'BP_ParticleManager_C_RegistEffectBackGroundMother::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_RegistEffectBackGroundMother, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'BP_ParticleManager_C_RegistEffectBackGroundMother::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_RegistEffectBackGroundMother, CallFunc_Less_IntInt_ReturnValue) == 0x00001C, "Member 'BP_ParticleManager_C_RegistEffectBackGroundMother::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_RegistEffectBackGroundMother, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BP_ParticleManager_C_RegistEffectBackGroundMother::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ParticleManager_C_RegistEffectBackGroundMother, CallFunc_Array_Add_ReturnValue) == 0x000024, "Member 'BP_ParticleManager_C_RegistEffectBackGroundMother::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_ParticleManager.BP_ParticleManager_C.IsAcceleratorValid
// 0x0001 (0x0001 - 0x0000)
struct BP_ParticleManager_C_IsAcceleratorValid final
{
public:
	bool                                          Valid;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ParticleManager_C_IsAcceleratorValid) == 0x000001, "Wrong alignment on BP_ParticleManager_C_IsAcceleratorValid");
static_assert(sizeof(BP_ParticleManager_C_IsAcceleratorValid) == 0x000001, "Wrong size on BP_ParticleManager_C_IsAcceleratorValid");
static_assert(offsetof(BP_ParticleManager_C_IsAcceleratorValid, Valid) == 0x000000, "Member 'BP_ParticleManager_C_IsAcceleratorValid::Valid' has a wrong offset!");

// Function BP_ParticleManager.BP_ParticleManager_C.IsAccelerating
// 0x0001 (0x0001 - 0x0000)
struct BP_ParticleManager_C_IsAccelerating final
{
public:
	bool                                          Accelerating;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ParticleManager_C_IsAccelerating) == 0x000001, "Wrong alignment on BP_ParticleManager_C_IsAccelerating");
static_assert(sizeof(BP_ParticleManager_C_IsAccelerating) == 0x000001, "Wrong size on BP_ParticleManager_C_IsAccelerating");
static_assert(offsetof(BP_ParticleManager_C_IsAccelerating, Accelerating) == 0x000000, "Member 'BP_ParticleManager_C_IsAccelerating::Accelerating' has a wrong offset!");

}

