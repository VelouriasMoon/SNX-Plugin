#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SpecialStaticNodeActor

#include "Basic.hpp"

#include "BP_SpecialStaticNodeActor_classes.hpp"
#include "BP_SpecialStaticNodeActor_parameters.hpp"


namespace SDK
{

// Function BP_SpecialStaticNodeActor.BP_SpecialStaticNodeActor_C.ExecuteUbergraph_BP_SpecialStaticNodeActor
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SpecialStaticNodeActor_C::ExecuteUbergraph_BP_SpecialStaticNodeActor(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpecialStaticNodeActor_C", "ExecuteUbergraph_BP_SpecialStaticNodeActor");

	Params::BP_SpecialStaticNodeActor_C_ExecuteUbergraph_BP_SpecialStaticNodeActor Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SpecialStaticNodeActor.BP_SpecialStaticNodeActor_C.SetNodeAddAnimWeightCurve
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UCurveFloat*                      Curve                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SpecialStaticNodeActor_C::SetNodeAddAnimWeightCurve(class UCurveFloat* Curve)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpecialStaticNodeActor_C", "SetNodeAddAnimWeightCurve");

	Params::BP_SpecialStaticNodeActor_C_SetNodeAddAnimWeightCurve Parms{};

	Parms.Curve = Curve;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SpecialStaticNodeActor.BP_SpecialStaticNodeActor_C.PlayAddSpecialNodeAnimMontage
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           SpecialNodeAnimPath                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ABP_SpecialStaticNodeActor_C::PlayAddSpecialNodeAnimMontage(const class FString& SpecialNodeAnimPath)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpecialStaticNodeActor_C", "PlayAddSpecialNodeAnimMontage");

	Params::BP_SpecialStaticNodeActor_C_PlayAddSpecialNodeAnimMontage Parms{};

	Parms.SpecialNodeAnimPath = std::move(SpecialNodeAnimPath);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SpecialStaticNodeActor.BP_SpecialStaticNodeActor_C.StopAddSpecialNodeAnimMontage
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_SpecialStaticNodeActor_C::StopAddSpecialNodeAnimMontage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpecialStaticNodeActor_C", "StopAddSpecialNodeAnimMontage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SpecialStaticNodeActor.BP_SpecialStaticNodeActor_C.«¹¿à¤ÙóÈ_0
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAnimMontage*                     Montage                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SpecialStaticNodeActor_C::_________0(class UAnimMontage* Montage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpecialStaticNodeActor_C", "«¹¿à¤ÙóÈ_0");

	Params::BP_SpecialStaticNodeActor_C__________0 Parms{};

	Parms.Montage = Montage;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SpecialStaticNodeActor.BP_SpecialStaticNodeActor_C.OnNodeMeshAnimInitialized
// (BlueprintCallable, BlueprintEvent)

void ABP_SpecialStaticNodeActor_C::OnNodeMeshAnimInitialized()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpecialStaticNodeActor_C", "OnNodeMeshAnimInitialized");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SpecialStaticNodeActor.BP_SpecialStaticNodeActor_C.OnStaticNodeMontageEnd
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAnimMontage*                     Montage                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bInterrupted                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_SpecialStaticNodeActor_C::OnStaticNodeMontageEnd(class UAnimMontage* Montage, bool bInterrupted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpecialStaticNodeActor_C", "OnStaticNodeMontageEnd");

	Params::BP_SpecialStaticNodeActor_C_OnStaticNodeMontageEnd Parms{};

	Parms.Montage = Montage;
	Parms.bInterrupted = bInterrupted;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SpecialStaticNodeActor.BP_SpecialStaticNodeActor_C.WaitMontageEnd
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAnimMontage*                     AnimMontage                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   MontageLength                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SpecialStaticNodeActor_C::WaitMontageEnd(class UAnimMontage* AnimMontage, float MontageLength)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpecialStaticNodeActor_C", "WaitMontageEnd");

	Params::BP_SpecialStaticNodeActor_C_WaitMontageEnd Parms{};

	Parms.AnimMontage = AnimMontage;
	Parms.MontageLength = MontageLength;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SpecialStaticNodeActor.BP_SpecialStaticNodeActor_C.PlaySpecialNodeAnimMontage
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           SpecialNodeAnimPath                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    IsLoop                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_SpecialStaticNodeActor_C::PlaySpecialNodeAnimMontage(const class FString& SpecialNodeAnimPath, bool IsLoop)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpecialStaticNodeActor_C", "PlaySpecialNodeAnimMontage");

	Params::BP_SpecialStaticNodeActor_C_PlaySpecialNodeAnimMontage Parms{};

	Parms.SpecialNodeAnimPath = std::move(SpecialNodeAnimPath);
	Parms.IsLoop = IsLoop;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SpecialStaticNodeActor.BP_SpecialStaticNodeActor_C.AddSpecialNodeAnimation
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           SpecialNodeAnimNamePath                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    IsLoop                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_SpecialStaticNodeActor_C::AddSpecialNodeAnimation(const class FString& SpecialNodeAnimNamePath, bool IsLoop)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpecialStaticNodeActor_C", "AddSpecialNodeAnimation");

	Params::BP_SpecialStaticNodeActor_C_AddSpecialNodeAnimation Parms{};

	Parms.SpecialNodeAnimNamePath = std::move(SpecialNodeAnimNamePath);
	Parms.IsLoop = IsLoop;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SpecialStaticNodeActor.BP_SpecialStaticNodeActor_C.PlaySpecialNodeAnimation
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           SpecialNodeAnimNamePath                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    IsLoop                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsAddMotion                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_SpecialStaticNodeActor_C::PlaySpecialNodeAnimation(const class FString& SpecialNodeAnimNamePath, bool IsLoop, bool IsAddMotion)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpecialStaticNodeActor_C", "PlaySpecialNodeAnimation");

	Params::BP_SpecialStaticNodeActor_C_PlaySpecialNodeAnimation Parms{};

	Parms.SpecialNodeAnimNamePath = std::move(SpecialNodeAnimNamePath);
	Parms.IsLoop = IsLoop;
	Parms.IsAddMotion = IsAddMotion;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SpecialStaticNodeActor.BP_SpecialStaticNodeActor_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SpecialStaticNodeActor_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpecialStaticNodeActor_C", "ReceiveTick");

	Params::BP_SpecialStaticNodeActor_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SpecialStaticNodeActor.BP_SpecialStaticNodeActor_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_SpecialStaticNodeActor_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpecialStaticNodeActor_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SpecialStaticNodeActor.BP_SpecialStaticNodeActor_C.TimelineAddAnimWeightCurve__UpdateFunc
// (BlueprintEvent)

void ABP_SpecialStaticNodeActor_C::TimelineAddAnimWeightCurve__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpecialStaticNodeActor_C", "TimelineAddAnimWeightCurve__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SpecialStaticNodeActor.BP_SpecialStaticNodeActor_C.TimelineAddAnimWeightCurve__FinishedFunc
// (BlueprintEvent)

void ABP_SpecialStaticNodeActor_C::TimelineAddAnimWeightCurve__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpecialStaticNodeActor_C", "TimelineAddAnimWeightCurve__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SpecialStaticNodeActor.BP_SpecialStaticNodeActor_C.PrivateAddSpecialNodeAnimation
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           SpecialNodeAnimNamePath                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    IsLoop                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_SpecialStaticNodeActor_C::PrivateAddSpecialNodeAnimation(const class FString& SpecialNodeAnimNamePath, bool IsLoop)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpecialStaticNodeActor_C", "PrivateAddSpecialNodeAnimation");

	Params::BP_SpecialStaticNodeActor_C_PrivateAddSpecialNodeAnimation Parms{};

	Parms.SpecialNodeAnimNamePath = std::move(SpecialNodeAnimNamePath);
	Parms.IsLoop = IsLoop;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SpecialStaticNodeActor.BP_SpecialStaticNodeActor_C.PrivatePlaySpecialNodeAnimation
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           SpecialNodeAnimNamePath                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    IsLoop                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsAddMotion                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_SpecialStaticNodeActor_C::PrivatePlaySpecialNodeAnimation(const class FString& SpecialNodeAnimNamePath, bool IsLoop, bool IsAddMotion)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpecialStaticNodeActor_C", "PrivatePlaySpecialNodeAnimation");

	Params::BP_SpecialStaticNodeActor_C_PrivatePlaySpecialNodeAnimation Parms{};

	Parms.SpecialNodeAnimNamePath = std::move(SpecialNodeAnimNamePath);
	Parms.IsLoop = IsLoop;
	Parms.IsAddMotion = IsAddMotion;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SpecialStaticNodeActor.BP_SpecialStaticNodeActor_C.IsEndMotion
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_IsEndMotion                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_SpecialStaticNodeActor_C::IsEndMotion(bool* Param_IsEndMotion)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpecialStaticNodeActor_C", "IsEndMotion");

	Params::BP_SpecialStaticNodeActor_C_IsEndMotion Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_IsEndMotion != nullptr)
		*Param_IsEndMotion = Parms.Param_IsEndMotion;
}


// Function BP_SpecialStaticNodeActor.BP_SpecialStaticNodeActor_C.PrivatePlaySpecialNodeAnimMontage
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           SpecialNodeAnimNamePath                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    IsLoop                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsAdd                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_SpecialStaticNodeActor_C::PrivatePlaySpecialNodeAnimMontage(const class FString& SpecialNodeAnimNamePath, bool IsLoop, bool IsAdd)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpecialStaticNodeActor_C", "PrivatePlaySpecialNodeAnimMontage");

	Params::BP_SpecialStaticNodeActor_C_PrivatePlaySpecialNodeAnimMontage Parms{};

	Parms.SpecialNodeAnimNamePath = std::move(SpecialNodeAnimNamePath);
	Parms.IsLoop = IsLoop;
	Parms.IsAdd = IsAdd;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SpecialStaticNodeActor.BP_SpecialStaticNodeActor_C.OnAnimMontageEnded
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAnimMontage*                     AnimMontage                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Interrupted                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_SpecialStaticNodeActor_C::OnAnimMontageEnded(class UAnimMontage* AnimMontage, bool Interrupted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpecialStaticNodeActor_C", "OnAnimMontageEnded");

	Params::BP_SpecialStaticNodeActor_C_OnAnimMontageEnded Parms{};

	Parms.AnimMontage = AnimMontage;
	Parms.Interrupted = Interrupted;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SpecialStaticNodeActor.BP_SpecialStaticNodeActor_C.PrivateStopAddSpecialNodeAnimMontage
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_SpecialStaticNodeActor_C::PrivateStopAddSpecialNodeAnimMontage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpecialStaticNodeActor_C", "PrivateStopAddSpecialNodeAnimMontage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SpecialStaticNodeActor.BP_SpecialStaticNodeActor_C.GetSkeletalMesh
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USkeletalMeshComponent*           Param_SkeletalMesh                                     (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SpecialStaticNodeActor_C::GetSkeletalMesh(class USkeletalMeshComponent** Param_SkeletalMesh)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpecialStaticNodeActor_C", "GetSkeletalMesh");

	Params::BP_SpecialStaticNodeActor_C_GetSkeletalMesh Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_SkeletalMesh != nullptr)
		*Param_SkeletalMesh = Parms.Param_SkeletalMesh;
}


// Function BP_SpecialStaticNodeActor.BP_SpecialStaticNodeActor_C.GetStaticMesh
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UStaticMeshComponent*             StaticMesh                                             (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SpecialStaticNodeActor_C::GetStaticMesh(class UStaticMeshComponent** StaticMesh)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SpecialStaticNodeActor_C", "GetStaticMesh");

	Params::BP_SpecialStaticNodeActor_C_GetStaticMesh Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (StaticMesh != nullptr)
		*StaticMesh = Parms.StaticMesh;
}

}

