#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPC_PsychicBattle

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BattlePrototype_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SPsychicCaptureMaterial_structs.hpp"
#include "MovieScene_structs.hpp"


namespace SDK::Params
{

// Function BPC_PsychicBattle.BPC_PsychicBattle_C.OnFinished__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct BPC_PsychicBattle_C_OnFinished__DelegateSignature final
{
public:
	EPsychicBattleType                            PsychicBattleType;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_PsychicBattle_C_OnFinished__DelegateSignature) == 0x000001, "Wrong alignment on BPC_PsychicBattle_C_OnFinished__DelegateSignature");
static_assert(sizeof(BPC_PsychicBattle_C_OnFinished__DelegateSignature) == 0x000001, "Wrong size on BPC_PsychicBattle_C_OnFinished__DelegateSignature");
static_assert(offsetof(BPC_PsychicBattle_C_OnFinished__DelegateSignature, PsychicBattleType) == 0x000000, "Member 'BPC_PsychicBattle_C_OnFinished__DelegateSignature::PsychicBattleType' has a wrong offset!");

// Function BPC_PsychicBattle.BPC_PsychicBattle_C.OnStart__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct BPC_PsychicBattle_C_OnStart__DelegateSignature final
{
public:
	EPsychicBattleType                            PsychicBattleType;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_PsychicBattle_C_OnStart__DelegateSignature) == 0x000001, "Wrong alignment on BPC_PsychicBattle_C_OnStart__DelegateSignature");
static_assert(sizeof(BPC_PsychicBattle_C_OnStart__DelegateSignature) == 0x000001, "Wrong size on BPC_PsychicBattle_C_OnStart__DelegateSignature");
static_assert(offsetof(BPC_PsychicBattle_C_OnStart__DelegateSignature, PsychicBattleType) == 0x000000, "Member 'BPC_PsychicBattle_C_OnStart__DelegateSignature::PsychicBattleType' has a wrong offset!");

// Function BPC_PsychicBattle.BPC_PsychicBattle_C.OnBattleStart__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct BPC_PsychicBattle_C_OnBattleStart__DelegateSignature final
{
public:
	EPsychicBattleType                            PsychicBattleType;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_PsychicBattle_C_OnBattleStart__DelegateSignature) == 0x000001, "Wrong alignment on BPC_PsychicBattle_C_OnBattleStart__DelegateSignature");
static_assert(sizeof(BPC_PsychicBattle_C_OnBattleStart__DelegateSignature) == 0x000001, "Wrong size on BPC_PsychicBattle_C_OnBattleStart__DelegateSignature");
static_assert(offsetof(BPC_PsychicBattle_C_OnBattleStart__DelegateSignature, PsychicBattleType) == 0x000000, "Member 'BPC_PsychicBattle_C_OnBattleStart__DelegateSignature::PsychicBattleType' has a wrong offset!");

// Function BPC_PsychicBattle.BPC_PsychicBattle_C.OnBattleFinish__DelegateSignature
// 0x0002 (0x0002 - 0x0000)
struct BPC_PsychicBattle_C_OnBattleFinish__DelegateSignature final
{
public:
	EPsychicBattleType                            PsychicBattleType;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Win;                                               // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPC_PsychicBattle_C_OnBattleFinish__DelegateSignature) == 0x000001, "Wrong alignment on BPC_PsychicBattle_C_OnBattleFinish__DelegateSignature");
static_assert(sizeof(BPC_PsychicBattle_C_OnBattleFinish__DelegateSignature) == 0x000002, "Wrong size on BPC_PsychicBattle_C_OnBattleFinish__DelegateSignature");
static_assert(offsetof(BPC_PsychicBattle_C_OnBattleFinish__DelegateSignature, PsychicBattleType) == 0x000000, "Member 'BPC_PsychicBattle_C_OnBattleFinish__DelegateSignature::PsychicBattleType' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_OnBattleFinish__DelegateSignature, Win) == 0x000001, "Member 'BPC_PsychicBattle_C_OnBattleFinish__DelegateSignature::Win' has a wrong offset!");

// Function BPC_PsychicBattle.BPC_PsychicBattle_C.ExecuteUbergraph_BPC_PsychicBattle
// 0x0028 (0x0028 - 0x0000)
struct BPC_PsychicBattle_C_ExecuteUbergraph_BPC_PsychicBattle final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_87AD[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPsychicBattleAnimationPhaseType              K2Node_CustomEvent_BattlePhase;                    // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_87AE[0x2];                                     // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PsychicBattleObject_C> K2Node_DynamicCast_AsBPI_Psychic_Battle_Object;    // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPC_PsychicBattle_C_ExecuteUbergraph_BPC_PsychicBattle) == 0x000008, "Wrong alignment on BPC_PsychicBattle_C_ExecuteUbergraph_BPC_PsychicBattle");
static_assert(sizeof(BPC_PsychicBattle_C_ExecuteUbergraph_BPC_PsychicBattle) == 0x000028, "Wrong size on BPC_PsychicBattle_C_ExecuteUbergraph_BPC_PsychicBattle");
static_assert(offsetof(BPC_PsychicBattle_C_ExecuteUbergraph_BPC_PsychicBattle, EntryPoint) == 0x000000, "Member 'BPC_PsychicBattle_C_ExecuteUbergraph_BPC_PsychicBattle::EntryPoint' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ExecuteUbergraph_BPC_PsychicBattle, K2Node_Event_EndPlayReason) == 0x000004, "Member 'BPC_PsychicBattle_C_ExecuteUbergraph_BPC_PsychicBattle::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ExecuteUbergraph_BPC_PsychicBattle, K2Node_Event_DeltaSeconds) == 0x000008, "Member 'BPC_PsychicBattle_C_ExecuteUbergraph_BPC_PsychicBattle::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ExecuteUbergraph_BPC_PsychicBattle, K2Node_CustomEvent_BattlePhase) == 0x00000C, "Member 'BPC_PsychicBattle_C_ExecuteUbergraph_BPC_PsychicBattle::K2Node_CustomEvent_BattlePhase' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ExecuteUbergraph_BPC_PsychicBattle, CallFunc_IsValid_ReturnValue) == 0x00000D, "Member 'BPC_PsychicBattle_C_ExecuteUbergraph_BPC_PsychicBattle::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ExecuteUbergraph_BPC_PsychicBattle, K2Node_DynamicCast_AsBPI_Psychic_Battle_Object) == 0x000010, "Member 'BPC_PsychicBattle_C_ExecuteUbergraph_BPC_PsychicBattle::K2Node_DynamicCast_AsBPI_Psychic_Battle_Object' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ExecuteUbergraph_BPC_PsychicBattle, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BPC_PsychicBattle_C_ExecuteUbergraph_BPC_PsychicBattle::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BPC_PsychicBattle.BPC_PsychicBattle_C.PlayBatleObjectAnimation
// 0x0001 (0x0001 - 0x0000)
struct BPC_PsychicBattle_C_PlayBatleObjectAnimation final
{
public:
	EPsychicBattleAnimationPhaseType              BattlePhase;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_PsychicBattle_C_PlayBatleObjectAnimation) == 0x000001, "Wrong alignment on BPC_PsychicBattle_C_PlayBatleObjectAnimation");
static_assert(sizeof(BPC_PsychicBattle_C_PlayBatleObjectAnimation) == 0x000001, "Wrong size on BPC_PsychicBattle_C_PlayBatleObjectAnimation");
static_assert(offsetof(BPC_PsychicBattle_C_PlayBatleObjectAnimation, BattlePhase) == 0x000000, "Member 'BPC_PsychicBattle_C_PlayBatleObjectAnimation::BattlePhase' has a wrong offset!");

// Function BPC_PsychicBattle.BPC_PsychicBattle_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BPC_PsychicBattle_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_PsychicBattle_C_ReceiveTick) == 0x000004, "Wrong alignment on BPC_PsychicBattle_C_ReceiveTick");
static_assert(sizeof(BPC_PsychicBattle_C_ReceiveTick) == 0x000004, "Wrong size on BPC_PsychicBattle_C_ReceiveTick");
static_assert(offsetof(BPC_PsychicBattle_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BPC_PsychicBattle_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BPC_PsychicBattle.BPC_PsychicBattle_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BPC_PsychicBattle_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_PsychicBattle_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BPC_PsychicBattle_C_ReceiveEndPlay");
static_assert(sizeof(BPC_PsychicBattle_C_ReceiveEndPlay) == 0x000001, "Wrong size on BPC_PsychicBattle_C_ReceiveEndPlay");
static_assert(offsetof(BPC_PsychicBattle_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BPC_PsychicBattle_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BPC_PsychicBattle.BPC_PsychicBattle_C.Start
// 0x00F0 (0x00F0 - 0x0000)
struct BPC_PsychicBattle_C_Start final
{
public:
	EPsychicBattleType                            PsychicBattleType;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_87AF[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattleCharacter_C*                   User;                                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARsBattleHero_C*                        K2Node_DynamicCast_AsRs_Battle_Hero;               // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_87B0[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleCharacterInterface_C> K2Node_DynamicCast_AsBPI_Battle_Character_Interface; // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_87B1[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetLockOnTargetInterface_TargetActor;     // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLockTarget_ReturnValue;                 // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_87B2[0x6];                                     // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_87B3[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0060(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0078(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00B8(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00C8(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x00E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_PsychicBattle_C_Start) == 0x000008, "Wrong alignment on BPC_PsychicBattle_C_Start");
static_assert(sizeof(BPC_PsychicBattle_C_Start) == 0x0000F0, "Wrong size on BPC_PsychicBattle_C_Start");
static_assert(offsetof(BPC_PsychicBattle_C_Start, PsychicBattleType) == 0x000000, "Member 'BPC_PsychicBattle_C_Start::PsychicBattleType' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_Start, User) == 0x000008, "Member 'BPC_PsychicBattle_C_Start::User' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_Start, K2Node_DynamicCast_AsRs_Battle_Hero) == 0x000010, "Member 'BPC_PsychicBattle_C_Start::K2Node_DynamicCast_AsRs_Battle_Hero' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_Start, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BPC_PsychicBattle_C_Start::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_Start, K2Node_DynamicCast_AsBPI_Battle_Character_Interface) == 0x000020, "Member 'BPC_PsychicBattle_C_Start::K2Node_DynamicCast_AsBPI_Battle_Character_Interface' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_Start, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'BPC_PsychicBattle_C_Start::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_Start, CallFunc_GetLockOnTargetInterface_TargetActor) == 0x000038, "Member 'BPC_PsychicBattle_C_Start::CallFunc_GetLockOnTargetInterface_TargetActor' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_Start, CallFunc_IsLockTarget_ReturnValue) == 0x000040, "Member 'BPC_PsychicBattle_C_Start::CallFunc_IsLockTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_Start, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000041, "Member 'BPC_PsychicBattle_C_Start::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_Start, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000048, "Member 'BPC_PsychicBattle_C_Start::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_Start, CallFunc_IsValid_ReturnValue) == 0x000058, "Member 'BPC_PsychicBattle_C_Start::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_Start, CallFunc_Conv_StringToText_ReturnValue) == 0x000060, "Member 'BPC_PsychicBattle_C_Start::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_Start, K2Node_MakeStruct_FormatArgumentData) == 0x000078, "Member 'BPC_PsychicBattle_C_Start::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_Start, K2Node_MakeArray_Array) == 0x0000B8, "Member 'BPC_PsychicBattle_C_Start::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_Start, CallFunc_Format_ReturnValue) == 0x0000C8, "Member 'BPC_PsychicBattle_C_Start::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_Start, CallFunc_Conv_TextToString_ReturnValue) == 0x0000E0, "Member 'BPC_PsychicBattle_C_Start::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");

// Function BPC_PsychicBattle.BPC_PsychicBattle_C.ProtectedInitialize
// 0x00B0 (0x00B0 - 0x0000)
struct BPC_PsychicBattle_C_ProtectedInitialize final
{
public:
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0000(0x0030)(IsPlainOldData, NoDestructor)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_87B4[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x0040(0x0030)(IsPlainOldData, NoDestructor)
	class ABP_SeamlessCameraRoot_C*               CallFunc_FinishSpawningActor_ReturnValue;          // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1; // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSLevelSequenceActor*                  CallFunc_FinishSpawningActor_ReturnValue_1;        // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_1;            // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_87B5[0x6];                                     // 0x008A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0098(0x0010)(ReferenceParm, HasGetValueTypeHash)
};
static_assert(alignof(BPC_PsychicBattle_C_ProtectedInitialize) == 0x000010, "Wrong alignment on BPC_PsychicBattle_C_ProtectedInitialize");
static_assert(sizeof(BPC_PsychicBattle_C_ProtectedInitialize) == 0x0000B0, "Wrong size on BPC_PsychicBattle_C_ProtectedInitialize");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedInitialize, CallFunc_MakeTransform_ReturnValue) == 0x000000, "Member 'BPC_PsychicBattle_C_ProtectedInitialize::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedInitialize, CallFunc_MakeLiteralInt_ReturnValue) == 0x000030, "Member 'BPC_PsychicBattle_C_ProtectedInitialize::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedInitialize, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000038, "Member 'BPC_PsychicBattle_C_ProtectedInitialize::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedInitialize, CallFunc_MakeTransform_ReturnValue_1) == 0x000040, "Member 'BPC_PsychicBattle_C_ProtectedInitialize::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedInitialize, CallFunc_FinishSpawningActor_ReturnValue) == 0x000070, "Member 'BPC_PsychicBattle_C_ProtectedInitialize::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedInitialize, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1) == 0x000078, "Member 'BPC_PsychicBattle_C_ProtectedInitialize::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedInitialize, CallFunc_FinishSpawningActor_ReturnValue_1) == 0x000080, "Member 'BPC_PsychicBattle_C_ProtectedInitialize::CallFunc_FinishSpawningActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedInitialize, CallFunc_MakeLiteralByte_ReturnValue) == 0x000088, "Member 'BPC_PsychicBattle_C_ProtectedInitialize::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedInitialize, CallFunc_MakeLiteralByte_ReturnValue_1) == 0x000089, "Member 'BPC_PsychicBattle_C_ProtectedInitialize::CallFunc_MakeLiteralByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedInitialize, CallFunc_GetOwner_ReturnValue) == 0x000090, "Member 'BPC_PsychicBattle_C_ProtectedInitialize::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedInitialize, K2Node_MakeArray_Array) == 0x000098, "Member 'BPC_PsychicBattle_C_ProtectedInitialize::K2Node_MakeArray_Array' has a wrong offset!");

// Function BPC_PsychicBattle.BPC_PsychicBattle_C.ProtectedFinalize
// 0x0004 (0x0004 - 0x0000)
struct BPC_PsychicBattle_C_ProtectedFinalize final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPC_PsychicBattle_C_ProtectedFinalize) == 0x000001, "Wrong alignment on BPC_PsychicBattle_C_ProtectedFinalize");
static_assert(sizeof(BPC_PsychicBattle_C_ProtectedFinalize) == 0x000004, "Wrong size on BPC_PsychicBattle_C_ProtectedFinalize");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedFinalize, EndPlayReason) == 0x000000, "Member 'BPC_PsychicBattle_C_ProtectedFinalize::EndPlayReason' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedFinalize, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'BPC_PsychicBattle_C_ProtectedFinalize::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedFinalize, CallFunc_IsValid_ReturnValue) == 0x000002, "Member 'BPC_PsychicBattle_C_ProtectedFinalize::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedFinalize, CallFunc_IsValid_ReturnValue_1) == 0x000003, "Member 'BPC_PsychicBattle_C_ProtectedFinalize::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BPC_PsychicBattle.BPC_PsychicBattle_C.ProtectedOnFinishedSequencer
// 0x0038 (0x0038 - 0x0000)
struct BPC_PsychicBattle_C_ProtectedOnFinishedSequencer final
{
public:
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_87B6[0x6];                                     // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       K2Node_DynamicCast_AsRSCharacter_Base;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_87B7[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattlePlayer_C*                      CallFunc_GetMainPlayer_Player;                     // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_87B8[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue;            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_PsychicBattle_C_ProtectedOnFinishedSequencer) == 0x000008, "Wrong alignment on BPC_PsychicBattle_C_ProtectedOnFinishedSequencer");
static_assert(sizeof(BPC_PsychicBattle_C_ProtectedOnFinishedSequencer) == 0x000038, "Wrong size on BPC_PsychicBattle_C_ProtectedOnFinishedSequencer");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedOnFinishedSequencer, CallFunc_GetPlayerManager_PlayerManager) == 0x000000, "Member 'BPC_PsychicBattle_C_ProtectedOnFinishedSequencer::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedOnFinishedSequencer, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BPC_PsychicBattle_C_ProtectedOnFinishedSequencer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedOnFinishedSequencer, CallFunc_IsValid_ReturnValue_1) == 0x000009, "Member 'BPC_PsychicBattle_C_ProtectedOnFinishedSequencer::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedOnFinishedSequencer, K2Node_DynamicCast_AsRSCharacter_Base) == 0x000010, "Member 'BPC_PsychicBattle_C_ProtectedOnFinishedSequencer::K2Node_DynamicCast_AsRSCharacter_Base' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedOnFinishedSequencer, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BPC_PsychicBattle_C_ProtectedOnFinishedSequencer::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedOnFinishedSequencer, CallFunc_GetMainPlayer_Player) == 0x000020, "Member 'BPC_PsychicBattle_C_ProtectedOnFinishedSequencer::CallFunc_GetMainPlayer_Player' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedOnFinishedSequencer, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000028, "Member 'BPC_PsychicBattle_C_ProtectedOnFinishedSequencer::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedOnFinishedSequencer, CallFunc_GetSequencePlayer_ReturnValue) == 0x000030, "Member 'BPC_PsychicBattle_C_ProtectedOnFinishedSequencer::CallFunc_GetSequencePlayer_ReturnValue' has a wrong offset!");

// Function BPC_PsychicBattle.BPC_PsychicBattle_C.LoadAsset
// 0x0168 (0x0168 - 0x0000)
struct BPC_PsychicBattle_C_LoadAsset final
{
public:
	EPsychicBattleType                            PsychicBattleType;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerID                                     UserPlayerID;                                      // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_87B9[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_1;             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ProtectedIsPlayerCh0100_Ch0100;           // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_87BA[0x1];                                     // 0x000F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0020(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0038(0x0040)(HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_2;             // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_87BB[0x4];                                     // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1; // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0090(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_87BC[0x7];                                     // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0098(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00B0(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00F0(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0100(0x0018)()
	TSoftObjectPtr<class ULevelSequence>          CallFunc_ProtectedGetSequencerAsset_LevelSequence; // 0x0118(0x0028)(HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0140(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue;               // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequence*                         K2Node_DynamicCast_AsLevel_Sequence;               // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPC_PsychicBattle_C_LoadAsset) == 0x000008, "Wrong alignment on BPC_PsychicBattle_C_LoadAsset");
static_assert(sizeof(BPC_PsychicBattle_C_LoadAsset) == 0x000168, "Wrong size on BPC_PsychicBattle_C_LoadAsset");
static_assert(offsetof(BPC_PsychicBattle_C_LoadAsset, PsychicBattleType) == 0x000000, "Member 'BPC_PsychicBattle_C_LoadAsset::PsychicBattleType' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_LoadAsset, UserPlayerID) == 0x000001, "Member 'BPC_PsychicBattle_C_LoadAsset::UserPlayerID' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_LoadAsset, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000004, "Member 'BPC_PsychicBattle_C_LoadAsset::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_LoadAsset, CallFunc_Conv_ByteToInt_ReturnValue_1) == 0x000008, "Member 'BPC_PsychicBattle_C_LoadAsset::CallFunc_Conv_ByteToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_LoadAsset, K2Node_SwitchEnum_CmpSuccess) == 0x00000C, "Member 'BPC_PsychicBattle_C_LoadAsset::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_LoadAsset, CallFunc_Array_IsValidIndex_ReturnValue) == 0x00000D, "Member 'BPC_PsychicBattle_C_LoadAsset::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_LoadAsset, CallFunc_ProtectedIsPlayerCh0100_Ch0100) == 0x00000E, "Member 'BPC_PsychicBattle_C_LoadAsset::CallFunc_ProtectedIsPlayerCh0100_Ch0100' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_LoadAsset, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000010, "Member 'BPC_PsychicBattle_C_LoadAsset::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_LoadAsset, CallFunc_Conv_StringToText_ReturnValue) == 0x000020, "Member 'BPC_PsychicBattle_C_LoadAsset::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_LoadAsset, K2Node_MakeStruct_FormatArgumentData) == 0x000038, "Member 'BPC_PsychicBattle_C_LoadAsset::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_LoadAsset, CallFunc_Conv_ByteToInt_ReturnValue_2) == 0x000078, "Member 'BPC_PsychicBattle_C_LoadAsset::CallFunc_Conv_ByteToInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_LoadAsset, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1) == 0x000080, "Member 'BPC_PsychicBattle_C_LoadAsset::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_LoadAsset, Temp_bool_Variable) == 0x000090, "Member 'BPC_PsychicBattle_C_LoadAsset::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_LoadAsset, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000098, "Member 'BPC_PsychicBattle_C_LoadAsset::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_LoadAsset, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000B0, "Member 'BPC_PsychicBattle_C_LoadAsset::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_LoadAsset, K2Node_MakeArray_Array) == 0x0000F0, "Member 'BPC_PsychicBattle_C_LoadAsset::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_LoadAsset, CallFunc_Format_ReturnValue) == 0x000100, "Member 'BPC_PsychicBattle_C_LoadAsset::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_LoadAsset, CallFunc_ProtectedGetSequencerAsset_LevelSequence) == 0x000118, "Member 'BPC_PsychicBattle_C_LoadAsset::CallFunc_ProtectedGetSequencerAsset_LevelSequence' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_LoadAsset, CallFunc_Conv_TextToString_ReturnValue) == 0x000140, "Member 'BPC_PsychicBattle_C_LoadAsset::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_LoadAsset, CallFunc_LoadSoftObject_ReturnValue) == 0x000150, "Member 'BPC_PsychicBattle_C_LoadAsset::CallFunc_LoadSoftObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_LoadAsset, K2Node_DynamicCast_AsLevel_Sequence) == 0x000158, "Member 'BPC_PsychicBattle_C_LoadAsset::K2Node_DynamicCast_AsLevel_Sequence' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_LoadAsset, K2Node_DynamicCast_bSuccess) == 0x000160, "Member 'BPC_PsychicBattle_C_LoadAsset::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_LoadAsset, CallFunc_IsValid_ReturnValue) == 0x000161, "Member 'BPC_PsychicBattle_C_LoadAsset::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BPC_PsychicBattle.BPC_PsychicBattle_C.GetParameter
// 0x0290 (0x0290 - 0x0000)
struct BPC_PsychicBattle_C_GetParameter final
{
public:
	EPsychicBattleType                            PsychicBattleType;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_87BD[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPsychicBattleParameter                Parameter;                                         // 0x0008(0x0098)(Parm, OutParm)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_87BE[0x4];                                     // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x00B8(0x0018)()
	struct FPsychicBattleParameter                K2Node_MakeStruct_PsychicBattleParameter;          // 0x00D0(0x0098)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0168(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x01A8(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x01B8(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x01C8(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x01E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FPsychicBattleParameter                CallFunc_GetDataTableRowFromName_OutRow;           // 0x01F0(0x0098)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0289(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPC_PsychicBattle_C_GetParameter) == 0x000008, "Wrong alignment on BPC_PsychicBattle_C_GetParameter");
static_assert(sizeof(BPC_PsychicBattle_C_GetParameter) == 0x000290, "Wrong size on BPC_PsychicBattle_C_GetParameter");
static_assert(offsetof(BPC_PsychicBattle_C_GetParameter, PsychicBattleType) == 0x000000, "Member 'BPC_PsychicBattle_C_GetParameter::PsychicBattleType' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_GetParameter, Parameter) == 0x000008, "Member 'BPC_PsychicBattle_C_GetParameter::Parameter' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_GetParameter, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x0000A0, "Member 'BPC_PsychicBattle_C_GetParameter::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_GetParameter, CallFunc_Conv_ByteToInt_ReturnValue) == 0x0000B0, "Member 'BPC_PsychicBattle_C_GetParameter::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_GetParameter, CallFunc_Conv_StringToText_ReturnValue) == 0x0000B8, "Member 'BPC_PsychicBattle_C_GetParameter::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_GetParameter, K2Node_MakeStruct_PsychicBattleParameter) == 0x0000D0, "Member 'BPC_PsychicBattle_C_GetParameter::K2Node_MakeStruct_PsychicBattleParameter' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_GetParameter, K2Node_MakeStruct_FormatArgumentData) == 0x000168, "Member 'BPC_PsychicBattle_C_GetParameter::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_GetParameter, K2Node_MakeArray_Array) == 0x0001A8, "Member 'BPC_PsychicBattle_C_GetParameter::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_GetParameter, CallFunc_GetDataTableRowNames_OutRowNames) == 0x0001B8, "Member 'BPC_PsychicBattle_C_GetParameter::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_GetParameter, CallFunc_Format_ReturnValue) == 0x0001C8, "Member 'BPC_PsychicBattle_C_GetParameter::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_GetParameter, CallFunc_Conv_TextToString_ReturnValue) == 0x0001E0, "Member 'BPC_PsychicBattle_C_GetParameter::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_GetParameter, CallFunc_GetDataTableRowFromName_OutRow) == 0x0001F0, "Member 'BPC_PsychicBattle_C_GetParameter::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_GetParameter, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000288, "Member 'BPC_PsychicBattle_C_GetParameter::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_GetParameter, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000289, "Member 'BPC_PsychicBattle_C_GetParameter::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");

// Function BPC_PsychicBattle.BPC_PsychicBattle_C.ProtectedGetSequencerAsset
// 0x0120 (0x0120 - 0x0000)
struct BPC_PsychicBattle_C_ProtectedGetSequencerAsset final
{
public:
	EPsychicBattleType                            PsychicBattleType;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerID                                     UserPlayerID;                                      // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_87BF[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class ULevelSequence>          LevelSequence;                                     // 0x0008(0x0028)(Parm, OutParm, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_87C0[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPsychicBattleParameter                CallFunc_GetParameter_Parameter;                   // 0x0038(0x0098)()
	bool                                          CallFunc_ProtectedIsPlayerCh0100_Ch0100;           // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_87C1[0x7];                                     // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPsychicBattleSequenceData             K2Node_Select_Default;                             // 0x00D8(0x0048)(ConstParm)
};
static_assert(alignof(BPC_PsychicBattle_C_ProtectedGetSequencerAsset) == 0x000008, "Wrong alignment on BPC_PsychicBattle_C_ProtectedGetSequencerAsset");
static_assert(sizeof(BPC_PsychicBattle_C_ProtectedGetSequencerAsset) == 0x000120, "Wrong size on BPC_PsychicBattle_C_ProtectedGetSequencerAsset");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedGetSequencerAsset, PsychicBattleType) == 0x000000, "Member 'BPC_PsychicBattle_C_ProtectedGetSequencerAsset::PsychicBattleType' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedGetSequencerAsset, UserPlayerID) == 0x000001, "Member 'BPC_PsychicBattle_C_ProtectedGetSequencerAsset::UserPlayerID' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedGetSequencerAsset, LevelSequence) == 0x000008, "Member 'BPC_PsychicBattle_C_ProtectedGetSequencerAsset::LevelSequence' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedGetSequencerAsset, Temp_bool_Variable) == 0x000030, "Member 'BPC_PsychicBattle_C_ProtectedGetSequencerAsset::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedGetSequencerAsset, CallFunc_GetParameter_Parameter) == 0x000038, "Member 'BPC_PsychicBattle_C_ProtectedGetSequencerAsset::CallFunc_GetParameter_Parameter' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedGetSequencerAsset, CallFunc_ProtectedIsPlayerCh0100_Ch0100) == 0x0000D0, "Member 'BPC_PsychicBattle_C_ProtectedGetSequencerAsset::CallFunc_ProtectedIsPlayerCh0100_Ch0100' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedGetSequencerAsset, K2Node_Select_Default) == 0x0000D8, "Member 'BPC_PsychicBattle_C_ProtectedGetSequencerAsset::K2Node_Select_Default' has a wrong offset!");

// Function BPC_PsychicBattle.BPC_PsychicBattle_C.Reset
// 0x0038 (0x0038 - 0x0000)
struct BPC_PsychicBattle_C_Reset final
{
public:
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_87C2[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_87C3[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_87C4[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue;            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0029(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_87C5[0x5];                                     // 0x002B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue_1;          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_PsychicBattle_C_Reset) == 0x000008, "Wrong alignment on BPC_PsychicBattle_C_Reset");
static_assert(sizeof(BPC_PsychicBattle_C_Reset) == 0x000038, "Wrong size on BPC_PsychicBattle_C_Reset");
static_assert(offsetof(BPC_PsychicBattle_C_Reset, Temp_int_Loop_Num_Variable) == 0x000000, "Member 'BPC_PsychicBattle_C_Reset::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_Reset, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BPC_PsychicBattle_C_Reset::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_Reset, CallFunc_Less_IntInt_ReturnValue) == 0x000008, "Member 'BPC_PsychicBattle_C_Reset::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_Reset, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BPC_PsychicBattle_C_Reset::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_Reset, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BPC_PsychicBattle_C_Reset::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_Reset, CallFunc_Array_Length_ReturnValue) == 0x000014, "Member 'BPC_PsychicBattle_C_Reset::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_Reset, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BPC_PsychicBattle_C_Reset::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_Reset, CallFunc_GetSequencePlayer_ReturnValue) == 0x000020, "Member 'BPC_PsychicBattle_C_Reset::CallFunc_GetSequencePlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_Reset, CallFunc_IsValid_ReturnValue_1) == 0x000028, "Member 'BPC_PsychicBattle_C_Reset::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_Reset, Temp_bool_Variable) == 0x000029, "Member 'BPC_PsychicBattle_C_Reset::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_Reset, CallFunc_IsValid_ReturnValue_2) == 0x00002A, "Member 'BPC_PsychicBattle_C_Reset::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_Reset, CallFunc_GetSequencePlayer_ReturnValue_1) == 0x000030, "Member 'BPC_PsychicBattle_C_Reset::CallFunc_GetSequencePlayer_ReturnValue_1' has a wrong offset!");

// Function BPC_PsychicBattle.BPC_PsychicBattle_C.ProtectedGetLevelSequence
// 0x0030 (0x0030 - 0x0000)
struct BPC_PsychicBattle_C_ProtectedGetLevelSequence final
{
public:
	EPsychicBattleType                            PsychicBattleType;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerID                                     UserPlayerID;                                      // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_87C6[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelSequence*                         Asset;                                             // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequence*                         RetAsset;                                          // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ProtectedIsPlayerCh0100_Ch0100;           // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_87C7[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelSequence*                         CallFunc_ProtectedGetLevelSequenceInternal_Asset;  // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequence*                         CallFunc_ProtectedGetLevelSequenceInternal_Asset_1; // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_PsychicBattle_C_ProtectedGetLevelSequence) == 0x000008, "Wrong alignment on BPC_PsychicBattle_C_ProtectedGetLevelSequence");
static_assert(sizeof(BPC_PsychicBattle_C_ProtectedGetLevelSequence) == 0x000030, "Wrong size on BPC_PsychicBattle_C_ProtectedGetLevelSequence");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedGetLevelSequence, PsychicBattleType) == 0x000000, "Member 'BPC_PsychicBattle_C_ProtectedGetLevelSequence::PsychicBattleType' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedGetLevelSequence, UserPlayerID) == 0x000001, "Member 'BPC_PsychicBattle_C_ProtectedGetLevelSequence::UserPlayerID' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedGetLevelSequence, Asset) == 0x000008, "Member 'BPC_PsychicBattle_C_ProtectedGetLevelSequence::Asset' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedGetLevelSequence, RetAsset) == 0x000010, "Member 'BPC_PsychicBattle_C_ProtectedGetLevelSequence::RetAsset' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedGetLevelSequence, CallFunc_ProtectedIsPlayerCh0100_Ch0100) == 0x000018, "Member 'BPC_PsychicBattle_C_ProtectedGetLevelSequence::CallFunc_ProtectedIsPlayerCh0100_Ch0100' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedGetLevelSequence, CallFunc_ProtectedGetLevelSequenceInternal_Asset) == 0x000020, "Member 'BPC_PsychicBattle_C_ProtectedGetLevelSequence::CallFunc_ProtectedGetLevelSequenceInternal_Asset' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedGetLevelSequence, CallFunc_ProtectedGetLevelSequenceInternal_Asset_1) == 0x000028, "Member 'BPC_PsychicBattle_C_ProtectedGetLevelSequence::CallFunc_ProtectedGetLevelSequenceInternal_Asset_1' has a wrong offset!");

// Function BPC_PsychicBattle.BPC_PsychicBattle_C.EventEndBattleSequence
// 0x0498 (0x0498 - 0x0000)
struct BPC_PsychicBattle_C_EventEndBattleSequence final
{
public:
	bool                                          IsWin;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_87C8[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   LoseShotName;                                      // 0x0008(0x0018)(Edit, BlueprintVisible)
	class FText                                   WinShotName;                                       // 0x0020(0x0018)(Edit, BlueprintVisible)
	bool                                          Temp_bool_Variable;                                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_87C9[0x6];                                     // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerInterface_C> K2Node_DynamicCast_AsBPI_Player_Interface;         // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_PlayerCameraReset_Dummy;                  // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_87CA[0x5];                                     // 0x0053(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1; // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0078(0x0018)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0090(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x00A8(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00E8(0x0040)(HasGetValueTypeHash)
	class ULevelSequence*                         CallFunc_GetSequence_ReturnValue;                  // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_2; // 0x0130(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x0140(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_2;          // 0x0150(0x0018)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_3;          // 0x0168(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0180(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x01C0(0x0040)(HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_3; // 0x0200(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ULevelSequence*                         CallFunc_GetSequence_ReturnValue_1;                // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_4;          // 0x0218(0x0018)()
	class FString                                 CallFunc_GetObjectName_ReturnValue_1;              // 0x0230(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_4;            // 0x0240(0x0040)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_5;          // 0x0280(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_5;            // 0x0298(0x0040)(HasGetValueTypeHash)
	class FText                                   K2Node_Select_Default;                             // 0x02D8(0x0018)()
	class FText                                   CallFunc_ProtectedGetWinLoseShot_WinShotName;      // 0x02F0(0x0018)()
	class FText                                   CallFunc_ProtectedGetWinLoseShot_LoseShotName;     // 0x0308(0x0018)()
	int32                                         CallFunc_SetActiveFromShotName_ReturnValue;        // 0x0320(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0324(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_87CB[0x3];                                     // 0x0325(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue;            // 0x0328(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_Select_Default_1;                           // 0x0330(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_6;            // 0x0348(0x0040)(HasGetValueTypeHash)
	int32                                         CallFunc_SetActiveFromShotName_ReturnValue_1;      // 0x0388(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_87CC[0x4];                                     // 0x038C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0390(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x03A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_87CD[0x7];                                     // 0x03A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x03A8(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x03C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue_1;          // 0x03D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ScrubToMarkedFrame_ReturnValue;           // 0x03D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_87CE[0x3];                                     // 0x03D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFrameNumber                           CallFunc_BreakQualifiedFrameTime_Frame;            // 0x03DC(0x0004)(NoDestructor, HasGetValueTypeHash)
	struct FFrameRate                             CallFunc_BreakQualifiedFrameTime_FrameRate;        // 0x03E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakQualifiedFrameTime_SubFrame;         // 0x03E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_87CF[0x4];                                     // 0x03EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue_2;          // 0x03F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_7;            // 0x03F8(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0438(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0448(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x0460(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue_3;          // 0x0470(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0478(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_87D0[0x3];                                     // 0x0479(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x047C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_87D1[0x4];                                     // 0x048C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue_4;          // 0x0490(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_PsychicBattle_C_EventEndBattleSequence) == 0x000008, "Wrong alignment on BPC_PsychicBattle_C_EventEndBattleSequence");
static_assert(sizeof(BPC_PsychicBattle_C_EventEndBattleSequence) == 0x000498, "Wrong size on BPC_PsychicBattle_C_EventEndBattleSequence");
static_assert(offsetof(BPC_PsychicBattle_C_EventEndBattleSequence, IsWin) == 0x000000, "Member 'BPC_PsychicBattle_C_EventEndBattleSequence::IsWin' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_EventEndBattleSequence, LoseShotName) == 0x000008, "Member 'BPC_PsychicBattle_C_EventEndBattleSequence::LoseShotName' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_EventEndBattleSequence, WinShotName) == 0x000020, "Member 'BPC_PsychicBattle_C_EventEndBattleSequence::WinShotName' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_EventEndBattleSequence, Temp_bool_Variable) == 0x000038, "Member 'BPC_PsychicBattle_C_EventEndBattleSequence::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_EventEndBattleSequence, Temp_bool_Variable_1) == 0x000039, "Member 'BPC_PsychicBattle_C_EventEndBattleSequence::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_EventEndBattleSequence, K2Node_DynamicCast_AsBPI_Player_Interface) == 0x000040, "Member 'BPC_PsychicBattle_C_EventEndBattleSequence::K2Node_DynamicCast_AsBPI_Player_Interface' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_EventEndBattleSequence, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'BPC_PsychicBattle_C_EventEndBattleSequence::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_EventEndBattleSequence, CallFunc_IsValid_ReturnValue) == 0x000051, "Member 'BPC_PsychicBattle_C_EventEndBattleSequence::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_EventEndBattleSequence, CallFunc_PlayerCameraReset_Dummy) == 0x000052, "Member 'BPC_PsychicBattle_C_EventEndBattleSequence::CallFunc_PlayerCameraReset_Dummy' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_EventEndBattleSequence, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000058, "Member 'BPC_PsychicBattle_C_EventEndBattleSequence::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_EventEndBattleSequence, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1) == 0x000068, "Member 'BPC_PsychicBattle_C_EventEndBattleSequence::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_EventEndBattleSequence, CallFunc_Conv_StringToText_ReturnValue) == 0x000078, "Member 'BPC_PsychicBattle_C_EventEndBattleSequence::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_EventEndBattleSequence, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000090, "Member 'BPC_PsychicBattle_C_EventEndBattleSequence::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_EventEndBattleSequence, K2Node_MakeStruct_FormatArgumentData) == 0x0000A8, "Member 'BPC_PsychicBattle_C_EventEndBattleSequence::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_EventEndBattleSequence, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000E8, "Member 'BPC_PsychicBattle_C_EventEndBattleSequence::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_EventEndBattleSequence, CallFunc_GetSequence_ReturnValue) == 0x000128, "Member 'BPC_PsychicBattle_C_EventEndBattleSequence::CallFunc_GetSequence_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_EventEndBattleSequence, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_2) == 0x000130, "Member 'BPC_PsychicBattle_C_EventEndBattleSequence::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_EventEndBattleSequence, CallFunc_GetObjectName_ReturnValue) == 0x000140, "Member 'BPC_PsychicBattle_C_EventEndBattleSequence::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_EventEndBattleSequence, CallFunc_Conv_StringToText_ReturnValue_2) == 0x000150, "Member 'BPC_PsychicBattle_C_EventEndBattleSequence::CallFunc_Conv_StringToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_EventEndBattleSequence, CallFunc_Conv_StringToText_ReturnValue_3) == 0x000168, "Member 'BPC_PsychicBattle_C_EventEndBattleSequence::CallFunc_Conv_StringToText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_EventEndBattleSequence, K2Node_MakeStruct_FormatArgumentData_2) == 0x000180, "Member 'BPC_PsychicBattle_C_EventEndBattleSequence::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_EventEndBattleSequence, K2Node_MakeStruct_FormatArgumentData_3) == 0x0001C0, "Member 'BPC_PsychicBattle_C_EventEndBattleSequence::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_EventEndBattleSequence, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_3) == 0x000200, "Member 'BPC_PsychicBattle_C_EventEndBattleSequence::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_EventEndBattleSequence, CallFunc_GetSequence_ReturnValue_1) == 0x000210, "Member 'BPC_PsychicBattle_C_EventEndBattleSequence::CallFunc_GetSequence_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_EventEndBattleSequence, CallFunc_Conv_StringToText_ReturnValue_4) == 0x000218, "Member 'BPC_PsychicBattle_C_EventEndBattleSequence::CallFunc_Conv_StringToText_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_EventEndBattleSequence, CallFunc_GetObjectName_ReturnValue_1) == 0x000230, "Member 'BPC_PsychicBattle_C_EventEndBattleSequence::CallFunc_GetObjectName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_EventEndBattleSequence, K2Node_MakeStruct_FormatArgumentData_4) == 0x000240, "Member 'BPC_PsychicBattle_C_EventEndBattleSequence::K2Node_MakeStruct_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_EventEndBattleSequence, CallFunc_Conv_StringToText_ReturnValue_5) == 0x000280, "Member 'BPC_PsychicBattle_C_EventEndBattleSequence::CallFunc_Conv_StringToText_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_EventEndBattleSequence, K2Node_MakeStruct_FormatArgumentData_5) == 0x000298, "Member 'BPC_PsychicBattle_C_EventEndBattleSequence::K2Node_MakeStruct_FormatArgumentData_5' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_EventEndBattleSequence, K2Node_Select_Default) == 0x0002D8, "Member 'BPC_PsychicBattle_C_EventEndBattleSequence::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_EventEndBattleSequence, CallFunc_ProtectedGetWinLoseShot_WinShotName) == 0x0002F0, "Member 'BPC_PsychicBattle_C_EventEndBattleSequence::CallFunc_ProtectedGetWinLoseShot_WinShotName' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_EventEndBattleSequence, CallFunc_ProtectedGetWinLoseShot_LoseShotName) == 0x000308, "Member 'BPC_PsychicBattle_C_EventEndBattleSequence::CallFunc_ProtectedGetWinLoseShot_LoseShotName' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_EventEndBattleSequence, CallFunc_SetActiveFromShotName_ReturnValue) == 0x000320, "Member 'BPC_PsychicBattle_C_EventEndBattleSequence::CallFunc_SetActiveFromShotName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_EventEndBattleSequence, CallFunc_Greater_IntInt_ReturnValue) == 0x000324, "Member 'BPC_PsychicBattle_C_EventEndBattleSequence::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_EventEndBattleSequence, CallFunc_GetSequencePlayer_ReturnValue) == 0x000328, "Member 'BPC_PsychicBattle_C_EventEndBattleSequence::CallFunc_GetSequencePlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_EventEndBattleSequence, K2Node_Select_Default_1) == 0x000330, "Member 'BPC_PsychicBattle_C_EventEndBattleSequence::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_EventEndBattleSequence, K2Node_MakeStruct_FormatArgumentData_6) == 0x000348, "Member 'BPC_PsychicBattle_C_EventEndBattleSequence::K2Node_MakeStruct_FormatArgumentData_6' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_EventEndBattleSequence, CallFunc_SetActiveFromShotName_ReturnValue_1) == 0x000388, "Member 'BPC_PsychicBattle_C_EventEndBattleSequence::CallFunc_SetActiveFromShotName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_EventEndBattleSequence, K2Node_MakeArray_Array) == 0x000390, "Member 'BPC_PsychicBattle_C_EventEndBattleSequence::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_EventEndBattleSequence, CallFunc_Greater_IntInt_ReturnValue_1) == 0x0003A0, "Member 'BPC_PsychicBattle_C_EventEndBattleSequence::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_EventEndBattleSequence, CallFunc_Format_ReturnValue) == 0x0003A8, "Member 'BPC_PsychicBattle_C_EventEndBattleSequence::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_EventEndBattleSequence, CallFunc_Conv_TextToString_ReturnValue) == 0x0003C0, "Member 'BPC_PsychicBattle_C_EventEndBattleSequence::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_EventEndBattleSequence, CallFunc_GetSequencePlayer_ReturnValue_1) == 0x0003D0, "Member 'BPC_PsychicBattle_C_EventEndBattleSequence::CallFunc_GetSequencePlayer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_EventEndBattleSequence, CallFunc_ScrubToMarkedFrame_ReturnValue) == 0x0003D8, "Member 'BPC_PsychicBattle_C_EventEndBattleSequence::CallFunc_ScrubToMarkedFrame_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_EventEndBattleSequence, CallFunc_BreakQualifiedFrameTime_Frame) == 0x0003DC, "Member 'BPC_PsychicBattle_C_EventEndBattleSequence::CallFunc_BreakQualifiedFrameTime_Frame' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_EventEndBattleSequence, CallFunc_BreakQualifiedFrameTime_FrameRate) == 0x0003E0, "Member 'BPC_PsychicBattle_C_EventEndBattleSequence::CallFunc_BreakQualifiedFrameTime_FrameRate' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_EventEndBattleSequence, CallFunc_BreakQualifiedFrameTime_SubFrame) == 0x0003E8, "Member 'BPC_PsychicBattle_C_EventEndBattleSequence::CallFunc_BreakQualifiedFrameTime_SubFrame' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_EventEndBattleSequence, CallFunc_GetSequencePlayer_ReturnValue_2) == 0x0003F0, "Member 'BPC_PsychicBattle_C_EventEndBattleSequence::CallFunc_GetSequencePlayer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_EventEndBattleSequence, K2Node_MakeStruct_FormatArgumentData_7) == 0x0003F8, "Member 'BPC_PsychicBattle_C_EventEndBattleSequence::K2Node_MakeStruct_FormatArgumentData_7' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_EventEndBattleSequence, K2Node_MakeArray_Array_1) == 0x000438, "Member 'BPC_PsychicBattle_C_EventEndBattleSequence::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_EventEndBattleSequence, CallFunc_Format_ReturnValue_1) == 0x000448, "Member 'BPC_PsychicBattle_C_EventEndBattleSequence::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_EventEndBattleSequence, CallFunc_Conv_TextToString_ReturnValue_1) == 0x000460, "Member 'BPC_PsychicBattle_C_EventEndBattleSequence::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_EventEndBattleSequence, CallFunc_GetSequencePlayer_ReturnValue_3) == 0x000470, "Member 'BPC_PsychicBattle_C_EventEndBattleSequence::CallFunc_GetSequencePlayer_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_EventEndBattleSequence, CallFunc_IsValid_ReturnValue_1) == 0x000478, "Member 'BPC_PsychicBattle_C_EventEndBattleSequence::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_EventEndBattleSequence, K2Node_CreateDelegate_OutputDelegate) == 0x00047C, "Member 'BPC_PsychicBattle_C_EventEndBattleSequence::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_EventEndBattleSequence, CallFunc_GetSequencePlayer_ReturnValue_4) == 0x000490, "Member 'BPC_PsychicBattle_C_EventEndBattleSequence::CallFunc_GetSequencePlayer_ReturnValue_4' has a wrong offset!");

// Function BPC_PsychicBattle.BPC_PsychicBattle_C.SetBattleRate
// 0x0008 (0x0008 - 0x0000)
struct BPC_PsychicBattle_C_SetBattleRate final
{
public:
	float                                         Rate;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPC_PsychicBattle_C_SetBattleRate) == 0x000004, "Wrong alignment on BPC_PsychicBattle_C_SetBattleRate");
static_assert(sizeof(BPC_PsychicBattle_C_SetBattleRate) == 0x000008, "Wrong size on BPC_PsychicBattle_C_SetBattleRate");
static_assert(offsetof(BPC_PsychicBattle_C_SetBattleRate, Rate) == 0x000000, "Member 'BPC_PsychicBattle_C_SetBattleRate::Rate' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_SetBattleRate, CallFunc_Less_FloatFloat_ReturnValue) == 0x000004, "Member 'BPC_PsychicBattle_C_SetBattleRate::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_SetBattleRate, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000005, "Member 'BPC_PsychicBattle_C_SetBattleRate::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_SetBattleRate, K2Node_SwitchEnum_CmpSuccess) == 0x000006, "Member 'BPC_PsychicBattle_C_SetBattleRate::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BPC_PsychicBattle.BPC_PsychicBattle_C.EventStartInputPlayer
// 0x0028 (0x0028 - 0x0000)
struct BPC_PsychicBattle_C_EventStartInputPlayer final
{
public:
	class UBP_EventParamComponent_C*              EventParam;                                        // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_87D2[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerInterface_C> K2Node_DynamicCast_AsBPI_Player_Interface;         // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_PlayerCameraReset_Dummy;                  // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPC_PsychicBattle_C_EventStartInputPlayer) == 0x000008, "Wrong alignment on BPC_PsychicBattle_C_EventStartInputPlayer");
static_assert(sizeof(BPC_PsychicBattle_C_EventStartInputPlayer) == 0x000028, "Wrong size on BPC_PsychicBattle_C_EventStartInputPlayer");
static_assert(offsetof(BPC_PsychicBattle_C_EventStartInputPlayer, EventParam) == 0x000000, "Member 'BPC_PsychicBattle_C_EventStartInputPlayer::EventParam' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_EventStartInputPlayer, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BPC_PsychicBattle_C_EventStartInputPlayer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_EventStartInputPlayer, K2Node_DynamicCast_AsBPI_Player_Interface) == 0x000010, "Member 'BPC_PsychicBattle_C_EventStartInputPlayer::K2Node_DynamicCast_AsBPI_Player_Interface' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_EventStartInputPlayer, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BPC_PsychicBattle_C_EventStartInputPlayer::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_EventStartInputPlayer, CallFunc_PlayerCameraReset_Dummy) == 0x000021, "Member 'BPC_PsychicBattle_C_EventStartInputPlayer::CallFunc_PlayerCameraReset_Dummy' has a wrong offset!");

// Function BPC_PsychicBattle.BPC_PsychicBattle_C.ProtectedEventStartInput
// 0x0030 (0x0030 - 0x0000)
struct BPC_PsychicBattle_C_ProtectedEventStartInput final
{
public:
	class ARSCharacterBase*                       Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_EventParamComponent_C*              EventParam;                                        // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_87D3[0x6];                                     // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IEventInterface>       K2Node_DynamicCast_AsEvent_Interface;              // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BattleSequencerEnd_ReturnValue;           // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPC_PsychicBattle_C_ProtectedEventStartInput) == 0x000008, "Wrong alignment on BPC_PsychicBattle_C_ProtectedEventStartInput");
static_assert(sizeof(BPC_PsychicBattle_C_ProtectedEventStartInput) == 0x000030, "Wrong size on BPC_PsychicBattle_C_ProtectedEventStartInput");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedEventStartInput, Character) == 0x000000, "Member 'BPC_PsychicBattle_C_ProtectedEventStartInput::Character' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedEventStartInput, EventParam) == 0x000008, "Member 'BPC_PsychicBattle_C_ProtectedEventStartInput::EventParam' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedEventStartInput, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BPC_PsychicBattle_C_ProtectedEventStartInput::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedEventStartInput, CallFunc_IsValid_ReturnValue_1) == 0x000011, "Member 'BPC_PsychicBattle_C_ProtectedEventStartInput::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedEventStartInput, K2Node_DynamicCast_AsEvent_Interface) == 0x000018, "Member 'BPC_PsychicBattle_C_ProtectedEventStartInput::K2Node_DynamicCast_AsEvent_Interface' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedEventStartInput, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BPC_PsychicBattle_C_ProtectedEventStartInput::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedEventStartInput, CallFunc_BattleSequencerEnd_ReturnValue) == 0x000029, "Member 'BPC_PsychicBattle_C_ProtectedEventStartInput::CallFunc_BattleSequencerEnd_ReturnValue' has a wrong offset!");

// Function BPC_PsychicBattle.BPC_PsychicBattle_C.ProtectedStartBinding
// 0x0230 (0x0230 - 0x0000)
struct BPC_PsychicBattle_C_ProtectedStartBinding final
{
public:
	class ARSCharacterBase*                       Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSCharacterBase*                       Enemy;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BindingPlayer;                                     // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          BindingEnemy;                                      // 0x0011(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          RetBindEnemy;                                      // 0x0012(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          RedBindPlayer;                                     // 0x0013(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_87D4[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0018(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0028(0x0018)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetSequenceObjectBindingID_IsFind;        // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_87D5[0x2];                                     // 0x0042(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMovieSceneObjectBindingID             CallFunc_GetSequenceObjectBindingID_ReturnValue;   // 0x0044(0x0018)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_87D6[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FMovieSceneObjectBindingID>     K2Node_MakeArray_Array_1;                          // 0x0060(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0080(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0098(0x0040)(HasGetValueTypeHash)
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_1;            // 0x00D8(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00F0(0x0040)(HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_ByteToString_ReturnValue;            // 0x0130(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSequenceObjectBindingID_IsFind_1;      // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_87D7[0x3];                                     // 0x0141(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMovieSceneObjectBindingID             CallFunc_GetSequenceObjectBindingID_ReturnValue_1; // 0x0144(0x0018)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_87D8[0x4];                                     // 0x015C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0160(0x0018)()
	TArray<struct FMovieSceneObjectBindingID>     K2Node_MakeArray_Array_2;                          // 0x0178(0x0010)(ReferenceParm, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0188(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_3;                          // 0x01C8(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x01D8(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x01F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BindingEventPlayer_IsBinding;             // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BindingEventPlayer_IsBindingPlayer;       // 0x0201(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BindingEventPlayer_IsBindingSASCode;      // 0x0202(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BindingEventPlayer_IsBindingBrainCode;    // 0x0203(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_87D9[0x4];                                     // 0x0204(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<bool>                                  CallFunc_BindingEventPlayer_IsBindingWeapon;       // 0x0208(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_BindingEventPlayer_IsBinding_1;           // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BindingEventPlayer_IsBindingPlayer_1;     // 0x0219(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BindingEventPlayer_IsBindingSASCode_1;    // 0x021A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BindingEventPlayer_IsBindingBrainCode_1;  // 0x021B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_87DA[0x4];                                     // 0x021C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<bool>                                  CallFunc_BindingEventPlayer_IsBindingWeapon_1;     // 0x0220(0x0010)(ReferenceParm, HasGetValueTypeHash)
};
static_assert(alignof(BPC_PsychicBattle_C_ProtectedStartBinding) == 0x000008, "Wrong alignment on BPC_PsychicBattle_C_ProtectedStartBinding");
static_assert(sizeof(BPC_PsychicBattle_C_ProtectedStartBinding) == 0x000230, "Wrong size on BPC_PsychicBattle_C_ProtectedStartBinding");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedStartBinding, Player) == 0x000000, "Member 'BPC_PsychicBattle_C_ProtectedStartBinding::Player' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedStartBinding, Enemy) == 0x000008, "Member 'BPC_PsychicBattle_C_ProtectedStartBinding::Enemy' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedStartBinding, BindingPlayer) == 0x000010, "Member 'BPC_PsychicBattle_C_ProtectedStartBinding::BindingPlayer' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedStartBinding, BindingEnemy) == 0x000011, "Member 'BPC_PsychicBattle_C_ProtectedStartBinding::BindingEnemy' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedStartBinding, RetBindEnemy) == 0x000012, "Member 'BPC_PsychicBattle_C_ProtectedStartBinding::RetBindEnemy' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedStartBinding, RedBindPlayer) == 0x000013, "Member 'BPC_PsychicBattle_C_ProtectedStartBinding::RedBindPlayer' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedStartBinding, K2Node_MakeArray_Array) == 0x000018, "Member 'BPC_PsychicBattle_C_ProtectedStartBinding::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedStartBinding, CallFunc_MakeLiteralText_ReturnValue) == 0x000028, "Member 'BPC_PsychicBattle_C_ProtectedStartBinding::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedStartBinding, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'BPC_PsychicBattle_C_ProtectedStartBinding::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedStartBinding, CallFunc_GetSequenceObjectBindingID_IsFind) == 0x000041, "Member 'BPC_PsychicBattle_C_ProtectedStartBinding::CallFunc_GetSequenceObjectBindingID_IsFind' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedStartBinding, CallFunc_GetSequenceObjectBindingID_ReturnValue) == 0x000044, "Member 'BPC_PsychicBattle_C_ProtectedStartBinding::CallFunc_GetSequenceObjectBindingID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedStartBinding, K2Node_MakeArray_Array_1) == 0x000060, "Member 'BPC_PsychicBattle_C_ProtectedStartBinding::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedStartBinding, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000070, "Member 'BPC_PsychicBattle_C_ProtectedStartBinding::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedStartBinding, CallFunc_Conv_StringToText_ReturnValue) == 0x000080, "Member 'BPC_PsychicBattle_C_ProtectedStartBinding::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedStartBinding, K2Node_MakeStruct_FormatArgumentData) == 0x000098, "Member 'BPC_PsychicBattle_C_ProtectedStartBinding::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedStartBinding, CallFunc_MakeLiteralText_ReturnValue_1) == 0x0000D8, "Member 'BPC_PsychicBattle_C_ProtectedStartBinding::CallFunc_MakeLiteralText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedStartBinding, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000F0, "Member 'BPC_PsychicBattle_C_ProtectedStartBinding::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedStartBinding, CallFunc_Conv_ByteToString_ReturnValue) == 0x000130, "Member 'BPC_PsychicBattle_C_ProtectedStartBinding::CallFunc_Conv_ByteToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedStartBinding, CallFunc_GetSequenceObjectBindingID_IsFind_1) == 0x000140, "Member 'BPC_PsychicBattle_C_ProtectedStartBinding::CallFunc_GetSequenceObjectBindingID_IsFind_1' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedStartBinding, CallFunc_GetSequenceObjectBindingID_ReturnValue_1) == 0x000144, "Member 'BPC_PsychicBattle_C_ProtectedStartBinding::CallFunc_GetSequenceObjectBindingID_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedStartBinding, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000160, "Member 'BPC_PsychicBattle_C_ProtectedStartBinding::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedStartBinding, K2Node_MakeArray_Array_2) == 0x000178, "Member 'BPC_PsychicBattle_C_ProtectedStartBinding::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedStartBinding, K2Node_MakeStruct_FormatArgumentData_2) == 0x000188, "Member 'BPC_PsychicBattle_C_ProtectedStartBinding::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedStartBinding, K2Node_MakeArray_Array_3) == 0x0001C8, "Member 'BPC_PsychicBattle_C_ProtectedStartBinding::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedStartBinding, CallFunc_Format_ReturnValue) == 0x0001D8, "Member 'BPC_PsychicBattle_C_ProtectedStartBinding::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedStartBinding, CallFunc_Conv_TextToString_ReturnValue) == 0x0001F0, "Member 'BPC_PsychicBattle_C_ProtectedStartBinding::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedStartBinding, CallFunc_BindingEventPlayer_IsBinding) == 0x000200, "Member 'BPC_PsychicBattle_C_ProtectedStartBinding::CallFunc_BindingEventPlayer_IsBinding' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedStartBinding, CallFunc_BindingEventPlayer_IsBindingPlayer) == 0x000201, "Member 'BPC_PsychicBattle_C_ProtectedStartBinding::CallFunc_BindingEventPlayer_IsBindingPlayer' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedStartBinding, CallFunc_BindingEventPlayer_IsBindingSASCode) == 0x000202, "Member 'BPC_PsychicBattle_C_ProtectedStartBinding::CallFunc_BindingEventPlayer_IsBindingSASCode' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedStartBinding, CallFunc_BindingEventPlayer_IsBindingBrainCode) == 0x000203, "Member 'BPC_PsychicBattle_C_ProtectedStartBinding::CallFunc_BindingEventPlayer_IsBindingBrainCode' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedStartBinding, CallFunc_BindingEventPlayer_IsBindingWeapon) == 0x000208, "Member 'BPC_PsychicBattle_C_ProtectedStartBinding::CallFunc_BindingEventPlayer_IsBindingWeapon' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedStartBinding, CallFunc_BindingEventPlayer_IsBinding_1) == 0x000218, "Member 'BPC_PsychicBattle_C_ProtectedStartBinding::CallFunc_BindingEventPlayer_IsBinding_1' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedStartBinding, CallFunc_BindingEventPlayer_IsBindingPlayer_1) == 0x000219, "Member 'BPC_PsychicBattle_C_ProtectedStartBinding::CallFunc_BindingEventPlayer_IsBindingPlayer_1' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedStartBinding, CallFunc_BindingEventPlayer_IsBindingSASCode_1) == 0x00021A, "Member 'BPC_PsychicBattle_C_ProtectedStartBinding::CallFunc_BindingEventPlayer_IsBindingSASCode_1' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedStartBinding, CallFunc_BindingEventPlayer_IsBindingBrainCode_1) == 0x00021B, "Member 'BPC_PsychicBattle_C_ProtectedStartBinding::CallFunc_BindingEventPlayer_IsBindingBrainCode_1' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedStartBinding, CallFunc_BindingEventPlayer_IsBindingWeapon_1) == 0x000220, "Member 'BPC_PsychicBattle_C_ProtectedStartBinding::CallFunc_BindingEventPlayer_IsBindingWeapon_1' has a wrong offset!");

// Function BPC_PsychicBattle.BPC_PsychicBattle_C.ProtectedOnWaitResult
// 0x0008 (0x0008 - 0x0000)
struct BPC_PsychicBattle_C_ProtectedOnWaitResult final
{
public:
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue;            // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_PsychicBattle_C_ProtectedOnWaitResult) == 0x000008, "Wrong alignment on BPC_PsychicBattle_C_ProtectedOnWaitResult");
static_assert(sizeof(BPC_PsychicBattle_C_ProtectedOnWaitResult) == 0x000008, "Wrong size on BPC_PsychicBattle_C_ProtectedOnWaitResult");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedOnWaitResult, CallFunc_GetSequencePlayer_ReturnValue) == 0x000000, "Member 'BPC_PsychicBattle_C_ProtectedOnWaitResult::CallFunc_GetSequencePlayer_ReturnValue' has a wrong offset!");

// Function BPC_PsychicBattle.BPC_PsychicBattle_C.ProtectedGetWinLoseShot
// 0x0158 (0x0158 - 0x0000)
struct BPC_PsychicBattle_C_ProtectedGetWinLoseShot final
{
public:
	EPsychicBattleType                            PsychicBattleType;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerID                                     UserPlayerID;                                      // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_87DB[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   WinShotName;                                       // 0x0008(0x0018)(Parm, OutParm)
	class FText                                   LoseShotName;                                      // 0x0020(0x0018)(Parm, OutParm)
	bool                                          Temp_bool_Variable;                                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_87DC[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPsychicBattleParameter                CallFunc_GetParameter_Parameter;                   // 0x0040(0x0098)()
	bool                                          CallFunc_ProtectedIsPlayerCh0100_Ch0100;           // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_87DD[0x7];                                     // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPsychicBattleSequenceData             K2Node_Select_Default;                             // 0x00E0(0x0048)(ConstParm)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0128(0x0018)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0140(0x0018)()
};
static_assert(alignof(BPC_PsychicBattle_C_ProtectedGetWinLoseShot) == 0x000008, "Wrong alignment on BPC_PsychicBattle_C_ProtectedGetWinLoseShot");
static_assert(sizeof(BPC_PsychicBattle_C_ProtectedGetWinLoseShot) == 0x000158, "Wrong size on BPC_PsychicBattle_C_ProtectedGetWinLoseShot");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedGetWinLoseShot, PsychicBattleType) == 0x000000, "Member 'BPC_PsychicBattle_C_ProtectedGetWinLoseShot::PsychicBattleType' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedGetWinLoseShot, UserPlayerID) == 0x000001, "Member 'BPC_PsychicBattle_C_ProtectedGetWinLoseShot::UserPlayerID' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedGetWinLoseShot, WinShotName) == 0x000008, "Member 'BPC_PsychicBattle_C_ProtectedGetWinLoseShot::WinShotName' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedGetWinLoseShot, LoseShotName) == 0x000020, "Member 'BPC_PsychicBattle_C_ProtectedGetWinLoseShot::LoseShotName' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedGetWinLoseShot, Temp_bool_Variable) == 0x000038, "Member 'BPC_PsychicBattle_C_ProtectedGetWinLoseShot::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedGetWinLoseShot, CallFunc_GetParameter_Parameter) == 0x000040, "Member 'BPC_PsychicBattle_C_ProtectedGetWinLoseShot::CallFunc_GetParameter_Parameter' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedGetWinLoseShot, CallFunc_ProtectedIsPlayerCh0100_Ch0100) == 0x0000D8, "Member 'BPC_PsychicBattle_C_ProtectedGetWinLoseShot::CallFunc_ProtectedIsPlayerCh0100_Ch0100' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedGetWinLoseShot, K2Node_Select_Default) == 0x0000E0, "Member 'BPC_PsychicBattle_C_ProtectedGetWinLoseShot::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedGetWinLoseShot, CallFunc_Conv_StringToText_ReturnValue) == 0x000128, "Member 'BPC_PsychicBattle_C_ProtectedGetWinLoseShot::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedGetWinLoseShot, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000140, "Member 'BPC_PsychicBattle_C_ProtectedGetWinLoseShot::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");

// Function BPC_PsychicBattle.BPC_PsychicBattle_C.UpdateSequence
// 0x0040 (0x0040 - 0x0000)
struct BPC_PsychicBattle_C_UpdateSequence final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_87DE[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_EventParamComponent_C*              EventParam;                                        // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Montage;                                           // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_87DF[0x2];                                     // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerInterface_C> K2Node_DynamicCast_AsBPI_Player_Interface;         // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_PlayerCameraReset_Dummy;                  // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_87E0[0x2];                                     // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPC_PsychicBattle_C_UpdateSequence) == 0x000008, "Wrong alignment on BPC_PsychicBattle_C_UpdateSequence");
static_assert(sizeof(BPC_PsychicBattle_C_UpdateSequence) == 0x000040, "Wrong size on BPC_PsychicBattle_C_UpdateSequence");
static_assert(offsetof(BPC_PsychicBattle_C_UpdateSequence, DeltaSeconds) == 0x000000, "Member 'BPC_PsychicBattle_C_UpdateSequence::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_UpdateSequence, EventParam) == 0x000008, "Member 'BPC_PsychicBattle_C_UpdateSequence::EventParam' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_UpdateSequence, Montage) == 0x000010, "Member 'BPC_PsychicBattle_C_UpdateSequence::Montage' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_UpdateSequence, Temp_int_Variable) == 0x000018, "Member 'BPC_PsychicBattle_C_UpdateSequence::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_UpdateSequence, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00001C, "Member 'BPC_PsychicBattle_C_UpdateSequence::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_UpdateSequence, CallFunc_IsValid_ReturnValue) == 0x00001D, "Member 'BPC_PsychicBattle_C_UpdateSequence::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_UpdateSequence, K2Node_DynamicCast_AsBPI_Player_Interface) == 0x000020, "Member 'BPC_PsychicBattle_C_UpdateSequence::K2Node_DynamicCast_AsBPI_Player_Interface' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_UpdateSequence, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BPC_PsychicBattle_C_UpdateSequence::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_UpdateSequence, CallFunc_PlayerCameraReset_Dummy) == 0x000031, "Member 'BPC_PsychicBattle_C_UpdateSequence::CallFunc_PlayerCameraReset_Dummy' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_UpdateSequence, CallFunc_Subtract_IntInt_ReturnValue) == 0x000034, "Member 'BPC_PsychicBattle_C_UpdateSequence::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_UpdateSequence, CallFunc_Greater_IntInt_ReturnValue) == 0x000038, "Member 'BPC_PsychicBattle_C_UpdateSequence::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BPC_PsychicBattle.BPC_PsychicBattle_C.ProtectedOnSkipStart
// 0x0020 (0x0020 - 0x0000)
struct BPC_PsychicBattle_C_ProtectedOnSkipStart final
{
public:
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue;            // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue_1;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue_2;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ScrubToMarkedFrame_ReturnValue;           // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPC_PsychicBattle_C_ProtectedOnSkipStart) == 0x000008, "Wrong alignment on BPC_PsychicBattle_C_ProtectedOnSkipStart");
static_assert(sizeof(BPC_PsychicBattle_C_ProtectedOnSkipStart) == 0x000020, "Wrong size on BPC_PsychicBattle_C_ProtectedOnSkipStart");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedOnSkipStart, CallFunc_GetSequencePlayer_ReturnValue) == 0x000000, "Member 'BPC_PsychicBattle_C_ProtectedOnSkipStart::CallFunc_GetSequencePlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedOnSkipStart, CallFunc_GetSequencePlayer_ReturnValue_1) == 0x000008, "Member 'BPC_PsychicBattle_C_ProtectedOnSkipStart::CallFunc_GetSequencePlayer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedOnSkipStart, CallFunc_GetSequencePlayer_ReturnValue_2) == 0x000010, "Member 'BPC_PsychicBattle_C_ProtectedOnSkipStart::CallFunc_GetSequencePlayer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedOnSkipStart, CallFunc_ScrubToMarkedFrame_ReturnValue) == 0x000018, "Member 'BPC_PsychicBattle_C_ProtectedOnSkipStart::CallFunc_ScrubToMarkedFrame_ReturnValue' has a wrong offset!");

// Function BPC_PsychicBattle.BPC_PsychicBattle_C.ProtectedDamageInternal
// 0x0140 (0x0140 - 0x0000)
struct BPC_PsychicBattle_C_ProtectedDamageInternal final
{
public:
	class ARSCharacterBase*                       DamageActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSCharacterBase*                       AttackActor;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_CharacterParamater_C> K2Node_DynamicCast_AsBPI_Character_Paramater;      // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDead_bDead;                             // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_87E1[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattlePlayer_C*                      K2Node_DynamicCast_AsRSBattle_Player;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_87E2[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IPlayerInterface>      CallFunc_SetEventEndDown_self_CastInput;           // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetEventEndDown_ReturnValue;              // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_87E3[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_87E4[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattleCharacter_C*                   K2Node_DynamicCast_AsRSBattle_Character;           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_87E5[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0080(0x0018)()
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_87E6[0x4];                                     // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x00A0(0x0040)(HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_87E7[0x4];                                     // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00E8(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_87E8[0x4];                                     // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0100(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0118(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0128(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPC_PsychicBattle_C_ProtectedDamageInternal) == 0x000008, "Wrong alignment on BPC_PsychicBattle_C_ProtectedDamageInternal");
static_assert(sizeof(BPC_PsychicBattle_C_ProtectedDamageInternal) == 0x000140, "Wrong size on BPC_PsychicBattle_C_ProtectedDamageInternal");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedDamageInternal, DamageActor) == 0x000000, "Member 'BPC_PsychicBattle_C_ProtectedDamageInternal::DamageActor' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedDamageInternal, AttackActor) == 0x000008, "Member 'BPC_PsychicBattle_C_ProtectedDamageInternal::AttackActor' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedDamageInternal, K2Node_DynamicCast_AsBPI_Character_Paramater) == 0x000010, "Member 'BPC_PsychicBattle_C_ProtectedDamageInternal::K2Node_DynamicCast_AsBPI_Character_Paramater' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedDamageInternal, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BPC_PsychicBattle_C_ProtectedDamageInternal::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedDamageInternal, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000021, "Member 'BPC_PsychicBattle_C_ProtectedDamageInternal::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedDamageInternal, CallFunc_IsDead_bDead) == 0x000022, "Member 'BPC_PsychicBattle_C_ProtectedDamageInternal::CallFunc_IsDead_bDead' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedDamageInternal, CallFunc_IsValid_ReturnValue) == 0x000023, "Member 'BPC_PsychicBattle_C_ProtectedDamageInternal::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedDamageInternal, K2Node_DynamicCast_AsRSBattle_Player) == 0x000028, "Member 'BPC_PsychicBattle_C_ProtectedDamageInternal::K2Node_DynamicCast_AsRSBattle_Player' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedDamageInternal, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'BPC_PsychicBattle_C_ProtectedDamageInternal::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedDamageInternal, CallFunc_SetEventEndDown_self_CastInput) == 0x000038, "Member 'BPC_PsychicBattle_C_ProtectedDamageInternal::CallFunc_SetEventEndDown_self_CastInput' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedDamageInternal, CallFunc_SetEventEndDown_ReturnValue) == 0x000048, "Member 'BPC_PsychicBattle_C_ProtectedDamageInternal::CallFunc_SetEventEndDown_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedDamageInternal, CallFunc_GetSocketLocation_ReturnValue) == 0x00004C, "Member 'BPC_PsychicBattle_C_ProtectedDamageInternal::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedDamageInternal, CallFunc_IsValid_ReturnValue_1) == 0x000058, "Member 'BPC_PsychicBattle_C_ProtectedDamageInternal::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedDamageInternal, CallFunc_SelectInt_ReturnValue) == 0x00005C, "Member 'BPC_PsychicBattle_C_ProtectedDamageInternal::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedDamageInternal, K2Node_DynamicCast_AsRSBattle_Character) == 0x000060, "Member 'BPC_PsychicBattle_C_ProtectedDamageInternal::K2Node_DynamicCast_AsRSBattle_Character' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedDamageInternal, K2Node_DynamicCast_bSuccess_2) == 0x000068, "Member 'BPC_PsychicBattle_C_ProtectedDamageInternal::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedDamageInternal, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000070, "Member 'BPC_PsychicBattle_C_ProtectedDamageInternal::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedDamageInternal, CallFunc_Conv_StringToText_ReturnValue) == 0x000080, "Member 'BPC_PsychicBattle_C_ProtectedDamageInternal::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedDamageInternal, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000098, "Member 'BPC_PsychicBattle_C_ProtectedDamageInternal::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedDamageInternal, K2Node_MakeStruct_FormatArgumentData) == 0x0000A0, "Member 'BPC_PsychicBattle_C_ProtectedDamageInternal::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedDamageInternal, CallFunc_Multiply_IntInt_ReturnValue) == 0x0000E0, "Member 'BPC_PsychicBattle_C_ProtectedDamageInternal::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedDamageInternal, K2Node_MakeArray_Array) == 0x0000E8, "Member 'BPC_PsychicBattle_C_ProtectedDamageInternal::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedDamageInternal, CallFunc_Add_IntInt_ReturnValue) == 0x0000F8, "Member 'BPC_PsychicBattle_C_ProtectedDamageInternal::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedDamageInternal, CallFunc_Format_ReturnValue) == 0x000100, "Member 'BPC_PsychicBattle_C_ProtectedDamageInternal::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedDamageInternal, CallFunc_Conv_TextToString_ReturnValue) == 0x000118, "Member 'BPC_PsychicBattle_C_ProtectedDamageInternal::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedDamageInternal, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000128, "Member 'BPC_PsychicBattle_C_ProtectedDamageInternal::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedDamageInternal, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000138, "Member 'BPC_PsychicBattle_C_ProtectedDamageInternal::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");

// Function BPC_PsychicBattle.BPC_PsychicBattle_C.UpdateSequenceCharacterTransform
// 0x0140 (0x0140 - 0x0000)
struct BPC_PsychicBattle_C_UpdateSequenceCharacterTransform final
{
public:
	class ARSCharacterBase*                       Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_87E9[0x8];                                     // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             FinishReferenceTransform;                          // 0x0010(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	class UBP_EventParamComponent_C*              EventParam;                                        // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Montage;                                           // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x0050(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0080(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_ComposeTransforms_ReturnValue;            // 0x00B0(0x0030)(IsPlainOldData, NoDestructor)
	class UBP_EventParamComponent_C*              CallFunc_GetComponentByClass_ReturnValue;          // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetBoneIndex_ReturnValue;                 // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_87EA[0x3];                                     // 0x00ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_87EB[0x7];                                     // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_GetCurrentActiveMontage_ReturnValue;      // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_87EC[0x6];                                     // 0x010A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetBoneTransformForAnimMontage_ReturnValue; // 0x0110(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPC_PsychicBattle_C_UpdateSequenceCharacterTransform) == 0x000010, "Wrong alignment on BPC_PsychicBattle_C_UpdateSequenceCharacterTransform");
static_assert(sizeof(BPC_PsychicBattle_C_UpdateSequenceCharacterTransform) == 0x000140, "Wrong size on BPC_PsychicBattle_C_UpdateSequenceCharacterTransform");
static_assert(offsetof(BPC_PsychicBattle_C_UpdateSequenceCharacterTransform, Character) == 0x000000, "Member 'BPC_PsychicBattle_C_UpdateSequenceCharacterTransform::Character' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_UpdateSequenceCharacterTransform, FinishReferenceTransform) == 0x000010, "Member 'BPC_PsychicBattle_C_UpdateSequenceCharacterTransform::FinishReferenceTransform' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_UpdateSequenceCharacterTransform, EventParam) == 0x000040, "Member 'BPC_PsychicBattle_C_UpdateSequenceCharacterTransform::EventParam' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_UpdateSequenceCharacterTransform, Montage) == 0x000048, "Member 'BPC_PsychicBattle_C_UpdateSequenceCharacterTransform::Montage' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_UpdateSequenceCharacterTransform, CallFunc_GetSocketTransform_ReturnValue) == 0x000050, "Member 'BPC_PsychicBattle_C_UpdateSequenceCharacterTransform::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_UpdateSequenceCharacterTransform, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000080, "Member 'BPC_PsychicBattle_C_UpdateSequenceCharacterTransform::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_UpdateSequenceCharacterTransform, CallFunc_ComposeTransforms_ReturnValue) == 0x0000B0, "Member 'BPC_PsychicBattle_C_UpdateSequenceCharacterTransform::CallFunc_ComposeTransforms_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_UpdateSequenceCharacterTransform, CallFunc_GetComponentByClass_ReturnValue) == 0x0000E0, "Member 'BPC_PsychicBattle_C_UpdateSequenceCharacterTransform::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_UpdateSequenceCharacterTransform, CallFunc_GetBoneIndex_ReturnValue) == 0x0000E8, "Member 'BPC_PsychicBattle_C_UpdateSequenceCharacterTransform::CallFunc_GetBoneIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_UpdateSequenceCharacterTransform, CallFunc_IsValid_ReturnValue) == 0x0000EC, "Member 'BPC_PsychicBattle_C_UpdateSequenceCharacterTransform::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_UpdateSequenceCharacterTransform, CallFunc_GetAnimInstance_ReturnValue) == 0x0000F0, "Member 'BPC_PsychicBattle_C_UpdateSequenceCharacterTransform::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_UpdateSequenceCharacterTransform, CallFunc_IsValid_ReturnValue_1) == 0x0000F8, "Member 'BPC_PsychicBattle_C_UpdateSequenceCharacterTransform::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_UpdateSequenceCharacterTransform, CallFunc_GetCurrentActiveMontage_ReturnValue) == 0x000100, "Member 'BPC_PsychicBattle_C_UpdateSequenceCharacterTransform::CallFunc_GetCurrentActiveMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_UpdateSequenceCharacterTransform, CallFunc_IsValid_ReturnValue_2) == 0x000108, "Member 'BPC_PsychicBattle_C_UpdateSequenceCharacterTransform::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_UpdateSequenceCharacterTransform, CallFunc_IsValid_ReturnValue_3) == 0x000109, "Member 'BPC_PsychicBattle_C_UpdateSequenceCharacterTransform::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_UpdateSequenceCharacterTransform, CallFunc_GetBoneTransformForAnimMontage_ReturnValue) == 0x000110, "Member 'BPC_PsychicBattle_C_UpdateSequenceCharacterTransform::CallFunc_GetBoneTransformForAnimMontage_ReturnValue' has a wrong offset!");

// Function BPC_PsychicBattle.BPC_PsychicBattle_C.PrivateStartSequencer
// 0x03D0 (0x03D0 - 0x0000)
struct BPC_PsychicBattle_C_PrivateStartSequencer final
{
public:
	EPsychicBattleType                            PsychicBattleType;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_87ED[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattleCharacter_C*                   User;                                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSCharacterBase*                       TmpActor;                                          // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PsychicObjectBasic_C*               PsyObj;                                            // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerID                                     UserPlayerID;                                      // 0x0020(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_87EE[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_EnemyManager_C*                     EnemyManager;                                      // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSCharacterBase*                       Enemy;                                             // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequence*                         LevelSequence;                                     // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ARSCharacterBase*>               EnemyList;                                         // 0x0040(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_87EF[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_87F0[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue;            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FQualifiedFrameTime                    CallFunc_GetEndTime_ReturnValue;                   // 0x0068(0x0010)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_87F1[0x4];                                     // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattlePlayer_C*                      K2Node_DynamicCast_AsRSBattle_Player;              // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsNoBattleWeaponDispOff_bOff;             // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_87F2[0x6];                                     // 0x008A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IEventInterface>       CallFunc_DynamicEventBeforeBindCharacter_self_CastInput; // 0x0090(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DynamicEventBeforeBindCharacter_ReturnValue; // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_87F3[0x3];                                     // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IEventInterface>       K2Node_DynamicCast_AsEvent_Interface;              // 0x00A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DynamicEventBeforeBindCharacter_ReturnValue_1; // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00BB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerID                                     Temp_byte_Variable;                                // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_87F4[0x5];                                     // 0x00C3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ARsBattleHero_C*                        K2Node_DynamicCast_AsRs_Battle_Hero;               // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_87F5[0xE];                                     // 0x00D2(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00E0(0x0030)(IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_PsychicBattleObject_C> K2Node_DynamicCast_AsBPI_Psychic_Battle_Object;    // 0x0110(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_87F6[0x3];                                     // 0x0121(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult;      // 0x0124(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue;         // 0x01AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_87F7[0x3];                                     // 0x01AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PsychicBattleObject_C> K2Node_DynamicCast_AsBPI_Psychic_Battle_Object_1;  // 0x01B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_87F8[0x7];                                     // 0x01C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PsychicBattleObject_C> K2Node_DynamicCast_AsBPI_Psychic_Battle_Object_2;  // 0x01C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x01D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x01DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_87F9[0x5];                                     // 0x01DB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue_1;          // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue_2;          // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ProtectedStartBinding_BindingPlayer;      // 0x01F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ProtectedStartBinding_BindingEnemy;       // 0x01F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_87FA[0x5];                                     // 0x01F3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IEventInterface>       CallFunc_BattleSequencerStart_self_CastInput;      // 0x01F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BattleSequencerStart_ReturnValue;         // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_87FB[0x7];                                     // 0x0209(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IPlayerInterface>      K2Node_DynamicCast_AsPlayer_Interface;             // 0x0210(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerID                                     CallFunc_GetPlayerID_ReturnValue;                  // 0x0221(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0222(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_87FC[0x5];                                     // 0x0223(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IEventInterface>       K2Node_DynamicCast_AsEvent_Interface_1;            // 0x0228(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BattleSequencerStart_ReturnValue_1;       // 0x0239(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_87FD[0x6];                                     // 0x023A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ARSCharacterBase*>               CallFunc_GetEnemyList_ReturnValue;                 // 0x0240(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x0251(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_87FE[0x6];                                     // 0x0252(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IPlayerInterface>      K2Node_DynamicCast_AsPlayer_Interface_1;           // 0x0258(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerID                                     CallFunc_GetPlayerID_ReturnValue_1;                // 0x0269(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x026A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_87FF[0x5];                                     // 0x026B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelSequence*                         CallFunc_ProtectedGetLevelSequence_Asset;          // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_EnemyManager_C*                     CallFunc_GetEnemyManager_Manager;                  // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0280(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0290(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x02A8(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x02E8(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x02F8(0x0018)()
	class ULevelSequence*                         CallFunc_ProtectedGetLevelSequence_Asset_1;        // 0x0310(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0318(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	EPlayerID                                     Temp_byte_Variable_1;                              // 0x0328(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8800[0x7];                                     // 0x0329(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1; // 0x0330(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0340(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0358(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0398(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x03A8(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x03C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_PsychicBattle_C_PrivateStartSequencer) == 0x000010, "Wrong alignment on BPC_PsychicBattle_C_PrivateStartSequencer");
static_assert(sizeof(BPC_PsychicBattle_C_PrivateStartSequencer) == 0x0003D0, "Wrong size on BPC_PsychicBattle_C_PrivateStartSequencer");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateStartSequencer, PsychicBattleType) == 0x000000, "Member 'BPC_PsychicBattle_C_PrivateStartSequencer::PsychicBattleType' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateStartSequencer, User) == 0x000008, "Member 'BPC_PsychicBattle_C_PrivateStartSequencer::User' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateStartSequencer, TmpActor) == 0x000010, "Member 'BPC_PsychicBattle_C_PrivateStartSequencer::TmpActor' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateStartSequencer, PsyObj) == 0x000018, "Member 'BPC_PsychicBattle_C_PrivateStartSequencer::PsyObj' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateStartSequencer, UserPlayerID) == 0x000020, "Member 'BPC_PsychicBattle_C_PrivateStartSequencer::UserPlayerID' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateStartSequencer, EnemyManager) == 0x000028, "Member 'BPC_PsychicBattle_C_PrivateStartSequencer::EnemyManager' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateStartSequencer, Enemy) == 0x000030, "Member 'BPC_PsychicBattle_C_PrivateStartSequencer::Enemy' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateStartSequencer, LevelSequence) == 0x000038, "Member 'BPC_PsychicBattle_C_PrivateStartSequencer::LevelSequence' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateStartSequencer, EnemyList) == 0x000040, "Member 'BPC_PsychicBattle_C_PrivateStartSequencer::EnemyList' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateStartSequencer, Temp_bool_True_if_break_was_hit_Variable) == 0x000050, "Member 'BPC_PsychicBattle_C_PrivateStartSequencer::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateStartSequencer, Temp_int_Array_Index_Variable) == 0x000054, "Member 'BPC_PsychicBattle_C_PrivateStartSequencer::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateStartSequencer, CallFunc_Not_PreBool_ReturnValue) == 0x000058, "Member 'BPC_PsychicBattle_C_PrivateStartSequencer::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateStartSequencer, Temp_int_Loop_Num_Variable) == 0x00005C, "Member 'BPC_PsychicBattle_C_PrivateStartSequencer::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateStartSequencer, CallFunc_GetSequencePlayer_ReturnValue) == 0x000060, "Member 'BPC_PsychicBattle_C_PrivateStartSequencer::CallFunc_GetSequencePlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateStartSequencer, CallFunc_GetEndTime_ReturnValue) == 0x000068, "Member 'BPC_PsychicBattle_C_PrivateStartSequencer::CallFunc_GetEndTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateStartSequencer, CallFunc_Array_Length_ReturnValue) == 0x000078, "Member 'BPC_PsychicBattle_C_PrivateStartSequencer::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateStartSequencer, K2Node_DynamicCast_AsRSBattle_Player) == 0x000080, "Member 'BPC_PsychicBattle_C_PrivateStartSequencer::K2Node_DynamicCast_AsRSBattle_Player' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateStartSequencer, K2Node_DynamicCast_bSuccess) == 0x000088, "Member 'BPC_PsychicBattle_C_PrivateStartSequencer::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateStartSequencer, CallFunc_IsNoBattleWeaponDispOff_bOff) == 0x000089, "Member 'BPC_PsychicBattle_C_PrivateStartSequencer::CallFunc_IsNoBattleWeaponDispOff_bOff' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateStartSequencer, CallFunc_DynamicEventBeforeBindCharacter_self_CastInput) == 0x000090, "Member 'BPC_PsychicBattle_C_PrivateStartSequencer::CallFunc_DynamicEventBeforeBindCharacter_self_CastInput' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateStartSequencer, CallFunc_DynamicEventBeforeBindCharacter_ReturnValue) == 0x0000A0, "Member 'BPC_PsychicBattle_C_PrivateStartSequencer::CallFunc_DynamicEventBeforeBindCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateStartSequencer, Temp_int_Loop_Counter_Variable) == 0x0000A4, "Member 'BPC_PsychicBattle_C_PrivateStartSequencer::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateStartSequencer, K2Node_DynamicCast_AsEvent_Interface) == 0x0000A8, "Member 'BPC_PsychicBattle_C_PrivateStartSequencer::K2Node_DynamicCast_AsEvent_Interface' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateStartSequencer, K2Node_DynamicCast_bSuccess_1) == 0x0000B8, "Member 'BPC_PsychicBattle_C_PrivateStartSequencer::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateStartSequencer, CallFunc_DynamicEventBeforeBindCharacter_ReturnValue_1) == 0x0000B9, "Member 'BPC_PsychicBattle_C_PrivateStartSequencer::CallFunc_DynamicEventBeforeBindCharacter_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateStartSequencer, CallFunc_Less_IntInt_ReturnValue) == 0x0000BA, "Member 'BPC_PsychicBattle_C_PrivateStartSequencer::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateStartSequencer, CallFunc_BooleanAND_ReturnValue) == 0x0000BB, "Member 'BPC_PsychicBattle_C_PrivateStartSequencer::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateStartSequencer, CallFunc_Add_IntInt_ReturnValue) == 0x0000BC, "Member 'BPC_PsychicBattle_C_PrivateStartSequencer::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateStartSequencer, Temp_byte_Variable) == 0x0000C0, "Member 'BPC_PsychicBattle_C_PrivateStartSequencer::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateStartSequencer, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000C1, "Member 'BPC_PsychicBattle_C_PrivateStartSequencer::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateStartSequencer, CallFunc_IsValid_ReturnValue) == 0x0000C2, "Member 'BPC_PsychicBattle_C_PrivateStartSequencer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateStartSequencer, K2Node_DynamicCast_AsRs_Battle_Hero) == 0x0000C8, "Member 'BPC_PsychicBattle_C_PrivateStartSequencer::K2Node_DynamicCast_AsRs_Battle_Hero' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateStartSequencer, K2Node_DynamicCast_bSuccess_2) == 0x0000D0, "Member 'BPC_PsychicBattle_C_PrivateStartSequencer::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateStartSequencer, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0000D1, "Member 'BPC_PsychicBattle_C_PrivateStartSequencer::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateStartSequencer, CallFunc_MakeTransform_ReturnValue) == 0x0000E0, "Member 'BPC_PsychicBattle_C_PrivateStartSequencer::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateStartSequencer, K2Node_DynamicCast_AsBPI_Psychic_Battle_Object) == 0x000110, "Member 'BPC_PsychicBattle_C_PrivateStartSequencer::K2Node_DynamicCast_AsBPI_Psychic_Battle_Object' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateStartSequencer, K2Node_DynamicCast_bSuccess_3) == 0x000120, "Member 'BPC_PsychicBattle_C_PrivateStartSequencer::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateStartSequencer, CallFunc_K2_SetActorTransform_SweepHitResult) == 0x000124, "Member 'BPC_PsychicBattle_C_PrivateStartSequencer::CallFunc_K2_SetActorTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateStartSequencer, CallFunc_K2_SetActorTransform_ReturnValue) == 0x0001AC, "Member 'BPC_PsychicBattle_C_PrivateStartSequencer::CallFunc_K2_SetActorTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateStartSequencer, K2Node_DynamicCast_AsBPI_Psychic_Battle_Object_1) == 0x0001B0, "Member 'BPC_PsychicBattle_C_PrivateStartSequencer::K2Node_DynamicCast_AsBPI_Psychic_Battle_Object_1' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateStartSequencer, K2Node_DynamicCast_bSuccess_4) == 0x0001C0, "Member 'BPC_PsychicBattle_C_PrivateStartSequencer::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateStartSequencer, K2Node_DynamicCast_AsBPI_Psychic_Battle_Object_2) == 0x0001C8, "Member 'BPC_PsychicBattle_C_PrivateStartSequencer::K2Node_DynamicCast_AsBPI_Psychic_Battle_Object_2' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateStartSequencer, K2Node_DynamicCast_bSuccess_5) == 0x0001D8, "Member 'BPC_PsychicBattle_C_PrivateStartSequencer::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateStartSequencer, CallFunc_IsValid_ReturnValue_1) == 0x0001D9, "Member 'BPC_PsychicBattle_C_PrivateStartSequencer::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateStartSequencer, CallFunc_IsValid_ReturnValue_2) == 0x0001DA, "Member 'BPC_PsychicBattle_C_PrivateStartSequencer::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateStartSequencer, CallFunc_GetSequencePlayer_ReturnValue_1) == 0x0001E0, "Member 'BPC_PsychicBattle_C_PrivateStartSequencer::CallFunc_GetSequencePlayer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateStartSequencer, CallFunc_GetSequencePlayer_ReturnValue_2) == 0x0001E8, "Member 'BPC_PsychicBattle_C_PrivateStartSequencer::CallFunc_GetSequencePlayer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateStartSequencer, CallFunc_IsValid_ReturnValue_3) == 0x0001F0, "Member 'BPC_PsychicBattle_C_PrivateStartSequencer::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateStartSequencer, CallFunc_ProtectedStartBinding_BindingPlayer) == 0x0001F1, "Member 'BPC_PsychicBattle_C_PrivateStartSequencer::CallFunc_ProtectedStartBinding_BindingPlayer' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateStartSequencer, CallFunc_ProtectedStartBinding_BindingEnemy) == 0x0001F2, "Member 'BPC_PsychicBattle_C_PrivateStartSequencer::CallFunc_ProtectedStartBinding_BindingEnemy' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateStartSequencer, CallFunc_BattleSequencerStart_self_CastInput) == 0x0001F8, "Member 'BPC_PsychicBattle_C_PrivateStartSequencer::CallFunc_BattleSequencerStart_self_CastInput' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateStartSequencer, CallFunc_BattleSequencerStart_ReturnValue) == 0x000208, "Member 'BPC_PsychicBattle_C_PrivateStartSequencer::CallFunc_BattleSequencerStart_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateStartSequencer, K2Node_DynamicCast_AsPlayer_Interface) == 0x000210, "Member 'BPC_PsychicBattle_C_PrivateStartSequencer::K2Node_DynamicCast_AsPlayer_Interface' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateStartSequencer, K2Node_DynamicCast_bSuccess_6) == 0x000220, "Member 'BPC_PsychicBattle_C_PrivateStartSequencer::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateStartSequencer, CallFunc_GetPlayerID_ReturnValue) == 0x000221, "Member 'BPC_PsychicBattle_C_PrivateStartSequencer::CallFunc_GetPlayerID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateStartSequencer, CallFunc_IsValid_ReturnValue_4) == 0x000222, "Member 'BPC_PsychicBattle_C_PrivateStartSequencer::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateStartSequencer, K2Node_DynamicCast_AsEvent_Interface_1) == 0x000228, "Member 'BPC_PsychicBattle_C_PrivateStartSequencer::K2Node_DynamicCast_AsEvent_Interface_1' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateStartSequencer, K2Node_DynamicCast_bSuccess_7) == 0x000238, "Member 'BPC_PsychicBattle_C_PrivateStartSequencer::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateStartSequencer, CallFunc_BattleSequencerStart_ReturnValue_1) == 0x000239, "Member 'BPC_PsychicBattle_C_PrivateStartSequencer::CallFunc_BattleSequencerStart_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateStartSequencer, CallFunc_GetEnemyList_ReturnValue) == 0x000240, "Member 'BPC_PsychicBattle_C_PrivateStartSequencer::CallFunc_GetEnemyList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateStartSequencer, CallFunc_IsValid_ReturnValue_5) == 0x000250, "Member 'BPC_PsychicBattle_C_PrivateStartSequencer::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateStartSequencer, CallFunc_IsValid_ReturnValue_6) == 0x000251, "Member 'BPC_PsychicBattle_C_PrivateStartSequencer::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateStartSequencer, K2Node_DynamicCast_AsPlayer_Interface_1) == 0x000258, "Member 'BPC_PsychicBattle_C_PrivateStartSequencer::K2Node_DynamicCast_AsPlayer_Interface_1' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateStartSequencer, K2Node_DynamicCast_bSuccess_8) == 0x000268, "Member 'BPC_PsychicBattle_C_PrivateStartSequencer::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateStartSequencer, CallFunc_GetPlayerID_ReturnValue_1) == 0x000269, "Member 'BPC_PsychicBattle_C_PrivateStartSequencer::CallFunc_GetPlayerID_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateStartSequencer, CallFunc_IsValid_ReturnValue_7) == 0x00026A, "Member 'BPC_PsychicBattle_C_PrivateStartSequencer::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateStartSequencer, CallFunc_ProtectedGetLevelSequence_Asset) == 0x000270, "Member 'BPC_PsychicBattle_C_PrivateStartSequencer::CallFunc_ProtectedGetLevelSequence_Asset' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateStartSequencer, CallFunc_GetEnemyManager_Manager) == 0x000278, "Member 'BPC_PsychicBattle_C_PrivateStartSequencer::CallFunc_GetEnemyManager_Manager' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateStartSequencer, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000280, "Member 'BPC_PsychicBattle_C_PrivateStartSequencer::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateStartSequencer, CallFunc_Conv_StringToText_ReturnValue) == 0x000290, "Member 'BPC_PsychicBattle_C_PrivateStartSequencer::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateStartSequencer, K2Node_MakeStruct_FormatArgumentData) == 0x0002A8, "Member 'BPC_PsychicBattle_C_PrivateStartSequencer::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateStartSequencer, K2Node_MakeArray_Array) == 0x0002E8, "Member 'BPC_PsychicBattle_C_PrivateStartSequencer::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateStartSequencer, CallFunc_Format_ReturnValue) == 0x0002F8, "Member 'BPC_PsychicBattle_C_PrivateStartSequencer::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateStartSequencer, CallFunc_ProtectedGetLevelSequence_Asset_1) == 0x000310, "Member 'BPC_PsychicBattle_C_PrivateStartSequencer::CallFunc_ProtectedGetLevelSequence_Asset_1' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateStartSequencer, CallFunc_Conv_TextToString_ReturnValue) == 0x000318, "Member 'BPC_PsychicBattle_C_PrivateStartSequencer::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateStartSequencer, Temp_byte_Variable_1) == 0x000328, "Member 'BPC_PsychicBattle_C_PrivateStartSequencer::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateStartSequencer, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1) == 0x000330, "Member 'BPC_PsychicBattle_C_PrivateStartSequencer::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateStartSequencer, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000340, "Member 'BPC_PsychicBattle_C_PrivateStartSequencer::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateStartSequencer, K2Node_MakeStruct_FormatArgumentData_1) == 0x000358, "Member 'BPC_PsychicBattle_C_PrivateStartSequencer::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateStartSequencer, K2Node_MakeArray_Array_1) == 0x000398, "Member 'BPC_PsychicBattle_C_PrivateStartSequencer::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateStartSequencer, CallFunc_Format_ReturnValue_1) == 0x0003A8, "Member 'BPC_PsychicBattle_C_PrivateStartSequencer::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateStartSequencer, CallFunc_Conv_TextToString_ReturnValue_1) == 0x0003C0, "Member 'BPC_PsychicBattle_C_PrivateStartSequencer::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");

// Function BPC_PsychicBattle.BPC_PsychicBattle_C.CheckPlayStart
// 0x0010 (0x0010 - 0x0000)
struct BPC_PsychicBattle_C_CheckPlayStart final
{
public:
	class UBP_EventParamComponent_C*              EventParam;                                        // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Montage;                                           // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_PsychicBattle_C_CheckPlayStart) == 0x000008, "Wrong alignment on BPC_PsychicBattle_C_CheckPlayStart");
static_assert(sizeof(BPC_PsychicBattle_C_CheckPlayStart) == 0x000010, "Wrong size on BPC_PsychicBattle_C_CheckPlayStart");
static_assert(offsetof(BPC_PsychicBattle_C_CheckPlayStart, EventParam) == 0x000000, "Member 'BPC_PsychicBattle_C_CheckPlayStart::EventParam' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_CheckPlayStart, Montage) == 0x000008, "Member 'BPC_PsychicBattle_C_CheckPlayStart::Montage' has a wrong offset!");

// Function BPC_PsychicBattle.BPC_PsychicBattle_C.EventBattleAnimation
// 0x0038 (0x0038 - 0x0000)
struct BPC_PsychicBattle_C_EventBattleAnimation final
{
public:
	TDelegate<void(class UAnimMontage* Montage, bool bInterrupted)> K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
	TScriptInterface<class IBPI_PsychicBattleObject_C> K2Node_DynamicCast_AsBPI_Psychic_Battle_Object;    // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8801[0x5];                                     // 0x0023(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPC_PsychicBattle_C_EventBattleAnimation) == 0x000008, "Wrong alignment on BPC_PsychicBattle_C_EventBattleAnimation");
static_assert(sizeof(BPC_PsychicBattle_C_EventBattleAnimation) == 0x000038, "Wrong size on BPC_PsychicBattle_C_EventBattleAnimation");
static_assert(offsetof(BPC_PsychicBattle_C_EventBattleAnimation, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'BPC_PsychicBattle_C_EventBattleAnimation::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_EventBattleAnimation, K2Node_DynamicCast_AsBPI_Psychic_Battle_Object) == 0x000010, "Member 'BPC_PsychicBattle_C_EventBattleAnimation::K2Node_DynamicCast_AsBPI_Psychic_Battle_Object' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_EventBattleAnimation, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BPC_PsychicBattle_C_EventBattleAnimation::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_EventBattleAnimation, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'BPC_PsychicBattle_C_EventBattleAnimation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_EventBattleAnimation, CallFunc_IsValid_ReturnValue_1) == 0x000022, "Member 'BPC_PsychicBattle_C_EventBattleAnimation::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_EventBattleAnimation, CallFunc_GetAnimInstance_ReturnValue) == 0x000028, "Member 'BPC_PsychicBattle_C_EventBattleAnimation::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_EventBattleAnimation, CallFunc_IsValid_ReturnValue_2) == 0x000030, "Member 'BPC_PsychicBattle_C_EventBattleAnimation::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

// Function BPC_PsychicBattle.BPC_PsychicBattle_C.PrivatePlayPhaseAnimation
// 0x0050 (0x0050 - 0x0000)
struct BPC_PsychicBattle_C_PrivatePlayPhaseAnimation final
{
public:
	int32                                         AnimationIndex;                                    // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8802[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           Ch0200Montage;                                     // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Ch0100Montage;                                     // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8803[0x6];                                     // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8804[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_Array_Get_Item_1;                         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_1;         // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8805[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_PlayAnimMontage_ReturnValue;              // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8806[0x2];                                     // 0x0042(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_PlayAnimMontage_ReturnValue_1;            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPC_PsychicBattle_C_PrivatePlayPhaseAnimation) == 0x000008, "Wrong alignment on BPC_PsychicBattle_C_PrivatePlayPhaseAnimation");
static_assert(sizeof(BPC_PsychicBattle_C_PrivatePlayPhaseAnimation) == 0x000050, "Wrong size on BPC_PsychicBattle_C_PrivatePlayPhaseAnimation");
static_assert(offsetof(BPC_PsychicBattle_C_PrivatePlayPhaseAnimation, AnimationIndex) == 0x000000, "Member 'BPC_PsychicBattle_C_PrivatePlayPhaseAnimation::AnimationIndex' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivatePlayPhaseAnimation, Ch0200Montage) == 0x000008, "Member 'BPC_PsychicBattle_C_PrivatePlayPhaseAnimation::Ch0200Montage' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivatePlayPhaseAnimation, Ch0100Montage) == 0x000010, "Member 'BPC_PsychicBattle_C_PrivatePlayPhaseAnimation::Ch0100Montage' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivatePlayPhaseAnimation, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BPC_PsychicBattle_C_PrivatePlayPhaseAnimation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivatePlayPhaseAnimation, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000019, "Member 'BPC_PsychicBattle_C_PrivatePlayPhaseAnimation::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivatePlayPhaseAnimation, CallFunc_Array_Get_Item) == 0x000020, "Member 'BPC_PsychicBattle_C_PrivatePlayPhaseAnimation::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivatePlayPhaseAnimation, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000028, "Member 'BPC_PsychicBattle_C_PrivatePlayPhaseAnimation::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivatePlayPhaseAnimation, CallFunc_Array_Get_Item_1) == 0x000030, "Member 'BPC_PsychicBattle_C_PrivatePlayPhaseAnimation::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivatePlayPhaseAnimation, CallFunc_Array_IsValidIndex_ReturnValue_1) == 0x000038, "Member 'BPC_PsychicBattle_C_PrivatePlayPhaseAnimation::CallFunc_Array_IsValidIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivatePlayPhaseAnimation, CallFunc_PlayAnimMontage_ReturnValue) == 0x00003C, "Member 'BPC_PsychicBattle_C_PrivatePlayPhaseAnimation::CallFunc_PlayAnimMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivatePlayPhaseAnimation, CallFunc_IsValid_ReturnValue_1) == 0x000040, "Member 'BPC_PsychicBattle_C_PrivatePlayPhaseAnimation::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivatePlayPhaseAnimation, CallFunc_IsValid_ReturnValue_2) == 0x000041, "Member 'BPC_PsychicBattle_C_PrivatePlayPhaseAnimation::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivatePlayPhaseAnimation, CallFunc_PlayAnimMontage_ReturnValue_1) == 0x000044, "Member 'BPC_PsychicBattle_C_PrivatePlayPhaseAnimation::CallFunc_PlayAnimMontage_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivatePlayPhaseAnimation, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000048, "Member 'BPC_PsychicBattle_C_PrivatePlayPhaseAnimation::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivatePlayPhaseAnimation, CallFunc_IsValid_ReturnValue_3) == 0x00004C, "Member 'BPC_PsychicBattle_C_PrivatePlayPhaseAnimation::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");

// Function BPC_PsychicBattle.BPC_PsychicBattle_C.PrivateStopBattleAnimation
// 0x0040 (0x0040 - 0x0000)
struct BPC_PsychicBattle_C_PrivateStopBattleAnimation final
{
public:
	class UAnimMontage*                           Montage;                                           // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_PsychicBattleObject_C> K2Node_DynamicCast_AsBPI_Psychic_Battle_Object;    // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TDelegate<void(class UAnimMontage* Montage, bool bInterrupted)> K2Node_CreateDelegate_OutputDelegate;              // 0x001C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_8807[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPC_PsychicBattle_C_PrivateStopBattleAnimation) == 0x000008, "Wrong alignment on BPC_PsychicBattle_C_PrivateStopBattleAnimation");
static_assert(sizeof(BPC_PsychicBattle_C_PrivateStopBattleAnimation) == 0x000040, "Wrong size on BPC_PsychicBattle_C_PrivateStopBattleAnimation");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateStopBattleAnimation, Montage) == 0x000000, "Member 'BPC_PsychicBattle_C_PrivateStopBattleAnimation::Montage' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateStopBattleAnimation, K2Node_DynamicCast_AsBPI_Psychic_Battle_Object) == 0x000008, "Member 'BPC_PsychicBattle_C_PrivateStopBattleAnimation::K2Node_DynamicCast_AsBPI_Psychic_Battle_Object' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateStopBattleAnimation, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BPC_PsychicBattle_C_PrivateStopBattleAnimation::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateStopBattleAnimation, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'BPC_PsychicBattle_C_PrivateStopBattleAnimation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateStopBattleAnimation, CallFunc_IsValid_ReturnValue_1) == 0x00001A, "Member 'BPC_PsychicBattle_C_PrivateStopBattleAnimation::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateStopBattleAnimation, CallFunc_IsValid_ReturnValue_2) == 0x00001B, "Member 'BPC_PsychicBattle_C_PrivateStopBattleAnimation::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateStopBattleAnimation, K2Node_CreateDelegate_OutputDelegate) == 0x00001C, "Member 'BPC_PsychicBattle_C_PrivateStopBattleAnimation::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateStopBattleAnimation, CallFunc_GetAnimInstance_ReturnValue) == 0x000030, "Member 'BPC_PsychicBattle_C_PrivateStopBattleAnimation::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateStopBattleAnimation, CallFunc_IsValid_ReturnValue_3) == 0x000038, "Member 'BPC_PsychicBattle_C_PrivateStopBattleAnimation::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");

// Function BPC_PsychicBattle.BPC_PsychicBattle_C.PrivateOnFinishAnimation
// 0x0010 (0x0010 - 0x0000)
struct BPC_PsychicBattle_C_PrivateOnFinishAnimation final
{
public:
	class UAnimMontage*                           PlayMontage;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Interrupted;                                       // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPC_PsychicBattle_C_PrivateOnFinishAnimation) == 0x000008, "Wrong alignment on BPC_PsychicBattle_C_PrivateOnFinishAnimation");
static_assert(sizeof(BPC_PsychicBattle_C_PrivateOnFinishAnimation) == 0x000010, "Wrong size on BPC_PsychicBattle_C_PrivateOnFinishAnimation");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateOnFinishAnimation, PlayMontage) == 0x000000, "Member 'BPC_PsychicBattle_C_PrivateOnFinishAnimation::PlayMontage' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateOnFinishAnimation, Interrupted) == 0x000008, "Member 'BPC_PsychicBattle_C_PrivateOnFinishAnimation::Interrupted' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateOnFinishAnimation, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000009, "Member 'BPC_PsychicBattle_C_PrivateOnFinishAnimation::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateOnFinishAnimation, K2Node_SwitchEnum_CmpSuccess) == 0x00000A, "Member 'BPC_PsychicBattle_C_PrivateOnFinishAnimation::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BPC_PsychicBattle.BPC_PsychicBattle_C.PrivateLoadAssetElectricPole
// 0x02E0 (0x02E0 - 0x0000)
struct BPC_PsychicBattle_C_PrivateLoadAssetElectricPole final
{
public:
	EPlayerID                                     UsePlayerID;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8808[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftObjectPtr<class UAnimMontage>>    LoadMontages0200obj;                               // 0x0008(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UAnimMontage>>    LoadMontages0100obj;                               // 0x0018(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UAnimMontage>>    LoadMontages0200;                                  // 0x0028(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UAnimMontage>>    LoadMontages0100;                                  // 0x0038(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TSoftObjectPtr<class UAnimMontage>            MontageObject;                                     // 0x0048(0x0028)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_1;                      // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8809[0x3];                                     // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_880A[0x4];                                     // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue;               // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_880B[0x6];                                     // 0x00A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           K2Node_DynamicCast_AsAnim_Montage;                 // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_880C[0x3];                                     // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue_1;             // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_880D[0x7];                                     // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           K2Node_DynamicCast_AsAnim_Montage_1;               // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_880E[0x2];                                     // 0x00D2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue_1; // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_880F[0x3];                                     // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Num_Variable_2;                      // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8810[0x3];                                     // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_3;                      // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8811[0x7];                                     // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue_2;             // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8812[0x7];                                     // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            K2Node_DynamicCast_AsStatic_Mesh;                  // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8813[0x3];                                     // 0x0119(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Num_Variable_4;                      // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue_2; // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8814[0x3];                                     // 0x0121(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue_3;             // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue_3; // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8815[0x7];                                     // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        K2Node_DynamicCast_AsParticle_System;              // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8816[0x3];                                     // 0x0141(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_4;                   // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8817[0x4];                                     // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue_4;             // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        K2Node_DynamicCast_AsParticle_System_1;            // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue_4; // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8818[0x6];                                     // 0x0162(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue_5;             // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue_5; // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8819[0x7];                                     // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        K2Node_DynamicCast_AsParticle_System_2;            // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_881A[0x7];                                     // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue_6;             // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue_6; // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_881B[0x7];                                     // 0x0191(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        K2Node_DynamicCast_AsParticle_System_3;            // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_881C[0x7];                                     // 0x01A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue_7;             // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        K2Node_DynamicCast_AsParticle_System_4;            // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue_7; // 0x01B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_881D[0x2];                                     // 0x01BA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_6;               // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_7;               // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x01D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_881E[0x3];                                     // 0x01D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_8;               // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_4;                  // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_9;               // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x01E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_881F[0x3];                                     // 0x01E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x01EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8820[0x3];                                     // 0x01ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue_8;             // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue_8; // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x01F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8821[0x6];                                     // 0x01FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            K2Node_DynamicCast_AsStatic_Mesh_1;                // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8822[0x7];                                     // 0x0209(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue_9;             // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue_9; // 0x0219(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8823[0x6];                                     // 0x021A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMesh*                          K2Node_DynamicCast_AsSkeletal_Mesh;                // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_9;                     // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8824[0x7];                                     // 0x0229(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PsychicBattleObject_C> K2Node_DynamicCast_AsBPI_Psychic_Battle_Object;    // 0x0230(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_10;                    // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8825[0xF];                                     // 0x0241(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0250(0x0030)(IsPlainOldData, NoDestructor)
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue_10;            // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_LoadSoftClassActor_ReturnValue;           // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8826[0x7];                                     // 0x0291(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_FinishSpawningActor_ReturnValue;          // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8827[0x7];                                     // 0x02A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           K2Node_DynamicCast_AsAnim_Montage_2;               // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_11;                    // 0x02B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue_10; // 0x02B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidSoftClassReference_ReturnValue;    // 0x02BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8828[0x5];                                     // 0x02BB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue_11;            // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8829[0x7];                                     // 0x02C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           K2Node_DynamicCast_AsAnim_Montage_3;               // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_12;                    // 0x02D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue_11; // 0x02D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPC_PsychicBattle_C_PrivateLoadAssetElectricPole) == 0x000010, "Wrong alignment on BPC_PsychicBattle_C_PrivateLoadAssetElectricPole");
static_assert(sizeof(BPC_PsychicBattle_C_PrivateLoadAssetElectricPole) == 0x0002E0, "Wrong size on BPC_PsychicBattle_C_PrivateLoadAssetElectricPole");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateLoadAssetElectricPole, UsePlayerID) == 0x000000, "Member 'BPC_PsychicBattle_C_PrivateLoadAssetElectricPole::UsePlayerID' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateLoadAssetElectricPole, LoadMontages0200obj) == 0x000008, "Member 'BPC_PsychicBattle_C_PrivateLoadAssetElectricPole::LoadMontages0200obj' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateLoadAssetElectricPole, LoadMontages0100obj) == 0x000018, "Member 'BPC_PsychicBattle_C_PrivateLoadAssetElectricPole::LoadMontages0100obj' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateLoadAssetElectricPole, LoadMontages0200) == 0x000028, "Member 'BPC_PsychicBattle_C_PrivateLoadAssetElectricPole::LoadMontages0200' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateLoadAssetElectricPole, LoadMontages0100) == 0x000038, "Member 'BPC_PsychicBattle_C_PrivateLoadAssetElectricPole::LoadMontages0100' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateLoadAssetElectricPole, MontageObject) == 0x000048, "Member 'BPC_PsychicBattle_C_PrivateLoadAssetElectricPole::MontageObject' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateLoadAssetElectricPole, Temp_int_Loop_Num_Variable) == 0x000070, "Member 'BPC_PsychicBattle_C_PrivateLoadAssetElectricPole::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateLoadAssetElectricPole, Temp_int_Loop_Counter_Variable) == 0x000074, "Member 'BPC_PsychicBattle_C_PrivateLoadAssetElectricPole::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateLoadAssetElectricPole, CallFunc_Add_IntInt_ReturnValue) == 0x000078, "Member 'BPC_PsychicBattle_C_PrivateLoadAssetElectricPole::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateLoadAssetElectricPole, Temp_int_Loop_Counter_Variable_1) == 0x00007C, "Member 'BPC_PsychicBattle_C_PrivateLoadAssetElectricPole::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateLoadAssetElectricPole, CallFunc_Add_IntInt_ReturnValue_1) == 0x000080, "Member 'BPC_PsychicBattle_C_PrivateLoadAssetElectricPole::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateLoadAssetElectricPole, Temp_int_Array_Index_Variable) == 0x000084, "Member 'BPC_PsychicBattle_C_PrivateLoadAssetElectricPole::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateLoadAssetElectricPole, Temp_int_Loop_Num_Variable_1) == 0x000088, "Member 'BPC_PsychicBattle_C_PrivateLoadAssetElectricPole::Temp_int_Loop_Num_Variable_1' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateLoadAssetElectricPole, CallFunc_Less_IntInt_ReturnValue) == 0x00008C, "Member 'BPC_PsychicBattle_C_PrivateLoadAssetElectricPole::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateLoadAssetElectricPole, Temp_int_Array_Index_Variable_1) == 0x000090, "Member 'BPC_PsychicBattle_C_PrivateLoadAssetElectricPole::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateLoadAssetElectricPole, CallFunc_LoadSoftObject_ReturnValue) == 0x000098, "Member 'BPC_PsychicBattle_C_PrivateLoadAssetElectricPole::CallFunc_LoadSoftObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateLoadAssetElectricPole, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x0000A0, "Member 'BPC_PsychicBattle_C_PrivateLoadAssetElectricPole::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateLoadAssetElectricPole, CallFunc_IsValid_ReturnValue) == 0x0000A1, "Member 'BPC_PsychicBattle_C_PrivateLoadAssetElectricPole::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateLoadAssetElectricPole, K2Node_DynamicCast_AsAnim_Montage) == 0x0000A8, "Member 'BPC_PsychicBattle_C_PrivateLoadAssetElectricPole::K2Node_DynamicCast_AsAnim_Montage' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateLoadAssetElectricPole, K2Node_DynamicCast_bSuccess) == 0x0000B0, "Member 'BPC_PsychicBattle_C_PrivateLoadAssetElectricPole::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateLoadAssetElectricPole, Temp_int_Loop_Counter_Variable_2) == 0x0000B4, "Member 'BPC_PsychicBattle_C_PrivateLoadAssetElectricPole::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateLoadAssetElectricPole, CallFunc_LoadSoftObject_ReturnValue_1) == 0x0000B8, "Member 'BPC_PsychicBattle_C_PrivateLoadAssetElectricPole::CallFunc_LoadSoftObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateLoadAssetElectricPole, CallFunc_IsValid_ReturnValue_1) == 0x0000C0, "Member 'BPC_PsychicBattle_C_PrivateLoadAssetElectricPole::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateLoadAssetElectricPole, K2Node_DynamicCast_AsAnim_Montage_1) == 0x0000C8, "Member 'BPC_PsychicBattle_C_PrivateLoadAssetElectricPole::K2Node_DynamicCast_AsAnim_Montage_1' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateLoadAssetElectricPole, K2Node_DynamicCast_bSuccess_1) == 0x0000D0, "Member 'BPC_PsychicBattle_C_PrivateLoadAssetElectricPole::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateLoadAssetElectricPole, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000D1, "Member 'BPC_PsychicBattle_C_PrivateLoadAssetElectricPole::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateLoadAssetElectricPole, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000D4, "Member 'BPC_PsychicBattle_C_PrivateLoadAssetElectricPole::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateLoadAssetElectricPole, CallFunc_IsValidSoftObjectReference_ReturnValue_1) == 0x0000D8, "Member 'BPC_PsychicBattle_C_PrivateLoadAssetElectricPole::CallFunc_IsValidSoftObjectReference_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateLoadAssetElectricPole, Temp_int_Loop_Num_Variable_2) == 0x0000DC, "Member 'BPC_PsychicBattle_C_PrivateLoadAssetElectricPole::Temp_int_Loop_Num_Variable_2' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateLoadAssetElectricPole, CallFunc_Less_IntInt_ReturnValue_2) == 0x0000E0, "Member 'BPC_PsychicBattle_C_PrivateLoadAssetElectricPole::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateLoadAssetElectricPole, Temp_int_Loop_Counter_Variable_3) == 0x0000E4, "Member 'BPC_PsychicBattle_C_PrivateLoadAssetElectricPole::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateLoadAssetElectricPole, CallFunc_Add_IntInt_ReturnValue_3) == 0x0000E8, "Member 'BPC_PsychicBattle_C_PrivateLoadAssetElectricPole::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateLoadAssetElectricPole, Temp_int_Array_Index_Variable_2) == 0x0000EC, "Member 'BPC_PsychicBattle_C_PrivateLoadAssetElectricPole::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateLoadAssetElectricPole, Temp_int_Array_Index_Variable_3) == 0x0000F0, "Member 'BPC_PsychicBattle_C_PrivateLoadAssetElectricPole::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateLoadAssetElectricPole, Temp_int_Loop_Num_Variable_3) == 0x0000F4, "Member 'BPC_PsychicBattle_C_PrivateLoadAssetElectricPole::Temp_int_Loop_Num_Variable_3' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateLoadAssetElectricPole, CallFunc_Less_IntInt_ReturnValue_3) == 0x0000F8, "Member 'BPC_PsychicBattle_C_PrivateLoadAssetElectricPole::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateLoadAssetElectricPole, CallFunc_LoadSoftObject_ReturnValue_2) == 0x000100, "Member 'BPC_PsychicBattle_C_PrivateLoadAssetElectricPole::CallFunc_LoadSoftObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateLoadAssetElectricPole, CallFunc_IsValid_ReturnValue_2) == 0x000108, "Member 'BPC_PsychicBattle_C_PrivateLoadAssetElectricPole::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateLoadAssetElectricPole, K2Node_DynamicCast_AsStatic_Mesh) == 0x000110, "Member 'BPC_PsychicBattle_C_PrivateLoadAssetElectricPole::K2Node_DynamicCast_AsStatic_Mesh' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateLoadAssetElectricPole, K2Node_DynamicCast_bSuccess_2) == 0x000118, "Member 'BPC_PsychicBattle_C_PrivateLoadAssetElectricPole::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateLoadAssetElectricPole, Temp_int_Loop_Num_Variable_4) == 0x00011C, "Member 'BPC_PsychicBattle_C_PrivateLoadAssetElectricPole::Temp_int_Loop_Num_Variable_4' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateLoadAssetElectricPole, CallFunc_IsValidSoftObjectReference_ReturnValue_2) == 0x000120, "Member 'BPC_PsychicBattle_C_PrivateLoadAssetElectricPole::CallFunc_IsValidSoftObjectReference_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateLoadAssetElectricPole, CallFunc_Array_Length_ReturnValue) == 0x000124, "Member 'BPC_PsychicBattle_C_PrivateLoadAssetElectricPole::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateLoadAssetElectricPole, CallFunc_LoadSoftObject_ReturnValue_3) == 0x000128, "Member 'BPC_PsychicBattle_C_PrivateLoadAssetElectricPole::CallFunc_LoadSoftObject_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateLoadAssetElectricPole, CallFunc_IsValidSoftObjectReference_ReturnValue_3) == 0x000130, "Member 'BPC_PsychicBattle_C_PrivateLoadAssetElectricPole::CallFunc_IsValidSoftObjectReference_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateLoadAssetElectricPole, K2Node_DynamicCast_AsParticle_System) == 0x000138, "Member 'BPC_PsychicBattle_C_PrivateLoadAssetElectricPole::K2Node_DynamicCast_AsParticle_System' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateLoadAssetElectricPole, K2Node_DynamicCast_bSuccess_3) == 0x000140, "Member 'BPC_PsychicBattle_C_PrivateLoadAssetElectricPole::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateLoadAssetElectricPole, CallFunc_Array_Length_ReturnValue_1) == 0x000144, "Member 'BPC_PsychicBattle_C_PrivateLoadAssetElectricPole::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateLoadAssetElectricPole, Temp_int_Array_Index_Variable_4) == 0x000148, "Member 'BPC_PsychicBattle_C_PrivateLoadAssetElectricPole::Temp_int_Array_Index_Variable_4' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateLoadAssetElectricPole, CallFunc_LoadSoftObject_ReturnValue_4) == 0x000150, "Member 'BPC_PsychicBattle_C_PrivateLoadAssetElectricPole::CallFunc_LoadSoftObject_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateLoadAssetElectricPole, K2Node_DynamicCast_AsParticle_System_1) == 0x000158, "Member 'BPC_PsychicBattle_C_PrivateLoadAssetElectricPole::K2Node_DynamicCast_AsParticle_System_1' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateLoadAssetElectricPole, K2Node_DynamicCast_bSuccess_4) == 0x000160, "Member 'BPC_PsychicBattle_C_PrivateLoadAssetElectricPole::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateLoadAssetElectricPole, CallFunc_IsValidSoftObjectReference_ReturnValue_4) == 0x000161, "Member 'BPC_PsychicBattle_C_PrivateLoadAssetElectricPole::CallFunc_IsValidSoftObjectReference_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateLoadAssetElectricPole, CallFunc_LoadSoftObject_ReturnValue_5) == 0x000168, "Member 'BPC_PsychicBattle_C_PrivateLoadAssetElectricPole::CallFunc_LoadSoftObject_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateLoadAssetElectricPole, CallFunc_IsValidSoftObjectReference_ReturnValue_5) == 0x000170, "Member 'BPC_PsychicBattle_C_PrivateLoadAssetElectricPole::CallFunc_IsValidSoftObjectReference_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateLoadAssetElectricPole, K2Node_DynamicCast_AsParticle_System_2) == 0x000178, "Member 'BPC_PsychicBattle_C_PrivateLoadAssetElectricPole::K2Node_DynamicCast_AsParticle_System_2' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateLoadAssetElectricPole, K2Node_DynamicCast_bSuccess_5) == 0x000180, "Member 'BPC_PsychicBattle_C_PrivateLoadAssetElectricPole::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateLoadAssetElectricPole, CallFunc_LoadSoftObject_ReturnValue_6) == 0x000188, "Member 'BPC_PsychicBattle_C_PrivateLoadAssetElectricPole::CallFunc_LoadSoftObject_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateLoadAssetElectricPole, CallFunc_IsValidSoftObjectReference_ReturnValue_6) == 0x000190, "Member 'BPC_PsychicBattle_C_PrivateLoadAssetElectricPole::CallFunc_IsValidSoftObjectReference_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateLoadAssetElectricPole, K2Node_DynamicCast_AsParticle_System_3) == 0x000198, "Member 'BPC_PsychicBattle_C_PrivateLoadAssetElectricPole::K2Node_DynamicCast_AsParticle_System_3' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateLoadAssetElectricPole, K2Node_DynamicCast_bSuccess_6) == 0x0001A0, "Member 'BPC_PsychicBattle_C_PrivateLoadAssetElectricPole::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateLoadAssetElectricPole, CallFunc_LoadSoftObject_ReturnValue_7) == 0x0001A8, "Member 'BPC_PsychicBattle_C_PrivateLoadAssetElectricPole::CallFunc_LoadSoftObject_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateLoadAssetElectricPole, K2Node_DynamicCast_AsParticle_System_4) == 0x0001B0, "Member 'BPC_PsychicBattle_C_PrivateLoadAssetElectricPole::K2Node_DynamicCast_AsParticle_System_4' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateLoadAssetElectricPole, K2Node_DynamicCast_bSuccess_7) == 0x0001B8, "Member 'BPC_PsychicBattle_C_PrivateLoadAssetElectricPole::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateLoadAssetElectricPole, CallFunc_IsValidSoftObjectReference_ReturnValue_7) == 0x0001B9, "Member 'BPC_PsychicBattle_C_PrivateLoadAssetElectricPole::CallFunc_IsValidSoftObjectReference_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateLoadAssetElectricPole, CallFunc_Array_Length_ReturnValue_2) == 0x0001BC, "Member 'BPC_PsychicBattle_C_PrivateLoadAssetElectricPole::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateLoadAssetElectricPole, CallFunc_Array_Length_ReturnValue_3) == 0x0001C0, "Member 'BPC_PsychicBattle_C_PrivateLoadAssetElectricPole::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateLoadAssetElectricPole, CallFunc_Array_Length_ReturnValue_4) == 0x0001C4, "Member 'BPC_PsychicBattle_C_PrivateLoadAssetElectricPole::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateLoadAssetElectricPole, CallFunc_Array_Length_ReturnValue_5) == 0x0001C8, "Member 'BPC_PsychicBattle_C_PrivateLoadAssetElectricPole::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateLoadAssetElectricPole, CallFunc_Array_Length_ReturnValue_6) == 0x0001CC, "Member 'BPC_PsychicBattle_C_PrivateLoadAssetElectricPole::CallFunc_Array_Length_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateLoadAssetElectricPole, CallFunc_Array_Length_ReturnValue_7) == 0x0001D0, "Member 'BPC_PsychicBattle_C_PrivateLoadAssetElectricPole::CallFunc_Array_Length_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateLoadAssetElectricPole, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0001D4, "Member 'BPC_PsychicBattle_C_PrivateLoadAssetElectricPole::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateLoadAssetElectricPole, CallFunc_Array_Length_ReturnValue_8) == 0x0001D8, "Member 'BPC_PsychicBattle_C_PrivateLoadAssetElectricPole::CallFunc_Array_Length_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateLoadAssetElectricPole, Temp_int_Loop_Counter_Variable_4) == 0x0001DC, "Member 'BPC_PsychicBattle_C_PrivateLoadAssetElectricPole::Temp_int_Loop_Counter_Variable_4' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateLoadAssetElectricPole, CallFunc_Array_Length_ReturnValue_9) == 0x0001E0, "Member 'BPC_PsychicBattle_C_PrivateLoadAssetElectricPole::CallFunc_Array_Length_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateLoadAssetElectricPole, CallFunc_Less_IntInt_ReturnValue_4) == 0x0001E4, "Member 'BPC_PsychicBattle_C_PrivateLoadAssetElectricPole::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateLoadAssetElectricPole, CallFunc_Add_IntInt_ReturnValue_4) == 0x0001E8, "Member 'BPC_PsychicBattle_C_PrivateLoadAssetElectricPole::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateLoadAssetElectricPole, CallFunc_IsValid_ReturnValue_3) == 0x0001EC, "Member 'BPC_PsychicBattle_C_PrivateLoadAssetElectricPole::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateLoadAssetElectricPole, CallFunc_LoadSoftObject_ReturnValue_8) == 0x0001F0, "Member 'BPC_PsychicBattle_C_PrivateLoadAssetElectricPole::CallFunc_LoadSoftObject_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateLoadAssetElectricPole, CallFunc_IsValidSoftObjectReference_ReturnValue_8) == 0x0001F8, "Member 'BPC_PsychicBattle_C_PrivateLoadAssetElectricPole::CallFunc_IsValidSoftObjectReference_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateLoadAssetElectricPole, CallFunc_IsValid_ReturnValue_4) == 0x0001F9, "Member 'BPC_PsychicBattle_C_PrivateLoadAssetElectricPole::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateLoadAssetElectricPole, K2Node_DynamicCast_AsStatic_Mesh_1) == 0x000200, "Member 'BPC_PsychicBattle_C_PrivateLoadAssetElectricPole::K2Node_DynamicCast_AsStatic_Mesh_1' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateLoadAssetElectricPole, K2Node_DynamicCast_bSuccess_8) == 0x000208, "Member 'BPC_PsychicBattle_C_PrivateLoadAssetElectricPole::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateLoadAssetElectricPole, CallFunc_LoadSoftObject_ReturnValue_9) == 0x000210, "Member 'BPC_PsychicBattle_C_PrivateLoadAssetElectricPole::CallFunc_LoadSoftObject_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateLoadAssetElectricPole, CallFunc_IsValid_ReturnValue_5) == 0x000218, "Member 'BPC_PsychicBattle_C_PrivateLoadAssetElectricPole::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateLoadAssetElectricPole, CallFunc_IsValidSoftObjectReference_ReturnValue_9) == 0x000219, "Member 'BPC_PsychicBattle_C_PrivateLoadAssetElectricPole::CallFunc_IsValidSoftObjectReference_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateLoadAssetElectricPole, K2Node_DynamicCast_AsSkeletal_Mesh) == 0x000220, "Member 'BPC_PsychicBattle_C_PrivateLoadAssetElectricPole::K2Node_DynamicCast_AsSkeletal_Mesh' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateLoadAssetElectricPole, K2Node_DynamicCast_bSuccess_9) == 0x000228, "Member 'BPC_PsychicBattle_C_PrivateLoadAssetElectricPole::K2Node_DynamicCast_bSuccess_9' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateLoadAssetElectricPole, K2Node_DynamicCast_AsBPI_Psychic_Battle_Object) == 0x000230, "Member 'BPC_PsychicBattle_C_PrivateLoadAssetElectricPole::K2Node_DynamicCast_AsBPI_Psychic_Battle_Object' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateLoadAssetElectricPole, K2Node_DynamicCast_bSuccess_10) == 0x000240, "Member 'BPC_PsychicBattle_C_PrivateLoadAssetElectricPole::K2Node_DynamicCast_bSuccess_10' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateLoadAssetElectricPole, CallFunc_MakeTransform_ReturnValue) == 0x000250, "Member 'BPC_PsychicBattle_C_PrivateLoadAssetElectricPole::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateLoadAssetElectricPole, CallFunc_LoadSoftObject_ReturnValue_10) == 0x000280, "Member 'BPC_PsychicBattle_C_PrivateLoadAssetElectricPole::CallFunc_LoadSoftObject_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateLoadAssetElectricPole, CallFunc_LoadSoftClassActor_ReturnValue) == 0x000288, "Member 'BPC_PsychicBattle_C_PrivateLoadAssetElectricPole::CallFunc_LoadSoftClassActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateLoadAssetElectricPole, CallFunc_IsValid_ReturnValue_6) == 0x000290, "Member 'BPC_PsychicBattle_C_PrivateLoadAssetElectricPole::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateLoadAssetElectricPole, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000298, "Member 'BPC_PsychicBattle_C_PrivateLoadAssetElectricPole::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateLoadAssetElectricPole, CallFunc_FinishSpawningActor_ReturnValue) == 0x0002A0, "Member 'BPC_PsychicBattle_C_PrivateLoadAssetElectricPole::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateLoadAssetElectricPole, CallFunc_IsValidClass_ReturnValue) == 0x0002A8, "Member 'BPC_PsychicBattle_C_PrivateLoadAssetElectricPole::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateLoadAssetElectricPole, K2Node_DynamicCast_AsAnim_Montage_2) == 0x0002B0, "Member 'BPC_PsychicBattle_C_PrivateLoadAssetElectricPole::K2Node_DynamicCast_AsAnim_Montage_2' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateLoadAssetElectricPole, K2Node_DynamicCast_bSuccess_11) == 0x0002B8, "Member 'BPC_PsychicBattle_C_PrivateLoadAssetElectricPole::K2Node_DynamicCast_bSuccess_11' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateLoadAssetElectricPole, CallFunc_IsValidSoftObjectReference_ReturnValue_10) == 0x0002B9, "Member 'BPC_PsychicBattle_C_PrivateLoadAssetElectricPole::CallFunc_IsValidSoftObjectReference_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateLoadAssetElectricPole, CallFunc_IsValidSoftClassReference_ReturnValue) == 0x0002BA, "Member 'BPC_PsychicBattle_C_PrivateLoadAssetElectricPole::CallFunc_IsValidSoftClassReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateLoadAssetElectricPole, CallFunc_LoadSoftObject_ReturnValue_11) == 0x0002C0, "Member 'BPC_PsychicBattle_C_PrivateLoadAssetElectricPole::CallFunc_LoadSoftObject_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateLoadAssetElectricPole, CallFunc_IsValid_ReturnValue_7) == 0x0002C8, "Member 'BPC_PsychicBattle_C_PrivateLoadAssetElectricPole::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateLoadAssetElectricPole, K2Node_DynamicCast_AsAnim_Montage_3) == 0x0002D0, "Member 'BPC_PsychicBattle_C_PrivateLoadAssetElectricPole::K2Node_DynamicCast_AsAnim_Montage_3' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateLoadAssetElectricPole, K2Node_DynamicCast_bSuccess_12) == 0x0002D8, "Member 'BPC_PsychicBattle_C_PrivateLoadAssetElectricPole::K2Node_DynamicCast_bSuccess_12' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateLoadAssetElectricPole, CallFunc_IsValidSoftObjectReference_ReturnValue_11) == 0x0002D9, "Member 'BPC_PsychicBattle_C_PrivateLoadAssetElectricPole::CallFunc_IsValidSoftObjectReference_ReturnValue_11' has a wrong offset!");

// Function BPC_PsychicBattle.BPC_PsychicBattle_C.SetBattleParticle
// 0x0310 (0x0310 - 0x0000)
struct BPC_PsychicBattle_C_SetBattleParticle final
{
public:
	bool                                          Enable;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_882A[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       Ch0200;                                            // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSCharacterBase*                       Ch0100;                                            // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_882B[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PsychicBattleObject_C> K2Node_DynamicCast_AsBPI_Psychic_Battle_Object;    // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_882C[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PsychicBattleObject_C> K2Node_DynamicCast_AsBPI_Psychic_Battle_Object_1;  // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_882D[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   CallFunc_GetAppendMeshEnemy_MeshComp;              // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CallFunc_GetAppendMeshPlayer_MeshComp;             // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_882E[0x1];                                     // 0x0063(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSPsychicCaptureMaterial               CallFunc_GetPsychicCaptureMaterialParameter_Normal; // 0x0068(0x00A0)(HasGetValueTypeHash)
	struct FSPsychicCaptureMaterial               CallFunc_GetPsychicCaptureMaterialParameter_Fire;  // 0x0108(0x00A0)(HasGetValueTypeHash)
	struct FSPsychicCaptureMaterial               CallFunc_GetPsychicCaptureMaterialParameter_Electric; // 0x01A8(0x00A0)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x024C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_882F[0x3];                                     // 0x024D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PsychicBattleObject_C> K2Node_DynamicCast_AsBPI_Psychic_Battle_Object_2;  // 0x0250(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8830[0x7];                                     // 0x0261(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PsychicBattleObject_C> K2Node_DynamicCast_AsBPI_Psychic_Battle_Object_3;  // 0x0268(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8831[0x7];                                     // 0x0279(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   CallFunc_GetAppendMeshEnemy_MeshComp_1;            // 0x0280(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CallFunc_GetAppendMeshPlayer_MeshComp_1;           // 0x0288(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URSParticleSystemComponentBase*         CallFunc_SpawnEmitterAttached_ReturnValue;         // 0x0290(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0298(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x029C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8832[0x3];                                     // 0x029D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class URSParticleSystemComponentBase*         CallFunc_SpawnEmitterAttached_ReturnValue_1;       // 0x02A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x02A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x02AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x02AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x02AE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8833[0x1];                                     // 0x02AF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class URSParticleSystemComponentBase*         CallFunc_SpawnEmitterAttached_ReturnValue_2;       // 0x02B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x02B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8834[0x4];                                     // 0x02BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class URSParticleSystemComponentBase*         CallFunc_SpawnEmitterAttached_ReturnValue_3;       // 0x02C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_9;                    // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8835[0x3];                                     // 0x02C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x02CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_10;                   // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_11;                   // 0x02D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8836[0x6];                                     // 0x02D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class URSParticleSystemComponentBase*         CallFunc_SpawnEmitterAttached_ReturnValue_4;       // 0x02D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_4;                  // 0x02E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x02E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_12;                   // 0x02E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x02E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8837[0x2];                                     // 0x02EA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x02EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x02F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8838[0x7];                                     // 0x02F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URSParticleSystemComponentBase*         CallFunc_SpawnEmitterAttached_ReturnValue_5;       // 0x02F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_5;                  // 0x0300(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_13;                   // 0x0304(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8839[0x3];                                     // 0x0305(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0308(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x030C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPC_PsychicBattle_C_SetBattleParticle) == 0x000008, "Wrong alignment on BPC_PsychicBattle_C_SetBattleParticle");
static_assert(sizeof(BPC_PsychicBattle_C_SetBattleParticle) == 0x000310, "Wrong size on BPC_PsychicBattle_C_SetBattleParticle");
static_assert(offsetof(BPC_PsychicBattle_C_SetBattleParticle, Enable) == 0x000000, "Member 'BPC_PsychicBattle_C_SetBattleParticle::Enable' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_SetBattleParticle, Ch0200) == 0x000008, "Member 'BPC_PsychicBattle_C_SetBattleParticle::Ch0200' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_SetBattleParticle, Ch0100) == 0x000010, "Member 'BPC_PsychicBattle_C_SetBattleParticle::Ch0100' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_SetBattleParticle, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BPC_PsychicBattle_C_SetBattleParticle::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_SetBattleParticle, CallFunc_IsValid_ReturnValue) == 0x00001C, "Member 'BPC_PsychicBattle_C_SetBattleParticle::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_SetBattleParticle, K2Node_DynamicCast_AsBPI_Psychic_Battle_Object) == 0x000020, "Member 'BPC_PsychicBattle_C_SetBattleParticle::K2Node_DynamicCast_AsBPI_Psychic_Battle_Object' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_SetBattleParticle, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BPC_PsychicBattle_C_SetBattleParticle::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_SetBattleParticle, K2Node_DynamicCast_AsBPI_Psychic_Battle_Object_1) == 0x000038, "Member 'BPC_PsychicBattle_C_SetBattleParticle::K2Node_DynamicCast_AsBPI_Psychic_Battle_Object_1' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_SetBattleParticle, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'BPC_PsychicBattle_C_SetBattleParticle::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_SetBattleParticle, CallFunc_GetAppendMeshEnemy_MeshComp) == 0x000050, "Member 'BPC_PsychicBattle_C_SetBattleParticle::CallFunc_GetAppendMeshEnemy_MeshComp' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_SetBattleParticle, CallFunc_GetAppendMeshPlayer_MeshComp) == 0x000058, "Member 'BPC_PsychicBattle_C_SetBattleParticle::CallFunc_GetAppendMeshPlayer_MeshComp' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_SetBattleParticle, CallFunc_IsValid_ReturnValue_1) == 0x000060, "Member 'BPC_PsychicBattle_C_SetBattleParticle::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_SetBattleParticle, CallFunc_IsValid_ReturnValue_2) == 0x000061, "Member 'BPC_PsychicBattle_C_SetBattleParticle::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_SetBattleParticle, CallFunc_IsValid_ReturnValue_3) == 0x000062, "Member 'BPC_PsychicBattle_C_SetBattleParticle::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_SetBattleParticle, Temp_int_Loop_Num_Variable) == 0x000064, "Member 'BPC_PsychicBattle_C_SetBattleParticle::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_SetBattleParticle, CallFunc_GetPsychicCaptureMaterialParameter_Normal) == 0x000068, "Member 'BPC_PsychicBattle_C_SetBattleParticle::CallFunc_GetPsychicCaptureMaterialParameter_Normal' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_SetBattleParticle, CallFunc_GetPsychicCaptureMaterialParameter_Fire) == 0x000108, "Member 'BPC_PsychicBattle_C_SetBattleParticle::CallFunc_GetPsychicCaptureMaterialParameter_Fire' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_SetBattleParticle, CallFunc_GetPsychicCaptureMaterialParameter_Electric) == 0x0001A8, "Member 'BPC_PsychicBattle_C_SetBattleParticle::CallFunc_GetPsychicCaptureMaterialParameter_Electric' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_SetBattleParticle, CallFunc_Array_Length_ReturnValue) == 0x000248, "Member 'BPC_PsychicBattle_C_SetBattleParticle::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_SetBattleParticle, CallFunc_IsValid_ReturnValue_4) == 0x00024C, "Member 'BPC_PsychicBattle_C_SetBattleParticle::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_SetBattleParticle, K2Node_DynamicCast_AsBPI_Psychic_Battle_Object_2) == 0x000250, "Member 'BPC_PsychicBattle_C_SetBattleParticle::K2Node_DynamicCast_AsBPI_Psychic_Battle_Object_2' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_SetBattleParticle, K2Node_DynamicCast_bSuccess_2) == 0x000260, "Member 'BPC_PsychicBattle_C_SetBattleParticle::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_SetBattleParticle, K2Node_DynamicCast_AsBPI_Psychic_Battle_Object_3) == 0x000268, "Member 'BPC_PsychicBattle_C_SetBattleParticle::K2Node_DynamicCast_AsBPI_Psychic_Battle_Object_3' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_SetBattleParticle, K2Node_DynamicCast_bSuccess_3) == 0x000278, "Member 'BPC_PsychicBattle_C_SetBattleParticle::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_SetBattleParticle, CallFunc_GetAppendMeshEnemy_MeshComp_1) == 0x000280, "Member 'BPC_PsychicBattle_C_SetBattleParticle::CallFunc_GetAppendMeshEnemy_MeshComp_1' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_SetBattleParticle, CallFunc_GetAppendMeshPlayer_MeshComp_1) == 0x000288, "Member 'BPC_PsychicBattle_C_SetBattleParticle::CallFunc_GetAppendMeshPlayer_MeshComp_1' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_SetBattleParticle, CallFunc_SpawnEmitterAttached_ReturnValue) == 0x000290, "Member 'BPC_PsychicBattle_C_SetBattleParticle::CallFunc_SpawnEmitterAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_SetBattleParticle, CallFunc_Array_Add_ReturnValue) == 0x000298, "Member 'BPC_PsychicBattle_C_SetBattleParticle::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_SetBattleParticle, CallFunc_IsValid_ReturnValue_5) == 0x00029C, "Member 'BPC_PsychicBattle_C_SetBattleParticle::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_SetBattleParticle, CallFunc_SpawnEmitterAttached_ReturnValue_1) == 0x0002A0, "Member 'BPC_PsychicBattle_C_SetBattleParticle::CallFunc_SpawnEmitterAttached_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_SetBattleParticle, CallFunc_Array_Add_ReturnValue_1) == 0x0002A8, "Member 'BPC_PsychicBattle_C_SetBattleParticle::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_SetBattleParticle, CallFunc_IsValid_ReturnValue_6) == 0x0002AC, "Member 'BPC_PsychicBattle_C_SetBattleParticle::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_SetBattleParticle, CallFunc_IsValid_ReturnValue_7) == 0x0002AD, "Member 'BPC_PsychicBattle_C_SetBattleParticle::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_SetBattleParticle, CallFunc_IsValid_ReturnValue_8) == 0x0002AE, "Member 'BPC_PsychicBattle_C_SetBattleParticle::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_SetBattleParticle, CallFunc_SpawnEmitterAttached_ReturnValue_2) == 0x0002B0, "Member 'BPC_PsychicBattle_C_SetBattleParticle::CallFunc_SpawnEmitterAttached_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_SetBattleParticle, CallFunc_Array_Add_ReturnValue_2) == 0x0002B8, "Member 'BPC_PsychicBattle_C_SetBattleParticle::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_SetBattleParticle, CallFunc_SpawnEmitterAttached_ReturnValue_3) == 0x0002C0, "Member 'BPC_PsychicBattle_C_SetBattleParticle::CallFunc_SpawnEmitterAttached_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_SetBattleParticle, CallFunc_IsValid_ReturnValue_9) == 0x0002C8, "Member 'BPC_PsychicBattle_C_SetBattleParticle::CallFunc_IsValid_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_SetBattleParticle, CallFunc_Array_Add_ReturnValue_3) == 0x0002CC, "Member 'BPC_PsychicBattle_C_SetBattleParticle::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_SetBattleParticle, CallFunc_IsValid_ReturnValue_10) == 0x0002D0, "Member 'BPC_PsychicBattle_C_SetBattleParticle::CallFunc_IsValid_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_SetBattleParticle, CallFunc_IsValid_ReturnValue_11) == 0x0002D1, "Member 'BPC_PsychicBattle_C_SetBattleParticle::CallFunc_IsValid_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_SetBattleParticle, CallFunc_SpawnEmitterAttached_ReturnValue_4) == 0x0002D8, "Member 'BPC_PsychicBattle_C_SetBattleParticle::CallFunc_SpawnEmitterAttached_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_SetBattleParticle, CallFunc_Array_Add_ReturnValue_4) == 0x0002E0, "Member 'BPC_PsychicBattle_C_SetBattleParticle::CallFunc_Array_Add_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_SetBattleParticle, Temp_int_Loop_Counter_Variable) == 0x0002E4, "Member 'BPC_PsychicBattle_C_SetBattleParticle::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_SetBattleParticle, CallFunc_IsValid_ReturnValue_12) == 0x0002E8, "Member 'BPC_PsychicBattle_C_SetBattleParticle::CallFunc_IsValid_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_SetBattleParticle, CallFunc_Less_IntInt_ReturnValue) == 0x0002E9, "Member 'BPC_PsychicBattle_C_SetBattleParticle::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_SetBattleParticle, CallFunc_Add_IntInt_ReturnValue) == 0x0002EC, "Member 'BPC_PsychicBattle_C_SetBattleParticle::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_SetBattleParticle, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0002F0, "Member 'BPC_PsychicBattle_C_SetBattleParticle::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_SetBattleParticle, CallFunc_SpawnEmitterAttached_ReturnValue_5) == 0x0002F8, "Member 'BPC_PsychicBattle_C_SetBattleParticle::CallFunc_SpawnEmitterAttached_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_SetBattleParticle, CallFunc_Array_Add_ReturnValue_5) == 0x000300, "Member 'BPC_PsychicBattle_C_SetBattleParticle::CallFunc_Array_Add_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_SetBattleParticle, CallFunc_IsValid_ReturnValue_13) == 0x000304, "Member 'BPC_PsychicBattle_C_SetBattleParticle::CallFunc_IsValid_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_SetBattleParticle, CallFunc_Array_Length_ReturnValue_1) == 0x000308, "Member 'BPC_PsychicBattle_C_SetBattleParticle::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_SetBattleParticle, CallFunc_Greater_IntInt_ReturnValue) == 0x00030C, "Member 'BPC_PsychicBattle_C_SetBattleParticle::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BPC_PsychicBattle.BPC_PsychicBattle_C.SetPsychicObjectActor
// 0x0008 (0x0008 - 0x0000)
struct BPC_PsychicBattle_C_SetPsychicObjectActor final
{
public:
	class ABP_PsychicObjectBasic_C*               Param_PsychicObjectActor;                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_PsychicBattle_C_SetPsychicObjectActor) == 0x000008, "Wrong alignment on BPC_PsychicBattle_C_SetPsychicObjectActor");
static_assert(sizeof(BPC_PsychicBattle_C_SetPsychicObjectActor) == 0x000008, "Wrong size on BPC_PsychicBattle_C_SetPsychicObjectActor");
static_assert(offsetof(BPC_PsychicBattle_C_SetPsychicObjectActor, Param_PsychicObjectActor) == 0x000000, "Member 'BPC_PsychicBattle_C_SetPsychicObjectActor::Param_PsychicObjectActor' has a wrong offset!");

// Function BPC_PsychicBattle.BPC_PsychicBattle_C.EventEmitPoleParticle
// 0x0058 (0x0058 - 0x0000)
struct BPC_PsychicBattle_C_EventEmitPoleParticle final
{
public:
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_883A[0x6];                                     // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PsychicBattleObject_C> K2Node_DynamicCast_AsBPI_Psychic_Battle_Object;    // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_883B[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   CallFunc_GetAppendMeshPlayer_MeshComp;             // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_883C[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_883D[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URSParticleSystemComponentBase*         CallFunc_SpawnEmitterAttached_ReturnValue;         // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_PsychicBattle_C_EventEmitPoleParticle) == 0x000008, "Wrong alignment on BPC_PsychicBattle_C_EventEmitPoleParticle");
static_assert(sizeof(BPC_PsychicBattle_C_EventEmitPoleParticle) == 0x000058, "Wrong size on BPC_PsychicBattle_C_EventEmitPoleParticle");
static_assert(offsetof(BPC_PsychicBattle_C_EventEmitPoleParticle, Temp_int_Loop_Counter_Variable) == 0x000000, "Member 'BPC_PsychicBattle_C_EventEmitPoleParticle::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_EventEmitPoleParticle, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'BPC_PsychicBattle_C_EventEmitPoleParticle::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_EventEmitPoleParticle, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BPC_PsychicBattle_C_EventEmitPoleParticle::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_EventEmitPoleParticle, Temp_int_Loop_Num_Variable) == 0x00000C, "Member 'BPC_PsychicBattle_C_EventEmitPoleParticle::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_EventEmitPoleParticle, CallFunc_Less_IntInt_ReturnValue) == 0x000010, "Member 'BPC_PsychicBattle_C_EventEmitPoleParticle::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_EventEmitPoleParticle, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'BPC_PsychicBattle_C_EventEmitPoleParticle::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_EventEmitPoleParticle, K2Node_DynamicCast_AsBPI_Psychic_Battle_Object) == 0x000018, "Member 'BPC_PsychicBattle_C_EventEmitPoleParticle::K2Node_DynamicCast_AsBPI_Psychic_Battle_Object' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_EventEmitPoleParticle, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BPC_PsychicBattle_C_EventEmitPoleParticle::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_EventEmitPoleParticle, CallFunc_GetAppendMeshPlayer_MeshComp) == 0x000030, "Member 'BPC_PsychicBattle_C_EventEmitPoleParticle::CallFunc_GetAppendMeshPlayer_MeshComp' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_EventEmitPoleParticle, CallFunc_IsValid_ReturnValue_1) == 0x000038, "Member 'BPC_PsychicBattle_C_EventEmitPoleParticle::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_EventEmitPoleParticle, CallFunc_Array_Length_ReturnValue) == 0x00003C, "Member 'BPC_PsychicBattle_C_EventEmitPoleParticle::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_EventEmitPoleParticle, CallFunc_IsValid_ReturnValue_2) == 0x000040, "Member 'BPC_PsychicBattle_C_EventEmitPoleParticle::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_EventEmitPoleParticle, CallFunc_SpawnEmitterAttached_ReturnValue) == 0x000048, "Member 'BPC_PsychicBattle_C_EventEmitPoleParticle::CallFunc_SpawnEmitterAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_EventEmitPoleParticle, CallFunc_Array_Add_ReturnValue) == 0x000050, "Member 'BPC_PsychicBattle_C_EventEmitPoleParticle::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BPC_PsychicBattle.BPC_PsychicBattle_C.EventChangePoleBreak
// 0x0020 (0x0020 - 0x0000)
struct BPC_PsychicBattle_C_EventChangePoleBreak final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_883E[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PsychicBattleObject_C> K2Node_DynamicCast_AsBPI_Psychic_Battle_Object;    // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPC_PsychicBattle_C_EventChangePoleBreak) == 0x000008, "Wrong alignment on BPC_PsychicBattle_C_EventChangePoleBreak");
static_assert(sizeof(BPC_PsychicBattle_C_EventChangePoleBreak) == 0x000020, "Wrong size on BPC_PsychicBattle_C_EventChangePoleBreak");
static_assert(offsetof(BPC_PsychicBattle_C_EventChangePoleBreak, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BPC_PsychicBattle_C_EventChangePoleBreak::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_EventChangePoleBreak, K2Node_DynamicCast_AsBPI_Psychic_Battle_Object) == 0x000008, "Member 'BPC_PsychicBattle_C_EventChangePoleBreak::K2Node_DynamicCast_AsBPI_Psychic_Battle_Object' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_EventChangePoleBreak, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BPC_PsychicBattle_C_EventChangePoleBreak::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_EventChangePoleBreak, CallFunc_IsValid_ReturnValue_1) == 0x000019, "Member 'BPC_PsychicBattle_C_EventChangePoleBreak::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BPC_PsychicBattle.BPC_PsychicBattle_C.ProtectedSetupPlayRangeMarkWait
// 0x0020 (0x0020 - 0x0000)
struct BPC_PsychicBattle_C_ProtectedSetupPlayRangeMarkWait final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue;            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ProtectedSetupPlayRangeMarkInternal_HasMark; // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPC_PsychicBattle_C_ProtectedSetupPlayRangeMarkWait) == 0x000008, "Wrong alignment on BPC_PsychicBattle_C_ProtectedSetupPlayRangeMarkWait");
static_assert(sizeof(BPC_PsychicBattle_C_ProtectedSetupPlayRangeMarkWait) == 0x000020, "Wrong size on BPC_PsychicBattle_C_ProtectedSetupPlayRangeMarkWait");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedSetupPlayRangeMarkWait, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'BPC_PsychicBattle_C_ProtectedSetupPlayRangeMarkWait::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedSetupPlayRangeMarkWait, CallFunc_GetSequencePlayer_ReturnValue) == 0x000010, "Member 'BPC_PsychicBattle_C_ProtectedSetupPlayRangeMarkWait::CallFunc_GetSequencePlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedSetupPlayRangeMarkWait, CallFunc_ProtectedSetupPlayRangeMarkInternal_HasMark) == 0x000018, "Member 'BPC_PsychicBattle_C_ProtectedSetupPlayRangeMarkWait::CallFunc_ProtectedSetupPlayRangeMarkInternal_HasMark' has a wrong offset!");

// Function BPC_PsychicBattle.BPC_PsychicBattle_C.ProtectedSetupPlayRangeMarkSkip
// 0x0020 (0x0020 - 0x0000)
struct BPC_PsychicBattle_C_ProtectedSetupPlayRangeMarkSkip final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue;            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ProtectedSetupPlayRangeMarkInternal_HasMark; // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPC_PsychicBattle_C_ProtectedSetupPlayRangeMarkSkip) == 0x000008, "Wrong alignment on BPC_PsychicBattle_C_ProtectedSetupPlayRangeMarkSkip");
static_assert(sizeof(BPC_PsychicBattle_C_ProtectedSetupPlayRangeMarkSkip) == 0x000020, "Wrong size on BPC_PsychicBattle_C_ProtectedSetupPlayRangeMarkSkip");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedSetupPlayRangeMarkSkip, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'BPC_PsychicBattle_C_ProtectedSetupPlayRangeMarkSkip::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedSetupPlayRangeMarkSkip, CallFunc_GetSequencePlayer_ReturnValue) == 0x000010, "Member 'BPC_PsychicBattle_C_ProtectedSetupPlayRangeMarkSkip::CallFunc_GetSequencePlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedSetupPlayRangeMarkSkip, CallFunc_ProtectedSetupPlayRangeMarkInternal_HasMark) == 0x000018, "Member 'BPC_PsychicBattle_C_ProtectedSetupPlayRangeMarkSkip::CallFunc_ProtectedSetupPlayRangeMarkInternal_HasMark' has a wrong offset!");

// Function BPC_PsychicBattle.BPC_PsychicBattle_C.ProtectedSetupPlayRangeMarkInternal
// 0x00D0 (0x00D0 - 0x0000)
struct BPC_PsychicBattle_C_ProtectedSetupPlayRangeMarkInternal final
{
public:
	class FString                                 MarkName;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          HasMark;                                           // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ValidMark;                                         // 0x0011(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_883F[0x6];                                     // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0018(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0030(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0070(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0080(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue;            // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue_1;          // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue_2;          // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFrameTime                             CallFunc_GetMarkedFrameByLabel_MarkTime;           // 0x00C0(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetMarkedFrameByLabel_ReturnValue;        // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPC_PsychicBattle_C_ProtectedSetupPlayRangeMarkInternal) == 0x000008, "Wrong alignment on BPC_PsychicBattle_C_ProtectedSetupPlayRangeMarkInternal");
static_assert(sizeof(BPC_PsychicBattle_C_ProtectedSetupPlayRangeMarkInternal) == 0x0000D0, "Wrong size on BPC_PsychicBattle_C_ProtectedSetupPlayRangeMarkInternal");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedSetupPlayRangeMarkInternal, MarkName) == 0x000000, "Member 'BPC_PsychicBattle_C_ProtectedSetupPlayRangeMarkInternal::MarkName' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedSetupPlayRangeMarkInternal, HasMark) == 0x000010, "Member 'BPC_PsychicBattle_C_ProtectedSetupPlayRangeMarkInternal::HasMark' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedSetupPlayRangeMarkInternal, ValidMark) == 0x000011, "Member 'BPC_PsychicBattle_C_ProtectedSetupPlayRangeMarkInternal::ValidMark' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedSetupPlayRangeMarkInternal, CallFunc_Conv_StringToText_ReturnValue) == 0x000018, "Member 'BPC_PsychicBattle_C_ProtectedSetupPlayRangeMarkInternal::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedSetupPlayRangeMarkInternal, K2Node_MakeStruct_FormatArgumentData) == 0x000030, "Member 'BPC_PsychicBattle_C_ProtectedSetupPlayRangeMarkInternal::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedSetupPlayRangeMarkInternal, K2Node_MakeArray_Array) == 0x000070, "Member 'BPC_PsychicBattle_C_ProtectedSetupPlayRangeMarkInternal::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedSetupPlayRangeMarkInternal, CallFunc_Format_ReturnValue) == 0x000080, "Member 'BPC_PsychicBattle_C_ProtectedSetupPlayRangeMarkInternal::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedSetupPlayRangeMarkInternal, CallFunc_Conv_TextToString_ReturnValue) == 0x000098, "Member 'BPC_PsychicBattle_C_ProtectedSetupPlayRangeMarkInternal::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedSetupPlayRangeMarkInternal, CallFunc_GetSequencePlayer_ReturnValue) == 0x0000A8, "Member 'BPC_PsychicBattle_C_ProtectedSetupPlayRangeMarkInternal::CallFunc_GetSequencePlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedSetupPlayRangeMarkInternal, CallFunc_GetSequencePlayer_ReturnValue_1) == 0x0000B0, "Member 'BPC_PsychicBattle_C_ProtectedSetupPlayRangeMarkInternal::CallFunc_GetSequencePlayer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedSetupPlayRangeMarkInternal, CallFunc_GetSequencePlayer_ReturnValue_2) == 0x0000B8, "Member 'BPC_PsychicBattle_C_ProtectedSetupPlayRangeMarkInternal::CallFunc_GetSequencePlayer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedSetupPlayRangeMarkInternal, CallFunc_GetMarkedFrameByLabel_MarkTime) == 0x0000C0, "Member 'BPC_PsychicBattle_C_ProtectedSetupPlayRangeMarkInternal::CallFunc_GetMarkedFrameByLabel_MarkTime' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedSetupPlayRangeMarkInternal, CallFunc_GetMarkedFrameByLabel_ReturnValue) == 0x0000C8, "Member 'BPC_PsychicBattle_C_ProtectedSetupPlayRangeMarkInternal::CallFunc_GetMarkedFrameByLabel_ReturnValue' has a wrong offset!");

// Function BPC_PsychicBattle.BPC_PsychicBattle_C.PrivateSetBGActorsDither
// 0x0028 (0x0028 - 0x0000)
struct BPC_PsychicBattle_C_PrivateSetBGActorsDither final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          OneShot;                                           // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8840[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DeltaSeconds;                                      // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8841[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ReferenceParm, HasGetValueTypeHash)
	float                                         CallFunc_SetupCutSceneActorHideDither_UpdatedTime; // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_PsychicBattle_C_PrivateSetBGActorsDither) == 0x000008, "Wrong alignment on BPC_PsychicBattle_C_PrivateSetBGActorsDither");
static_assert(sizeof(BPC_PsychicBattle_C_PrivateSetBGActorsDither) == 0x000028, "Wrong size on BPC_PsychicBattle_C_PrivateSetBGActorsDither");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateSetBGActorsDither, Visible) == 0x000000, "Member 'BPC_PsychicBattle_C_PrivateSetBGActorsDither::Visible' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateSetBGActorsDither, OneShot) == 0x000001, "Member 'BPC_PsychicBattle_C_PrivateSetBGActorsDither::OneShot' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateSetBGActorsDither, DeltaSeconds) == 0x000004, "Member 'BPC_PsychicBattle_C_PrivateSetBGActorsDither::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateSetBGActorsDither, CallFunc_Not_PreBool_ReturnValue) == 0x000008, "Member 'BPC_PsychicBattle_C_PrivateSetBGActorsDither::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateSetBGActorsDither, CallFunc_SelectFloat_ReturnValue) == 0x00000C, "Member 'BPC_PsychicBattle_C_PrivateSetBGActorsDither::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateSetBGActorsDither, K2Node_MakeArray_Array) == 0x000010, "Member 'BPC_PsychicBattle_C_PrivateSetBGActorsDither::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateSetBGActorsDither, CallFunc_SetupCutSceneActorHideDither_UpdatedTime) == 0x000020, "Member 'BPC_PsychicBattle_C_PrivateSetBGActorsDither::CallFunc_SetupCutSceneActorHideDither_UpdatedTime' has a wrong offset!");

// Function BPC_PsychicBattle.BPC_PsychicBattle_C.PrivateUpdateBGActorsDither
// 0x0004 (0x0004 - 0x0000)
struct BPC_PsychicBattle_C_PrivateUpdateBGActorsDither final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_PsychicBattle_C_PrivateUpdateBGActorsDither) == 0x000004, "Wrong alignment on BPC_PsychicBattle_C_PrivateUpdateBGActorsDither");
static_assert(sizeof(BPC_PsychicBattle_C_PrivateUpdateBGActorsDither) == 0x000004, "Wrong size on BPC_PsychicBattle_C_PrivateUpdateBGActorsDither");
static_assert(offsetof(BPC_PsychicBattle_C_PrivateUpdateBGActorsDither, DeltaSeconds) == 0x000000, "Member 'BPC_PsychicBattle_C_PrivateUpdateBGActorsDither::DeltaSeconds' has a wrong offset!");

// Function BPC_PsychicBattle.BPC_PsychicBattle_C.IsPlaying
// 0x0001 (0x0001 - 0x0000)
struct BPC_PsychicBattle_C_IsPlaying final
{
public:
	bool                                          Param_Playing;                                     // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPC_PsychicBattle_C_IsPlaying) == 0x000001, "Wrong alignment on BPC_PsychicBattle_C_IsPlaying");
static_assert(sizeof(BPC_PsychicBattle_C_IsPlaying) == 0x000001, "Wrong size on BPC_PsychicBattle_C_IsPlaying");
static_assert(offsetof(BPC_PsychicBattle_C_IsPlaying, Param_Playing) == 0x000000, "Member 'BPC_PsychicBattle_C_IsPlaying::Param_Playing' has a wrong offset!");

// Function BPC_PsychicBattle.BPC_PsychicBattle_C.ProtectedIsPlayerCh0100
// 0x0003 (0x0003 - 0x0000)
struct BPC_PsychicBattle_C_ProtectedIsPlayerCh0100 final
{
public:
	EPlayerID                                     UserPlayerID;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Ch0100;                                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPC_PsychicBattle_C_ProtectedIsPlayerCh0100) == 0x000001, "Wrong alignment on BPC_PsychicBattle_C_ProtectedIsPlayerCh0100");
static_assert(sizeof(BPC_PsychicBattle_C_ProtectedIsPlayerCh0100) == 0x000003, "Wrong size on BPC_PsychicBattle_C_ProtectedIsPlayerCh0100");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedIsPlayerCh0100, UserPlayerID) == 0x000000, "Member 'BPC_PsychicBattle_C_ProtectedIsPlayerCh0100::UserPlayerID' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedIsPlayerCh0100, Ch0100) == 0x000001, "Member 'BPC_PsychicBattle_C_ProtectedIsPlayerCh0100::Ch0100' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedIsPlayerCh0100, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000002, "Member 'BPC_PsychicBattle_C_ProtectedIsPlayerCh0100::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BPC_PsychicBattle.BPC_PsychicBattle_C.IsBattleSequence
// 0x0001 (0x0001 - 0x0000)
struct BPC_PsychicBattle_C_IsBattleSequence final
{
public:
	bool                                          Param_Playing;                                     // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPC_PsychicBattle_C_IsBattleSequence) == 0x000001, "Wrong alignment on BPC_PsychicBattle_C_IsBattleSequence");
static_assert(sizeof(BPC_PsychicBattle_C_IsBattleSequence) == 0x000001, "Wrong size on BPC_PsychicBattle_C_IsBattleSequence");
static_assert(offsetof(BPC_PsychicBattle_C_IsBattleSequence, Param_Playing) == 0x000000, "Member 'BPC_PsychicBattle_C_IsBattleSequence::Param_Playing' has a wrong offset!");

// Function BPC_PsychicBattle.BPC_PsychicBattle_C.ProtectedGetLevelSequenceInternal
// 0x0030 (0x0030 - 0x0000)
struct BPC_PsychicBattle_C_ProtectedGetLevelSequenceInternal final
{
public:
	EPsychicBattleType                            PsychicBattleType;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8842[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ULevelSequence*>                 AssetList;                                         // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	class ULevelSequence*                         Asset;                                             // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8843[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelSequence*                         CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_PsychicBattle_C_ProtectedGetLevelSequenceInternal) == 0x000008, "Wrong alignment on BPC_PsychicBattle_C_ProtectedGetLevelSequenceInternal");
static_assert(sizeof(BPC_PsychicBattle_C_ProtectedGetLevelSequenceInternal) == 0x000030, "Wrong size on BPC_PsychicBattle_C_ProtectedGetLevelSequenceInternal");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedGetLevelSequenceInternal, PsychicBattleType) == 0x000000, "Member 'BPC_PsychicBattle_C_ProtectedGetLevelSequenceInternal::PsychicBattleType' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedGetLevelSequenceInternal, AssetList) == 0x000008, "Member 'BPC_PsychicBattle_C_ProtectedGetLevelSequenceInternal::AssetList' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedGetLevelSequenceInternal, Asset) == 0x000018, "Member 'BPC_PsychicBattle_C_ProtectedGetLevelSequenceInternal::Asset' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedGetLevelSequenceInternal, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000020, "Member 'BPC_PsychicBattle_C_ProtectedGetLevelSequenceInternal::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedGetLevelSequenceInternal, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000024, "Member 'BPC_PsychicBattle_C_ProtectedGetLevelSequenceInternal::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_PsychicBattle_C_ProtectedGetLevelSequenceInternal, CallFunc_Array_Get_Item) == 0x000028, "Member 'BPC_PsychicBattle_C_ProtectedGetLevelSequenceInternal::CallFunc_Array_Get_Item' has a wrong offset!");

// Function BPC_PsychicBattle.BPC_PsychicBattle_C.IsInitialize
// 0x0001 (0x0001 - 0x0000)
struct BPC_PsychicBattle_C_IsInitialize final
{
public:
	bool                                          Param_Initialized;                                 // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPC_PsychicBattle_C_IsInitialize) == 0x000001, "Wrong alignment on BPC_PsychicBattle_C_IsInitialize");
static_assert(sizeof(BPC_PsychicBattle_C_IsInitialize) == 0x000001, "Wrong size on BPC_PsychicBattle_C_IsInitialize");
static_assert(offsetof(BPC_PsychicBattle_C_IsInitialize, Param_Initialized) == 0x000000, "Member 'BPC_PsychicBattle_C_IsInitialize::Param_Initialized' has a wrong offset!");

}

