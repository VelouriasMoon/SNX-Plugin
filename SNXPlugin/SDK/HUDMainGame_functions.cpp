#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HUDMainGame

#include "Basic.hpp"

#include "HUDMainGame_classes.hpp"
#include "HUDMainGame_parameters.hpp"


namespace SDK
{

// Function HUDMainGame.HUDMainGame_C.BattleDamage2D__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D                        Position2D                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsPlayer                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsCritical                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsSasCritical                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsBrainCrashCritical                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsHeal                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsWeak                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsNoDamage                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AHUDMainGame_C::BattleDamage2D__DelegateSignature(int32 Damage, const struct FVector2D& Position2D, bool IsPlayer, bool IsCritical, bool IsSasCritical, bool IsBrainCrashCritical, bool IsHeal, bool IsWeak, bool IsNoDamage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "BattleDamage2D__DelegateSignature");

	Params::HUDMainGame_C_BattleDamage2D__DelegateSignature Parms{};

	Parms.Damage = Damage;
	Parms.Position2D = std::move(Position2D);
	Parms.IsPlayer = IsPlayer;
	Parms.IsCritical = IsCritical;
	Parms.IsSasCritical = IsSasCritical;
	Parms.IsBrainCrashCritical = IsBrainCrashCritical;
	Parms.IsHeal = IsHeal;
	Parms.IsWeak = IsWeak;
	Parms.IsNoDamage = IsNoDamage;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUDMainGame.HUDMainGame_C.BattleDamage3D__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Position3D                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsPlayer                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsCritical                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsSasCritical                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsBrainCrashCritical                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsHeal                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsWeak                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsNoDamage                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class ARSBattleCharacter_C*             CrushTarget                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CrushBonus                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D                        Offset                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AHUDMainGame_C::BattleDamage3D__DelegateSignature(int32 Damage, const struct FVector& Position3D, bool IsPlayer, bool IsCritical, bool IsSasCritical, bool IsBrainCrashCritical, bool IsHeal, bool IsWeak, bool IsNoDamage, class ARSBattleCharacter_C* CrushTarget, int32 CrushBonus, const struct FVector2D& Offset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "BattleDamage3D__DelegateSignature");

	Params::HUDMainGame_C_BattleDamage3D__DelegateSignature Parms{};

	Parms.Damage = Damage;
	Parms.Position3D = std::move(Position3D);
	Parms.IsPlayer = IsPlayer;
	Parms.IsCritical = IsCritical;
	Parms.IsSasCritical = IsSasCritical;
	Parms.IsBrainCrashCritical = IsBrainCrashCritical;
	Parms.IsHeal = IsHeal;
	Parms.IsWeak = IsWeak;
	Parms.IsNoDamage = IsNoDamage;
	Parms.CrushTarget = CrushTarget;
	Parms.CrushBonus = CrushBonus;
	Parms.Offset = std::move(Offset);

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUDMainGame.HUDMainGame_C.OnMainContentsUIClose__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void AHUDMainGame_C::OnMainContentsUIClose__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "OnMainContentsUIClose__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HUDMainGame.HUDMainGame_C.OnPlayDecideAnimeBrainTuto__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void AHUDMainGame_C::OnPlayDecideAnimeBrainTuto__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "OnPlayDecideAnimeBrainTuto__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HUDMainGame.HUDMainGame_C.ExecuteUbergraph_HUDMainGame
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AHUDMainGame_C::ExecuteUbergraph_HUDMainGame(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "ExecuteUbergraph_HUDMainGame");

	Params::HUDMainGame_C_ExecuteUbergraph_HUDMainGame Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUDMainGame.HUDMainGame_C.startPhotoModeUI
// (Event, Public, BlueprintCallable, BlueprintEvent)

void AHUDMainGame_C::StartPhotoModeUI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "startPhotoModeUI");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HUDMainGame.HUDMainGame_C.startVisionSimulatorEnd
// (Event, Public, BlueprintCallable, BlueprintEvent)

void AHUDMainGame_C::StartVisionSimulatorEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "startVisionSimulatorEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HUDMainGame.HUDMainGame_C.startVisionSimulatorStart
// (Event, Public, BlueprintCallable, BlueprintEvent)

void AHUDMainGame_C::StartVisionSimulatorStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "startVisionSimulatorStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HUDMainGame.HUDMainGame_C.startVisionSimulatorSelect
// (Event, Public, BlueprintCallable, BlueprintEvent)

void AHUDMainGame_C::StartVisionSimulatorSelect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "startVisionSimulatorSelect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HUDMainGame.HUDMainGame_C.PauseBrainTalkForEventFromNative
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsPause                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AHUDMainGame_C::PauseBrainTalkForEventFromNative(const bool IsPause)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "PauseBrainTalkForEventFromNative");

	Params::HUDMainGame_C_PauseBrainTalkForEventFromNative Parms{};

	Parms.IsPause = IsPause;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUDMainGame.HUDMainGame_C.RemoveCustomTimeDilation_FromNative
// (Event, Public, BlueprintEvent)
// Parameters:
// class FString                           Param_Name                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void AHUDMainGame_C::RemoveCustomTimeDilation_FromNative(const class FString& Param_Name)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "RemoveCustomTimeDilation_FromNative");

	Params::HUDMainGame_C_RemoveCustomTimeDilation_FromNative Parms{};

	Parms.Param_Name = std::move(Param_Name);

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUDMainGame.HUDMainGame_C.SetCustomTimeDilation_FromNative
// (Event, Public, BlueprintEvent)
// Parameters:
// class FString                           Param_Name                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// float                                   CurrentCustomTimeDilation                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AHUDMainGame_C::SetCustomTimeDilation_FromNative(const class FString& Param_Name, float CurrentCustomTimeDilation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "SetCustomTimeDilation_FromNative");

	Params::HUDMainGame_C_SetCustomTimeDilation_FromNative Parms{};

	Parms.Param_Name = std::move(Param_Name);
	Parms.CurrentCustomTimeDilation = CurrentCustomTimeDilation;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUDMainGame.HUDMainGame_C.Event_SetPlayer
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ARsBattleHero_C*                  Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AHUDMainGame_C::Event_SetPlayer(class ARsBattleHero_C* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "Event_SetPlayer");

	Params::HUDMainGame_C_Event_SetPlayer Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUDMainGame.HUDMainGame_C.StopBrainTalkVoiceFromNative
// (Event, Public, BlueprintEvent)

void AHUDMainGame_C::StopBrainTalkVoiceFromNative()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "StopBrainTalkVoiceFromNative");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HUDMainGame.HUDMainGame_C.CloseBrainTalkFromNative
// (Event, Public, BlueprintEvent)

void AHUDMainGame_C::CloseBrainTalkFromNative()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "CloseBrainTalkFromNative");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HUDMainGame.HUDMainGame_C.OpenBrainTalkFromNative
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   CharacterId                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ExpressionID                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           MessageID                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// float                                   DrawSecond                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AHUDMainGame_C::OpenBrainTalkFromNative(const int32 CharacterId, const int32 ExpressionID, const class FString& MessageID, const float DrawSecond)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "OpenBrainTalkFromNative");

	Params::HUDMainGame_C_OpenBrainTalkFromNative Parms{};

	Parms.CharacterId = CharacterId;
	Parms.ExpressionID = ExpressionID;
	Parms.MessageID = std::move(MessageID);
	Parms.DrawSecond = DrawSecond;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUDMainGame.HUDMainGame_C.OnOpenBrainMessage
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// ERSGamepadLayoutType                    Layout                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ERSGamepadInputName                     Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AHUDMainGame_C::OnOpenBrainMessage(ERSGamepadLayoutType Layout, ERSGamepadInputName Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "OnOpenBrainMessage");

	Params::HUDMainGame_C_OnOpenBrainMessage Parms{};

	Parms.Layout = Layout;
	Parms.Key = Key;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUDMainGame.HUDMainGame_C.StartStaffRoll
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Speed                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AHUDMainGame_C::StartStaffRoll(float Speed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "StartStaffRoll");

	Params::HUDMainGame_C_StartStaffRoll Parms{};

	Parms.Speed = Speed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUDMainGame.HUDMainGame_C.BattleDamage_3D_Event
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Position3D                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsPlayer                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsCritical                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsSasCritical                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsBrainCrashCritical                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsHeal                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsWeak                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsNoDamage                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class ARSBattleCharacter_C*             CrushTarget                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CrushBonus                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D                        Offset                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AHUDMainGame_C::BattleDamage_3D_Event(int32 Damage, const struct FVector& Position3D, bool IsPlayer, bool IsCritical, bool IsSasCritical, bool IsBrainCrashCritical, bool IsHeal, bool IsWeak, bool IsNoDamage, class ARSBattleCharacter_C* CrushTarget, int32 CrushBonus, const struct FVector2D& Offset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "BattleDamage_3D_Event");

	Params::HUDMainGame_C_BattleDamage_3D_Event Parms{};

	Parms.Damage = Damage;
	Parms.Position3D = std::move(Position3D);
	Parms.IsPlayer = IsPlayer;
	Parms.IsCritical = IsCritical;
	Parms.IsSasCritical = IsSasCritical;
	Parms.IsBrainCrashCritical = IsBrainCrashCritical;
	Parms.IsHeal = IsHeal;
	Parms.IsWeak = IsWeak;
	Parms.IsNoDamage = IsNoDamage;
	Parms.CrushTarget = CrushTarget;
	Parms.CrushBonus = CrushBonus;
	Parms.Offset = std::move(Offset);

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUDMainGame.HUDMainGame_C.BattleDamage2D_Event
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D                        Position2D                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsPlayer                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsCritical                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsSasCritical                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsBrainCrashCritical                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsHeal                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsWeak                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsNoDamage                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AHUDMainGame_C::BattleDamage2D_Event(int32 Damage, const struct FVector2D& Position2D, bool IsPlayer, bool IsCritical, bool IsSasCritical, bool IsBrainCrashCritical, bool IsHeal, bool IsWeak, bool IsNoDamage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "BattleDamage2D_Event");

	Params::HUDMainGame_C_BattleDamage2D_Event Parms{};

	Parms.Damage = Damage;
	Parms.Position2D = std::move(Position2D);
	Parms.IsPlayer = IsPlayer;
	Parms.IsCritical = IsCritical;
	Parms.IsSasCritical = IsSasCritical;
	Parms.IsBrainCrashCritical = IsBrainCrashCritical;
	Parms.IsHeal = IsHeal;
	Parms.IsWeak = IsWeak;
	Parms.IsNoDamage = IsNoDamage;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUDMainGame.HUDMainGame_C.OnOpenDetailmap
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// ERSGamepadLayoutType                    Layout                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ERSGamepadInputName                     Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AHUDMainGame_C::OnOpenDetailmap(ERSGamepadLayoutType Layout, ERSGamepadInputName Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "OnOpenDetailmap");

	Params::HUDMainGame_C_OnOpenDetailmap Parms{};

	Parms.Layout = Layout;
	Parms.Key = Key;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUDMainGame.HUDMainGame_C.OnOpenMenu
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// ERSGamepadLayoutType                    Layout                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ERSGamepadInputName                     Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AHUDMainGame_C::OnOpenMenu(ERSGamepadLayoutType Layout, ERSGamepadInputName Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "OnOpenMenu");

	Params::HUDMainGame_C_OnOpenMenu Parms{};

	Parms.Layout = Layout;
	Parms.Key = Key;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUDMainGame.HUDMainGame_C.OnOpenWorldmap
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// ERSGamepadLayoutType                    Layout                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ERSGamepadInputName                     Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AHUDMainGame_C::OnOpenWorldmap(ERSGamepadLayoutType Layout, ERSGamepadInputName Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "OnOpenWorldmap");

	Params::HUDMainGame_C_OnOpenWorldmap Parms{};

	Parms.Layout = Layout;
	Parms.Key = Key;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUDMainGame.HUDMainGame_C.Event_PlayBrainTalkVoice
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DelaySecond                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AHUDMainGame_C::Event_PlayBrainTalkVoice(float DelaySecond)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "Event_PlayBrainTalkVoice");

	Params::HUDMainGame_C_Event_PlayBrainTalkVoice Parms{};

	Parms.DelaySecond = DelaySecond;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUDMainGame.HUDMainGame_C.Event_CrushBonus
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   bonus                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AHUDMainGame_C::Event_CrushBonus(class AActor* Target, int32 bonus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "Event_CrushBonus");

	Params::HUDMainGame_C_Event_CrushBonus Parms{};

	Parms.Target = Target;
	Parms.bonus = bonus;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUDMainGame.HUDMainGame_C.OnInitialized
// (Event, Protected, BlueprintEvent)

void AHUDMainGame_C::OnInitialized()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "OnInitialized");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HUDMainGame.HUDMainGame_C.ReceiveActorBeginCursorOver
// (Event, Public, BlueprintEvent)

void AHUDMainGame_C::ReceiveActorBeginCursorOver()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "ReceiveActorBeginCursorOver");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HUDMainGame.HUDMainGame_C.DebugChangeVisible
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Visibleflag                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AHUDMainGame_C::DebugChangeVisible(bool Visibleflag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "DebugChangeVisible");

	Params::HUDMainGame_C_DebugChangeVisible Parms{};

	Parms.Visibleflag = Visibleflag;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUDMainGame.HUDMainGame_C.ReceiveDrawHUD
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// int32                                   SizeX                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   SizeY                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AHUDMainGame_C::ReceiveDrawHUD(int32 SizeX, int32 SizeY)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "ReceiveDrawHUD");

	Params::HUDMainGame_C_ReceiveDrawHUD Parms{};

	Parms.SizeX = SizeX;
	Parms.SizeY = SizeY;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUDMainGame.HUDMainGame_C.UpdateBossEnemyHpWidget
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ARSBattleCharacter_C*             Boss                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AHUDMainGame_C::UpdateBossEnemyHpWidget(class ARSBattleCharacter_C* Boss)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "UpdateBossEnemyHpWidget");

	Params::HUDMainGame_C_UpdateBossEnemyHpWidget Parms{};

	Parms.Boss = Boss;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUDMainGame.HUDMainGame_C.UpdatePlayerHpWidget
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ARSBattlePlayer_C*                Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AHUDMainGame_C::UpdatePlayerHpWidget(class ARSBattlePlayer_C* Player, int32 Param_Index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "UpdatePlayerHpWidget");

	Params::HUDMainGame_C_UpdatePlayerHpWidget Parms{};

	Parms.Player = Player;
	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUDMainGame.HUDMainGame_C.SetCharacterDamage
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CurrentHp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   BaseHp                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsAlways                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AHUDMainGame_C::SetCharacterDamage(class AActor* Target, int32 CurrentHp, int32 BaseHp, bool IsAlways, float Time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "SetCharacterDamage");

	Params::HUDMainGame_C_SetCharacterDamage Parms{};

	Parms.Target = Target;
	Parms.CurrentHp = CurrentHp;
	Parms.BaseHp = BaseHp;
	Parms.IsAlways = IsAlways;
	Parms.Time = Time;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUDMainGame.HUDMainGame_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AHUDMainGame_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "ReceiveTick");

	Params::HUDMainGame_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUDMainGame.HUDMainGame_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void AHUDMainGame_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HUDMainGame.HUDMainGame_C.KeyboardPressInputEvent
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AHUDMainGame_C::KeyboardPressInputEvent(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "KeyboardPressInputEvent");

	Params::HUDMainGame_C_KeyboardPressInputEvent Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUDMainGame.HUDMainGame_C.KeyboardReleaseInputEvent
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AHUDMainGame_C::KeyboardReleaseInputEvent(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "KeyboardReleaseInputEvent");

	Params::HUDMainGame_C_KeyboardReleaseInputEvent Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUDMainGame.HUDMainGame_C.InitBattleMenu
// (Public, BlueprintCallable, BlueprintEvent)

void AHUDMainGame_C::InitBattleMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "InitBattleMenu");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HUDMainGame.HUDMainGame_C.SetBrainCrashTarget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ARSBattleCharacter_C*             Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AHUDMainGame_C::SetBrainCrashTarget(class ARSBattleCharacter_C* Target, bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "SetBrainCrashTarget");

	Params::HUDMainGame_C_SetBrainCrashTarget Parms{};

	Parms.Target = Target;

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function HUDMainGame.HUDMainGame_C.InitMessageWidget
// (Public, BlueprintCallable, BlueprintEvent)

void AHUDMainGame_C::InitMessageWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "InitMessageWidget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HUDMainGame.HUDMainGame_C.DrawDebugPsychicType
// (Public, BlueprintCallable, BlueprintEvent)

void AHUDMainGame_C::DrawDebugPsychicType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "DrawDebugPsychicType");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HUDMainGame.HUDMainGame_C.SetLogKillEnemy
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             CharacterId                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AHUDMainGame_C::SetLogKillEnemy(class FName CharacterId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "SetLogKillEnemy");

	Params::HUDMainGame_C_SetLogKillEnemy Parms{};

	Parms.CharacterId = CharacterId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUDMainGame.HUDMainGame_C.PlayerUseItem
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AHUDMainGame_C::PlayerUseItem(bool* IsUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "PlayerUseItem");

	Params::HUDMainGame_C_PlayerUseItem Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsUse != nullptr)
		*IsUse = Parms.IsUse;
}


// Function HUDMainGame.HUDMainGame_C.InitLoading
// (Private, BlueprintCallable, BlueprintEvent)

void AHUDMainGame_C::InitLoading()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "InitLoading");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HUDMainGame.HUDMainGame_C.PsychicIconSetWeakShow
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ARSBattleCharacter_C*             Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   WeakIndex                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EPsychicGrabButtonType                  Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsShow                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AHUDMainGame_C::PsychicIconSetWeakShow(class ARSBattleCharacter_C* Actor, int32 WeakIndex, EPsychicGrabButtonType Button, bool IsShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "PsychicIconSetWeakShow");

	Params::HUDMainGame_C_PsychicIconSetWeakShow Parms{};

	Parms.Actor = Actor;
	Parms.WeakIndex = WeakIndex;
	Parms.Button = Button;
	Parms.IsShow = IsShow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUDMainGame.HUDMainGame_C.SetupMinimapEnemyIcon
// (Public, BlueprintCallable, BlueprintEvent)

void AHUDMainGame_C::SetupMinimapEnemyIcon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "SetupMinimapEnemyIcon");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HUDMainGame.HUDMainGame_C.AddActionIcon
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UUIActionIcon*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class UUIActionIcon* AHUDMainGame_C::AddActionIcon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "AddActionIcon");

	Params::HUDMainGame_C_AddActionIcon Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HUDMainGame.HUDMainGame_C.RemoveActionIcon
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UUIActionIcon*                    ActionIcon                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool AHUDMainGame_C::RemoveActionIcon(class UUIActionIcon* ActionIcon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "RemoveActionIcon");

	Params::HUDMainGame_C_RemoveActionIcon Parms{};

	Parms.ActionIcon = ActionIcon;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HUDMainGame.HUDMainGame_C.CreateDetailMap
// (Private, BlueprintCallable, BlueprintEvent)

void AHUDMainGame_C::CreateDetailMap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "CreateDetailMap");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HUDMainGame.HUDMainGame_C.InitAreaNext
// (Public, BlueprintCallable, BlueprintEvent)

void AHUDMainGame_C::InitAreaNext()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "InitAreaNext");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HUDMainGame.HUDMainGame_C.InitAreaHere
// (Public, BlueprintCallable, BlueprintEvent)

void AHUDMainGame_C::InitAreaHere()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "InitAreaHere");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HUDMainGame.HUDMainGame_C.EndAreaNext
// (Public, BlueprintCallable, BlueprintEvent)

void AHUDMainGame_C::EndAreaNext()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "EndAreaNext");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HUDMainGame.HUDMainGame_C.StartGameOver
// (Public, BlueprintCallable, BlueprintEvent)

void AHUDMainGame_C::StartGameOver()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "StartGameOver");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HUDMainGame.HUDMainGame_C.IsEndGameOver
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsEnd                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AHUDMainGame_C::IsEndGameOver(bool* IsEnd)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "IsEndGameOver");

	Params::HUDMainGame_C_IsEndGameOver Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsEnd != nullptr)
		*IsEnd = Parms.IsEnd;
}


// Function HUDMainGame.HUDMainGame_C.GetGameOverResult
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EGameOverResult                         Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AHUDMainGame_C::GetGameOverResult(EGameOverResult* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "GetGameOverResult");

	Params::HUDMainGame_C_GetGameOverResult Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function HUDMainGame.HUDMainGame_C.UpdateItemMenuUI
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool AHUDMainGame_C::UpdateItemMenuUI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "UpdateItemMenuUI");

	Params::HUDMainGame_C_UpdateItemMenuUI Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HUDMainGame.HUDMainGame_C.InitBrainTalk
// (Public, BlueprintCallable, BlueprintEvent)

void AHUDMainGame_C::InitBrainTalk()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "InitBrainTalk");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HUDMainGame.HUDMainGame_C.OpenBrainTalk
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   CharacterId                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ExpressionID                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           MessageID                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// float                                   DrawSecond                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AHUDMainGame_C::OpenBrainTalk(int32 CharacterId, int32 ExpressionID, const class FString& MessageID, float DrawSecond)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "OpenBrainTalk");

	Params::HUDMainGame_C_OpenBrainTalk Parms{};

	Parms.CharacterId = CharacterId;
	Parms.ExpressionID = ExpressionID;
	Parms.MessageID = std::move(MessageID);
	Parms.DrawSecond = DrawSecond;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUDMainGame.HUDMainGame_C.CloseBrainTalk
// (Public, BlueprintCallable, BlueprintEvent)

void AHUDMainGame_C::CloseBrainTalk()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "CloseBrainTalk");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HUDMainGame.HUDMainGame_C.DrawMessage
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Talker                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Message                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// int32                                   WindowType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   DrawSecond                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsEnableSkip                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class URSAtomComponentBase*             Voice                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsSkipVoiceEnd                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsWaitMode                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

int32 AHUDMainGame_C::DrawMessage(const class FString& Talker, const class FString& Message, int32 WindowType, float DrawSecond, bool IsEnableSkip, class URSAtomComponentBase* Voice, bool IsSkipVoiceEnd, bool IsWaitMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "DrawMessage");

	Params::HUDMainGame_C_DrawMessage Parms{};

	Parms.Talker = std::move(Talker);
	Parms.Message = std::move(Message);
	Parms.WindowType = WindowType;
	Parms.DrawSecond = DrawSecond;
	Parms.IsEnableSkip = IsEnableSkip;
	Parms.Voice = Voice;
	Parms.IsSkipVoiceEnd = IsSkipVoiceEnd;
	Parms.IsWaitMode = IsWaitMode;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HUDMainGame.HUDMainGame_C.SetupSAS
// (Public, BlueprintCallable, BlueprintEvent)

void AHUDMainGame_C::SetupSAS()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "SetupSAS");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HUDMainGame.HUDMainGame_C.IsExecuteBrainTalkWidget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    IsExecute                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AHUDMainGame_C::IsExecuteBrainTalkWidget(bool* IsExecute)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "IsExecuteBrainTalkWidget");

	Params::HUDMainGame_C_IsExecuteBrainTalkWidget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsExecute != nullptr)
		*IsExecute = Parms.IsExecute;
}


// Function HUDMainGame.HUDMainGame_C.IsExecuteBrainTalkMessage
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    IsExecute                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AHUDMainGame_C::IsExecuteBrainTalkMessage(bool* IsExecute)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "IsExecuteBrainTalkMessage");

	Params::HUDMainGame_C_IsExecuteBrainTalkMessage Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsExecute != nullptr)
		*IsExecute = Parms.IsExecute;
}


// Function HUDMainGame.HUDMainGame_C.CreatePartyWidget
// (Private, BlueprintCallable, BlueprintEvent)

void AHUDMainGame_C::CreatePartyWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "CreatePartyWidget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HUDMainGame.HUDMainGame_C.NextBrainTalkMessage
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool AHUDMainGame_C::NextBrainTalkMessage(const int32 Param_Index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "NextBrainTalkMessage");

	Params::HUDMainGame_C_NextBrainTalkMessage Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HUDMainGame.HUDMainGame_C.SetLogGetMoney
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   GetMoney                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   DrawTime                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AHUDMainGame_C::SetLogGetMoney(int32 GetMoney, float DrawTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "SetLogGetMoney");

	Params::HUDMainGame_C_SetLogGetMoney Parms{};

	Parms.GetMoney = GetMoney;
	Parms.DrawTime = DrawTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUDMainGame.HUDMainGame_C.SetLogGetExperience
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   GetExp                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AHUDMainGame_C::SetLogGetExperience(int32 GetExp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "SetLogGetExperience");

	Params::HUDMainGame_C_SetLogGetExperience Parms{};

	Parms.GetExp = GetExp;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUDMainGame.HUDMainGame_C.DrawChoiceMessage
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ChoiceNum                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           Choice0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Choice1                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Choice2                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Choice3                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Choice4                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// int32                                   DefaultIndex                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CancelIndex                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   DrawSecond                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsEnableCancel                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsWaitMode                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

int32 AHUDMainGame_C::DrawChoiceMessage(int32 ChoiceNum, const class FString& Choice0, const class FString& Choice1, const class FString& Choice2, const class FString& Choice3, const class FString& Choice4, int32 DefaultIndex, int32 CancelIndex, float DrawSecond, bool IsEnableCancel, bool IsWaitMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "DrawChoiceMessage");

	Params::HUDMainGame_C_DrawChoiceMessage Parms{};

	Parms.ChoiceNum = ChoiceNum;
	Parms.Choice0 = std::move(Choice0);
	Parms.Choice1 = std::move(Choice1);
	Parms.Choice2 = std::move(Choice2);
	Parms.Choice3 = std::move(Choice3);
	Parms.Choice4 = std::move(Choice4);
	Parms.DefaultIndex = DefaultIndex;
	Parms.CancelIndex = CancelIndex;
	Parms.DrawSecond = DrawSecond;
	Parms.IsEnableCancel = IsEnableCancel;
	Parms.IsWaitMode = IsWaitMode;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HUDMainGame.HUDMainGame_C.SkipMessage
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool AHUDMainGame_C::SkipMessage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "SkipMessage");

	Params::HUDMainGame_C_SkipMessage Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HUDMainGame.HUDMainGame_C.GetChoiceResult
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   MessageIndex                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AHUDMainGame_C::GetChoiceResult(int32 MessageIndex, int32* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "GetChoiceResult");

	Params::HUDMainGame_C_GetChoiceResult Parms{};

	Parms.MessageIndex = MessageIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function HUDMainGame.HUDMainGame_C.GetLastChoiceResult
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AHUDMainGame_C::GetLastChoiceResult(int32* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "GetLastChoiceResult");

	Params::HUDMainGame_C_GetLastChoiceResult Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function HUDMainGame.HUDMainGame_C.CheckEndMessage
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   MessageIndex                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsEnd                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AHUDMainGame_C::CheckEndMessage(int32 MessageIndex, bool* IsEnd)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "CheckEndMessage");

	Params::HUDMainGame_C_CheckEndMessage Parms{};

	Parms.MessageIndex = MessageIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (IsEnd != nullptr)
		*IsEnd = Parms.IsEnd;
}


// Function HUDMainGame.HUDMainGame_C.CheckEndAllMessage
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    IsEnd                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    FlagCheckClose                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AHUDMainGame_C::CheckEndAllMessage(bool* IsEnd, bool FlagCheckClose)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "CheckEndAllMessage");

	Params::HUDMainGame_C_CheckEndAllMessage Parms{};

	Parms.FlagCheckClose = FlagCheckClose;

	UObject::ProcessEvent(Func, &Parms);

	if (IsEnd != nullptr)
		*IsEnd = Parms.IsEnd;
}


// Function HUDMainGame.HUDMainGame_C.CreateWorldMap
// (Private, BlueprintCallable, BlueprintEvent)

void AHUDMainGame_C::CreateWorldMap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "CreateWorldMap");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HUDMainGame.HUDMainGame_C.StartWorldMap
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsDetailMap                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AHUDMainGame_C::StartWorldMap(bool IsDetailMap)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "StartWorldMap");

	Params::HUDMainGame_C_StartWorldMap Parms{};

	Parms.IsDetailMap = IsDetailMap;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUDMainGame.HUDMainGame_C.BattleMenuPlayDamageEffect
// (Public, BlueprintCallable, BlueprintEvent)

void AHUDMainGame_C::BattleMenuPlayDamageEffect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "BattleMenuPlayDamageEffect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HUDMainGame.HUDMainGame_C.SetBrainTalkBugMode
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsBug                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AHUDMainGame_C::SetBrainTalkBugMode(bool IsBug)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "SetBrainTalkBugMode");

	Params::HUDMainGame_C_SetBrainTalkBugMode Parms{};

	Parms.IsBug = IsBug;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUDMainGame.HUDMainGame_C.InitCharaName
// (Public, BlueprintCallable, BlueprintEvent)

void AHUDMainGame_C::InitCharaName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "InitCharaName");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HUDMainGame.HUDMainGame_C.InitTownName
// (Public, BlueprintCallable, BlueprintEvent)

void AHUDMainGame_C::InitTownName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "InitTownName");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HUDMainGame.HUDMainGame_C.StartCharaName
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           CharaID                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool AHUDMainGame_C::StartCharaName(const class FString& CharaID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "StartCharaName");

	Params::HUDMainGame_C_StartCharaName Parms{};

	Parms.CharaID = std::move(CharaID);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HUDMainGame.HUDMainGame_C.StartTownName
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   LocationId                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool AHUDMainGame_C::StartTownName(int32 LocationId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "StartTownName");

	Params::HUDMainGame_C_StartTownName Parms{};

	Parms.LocationId = LocationId;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HUDMainGame.HUDMainGame_C.Init
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool AHUDMainGame_C::Init()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "Init");

	Params::HUDMainGame_C_Init Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HUDMainGame.HUDMainGame_C.ProcBattleMenu
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool AHUDMainGame_C::ProcBattleMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "ProcBattleMenu");

	Params::HUDMainGame_C_ProcBattleMenu Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HUDMainGame.HUDMainGame_C.IsBrainTalkFinishedWait
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool AHUDMainGame_C::IsBrainTalkFinishedWait()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "IsBrainTalkFinishedWait");

	Params::HUDMainGame_C_IsBrainTalkFinishedWait Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HUDMainGame.HUDMainGame_C.SetIntercept
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AHUDMainGame_C::SetIntercept(class AActor* Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "SetIntercept");

	Params::HUDMainGame_C_SetIntercept Parms{};

	Parms.Target = Target;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUDMainGame.HUDMainGame_C.ResetIntercept
// (Public, BlueprintCallable, BlueprintEvent)

void AHUDMainGame_C::ResetIntercept()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "ResetIntercept");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HUDMainGame.HUDMainGame_C.UpdateItemNum
// (Public, BlueprintCallable, BlueprintEvent)

void AHUDMainGame_C::UpdateItemNum()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "UpdateItemNum");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HUDMainGame.HUDMainGame_C.GetMessageVoice
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class URSAtomComponentBase*             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class URSAtomComponentBase* AHUDMainGame_C::GetMessageVoice()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "GetMessageVoice");

	Params::HUDMainGame_C_GetMessageVoice Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HUDMainGame.HUDMainGame_C.SetSkipAllMessage
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsSkip                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AHUDMainGame_C::SetSkipAllMessage(bool IsSkip)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "SetSkipAllMessage");

	Params::HUDMainGame_C_SetSkipAllMessage Parms{};

	Parms.IsSkip = IsSkip;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUDMainGame.HUDMainGame_C.StartLoadingChara
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ID                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AHUDMainGame_C::StartLoadingChara(int32 ID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "StartLoadingChara");

	Params::HUDMainGame_C_StartLoadingChara Parms{};

	Parms.ID = ID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUDMainGame.HUDMainGame_C.StartLoadingInterlude
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ID                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AHUDMainGame_C::StartLoadingInterlude(int32 ID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "StartLoadingInterlude");

	Params::HUDMainGame_C_StartLoadingInterlude Parms{};

	Parms.ID = ID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUDMainGame.HUDMainGame_C.StartLoadingChapter
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ID                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AHUDMainGame_C::StartLoadingChapter(int32 ID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "StartLoadingChapter");

	Params::HUDMainGame_C_StartLoadingChapter Parms{};

	Parms.ID = ID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUDMainGame.HUDMainGame_C.SetUIAnimationSpeed
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   UIAnimationSpeed                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AHUDMainGame_C::SetUIAnimationSpeed(float UIAnimationSpeed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "SetUIAnimationSpeed");

	Params::HUDMainGame_C_SetUIAnimationSpeed Parms{};

	Parms.UIAnimationSpeed = UIAnimationSpeed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUDMainGame.HUDMainGame_C.CreateSaveLoad
// (Public, BlueprintCallable, BlueprintEvent)

void AHUDMainGame_C::CreateSaveLoad()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "CreateSaveLoad");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HUDMainGame.HUDMainGame_C.initAutoSave
// (Private, BlueprintCallable, BlueprintEvent)

void AHUDMainGame_C::InitAutoSave()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "initAutoSave");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HUDMainGame.HUDMainGame_C.SetPsychicGauge
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Param                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AHUDMainGame_C::SetPsychicGauge(float Param)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "SetPsychicGauge");

	Params::HUDMainGame_C_SetPsychicGauge Parms{};

	Parms.Param = Param;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUDMainGame.HUDMainGame_C.SetPsychicWeightGaugeStyle
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// Enum_ui_pk_weight_gauge_button          Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// Enum_ui_pk_weight_gauge_size            Size                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   MaxLevel                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AHUDMainGame_C::SetPsychicWeightGaugeStyle(Enum_ui_pk_weight_gauge_button Button, Enum_ui_pk_weight_gauge_size Size, int32 MaxLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "SetPsychicWeightGaugeStyle");

	Params::HUDMainGame_C_SetPsychicWeightGaugeStyle Parms{};

	Parms.Button = Button;
	Parms.Size = Size;
	Parms.MaxLevel = MaxLevel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUDMainGame.HUDMainGame_C.StartPsychicWeightGauge
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// Enum_ui_pk_weight_gauge_button          Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsExObject                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AHUDMainGame_C::StartPsychicWeightGauge(Enum_ui_pk_weight_gauge_button Button, class AActor* Target, bool IsExObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "StartPsychicWeightGauge");

	Params::HUDMainGame_C_StartPsychicWeightGauge Parms{};

	Parms.Button = Button;
	Parms.Target = Target;
	Parms.IsExObject = IsExObject;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUDMainGame.HUDMainGame_C.EndPsychicWeightGauge
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// Enum_ui_pk_weight_gauge_button          Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsSuccess                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AHUDMainGame_C::EndPsychicWeightGauge(Enum_ui_pk_weight_gauge_button Button, bool IsSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "EndPsychicWeightGauge");

	Params::HUDMainGame_C_EndPsychicWeightGauge Parms{};

	Parms.Button = Button;
	Parms.IsSuccess = IsSuccess;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUDMainGame.HUDMainGame_C.SetPsychicWeightGauge
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// Enum_ui_pk_weight_gauge_button          Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Level                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Percent                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AHUDMainGame_C::SetPsychicWeightGauge(Enum_ui_pk_weight_gauge_button Button, int32 Level, float Percent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "SetPsychicWeightGauge");

	Params::HUDMainGame_C_SetPsychicWeightGauge Parms{};

	Parms.Button = Button;
	Parms.Level = Level;
	Parms.Percent = Percent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUDMainGame.HUDMainGame_C.StartPursuitIcon
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPsychicObjectUniqueInputType           LeftInput                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EPsychicObjectUniqueInputButton         LeftButton                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EPsychicObjectUniqueInputType           CenterInput                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EPsychicObjectUniqueInputButton         CenterButton                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EPsychicObjectUniqueInputType           RightInput                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EPsychicObjectUniqueInputButton         RightButton                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// Enum_ui_action_icon_device_type         DeviceType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    FlagDrawMouse                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AHUDMainGame_C::StartPursuitIcon(EPsychicObjectUniqueInputType LeftInput, EPsychicObjectUniqueInputButton LeftButton, EPsychicObjectUniqueInputType CenterInput, EPsychicObjectUniqueInputButton CenterButton, EPsychicObjectUniqueInputType RightInput, EPsychicObjectUniqueInputButton RightButton, Enum_ui_action_icon_device_type DeviceType, bool FlagDrawMouse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "StartPursuitIcon");

	Params::HUDMainGame_C_StartPursuitIcon Parms{};

	Parms.LeftInput = LeftInput;
	Parms.LeftButton = LeftButton;
	Parms.CenterInput = CenterInput;
	Parms.CenterButton = CenterButton;
	Parms.RightInput = RightInput;
	Parms.RightButton = RightButton;
	Parms.DeviceType = DeviceType;
	Parms.FlagDrawMouse = FlagDrawMouse;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUDMainGame.HUDMainGame_C.EndPursuitIcon
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsSuccess                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AHUDMainGame_C::EndPursuitIcon(bool IsSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "EndPursuitIcon");

	Params::HUDMainGame_C_EndPursuitIcon Parms{};

	Parms.IsSuccess = IsSuccess;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUDMainGame.HUDMainGame_C.SetPsychicWeightGaugeVisible
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// Enum_ui_pk_weight_gauge_button          Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsVisible                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AHUDMainGame_C::SetPsychicWeightGaugeVisible(Enum_ui_pk_weight_gauge_button Button, bool IsVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "SetPsychicWeightGaugeVisible");

	Params::HUDMainGame_C_SetPsychicWeightGaugeVisible Parms{};

	Parms.Button = Button;
	Parms.IsVisible = IsVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUDMainGame.HUDMainGame_C.SetPsychicWeightGaugeReverse
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsReverse                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AHUDMainGame_C::SetPsychicWeightGaugeReverse(bool IsReverse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "SetPsychicWeightGaugeReverse");

	Params::HUDMainGame_C_SetPsychicWeightGaugeReverse Parms{};

	Parms.IsReverse = IsReverse;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUDMainGame.HUDMainGame_C.GetPsychicWeightGaugeReverseFlag
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    IsReverse                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AHUDMainGame_C::GetPsychicWeightGaugeReverseFlag(bool* IsReverse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "GetPsychicWeightGaugeReverseFlag");

	Params::HUDMainGame_C_GetPsychicWeightGaugeReverseFlag Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsReverse != nullptr)
		*IsReverse = Parms.IsReverse;
}


// Function HUDMainGame.HUDMainGame_C.StartTutorial
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AHUDMainGame_C::StartTutorial()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "StartTutorial");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HUDMainGame.HUDMainGame_C.UsePsychicGauge
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   UsePercent                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AHUDMainGame_C::UsePsychicGauge(float UsePercent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "UsePsychicGauge");

	Params::HUDMainGame_C_UsePsychicGauge Parms{};

	Parms.UsePercent = UsePercent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUDMainGame.HUDMainGame_C.ErrorPsychicGauge
// (Public, BlueprintCallable, BlueprintEvent)

void AHUDMainGame_C::ErrorPsychicGauge()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "ErrorPsychicGauge");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HUDMainGame.HUDMainGame_C.InitDebugParam
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void AHUDMainGame_C::InitDebugParam()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "InitDebugParam");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HUDMainGame.HUDMainGame_C.GetDebugInvisible
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    IsVisible                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AHUDMainGame_C::GetDebugInvisible(bool* IsVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "GetDebugInvisible");

	Params::HUDMainGame_C_GetDebugInvisible Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsVisible != nullptr)
		*IsVisible = Parms.IsVisible;
}


// Function HUDMainGame.HUDMainGame_C.SetDebugMinimapDispAdd
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_DebugMinimapDispAdd                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AHUDMainGame_C::SetDebugMinimapDispAdd(bool Param_DebugMinimapDispAdd)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "SetDebugMinimapDispAdd");

	Params::HUDMainGame_C_SetDebugMinimapDispAdd Parms{};

	Parms.Param_DebugMinimapDispAdd = Param_DebugMinimapDispAdd;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUDMainGame.HUDMainGame_C.GetDebugMinimapDispAdd
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Param_DebugMinimapDispAdd                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AHUDMainGame_C::GetDebugMinimapDispAdd(bool* Param_DebugMinimapDispAdd)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "GetDebugMinimapDispAdd");

	Params::HUDMainGame_C_GetDebugMinimapDispAdd Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_DebugMinimapDispAdd != nullptr)
		*Param_DebugMinimapDispAdd = Parms.Param_DebugMinimapDispAdd;
}


// Function HUDMainGame.HUDMainGame_C.StopAutoSaveIcon
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool AHUDMainGame_C::StopAutoSaveIcon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "StopAutoSaveIcon");

	Params::HUDMainGame_C_StopAutoSaveIcon Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HUDMainGame.HUDMainGame_C.StartAutoSaveIcon
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool AHUDMainGame_C::StartAutoSaveIcon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "StartAutoSaveIcon");

	Params::HUDMainGame_C_StartAutoSaveIcon Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HUDMainGame.HUDMainGame_C.CreateOperation
// (Public, BlueprintCallable, BlueprintEvent)

void AHUDMainGame_C::CreateOperation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "CreateOperation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HUDMainGame.HUDMainGame_C.StartOperation
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AHUDMainGame_C::StartOperation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "StartOperation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HUDMainGame.HUDMainGame_C.CreateNoticeMessage
// (Public, BlueprintCallable, BlueprintEvent)

void AHUDMainGame_C::CreateNoticeMessage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "CreateNoticeMessage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HUDMainGame.HUDMainGame_C.CreateNoticeQuest
// (Public, BlueprintCallable, BlueprintEvent)

void AHUDMainGame_C::CreateNoticeQuest()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "CreateNoticeQuest");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HUDMainGame.HUDMainGame_C.SetPsychicWeightGaugeEnableFlag
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// Enum_ui_pk_weight_gauge_button          Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsEnable                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AHUDMainGame_C::SetPsychicWeightGaugeEnableFlag(Enum_ui_pk_weight_gauge_button Button, bool IsEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "SetPsychicWeightGaugeEnableFlag");

	Params::HUDMainGame_C_SetPsychicWeightGaugeEnableFlag Parms{};

	Parms.Button = Button;
	Parms.IsEnable = IsEnable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUDMainGame.HUDMainGame_C.LevelUpMain
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Level                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AHUDMainGame_C::LevelUpMain(int32 Level)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "LevelUpMain");

	Params::HUDMainGame_C_LevelUpMain Parms{};

	Parms.Level = Level;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUDMainGame.HUDMainGame_C.SasChangePage
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Page                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AHUDMainGame_C::SasChangePage(int32 Page)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "SasChangePage");

	Params::HUDMainGame_C_SasChangePage Parms{};

	Parms.Page = Page;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUDMainGame.HUDMainGame_C.StartTutoOperation
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             HelpTutoID                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool AHUDMainGame_C::StartTutoOperation(class FName HelpTutoID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "StartTutoOperation");

	Params::HUDMainGame_C_StartTutoOperation Parms{};

	Parms.HelpTutoID = HelpTutoID;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HUDMainGame.HUDMainGame_C.CloseTutoOperation
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool AHUDMainGame_C::CloseTutoOperation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "CloseTutoOperation");

	Params::HUDMainGame_C_CloseTutoOperation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HUDMainGame.HUDMainGame_C.isTutoOperation
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool AHUDMainGame_C::IsTutoOperation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "isTutoOperation");

	Params::HUDMainGame_C_IsTutoOperation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HUDMainGame.HUDMainGame_C.SetVisibleAreaHere
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Visibleflag                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AHUDMainGame_C::SetVisibleAreaHere(bool Visibleflag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "SetVisibleAreaHere");

	Params::HUDMainGame_C_SetVisibleAreaHere Parms{};

	Parms.Visibleflag = Visibleflag;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUDMainGame.HUDMainGame_C.SetVisibleAreaNext
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Visibleflag                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AHUDMainGame_C::SetVisibleAreaNext(bool Visibleflag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "SetVisibleAreaNext");

	Params::HUDMainGame_C_SetVisibleAreaNext Parms{};

	Parms.Visibleflag = Visibleflag;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUDMainGame.HUDMainGame_C.isVisibleAreaHere
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Visibleflag                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AHUDMainGame_C::IsVisibleAreaHere(bool* Visibleflag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "isVisibleAreaHere");

	Params::HUDMainGame_C_IsVisibleAreaHere Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Visibleflag != nullptr)
		*Visibleflag = Parms.Visibleflag;
}


// Function HUDMainGame.HUDMainGame_C.isVisibleAreaNext
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Visibleflag                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AHUDMainGame_C::IsVisibleAreaNext(bool* Visibleflag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "isVisibleAreaNext");

	Params::HUDMainGame_C_IsVisibleAreaNext Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Visibleflag != nullptr)
		*Visibleflag = Parms.Visibleflag;
}


// Function HUDMainGame.HUDMainGame_C.StartAreaNext
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   LocationId                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   AreaId                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   PortalID                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsWorldMap                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool AHUDMainGame_C::StartAreaNext(int32 LocationId, int32 AreaId, int32 PortalID, bool IsWorldMap)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "StartAreaNext");

	Params::HUDMainGame_C_StartAreaNext Parms{};

	Parms.LocationId = LocationId;
	Parms.AreaId = AreaId;
	Parms.PortalID = PortalID;
	Parms.IsWorldMap = IsWorldMap;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HUDMainGame.HUDMainGame_C.StartAreaHere
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   LocationId                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   AreaId                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   PortalID                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool AHUDMainGame_C::StartAreaHere(int32 LocationId, int32 AreaId, int32 PortalID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "StartAreaHere");

	Params::HUDMainGame_C_StartAreaHere Parms{};

	Parms.LocationId = LocationId;
	Parms.AreaId = AreaId;
	Parms.PortalID = PortalID;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HUDMainGame.HUDMainGame_C.SetBrainCrashEnable
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ARSBattleCharacter_C*             Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsEnable                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AHUDMainGame_C::SetBrainCrashEnable(class ARSBattleCharacter_C* Target, bool IsEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "SetBrainCrashEnable");

	Params::HUDMainGame_C_SetBrainCrashEnable Parms{};

	Parms.Target = Target;
	Parms.IsEnable = IsEnable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUDMainGame.HUDMainGame_C.DriveGaugeSetPercent
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Percent                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AHUDMainGame_C::DriveGaugeSetPercent(float Percent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "DriveGaugeSetPercent");

	Params::HUDMainGame_C_DriveGaugeSetPercent Parms{};

	Parms.Percent = Percent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUDMainGame.HUDMainGame_C.DriveGaugeSetUnlockBrainField
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsUnlock                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AHUDMainGame_C::DriveGaugeSetUnlockBrainField(bool IsUnlock)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "DriveGaugeSetUnlockBrainField");

	Params::HUDMainGame_C_DriveGaugeSetUnlockBrainField Parms{};

	Parms.IsUnlock = IsUnlock;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUDMainGame.HUDMainGame_C.DriveGaugeSetDriveMode
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsDriveMode                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AHUDMainGame_C::DriveGaugeSetDriveMode(bool IsDriveMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "DriveGaugeSetDriveMode");

	Params::HUDMainGame_C_DriveGaugeSetDriveMode Parms{};

	Parms.IsDriveMode = IsDriveMode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUDMainGame.HUDMainGame_C.DriveGaugeSetBrainFieldMode
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_IsBrainField                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AHUDMainGame_C::DriveGaugeSetBrainFieldMode(bool Param_IsBrainField)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "DriveGaugeSetBrainFieldMode");

	Params::HUDMainGame_C_DriveGaugeSetBrainFieldMode Parms{};

	Parms.Param_IsBrainField = Param_IsBrainField;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUDMainGame.HUDMainGame_C.CreatePresentWidget
// (Public, BlueprintCallable, BlueprintEvent)

void AHUDMainGame_C::CreatePresentWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "CreatePresentWidget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HUDMainGame.HUDMainGame_C.InitParameter
// (Public, BlueprintCallable, BlueprintEvent)

void AHUDMainGame_C::InitParameter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "InitParameter");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HUDMainGame.HUDMainGame_C.RushPursuitIcon
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Left                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Center                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Right                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AHUDMainGame_C::RushPursuitIcon(bool Left, bool Center, bool Right)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "RushPursuitIcon");

	Params::HUDMainGame_C_RushPursuitIcon Parms{};

	Parms.Left = Left;
	Parms.Center = Center;
	Parms.Right = Right;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUDMainGame.HUDMainGame_C.PresentGetSelectItemID
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FName                             ItemId                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AHUDMainGame_C::PresentGetSelectItemID(class FName* ItemId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "PresentGetSelectItemID");

	Params::HUDMainGame_C_PresentGetSelectItemID Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ItemId != nullptr)
		*ItemId = Parms.ItemId;
}


// Function HUDMainGame.HUDMainGame_C.PresentGetSelectFlag
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    SelectFlag                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AHUDMainGame_C::PresentGetSelectFlag(bool* SelectFlag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "PresentGetSelectFlag");

	Params::HUDMainGame_C_PresentGetSelectFlag Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (SelectFlag != nullptr)
		*SelectFlag = Parms.SelectFlag;
}


// Function HUDMainGame.HUDMainGame_C.SetLogGetItem
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           ItemName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// int32                                   ItemNum                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   _drawTime                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool AHUDMainGame_C::SetLogGetItem(const class FString& ItemName, int32 ItemNum, const float _drawTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "SetLogGetItem");

	Params::HUDMainGame_C_SetLogGetItem Parms{};

	Parms.ItemName = std::move(ItemName);
	Parms.ItemNum = ItemNum;
	Parms._drawTime = _drawTime;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HUDMainGame.HUDMainGame_C.SetupMinimapEtcIcon
// (Public, BlueprintCallable, BlueprintEvent)

void AHUDMainGame_C::SetupMinimapEtcIcon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "SetupMinimapEtcIcon");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HUDMainGame.HUDMainGame_C.DebugDriveGauge
// (Private, BlueprintCallable, BlueprintEvent)

void AHUDMainGame_C::DebugDriveGauge()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "DebugDriveGauge");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HUDMainGame.HUDMainGame_C.SetLogLevelUp
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             CharacterId                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AHUDMainGame_C::SetLogLevelUp(class FName CharacterId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "SetLogLevelUp");

	Params::HUDMainGame_C_SetLogLevelUp Parms{};

	Parms.CharacterId = CharacterId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUDMainGame.HUDMainGame_C.SetPsychicGaugeLevel
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Level                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AHUDMainGame_C::SetPsychicGaugeLevel(int32 Level)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "SetPsychicGaugeLevel");

	Params::HUDMainGame_C_SetPsychicGaugeLevel Parms{};

	Parms.Level = Level;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUDMainGame.HUDMainGame_C.SetEnemyHpWidgetVisible
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsVisible                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AHUDMainGame_C::SetEnemyHpWidgetVisible(bool IsVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "SetEnemyHpWidgetVisible");

	Params::HUDMainGame_C_SetEnemyHpWidgetVisible Parms{};

	Parms.IsVisible = IsVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUDMainGame.HUDMainGame_C.StartSasHologram
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPlayerID                               CharaID                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsCrashVision                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AHUDMainGame_C::StartSasHologram(EPlayerID CharaID, bool IsCrashVision)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "StartSasHologram");

	Params::HUDMainGame_C_StartSasHologram Parms{};

	Parms.CharaID = CharaID;
	Parms.IsCrashVision = IsCrashVision;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUDMainGame.HUDMainGame_C.StopSasHologram
// (Public, BlueprintCallable, BlueprintEvent)

void AHUDMainGame_C::StopSasHologram()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "StopSasHologram");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HUDMainGame.HUDMainGame_C.DecideSasHologram
// (Public, BlueprintCallable, BlueprintEvent)

void AHUDMainGame_C::DecideSasHologram()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "DecideSasHologram");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HUDMainGame.HUDMainGame_C.SetPsychicWeightGaugeEnableComboFlag
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsEnable                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AHUDMainGame_C::SetPsychicWeightGaugeEnableComboFlag(bool IsEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "SetPsychicWeightGaugeEnableComboFlag");

	Params::HUDMainGame_C_SetPsychicWeightGaugeEnableComboFlag Parms{};

	Parms.IsEnable = IsEnable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUDMainGame.HUDMainGame_C.SetPursuitIconStickHoldPercent
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   LeftPercent                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   CenterPercent                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RightPercent                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AHUDMainGame_C::SetPursuitIconStickHoldPercent(float LeftPercent, float CenterPercent, float RightPercent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "SetPursuitIconStickHoldPercent");

	Params::HUDMainGame_C_SetPursuitIconStickHoldPercent Parms{};

	Parms.LeftPercent = LeftPercent;
	Parms.CenterPercent = CenterPercent;
	Parms.RightPercent = RightPercent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUDMainGame.HUDMainGame_C.SetPursuitIconStickRoll
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    FlagLeft                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    FlagCenter                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    FlagRight                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AHUDMainGame_C::SetPursuitIconStickRoll(bool FlagLeft, bool FlagCenter, bool FlagRight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "SetPursuitIconStickRoll");

	Params::HUDMainGame_C_SetPursuitIconStickRoll Parms{};

	Parms.FlagLeft = FlagLeft;
	Parms.FlagCenter = FlagCenter;
	Parms.FlagRight = FlagRight;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUDMainGame.HUDMainGame_C.SetLogItemOverFlow
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           ItemName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// float                                   _drawTime                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool AHUDMainGame_C::SetLogItemOverFlow(const class FString& ItemName, const float _drawTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "SetLogItemOverFlow");

	Params::HUDMainGame_C_SetLogItemOverFlow Parms{};

	Parms.ItemName = std::move(ItemName);
	Parms._drawTime = _drawTime;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HUDMainGame.HUDMainGame_C.SetPursuitIconStickHold
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    FlagLeft                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    FlagCenter                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    FlagRight                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AHUDMainGame_C::SetPursuitIconStickHold(bool FlagLeft, bool FlagCenter, bool FlagRight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "SetPursuitIconStickHold");

	Params::HUDMainGame_C_SetPursuitIconStickHold Parms{};

	Parms.FlagLeft = FlagLeft;
	Parms.FlagCenter = FlagCenter;
	Parms.FlagRight = FlagRight;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUDMainGame.HUDMainGame_C.SetPursuitIconRushPercent
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   LeftPercent                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   CenterPercent                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RightPercent                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AHUDMainGame_C::SetPursuitIconRushPercent(float LeftPercent, float CenterPercent, float RightPercent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "SetPursuitIconRushPercent");

	Params::HUDMainGame_C_SetPursuitIconRushPercent Parms{};

	Parms.LeftPercent = LeftPercent;
	Parms.CenterPercent = CenterPercent;
	Parms.RightPercent = RightPercent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUDMainGame.HUDMainGame_C.SetPursuitIconStickRollStart
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    FlagStartLeft                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    FlagStartCenter                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    FlagStartRight                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AHUDMainGame_C::SetPursuitIconStickRollStart(bool FlagStartLeft, bool FlagStartCenter, bool FlagStartRight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "SetPursuitIconStickRollStart");

	Params::HUDMainGame_C_SetPursuitIconStickRollStart Parms{};

	Parms.FlagStartLeft = FlagStartLeft;
	Parms.FlagStartCenter = FlagStartCenter;
	Parms.FlagStartRight = FlagStartRight;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUDMainGame.HUDMainGame_C.ItemSetEnableUse
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsEnable                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AHUDMainGame_C::ItemSetEnableUse(bool IsEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "ItemSetEnableUse");

	Params::HUDMainGame_C_ItemSetEnableUse Parms{};

	Parms.IsEnable = IsEnable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUDMainGame.HUDMainGame_C.DroneGuideOpen
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// Enum_ui_object_guide                    ObjectType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AHUDMainGame_C::DroneGuideOpen(Enum_ui_object_guide ObjectType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "DroneGuideOpen");

	Params::HUDMainGame_C_DroneGuideOpen Parms{};

	Parms.ObjectType = ObjectType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUDMainGame.HUDMainGame_C.DroneGuideClose
// (Public, BlueprintCallable, BlueprintEvent)

void AHUDMainGame_C::DroneGuideClose()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "DroneGuideClose");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HUDMainGame.HUDMainGame_C.SetPursuitIconButtonHoldPercent
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   LeftPercent                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   CenterPercent                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RightPercent                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AHUDMainGame_C::SetPursuitIconButtonHoldPercent(float LeftPercent, float CenterPercent, float RightPercent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "SetPursuitIconButtonHoldPercent");

	Params::HUDMainGame_C_SetPursuitIconButtonHoldPercent Parms{};

	Parms.LeftPercent = LeftPercent;
	Parms.CenterPercent = CenterPercent;
	Parms.RightPercent = RightPercent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUDMainGame.HUDMainGame_C.SetPursuitIconButtonHold
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsHoldLeft                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsHoldCenter                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsHoldRight                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AHUDMainGame_C::SetPursuitIconButtonHold(bool IsHoldLeft, bool IsHoldCenter, bool IsHoldRight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "SetPursuitIconButtonHold");

	Params::HUDMainGame_C_SetPursuitIconButtonHold Parms{};

	Parms.IsHoldLeft = IsHoldLeft;
	Parms.IsHoldCenter = IsHoldCenter;
	Parms.IsHoldRight = IsHoldRight;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUDMainGame.HUDMainGame_C.ItemMenuSetRecastPercent
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Percent                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AHUDMainGame_C::ItemMenuSetRecastPercent(float Percent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "ItemMenuSetRecastPercent");

	Params::HUDMainGame_C_ItemMenuSetRecastPercent Parms{};

	Parms.Percent = Percent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUDMainGame.HUDMainGame_C.OnTitleBack
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool AHUDMainGame_C::OnTitleBack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "OnTitleBack");

	Params::HUDMainGame_C_OnTitleBack Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HUDMainGame.HUDMainGame_C.ItemShiftLeft
// (Public, BlueprintCallable, BlueprintEvent)

void AHUDMainGame_C::ItemShiftLeft()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "ItemShiftLeft");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HUDMainGame.HUDMainGame_C.ItemShiftRight
// (Public, BlueprintCallable, BlueprintEvent)

void AHUDMainGame_C::ItemShiftRight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "ItemShiftRight");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HUDMainGame.HUDMainGame_C.ExpBonusOpen
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   bonus                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AHUDMainGame_C::ExpBonusOpen(float bonus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "ExpBonusOpen");

	Params::HUDMainGame_C_ExpBonusOpen Parms{};

	Parms.bonus = bonus;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUDMainGame.HUDMainGame_C.ExpBonusClose
// (Public, BlueprintCallable, BlueprintEvent)

void AHUDMainGame_C::ExpBonusClose()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "ExpBonusClose");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HUDMainGame.HUDMainGame_C.ExpBonusUpdate
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   bonus                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AHUDMainGame_C::ExpBonusUpdate(float bonus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "ExpBonusUpdate");

	Params::HUDMainGame_C_ExpBonusUpdate Parms{};

	Parms.bonus = bonus;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUDMainGame.HUDMainGame_C.DriveGaugeSetDrivePercent
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Percent                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AHUDMainGame_C::DriveGaugeSetDrivePercent(float Percent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "DriveGaugeSetDrivePercent");

	Params::HUDMainGame_C_DriveGaugeSetDrivePercent Parms{};

	Parms.Percent = Percent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUDMainGame.HUDMainGame_C.DriveGaugeSetBrainPercent
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Percent                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AHUDMainGame_C::DriveGaugeSetBrainPercent(float Percent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "DriveGaugeSetBrainPercent");

	Params::HUDMainGame_C_DriveGaugeSetBrainPercent Parms{};

	Parms.Percent = Percent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUDMainGame.HUDMainGame_C.DriveGaugeSetStockFlag
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    StockFlag                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    UseItemFlag                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AHUDMainGame_C::DriveGaugeSetStockFlag(bool StockFlag, bool UseItemFlag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "DriveGaugeSetStockFlag");

	Params::HUDMainGame_C_DriveGaugeSetStockFlag Parms{};

	Parms.StockFlag = StockFlag;
	Parms.UseItemFlag = UseItemFlag;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUDMainGame.HUDMainGame_C.DriveGaugeSetDownFlag
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    DownFlag                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AHUDMainGame_C::DriveGaugeSetDownFlag(bool DownFlag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "DriveGaugeSetDownFlag");

	Params::HUDMainGame_C_DriveGaugeSetDownFlag Parms{};

	Parms.DownFlag = DownFlag;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUDMainGame.HUDMainGame_C.DriveGaugeSetDisableFlag
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    DisableFlag                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AHUDMainGame_C::DriveGaugeSetDisableFlag(bool DisableFlag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "DriveGaugeSetDisableFlag");

	Params::HUDMainGame_C_DriveGaugeSetDisableFlag Parms{};

	Parms.DisableFlag = DisableFlag;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUDMainGame.HUDMainGame_C.DriveGaugeSetRemainingSecond
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Second                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AHUDMainGame_C::DriveGaugeSetRemainingSecond(int32 Second)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "DriveGaugeSetRemainingSecond");

	Params::HUDMainGame_C_DriveGaugeSetRemainingSecond Parms{};

	Parms.Second = Second;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUDMainGame.HUDMainGame_C.DriveGaugeSetBrainChargePercent
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Percent                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AHUDMainGame_C::DriveGaugeSetBrainChargePercent(float Percent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "DriveGaugeSetBrainChargePercent");

	Params::HUDMainGame_C_DriveGaugeSetBrainChargePercent Parms{};

	Parms.Percent = Percent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUDMainGame.HUDMainGame_C.ChangeSoundState
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// ESoundState                             State                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool AHUDMainGame_C::ChangeSoundState(ESoundState State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "ChangeSoundState");

	Params::HUDMainGame_C_ChangeSoundState Parms{};

	Parms.State = State;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HUDMainGame.HUDMainGame_C.DriveGaugeSetVisibleBrainKeyGuide
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Visibleflag                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AHUDMainGame_C::DriveGaugeSetVisibleBrainKeyGuide(bool Visibleflag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "DriveGaugeSetVisibleBrainKeyGuide");

	Params::HUDMainGame_C_DriveGaugeSetVisibleBrainKeyGuide Parms{};

	Parms.Visibleflag = Visibleflag;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUDMainGame.HUDMainGame_C.MiniTipsOpen
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   TipsID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AHUDMainGame_C::MiniTipsOpen(int32 TipsID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "MiniTipsOpen");

	Params::HUDMainGame_C_MiniTipsOpen Parms{};

	Parms.TipsID = TipsID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUDMainGame.HUDMainGame_C.MiniTipsClose
// (Public, BlueprintCallable, BlueprintEvent)

void AHUDMainGame_C::MiniTipsClose()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "MiniTipsClose");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HUDMainGame.HUDMainGame_C.IsValidMessageVoiceToMessageBuffer
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool AHUDMainGame_C::IsValidMessageVoiceToMessageBuffer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "IsValidMessageVoiceToMessageBuffer");

	Params::HUDMainGame_C_IsValidMessageVoiceToMessageBuffer Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HUDMainGame.HUDMainGame_C.SetPsychicGaugeEffect
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AHUDMainGame_C::SetPsychicGaugeEffect(int32 Param_Index, float Time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "SetPsychicGaugeEffect");

	Params::HUDMainGame_C_SetPsychicGaugeEffect Parms{};

	Parms.Param_Index = Param_Index;
	Parms.Time = Time;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUDMainGame.HUDMainGame_C.SasFireStart
// (Public, BlueprintCallable, BlueprintEvent)

void AHUDMainGame_C::SasFireStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "SasFireStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HUDMainGame.HUDMainGame_C.SasFireEnd
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsSuccess                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AHUDMainGame_C::SasFireEnd(bool IsSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "SasFireEnd");

	Params::HUDMainGame_C_SasFireEnd Parms{};

	Parms.IsSuccess = IsSuccess;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUDMainGame.HUDMainGame_C.SasFireRush
// (Public, BlueprintCallable, BlueprintEvent)

void AHUDMainGame_C::SasFireRush()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "SasFireRush");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HUDMainGame.HUDMainGame_C.IsEnableOpenMenu
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool AHUDMainGame_C::IsEnableOpenMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "IsEnableOpenMenu");

	Params::HUDMainGame_C_IsEnableOpenMenu Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HUDMainGame.HUDMainGame_C.MiniTipsStartDraw
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// EHelpTutorial                           TipsID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float AHUDMainGame_C::MiniTipsStartDraw(EHelpTutorial TipsID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "MiniTipsStartDraw");

	Params::HUDMainGame_C_MiniTipsStartDraw Parms{};

	Parms.TipsID = TipsID;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HUDMainGame.HUDMainGame_C.MiniTipsStopDraw
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EHelpTutorial                           TipsID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool AHUDMainGame_C::MiniTipsStopDraw(EHelpTutorial TipsID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "MiniTipsStopDraw");

	Params::HUDMainGame_C_MiniTipsStopDraw Parms{};

	Parms.TipsID = TipsID;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HUDMainGame.HUDMainGame_C.SetLoadingFlagEventSetup
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsSetup                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AHUDMainGame_C::SetLoadingFlagEventSetup(bool IsSetup)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "SetLoadingFlagEventSetup");

	Params::HUDMainGame_C_SetLoadingFlagEventSetup Parms{};

	Parms.IsSetup = IsSetup;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUDMainGame.HUDMainGame_C.PsychicTimerOpen
// (Public, BlueprintCallable, BlueprintEvent)

void AHUDMainGame_C::PsychicTimerOpen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "PsychicTimerOpen");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HUDMainGame.HUDMainGame_C.PsychicTimerClose
// (Public, BlueprintCallable, BlueprintEvent)

void AHUDMainGame_C::PsychicTimerClose()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "PsychicTimerClose");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HUDMainGame.HUDMainGame_C.PsychicTimerSetGaugePercent
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Percent                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AHUDMainGame_C::PsychicTimerSetGaugePercent(float Percent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "PsychicTimerSetGaugePercent");

	Params::HUDMainGame_C_PsychicTimerSetGaugePercent Parms{};

	Parms.Percent = Percent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUDMainGame.HUDMainGame_C.SetLogGetMoneyFromNative
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   GetMoney                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   _drawTime                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool AHUDMainGame_C::SetLogGetMoneyFromNative(int32 GetMoney, const float _drawTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "SetLogGetMoneyFromNative");

	Params::HUDMainGame_C_SetLogGetMoneyFromNative Parms{};

	Parms.GetMoney = GetMoney;
	Parms._drawTime = _drawTime;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HUDMainGame.HUDMainGame_C.IsOpenLoadingUI
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool AHUDMainGame_C::IsOpenLoadingUI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "IsOpenLoadingUI");

	Params::HUDMainGame_C_IsOpenLoadingUI Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HUDMainGame.HUDMainGame_C.SetLogDrawTime
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AHUDMainGame_C::SetLogDrawTime(float Time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "SetLogDrawTime");

	Params::HUDMainGame_C_SetLogDrawTime Parms{};

	Parms.Time = Time;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUDMainGame.HUDMainGame_C.GetLogDrawTime
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   Time                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AHUDMainGame_C::GetLogDrawTime(float* Time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "GetLogDrawTime");

	Params::HUDMainGame_C_GetLogDrawTime Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Time != nullptr)
		*Time = Parms.Time;
}


// Function HUDMainGame.HUDMainGame_C.SetLogWaitTime
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AHUDMainGame_C::SetLogWaitTime(float Time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "SetLogWaitTime");

	Params::HUDMainGame_C_SetLogWaitTime Parms{};

	Parms.Time = Time;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUDMainGame.HUDMainGame_C.GetLogWaitTime
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   Time                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AHUDMainGame_C::GetLogWaitTime(float* Time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "GetLogWaitTime");

	Params::HUDMainGame_C_GetLogWaitTime Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Time != nullptr)
		*Time = Parms.Time;
}


// Function HUDMainGame.HUDMainGame_C.Is Init Loading Chara
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Isinit                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AHUDMainGame_C::Is_Init_Loading_Chara(bool* Isinit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "Is Init Loading Chara");

	Params::HUDMainGame_C_Is_Init_Loading_Chara Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Isinit != nullptr)
		*Isinit = Parms.Isinit;
}


// Function HUDMainGame.HUDMainGame_C.IsCurrentMessageWithVoice
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool AHUDMainGame_C::IsCurrentMessageWithVoice()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "IsCurrentMessageWithVoice");

	Params::HUDMainGame_C_IsCurrentMessageWithVoice Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HUDMainGame.HUDMainGame_C.SetDebugLoadingID
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ID                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AHUDMainGame_C::SetDebugLoadingID(int32 ID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "SetDebugLoadingID");

	Params::HUDMainGame_C_SetDebugLoadingID Parms{};

	Parms.ID = ID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUDMainGame.HUDMainGame_C.GetDebugLoadingID
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   ID                                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AHUDMainGame_C::GetDebugLoadingID(int32* ID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "GetDebugLoadingID");

	Params::HUDMainGame_C_GetDebugLoadingID Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ID != nullptr)
		*ID = Parms.ID;
}


// Function HUDMainGame.HUDMainGame_C.SetLoadingCharaID
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ID                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AHUDMainGame_C::SetLoadingCharaID(int32 ID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "SetLoadingCharaID");

	Params::HUDMainGame_C_SetLoadingCharaID Parms{};

	Parms.ID = ID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUDMainGame.HUDMainGame_C.SetLoadingInterludeID
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ID                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AHUDMainGame_C::SetLoadingInterludeID(int32 ID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "SetLoadingInterludeID");

	Params::HUDMainGame_C_SetLoadingInterludeID Parms{};

	Parms.ID = ID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUDMainGame.HUDMainGame_C.SetLoadingChapterID
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ID                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AHUDMainGame_C::SetLoadingChapterID(int32 ID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "SetLoadingChapterID");

	Params::HUDMainGame_C_SetLoadingChapterID Parms{};

	Parms.ID = ID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUDMainGame.HUDMainGame_C.ItemMenuGetCurrentItemID
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FName                             ItemId                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AHUDMainGame_C::ItemMenuGetCurrentItemID(class FName* ItemId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "ItemMenuGetCurrentItemID");

	Params::HUDMainGame_C_ItemMenuGetCurrentItemID Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ItemId != nullptr)
		*ItemId = Parms.ItemId;
}


// Function HUDMainGame.HUDMainGame_C.InitSasWindow
// (Private, BlueprintCallable, BlueprintEvent)

void AHUDMainGame_C::InitSasWindow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "InitSasWindow");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HUDMainGame.HUDMainGame_C.StartSasWindow
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPlayerID                               Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsEx1                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsEx2                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AHUDMainGame_C::StartSasWindow(EPlayerID Target, bool IsEx1, bool IsEx2)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "StartSasWindow");

	Params::HUDMainGame_C_StartSasWindow Parms{};

	Parms.Target = Target;
	Parms.IsEx1 = IsEx1;
	Parms.IsEx2 = IsEx2;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUDMainGame.HUDMainGame_C.SetLogUpdateGoal
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool AHUDMainGame_C::SetLogUpdateGoal()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "SetLogUpdateGoal");

	Params::HUDMainGame_C_SetLogUpdateGoal Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HUDMainGame.HUDMainGame_C.StartSasWindowNative
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPlayerID                               Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsEx1                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsEx2                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool AHUDMainGame_C::StartSasWindowNative(EPlayerID Target, bool IsEx1, bool IsEx2)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "StartSasWindowNative");

	Params::HUDMainGame_C_StartSasWindowNative Parms{};

	Parms.Target = Target;
	Parms.IsEx1 = IsEx1;
	Parms.IsEx2 = IsEx2;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HUDMainGame.HUDMainGame_C.MiniTipsSuccessStartDraw
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool AHUDMainGame_C::MiniTipsSuccessStartDraw()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "MiniTipsSuccessStartDraw");

	Params::HUDMainGame_C_MiniTipsSuccessStartDraw Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HUDMainGame.HUDMainGame_C.MiniTipsSuccessStopDraw
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool AHUDMainGame_C::MiniTipsSuccessStopDraw()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "MiniTipsSuccessStopDraw");

	Params::HUDMainGame_C_MiniTipsSuccessStopDraw Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HUDMainGame.HUDMainGame_C.MessageSetDebugDrawFlag
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsDraw                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AHUDMainGame_C::MessageSetDebugDrawFlag(bool IsDraw)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "MessageSetDebugDrawFlag");

	Params::HUDMainGame_C_MessageSetDebugDrawFlag Parms{};

	Parms.IsDraw = IsDraw;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUDMainGame.HUDMainGame_C.StartMinimapBrainField
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool AHUDMainGame_C::StartMinimapBrainField()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "StartMinimapBrainField");

	Params::HUDMainGame_C_StartMinimapBrainField Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HUDMainGame.HUDMainGame_C.EndMinimapBrainField
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool AHUDMainGame_C::EndMinimapBrainField()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "EndMinimapBrainField");

	Params::HUDMainGame_C_EndMinimapBrainField Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HUDMainGame.HUDMainGame_C.deleteCloseMessageGuide
// (Public, BlueprintCallable, BlueprintEvent)

void AHUDMainGame_C::DeleteCloseMessageGuide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "deleteCloseMessageGuide");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HUDMainGame.HUDMainGame_C.PsychicTimerSetState
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AHUDMainGame_C::PsychicTimerSetState(int32 Param_Index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "PsychicTimerSetState");

	Params::HUDMainGame_C_PsychicTimerSetState Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUDMainGame.HUDMainGame_C.StartMessageGuide
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    FlagSkip                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    FlagPhotoMode                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool AHUDMainGame_C::StartMessageGuide(bool FlagSkip, bool FlagPhotoMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "StartMessageGuide");

	Params::HUDMainGame_C_StartMessageGuide Parms{};

	Parms.FlagSkip = FlagSkip;
	Parms.FlagPhotoMode = FlagPhotoMode;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HUDMainGame.HUDMainGame_C.CloseMessageGuide
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool AHUDMainGame_C::CloseMessageGuide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "CloseMessageGuide");

	Params::HUDMainGame_C_CloseMessageGuide Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HUDMainGame.HUDMainGame_C.SetDebugFlagDrawShortcutGuide
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsDraw                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AHUDMainGame_C::SetDebugFlagDrawShortcutGuide(bool IsDraw)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "SetDebugFlagDrawShortcutGuide");

	Params::HUDMainGame_C_SetDebugFlagDrawShortcutGuide Parms{};

	Parms.IsDraw = IsDraw;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUDMainGame.HUDMainGame_C.GetDebugFlagDrawShortcutGuide
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsDraw                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AHUDMainGame_C::GetDebugFlagDrawShortcutGuide(bool* IsDraw)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "GetDebugFlagDrawShortcutGuide");

	Params::HUDMainGame_C_GetDebugFlagDrawShortcutGuide Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsDraw != nullptr)
		*IsDraw = Parms.IsDraw;
}


// Function HUDMainGame.HUDMainGame_C.Set Player Wait Flag
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsWait                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AHUDMainGame_C::Set_Player_Wait_Flag(bool IsWait)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "Set Player Wait Flag");

	Params::HUDMainGame_C_Set_Player_Wait_Flag Parms{};

	Parms.IsWait = IsWait;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUDMainGame.HUDMainGame_C.SetLogBrainFieldAddTime
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool AHUDMainGame_C::SetLogBrainFieldAddTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "SetLogBrainFieldAddTime");

	Params::HUDMainGame_C_SetLogBrainFieldAddTime Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HUDMainGame.HUDMainGame_C.PkObjectTimerStart
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ARSCharacterBase*                 Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   MaxSecond                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   CurrentSecond                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    OpenDirect                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AHUDMainGame_C::PkObjectTimerStart(class ARSCharacterBase* Target, float MaxSecond, float CurrentSecond, bool OpenDirect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "PkObjectTimerStart");

	Params::HUDMainGame_C_PkObjectTimerStart Parms{};

	Parms.Target = Target;
	Parms.MaxSecond = MaxSecond;
	Parms.CurrentSecond = CurrentSecond;
	Parms.OpenDirect = OpenDirect;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUDMainGame.HUDMainGame_C.PkObjectTimerStop
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ARSCharacterBase*                 Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AHUDMainGame_C::PkObjectTimerStop(class ARSCharacterBase* Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "PkObjectTimerStop");

	Params::HUDMainGame_C_PkObjectTimerStop Parms{};

	Parms.Target = Target;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUDMainGame.HUDMainGame_C.PkObjectTimerUpdate
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ARSCharacterBase*                 Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   MaxSecond                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   CurrentSecond                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AHUDMainGame_C::PkObjectTimerUpdate(class ARSCharacterBase* Target, float MaxSecond, float CurrentSecond)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "PkObjectTimerUpdate");

	Params::HUDMainGame_C_PkObjectTimerUpdate Parms{};

	Parms.Target = Target;
	Parms.MaxSecond = MaxSecond;
	Parms.CurrentSecond = CurrentSecond;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUDMainGame.HUDMainGame_C.StopBrainTalkVoice
// (Public, BlueprintCallable, BlueprintEvent)

void AHUDMainGame_C::StopBrainTalkVoice()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "StopBrainTalkVoice");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HUDMainGame.HUDMainGame_C.Set Pause Event Widgets
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsPause                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AHUDMainGame_C::Set_Pause_Event_Widgets(bool IsPause)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "Set Pause Event Widgets");

	Params::HUDMainGame_C_Set_Pause_Event_Widgets Parms{};

	Parms.IsPause = IsPause;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUDMainGame.HUDMainGame_C.IsPlayTownName
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AHUDMainGame_C::IsPlayTownName(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "IsPlayTownName");

	Params::HUDMainGame_C_IsPlayTownName Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function HUDMainGame.HUDMainGame_C.Stop Town Name
// (Public, BlueprintCallable, BlueprintEvent)

void AHUDMainGame_C::Stop_Town_Name()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "Stop Town Name");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HUDMainGame.HUDMainGame_C.IsCurrentMessageWithChoices
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool AHUDMainGame_C::IsCurrentMessageWithChoices()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "IsCurrentMessageWithChoices");

	Params::HUDMainGame_C_IsCurrentMessageWithChoices Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HUDMainGame.HUDMainGame_C.IsFoundCustomTimeDilationRegistName_FromNative
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           RegistName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    IsFound                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   CurrentCustomTimeDilation                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AHUDMainGame_C::IsFoundCustomTimeDilationRegistName_FromNative(const class FString& RegistName, bool* IsFound, float* CurrentCustomTimeDilation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "IsFoundCustomTimeDilationRegistName_FromNative");

	Params::HUDMainGame_C_IsFoundCustomTimeDilationRegistName_FromNative Parms{};

	Parms.RegistName = std::move(RegistName);

	UObject::ProcessEvent(Func, &Parms);

	if (IsFound != nullptr)
		*IsFound = Parms.IsFound;

	if (CurrentCustomTimeDilation != nullptr)
		*CurrentCustomTimeDilation = Parms.CurrentCustomTimeDilation;
}


// Function HUDMainGame.HUDMainGame_C.CanPlayCutScene_FromNative
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsTipsCheck                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool AHUDMainGame_C::CanPlayCutScene_FromNative(const bool IsTipsCheck)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "CanPlayCutScene_FromNative");

	Params::HUDMainGame_C_CanPlayCutScene_FromNative Parms{};

	Parms.IsTipsCheck = IsTipsCheck;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HUDMainGame.HUDMainGame_C.PauseBrainTalkForEvent
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsPause                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AHUDMainGame_C::PauseBrainTalkForEvent(bool IsPause)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "PauseBrainTalkForEvent");

	Params::HUDMainGame_C_PauseBrainTalkForEvent Parms{};

	Parms.IsPause = IsPause;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUDMainGame.HUDMainGame_C.IsEnableOpenTips
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool AHUDMainGame_C::IsEnableOpenTips()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "IsEnableOpenTips");

	Params::HUDMainGame_C_IsEnableOpenTips Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HUDMainGame.HUDMainGame_C.CheckEndChoiceMessage
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool AHUDMainGame_C::CheckEndChoiceMessage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "CheckEndChoiceMessage");

	Params::HUDMainGame_C_CheckEndChoiceMessage Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HUDMainGame.HUDMainGame_C.ItemSetNoMotionUse
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsNoMotion                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AHUDMainGame_C::ItemSetNoMotionUse(bool IsNoMotion)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "ItemSetNoMotionUse");

	Params::HUDMainGame_C_ItemSetNoMotionUse Parms{};

	Parms.IsNoMotion = IsNoMotion;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUDMainGame.HUDMainGame_C.CanEndLoading
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Can_End                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AHUDMainGame_C::CanEndLoading(bool* Can_End)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "CanEndLoading");

	Params::HUDMainGame_C_CanEndLoading Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Can_End != nullptr)
		*Can_End = Parms.Can_End;
}


// Function HUDMainGame.HUDMainGame_C.IsPlayMessageOpenAnimation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    IsPlay                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AHUDMainGame_C::IsPlayMessageOpenAnimation(bool* IsPlay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "IsPlayMessageOpenAnimation");

	Params::HUDMainGame_C_IsPlayMessageOpenAnimation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsPlay != nullptr)
		*IsPlay = Parms.IsPlay;
}


// Function HUDMainGame.HUDMainGame_C.SetUUIVitalityEN02Visible
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsVisible                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AHUDMainGame_C::SetUUIVitalityEN02Visible(bool IsVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "SetUUIVitalityEN02Visible");

	Params::HUDMainGame_C_SetUUIVitalityEN02Visible Parms{};

	Parms.IsVisible = IsVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUDMainGame.HUDMainGame_C.EnemyHpWidgetDisappearInstantly
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ARSCharacterBase*                 InTarget                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AHUDMainGame_C::EnemyHpWidgetDisappearInstantly(class ARSCharacterBase* InTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "EnemyHpWidgetDisappearInstantly");

	Params::HUDMainGame_C_EnemyHpWidgetDisappearInstantly Parms{};

	Parms.InTarget = InTarget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUDMainGame.HUDMainGame_C.DebugSetFlagBrainMessageTest
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsTest                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AHUDMainGame_C::DebugSetFlagBrainMessageTest(bool IsTest)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "DebugSetFlagBrainMessageTest");

	Params::HUDMainGame_C_DebugSetFlagBrainMessageTest Parms{};

	Parms.IsTest = IsTest;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUDMainGame.HUDMainGame_C.StartCode
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool AHUDMainGame_C::StartCode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "StartCode");

	Params::HUDMainGame_C_StartCode Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HUDMainGame.HUDMainGame_C.StartKeyword
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool AHUDMainGame_C::StartKeyword()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "StartKeyword");

	Params::HUDMainGame_C_StartKeyword Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HUDMainGame.HUDMainGame_C.CloseMessage
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool AHUDMainGame_C::CloseMessage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "CloseMessage");

	Params::HUDMainGame_C_CloseMessage Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HUDMainGame.HUDMainGame_C.startVisionSimulatorResult
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsCheckMode                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class FName                             MissionTitle                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool AHUDMainGame_C::StartVisionSimulatorResult(bool IsCheckMode, class FName MissionTitle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "startVisionSimulatorResult");

	Params::HUDMainGame_C_StartVisionSimulatorResult Parms{};

	Parms.IsCheckMode = IsCheckMode;
	Parms.MissionTitle = MissionTitle;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HUDMainGame.HUDMainGame_C.IsEnableOpenPhotoMode
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool AHUDMainGame_C::IsEnableOpenPhotoMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "IsEnableOpenPhotoMode");

	Params::HUDMainGame_C_IsEnableOpenPhotoMode Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HUDMainGame.HUDMainGame_C.EndPhotoMode
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool AHUDMainGame_C::EndPhotoMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "EndPhotoMode");

	Params::HUDMainGame_C_EndPhotoMode Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HUDMainGame.HUDMainGame_C.StartPhotoMode
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool AHUDMainGame_C::StartPhotoMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "StartPhotoMode");

	Params::HUDMainGame_C_StartPhotoMode Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HUDMainGame.HUDMainGame_C.SetVisionSimulatorTimerDraw
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsDraw                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool AHUDMainGame_C::SetVisionSimulatorTimerDraw(bool IsDraw)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "SetVisionSimulatorTimerDraw");

	Params::HUDMainGame_C_SetVisionSimulatorTimerDraw Parms{};

	Parms.IsDraw = IsDraw;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HUDMainGame.HUDMainGame_C.StartLoading
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsFadeWhite                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool AHUDMainGame_C::StartLoading(bool IsFadeWhite)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "StartLoading");

	Params::HUDMainGame_C_StartLoading Parms{};

	Parms.IsFadeWhite = IsFadeWhite;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HUDMainGame.HUDMainGame_C.EndLoading
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool AHUDMainGame_C::EndLoading()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "EndLoading");

	Params::HUDMainGame_C_EndLoading Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HUDMainGame.HUDMainGame_C.IsLogMessageEmpty
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool AHUDMainGame_C::IsLogMessageEmpty() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "IsLogMessageEmpty");

	Params::HUDMainGame_C_IsLogMessageEmpty Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HUDMainGame.HUDMainGame_C.IsPlaySasWindow
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    IsPlay                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AHUDMainGame_C::IsPlaySasWindow(bool* IsPlay) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "IsPlaySasWindow");

	Params::HUDMainGame_C_IsPlaySasWindow Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsPlay != nullptr)
		*IsPlay = Parms.IsPlay;
}


// Function HUDMainGame.HUDMainGame_C.IsPlaySasWindowNative
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool AHUDMainGame_C::IsPlaySasWindowNative() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "IsPlaySasWindowNative");

	Params::HUDMainGame_C_IsPlaySasWindowNative Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HUDMainGame.HUDMainGame_C.IsDrawMiniTipsSuccess
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool AHUDMainGame_C::IsDrawMiniTipsSuccess() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "IsDrawMiniTipsSuccess");

	Params::HUDMainGame_C_IsDrawMiniTipsSuccess Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HUDMainGame.HUDMainGame_C.MessageGetDebugDrawFlag
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    IsDraw                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AHUDMainGame_C::MessageGetDebugDrawFlag(bool* IsDraw) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "MessageGetDebugDrawFlag");

	Params::HUDMainGame_C_MessageGetDebugDrawFlag Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsDraw != nullptr)
		*IsDraw = Parms.IsDraw;
}


// Function HUDMainGame.HUDMainGame_C.IsDrawMessageGuide
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool AHUDMainGame_C::IsDrawMessageGuide() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "IsDrawMessageGuide");

	Params::HUDMainGame_C_IsDrawMessageGuide Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HUDMainGame.HUDMainGame_C.IsBrainField
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool AHUDMainGame_C::IsBrainField() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "IsBrainField");

	Params::HUDMainGame_C_IsBrainField Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HUDMainGame.HUDMainGame_C.Is Players Brain Field
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AHUDMainGame_C::Is_Players_Brain_Field(bool* Return_Value) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "Is Players Brain Field");

	Params::HUDMainGame_C_Is_Players_Brain_Field Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function HUDMainGame.HUDMainGame_C.IsPlayMessageOpenAnimationNative
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool AHUDMainGame_C::IsPlayMessageOpenAnimationNative() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "IsPlayMessageOpenAnimationNative");

	Params::HUDMainGame_C_IsPlayMessageOpenAnimationNative Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HUDMainGame.HUDMainGame_C.isEndKeyword
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool AHUDMainGame_C::IsEndKeyword() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "isEndKeyword");

	Params::HUDMainGame_C_IsEndKeyword Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HUDMainGame.HUDMainGame_C.isCancelKeyword
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool AHUDMainGame_C::IsCancelKeyword() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "isCancelKeyword");

	Params::HUDMainGame_C_IsCancelKeyword Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HUDMainGame.HUDMainGame_C.getResultKeyword
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)

class FString AHUDMainGame_C::GetResultKeyword() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "getResultKeyword");

	Params::HUDMainGame_C_GetResultKeyword Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HUDMainGame.HUDMainGame_C.isEndVisionSimulatorResult
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool AHUDMainGame_C::IsEndVisionSimulatorResult() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "isEndVisionSimulatorResult");

	Params::HUDMainGame_C_IsEndVisionSimulatorResult Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HUDMainGame.HUDMainGame_C.IsDrawMessageSkipGuide
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool AHUDMainGame_C::IsDrawMessageSkipGuide() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDMainGame_C", "IsDrawMessageSkipGuide");

	Params::HUDMainGame_C_IsDrawMessageSkipGuide Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

