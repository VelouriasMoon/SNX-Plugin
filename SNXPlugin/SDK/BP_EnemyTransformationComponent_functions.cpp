#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_EnemyTransformationComponent

#include "Basic.hpp"

#include "BP_EnemyTransformationComponent_classes.hpp"
#include "BP_EnemyTransformationComponent_parameters.hpp"


namespace SDK
{

// Function BP_EnemyTransformationComponent.BP_EnemyTransformationComponent_C.ED_ActorChanged__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UBP_EnemyTransformationComponent_C::ED_ActorChanged__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnemyTransformationComponent_C", "ED_ActorChanged__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EnemyTransformationComponent.BP_EnemyTransformationComponent_C.ExecuteUbergraph_BP_EnemyTransformationComponent
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_EnemyTransformationComponent_C::ExecuteUbergraph_BP_EnemyTransformationComponent(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnemyTransformationComponent_C", "ExecuteUbergraph_BP_EnemyTransformationComponent");

	Params::BP_EnemyTransformationComponent_C_ExecuteUbergraph_BP_EnemyTransformationComponent Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EnemyTransformationComponent.BP_EnemyTransformationComponent_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_EnemyTransformationComponent_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnemyTransformationComponent_C", "ReceiveTick");

	Params::BP_EnemyTransformationComponent_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EnemyTransformationComponent.BP_EnemyTransformationComponent_C.Initialize
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           ParentActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USkeletalMeshComponent*           ParentSkeletalMesh                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_EnemyTransformationComponent_C::Initialize(class AActor* ParentActor, class USkeletalMeshComponent* ParentSkeletalMesh)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnemyTransformationComponent_C", "Initialize");

	Params::BP_EnemyTransformationComponent_C_Initialize Parms{};

	Parms.ParentActor = ParentActor;
	Parms.ParentSkeletalMesh = ParentSkeletalMesh;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EnemyTransformationComponent.BP_EnemyTransformationComponent_C.StartIn
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bCancel                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_EnemyTransformationComponent_C::StartIn(bool bCancel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnemyTransformationComponent_C", "StartIn");

	Params::BP_EnemyTransformationComponent_C_StartIn Parms{};

	Parms.bCancel = bCancel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EnemyTransformationComponent.BP_EnemyTransformationComponent_C.PrivateUpdateTransformation
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_EnemyTransformationComponent_C::PrivateUpdateTransformation(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnemyTransformationComponent_C", "PrivateUpdateTransformation");

	Params::BP_EnemyTransformationComponent_C_PrivateUpdateTransformation Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EnemyTransformationComponent.BP_EnemyTransformationComponent_C.PrivateStart
// (Private, BlueprintCallable, BlueprintEvent)

void UBP_EnemyTransformationComponent_C::PrivateStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnemyTransformationComponent_C", "PrivateStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EnemyTransformationComponent.BP_EnemyTransformationComponent_C.Start Out
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bCancel                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Param_bBfCancel                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_EnemyTransformationComponent_C::Start_Out(bool bCancel, bool Param_bBfCancel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnemyTransformationComponent_C", "Start Out");

	Params::BP_EnemyTransformationComponent_C_Start_Out Parms{};

	Parms.bCancel = bCancel;
	Parms.Param_bBfCancel = Param_bBfCancel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EnemyTransformationComponent.BP_EnemyTransformationComponent_C.OnDamage
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_EnemyTransformationComponent_C::OnDamage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnemyTransformationComponent_C", "OnDamage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EnemyTransformationComponent.BP_EnemyTransformationComponent_C.PrivateUpdateDamage
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_EnemyTransformationComponent_C::PrivateUpdateDamage(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnemyTransformationComponent_C", "PrivateUpdateDamage");

	Params::BP_EnemyTransformationComponent_C_PrivateUpdateDamage Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EnemyTransformationComponent.BP_EnemyTransformationComponent_C.PrivatePostUpdate
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_EnemyTransformationComponent_C::PrivatePostUpdate(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnemyTransformationComponent_C", "PrivatePostUpdate");

	Params::BP_EnemyTransformationComponent_C_PrivatePostUpdate Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EnemyTransformationComponent.BP_EnemyTransformationComponent_C.SetCustomStencil
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   StencilValue                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_EnemyTransformationComponent_C::SetCustomStencil(int32 StencilValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnemyTransformationComponent_C", "SetCustomStencil");

	Params::BP_EnemyTransformationComponent_C_SetCustomStencil Parms{};

	Parms.StencilValue = StencilValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EnemyTransformationComponent.BP_EnemyTransformationComponent_C.CancelTransformation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_EnemyTransformationComponent_C::CancelTransformation(bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnemyTransformationComponent_C", "CancelTransformation");

	Params::BP_EnemyTransformationComponent_C_CancelTransformation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function BP_EnemyTransformationComponent.BP_EnemyTransformationComponent_C.IsExecTransformation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    bExec                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_EnemyTransformationComponent_C::IsExecTransformation(bool* bExec) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnemyTransformationComponent_C", "IsExecTransformation");

	Params::BP_EnemyTransformationComponent_C_IsExecTransformation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bExec != nullptr)
		*bExec = Parms.bExec;
}

}

