#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPFL_PsychicUtility

#include "Basic.hpp"

#include "SPsychicCaptureMaterial_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BPFL_PsychicUtility.BPFL_PsychicUtility_C.SetupPsychicCaptureMaterial
// 0x00D0 (0x00D0 - 0x0000)
struct BPFL_PsychicUtility_C_SetupPsychicCaptureMaterial final
{
public:
	class UMeshComponent*                         Mesh;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSPsychicCaptureMaterial               MaterialSetting;                                   // 0x0008(0x00A0)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x00A8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A37[0x3];                                     // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_LinearColorToVector_ReturnValue;     // 0x00B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_LinearColorToVector_ReturnValue_1;   // 0x00C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_PsychicUtility_C_SetupPsychicCaptureMaterial) == 0x000008, "Wrong alignment on BPFL_PsychicUtility_C_SetupPsychicCaptureMaterial");
static_assert(sizeof(BPFL_PsychicUtility_C_SetupPsychicCaptureMaterial) == 0x0000D0, "Wrong size on BPFL_PsychicUtility_C_SetupPsychicCaptureMaterial");
static_assert(offsetof(BPFL_PsychicUtility_C_SetupPsychicCaptureMaterial, Mesh) == 0x000000, "Member 'BPFL_PsychicUtility_C_SetupPsychicCaptureMaterial::Mesh' has a wrong offset!");
static_assert(offsetof(BPFL_PsychicUtility_C_SetupPsychicCaptureMaterial, MaterialSetting) == 0x000008, "Member 'BPFL_PsychicUtility_C_SetupPsychicCaptureMaterial::MaterialSetting' has a wrong offset!");
static_assert(offsetof(BPFL_PsychicUtility_C_SetupPsychicCaptureMaterial, __WorldContext) == 0x0000A8, "Member 'BPFL_PsychicUtility_C_SetupPsychicCaptureMaterial::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_PsychicUtility_C_SetupPsychicCaptureMaterial, CallFunc_IsValid_ReturnValue) == 0x0000B0, "Member 'BPFL_PsychicUtility_C_SetupPsychicCaptureMaterial::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_PsychicUtility_C_SetupPsychicCaptureMaterial, CallFunc_Conv_LinearColorToVector_ReturnValue) == 0x0000B4, "Member 'BPFL_PsychicUtility_C_SetupPsychicCaptureMaterial::CallFunc_Conv_LinearColorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_PsychicUtility_C_SetupPsychicCaptureMaterial, CallFunc_SelectFloat_ReturnValue) == 0x0000C0, "Member 'BPFL_PsychicUtility_C_SetupPsychicCaptureMaterial::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_PsychicUtility_C_SetupPsychicCaptureMaterial, CallFunc_Conv_LinearColorToVector_ReturnValue_1) == 0x0000C4, "Member 'BPFL_PsychicUtility_C_SetupPsychicCaptureMaterial::CallFunc_Conv_LinearColorToVector_ReturnValue_1' has a wrong offset!");

// Function BPFL_PsychicUtility.BPFL_PsychicUtility_C.GetPsychicCaptureMaterialParameter
// 0x05C0 (0x05C0 - 0x0000)
struct BPFL_PsychicUtility_C_GetPsychicCaptureMaterialParameter final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSPsychicCaptureMaterial               Normal;                                            // 0x0008(0x00A0)(Parm, OutParm, HasGetValueTypeHash)
	struct FSPsychicCaptureMaterial               Fire;                                              // 0x00A8(0x00A0)(Parm, OutParm, HasGetValueTypeHash)
	struct FSPsychicCaptureMaterial               Electric;                                          // 0x0148(0x00A0)(Parm, OutParm, HasGetValueTypeHash)
	struct FSPsychicCaptureMaterial               RetElectric;                                       // 0x01E8(0x00A0)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FSPsychicCaptureMaterial               RetFire;                                           // 0x0288(0x00A0)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FSPsychicCaptureMaterial               RetNormal;                                         // 0x0328(0x00A0)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FSPsychicCaptureMaterial               CallFunc_GetDataTableRowFromName_OutRow;           // 0x03C8(0x00A0)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0468(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A38[0x7];                                     // 0x0469(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSPsychicCaptureMaterial               CallFunc_GetDataTableRowFromName_OutRow_1;         // 0x0470(0x00A0)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_1;    // 0x0510(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A39[0x7];                                     // 0x0511(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSPsychicCaptureMaterial               CallFunc_GetDataTableRowFromName_OutRow_2;         // 0x0518(0x00A0)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_2;    // 0x05B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPFL_PsychicUtility_C_GetPsychicCaptureMaterialParameter) == 0x000008, "Wrong alignment on BPFL_PsychicUtility_C_GetPsychicCaptureMaterialParameter");
static_assert(sizeof(BPFL_PsychicUtility_C_GetPsychicCaptureMaterialParameter) == 0x0005C0, "Wrong size on BPFL_PsychicUtility_C_GetPsychicCaptureMaterialParameter");
static_assert(offsetof(BPFL_PsychicUtility_C_GetPsychicCaptureMaterialParameter, __WorldContext) == 0x000000, "Member 'BPFL_PsychicUtility_C_GetPsychicCaptureMaterialParameter::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_PsychicUtility_C_GetPsychicCaptureMaterialParameter, Normal) == 0x000008, "Member 'BPFL_PsychicUtility_C_GetPsychicCaptureMaterialParameter::Normal' has a wrong offset!");
static_assert(offsetof(BPFL_PsychicUtility_C_GetPsychicCaptureMaterialParameter, Fire) == 0x0000A8, "Member 'BPFL_PsychicUtility_C_GetPsychicCaptureMaterialParameter::Fire' has a wrong offset!");
static_assert(offsetof(BPFL_PsychicUtility_C_GetPsychicCaptureMaterialParameter, Electric) == 0x000148, "Member 'BPFL_PsychicUtility_C_GetPsychicCaptureMaterialParameter::Electric' has a wrong offset!");
static_assert(offsetof(BPFL_PsychicUtility_C_GetPsychicCaptureMaterialParameter, RetElectric) == 0x0001E8, "Member 'BPFL_PsychicUtility_C_GetPsychicCaptureMaterialParameter::RetElectric' has a wrong offset!");
static_assert(offsetof(BPFL_PsychicUtility_C_GetPsychicCaptureMaterialParameter, RetFire) == 0x000288, "Member 'BPFL_PsychicUtility_C_GetPsychicCaptureMaterialParameter::RetFire' has a wrong offset!");
static_assert(offsetof(BPFL_PsychicUtility_C_GetPsychicCaptureMaterialParameter, RetNormal) == 0x000328, "Member 'BPFL_PsychicUtility_C_GetPsychicCaptureMaterialParameter::RetNormal' has a wrong offset!");
static_assert(offsetof(BPFL_PsychicUtility_C_GetPsychicCaptureMaterialParameter, CallFunc_GetDataTableRowFromName_OutRow) == 0x0003C8, "Member 'BPFL_PsychicUtility_C_GetPsychicCaptureMaterialParameter::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BPFL_PsychicUtility_C_GetPsychicCaptureMaterialParameter, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000468, "Member 'BPFL_PsychicUtility_C_GetPsychicCaptureMaterialParameter::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_PsychicUtility_C_GetPsychicCaptureMaterialParameter, CallFunc_GetDataTableRowFromName_OutRow_1) == 0x000470, "Member 'BPFL_PsychicUtility_C_GetPsychicCaptureMaterialParameter::CallFunc_GetDataTableRowFromName_OutRow_1' has a wrong offset!");
static_assert(offsetof(BPFL_PsychicUtility_C_GetPsychicCaptureMaterialParameter, CallFunc_GetDataTableRowFromName_ReturnValue_1) == 0x000510, "Member 'BPFL_PsychicUtility_C_GetPsychicCaptureMaterialParameter::CallFunc_GetDataTableRowFromName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_PsychicUtility_C_GetPsychicCaptureMaterialParameter, CallFunc_GetDataTableRowFromName_OutRow_2) == 0x000518, "Member 'BPFL_PsychicUtility_C_GetPsychicCaptureMaterialParameter::CallFunc_GetDataTableRowFromName_OutRow_2' has a wrong offset!");
static_assert(offsetof(BPFL_PsychicUtility_C_GetPsychicCaptureMaterialParameter, CallFunc_GetDataTableRowFromName_ReturnValue_2) == 0x0005B8, "Member 'BPFL_PsychicUtility_C_GetPsychicCaptureMaterialParameter::CallFunc_GetDataTableRowFromName_ReturnValue_2' has a wrong offset!");

// Function BPFL_PsychicUtility.BPFL_PsychicUtility_C.LerpPsychicCaptureMaterialParameter
// 0x02F8 (0x02F8 - 0x0000)
struct BPFL_PsychicUtility_C_LerpPsychicCaptureMaterialParameter final
{
public:
	struct FSPsychicCaptureMaterial               A;                                                 // 0x0000(0x00A0)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	struct FSPsychicCaptureMaterial               B;                                                 // 0x00A0(0x00A0)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	float                                         Alpha;                                             // 0x0140(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A3A[0x4];                                     // 0x0144(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0148(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSPsychicCaptureMaterial               Val;                                               // 0x0150(0x00A0)(Parm, OutParm, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x01F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A3B[0x2];                                     // 0x01F2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_1;                       // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x01FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A3C[0x3];                                     // 0x01FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Lerp_ReturnValue_2;                       // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_3;                       // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_4;                       // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_5;                       // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_6;                       // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_7;                       // 0x0214(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_8;                       // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_9;                       // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_10;                      // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_11;                      // 0x0224(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_12;                      // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_13;                      // 0x022C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_14;                      // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_15;                      // 0x0234(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue;              // 0x0238(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue_1;            // 0x0248(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSPsychicCaptureMaterial               K2Node_MakeStruct_SPsychicCaptureMaterial;         // 0x0258(0x00A0)(HasGetValueTypeHash)
};
static_assert(alignof(BPFL_PsychicUtility_C_LerpPsychicCaptureMaterialParameter) == 0x000008, "Wrong alignment on BPFL_PsychicUtility_C_LerpPsychicCaptureMaterialParameter");
static_assert(sizeof(BPFL_PsychicUtility_C_LerpPsychicCaptureMaterialParameter) == 0x0002F8, "Wrong size on BPFL_PsychicUtility_C_LerpPsychicCaptureMaterialParameter");
static_assert(offsetof(BPFL_PsychicUtility_C_LerpPsychicCaptureMaterialParameter, A) == 0x000000, "Member 'BPFL_PsychicUtility_C_LerpPsychicCaptureMaterialParameter::A' has a wrong offset!");
static_assert(offsetof(BPFL_PsychicUtility_C_LerpPsychicCaptureMaterialParameter, B) == 0x0000A0, "Member 'BPFL_PsychicUtility_C_LerpPsychicCaptureMaterialParameter::B' has a wrong offset!");
static_assert(offsetof(BPFL_PsychicUtility_C_LerpPsychicCaptureMaterialParameter, Alpha) == 0x000140, "Member 'BPFL_PsychicUtility_C_LerpPsychicCaptureMaterialParameter::Alpha' has a wrong offset!");
static_assert(offsetof(BPFL_PsychicUtility_C_LerpPsychicCaptureMaterialParameter, __WorldContext) == 0x000148, "Member 'BPFL_PsychicUtility_C_LerpPsychicCaptureMaterialParameter::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_PsychicUtility_C_LerpPsychicCaptureMaterialParameter, Val) == 0x000150, "Member 'BPFL_PsychicUtility_C_LerpPsychicCaptureMaterialParameter::Val' has a wrong offset!");
static_assert(offsetof(BPFL_PsychicUtility_C_LerpPsychicCaptureMaterialParameter, Temp_bool_Variable) == 0x0001F0, "Member 'BPFL_PsychicUtility_C_LerpPsychicCaptureMaterialParameter::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_PsychicUtility_C_LerpPsychicCaptureMaterialParameter, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0001F1, "Member 'BPFL_PsychicUtility_C_LerpPsychicCaptureMaterialParameter::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_PsychicUtility_C_LerpPsychicCaptureMaterialParameter, CallFunc_Lerp_ReturnValue) == 0x0001F4, "Member 'BPFL_PsychicUtility_C_LerpPsychicCaptureMaterialParameter::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_PsychicUtility_C_LerpPsychicCaptureMaterialParameter, CallFunc_Lerp_ReturnValue_1) == 0x0001F8, "Member 'BPFL_PsychicUtility_C_LerpPsychicCaptureMaterialParameter::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_PsychicUtility_C_LerpPsychicCaptureMaterialParameter, K2Node_Select_Default) == 0x0001FC, "Member 'BPFL_PsychicUtility_C_LerpPsychicCaptureMaterialParameter::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BPFL_PsychicUtility_C_LerpPsychicCaptureMaterialParameter, CallFunc_Lerp_ReturnValue_2) == 0x000200, "Member 'BPFL_PsychicUtility_C_LerpPsychicCaptureMaterialParameter::CallFunc_Lerp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_PsychicUtility_C_LerpPsychicCaptureMaterialParameter, CallFunc_Lerp_ReturnValue_3) == 0x000204, "Member 'BPFL_PsychicUtility_C_LerpPsychicCaptureMaterialParameter::CallFunc_Lerp_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPFL_PsychicUtility_C_LerpPsychicCaptureMaterialParameter, CallFunc_Lerp_ReturnValue_4) == 0x000208, "Member 'BPFL_PsychicUtility_C_LerpPsychicCaptureMaterialParameter::CallFunc_Lerp_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BPFL_PsychicUtility_C_LerpPsychicCaptureMaterialParameter, CallFunc_Lerp_ReturnValue_5) == 0x00020C, "Member 'BPFL_PsychicUtility_C_LerpPsychicCaptureMaterialParameter::CallFunc_Lerp_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BPFL_PsychicUtility_C_LerpPsychicCaptureMaterialParameter, CallFunc_Lerp_ReturnValue_6) == 0x000210, "Member 'BPFL_PsychicUtility_C_LerpPsychicCaptureMaterialParameter::CallFunc_Lerp_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BPFL_PsychicUtility_C_LerpPsychicCaptureMaterialParameter, CallFunc_Lerp_ReturnValue_7) == 0x000214, "Member 'BPFL_PsychicUtility_C_LerpPsychicCaptureMaterialParameter::CallFunc_Lerp_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BPFL_PsychicUtility_C_LerpPsychicCaptureMaterialParameter, CallFunc_Lerp_ReturnValue_8) == 0x000218, "Member 'BPFL_PsychicUtility_C_LerpPsychicCaptureMaterialParameter::CallFunc_Lerp_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BPFL_PsychicUtility_C_LerpPsychicCaptureMaterialParameter, CallFunc_Lerp_ReturnValue_9) == 0x00021C, "Member 'BPFL_PsychicUtility_C_LerpPsychicCaptureMaterialParameter::CallFunc_Lerp_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BPFL_PsychicUtility_C_LerpPsychicCaptureMaterialParameter, CallFunc_Lerp_ReturnValue_10) == 0x000220, "Member 'BPFL_PsychicUtility_C_LerpPsychicCaptureMaterialParameter::CallFunc_Lerp_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BPFL_PsychicUtility_C_LerpPsychicCaptureMaterialParameter, CallFunc_Lerp_ReturnValue_11) == 0x000224, "Member 'BPFL_PsychicUtility_C_LerpPsychicCaptureMaterialParameter::CallFunc_Lerp_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BPFL_PsychicUtility_C_LerpPsychicCaptureMaterialParameter, CallFunc_Lerp_ReturnValue_12) == 0x000228, "Member 'BPFL_PsychicUtility_C_LerpPsychicCaptureMaterialParameter::CallFunc_Lerp_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BPFL_PsychicUtility_C_LerpPsychicCaptureMaterialParameter, CallFunc_Lerp_ReturnValue_13) == 0x00022C, "Member 'BPFL_PsychicUtility_C_LerpPsychicCaptureMaterialParameter::CallFunc_Lerp_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BPFL_PsychicUtility_C_LerpPsychicCaptureMaterialParameter, CallFunc_Lerp_ReturnValue_14) == 0x000230, "Member 'BPFL_PsychicUtility_C_LerpPsychicCaptureMaterialParameter::CallFunc_Lerp_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BPFL_PsychicUtility_C_LerpPsychicCaptureMaterialParameter, CallFunc_Lerp_ReturnValue_15) == 0x000234, "Member 'BPFL_PsychicUtility_C_LerpPsychicCaptureMaterialParameter::CallFunc_Lerp_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BPFL_PsychicUtility_C_LerpPsychicCaptureMaterialParameter, CallFunc_LinearColorLerp_ReturnValue) == 0x000238, "Member 'BPFL_PsychicUtility_C_LerpPsychicCaptureMaterialParameter::CallFunc_LinearColorLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_PsychicUtility_C_LerpPsychicCaptureMaterialParameter, CallFunc_LinearColorLerp_ReturnValue_1) == 0x000248, "Member 'BPFL_PsychicUtility_C_LerpPsychicCaptureMaterialParameter::CallFunc_LinearColorLerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_PsychicUtility_C_LerpPsychicCaptureMaterialParameter, K2Node_MakeStruct_SPsychicCaptureMaterial) == 0x000258, "Member 'BPFL_PsychicUtility_C_LerpPsychicCaptureMaterialParameter::K2Node_MakeStruct_SPsychicCaptureMaterial' has a wrong offset!");

// Function BPFL_PsychicUtility.BPFL_PsychicUtility_C.SetupStartPsychicCaptureMaterial
// 0x01B8 (0x01B8 - 0x0000)
struct BPFL_PsychicUtility_C_SetupStartPsychicCaptureMaterial final
{
public:
	class UMeshComponent*                         Mesh;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSPsychicCaptureMaterial               BaseMaterialSetting;                               // 0x0008(0x00A0)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	struct FSPsychicCaptureMaterial               MaterialSetting;                                   // 0x00A8(0x00A0)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class UCurveVector*                           StartCurve;                                        // 0x0148(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurveTime;                                         // 0x0150(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A3D[0x4];                                     // 0x0154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0158(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Finish;                                            // 0x0160(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsFinish;                                          // 0x0161(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A3E[0x2];                                     // 0x0162(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CurveValue;                                        // 0x0164(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0171(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A3F[0x2];                                     // 0x0172(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetTimeRange_MinTime;                     // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeRange_MaxTime;                     // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A40[0x3];                                     // 0x0189(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue;    // 0x018C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_LinearColorToVector_ReturnValue;     // 0x019C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVectorValue_ReturnValue;               // 0x01A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_PsychicUtility_C_SetupStartPsychicCaptureMaterial) == 0x000008, "Wrong alignment on BPFL_PsychicUtility_C_SetupStartPsychicCaptureMaterial");
static_assert(sizeof(BPFL_PsychicUtility_C_SetupStartPsychicCaptureMaterial) == 0x0001B8, "Wrong size on BPFL_PsychicUtility_C_SetupStartPsychicCaptureMaterial");
static_assert(offsetof(BPFL_PsychicUtility_C_SetupStartPsychicCaptureMaterial, Mesh) == 0x000000, "Member 'BPFL_PsychicUtility_C_SetupStartPsychicCaptureMaterial::Mesh' has a wrong offset!");
static_assert(offsetof(BPFL_PsychicUtility_C_SetupStartPsychicCaptureMaterial, BaseMaterialSetting) == 0x000008, "Member 'BPFL_PsychicUtility_C_SetupStartPsychicCaptureMaterial::BaseMaterialSetting' has a wrong offset!");
static_assert(offsetof(BPFL_PsychicUtility_C_SetupStartPsychicCaptureMaterial, MaterialSetting) == 0x0000A8, "Member 'BPFL_PsychicUtility_C_SetupStartPsychicCaptureMaterial::MaterialSetting' has a wrong offset!");
static_assert(offsetof(BPFL_PsychicUtility_C_SetupStartPsychicCaptureMaterial, StartCurve) == 0x000148, "Member 'BPFL_PsychicUtility_C_SetupStartPsychicCaptureMaterial::StartCurve' has a wrong offset!");
static_assert(offsetof(BPFL_PsychicUtility_C_SetupStartPsychicCaptureMaterial, CurveTime) == 0x000150, "Member 'BPFL_PsychicUtility_C_SetupStartPsychicCaptureMaterial::CurveTime' has a wrong offset!");
static_assert(offsetof(BPFL_PsychicUtility_C_SetupStartPsychicCaptureMaterial, __WorldContext) == 0x000158, "Member 'BPFL_PsychicUtility_C_SetupStartPsychicCaptureMaterial::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_PsychicUtility_C_SetupStartPsychicCaptureMaterial, Finish) == 0x000160, "Member 'BPFL_PsychicUtility_C_SetupStartPsychicCaptureMaterial::Finish' has a wrong offset!");
static_assert(offsetof(BPFL_PsychicUtility_C_SetupStartPsychicCaptureMaterial, IsFinish) == 0x000161, "Member 'BPFL_PsychicUtility_C_SetupStartPsychicCaptureMaterial::IsFinish' has a wrong offset!");
static_assert(offsetof(BPFL_PsychicUtility_C_SetupStartPsychicCaptureMaterial, CurveValue) == 0x000164, "Member 'BPFL_PsychicUtility_C_SetupStartPsychicCaptureMaterial::CurveValue' has a wrong offset!");
static_assert(offsetof(BPFL_PsychicUtility_C_SetupStartPsychicCaptureMaterial, CallFunc_IsValid_ReturnValue) == 0x000170, "Member 'BPFL_PsychicUtility_C_SetupStartPsychicCaptureMaterial::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_PsychicUtility_C_SetupStartPsychicCaptureMaterial, CallFunc_IsValid_ReturnValue_1) == 0x000171, "Member 'BPFL_PsychicUtility_C_SetupStartPsychicCaptureMaterial::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_PsychicUtility_C_SetupStartPsychicCaptureMaterial, CallFunc_GetTimeRange_MinTime) == 0x000174, "Member 'BPFL_PsychicUtility_C_SetupStartPsychicCaptureMaterial::CallFunc_GetTimeRange_MinTime' has a wrong offset!");
static_assert(offsetof(BPFL_PsychicUtility_C_SetupStartPsychicCaptureMaterial, CallFunc_GetTimeRange_MaxTime) == 0x000178, "Member 'BPFL_PsychicUtility_C_SetupStartPsychicCaptureMaterial::CallFunc_GetTimeRange_MaxTime' has a wrong offset!");
static_assert(offsetof(BPFL_PsychicUtility_C_SetupStartPsychicCaptureMaterial, CallFunc_BreakVector_X) == 0x00017C, "Member 'BPFL_PsychicUtility_C_SetupStartPsychicCaptureMaterial::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BPFL_PsychicUtility_C_SetupStartPsychicCaptureMaterial, CallFunc_BreakVector_Y) == 0x000180, "Member 'BPFL_PsychicUtility_C_SetupStartPsychicCaptureMaterial::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BPFL_PsychicUtility_C_SetupStartPsychicCaptureMaterial, CallFunc_BreakVector_Z) == 0x000184, "Member 'BPFL_PsychicUtility_C_SetupStartPsychicCaptureMaterial::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BPFL_PsychicUtility_C_SetupStartPsychicCaptureMaterial, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000188, "Member 'BPFL_PsychicUtility_C_SetupStartPsychicCaptureMaterial::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_PsychicUtility_C_SetupStartPsychicCaptureMaterial, CallFunc_Multiply_LinearColorFloat_ReturnValue) == 0x00018C, "Member 'BPFL_PsychicUtility_C_SetupStartPsychicCaptureMaterial::CallFunc_Multiply_LinearColorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_PsychicUtility_C_SetupStartPsychicCaptureMaterial, CallFunc_Conv_LinearColorToVector_ReturnValue) == 0x00019C, "Member 'BPFL_PsychicUtility_C_SetupStartPsychicCaptureMaterial::CallFunc_Conv_LinearColorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_PsychicUtility_C_SetupStartPsychicCaptureMaterial, CallFunc_GetVectorValue_ReturnValue) == 0x0001A8, "Member 'BPFL_PsychicUtility_C_SetupStartPsychicCaptureMaterial::CallFunc_GetVectorValue_ReturnValue' has a wrong offset!");

// Function BPFL_PsychicUtility.BPFL_PsychicUtility_C.ClearPsychicCaptureMaterial
// 0x0018 (0x0018 - 0x0000)
struct BPFL_PsychicUtility_C_ClearPsychicCaptureMaterial final
{
public:
	class UMeshComponent*                         MeshComp;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPFL_PsychicUtility_C_ClearPsychicCaptureMaterial) == 0x000008, "Wrong alignment on BPFL_PsychicUtility_C_ClearPsychicCaptureMaterial");
static_assert(sizeof(BPFL_PsychicUtility_C_ClearPsychicCaptureMaterial) == 0x000018, "Wrong size on BPFL_PsychicUtility_C_ClearPsychicCaptureMaterial");
static_assert(offsetof(BPFL_PsychicUtility_C_ClearPsychicCaptureMaterial, MeshComp) == 0x000000, "Member 'BPFL_PsychicUtility_C_ClearPsychicCaptureMaterial::MeshComp' has a wrong offset!");
static_assert(offsetof(BPFL_PsychicUtility_C_ClearPsychicCaptureMaterial, __WorldContext) == 0x000008, "Member 'BPFL_PsychicUtility_C_ClearPsychicCaptureMaterial::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_PsychicUtility_C_ClearPsychicCaptureMaterial, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BPFL_PsychicUtility_C_ClearPsychicCaptureMaterial::CallFunc_IsValid_ReturnValue' has a wrong offset!");

}

