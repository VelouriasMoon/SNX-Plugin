#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_ui_Keyword

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BattlePrototype_classes.hpp"
#include "SlateCore_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WB_ui_Keyword.WB_ui_Keyword_C
// 0x0040 (0x0458 - 0x0418)
class UWB_ui_Keyword_C final : public UUIKeyword
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0418(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Out;                                               // 0x0420(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Default;                                           // 0x0428(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       In;                                                // 0x0430(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UREDTextBlock*                          Delete_Text_Keyword_2;                             // 0x0438(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEditableText*                          EditableText_517;                                  // 0x0440(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UREDTextBlock*                          Text_Keyword_1;                                    // 0x0448(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UREDTextBlock*                          Text_Keyword_3;                                    // 0x0450(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WB_ui_Keyword(int32 EntryPoint);
	void Event_OnTextCommitted(const class FText& Text, ETextCommit CommitMethod);
	void Event_OnTextChanged(const class FText& Text);
	void OnInitialized();
	void UpdateState(int32 State, int32 SubState, float DeltaSeconds);

	bool IsWindows() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WB_ui_Keyword_C">();
	}
	static class UWB_ui_Keyword_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWB_ui_Keyword_C>();
	}
};
static_assert(alignof(UWB_ui_Keyword_C) == 0x000008, "Wrong alignment on UWB_ui_Keyword_C");
static_assert(sizeof(UWB_ui_Keyword_C) == 0x000458, "Wrong size on UWB_ui_Keyword_C");
static_assert(offsetof(UWB_ui_Keyword_C, UberGraphFrame) == 0x000418, "Member 'UWB_ui_Keyword_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWB_ui_Keyword_C, Out) == 0x000420, "Member 'UWB_ui_Keyword_C::Out' has a wrong offset!");
static_assert(offsetof(UWB_ui_Keyword_C, Default) == 0x000428, "Member 'UWB_ui_Keyword_C::Default' has a wrong offset!");
static_assert(offsetof(UWB_ui_Keyword_C, In) == 0x000430, "Member 'UWB_ui_Keyword_C::In' has a wrong offset!");
static_assert(offsetof(UWB_ui_Keyword_C, Delete_Text_Keyword_2) == 0x000438, "Member 'UWB_ui_Keyword_C::Delete_Text_Keyword_2' has a wrong offset!");
static_assert(offsetof(UWB_ui_Keyword_C, EditableText_517) == 0x000440, "Member 'UWB_ui_Keyword_C::EditableText_517' has a wrong offset!");
static_assert(offsetof(UWB_ui_Keyword_C, Text_Keyword_1) == 0x000448, "Member 'UWB_ui_Keyword_C::Text_Keyword_1' has a wrong offset!");
static_assert(offsetof(UWB_ui_Keyword_C, Text_Keyword_3) == 0x000450, "Member 'UWB_ui_Keyword_C::Text_Keyword_3' has a wrong offset!");

}

