#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_EnemyAvatar

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_EnemyAvatar.BP_EnemyAvatar_C
// 0x0058 (0x0118 - 0x00C0)
class UBP_EnemyAvatar_C final : public UActorComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	TArray<class AActor*>                         AvatarList;                                        // 0x00C8(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance, HasGetValueTypeHash)
	TArray<class ARSBattleEnemy_C*>               DeadList;                                          // 0x00D8(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance, HasGetValueTypeHash)
	TArray<float>                                 RemoveSeconds;                                     // 0x00E8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                          IsDead;                                            // 0x00F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6223[0x3];                                     // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         AvatarNo;                                          // 0x00FC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AvatarVanishSeconds;                               // 0x0100(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaterialCahngeSeconds;                             // 0x0104(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 AvatarOwner;                                       // 0x0108(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CreateAvatarCount;                                 // 0x0110(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxCreateAvatarCount;                              // 0x0114(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_EnemyAvatar(int32 EntryPoint);
	void ReceiveTick(float DeltaSeconds);
	void AddAvatar(class AActor* Avatar);
	void DeadAvatar(class ARSBattleEnemy_C* TargetActor);
	void AvatarDeadUpdate(float DeltaSeconds);
	void SetAvatarOwner(class AActor* OwnerActor);
	void IncCreateAvaarCount();

	void IsOriginal(bool* Param_IsOriginal) const;
	void IsCanAvatar(bool* Param_IsAvatar) const;
	void IsAvatar(bool* Param_IsAvatar) const;
	void GetAvatarOwner(class AActor** Param_AvatarOwner) const;
	void IsEnableAvatar(bool* bEnable) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_EnemyAvatar_C">();
	}
	static class UBP_EnemyAvatar_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_EnemyAvatar_C>();
	}
};
static_assert(alignof(UBP_EnemyAvatar_C) == 0x000008, "Wrong alignment on UBP_EnemyAvatar_C");
static_assert(sizeof(UBP_EnemyAvatar_C) == 0x000118, "Wrong size on UBP_EnemyAvatar_C");
static_assert(offsetof(UBP_EnemyAvatar_C, UberGraphFrame) == 0x0000C0, "Member 'UBP_EnemyAvatar_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_EnemyAvatar_C, AvatarList) == 0x0000C8, "Member 'UBP_EnemyAvatar_C::AvatarList' has a wrong offset!");
static_assert(offsetof(UBP_EnemyAvatar_C, DeadList) == 0x0000D8, "Member 'UBP_EnemyAvatar_C::DeadList' has a wrong offset!");
static_assert(offsetof(UBP_EnemyAvatar_C, RemoveSeconds) == 0x0000E8, "Member 'UBP_EnemyAvatar_C::RemoveSeconds' has a wrong offset!");
static_assert(offsetof(UBP_EnemyAvatar_C, IsDead) == 0x0000F8, "Member 'UBP_EnemyAvatar_C::IsDead' has a wrong offset!");
static_assert(offsetof(UBP_EnemyAvatar_C, AvatarNo) == 0x0000FC, "Member 'UBP_EnemyAvatar_C::AvatarNo' has a wrong offset!");
static_assert(offsetof(UBP_EnemyAvatar_C, AvatarVanishSeconds) == 0x000100, "Member 'UBP_EnemyAvatar_C::AvatarVanishSeconds' has a wrong offset!");
static_assert(offsetof(UBP_EnemyAvatar_C, MaterialCahngeSeconds) == 0x000104, "Member 'UBP_EnemyAvatar_C::MaterialCahngeSeconds' has a wrong offset!");
static_assert(offsetof(UBP_EnemyAvatar_C, AvatarOwner) == 0x000108, "Member 'UBP_EnemyAvatar_C::AvatarOwner' has a wrong offset!");
static_assert(offsetof(UBP_EnemyAvatar_C, CreateAvatarCount) == 0x000110, "Member 'UBP_EnemyAvatar_C::CreateAvatarCount' has a wrong offset!");
static_assert(offsetof(UBP_EnemyAvatar_C, MaxCreateAvatarCount) == 0x000114, "Member 'UBP_EnemyAvatar_C::MaxCreateAvatarCount' has a wrong offset!");

}

