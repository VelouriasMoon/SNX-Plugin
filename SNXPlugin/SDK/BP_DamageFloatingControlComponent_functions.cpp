#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DamageFloatingControlComponent

#include "Basic.hpp"

#include "BP_DamageFloatingControlComponent_classes.hpp"
#include "BP_DamageFloatingControlComponent_parameters.hpp"


namespace SDK
{

// Function BP_DamageFloatingControlComponent.BP_DamageFloatingControlComponent_C.DispatchBeginFall__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UBP_DamageFloatingControlComponent_C::DispatchBeginFall__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DamageFloatingControlComponent_C", "DispatchBeginFall__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DamageFloatingControlComponent.BP_DamageFloatingControlComponent_C.DispathFailedFall__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UBP_DamageFloatingControlComponent_C::DispathFailedFall__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DamageFloatingControlComponent_C", "DispathFailedFall__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DamageFloatingControlComponent.BP_DamageFloatingControlComponent_C.ExecuteUbergraph_BP_DamageFloatingControlComponent
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_DamageFloatingControlComponent_C::ExecuteUbergraph_BP_DamageFloatingControlComponent(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DamageFloatingControlComponent_C", "ExecuteUbergraph_BP_DamageFloatingControlComponent");

	Params::BP_DamageFloatingControlComponent_C_ExecuteUbergraph_BP_DamageFloatingControlComponent Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DamageFloatingControlComponent.BP_DamageFloatingControlComponent_C.UnbindUpdate
// (BlueprintCallable, BlueprintEvent)

void UBP_DamageFloatingControlComponent_C::UnbindUpdate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DamageFloatingControlComponent_C", "UnbindUpdate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DamageFloatingControlComponent.BP_DamageFloatingControlComponent_C.BindUpdate
// (BlueprintCallable, BlueprintEvent)

void UBP_DamageFloatingControlComponent_C::BindUpdate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DamageFloatingControlComponent_C", "BindUpdate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DamageFloatingControlComponent.BP_DamageFloatingControlComponent_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UBP_DamageFloatingControlComponent_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DamageFloatingControlComponent_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DamageFloatingControlComponent.BP_DamageFloatingControlComponent_C.Update
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSec                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_DamageFloatingControlComponent_C::Update(float DeltaSec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DamageFloatingControlComponent_C", "Update");

	Params::BP_DamageFloatingControlComponent_C_Update Parms{};

	Parms.DeltaSec = DeltaSec;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DamageFloatingControlComponent.BP_DamageFloatingControlComponent_C.Start
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Param_Power                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         Param_Rotation                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector                          Param_HitDir                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_DamageFloatingControlComponent_C::Start(float Param_Power, const struct FRotator& Param_Rotation, const struct FVector& Param_HitDir)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DamageFloatingControlComponent_C", "Start");

	Params::BP_DamageFloatingControlComponent_C_Start Parms{};

	Parms.Param_Power = Param_Power;
	Parms.Param_Rotation = std::move(Param_Rotation);
	Parms.Param_HitDir = std::move(Param_HitDir);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DamageFloatingControlComponent.BP_DamageFloatingControlComponent_C.GetActive
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Param_bActive                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_DamageFloatingControlComponent_C::GetActive(bool* Param_bActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DamageFloatingControlComponent_C", "GetActive");

	Params::BP_DamageFloatingControlComponent_C_GetActive Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_bActive != nullptr)
		*Param_bActive = Parms.Param_bActive;
}


// Function BP_DamageFloatingControlComponent.BP_DamageFloatingControlComponent_C.End
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_DamageFloatingControlComponent_C::End()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DamageFloatingControlComponent_C", "End");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DamageFloatingControlComponent.BP_DamageFloatingControlComponent_C.SetLanding
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_bLanding                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_DamageFloatingControlComponent_C::SetLanding(bool Param_bLanding)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DamageFloatingControlComponent_C", "SetLanding");

	Params::BP_DamageFloatingControlComponent_C_SetLanding Parms{};

	Parms.Param_bLanding = Param_bLanding;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DamageFloatingControlComponent.BP_DamageFloatingControlComponent_C.SetSlowMode
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bSlow                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_DamageFloatingControlComponent_C::SetSlowMode(bool bSlow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DamageFloatingControlComponent_C", "SetSlowMode");

	Params::BP_DamageFloatingControlComponent_C_SetSlowMode Parms{};

	Parms.bSlow = bSlow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DamageFloatingControlComponent.BP_DamageFloatingControlComponent_C.IsIgnoreLandingCheck
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    bIgnoreLandingCheck                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_DamageFloatingControlComponent_C::IsIgnoreLandingCheck(bool* bIgnoreLandingCheck)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DamageFloatingControlComponent_C", "IsIgnoreLandingCheck");

	Params::BP_DamageFloatingControlComponent_C_IsIgnoreLandingCheck Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bIgnoreLandingCheck != nullptr)
		*bIgnoreLandingCheck = Parms.bIgnoreLandingCheck;
}

}

