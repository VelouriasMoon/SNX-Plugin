#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PostProcessOverrayBase

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_PostProcessOverrayBase.BP_PostProcessOverrayBase_C.ExecuteUbergraph_BP_PostProcessOverrayBase
// 0x0108 (0x0108 - 0x0000)
struct BP_PostProcessOverrayBase_C_ExecuteUbergraph_BP_PostProcessOverrayBase final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4E3C[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PostProcessManager_C*               CallFunc_GetPostProcessManager_Manager;            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E3D[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PostProcessOverraySystem_C*         K2Node_DynamicCast_AsBP_Post_Process_Overray_System; // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4E3E[0x6];                                     // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_1;  // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_1;           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_1;            // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_1;       // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E3F[0x3];                                     // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0060(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E40[0x6];                                     // 0x00EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue_1;              // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PostProcessOverrayBase_C_ExecuteUbergraph_BP_PostProcessOverrayBase) == 0x000008, "Wrong alignment on BP_PostProcessOverrayBase_C_ExecuteUbergraph_BP_PostProcessOverrayBase");
static_assert(sizeof(BP_PostProcessOverrayBase_C_ExecuteUbergraph_BP_PostProcessOverrayBase) == 0x000108, "Wrong size on BP_PostProcessOverrayBase_C_ExecuteUbergraph_BP_PostProcessOverrayBase");
static_assert(offsetof(BP_PostProcessOverrayBase_C_ExecuteUbergraph_BP_PostProcessOverrayBase, EntryPoint) == 0x000000, "Member 'BP_PostProcessOverrayBase_C_ExecuteUbergraph_BP_PostProcessOverrayBase::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_PostProcessOverrayBase_C_ExecuteUbergraph_BP_PostProcessOverrayBase, CallFunc_GetPostProcessManager_Manager) == 0x000008, "Member 'BP_PostProcessOverrayBase_C_ExecuteUbergraph_BP_PostProcessOverrayBase::CallFunc_GetPostProcessManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_PostProcessOverrayBase_C_ExecuteUbergraph_BP_PostProcessOverrayBase, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000010, "Member 'BP_PostProcessOverrayBase_C_ExecuteUbergraph_BP_PostProcessOverrayBase::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_PostProcessOverrayBase_C_ExecuteUbergraph_BP_PostProcessOverrayBase, K2Node_ComponentBoundEvent_OtherActor) == 0x000018, "Member 'BP_PostProcessOverrayBase_C_ExecuteUbergraph_BP_PostProcessOverrayBase::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_PostProcessOverrayBase_C_ExecuteUbergraph_BP_PostProcessOverrayBase, K2Node_ComponentBoundEvent_OtherComp) == 0x000020, "Member 'BP_PostProcessOverrayBase_C_ExecuteUbergraph_BP_PostProcessOverrayBase::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_PostProcessOverrayBase_C_ExecuteUbergraph_BP_PostProcessOverrayBase, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000028, "Member 'BP_PostProcessOverrayBase_C_ExecuteUbergraph_BP_PostProcessOverrayBase::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_PostProcessOverrayBase_C_ExecuteUbergraph_BP_PostProcessOverrayBase, CallFunc_IsValid_ReturnValue) == 0x00002C, "Member 'BP_PostProcessOverrayBase_C_ExecuteUbergraph_BP_PostProcessOverrayBase::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessOverrayBase_C_ExecuteUbergraph_BP_PostProcessOverrayBase, K2Node_DynamicCast_AsBP_Post_Process_Overray_System) == 0x000030, "Member 'BP_PostProcessOverrayBase_C_ExecuteUbergraph_BP_PostProcessOverrayBase::K2Node_DynamicCast_AsBP_Post_Process_Overray_System' has a wrong offset!");
static_assert(offsetof(BP_PostProcessOverrayBase_C_ExecuteUbergraph_BP_PostProcessOverrayBase, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_PostProcessOverrayBase_C_ExecuteUbergraph_BP_PostProcessOverrayBase::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PostProcessOverrayBase_C_ExecuteUbergraph_BP_PostProcessOverrayBase, K2Node_Event_EndPlayReason) == 0x000039, "Member 'BP_PostProcessOverrayBase_C_ExecuteUbergraph_BP_PostProcessOverrayBase::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(BP_PostProcessOverrayBase_C_ExecuteUbergraph_BP_PostProcessOverrayBase, K2Node_ComponentBoundEvent_OverlappedComponent_1) == 0x000040, "Member 'BP_PostProcessOverrayBase_C_ExecuteUbergraph_BP_PostProcessOverrayBase::K2Node_ComponentBoundEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(BP_PostProcessOverrayBase_C_ExecuteUbergraph_BP_PostProcessOverrayBase, K2Node_ComponentBoundEvent_OtherActor_1) == 0x000048, "Member 'BP_PostProcessOverrayBase_C_ExecuteUbergraph_BP_PostProcessOverrayBase::K2Node_ComponentBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(BP_PostProcessOverrayBase_C_ExecuteUbergraph_BP_PostProcessOverrayBase, K2Node_ComponentBoundEvent_OtherComp_1) == 0x000050, "Member 'BP_PostProcessOverrayBase_C_ExecuteUbergraph_BP_PostProcessOverrayBase::K2Node_ComponentBoundEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(BP_PostProcessOverrayBase_C_ExecuteUbergraph_BP_PostProcessOverrayBase, K2Node_ComponentBoundEvent_OtherBodyIndex_1) == 0x000058, "Member 'BP_PostProcessOverrayBase_C_ExecuteUbergraph_BP_PostProcessOverrayBase::K2Node_ComponentBoundEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(BP_PostProcessOverrayBase_C_ExecuteUbergraph_BP_PostProcessOverrayBase, K2Node_ComponentBoundEvent_bFromSweep) == 0x00005C, "Member 'BP_PostProcessOverrayBase_C_ExecuteUbergraph_BP_PostProcessOverrayBase::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_PostProcessOverrayBase_C_ExecuteUbergraph_BP_PostProcessOverrayBase, K2Node_ComponentBoundEvent_SweepResult) == 0x000060, "Member 'BP_PostProcessOverrayBase_C_ExecuteUbergraph_BP_PostProcessOverrayBase::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(BP_PostProcessOverrayBase_C_ExecuteUbergraph_BP_PostProcessOverrayBase, CallFunc_IsValid_ReturnValue_1) == 0x0000E8, "Member 'BP_PostProcessOverrayBase_C_ExecuteUbergraph_BP_PostProcessOverrayBase::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PostProcessOverrayBase_C_ExecuteUbergraph_BP_PostProcessOverrayBase, CallFunc_IsValid_ReturnValue_2) == 0x0000E9, "Member 'BP_PostProcessOverrayBase_C_ExecuteUbergraph_BP_PostProcessOverrayBase::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PostProcessOverrayBase_C_ExecuteUbergraph_BP_PostProcessOverrayBase, CallFunc_GetPlayerPawn_ReturnValue) == 0x0000F0, "Member 'BP_PostProcessOverrayBase_C_ExecuteUbergraph_BP_PostProcessOverrayBase::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessOverrayBase_C_ExecuteUbergraph_BP_PostProcessOverrayBase, CallFunc_GetPlayerPawn_ReturnValue_1) == 0x0000F8, "Member 'BP_PostProcessOverrayBase_C_ExecuteUbergraph_BP_PostProcessOverrayBase::CallFunc_GetPlayerPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PostProcessOverrayBase_C_ExecuteUbergraph_BP_PostProcessOverrayBase, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000100, "Member 'BP_PostProcessOverrayBase_C_ExecuteUbergraph_BP_PostProcessOverrayBase::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessOverrayBase_C_ExecuteUbergraph_BP_PostProcessOverrayBase, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x000101, "Member 'BP_PostProcessOverrayBase_C_ExecuteUbergraph_BP_PostProcessOverrayBase::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");

// Function BP_PostProcessOverrayBase.BP_PostProcessOverrayBase_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_PostProcessOverrayBase_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PostProcessOverrayBase_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BP_PostProcessOverrayBase_C_ReceiveEndPlay");
static_assert(sizeof(BP_PostProcessOverrayBase_C_ReceiveEndPlay) == 0x000001, "Wrong size on BP_PostProcessOverrayBase_C_ReceiveEndPlay");
static_assert(offsetof(BP_PostProcessOverrayBase_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BP_PostProcessOverrayBase_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BP_PostProcessOverrayBase.BP_PostProcessOverrayBase_C.BndEvt__SmoothRadius_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct BP_PostProcessOverrayBase_C_BndEvt__SmoothRadius_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PostProcessOverrayBase_C_BndEvt__SmoothRadius_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_PostProcessOverrayBase_C_BndEvt__SmoothRadius_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_PostProcessOverrayBase_C_BndEvt__SmoothRadius_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on BP_PostProcessOverrayBase_C_BndEvt__SmoothRadius_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_PostProcessOverrayBase_C_BndEvt__SmoothRadius_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_PostProcessOverrayBase_C_BndEvt__SmoothRadius_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_PostProcessOverrayBase_C_BndEvt__SmoothRadius_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_PostProcessOverrayBase_C_BndEvt__SmoothRadius_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_PostProcessOverrayBase_C_BndEvt__SmoothRadius_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_PostProcessOverrayBase_C_BndEvt__SmoothRadius_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_PostProcessOverrayBase_C_BndEvt__SmoothRadius_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_PostProcessOverrayBase_C_BndEvt__SmoothRadius_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function BP_PostProcessOverrayBase.BP_PostProcessOverrayBase_C.BndEvt__SmoothRadius_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature
// 0x00A8 (0x00A8 - 0x0000)
struct BP_PostProcessOverrayBase_C_BndEvt__SmoothRadius_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E41[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_PostProcessOverrayBase_C_BndEvt__SmoothRadius_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_PostProcessOverrayBase_C_BndEvt__SmoothRadius_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_PostProcessOverrayBase_C_BndEvt__SmoothRadius_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000A8, "Wrong size on BP_PostProcessOverrayBase_C_BndEvt__SmoothRadius_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_PostProcessOverrayBase_C_BndEvt__SmoothRadius_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_PostProcessOverrayBase_C_BndEvt__SmoothRadius_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_PostProcessOverrayBase_C_BndEvt__SmoothRadius_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_PostProcessOverrayBase_C_BndEvt__SmoothRadius_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_PostProcessOverrayBase_C_BndEvt__SmoothRadius_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_PostProcessOverrayBase_C_BndEvt__SmoothRadius_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_PostProcessOverrayBase_C_BndEvt__SmoothRadius_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_PostProcessOverrayBase_C_BndEvt__SmoothRadius_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_PostProcessOverrayBase_C_BndEvt__SmoothRadius_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_PostProcessOverrayBase_C_BndEvt__SmoothRadius_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_PostProcessOverrayBase_C_BndEvt__SmoothRadius_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_PostProcessOverrayBase_C_BndEvt__SmoothRadius_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_PostProcessOverrayBase.BP_PostProcessOverrayBase_C.UserConstructionScript
// 0x0008 (0x0008 - 0x0000)
struct BP_PostProcessOverrayBase_C_UserConstructionScript final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E42[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PostProcessOverrayBase_C_UserConstructionScript) == 0x000004, "Wrong alignment on BP_PostProcessOverrayBase_C_UserConstructionScript");
static_assert(sizeof(BP_PostProcessOverrayBase_C_UserConstructionScript) == 0x000008, "Wrong size on BP_PostProcessOverrayBase_C_UserConstructionScript");
static_assert(offsetof(BP_PostProcessOverrayBase_C_UserConstructionScript, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_PostProcessOverrayBase_C_UserConstructionScript::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessOverrayBase_C_UserConstructionScript, CallFunc_FMax_ReturnValue) == 0x000004, "Member 'BP_PostProcessOverrayBase_C_UserConstructionScript::CallFunc_FMax_ReturnValue' has a wrong offset!");

// Function BP_PostProcessOverrayBase.BP_PostProcessOverrayBase_C.CalcRate
// 0x001C (0x001C - 0x0000)
struct BP_PostProcessOverrayBase_C_CalcRate final
{
public:
	struct FVector                                CameraVector;                                      // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CameraRotation;                                    // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         Rate;                                              // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PostProcessOverrayBase_C_CalcRate) == 0x000004, "Wrong alignment on BP_PostProcessOverrayBase_C_CalcRate");
static_assert(sizeof(BP_PostProcessOverrayBase_C_CalcRate) == 0x00001C, "Wrong size on BP_PostProcessOverrayBase_C_CalcRate");
static_assert(offsetof(BP_PostProcessOverrayBase_C_CalcRate, CameraVector) == 0x000000, "Member 'BP_PostProcessOverrayBase_C_CalcRate::CameraVector' has a wrong offset!");
static_assert(offsetof(BP_PostProcessOverrayBase_C_CalcRate, CameraRotation) == 0x00000C, "Member 'BP_PostProcessOverrayBase_C_CalcRate::CameraRotation' has a wrong offset!");
static_assert(offsetof(BP_PostProcessOverrayBase_C_CalcRate, Rate) == 0x000018, "Member 'BP_PostProcessOverrayBase_C_CalcRate::Rate' has a wrong offset!");

// Function BP_PostProcessOverrayBase.BP_PostProcessOverrayBase_C.CalcLengthRate
// 0x0044 (0x0044 - 0x0000)
struct BP_PostProcessOverrayBase_C_CalcLengthRate final
{
public:
	struct FVector                                CameraLocation;                                    // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CameraRotation;                                    // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         Rate;                                              // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScaledSphereRadius_ReturnValue;        // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScaledSphereRadius_ReturnValue_1;      // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MathExpression_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PostProcessOverrayBase_C_CalcLengthRate) == 0x000004, "Wrong alignment on BP_PostProcessOverrayBase_C_CalcLengthRate");
static_assert(sizeof(BP_PostProcessOverrayBase_C_CalcLengthRate) == 0x000044, "Wrong size on BP_PostProcessOverrayBase_C_CalcLengthRate");
static_assert(offsetof(BP_PostProcessOverrayBase_C_CalcLengthRate, CameraLocation) == 0x000000, "Member 'BP_PostProcessOverrayBase_C_CalcLengthRate::CameraLocation' has a wrong offset!");
static_assert(offsetof(BP_PostProcessOverrayBase_C_CalcLengthRate, CameraRotation) == 0x00000C, "Member 'BP_PostProcessOverrayBase_C_CalcLengthRate::CameraRotation' has a wrong offset!");
static_assert(offsetof(BP_PostProcessOverrayBase_C_CalcLengthRate, Rate) == 0x000018, "Member 'BP_PostProcessOverrayBase_C_CalcLengthRate::Rate' has a wrong offset!");
static_assert(offsetof(BP_PostProcessOverrayBase_C_CalcLengthRate, CallFunc_GetScaledSphereRadius_ReturnValue) == 0x00001C, "Member 'BP_PostProcessOverrayBase_C_CalcLengthRate::CallFunc_GetScaledSphereRadius_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessOverrayBase_C_CalcLengthRate, CallFunc_GetScaledSphereRadius_ReturnValue_1) == 0x000020, "Member 'BP_PostProcessOverrayBase_C_CalcLengthRate::CallFunc_GetScaledSphereRadius_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PostProcessOverrayBase_C_CalcLengthRate, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000024, "Member 'BP_PostProcessOverrayBase_C_CalcLengthRate::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessOverrayBase_C_CalcLengthRate, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000030, "Member 'BP_PostProcessOverrayBase_C_CalcLengthRate::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessOverrayBase_C_CalcLengthRate, CallFunc_VSize_ReturnValue) == 0x00003C, "Member 'BP_PostProcessOverrayBase_C_CalcLengthRate::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessOverrayBase_C_CalcLengthRate, K2Node_MathExpression_ReturnValue) == 0x000040, "Member 'BP_PostProcessOverrayBase_C_CalcLengthRate::K2Node_MathExpression_ReturnValue' has a wrong offset!");

// Function BP_PostProcessOverrayBase.BP_PostProcessOverrayBase_C.CalcRotationRate
// 0x0064 (0x0064 - 0x0000)
struct BP_PostProcessOverrayBase_C_CalcRotationRate final
{
public:
	struct FVector                                CameraLocation;                                    // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CameraRotation;                                    // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         Rate;                                              // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Percent_FloatFloat_ReturnValue;           // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E43[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PostProcessOverrayBase_C_CalcRotationRate) == 0x000004, "Wrong alignment on BP_PostProcessOverrayBase_C_CalcRotationRate");
static_assert(sizeof(BP_PostProcessOverrayBase_C_CalcRotationRate) == 0x000064, "Wrong size on BP_PostProcessOverrayBase_C_CalcRotationRate");
static_assert(offsetof(BP_PostProcessOverrayBase_C_CalcRotationRate, CameraLocation) == 0x000000, "Member 'BP_PostProcessOverrayBase_C_CalcRotationRate::CameraLocation' has a wrong offset!");
static_assert(offsetof(BP_PostProcessOverrayBase_C_CalcRotationRate, CameraRotation) == 0x00000C, "Member 'BP_PostProcessOverrayBase_C_CalcRotationRate::CameraRotation' has a wrong offset!");
static_assert(offsetof(BP_PostProcessOverrayBase_C_CalcRotationRate, Rate) == 0x000018, "Member 'BP_PostProcessOverrayBase_C_CalcRotationRate::Rate' has a wrong offset!");
static_assert(offsetof(BP_PostProcessOverrayBase_C_CalcRotationRate, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00001C, "Member 'BP_PostProcessOverrayBase_C_CalcRotationRate::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessOverrayBase_C_CalcRotationRate, CallFunc_BreakRotator_Roll) == 0x000028, "Member 'BP_PostProcessOverrayBase_C_CalcRotationRate::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_PostProcessOverrayBase_C_CalcRotationRate, CallFunc_BreakRotator_Pitch) == 0x00002C, "Member 'BP_PostProcessOverrayBase_C_CalcRotationRate::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_PostProcessOverrayBase_C_CalcRotationRate, CallFunc_BreakRotator_Yaw) == 0x000030, "Member 'BP_PostProcessOverrayBase_C_CalcRotationRate::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_PostProcessOverrayBase_C_CalcRotationRate, CallFunc_FindLookAtRotation_ReturnValue) == 0x000034, "Member 'BP_PostProcessOverrayBase_C_CalcRotationRate::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessOverrayBase_C_CalcRotationRate, CallFunc_BreakRotator_Roll_1) == 0x000040, "Member 'BP_PostProcessOverrayBase_C_CalcRotationRate::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(BP_PostProcessOverrayBase_C_CalcRotationRate, CallFunc_BreakRotator_Pitch_1) == 0x000044, "Member 'BP_PostProcessOverrayBase_C_CalcRotationRate::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(BP_PostProcessOverrayBase_C_CalcRotationRate, CallFunc_BreakRotator_Yaw_1) == 0x000048, "Member 'BP_PostProcessOverrayBase_C_CalcRotationRate::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(BP_PostProcessOverrayBase_C_CalcRotationRate, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00004C, "Member 'BP_PostProcessOverrayBase_C_CalcRotationRate::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessOverrayBase_C_CalcRotationRate, CallFunc_Percent_FloatFloat_ReturnValue) == 0x000050, "Member 'BP_PostProcessOverrayBase_C_CalcRotationRate::CallFunc_Percent_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessOverrayBase_C_CalcRotationRate, CallFunc_Abs_ReturnValue) == 0x000054, "Member 'BP_PostProcessOverrayBase_C_CalcRotationRate::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessOverrayBase_C_CalcRotationRate, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000058, "Member 'BP_PostProcessOverrayBase_C_CalcRotationRate::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessOverrayBase_C_CalcRotationRate, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x00005C, "Member 'BP_PostProcessOverrayBase_C_CalcRotationRate::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PostProcessOverrayBase_C_CalcRotationRate, CallFunc_SelectFloat_ReturnValue) == 0x000060, "Member 'BP_PostProcessOverrayBase_C_CalcRotationRate::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");

}

