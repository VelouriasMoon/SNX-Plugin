#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HitManager

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "BattlePrototype_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass HitManager.HitManager_C
// 0x0020 (0x0250 - 0x0230)
class AHitManager_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0230(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCharacterHitCheckComponent*            CharacterHitCheck;                                 // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UHitCheckComponent*                     HitCheck;                                          // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_HitManager(int32 EntryPoint);
	void ReceiveBeginPlay();
	void DelayBeginPlay();
	bool InitializeManager(EManagerProcTiming Timing);
	bool FinalizeManager(EManagerProcTiming Timing);
	bool IsNeedFrameWait();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"HitManager_C">();
	}
	static class AHitManager_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AHitManager_C>();
	}
};
static_assert(alignof(AHitManager_C) == 0x000008, "Wrong alignment on AHitManager_C");
static_assert(sizeof(AHitManager_C) == 0x000250, "Wrong size on AHitManager_C");
static_assert(offsetof(AHitManager_C, UberGraphFrame) == 0x000230, "Member 'AHitManager_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AHitManager_C, CharacterHitCheck) == 0x000238, "Member 'AHitManager_C::CharacterHitCheck' has a wrong offset!");
static_assert(offsetof(AHitManager_C, HitCheck) == 0x000240, "Member 'AHitManager_C::HitCheck' has a wrong offset!");
static_assert(offsetof(AHitManager_C, DefaultSceneRoot) == 0x000248, "Member 'AHitManager_C::DefaultSceneRoot' has a wrong offset!");

}

