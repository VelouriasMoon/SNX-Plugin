#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_EnemyMaterialAccessorComponent

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "BattlePrototype_structs.hpp"


namespace SDK::Params
{

// Function BP_EnemyMaterialAccessorComponent.BP_EnemyMaterialAccessorComponent_C.ExecuteUbergraph_BP_EnemyMaterialAccessorComponent
// 0x0018 (0x0018 - 0x0000)
struct BP_EnemyMaterialAccessorComponent_C_ExecuteUbergraph_BP_EnemyMaterialAccessorComponent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A26[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             K2Node_Event_Enemy;                                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 K2Node_Event_EnemyMesh;                            // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EnemyMaterialAccessorComponent_C_ExecuteUbergraph_BP_EnemyMaterialAccessorComponent) == 0x000008, "Wrong alignment on BP_EnemyMaterialAccessorComponent_C_ExecuteUbergraph_BP_EnemyMaterialAccessorComponent");
static_assert(sizeof(BP_EnemyMaterialAccessorComponent_C_ExecuteUbergraph_BP_EnemyMaterialAccessorComponent) == 0x000018, "Wrong size on BP_EnemyMaterialAccessorComponent_C_ExecuteUbergraph_BP_EnemyMaterialAccessorComponent");
static_assert(offsetof(BP_EnemyMaterialAccessorComponent_C_ExecuteUbergraph_BP_EnemyMaterialAccessorComponent, EntryPoint) == 0x000000, "Member 'BP_EnemyMaterialAccessorComponent_C_ExecuteUbergraph_BP_EnemyMaterialAccessorComponent::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_EnemyMaterialAccessorComponent_C_ExecuteUbergraph_BP_EnemyMaterialAccessorComponent, K2Node_Event_Enemy) == 0x000008, "Member 'BP_EnemyMaterialAccessorComponent_C_ExecuteUbergraph_BP_EnemyMaterialAccessorComponent::K2Node_Event_Enemy' has a wrong offset!");
static_assert(offsetof(BP_EnemyMaterialAccessorComponent_C_ExecuteUbergraph_BP_EnemyMaterialAccessorComponent, K2Node_Event_EnemyMesh) == 0x000010, "Member 'BP_EnemyMaterialAccessorComponent_C_ExecuteUbergraph_BP_EnemyMaterialAccessorComponent::K2Node_Event_EnemyMesh' has a wrong offset!");

// Function BP_EnemyMaterialAccessorComponent.BP_EnemyMaterialAccessorComponent_C.SetEnemyMesh
// 0x0008 (0x0008 - 0x0000)
struct BP_EnemyMaterialAccessorComponent_C_SetEnemyMesh final
{
public:
	class USkeletalMeshComponent*                 EnemyMesh;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EnemyMaterialAccessorComponent_C_SetEnemyMesh) == 0x000008, "Wrong alignment on BP_EnemyMaterialAccessorComponent_C_SetEnemyMesh");
static_assert(sizeof(BP_EnemyMaterialAccessorComponent_C_SetEnemyMesh) == 0x000008, "Wrong size on BP_EnemyMaterialAccessorComponent_C_SetEnemyMesh");
static_assert(offsetof(BP_EnemyMaterialAccessorComponent_C_SetEnemyMesh, EnemyMesh) == 0x000000, "Member 'BP_EnemyMaterialAccessorComponent_C_SetEnemyMesh::EnemyMesh' has a wrong offset!");

// Function BP_EnemyMaterialAccessorComponent.BP_EnemyMaterialAccessorComponent_C.SetupDefaultParameter
// 0x0008 (0x0008 - 0x0000)
struct BP_EnemyMaterialAccessorComponent_C_SetupDefaultParameter final
{
public:
	class ACharacter*                             Enemy;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EnemyMaterialAccessorComponent_C_SetupDefaultParameter) == 0x000008, "Wrong alignment on BP_EnemyMaterialAccessorComponent_C_SetupDefaultParameter");
static_assert(sizeof(BP_EnemyMaterialAccessorComponent_C_SetupDefaultParameter) == 0x000008, "Wrong size on BP_EnemyMaterialAccessorComponent_C_SetupDefaultParameter");
static_assert(offsetof(BP_EnemyMaterialAccessorComponent_C_SetupDefaultParameter, Enemy) == 0x000000, "Member 'BP_EnemyMaterialAccessorComponent_C_SetupDefaultParameter::Enemy' has a wrong offset!");

// Function BP_EnemyMaterialAccessorComponent.BP_EnemyMaterialAccessorComponent_C.PrivateSetupDefaultParameter
// 0x0008 (0x0008 - 0x0000)
struct BP_EnemyMaterialAccessorComponent_C_PrivateSetupDefaultParameter final
{
public:
	class AActor*                                 Enemy;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EnemyMaterialAccessorComponent_C_PrivateSetupDefaultParameter) == 0x000008, "Wrong alignment on BP_EnemyMaterialAccessorComponent_C_PrivateSetupDefaultParameter");
static_assert(sizeof(BP_EnemyMaterialAccessorComponent_C_PrivateSetupDefaultParameter) == 0x000008, "Wrong size on BP_EnemyMaterialAccessorComponent_C_PrivateSetupDefaultParameter");
static_assert(offsetof(BP_EnemyMaterialAccessorComponent_C_PrivateSetupDefaultParameter, Enemy) == 0x000000, "Member 'BP_EnemyMaterialAccessorComponent_C_PrivateSetupDefaultParameter::Enemy' has a wrong offset!");

// Function BP_EnemyMaterialAccessorComponent.BP_EnemyMaterialAccessorComponent_C.PrivateInitialize
// 0x0020 (0x0020 - 0x0000)
struct BP_EnemyMaterialAccessorComponent_C_PrivateInitialize final
{
public:
	TArray<int32>                                 K2Node_MakeArray_Array;                            // 0x0000(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<int32>                                 K2Node_MakeArray_Array_1;                          // 0x0010(0x0010)(ReferenceParm, HasGetValueTypeHash)
};
static_assert(alignof(BP_EnemyMaterialAccessorComponent_C_PrivateInitialize) == 0x000008, "Wrong alignment on BP_EnemyMaterialAccessorComponent_C_PrivateInitialize");
static_assert(sizeof(BP_EnemyMaterialAccessorComponent_C_PrivateInitialize) == 0x000020, "Wrong size on BP_EnemyMaterialAccessorComponent_C_PrivateInitialize");
static_assert(offsetof(BP_EnemyMaterialAccessorComponent_C_PrivateInitialize, K2Node_MakeArray_Array) == 0x000000, "Member 'BP_EnemyMaterialAccessorComponent_C_PrivateInitialize::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_EnemyMaterialAccessorComponent_C_PrivateInitialize, K2Node_MakeArray_Array_1) == 0x000010, "Member 'BP_EnemyMaterialAccessorComponent_C_PrivateInitialize::K2Node_MakeArray_Array_1' has a wrong offset!");

// Function BP_EnemyMaterialAccessorComponent.BP_EnemyMaterialAccessorComponent_C.PrivateUpdateMaterialBerserk
// 0x00E8 (0x00E8 - 0x0000)
struct BP_EnemyMaterialAccessorComponent_C_PrivateUpdateMaterialBerserk final
{
public:
	bool                                          IsSign;                                            // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A27[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveLinearColor*                      ColorCurve;                                        // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Color;                                             // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RateMax;                                           // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RateSum;                                           // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A28[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetTimeRange_MinTime;                     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeRange_MaxTime;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A29[0x2];                                     // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetTimeRange_MinTime_1;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeRange_MaxTime_1;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A2A[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveLinearColor*                      K2Node_Select_Default;                             // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A2B[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_GetLinearColorValue_ReturnValue;          // 0x005C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeRange_MinTime_2;                   // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeRange_MaxTime_2;                   // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A2C[0x3];                                     // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x007C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetActorDeltaSeconds_ReturnValue;         // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_1;    // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A2D[0x7];                                     // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMACVariableFloat                      K2Node_MakeStruct_MACVariableFloat;                // 0x00A0(0x0028)()
	bool                                          Temp_bool_Variable_1;                              // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A2E[0x7];                                     // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveLinearColor*                      K2Node_Select_Default_1;                           // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A2F[0x3];                                     // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_1;       // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A30[0x3];                                     // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FMax_ReturnValue;                         // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EnemyMaterialAccessorComponent_C_PrivateUpdateMaterialBerserk) == 0x000008, "Wrong alignment on BP_EnemyMaterialAccessorComponent_C_PrivateUpdateMaterialBerserk");
static_assert(sizeof(BP_EnemyMaterialAccessorComponent_C_PrivateUpdateMaterialBerserk) == 0x0000E8, "Wrong size on BP_EnemyMaterialAccessorComponent_C_PrivateUpdateMaterialBerserk");
static_assert(offsetof(BP_EnemyMaterialAccessorComponent_C_PrivateUpdateMaterialBerserk, IsSign) == 0x000000, "Member 'BP_EnemyMaterialAccessorComponent_C_PrivateUpdateMaterialBerserk::IsSign' has a wrong offset!");
static_assert(offsetof(BP_EnemyMaterialAccessorComponent_C_PrivateUpdateMaterialBerserk, ColorCurve) == 0x000008, "Member 'BP_EnemyMaterialAccessorComponent_C_PrivateUpdateMaterialBerserk::ColorCurve' has a wrong offset!");
static_assert(offsetof(BP_EnemyMaterialAccessorComponent_C_PrivateUpdateMaterialBerserk, Color) == 0x000010, "Member 'BP_EnemyMaterialAccessorComponent_C_PrivateUpdateMaterialBerserk::Color' has a wrong offset!");
static_assert(offsetof(BP_EnemyMaterialAccessorComponent_C_PrivateUpdateMaterialBerserk, RateMax) == 0x000020, "Member 'BP_EnemyMaterialAccessorComponent_C_PrivateUpdateMaterialBerserk::RateMax' has a wrong offset!");
static_assert(offsetof(BP_EnemyMaterialAccessorComponent_C_PrivateUpdateMaterialBerserk, RateSum) == 0x000024, "Member 'BP_EnemyMaterialAccessorComponent_C_PrivateUpdateMaterialBerserk::RateSum' has a wrong offset!");
static_assert(offsetof(BP_EnemyMaterialAccessorComponent_C_PrivateUpdateMaterialBerserk, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000028, "Member 'BP_EnemyMaterialAccessorComponent_C_PrivateUpdateMaterialBerserk::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyMaterialAccessorComponent_C_PrivateUpdateMaterialBerserk, CallFunc_GetTimeRange_MinTime) == 0x00002C, "Member 'BP_EnemyMaterialAccessorComponent_C_PrivateUpdateMaterialBerserk::CallFunc_GetTimeRange_MinTime' has a wrong offset!");
static_assert(offsetof(BP_EnemyMaterialAccessorComponent_C_PrivateUpdateMaterialBerserk, CallFunc_GetTimeRange_MaxTime) == 0x000030, "Member 'BP_EnemyMaterialAccessorComponent_C_PrivateUpdateMaterialBerserk::CallFunc_GetTimeRange_MaxTime' has a wrong offset!");
static_assert(offsetof(BP_EnemyMaterialAccessorComponent_C_PrivateUpdateMaterialBerserk, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000034, "Member 'BP_EnemyMaterialAccessorComponent_C_PrivateUpdateMaterialBerserk::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyMaterialAccessorComponent_C_PrivateUpdateMaterialBerserk, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000038, "Member 'BP_EnemyMaterialAccessorComponent_C_PrivateUpdateMaterialBerserk::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyMaterialAccessorComponent_C_PrivateUpdateMaterialBerserk, CallFunc_IsValid_ReturnValue) == 0x000039, "Member 'BP_EnemyMaterialAccessorComponent_C_PrivateUpdateMaterialBerserk::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyMaterialAccessorComponent_C_PrivateUpdateMaterialBerserk, CallFunc_GetTimeRange_MinTime_1) == 0x00003C, "Member 'BP_EnemyMaterialAccessorComponent_C_PrivateUpdateMaterialBerserk::CallFunc_GetTimeRange_MinTime_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyMaterialAccessorComponent_C_PrivateUpdateMaterialBerserk, CallFunc_GetTimeRange_MaxTime_1) == 0x000040, "Member 'BP_EnemyMaterialAccessorComponent_C_PrivateUpdateMaterialBerserk::CallFunc_GetTimeRange_MaxTime_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyMaterialAccessorComponent_C_PrivateUpdateMaterialBerserk, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000044, "Member 'BP_EnemyMaterialAccessorComponent_C_PrivateUpdateMaterialBerserk::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyMaterialAccessorComponent_C_PrivateUpdateMaterialBerserk, Temp_bool_Variable) == 0x000048, "Member 'BP_EnemyMaterialAccessorComponent_C_PrivateUpdateMaterialBerserk::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyMaterialAccessorComponent_C_PrivateUpdateMaterialBerserk, K2Node_Select_Default) == 0x000050, "Member 'BP_EnemyMaterialAccessorComponent_C_PrivateUpdateMaterialBerserk::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_EnemyMaterialAccessorComponent_C_PrivateUpdateMaterialBerserk, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000058, "Member 'BP_EnemyMaterialAccessorComponent_C_PrivateUpdateMaterialBerserk::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyMaterialAccessorComponent_C_PrivateUpdateMaterialBerserk, CallFunc_GetLinearColorValue_ReturnValue) == 0x00005C, "Member 'BP_EnemyMaterialAccessorComponent_C_PrivateUpdateMaterialBerserk::CallFunc_GetLinearColorValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyMaterialAccessorComponent_C_PrivateUpdateMaterialBerserk, CallFunc_GetTimeRange_MinTime_2) == 0x00006C, "Member 'BP_EnemyMaterialAccessorComponent_C_PrivateUpdateMaterialBerserk::CallFunc_GetTimeRange_MinTime_2' has a wrong offset!");
static_assert(offsetof(BP_EnemyMaterialAccessorComponent_C_PrivateUpdateMaterialBerserk, CallFunc_GetTimeRange_MaxTime_2) == 0x000070, "Member 'BP_EnemyMaterialAccessorComponent_C_PrivateUpdateMaterialBerserk::CallFunc_GetTimeRange_MaxTime_2' has a wrong offset!");
static_assert(offsetof(BP_EnemyMaterialAccessorComponent_C_PrivateUpdateMaterialBerserk, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000074, "Member 'BP_EnemyMaterialAccessorComponent_C_PrivateUpdateMaterialBerserk::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyMaterialAccessorComponent_C_PrivateUpdateMaterialBerserk, K2Node_SwitchInteger_CmpSuccess) == 0x000078, "Member 'BP_EnemyMaterialAccessorComponent_C_PrivateUpdateMaterialBerserk::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_EnemyMaterialAccessorComponent_C_PrivateUpdateMaterialBerserk, CallFunc_MakeVector_ReturnValue) == 0x00007C, "Member 'BP_EnemyMaterialAccessorComponent_C_PrivateUpdateMaterialBerserk::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyMaterialAccessorComponent_C_PrivateUpdateMaterialBerserk, CallFunc_GetOwner_ReturnValue) == 0x000088, "Member 'BP_EnemyMaterialAccessorComponent_C_PrivateUpdateMaterialBerserk::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyMaterialAccessorComponent_C_PrivateUpdateMaterialBerserk, CallFunc_GetActorDeltaSeconds_ReturnValue) == 0x000090, "Member 'BP_EnemyMaterialAccessorComponent_C_PrivateUpdateMaterialBerserk::CallFunc_GetActorDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyMaterialAccessorComponent_C_PrivateUpdateMaterialBerserk, CallFunc_Add_FloatFloat_ReturnValue) == 0x000094, "Member 'BP_EnemyMaterialAccessorComponent_C_PrivateUpdateMaterialBerserk::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyMaterialAccessorComponent_C_PrivateUpdateMaterialBerserk, CallFunc_GreaterEqual_FloatFloat_ReturnValue_1) == 0x000098, "Member 'BP_EnemyMaterialAccessorComponent_C_PrivateUpdateMaterialBerserk::CallFunc_GreaterEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyMaterialAccessorComponent_C_PrivateUpdateMaterialBerserk, K2Node_MakeStruct_MACVariableFloat) == 0x0000A0, "Member 'BP_EnemyMaterialAccessorComponent_C_PrivateUpdateMaterialBerserk::K2Node_MakeStruct_MACVariableFloat' has a wrong offset!");
static_assert(offsetof(BP_EnemyMaterialAccessorComponent_C_PrivateUpdateMaterialBerserk, Temp_bool_Variable_1) == 0x0000C8, "Member 'BP_EnemyMaterialAccessorComponent_C_PrivateUpdateMaterialBerserk::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyMaterialAccessorComponent_C_PrivateUpdateMaterialBerserk, K2Node_Select_Default_1) == 0x0000D0, "Member 'BP_EnemyMaterialAccessorComponent_C_PrivateUpdateMaterialBerserk::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyMaterialAccessorComponent_C_PrivateUpdateMaterialBerserk, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x0000D8, "Member 'BP_EnemyMaterialAccessorComponent_C_PrivateUpdateMaterialBerserk::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyMaterialAccessorComponent_C_PrivateUpdateMaterialBerserk, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x0000DC, "Member 'BP_EnemyMaterialAccessorComponent_C_PrivateUpdateMaterialBerserk::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyMaterialAccessorComponent_C_PrivateUpdateMaterialBerserk, CallFunc_LessEqual_FloatFloat_ReturnValue_1) == 0x0000E0, "Member 'BP_EnemyMaterialAccessorComponent_C_PrivateUpdateMaterialBerserk::CallFunc_LessEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyMaterialAccessorComponent_C_PrivateUpdateMaterialBerserk, CallFunc_FMax_ReturnValue) == 0x0000E4, "Member 'BP_EnemyMaterialAccessorComponent_C_PrivateUpdateMaterialBerserk::CallFunc_FMax_ReturnValue' has a wrong offset!");

// Function BP_EnemyMaterialAccessorComponent.BP_EnemyMaterialAccessorComponent_C.PrivateUpdateMaterialWeakEmissive
// 0x001C (0x001C - 0x0000)
struct BP_EnemyMaterialAccessorComponent_C_PrivateUpdateMaterialWeakEmissive final
{
public:
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A31[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetVectorValue_ReturnValue;               // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EnemyMaterialAccessorComponent_C_PrivateUpdateMaterialWeakEmissive) == 0x000004, "Wrong alignment on BP_EnemyMaterialAccessorComponent_C_PrivateUpdateMaterialWeakEmissive");
static_assert(sizeof(BP_EnemyMaterialAccessorComponent_C_PrivateUpdateMaterialWeakEmissive) == 0x00001C, "Wrong size on BP_EnemyMaterialAccessorComponent_C_PrivateUpdateMaterialWeakEmissive");
static_assert(offsetof(BP_EnemyMaterialAccessorComponent_C_PrivateUpdateMaterialWeakEmissive, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000000, "Member 'BP_EnemyMaterialAccessorComponent_C_PrivateUpdateMaterialWeakEmissive::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyMaterialAccessorComponent_C_PrivateUpdateMaterialWeakEmissive, CallFunc_GetVectorValue_ReturnValue) == 0x000004, "Member 'BP_EnemyMaterialAccessorComponent_C_PrivateUpdateMaterialWeakEmissive::CallFunc_GetVectorValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyMaterialAccessorComponent_C_PrivateUpdateMaterialWeakEmissive, CallFunc_BreakVector_X) == 0x000010, "Member 'BP_EnemyMaterialAccessorComponent_C_PrivateUpdateMaterialWeakEmissive::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_EnemyMaterialAccessorComponent_C_PrivateUpdateMaterialWeakEmissive, CallFunc_BreakVector_Y) == 0x000014, "Member 'BP_EnemyMaterialAccessorComponent_C_PrivateUpdateMaterialWeakEmissive::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_EnemyMaterialAccessorComponent_C_PrivateUpdateMaterialWeakEmissive, CallFunc_BreakVector_Z) == 0x000018, "Member 'BP_EnemyMaterialAccessorComponent_C_PrivateUpdateMaterialWeakEmissive::CallFunc_BreakVector_Z' has a wrong offset!");

// Function BP_EnemyMaterialAccessorComponent.BP_EnemyMaterialAccessorComponent_C.PrivateUpdateVisiblitySlot
// 0x0058 (0x0058 - 0x0000)
struct BP_EnemyMaterialAccessorComponent_C_PrivateUpdateVisiblitySlot final
{
public:
	class USkinnedMeshComponent*                  SkiinedMesh;                                       // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FMACVariableFloat>              VisibilitySlots;                                   // 0x0008(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue_1;            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Min_ReturnValue;                          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A32[0x2];                                     // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class USkinnedMeshComponent*                  K2Node_DynamicCast_AsSkinned_Mesh_Component;       // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A33[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FMACVariableFloat>              K2Node_MakeArray_Array;                            // 0x0040(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyMaterialAccessorComponent_C_PrivateUpdateVisiblitySlot) == 0x000008, "Wrong alignment on BP_EnemyMaterialAccessorComponent_C_PrivateUpdateVisiblitySlot");
static_assert(sizeof(BP_EnemyMaterialAccessorComponent_C_PrivateUpdateVisiblitySlot) == 0x000058, "Wrong size on BP_EnemyMaterialAccessorComponent_C_PrivateUpdateVisiblitySlot");
static_assert(offsetof(BP_EnemyMaterialAccessorComponent_C_PrivateUpdateVisiblitySlot, SkiinedMesh) == 0x000000, "Member 'BP_EnemyMaterialAccessorComponent_C_PrivateUpdateVisiblitySlot::SkiinedMesh' has a wrong offset!");
static_assert(offsetof(BP_EnemyMaterialAccessorComponent_C_PrivateUpdateVisiblitySlot, VisibilitySlots) == 0x000008, "Member 'BP_EnemyMaterialAccessorComponent_C_PrivateUpdateVisiblitySlot::VisibilitySlots' has a wrong offset!");
static_assert(offsetof(BP_EnemyMaterialAccessorComponent_C_PrivateUpdateVisiblitySlot, Temp_int_Variable) == 0x000018, "Member 'BP_EnemyMaterialAccessorComponent_C_PrivateUpdateVisiblitySlot::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyMaterialAccessorComponent_C_PrivateUpdateVisiblitySlot, CallFunc_Array_LastIndex_ReturnValue) == 0x00001C, "Member 'BP_EnemyMaterialAccessorComponent_C_PrivateUpdateVisiblitySlot::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyMaterialAccessorComponent_C_PrivateUpdateVisiblitySlot, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BP_EnemyMaterialAccessorComponent_C_PrivateUpdateVisiblitySlot::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyMaterialAccessorComponent_C_PrivateUpdateVisiblitySlot, CallFunc_Array_LastIndex_ReturnValue_1) == 0x000024, "Member 'BP_EnemyMaterialAccessorComponent_C_PrivateUpdateVisiblitySlot::CallFunc_Array_LastIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyMaterialAccessorComponent_C_PrivateUpdateVisiblitySlot, CallFunc_Min_ReturnValue) == 0x000028, "Member 'BP_EnemyMaterialAccessorComponent_C_PrivateUpdateVisiblitySlot::CallFunc_Min_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyMaterialAccessorComponent_C_PrivateUpdateVisiblitySlot, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00002C, "Member 'BP_EnemyMaterialAccessorComponent_C_PrivateUpdateVisiblitySlot::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyMaterialAccessorComponent_C_PrivateUpdateVisiblitySlot, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00002D, "Member 'BP_EnemyMaterialAccessorComponent_C_PrivateUpdateVisiblitySlot::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyMaterialAccessorComponent_C_PrivateUpdateVisiblitySlot, K2Node_DynamicCast_AsSkinned_Mesh_Component) == 0x000030, "Member 'BP_EnemyMaterialAccessorComponent_C_PrivateUpdateVisiblitySlot::K2Node_DynamicCast_AsSkinned_Mesh_Component' has a wrong offset!");
static_assert(offsetof(BP_EnemyMaterialAccessorComponent_C_PrivateUpdateVisiblitySlot, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_EnemyMaterialAccessorComponent_C_PrivateUpdateVisiblitySlot::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EnemyMaterialAccessorComponent_C_PrivateUpdateVisiblitySlot, K2Node_MakeArray_Array) == 0x000040, "Member 'BP_EnemyMaterialAccessorComponent_C_PrivateUpdateVisiblitySlot::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_EnemyMaterialAccessorComponent_C_PrivateUpdateVisiblitySlot, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'BP_EnemyMaterialAccessorComponent_C_PrivateUpdateVisiblitySlot::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyMaterialAccessorComponent_C_PrivateUpdateVisiblitySlot, CallFunc_Greater_IntInt_ReturnValue) == 0x000054, "Member 'BP_EnemyMaterialAccessorComponent_C_PrivateUpdateVisiblitySlot::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BP_EnemyMaterialAccessorComponent.BP_EnemyMaterialAccessorComponent_C.PrivateUpdateEm1210
// 0x0060 (0x0060 - 0x0000)
struct BP_EnemyMaterialAccessorComponent_C_PrivateUpdateEm1210 final
{
public:
	class USkeletalMeshComponent*                 SkeletalMesh;                                      // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 K2Node_DynamicCast_AsSkeletal_Mesh_Component;      // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A34[0x5];                                     // 0x0013(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_MakeLiteralString_ReturnValue;            // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_MakeLiteralString_ReturnValue_1;          // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_MakeLiteralString_ReturnValue_2;          // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 K2Node_DynamicCast_AsSkeletal_Mesh_Component_1;    // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A35[0x2];                                     // 0x0052(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyMaterialAccessorComponent_C_PrivateUpdateEm1210) == 0x000008, "Wrong alignment on BP_EnemyMaterialAccessorComponent_C_PrivateUpdateEm1210");
static_assert(sizeof(BP_EnemyMaterialAccessorComponent_C_PrivateUpdateEm1210) == 0x000060, "Wrong size on BP_EnemyMaterialAccessorComponent_C_PrivateUpdateEm1210");
static_assert(offsetof(BP_EnemyMaterialAccessorComponent_C_PrivateUpdateEm1210, SkeletalMesh) == 0x000000, "Member 'BP_EnemyMaterialAccessorComponent_C_PrivateUpdateEm1210::SkeletalMesh' has a wrong offset!");
static_assert(offsetof(BP_EnemyMaterialAccessorComponent_C_PrivateUpdateEm1210, K2Node_DynamicCast_AsSkeletal_Mesh_Component) == 0x000008, "Member 'BP_EnemyMaterialAccessorComponent_C_PrivateUpdateEm1210::K2Node_DynamicCast_AsSkeletal_Mesh_Component' has a wrong offset!");
static_assert(offsetof(BP_EnemyMaterialAccessorComponent_C_PrivateUpdateEm1210, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_EnemyMaterialAccessorComponent_C_PrivateUpdateEm1210::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EnemyMaterialAccessorComponent_C_PrivateUpdateEm1210, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000011, "Member 'BP_EnemyMaterialAccessorComponent_C_PrivateUpdateEm1210::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyMaterialAccessorComponent_C_PrivateUpdateEm1210, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000012, "Member 'BP_EnemyMaterialAccessorComponent_C_PrivateUpdateEm1210::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyMaterialAccessorComponent_C_PrivateUpdateEm1210, CallFunc_MakeLiteralString_ReturnValue) == 0x000018, "Member 'BP_EnemyMaterialAccessorComponent_C_PrivateUpdateEm1210::CallFunc_MakeLiteralString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyMaterialAccessorComponent_C_PrivateUpdateEm1210, CallFunc_MakeLiteralString_ReturnValue_1) == 0x000028, "Member 'BP_EnemyMaterialAccessorComponent_C_PrivateUpdateEm1210::CallFunc_MakeLiteralString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyMaterialAccessorComponent_C_PrivateUpdateEm1210, CallFunc_MakeLiteralString_ReturnValue_2) == 0x000038, "Member 'BP_EnemyMaterialAccessorComponent_C_PrivateUpdateEm1210::CallFunc_MakeLiteralString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EnemyMaterialAccessorComponent_C_PrivateUpdateEm1210, K2Node_DynamicCast_AsSkeletal_Mesh_Component_1) == 0x000048, "Member 'BP_EnemyMaterialAccessorComponent_C_PrivateUpdateEm1210::K2Node_DynamicCast_AsSkeletal_Mesh_Component_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyMaterialAccessorComponent_C_PrivateUpdateEm1210, K2Node_DynamicCast_bSuccess_1) == 0x000050, "Member 'BP_EnemyMaterialAccessorComponent_C_PrivateUpdateEm1210::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyMaterialAccessorComponent_C_PrivateUpdateEm1210, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000051, "Member 'BP_EnemyMaterialAccessorComponent_C_PrivateUpdateEm1210::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyMaterialAccessorComponent_C_PrivateUpdateEm1210, CallFunc_FTrunc_ReturnValue) == 0x000054, "Member 'BP_EnemyMaterialAccessorComponent_C_PrivateUpdateEm1210::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyMaterialAccessorComponent_C_PrivateUpdateEm1210, K2Node_SwitchInteger_CmpSuccess) == 0x000058, "Member 'BP_EnemyMaterialAccessorComponent_C_PrivateUpdateEm1210::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

// Function BP_EnemyMaterialAccessorComponent.BP_EnemyMaterialAccessorComponent_C.PrivateIinitializeSlot
// 0x0008 (0x0008 - 0x0000)
struct BP_EnemyMaterialAccessorComponent_C_PrivateIinitializeSlot final
{
public:
	int32                                         CallFunc_SetupMaterialBySlotName_ReturnValue;      // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SetupMaterialBySlotName_ReturnValue_1;    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EnemyMaterialAccessorComponent_C_PrivateIinitializeSlot) == 0x000004, "Wrong alignment on BP_EnemyMaterialAccessorComponent_C_PrivateIinitializeSlot");
static_assert(sizeof(BP_EnemyMaterialAccessorComponent_C_PrivateIinitializeSlot) == 0x000008, "Wrong size on BP_EnemyMaterialAccessorComponent_C_PrivateIinitializeSlot");
static_assert(offsetof(BP_EnemyMaterialAccessorComponent_C_PrivateIinitializeSlot, CallFunc_SetupMaterialBySlotName_ReturnValue) == 0x000000, "Member 'BP_EnemyMaterialAccessorComponent_C_PrivateIinitializeSlot::CallFunc_SetupMaterialBySlotName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyMaterialAccessorComponent_C_PrivateIinitializeSlot, CallFunc_SetupMaterialBySlotName_ReturnValue_1) == 0x000004, "Member 'BP_EnemyMaterialAccessorComponent_C_PrivateIinitializeSlot::CallFunc_SetupMaterialBySlotName_ReturnValue_1' has a wrong offset!");

}

