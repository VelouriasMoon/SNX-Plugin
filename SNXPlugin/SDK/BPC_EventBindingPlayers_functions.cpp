#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPC_EventBindingPlayers

#include "Basic.hpp"

#include "BPC_EventBindingPlayers_classes.hpp"
#include "BPC_EventBindingPlayers_parameters.hpp"


namespace SDK
{

// Function BPC_EventBindingPlayers.BPC_EventBindingPlayers_C.ExecuteUbergraph_BPC_EventBindingPlayers
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_EventBindingPlayers_C::ExecuteUbergraph_BPC_EventBindingPlayers(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_EventBindingPlayers_C", "ExecuteUbergraph_BPC_EventBindingPlayers");

	Params::BPC_EventBindingPlayers_C_ExecuteUbergraph_BPC_EventBindingPlayers Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_EventBindingPlayers.BPC_EventBindingPlayers_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UBPC_EventBindingPlayers_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_EventBindingPlayers_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_EventBindingPlayers.BPC_EventBindingPlayers_C.SetupBinding
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ARSLevelSequenceActor*            Sequencer                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsChangeOwnerShip                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    BindInGamePlayer                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    LightweightBinding                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// TArray<class ARSCharacterBase*>         BindindInGamePlayers                                   (Parm, OutParm, HasGetValueTypeHash)
// TArray<class ARSCharacterBase*>         NoBindindInGamePlayers                                 (Parm, OutParm, HasGetValueTypeHash)
// TArray<class ABP_MenuPlayerBase_C*>     BindingSpawnInstance                                   (Parm, OutParm, HasGetValueTypeHash)
// TArray<class ASkeletalMeshActor*>       BindingSpawnWeaponInstance                             (Parm, OutParm, HasGetValueTypeHash)

void UBPC_EventBindingPlayers_C::SetupBinding(class ARSLevelSequenceActor* Sequencer, bool IsChangeOwnerShip, bool BindInGamePlayer, bool LightweightBinding, TArray<class ARSCharacterBase*>* BindindInGamePlayers, TArray<class ARSCharacterBase*>* NoBindindInGamePlayers, TArray<class ABP_MenuPlayerBase_C*>* BindingSpawnInstance, TArray<class ASkeletalMeshActor*>* BindingSpawnWeaponInstance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_EventBindingPlayers_C", "SetupBinding");

	Params::BPC_EventBindingPlayers_C_SetupBinding Parms{};

	Parms.Sequencer = Sequencer;
	Parms.IsChangeOwnerShip = IsChangeOwnerShip;
	Parms.BindInGamePlayer = BindInGamePlayer;
	Parms.LightweightBinding = LightweightBinding;

	UObject::ProcessEvent(Func, &Parms);

	if (BindindInGamePlayers != nullptr)
		*BindindInGamePlayers = std::move(Parms.BindindInGamePlayers);

	if (NoBindindInGamePlayers != nullptr)
		*NoBindindInGamePlayers = std::move(Parms.NoBindindInGamePlayers);

	if (BindingSpawnInstance != nullptr)
		*BindingSpawnInstance = std::move(Parms.BindingSpawnInstance);

	if (BindingSpawnWeaponInstance != nullptr)
		*BindingSpawnWeaponInstance = std::move(Parms.BindingSpawnWeaponInstance);
}


// Function BPC_EventBindingPlayers.BPC_EventBindingPlayers_C.PrivateGetOrSpawnInstance
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InstanceIndex                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Hidden                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class ABP_MenuPlayerBase_C*             Instance                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_EventBindingPlayers_C::PrivateGetOrSpawnInstance(int32 InstanceIndex, bool Hidden, class ABP_MenuPlayerBase_C** Instance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_EventBindingPlayers_C", "PrivateGetOrSpawnInstance");

	Params::BPC_EventBindingPlayers_C_PrivateGetOrSpawnInstance Parms{};

	Parms.InstanceIndex = InstanceIndex;
	Parms.Hidden = Hidden;

	UObject::ProcessEvent(Func, &Parms);

	if (Instance != nullptr)
		*Instance = Parms.Instance;
}


// Function BPC_EventBindingPlayers.BPC_EventBindingPlayers_C.Reset
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ClearInstance                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBPC_EventBindingPlayers_C::Reset(bool ClearInstance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_EventBindingPlayers_C", "Reset");

	Params::BPC_EventBindingPlayers_C_Reset Parms{};

	Parms.ClearInstance = ClearInstance;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_EventBindingPlayers.BPC_EventBindingPlayers_C.PrivateGetOrSpawnInstanceInternal
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InstanceIndex                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class ABP_MenuPlayerBase_C*>     InstanceList                                           (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// class ABP_MenuPlayerBase_C*             Instance                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    NewSpawn                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBPC_EventBindingPlayers_C::PrivateGetOrSpawnInstanceInternal(int32 InstanceIndex, TArray<class ABP_MenuPlayerBase_C*>& InstanceList, class ABP_MenuPlayerBase_C** Instance, bool* NewSpawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_EventBindingPlayers_C", "PrivateGetOrSpawnInstanceInternal");

	Params::BPC_EventBindingPlayers_C_PrivateGetOrSpawnInstanceInternal Parms{};

	Parms.InstanceIndex = InstanceIndex;
	Parms.InstanceList = std::move(InstanceList);

	UObject::ProcessEvent(Func, &Parms);

	InstanceList = std::move(Parms.InstanceList);

	if (Instance != nullptr)
		*Instance = Parms.Instance;

	if (NewSpawn != nullptr)
		*NewSpawn = Parms.NewSpawn;
}


// Function BPC_EventBindingPlayers.BPC_EventBindingPlayers_C.PrivateGetOrSpawnInstanceFacial
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InstanceIndex                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ABP_MenuPlayerBase_C*             Instance                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_EventBindingPlayers_C::PrivateGetOrSpawnInstanceFacial(int32 InstanceIndex, class ABP_MenuPlayerBase_C** Instance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_EventBindingPlayers_C", "PrivateGetOrSpawnInstanceFacial");

	Params::BPC_EventBindingPlayers_C_PrivateGetOrSpawnInstanceFacial Parms{};

	Parms.InstanceIndex = InstanceIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (Instance != nullptr)
		*Instance = Parms.Instance;
}


// Function BPC_EventBindingPlayers.BPC_EventBindingPlayers_C.GetFecialActor
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TSoftObjectPtr<class USkeletalMesh>     MeshObject                                             (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// class AActor*                           Actor                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USkeletalMeshComponent*           SkelMeshComp                                           (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EPlayerID                               PlayerId                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_EventBindingPlayers_C::GetFecialActor(TSoftObjectPtr<class USkeletalMesh> MeshObject, class AActor** Actor, class USkeletalMeshComponent** SkelMeshComp, EPlayerID* PlayerId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_EventBindingPlayers_C", "GetFecialActor");

	Params::BPC_EventBindingPlayers_C_GetFecialActor Parms{};

	Parms.MeshObject = MeshObject;

	UObject::ProcessEvent(Func, &Parms);

	if (Actor != nullptr)
		*Actor = Parms.Actor;

	if (SkelMeshComp != nullptr)
		*SkelMeshComp = Parms.SkelMeshComp;

	if (PlayerId != nullptr)
		*PlayerId = Parms.PlayerId;
}


// Function BPC_EventBindingPlayers.BPC_EventBindingPlayers_C.PrivateDebugSetupMaterial
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_EventBindingPlayers_C::PrivateDebugSetupMaterial(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_EventBindingPlayers_C", "PrivateDebugSetupMaterial");

	Params::BPC_EventBindingPlayers_C_PrivateDebugSetupMaterial Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_EventBindingPlayers.BPC_EventBindingPlayers_C.PrivateBindingWeapon
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_MenuPlayerBase_C*             Instance                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ARSLevelSequenceActor*            Sequencer                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsChangeOwnerShip                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   InstanceIndex                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    EventCommandVisiblitty                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// TArray<class ASkeletalMeshActor*>       BindingSpawnInstances                                  (Parm, OutParm, HasGetValueTypeHash)

void UBPC_EventBindingPlayers_C::PrivateBindingWeapon(class ABP_MenuPlayerBase_C* Instance, class ARSLevelSequenceActor* Sequencer, bool IsChangeOwnerShip, int32 InstanceIndex, bool EventCommandVisiblitty, TArray<class ASkeletalMeshActor*>* BindingSpawnInstances)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_EventBindingPlayers_C", "PrivateBindingWeapon");

	Params::BPC_EventBindingPlayers_C_PrivateBindingWeapon Parms{};

	Parms.Instance = Instance;
	Parms.Sequencer = Sequencer;
	Parms.IsChangeOwnerShip = IsChangeOwnerShip;
	Parms.InstanceIndex = InstanceIndex;
	Parms.EventCommandVisiblitty = EventCommandVisiblitty;

	UObject::ProcessEvent(Func, &Parms);

	if (BindingSpawnInstances != nullptr)
		*BindingSpawnInstances = std::move(Parms.BindingSpawnInstances);
}


// Function BPC_EventBindingPlayers.BPC_EventBindingPlayers_C.PrivateGetOrSpawnWeaponInstance
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_MenuPlayerBase_C*             BasePlayerInstance                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   PlayerIndex                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   WeaponNo                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ASkeletalMeshActor*               Instance                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_EventBindingPlayers_C::PrivateGetOrSpawnWeaponInstance(class ABP_MenuPlayerBase_C* BasePlayerInstance, int32 PlayerIndex, int32 WeaponNo, class ASkeletalMeshActor** Instance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_EventBindingPlayers_C", "PrivateGetOrSpawnWeaponInstance");

	Params::BPC_EventBindingPlayers_C_PrivateGetOrSpawnWeaponInstance Parms{};

	Parms.BasePlayerInstance = BasePlayerInstance;
	Parms.PlayerIndex = PlayerIndex;
	Parms.WeaponNo = WeaponNo;

	UObject::ProcessEvent(Func, &Parms);

	if (Instance != nullptr)
		*Instance = Parms.Instance;
}


// Function BPC_EventBindingPlayers.BPC_EventBindingPlayers_C.GetBindingActors
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class ARSCharacterBase*>         GamePlayers                                            (Parm, OutParm, HasGetValueTypeHash)
// TArray<class ABP_MenuPlayerBase_C*>     Instances                                              (Parm, OutParm, HasGetValueTypeHash)

void UBPC_EventBindingPlayers_C::GetBindingActors(TArray<class ARSCharacterBase*>* GamePlayers, TArray<class ABP_MenuPlayerBase_C*>* Instances)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_EventBindingPlayers_C", "GetBindingActors");

	Params::BPC_EventBindingPlayers_C_GetBindingActors Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (GamePlayers != nullptr)
		*GamePlayers = std::move(Parms.GamePlayers);

	if (Instances != nullptr)
		*Instances = std::move(Parms.Instances);
}


// Function BPC_EventBindingPlayers.BPC_EventBindingPlayers_C.BindingNeonWireCharacter
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ARSCharacterBase*                 BattleCharacter                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_EventBindingPlayers_C::BindingNeonWireCharacter(class ARSCharacterBase* BattleCharacter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_EventBindingPlayers_C", "BindingNeonWireCharacter");

	Params::BPC_EventBindingPlayers_C_BindingNeonWireCharacter Parms{};

	Parms.BattleCharacter = BattleCharacter;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_EventBindingPlayers.BPC_EventBindingPlayers_C.PrivateBindingNeonWireInstance
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_MenuPlayerBase_C*             MenuPlayer                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   InstanceIndex                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_EventBindingPlayers_C::PrivateBindingNeonWireInstance(class ABP_MenuPlayerBase_C* MenuPlayer, int32 InstanceIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_EventBindingPlayers_C", "PrivateBindingNeonWireInstance");

	Params::BPC_EventBindingPlayers_C_PrivateBindingNeonWireInstance Parms{};

	Parms.MenuPlayer = MenuPlayer;
	Parms.InstanceIndex = InstanceIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_EventBindingPlayers.BPC_EventBindingPlayers_C.PrivateSpawnNeonWire
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           TargetActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class UBPC_NeonWireDepth_C*>     RefNeonWireComps                                       (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   WireMaterialIndex                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UBPC_NeonWireDepth_C*             NeonWireDepth                                          (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_EventBindingPlayers_C::PrivateSpawnNeonWire(class AActor* TargetActor, TArray<class UBPC_NeonWireDepth_C*>& RefNeonWireComps, int32 Param_Index, int32 WireMaterialIndex, class UBPC_NeonWireDepth_C** NeonWireDepth)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_EventBindingPlayers_C", "PrivateSpawnNeonWire");

	Params::BPC_EventBindingPlayers_C_PrivateSpawnNeonWire Parms{};

	Parms.TargetActor = TargetActor;
	Parms.RefNeonWireComps = std::move(RefNeonWireComps);
	Parms.Param_Index = Param_Index;
	Parms.WireMaterialIndex = WireMaterialIndex;

	UObject::ProcessEvent(Func, &Parms);

	RefNeonWireComps = std::move(Parms.RefNeonWireComps);

	if (NeonWireDepth != nullptr)
		*NeonWireDepth = Parms.NeonWireDepth;
}


// Function BPC_EventBindingPlayers.BPC_EventBindingPlayers_C.BindingNeonWireNonPlayerSeq
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ARSLevelSequenceActor*            Sequencer                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_EventBindingPlayers_C::BindingNeonWireNonPlayerSeq(class ARSLevelSequenceActor* Sequencer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_EventBindingPlayers_C", "BindingNeonWireNonPlayerSeq");

	Params::BPC_EventBindingPlayers_C_BindingNeonWireNonPlayerSeq Parms{};

	Parms.Sequencer = Sequencer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_EventBindingPlayers.BPC_EventBindingPlayers_C.PrivateResetNonPlayerNeonWire
// (Private, BlueprintCallable, BlueprintEvent)

void UBPC_EventBindingPlayers_C::PrivateResetNonPlayerNeonWire()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_EventBindingPlayers_C", "PrivateResetNonPlayerNeonWire");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_EventBindingPlayers.BPC_EventBindingPlayers_C.BindingNeonWireNonPlayerActors
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class AActor*>                   Actors                                                 (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)

void UBPC_EventBindingPlayers_C::BindingNeonWireNonPlayerActors(TArray<class AActor*>& Actors)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_EventBindingPlayers_C", "BindingNeonWireNonPlayerActors");

	Params::BPC_EventBindingPlayers_C_BindingNeonWireNonPlayerActors Parms{};

	Parms.Actors = std::move(Actors);

	UObject::ProcessEvent(Func, &Parms);

	Actors = std::move(Parms.Actors);
}


// Function BPC_EventBindingPlayers.BPC_EventBindingPlayers_C.PrivateResetPlayerNeonWire
// (Public, BlueprintCallable, BlueprintEvent)

void UBPC_EventBindingPlayers_C::PrivateResetPlayerNeonWire()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_EventBindingPlayers_C", "PrivateResetPlayerNeonWire");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_EventBindingPlayers.BPC_EventBindingPlayers_C.PrivateSetWireVisibleEvent
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_EventBindingPlayers_C::PrivateSetWireVisibleEvent(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_EventBindingPlayers_C", "PrivateSetWireVisibleEvent");

	Params::BPC_EventBindingPlayers_C_PrivateSetWireVisibleEvent Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_EventBindingPlayers.BPC_EventBindingPlayers_C.PrivateCheckEventHiddenWire
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_EventBindingPlayers_C::PrivateCheckEventHiddenWire(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_EventBindingPlayers_C", "PrivateCheckEventHiddenWire");

	Params::BPC_EventBindingPlayers_C_PrivateCheckEventHiddenWire Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_EventBindingPlayers.BPC_EventBindingPlayers_C.RestoreEventHIddenWire
// (Public, BlueprintCallable, BlueprintEvent)

void UBPC_EventBindingPlayers_C::RestoreEventHIddenWire()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_EventBindingPlayers_C", "RestoreEventHIddenWire");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_EventBindingPlayers.BPC_EventBindingPlayers_C.SetNeonWireDepthTick
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMeshComponent*                   OwnerMeshComp                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    TickEnable                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UBPC_NeonWireDepth_C*             NeonWireDepthComp                                      (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_EventBindingPlayers_C::SetNeonWireDepthTick(class UMeshComponent* OwnerMeshComp, bool TickEnable, class UBPC_NeonWireDepth_C** NeonWireDepthComp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_EventBindingPlayers_C", "SetNeonWireDepthTick");

	Params::BPC_EventBindingPlayers_C_SetNeonWireDepthTick Parms{};

	Parms.OwnerMeshComp = OwnerMeshComp;
	Parms.TickEnable = TickEnable;

	UObject::ProcessEvent(Func, &Parms);

	if (NeonWireDepthComp != nullptr)
		*NeonWireDepthComp = Parms.NeonWireDepthComp;
}


// Function BPC_EventBindingPlayers.BPC_EventBindingPlayers_C.CreateBindingInstance
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PlayerId                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_EventBindingPlayers_C::CreateBindingInstance(int32 PlayerId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_EventBindingPlayers_C", "CreateBindingInstance");

	Params::BPC_EventBindingPlayers_C_CreateBindingInstance Parms{};

	Parms.PlayerId = PlayerId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_EventBindingPlayers.BPC_EventBindingPlayers_C.HiddenSpawnInstance
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Hidden                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBPC_EventBindingPlayers_C::HiddenSpawnInstance(bool Hidden)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_EventBindingPlayers_C", "HiddenSpawnInstance");

	Params::BPC_EventBindingPlayers_C_HiddenSpawnInstance Parms{};

	Parms.Hidden = Hidden;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_EventBindingPlayers.BPC_EventBindingPlayers_C.GetOrSpawnBindingInstance
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PlayerId                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ABP_MenuPlayerBase_C*             Instance                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_EventBindingPlayers_C::GetOrSpawnBindingInstance(int32 PlayerId, class ABP_MenuPlayerBase_C** Instance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_EventBindingPlayers_C", "GetOrSpawnBindingInstance");

	Params::BPC_EventBindingPlayers_C_GetOrSpawnBindingInstance Parms{};

	Parms.PlayerId = PlayerId;

	UObject::ProcessEvent(Func, &Parms);

	if (Instance != nullptr)
		*Instance = Parms.Instance;
}


// Function BPC_EventBindingPlayers.BPC_EventBindingPlayers_C.ChangeCostumeSettings
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPlayerID                               PlayerId                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    DefaultCostume                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    NoAttachment                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBPC_EventBindingPlayers_C::ChangeCostumeSettings(EPlayerID PlayerId, bool DefaultCostume, bool NoAttachment)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_EventBindingPlayers_C", "ChangeCostumeSettings");

	Params::BPC_EventBindingPlayers_C_ChangeCostumeSettings Parms{};

	Parms.PlayerId = PlayerId;
	Parms.DefaultCostume = DefaultCostume;
	Parms.NoAttachment = NoAttachment;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_EventBindingPlayers.BPC_EventBindingPlayers_C.EquipAttachmentInstance
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPlayerID                               PlayerId                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CheckEquipAble                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBPC_EventBindingPlayers_C::EquipAttachmentInstance(EPlayerID PlayerId, bool CheckEquipAble)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_EventBindingPlayers_C", "EquipAttachmentInstance");

	Params::BPC_EventBindingPlayers_C_EquipAttachmentInstance Parms{};

	Parms.PlayerId = PlayerId;
	Parms.CheckEquipAble = CheckEquipAble;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_EventBindingPlayers.BPC_EventBindingPlayers_C.GetPlayerInstance
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InstanceIndex                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ABP_MenuPlayerBase_C*             MenuPlayer                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_EventBindingPlayers_C::GetPlayerInstance(int32 InstanceIndex, class ABP_MenuPlayerBase_C** MenuPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_EventBindingPlayers_C", "GetPlayerInstance");

	Params::BPC_EventBindingPlayers_C_GetPlayerInstance Parms{};

	Parms.InstanceIndex = InstanceIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (MenuPlayer != nullptr)
		*MenuPlayer = Parms.MenuPlayer;
}


// Function BPC_EventBindingPlayers.BPC_EventBindingPlayers_C.PrivateGetPlayerWeaponNum
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// int32                                   Num                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_EventBindingPlayers_C::PrivateGetPlayerWeaponNum(int32* Num) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_EventBindingPlayers_C", "PrivateGetPlayerWeaponNum");

	Params::BPC_EventBindingPlayers_C_PrivateGetPlayerWeaponNum Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Num != nullptr)
		*Num = Parms.Num;
}

}

