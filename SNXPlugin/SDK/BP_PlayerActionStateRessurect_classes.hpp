#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PlayerActionStateRessurect

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "BattlePrototype_structs.hpp"
#include "BP_PlayerActionStateCommonBase_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_PlayerActionStateRessurect.BP_PlayerActionStateRessurect_C
// 0x0058 (0x0140 - 0x00E8)
class UBP_PlayerActionStateRessurect_C final : public UBP_PlayerActionStateCommonBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_PlayerActionStateRessurect_C;    // 0x00E8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	bool                                          bSuccess;                                          // 0x00F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9836[0x7];                                     // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattlePlayer_C*                      RevivePlayer;                                      // 0x00F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bBind;                                             // 0x0100(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9837[0x7];                                     // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URSAtomComponentBase*                   HandleLoopSE;                                      // 0x0108(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharacterHitPriority                         StoreHitPriority;                                  // 0x0110(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9838[0x3];                                     // 0x0111(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DelayReticleParticleTimer;                         // 0x0114(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ClaimantName;                                      // 0x0118(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                BeginLocation;                                     // 0x0120(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ParamMinDistance;                                  // 0x012C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARsBattleHero_C*                        MainPlayer;                                        // 0x0130(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_TriggerEffectManager_C*             TrgEffMgr;                                         // 0x0138(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_PlayerActionStateRessurect(int32 EntryPoint);
	void UnbindResurrectSuccess();
	void BindResurrectSuccess();
	void ReceiveBeginPlay();
	int32 Enter(int32 Param);
	int32 Update();
	void OnSuccessResurrect(class AActor* Param_RevivePlayer);
	int32 Exit(int32 NextStateIndex);
	void CheckSuspend(bool* bSuspend);
	void BeginReviveParticle();
	void EndReviveParticle();
	void PlayLoopSe();
	void PlayEndSE();
	void EndReviveCamera();
	void UpdateReticleParticle(float DeltaSeconds);
	void DelayReviveParticle();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_PlayerActionStateRessurect_C">();
	}
	static class UBP_PlayerActionStateRessurect_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_PlayerActionStateRessurect_C>();
	}
};
static_assert(alignof(UBP_PlayerActionStateRessurect_C) == 0x000008, "Wrong alignment on UBP_PlayerActionStateRessurect_C");
static_assert(sizeof(UBP_PlayerActionStateRessurect_C) == 0x000140, "Wrong size on UBP_PlayerActionStateRessurect_C");
static_assert(offsetof(UBP_PlayerActionStateRessurect_C, UberGraphFrame_BP_PlayerActionStateRessurect_C) == 0x0000E8, "Member 'UBP_PlayerActionStateRessurect_C::UberGraphFrame_BP_PlayerActionStateRessurect_C' has a wrong offset!");
static_assert(offsetof(UBP_PlayerActionStateRessurect_C, bSuccess) == 0x0000F0, "Member 'UBP_PlayerActionStateRessurect_C::bSuccess' has a wrong offset!");
static_assert(offsetof(UBP_PlayerActionStateRessurect_C, RevivePlayer) == 0x0000F8, "Member 'UBP_PlayerActionStateRessurect_C::RevivePlayer' has a wrong offset!");
static_assert(offsetof(UBP_PlayerActionStateRessurect_C, bBind) == 0x000100, "Member 'UBP_PlayerActionStateRessurect_C::bBind' has a wrong offset!");
static_assert(offsetof(UBP_PlayerActionStateRessurect_C, HandleLoopSE) == 0x000108, "Member 'UBP_PlayerActionStateRessurect_C::HandleLoopSE' has a wrong offset!");
static_assert(offsetof(UBP_PlayerActionStateRessurect_C, StoreHitPriority) == 0x000110, "Member 'UBP_PlayerActionStateRessurect_C::StoreHitPriority' has a wrong offset!");
static_assert(offsetof(UBP_PlayerActionStateRessurect_C, DelayReticleParticleTimer) == 0x000114, "Member 'UBP_PlayerActionStateRessurect_C::DelayReticleParticleTimer' has a wrong offset!");
static_assert(offsetof(UBP_PlayerActionStateRessurect_C, ClaimantName) == 0x000118, "Member 'UBP_PlayerActionStateRessurect_C::ClaimantName' has a wrong offset!");
static_assert(offsetof(UBP_PlayerActionStateRessurect_C, BeginLocation) == 0x000120, "Member 'UBP_PlayerActionStateRessurect_C::BeginLocation' has a wrong offset!");
static_assert(offsetof(UBP_PlayerActionStateRessurect_C, ParamMinDistance) == 0x00012C, "Member 'UBP_PlayerActionStateRessurect_C::ParamMinDistance' has a wrong offset!");
static_assert(offsetof(UBP_PlayerActionStateRessurect_C, MainPlayer) == 0x000130, "Member 'UBP_PlayerActionStateRessurect_C::MainPlayer' has a wrong offset!");
static_assert(offsetof(UBP_PlayerActionStateRessurect_C, TrgEffMgr) == 0x000138, "Member 'UBP_PlayerActionStateRessurect_C::TrgEffMgr' has a wrong offset!");

}

