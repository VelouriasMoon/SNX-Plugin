#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_NewStaticNodeActor

#include "Basic.hpp"

#include "BP_NewStaticNodeActor_classes.hpp"
#include "BP_NewStaticNodeActor_parameters.hpp"


namespace SDK
{

// Function BP_NewStaticNodeActor.BP_NewStaticNodeActor_C.ExecuteUbergraph_BP_NewStaticNodeActor
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NewStaticNodeActor_C::ExecuteUbergraph_BP_NewStaticNodeActor(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NewStaticNodeActor_C", "ExecuteUbergraph_BP_NewStaticNodeActor");

	Params::BP_NewStaticNodeActor_C_ExecuteUbergraph_BP_NewStaticNodeActor Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NewStaticNodeActor.BP_NewStaticNodeActor_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NewStaticNodeActor_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NewStaticNodeActor_C", "ReceiveTick");

	Params::BP_NewStaticNodeActor_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NewStaticNodeActor.BP_NewStaticNodeActor_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_NewStaticNodeActor_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NewStaticNodeActor_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NewStaticNodeActor.BP_NewStaticNodeActor_C.OnStaticNodeMontageEnd
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAnimMontage*                     Montage                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bInterrupted                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_NewStaticNodeActor_C::OnStaticNodeMontageEnd(class UAnimMontage* Montage, bool bInterrupted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NewStaticNodeActor_C", "OnStaticNodeMontageEnd");

	Params::BP_NewStaticNodeActor_C_OnStaticNodeMontageEnd Parms{};

	Parms.Montage = Montage;
	Parms.bInterrupted = bInterrupted;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NewStaticNodeActor.BP_NewStaticNodeActor_C.EventAttachAndVisibleNodeActor
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_NewStaticNodeActor_C*         ChildNodeActor                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NewStaticNodeActor_C::EventAttachAndVisibleNodeActor(class ABP_NewStaticNodeActor_C* ChildNodeActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NewStaticNodeActor_C", "EventAttachAndVisibleNodeActor");

	Params::BP_NewStaticNodeActor_C_EventAttachAndVisibleNodeActor Parms{};

	Parms.ChildNodeActor = ChildNodeActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NewStaticNodeActor.BP_NewStaticNodeActor_C.OnMontageEnd
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAnimMontage*                     Montage                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bInterrupted                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_NewStaticNodeActor_C::OnMontageEnd(class UAnimMontage* Montage, bool bInterrupted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NewStaticNodeActor_C", "OnMontageEnd");

	Params::BP_NewStaticNodeActor_C_OnMontageEnd Parms{};

	Parms.Montage = Montage;
	Parms.bInterrupted = bInterrupted;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NewStaticNodeActor.BP_NewStaticNodeActor_C.OnTimerStopAnimmontage
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UAnimMontage*                     AnimMontage                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NewStaticNodeActor_C::OnTimerStopAnimmontage(float Time, class UAnimMontage* AnimMontage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NewStaticNodeActor_C", "OnTimerStopAnimmontage");

	Params::BP_NewStaticNodeActor_C_OnTimerStopAnimmontage Parms{};

	Parms.Time = Time;
	Parms.AnimMontage = AnimMontage;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NewStaticNodeActor.BP_NewStaticNodeActor_C.PlayBaseNodeAnimation
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           AnimMontagePath                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class ABP_NewStaticNodeActor_C*         ChildActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UAnimMontage*                     ShaderAnimMontage                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NewStaticNodeActor_C::PlayBaseNodeAnimation(const class FString& AnimMontagePath, class ABP_NewStaticNodeActor_C* ChildActor, class UAnimMontage* ShaderAnimMontage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NewStaticNodeActor_C", "PlayBaseNodeAnimation");

	Params::BP_NewStaticNodeActor_C_PlayBaseNodeAnimation Parms{};

	Parms.AnimMontagePath = std::move(AnimMontagePath);
	Parms.ChildActor = ChildActor;
	Parms.ShaderAnimMontage = ShaderAnimMontage;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NewStaticNodeActor.BP_NewStaticNodeActor_C.PlayPhaseNodeAnimation
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           AnimMontagePath                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ABP_NewStaticNodeActor_C::PlayPhaseNodeAnimation(const class FString& AnimMontagePath)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NewStaticNodeActor_C", "PlayPhaseNodeAnimation");

	Params::BP_NewStaticNodeActor_C_PlayPhaseNodeAnimation Parms{};

	Parms.AnimMontagePath = std::move(AnimMontagePath);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NewStaticNodeActor.BP_NewStaticNodeActor_C.EventEnd
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_NewStaticNodeActor_C::EventEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NewStaticNodeActor_C", "EventEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NewStaticNodeActor.BP_NewStaticNodeActor_C.AttachCapActorForPhaseNodeMesh
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABPCaptureActor_C*                ChildCapActor                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             SocketName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    NewVisibility                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_NewStaticNodeActor_C::AttachCapActorForPhaseNodeMesh(class ABPCaptureActor_C* ChildCapActor, class FName SocketName, bool NewVisibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NewStaticNodeActor_C", "AttachCapActorForPhaseNodeMesh");

	Params::BP_NewStaticNodeActor_C_AttachCapActorForPhaseNodeMesh Parms{};

	Parms.ChildCapActor = ChildCapActor;
	Parms.SocketName = SocketName;
	Parms.NewVisibility = NewVisibility;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NewStaticNodeActor.BP_NewStaticNodeActor_C.SetVisibilityToChildCapActor
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewVisibility                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_NewStaticNodeActor_C::SetVisibilityToChildCapActor(bool NewVisibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NewStaticNodeActor_C", "SetVisibilityToChildCapActor");

	Params::BP_NewStaticNodeActor_C_SetVisibilityToChildCapActor Parms{};

	Parms.NewVisibility = NewVisibility;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NewStaticNodeActor.BP_NewStaticNodeActor_C.ClearChildCapActor
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPhaseAlphaCurveType                    AlphaFadeType                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NewStaticNodeActor_C::ClearChildCapActor(EPhaseAlphaCurveType AlphaFadeType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NewStaticNodeActor_C", "ClearChildCapActor");

	Params::BP_NewStaticNodeActor_C_ClearChildCapActor Parms{};

	Parms.AlphaFadeType = AlphaFadeType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NewStaticNodeActor.BP_NewStaticNodeActor_C.ResetNewStaticNode
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_NewStaticNodeActor_C::ResetNewStaticNode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NewStaticNodeActor_C", "ResetNewStaticNode");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NewStaticNodeActor.BP_NewStaticNodeActor_C.IsPlayingCo0300Animation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USkeletalMeshComponent*           Param_SkeletalMesh                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsPlaying                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_NewStaticNodeActor_C::IsPlayingCo0300Animation(class USkeletalMeshComponent* Param_SkeletalMesh, bool* IsPlaying)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NewStaticNodeActor_C", "IsPlayingCo0300Animation");

	Params::BP_NewStaticNodeActor_C_IsPlayingCo0300Animation Parms{};

	Parms.Param_SkeletalMesh = Param_SkeletalMesh;

	UObject::ProcessEvent(Func, &Parms);

	if (IsPlaying != nullptr)
		*IsPlaying = Parms.IsPlaying;
}


// Function BP_NewStaticNodeActor.BP_NewStaticNodeActor_C.IsPlayingBaseAnimation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsPlaying                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_NewStaticNodeActor_C::IsPlayingBaseAnimation(bool* IsPlaying)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NewStaticNodeActor_C", "IsPlayingBaseAnimation");

	Params::BP_NewStaticNodeActor_C_IsPlayingBaseAnimation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsPlaying != nullptr)
		*IsPlaying = Parms.IsPlaying;
}


// Function BP_NewStaticNodeActor.BP_NewStaticNodeActor_C.IsPlayingPhaseAnimation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsPlaying                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_NewStaticNodeActor_C::IsPlayingPhaseAnimation(bool* IsPlaying)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NewStaticNodeActor_C", "IsPlayingPhaseAnimation");

	Params::BP_NewStaticNodeActor_C_IsPlayingPhaseAnimation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsPlaying != nullptr)
		*IsPlaying = Parms.IsPlaying;
}


// Function BP_NewStaticNodeActor.BP_NewStaticNodeActor_C.ClearStoreRTChildCapActor
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_NewStaticNodeActor_C::ClearStoreRTChildCapActor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NewStaticNodeActor_C", "ClearStoreRTChildCapActor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NewStaticNodeActor.BP_NewStaticNodeActor_C.SetPhaseAnimCurveInfo
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FEventPlAnimationCurveParam>Param_CurrentPlAnimationCurveDataList                  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)

void ABP_NewStaticNodeActor_C::SetPhaseAnimCurveInfo(TArray<struct FEventPlAnimationCurveParam>& Param_CurrentPlAnimationCurveDataList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NewStaticNodeActor_C", "SetPhaseAnimCurveInfo");

	Params::BP_NewStaticNodeActor_C_SetPhaseAnimCurveInfo Parms{};

	Parms.Param_CurrentPlAnimationCurveDataList = std::move(Param_CurrentPlAnimationCurveDataList);

	UObject::ProcessEvent(Func, &Parms);

	Param_CurrentPlAnimationCurveDataList = std::move(Parms.Param_CurrentPlAnimationCurveDataList);
}


// Function BP_NewStaticNodeActor.BP_NewStaticNodeActor_C.GetPhaseAnimCurveValueToCurveName
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             CurveName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   CurveValue                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NewStaticNodeActor_C::GetPhaseAnimCurveValueToCurveName(class FName CurveName, float* CurveValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NewStaticNodeActor_C", "GetPhaseAnimCurveValueToCurveName");

	Params::BP_NewStaticNodeActor_C_GetPhaseAnimCurveValueToCurveName Parms{};

	Parms.CurveName = CurveName;

	UObject::ProcessEvent(Func, &Parms);

	if (CurveValue != nullptr)
		*CurveValue = Parms.CurveValue;
}


// Function BP_NewStaticNodeActor.BP_NewStaticNodeActor_C.SetEndFrame
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_NewStaticNodeActor_C::SetEndFrame()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NewStaticNodeActor_C", "SetEndFrame");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NewStaticNodeActor.BP_NewStaticNodeActor_C.OnOptimizeTick
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_NewStaticNodeActor_C::OnOptimizeTick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NewStaticNodeActor_C", "OnOptimizeTick");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NewStaticNodeActor.BP_NewStaticNodeActor_C.OffOptimizeTick
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_NewStaticNodeActor_C::OffOptimizeTick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NewStaticNodeActor_C", "OffOptimizeTick");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NewStaticNodeActor.BP_NewStaticNodeActor_C.SetPhasePlayRate
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   NewPlayRate                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NewStaticNodeActor_C::SetPhasePlayRate(float NewPlayRate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NewStaticNodeActor_C", "SetPhasePlayRate");

	Params::BP_NewStaticNodeActor_C_SetPhasePlayRate Parms{};

	Parms.NewPlayRate = NewPlayRate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NewStaticNodeActor.BP_NewStaticNodeActor_C.GetPhaseActiveMontagePlayLength
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float ABP_NewStaticNodeActor_C::GetPhaseActiveMontagePlayLength()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NewStaticNodeActor_C", "GetPhaseActiveMontagePlayLength");

	Params::BP_NewStaticNodeActor_C_GetPhaseActiveMontagePlayLength Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

