#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MapGimmickAttackObjectBase

#include "Basic.hpp"

#include "BP_MapGimmickAttackObjectBase_classes.hpp"
#include "BP_MapGimmickAttackObjectBase_parameters.hpp"


namespace SDK
{

// Function BP_MapGimmickAttackObjectBase.BP_MapGimmickAttackObjectBase_C.ExecuteUbergraph_BP_MapGimmickAttackObjectBase
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MapGimmickAttackObjectBase_C::ExecuteUbergraph_BP_MapGimmickAttackObjectBase(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickAttackObjectBase_C", "ExecuteUbergraph_BP_MapGimmickAttackObjectBase");

	Params::BP_MapGimmickAttackObjectBase_C_ExecuteUbergraph_BP_MapGimmickAttackObjectBase Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MapGimmickAttackObjectBase.BP_MapGimmickAttackObjectBase_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_MapGimmickAttackObjectBase_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickAttackObjectBase_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapGimmickAttackObjectBase.BP_MapGimmickAttackObjectBase_C.EnableAttackCollision
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enable                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_MapGimmickAttackObjectBase_C::EnableAttackCollision(bool Enable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickAttackObjectBase_C", "EnableAttackCollision");

	Params::BP_MapGimmickAttackObjectBase_C_EnableAttackCollision Parms{};

	Parms.Enable = Enable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MapGimmickAttackObjectBase.BP_MapGimmickAttackObjectBase_C.InitializeAttackCollisionLoop
// (BlueprintCallable, BlueprintEvent)

void ABP_MapGimmickAttackObjectBase_C::InitializeAttackCollisionLoop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickAttackObjectBase_C", "InitializeAttackCollisionLoop");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapGimmickAttackObjectBase.BP_MapGimmickAttackObjectBase_C.InitializeAttackCollision
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MapGimmickAttackObjectBase_C::InitializeAttackCollision()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickAttackObjectBase_C", "InitializeAttackCollision");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapGimmickAttackObjectBase.BP_MapGimmickAttackObjectBase_C.SetAttackEnable
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enable                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsGimmickEnemy                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_MapGimmickAttackObjectBase_C::SetAttackEnable(bool Enable, bool IsGimmickEnemy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickAttackObjectBase_C", "SetAttackEnable");

	Params::BP_MapGimmickAttackObjectBase_C_SetAttackEnable Parms{};

	Parms.Enable = Enable;
	Parms.IsGimmickEnemy = IsGimmickEnemy;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MapGimmickAttackObjectBase.BP_MapGimmickAttackObjectBase_C.GetPsychicObjectWeightGaugePos
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Weight_gauge_pos                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MapGimmickAttackObjectBase_C::GetPsychicObjectWeightGaugePos(struct FVector* Weight_gauge_pos)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickAttackObjectBase_C", "GetPsychicObjectWeightGaugePos");

	Params::BP_MapGimmickAttackObjectBase_C_GetPsychicObjectWeightGaugePos Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Weight_gauge_pos != nullptr)
		*Weight_gauge_pos = std::move(Parms.Weight_gauge_pos);
}


// Function BP_MapGimmickAttackObjectBase.BP_MapGimmickAttackObjectBase_C.SetMultiHitExtraType
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_MapGimmickAttackObjectBase_C::SetMultiHitExtraType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickAttackObjectBase_C", "SetMultiHitExtraType");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapGimmickAttackObjectBase.BP_MapGimmickAttackObjectBase_C.ResetMultiHitExtraType
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    UpdateCollision                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_MapGimmickAttackObjectBase_C::ResetMultiHitExtraType(bool UpdateCollision)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickAttackObjectBase_C", "ResetMultiHitExtraType");

	Params::BP_MapGimmickAttackObjectBase_C_ResetMultiHitExtraType Parms{};

	Parms.UpdateCollision = UpdateCollision;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MapGimmickAttackObjectBase.BP_MapGimmickAttackObjectBase_C.CommonAttackHitFunc
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MapGimmickAttackObjectBase_C::CommonAttackHitFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickAttackObjectBase_C", "CommonAttackHitFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapGimmickAttackObjectBase.BP_MapGimmickAttackObjectBase_C.CommonAttackFinishFunc
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    UpdateCollision                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_MapGimmickAttackObjectBase_C::CommonAttackFinishFunc(bool UpdateCollision)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickAttackObjectBase_C", "CommonAttackFinishFunc");

	Params::BP_MapGimmickAttackObjectBase_C_CommonAttackFinishFunc Parms{};

	Parms.UpdateCollision = UpdateCollision;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MapGimmickAttackObjectBase.BP_MapGimmickAttackObjectBase_C.RegisterHitExtraTypeToCollision
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MapGimmickAttackObjectBase_C::RegisterHitExtraTypeToCollision()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickAttackObjectBase_C", "RegisterHitExtraTypeToCollision");

	UObject::ProcessEvent(Func, nullptr);
}

}

