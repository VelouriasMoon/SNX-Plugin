#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BrainFieldFunction

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "BattlePrototype_structs.hpp"


namespace SDK::Params
{

// Function BP_BrainFieldFunction.BP_BrainFieldFunction_C.CheckBrainFieldTarget
// 0x00E0 (0x00E0 - 0x0000)
struct BP_BrainFieldFunction_C_CheckBrainFieldTarget final
{
public:
	class AActor*                                 CheckActor;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseBattleField;                                    // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_37BE[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         BattleFieldID;                                     // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BattleFieldTarget;                                 // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          NormalTarget;                                      // 0x0019(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_37BF[0x6];                                     // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattleEnemy_C*                       Enemy;                                             // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UEnemyScriptComponent*                  Temp_object_Variable;                              // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EEnemyFindPlayerType                          CallFunc_GetFindPlayerType_ReturnValue;            // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_37C0[0x5];                                     // 0x0033(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattleEnemy_C*                       K2Node_DynamicCast_AsRSBattle_Enemy;               // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_37C1[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_EnemyInterface_C> K2Node_DynamicCast_AsBPI_Enemy_Interface;          // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsBossEnemy_bBoss;                        // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAvatar_IsAvatar;                        // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_37C2[0x1];                                     // 0x005B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_InRange_IntInt_ReturnValue;               // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_InRange_IntInt_ReturnValue_1;             // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0063(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_37C3[0x4];                                     // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IRSUniqueIdInterface>  K2Node_DynamicCast_AsRSUnique_Id_Interface;        // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_37C4[0x3];                                     // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetUniqueId_ReturnValue;                  // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_PlayerInterface_C> K2Node_DynamicCast_AsBPI_Player_Interface;         // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActorTickEnabled_ReturnValue;           // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnemyPlayer_bEnemyPlayer;               // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_37C5[0x5];                                     // 0x0093(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBattleEnemyInterface> K2Node_DynamicCast_AsBattle_Enemy_Interface;       // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_37C6[0x7];                                     // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattleEnemy_C*                       K2Node_DynamicCast_AsRSBattle_Enemy_1;             // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_37C7[0x7];                                     // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UEnemyScriptComponent*                  CallFunc_GetEnemyScriptComponent_ReturnValue;      // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleCharacterInterface_C> K2Node_DynamicCast_AsBPI_Battle_Character_Interface; // 0x00C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanTakeBrainField_CanTake;                // 0x00DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BrainFieldFunction_C_CheckBrainFieldTarget) == 0x000008, "Wrong alignment on BP_BrainFieldFunction_C_CheckBrainFieldTarget");
static_assert(sizeof(BP_BrainFieldFunction_C_CheckBrainFieldTarget) == 0x0000E0, "Wrong size on BP_BrainFieldFunction_C_CheckBrainFieldTarget");
static_assert(offsetof(BP_BrainFieldFunction_C_CheckBrainFieldTarget, CheckActor) == 0x000000, "Member 'BP_BrainFieldFunction_C_CheckBrainFieldTarget::CheckActor' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldFunction_C_CheckBrainFieldTarget, UseBattleField) == 0x000008, "Member 'BP_BrainFieldFunction_C_CheckBrainFieldTarget::UseBattleField' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldFunction_C_CheckBrainFieldTarget, BattleFieldID) == 0x00000C, "Member 'BP_BrainFieldFunction_C_CheckBrainFieldTarget::BattleFieldID' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldFunction_C_CheckBrainFieldTarget, __WorldContext) == 0x000010, "Member 'BP_BrainFieldFunction_C_CheckBrainFieldTarget::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldFunction_C_CheckBrainFieldTarget, BattleFieldTarget) == 0x000018, "Member 'BP_BrainFieldFunction_C_CheckBrainFieldTarget::BattleFieldTarget' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldFunction_C_CheckBrainFieldTarget, NormalTarget) == 0x000019, "Member 'BP_BrainFieldFunction_C_CheckBrainFieldTarget::NormalTarget' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldFunction_C_CheckBrainFieldTarget, Enemy) == 0x000020, "Member 'BP_BrainFieldFunction_C_CheckBrainFieldTarget::Enemy' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldFunction_C_CheckBrainFieldTarget, Temp_object_Variable) == 0x000028, "Member 'BP_BrainFieldFunction_C_CheckBrainFieldTarget::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldFunction_C_CheckBrainFieldTarget, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BP_BrainFieldFunction_C_CheckBrainFieldTarget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldFunction_C_CheckBrainFieldTarget, CallFunc_GetFindPlayerType_ReturnValue) == 0x000031, "Member 'BP_BrainFieldFunction_C_CheckBrainFieldTarget::CallFunc_GetFindPlayerType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldFunction_C_CheckBrainFieldTarget, K2Node_SwitchEnum_CmpSuccess) == 0x000032, "Member 'BP_BrainFieldFunction_C_CheckBrainFieldTarget::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldFunction_C_CheckBrainFieldTarget, K2Node_DynamicCast_AsRSBattle_Enemy) == 0x000038, "Member 'BP_BrainFieldFunction_C_CheckBrainFieldTarget::K2Node_DynamicCast_AsRSBattle_Enemy' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldFunction_C_CheckBrainFieldTarget, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_BrainFieldFunction_C_CheckBrainFieldTarget::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldFunction_C_CheckBrainFieldTarget, K2Node_DynamicCast_AsBPI_Enemy_Interface) == 0x000048, "Member 'BP_BrainFieldFunction_C_CheckBrainFieldTarget::K2Node_DynamicCast_AsBPI_Enemy_Interface' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldFunction_C_CheckBrainFieldTarget, K2Node_DynamicCast_bSuccess_1) == 0x000058, "Member 'BP_BrainFieldFunction_C_CheckBrainFieldTarget::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldFunction_C_CheckBrainFieldTarget, CallFunc_IsBossEnemy_bBoss) == 0x000059, "Member 'BP_BrainFieldFunction_C_CheckBrainFieldTarget::CallFunc_IsBossEnemy_bBoss' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldFunction_C_CheckBrainFieldTarget, CallFunc_IsAvatar_IsAvatar) == 0x00005A, "Member 'BP_BrainFieldFunction_C_CheckBrainFieldTarget::CallFunc_IsAvatar_IsAvatar' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldFunction_C_CheckBrainFieldTarget, Temp_int_Variable) == 0x00005C, "Member 'BP_BrainFieldFunction_C_CheckBrainFieldTarget::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldFunction_C_CheckBrainFieldTarget, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000060, "Member 'BP_BrainFieldFunction_C_CheckBrainFieldTarget::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldFunction_C_CheckBrainFieldTarget, CallFunc_InRange_IntInt_ReturnValue) == 0x000061, "Member 'BP_BrainFieldFunction_C_CheckBrainFieldTarget::CallFunc_InRange_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldFunction_C_CheckBrainFieldTarget, CallFunc_InRange_IntInt_ReturnValue_1) == 0x000062, "Member 'BP_BrainFieldFunction_C_CheckBrainFieldTarget::CallFunc_InRange_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldFunction_C_CheckBrainFieldTarget, CallFunc_BooleanOR_ReturnValue) == 0x000063, "Member 'BP_BrainFieldFunction_C_CheckBrainFieldTarget::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldFunction_C_CheckBrainFieldTarget, K2Node_DynamicCast_AsRSUnique_Id_Interface) == 0x000068, "Member 'BP_BrainFieldFunction_C_CheckBrainFieldTarget::K2Node_DynamicCast_AsRSUnique_Id_Interface' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldFunction_C_CheckBrainFieldTarget, K2Node_DynamicCast_bSuccess_2) == 0x000078, "Member 'BP_BrainFieldFunction_C_CheckBrainFieldTarget::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldFunction_C_CheckBrainFieldTarget, CallFunc_GetUniqueId_ReturnValue) == 0x00007C, "Member 'BP_BrainFieldFunction_C_CheckBrainFieldTarget::CallFunc_GetUniqueId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldFunction_C_CheckBrainFieldTarget, K2Node_DynamicCast_AsBPI_Player_Interface) == 0x000080, "Member 'BP_BrainFieldFunction_C_CheckBrainFieldTarget::K2Node_DynamicCast_AsBPI_Player_Interface' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldFunction_C_CheckBrainFieldTarget, K2Node_DynamicCast_bSuccess_3) == 0x000090, "Member 'BP_BrainFieldFunction_C_CheckBrainFieldTarget::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldFunction_C_CheckBrainFieldTarget, CallFunc_IsActorTickEnabled_ReturnValue) == 0x000091, "Member 'BP_BrainFieldFunction_C_CheckBrainFieldTarget::CallFunc_IsActorTickEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldFunction_C_CheckBrainFieldTarget, CallFunc_IsEnemyPlayer_bEnemyPlayer) == 0x000092, "Member 'BP_BrainFieldFunction_C_CheckBrainFieldTarget::CallFunc_IsEnemyPlayer_bEnemyPlayer' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldFunction_C_CheckBrainFieldTarget, K2Node_DynamicCast_AsBattle_Enemy_Interface) == 0x000098, "Member 'BP_BrainFieldFunction_C_CheckBrainFieldTarget::K2Node_DynamicCast_AsBattle_Enemy_Interface' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldFunction_C_CheckBrainFieldTarget, K2Node_DynamicCast_bSuccess_4) == 0x0000A8, "Member 'BP_BrainFieldFunction_C_CheckBrainFieldTarget::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldFunction_C_CheckBrainFieldTarget, K2Node_DynamicCast_AsRSBattle_Enemy_1) == 0x0000B0, "Member 'BP_BrainFieldFunction_C_CheckBrainFieldTarget::K2Node_DynamicCast_AsRSBattle_Enemy_1' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldFunction_C_CheckBrainFieldTarget, K2Node_DynamicCast_bSuccess_5) == 0x0000B8, "Member 'BP_BrainFieldFunction_C_CheckBrainFieldTarget::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldFunction_C_CheckBrainFieldTarget, CallFunc_GetEnemyScriptComponent_ReturnValue) == 0x0000C0, "Member 'BP_BrainFieldFunction_C_CheckBrainFieldTarget::CallFunc_GetEnemyScriptComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldFunction_C_CheckBrainFieldTarget, K2Node_DynamicCast_AsBPI_Battle_Character_Interface) == 0x0000C8, "Member 'BP_BrainFieldFunction_C_CheckBrainFieldTarget::K2Node_DynamicCast_AsBPI_Battle_Character_Interface' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldFunction_C_CheckBrainFieldTarget, K2Node_DynamicCast_bSuccess_6) == 0x0000D8, "Member 'BP_BrainFieldFunction_C_CheckBrainFieldTarget::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldFunction_C_CheckBrainFieldTarget, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x0000D9, "Member 'BP_BrainFieldFunction_C_CheckBrainFieldTarget::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldFunction_C_CheckBrainFieldTarget, CallFunc_CanTakeBrainField_CanTake) == 0x0000DA, "Member 'BP_BrainFieldFunction_C_CheckBrainFieldTarget::CallFunc_CanTakeBrainField_CanTake' has a wrong offset!");

// Function BP_BrainFieldFunction.BP_BrainFieldFunction_C.GetBrainFieldLeftPlayerLocation
// 0x0020 (0x0020 - 0x0000)
struct BP_BrainFieldFunction_C_GetBrainFieldLeftPlayerLocation final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Transform;                                         // 0x0008(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrainFieldFunction_C_GetBrainFieldLeftPlayerLocation) == 0x000008, "Wrong alignment on BP_BrainFieldFunction_C_GetBrainFieldLeftPlayerLocation");
static_assert(sizeof(BP_BrainFieldFunction_C_GetBrainFieldLeftPlayerLocation) == 0x000020, "Wrong size on BP_BrainFieldFunction_C_GetBrainFieldLeftPlayerLocation");
static_assert(offsetof(BP_BrainFieldFunction_C_GetBrainFieldLeftPlayerLocation, __WorldContext) == 0x000000, "Member 'BP_BrainFieldFunction_C_GetBrainFieldLeftPlayerLocation::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldFunction_C_GetBrainFieldLeftPlayerLocation, Transform) == 0x000008, "Member 'BP_BrainFieldFunction_C_GetBrainFieldLeftPlayerLocation::Transform' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldFunction_C_GetBrainFieldLeftPlayerLocation, CallFunc_MakeVector_ReturnValue) == 0x000014, "Member 'BP_BrainFieldFunction_C_GetBrainFieldLeftPlayerLocation::CallFunc_MakeVector_ReturnValue' has a wrong offset!");

// Function BP_BrainFieldFunction.BP_BrainFieldFunction_C.GetBrainFieldRightPlayerLocation
// 0x0020 (0x0020 - 0x0000)
struct BP_BrainFieldFunction_C_GetBrainFieldRightPlayerLocation final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Transform;                                         // 0x0008(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrainFieldFunction_C_GetBrainFieldRightPlayerLocation) == 0x000008, "Wrong alignment on BP_BrainFieldFunction_C_GetBrainFieldRightPlayerLocation");
static_assert(sizeof(BP_BrainFieldFunction_C_GetBrainFieldRightPlayerLocation) == 0x000020, "Wrong size on BP_BrainFieldFunction_C_GetBrainFieldRightPlayerLocation");
static_assert(offsetof(BP_BrainFieldFunction_C_GetBrainFieldRightPlayerLocation, __WorldContext) == 0x000000, "Member 'BP_BrainFieldFunction_C_GetBrainFieldRightPlayerLocation::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldFunction_C_GetBrainFieldRightPlayerLocation, Transform) == 0x000008, "Member 'BP_BrainFieldFunction_C_GetBrainFieldRightPlayerLocation::Transform' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldFunction_C_GetBrainFieldRightPlayerLocation, CallFunc_MakeVector_ReturnValue) == 0x000014, "Member 'BP_BrainFieldFunction_C_GetBrainFieldRightPlayerLocation::CallFunc_MakeVector_ReturnValue' has a wrong offset!");

// Function BP_BrainFieldFunction.BP_BrainFieldFunction_C.CheckBattleFieldNoFenceEnemy
// 0x0150 (0x0150 - 0x0000)
struct BP_BrainFieldFunction_C_CheckBattleFieldNoFenceEnemy final
{
public:
	TArray<class AActor*>                         EnemyTargetNormalTarget;                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseBattleField;                                    // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_37C8[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         BFGroupID;                                         // 0x001C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         BFEnemyRestCount;                                  // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         BFCount;                                           // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBattlefieldInfo                       BattleField;                                       // 0x0028(0x0088)(Edit, BlueprintVisible)
	class ABP_EnemyManager_C*                     EnemyManager;                                      // 0x00B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_37C9[0x3];                                     // 0x00CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_1;                      // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_37CA[0x3];                                     // 0x00DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattleCharacter_C*                   K2Node_DynamicCast_AsRSBattle_Character;           // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x00F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00F3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_37CB[0x7];                                     // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_EnemyManager_C*                     CallFunc_GetEnemyManager_Manager;                  // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_SceneManager_C*                     CallFunc_GetSceneManager_SceneManager;             // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_37CC[0x3];                                     // 0x0111(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetCurrentLocationAndArea_LocationID;     // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCurrentLocationAndArea_AreaID;         // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABattlefieldManager*                    CallFunc_GetBattleFieldManager_BattleFieldManager; // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_37CD[0x6];                                     // 0x012A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FBattlefieldInfo>               CallFunc_Map_Values_Values;                        // 0x0130(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSubGroupEnemyCount_GroupCount;         // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_3;          // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_4;          // 0x0149(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x014A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x014B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x014C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x014D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x014E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x014F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BrainFieldFunction_C_CheckBattleFieldNoFenceEnemy) == 0x000008, "Wrong alignment on BP_BrainFieldFunction_C_CheckBattleFieldNoFenceEnemy");
static_assert(sizeof(BP_BrainFieldFunction_C_CheckBattleFieldNoFenceEnemy) == 0x000150, "Wrong size on BP_BrainFieldFunction_C_CheckBattleFieldNoFenceEnemy");
static_assert(offsetof(BP_BrainFieldFunction_C_CheckBattleFieldNoFenceEnemy, EnemyTargetNormalTarget) == 0x000000, "Member 'BP_BrainFieldFunction_C_CheckBattleFieldNoFenceEnemy::EnemyTargetNormalTarget' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldFunction_C_CheckBattleFieldNoFenceEnemy, __WorldContext) == 0x000010, "Member 'BP_BrainFieldFunction_C_CheckBattleFieldNoFenceEnemy::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldFunction_C_CheckBattleFieldNoFenceEnemy, UseBattleField) == 0x000018, "Member 'BP_BrainFieldFunction_C_CheckBattleFieldNoFenceEnemy::UseBattleField' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldFunction_C_CheckBattleFieldNoFenceEnemy, BFGroupID) == 0x00001C, "Member 'BP_BrainFieldFunction_C_CheckBattleFieldNoFenceEnemy::BFGroupID' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldFunction_C_CheckBattleFieldNoFenceEnemy, BFEnemyRestCount) == 0x000020, "Member 'BP_BrainFieldFunction_C_CheckBattleFieldNoFenceEnemy::BFEnemyRestCount' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldFunction_C_CheckBattleFieldNoFenceEnemy, BFCount) == 0x000024, "Member 'BP_BrainFieldFunction_C_CheckBattleFieldNoFenceEnemy::BFCount' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldFunction_C_CheckBattleFieldNoFenceEnemy, BattleField) == 0x000028, "Member 'BP_BrainFieldFunction_C_CheckBattleFieldNoFenceEnemy::BattleField' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldFunction_C_CheckBattleFieldNoFenceEnemy, EnemyManager) == 0x0000B0, "Member 'BP_BrainFieldFunction_C_CheckBattleFieldNoFenceEnemy::EnemyManager' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldFunction_C_CheckBattleFieldNoFenceEnemy, Temp_int_Array_Index_Variable) == 0x0000B8, "Member 'BP_BrainFieldFunction_C_CheckBattleFieldNoFenceEnemy::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldFunction_C_CheckBattleFieldNoFenceEnemy, Temp_int_Loop_Counter_Variable) == 0x0000BC, "Member 'BP_BrainFieldFunction_C_CheckBattleFieldNoFenceEnemy::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldFunction_C_CheckBattleFieldNoFenceEnemy, CallFunc_Add_IntInt_ReturnValue) == 0x0000C0, "Member 'BP_BrainFieldFunction_C_CheckBattleFieldNoFenceEnemy::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldFunction_C_CheckBattleFieldNoFenceEnemy, Temp_int_Array_Index_Variable_1) == 0x0000C4, "Member 'BP_BrainFieldFunction_C_CheckBattleFieldNoFenceEnemy::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldFunction_C_CheckBattleFieldNoFenceEnemy, Temp_int_Loop_Num_Variable) == 0x0000C8, "Member 'BP_BrainFieldFunction_C_CheckBattleFieldNoFenceEnemy::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldFunction_C_CheckBattleFieldNoFenceEnemy, CallFunc_Less_IntInt_ReturnValue) == 0x0000CC, "Member 'BP_BrainFieldFunction_C_CheckBattleFieldNoFenceEnemy::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldFunction_C_CheckBattleFieldNoFenceEnemy, Temp_int_Loop_Counter_Variable_1) == 0x0000D0, "Member 'BP_BrainFieldFunction_C_CheckBattleFieldNoFenceEnemy::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldFunction_C_CheckBattleFieldNoFenceEnemy, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000D4, "Member 'BP_BrainFieldFunction_C_CheckBattleFieldNoFenceEnemy::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldFunction_C_CheckBattleFieldNoFenceEnemy, Temp_int_Loop_Num_Variable_1) == 0x0000D8, "Member 'BP_BrainFieldFunction_C_CheckBattleFieldNoFenceEnemy::Temp_int_Loop_Num_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldFunction_C_CheckBattleFieldNoFenceEnemy, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000DC, "Member 'BP_BrainFieldFunction_C_CheckBattleFieldNoFenceEnemy::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldFunction_C_CheckBattleFieldNoFenceEnemy, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000E0, "Member 'BP_BrainFieldFunction_C_CheckBattleFieldNoFenceEnemy::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldFunction_C_CheckBattleFieldNoFenceEnemy, CallFunc_Array_Length_ReturnValue) == 0x0000E4, "Member 'BP_BrainFieldFunction_C_CheckBattleFieldNoFenceEnemy::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldFunction_C_CheckBattleFieldNoFenceEnemy, K2Node_DynamicCast_AsRSBattle_Character) == 0x0000E8, "Member 'BP_BrainFieldFunction_C_CheckBattleFieldNoFenceEnemy::K2Node_DynamicCast_AsRSBattle_Character' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldFunction_C_CheckBattleFieldNoFenceEnemy, K2Node_DynamicCast_bSuccess) == 0x0000F0, "Member 'BP_BrainFieldFunction_C_CheckBattleFieldNoFenceEnemy::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldFunction_C_CheckBattleFieldNoFenceEnemy, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000F1, "Member 'BP_BrainFieldFunction_C_CheckBattleFieldNoFenceEnemy::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldFunction_C_CheckBattleFieldNoFenceEnemy, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x0000F2, "Member 'BP_BrainFieldFunction_C_CheckBattleFieldNoFenceEnemy::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldFunction_C_CheckBattleFieldNoFenceEnemy, CallFunc_BooleanAND_ReturnValue) == 0x0000F3, "Member 'BP_BrainFieldFunction_C_CheckBattleFieldNoFenceEnemy::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldFunction_C_CheckBattleFieldNoFenceEnemy, CallFunc_Array_Length_ReturnValue_1) == 0x0000F4, "Member 'BP_BrainFieldFunction_C_CheckBattleFieldNoFenceEnemy::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldFunction_C_CheckBattleFieldNoFenceEnemy, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0000F8, "Member 'BP_BrainFieldFunction_C_CheckBattleFieldNoFenceEnemy::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldFunction_C_CheckBattleFieldNoFenceEnemy, CallFunc_GetEnemyManager_Manager) == 0x000100, "Member 'BP_BrainFieldFunction_C_CheckBattleFieldNoFenceEnemy::CallFunc_GetEnemyManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldFunction_C_CheckBattleFieldNoFenceEnemy, CallFunc_GetSceneManager_SceneManager) == 0x000108, "Member 'BP_BrainFieldFunction_C_CheckBattleFieldNoFenceEnemy::CallFunc_GetSceneManager_SceneManager' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldFunction_C_CheckBattleFieldNoFenceEnemy, CallFunc_IsValid_ReturnValue) == 0x000110, "Member 'BP_BrainFieldFunction_C_CheckBattleFieldNoFenceEnemy::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldFunction_C_CheckBattleFieldNoFenceEnemy, CallFunc_GetCurrentLocationAndArea_LocationID) == 0x000114, "Member 'BP_BrainFieldFunction_C_CheckBattleFieldNoFenceEnemy::CallFunc_GetCurrentLocationAndArea_LocationID' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldFunction_C_CheckBattleFieldNoFenceEnemy, CallFunc_GetCurrentLocationAndArea_AreaID) == 0x000118, "Member 'BP_BrainFieldFunction_C_CheckBattleFieldNoFenceEnemy::CallFunc_GetCurrentLocationAndArea_AreaID' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldFunction_C_CheckBattleFieldNoFenceEnemy, Temp_int_Variable) == 0x00011C, "Member 'BP_BrainFieldFunction_C_CheckBattleFieldNoFenceEnemy::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldFunction_C_CheckBattleFieldNoFenceEnemy, CallFunc_GetBattleFieldManager_BattleFieldManager) == 0x000120, "Member 'BP_BrainFieldFunction_C_CheckBattleFieldNoFenceEnemy::CallFunc_GetBattleFieldManager_BattleFieldManager' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldFunction_C_CheckBattleFieldNoFenceEnemy, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x000128, "Member 'BP_BrainFieldFunction_C_CheckBattleFieldNoFenceEnemy::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldFunction_C_CheckBattleFieldNoFenceEnemy, CallFunc_IsValid_ReturnValue_1) == 0x000129, "Member 'BP_BrainFieldFunction_C_CheckBattleFieldNoFenceEnemy::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldFunction_C_CheckBattleFieldNoFenceEnemy, CallFunc_Map_Values_Values) == 0x000130, "Member 'BP_BrainFieldFunction_C_CheckBattleFieldNoFenceEnemy::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldFunction_C_CheckBattleFieldNoFenceEnemy, CallFunc_Array_Length_ReturnValue_2) == 0x000140, "Member 'BP_BrainFieldFunction_C_CheckBattleFieldNoFenceEnemy::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldFunction_C_CheckBattleFieldNoFenceEnemy, CallFunc_GetSubGroupEnemyCount_GroupCount) == 0x000144, "Member 'BP_BrainFieldFunction_C_CheckBattleFieldNoFenceEnemy::CallFunc_GetSubGroupEnemyCount_GroupCount' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldFunction_C_CheckBattleFieldNoFenceEnemy, CallFunc_EqualEqual_IntInt_ReturnValue_3) == 0x000148, "Member 'BP_BrainFieldFunction_C_CheckBattleFieldNoFenceEnemy::CallFunc_EqualEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldFunction_C_CheckBattleFieldNoFenceEnemy, CallFunc_EqualEqual_IntInt_ReturnValue_4) == 0x000149, "Member 'BP_BrainFieldFunction_C_CheckBattleFieldNoFenceEnemy::CallFunc_EqualEqual_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldFunction_C_CheckBattleFieldNoFenceEnemy, CallFunc_Not_PreBool_ReturnValue) == 0x00014A, "Member 'BP_BrainFieldFunction_C_CheckBattleFieldNoFenceEnemy::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldFunction_C_CheckBattleFieldNoFenceEnemy, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00014B, "Member 'BP_BrainFieldFunction_C_CheckBattleFieldNoFenceEnemy::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldFunction_C_CheckBattleFieldNoFenceEnemy, CallFunc_BooleanAND_ReturnValue_1) == 0x00014C, "Member 'BP_BrainFieldFunction_C_CheckBattleFieldNoFenceEnemy::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldFunction_C_CheckBattleFieldNoFenceEnemy, CallFunc_IsValid_ReturnValue_2) == 0x00014D, "Member 'BP_BrainFieldFunction_C_CheckBattleFieldNoFenceEnemy::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldFunction_C_CheckBattleFieldNoFenceEnemy, CallFunc_BooleanAND_ReturnValue_2) == 0x00014E, "Member 'BP_BrainFieldFunction_C_CheckBattleFieldNoFenceEnemy::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrainFieldFunction_C_CheckBattleFieldNoFenceEnemy, CallFunc_BooleanAND_ReturnValue_3) == 0x00014F, "Member 'BP_BrainFieldFunction_C_CheckBattleFieldNoFenceEnemy::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");

}

