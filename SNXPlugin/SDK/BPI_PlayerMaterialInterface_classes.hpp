#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_PlayerMaterialInterface

#include "Basic.hpp"

#include "CoreUObject_classes.hpp"
#include "E_SASKind_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BPI_PlayerMaterialInterface.BPI_PlayerMaterialInterface_C
// 0x0000 (0x0028 - 0x0028)
class IBPI_PlayerMaterialInterface_C final : public IInterface
{
public:
	void SetWeaponMaterialColor_PsychicEmission(float R, float G, float B, class FName ClaimantName, bool* bDummy);
	void SetWeaponMaterialAlpha_PsychicEmission(float Alpha, class FName ClaimantName, bool* bDummy);
	void ResetWeaponMaterialAlpha_PsychicEmission(class FName ClaimantName, bool* bDummy);
	void ResetWeaponMaterialColor_PsychicEmission(class FName ClaimantName, bool* bDummy);
	void SetWeaponEmissive(float Emissive, bool* bDummy);
	void SetWeaponEmissiveColor(E_SASKind SasKind, bool* bDummy);
	void ResetWeaponEmissiveColor(E_SASKind SasKind, bool* bDummy);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BPI_PlayerMaterialInterface_C">();
	}
	static class IBPI_PlayerMaterialInterface_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<IBPI_PlayerMaterialInterface_C>();
	}
};
static_assert(alignof(IBPI_PlayerMaterialInterface_C) == 0x000008, "Wrong alignment on IBPI_PlayerMaterialInterface_C");
static_assert(sizeof(IBPI_PlayerMaterialInterface_C) == 0x000028, "Wrong size on IBPI_PlayerMaterialInterface_C");

}

