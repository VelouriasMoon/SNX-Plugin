#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PsychicObjectManager

#include "Basic.hpp"

#include "PsychicObjectManager_classes.hpp"
#include "PsychicObjectManager_parameters.hpp"


namespace SDK
{

// Function PsychicObjectManager.PsychicObjectManager_C.UniqueInputEnd__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void APsychicObjectManager_C::UniqueInputEnd__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "UniqueInputEnd__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PsychicObjectManager.PsychicObjectManager_C.EnemyInterceptableThrow__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Psy_obj_actor_in                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Target_actor_in                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APsychicObjectManager_C::EnemyInterceptableThrow__DelegateSignature(class AActor* Psy_obj_actor_in, class AActor* Target_actor_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "EnemyInterceptableThrow__DelegateSignature");

	Params::PsychicObjectManager_C_EnemyInterceptableThrow__DelegateSignature Parms{};

	Parms.Psy_obj_actor_in = Psy_obj_actor_in;
	Parms.Target_actor_in = Target_actor_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PsychicObjectManager.PsychicObjectManager_C.ExecuteUbergraph_PsychicObjectManager
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APsychicObjectManager_C::ExecuteUbergraph_PsychicObjectManager(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "ExecuteUbergraph_PsychicObjectManager");

	Params::PsychicObjectManager_C_ExecuteUbergraph_PsychicObjectManager Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PsychicObjectManager.PsychicObjectManager_C.OnFinishedPsychicBattle
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EPsychicBattleType                      PsychicBattleType                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APsychicObjectManager_C::OnFinishedPsychicBattle(EPsychicBattleType PsychicBattleType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "OnFinishedPsychicBattle");

	Params::PsychicObjectManager_C_OnFinishedPsychicBattle Parms{};

	Parms.PsychicBattleType = PsychicBattleType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PsychicObjectManager.PsychicObjectManager_C.OnStartPsychicBattle
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EPsychicBattleType                      PsychicBattleType                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APsychicObjectManager_C::OnStartPsychicBattle(EPsychicBattleType PsychicBattleType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "OnStartPsychicBattle");

	Params::PsychicObjectManager_C_OnStartPsychicBattle Parms{};

	Parms.PsychicBattleType = PsychicBattleType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PsychicObjectManager.PsychicObjectManager_C.DelayBeginPlay
// (Event, Public, BlueprintCallable, BlueprintEvent)

void APsychicObjectManager_C::DelayBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "DelayBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PsychicObjectManager.PsychicObjectManager_C.ReceiveEndPlay
// (Event, Protected, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APsychicObjectManager_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "ReceiveEndPlay");

	Params::PsychicObjectManager_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PsychicObjectManager.PsychicObjectManager_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void APsychicObjectManager_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PsychicObjectManager.PsychicObjectManager_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APsychicObjectManager_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "ReceiveTick");

	Params::PsychicObjectManager_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PsychicObjectManager.PsychicObjectManager_C.PB_BGActorsVisible
// (BlueprintCallable, BlueprintEvent)

void APsychicObjectManager_C::PB_BGActorsVisible()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "PB_BGActorsVisible");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PsychicObjectManager.PsychicObjectManager_C.PB_ChangePoleBreak
// (BlueprintCallable, BlueprintEvent)

void APsychicObjectManager_C::PB_ChangePoleBreak()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "PB_ChangePoleBreak");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PsychicObjectManager.PsychicObjectManager_C.PB_EmitPoleParticle
// (BlueprintCallable, BlueprintEvent)

void APsychicObjectManager_C::PB_EmitPoleParticle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "PB_EmitPoleParticle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PsychicObjectManager.PsychicObjectManager_C.PB_BattleAnimation
// (BlueprintCallable, BlueprintEvent)

void APsychicObjectManager_C::PB_BattleAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "PB_BattleAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PsychicObjectManager.PsychicObjectManager_C.PB_DamagePlayer
// (BlueprintCallable, BlueprintEvent)

void APsychicObjectManager_C::PB_DamagePlayer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "PB_DamagePlayer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PsychicObjectManager.PsychicObjectManager_C.PB_DamageEnemy
// (BlueprintCallable, BlueprintEvent)

void APsychicObjectManager_C::PB_DamageEnemy()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "PB_DamageEnemy");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PsychicObjectManager.PsychicObjectManager_C.PB_StartInputEnemy
// (BlueprintCallable, BlueprintEvent)

void APsychicObjectManager_C::PB_StartInputEnemy()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "PB_StartInputEnemy");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PsychicObjectManager.PsychicObjectManager_C.PB_StartInputPlayer
// (BlueprintCallable, BlueprintEvent)

void APsychicObjectManager_C::PB_StartInputPlayer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "PB_StartInputPlayer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PsychicObjectManager.PsychicObjectManager_C.PB_StartBattle
// (BlueprintCallable, BlueprintEvent)

void APsychicObjectManager_C::PB_StartBattle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "PB_StartBattle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PsychicObjectManager.PsychicObjectManager_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void APsychicObjectManager_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PsychicObjectManager.PsychicObjectManager_C.AddPsychicObjectInfo
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Object                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APsychicObjectManager_C::AddPsychicObjectInfo(class AActor* Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "AddPsychicObjectInfo");

	Params::PsychicObjectManager_C_AddPsychicObjectInfo Parms{};

	Parms.Object = Object;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PsychicObjectManager.PsychicObjectManager_C.InitializeBrainField
// (Public, BlueprintCallable, BlueprintEvent)

void APsychicObjectManager_C::InitializeBrainField()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "InitializeBrainField");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PsychicObjectManager.PsychicObjectManager_C.UpdateBrainField
// (Public, BlueprintCallable, BlueprintEvent)

void APsychicObjectManager_C::UpdateBrainField()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "UpdateBrainField");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PsychicObjectManager.PsychicObjectManager_C.FinalizeBrainField
// (Public, BlueprintCallable, BlueprintEvent)

void APsychicObjectManager_C::FinalizeBrainField()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "FinalizeBrainField");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PsychicObjectManager.PsychicObjectManager_C.DebugPrintPsyObjSpawnList
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void APsychicObjectManager_C::DebugPrintPsyObjSpawnList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "DebugPrintPsyObjSpawnList");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PsychicObjectManager.PsychicObjectManager_C.calcSpawnWorldTransformOld
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FTransform                       Local_transform_in                                     (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// int32                                   Tile_no_in                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RotAngle_in                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FTransform                       World_transform_out                                    (Parm, OutParm, IsPlainOldData, NoDestructor)

void APsychicObjectManager_C::CalcSpawnWorldTransformOld(const struct FTransform& Local_transform_in, int32 Tile_no_in, float RotAngle_in, struct FTransform* World_transform_out)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "calcSpawnWorldTransformOld");

	Params::PsychicObjectManager_C_CalcSpawnWorldTransformOld Parms{};

	Parms.Local_transform_in = std::move(Local_transform_in);
	Parms.Tile_no_in = Tile_no_in;
	Parms.RotAngle_in = RotAngle_in;

	UObject::ProcessEvent(Func, &Parms);

	if (World_transform_out != nullptr)
		*World_transform_out = std::move(Parms.World_transform_out);
}


// Function PsychicObjectManager.PsychicObjectManager_C.convGroupToRowNameOld
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Group_in                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Index_in                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   RowName_in                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Row_name_out                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Group_out                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Index_out                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APsychicObjectManager_C::ConvGroupToRowNameOld(int32 Group_in, int32 Index_in, int32 RowName_in, int32* Row_name_out, int32* Group_out, int32* Index_out)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "convGroupToRowNameOld");

	Params::PsychicObjectManager_C_ConvGroupToRowNameOld Parms{};

	Parms.Group_in = Group_in;
	Parms.Index_in = Index_in;
	Parms.RowName_in = RowName_in;

	UObject::ProcessEvent(Func, &Parms);

	if (Row_name_out != nullptr)
		*Row_name_out = Parms.Row_name_out;

	if (Group_out != nullptr)
		*Group_out = Parms.Group_out;

	if (Index_out != nullptr)
		*Index_out = Parms.Index_out;
}


// Function PsychicObjectManager.PsychicObjectManager_C.UpdateBrainFieldAfterOld
// (Public, BlueprintCallable, BlueprintEvent)

void APsychicObjectManager_C::UpdateBrainFieldAfterOld()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "UpdateBrainFieldAfterOld");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PsychicObjectManager.PsychicObjectManager_C.UpdateEmission
// (Public, BlueprintCallable, BlueprintEvent)

void APsychicObjectManager_C::UpdateEmission()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "UpdateEmission");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PsychicObjectManager.PsychicObjectManager_C.SetEmission
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void APsychicObjectManager_C::SetEmission(bool Flag_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "SetEmission");

	Params::PsychicObjectManager_C_SetEmission Parms{};

	Parms.Flag_in = Flag_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PsychicObjectManager.PsychicObjectManager_C.SetMainPlayer
// (Public, BlueprintCallable, BlueprintEvent)

void APsychicObjectManager_C::SetMainPlayer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "SetMainPlayer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PsychicObjectManager.PsychicObjectManager_C.GetSparePsyObjOld
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPsychicGrabButtonType                  button_type_in                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ABP_PsychicObjectBasic_C*         Psy_obj_out                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APsychicObjectManager_C::GetSparePsyObjOld(EPsychicGrabButtonType button_type_in, class ABP_PsychicObjectBasic_C** Psy_obj_out)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "GetSparePsyObjOld");

	Params::PsychicObjectManager_C_GetSparePsyObjOld Parms{};

	Parms.button_type_in = button_type_in;

	UObject::ProcessEvent(Func, &Parms);

	if (Psy_obj_out != nullptr)
		*Psy_obj_out = Parms.Psy_obj_out;
}


// Function PsychicObjectManager.PsychicObjectManager_C.SpawnSparePsyObjOld
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPsychicGrabButtonType                  button_type_in                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Index_in                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void APsychicObjectManager_C::SpawnSparePsyObjOld(EPsychicGrabButtonType button_type_in, int32 Index_in, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "SpawnSparePsyObjOld");

	Params::PsychicObjectManager_C_SpawnSparePsyObjOld Parms{};

	Parms.button_type_in = button_type_in;
	Parms.Index_in = Index_in;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function PsychicObjectManager.PsychicObjectManager_C.DebugPrintSpareData
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void APsychicObjectManager_C::DebugPrintSpareData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "DebugPrintSpareData");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PsychicObjectManager.PsychicObjectManager_C.IsSparePsyObjReadyOld
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void APsychicObjectManager_C::IsSparePsyObjReadyOld(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "IsSparePsyObjReadyOld");

	Params::PsychicObjectManager_C_IsSparePsyObjReadyOld Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function PsychicObjectManager.PsychicObjectManager_C.ClearPsychicObjectInfoAll
// (Public, BlueprintCallable, BlueprintEvent)

void APsychicObjectManager_C::ClearPsychicObjectInfoAll()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "ClearPsychicObjectInfoAll");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PsychicObjectManager.PsychicObjectManager_C.AreaChangeRestorePsychicObject
// (Public, BlueprintCallable, BlueprintEvent)

void APsychicObjectManager_C::AreaChangeRestorePsychicObject()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "AreaChangeRestorePsychicObject");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PsychicObjectManager.PsychicObjectManager_C.AreaChangeStartPsychicObject
// (Public, BlueprintCallable, BlueprintEvent)

void APsychicObjectManager_C::AreaChangeStartPsychicObject()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "AreaChangeStartPsychicObject");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PsychicObjectManager.PsychicObjectManager_C.DebugDispSpareList
// (Public, BlueprintCallable, BlueprintEvent)

void APsychicObjectManager_C::DebugDispSpareList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "DebugDispSpareList");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PsychicObjectManager.PsychicObjectManager_C.GetPsychicCaptureMaterialParameter
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_SASKind                               Sas_kind_in                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FSPsychicCaptureMaterial         Material_param                                         (Parm, OutParm, HasGetValueTypeHash)

void APsychicObjectManager_C::GetPsychicCaptureMaterialParameter(E_SASKind Sas_kind_in, struct FSPsychicCaptureMaterial* Material_param)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "GetPsychicCaptureMaterialParameter");

	Params::PsychicObjectManager_C_GetPsychicCaptureMaterialParameter Parms{};

	Parms.Sas_kind_in = Sas_kind_in;

	UObject::ProcessEvent(Func, &Parms);

	if (Material_param != nullptr)
		*Material_param = std::move(Parms.Material_param);
}


// Function PsychicObjectManager.PsychicObjectManager_C.GetUserParamTransferObject
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// EConsumeItemID                          Item_id_in                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// PsychicObjectID::EPsychicObjectID       Psy_obj_id                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APsychicObjectManager_C::GetUserParamTransferObject(EConsumeItemID Item_id_in, PsychicObjectID::EPsychicObjectID* Psy_obj_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "GetUserParamTransferObject");

	Params::PsychicObjectManager_C_GetUserParamTransferObject Parms{};

	Parms.Item_id_in = Item_id_in;

	UObject::ProcessEvent(Func, &Parms);

	if (Psy_obj_id != nullptr)
		*Psy_obj_id = Parms.Psy_obj_id;
}


// Function PsychicObjectManager.PsychicObjectManager_C.InitTransferObject
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void APsychicObjectManager_C::InitTransferObject()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "InitTransferObject");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PsychicObjectManager.PsychicObjectManager_C.ClearTransferObject
// (Public, BlueprintCallable, BlueprintEvent)

void APsychicObjectManager_C::ClearTransferObject()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "ClearTransferObject");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PsychicObjectManager.PsychicObjectManager_C.UseTransferObject
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// EConsumeItemID                          Item_id_in                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APsychicObjectManager_C::UseTransferObject(EConsumeItemID Item_id_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "UseTransferObject");

	Params::PsychicObjectManager_C_UseTransferObject Parms{};

	Parms.Item_id_in = Item_id_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PsychicObjectManager.PsychicObjectManager_C.convTransferItemIDToIndex
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EConsumeItemID                          Item_id_in                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Param_Index                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APsychicObjectManager_C::ConvTransferItemIDToIndex(EConsumeItemID Item_id_in, int32* Param_Index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "convTransferItemIDToIndex");

	Params::PsychicObjectManager_C_ConvTransferItemIDToIndex Parms{};

	Parms.Item_id_in = Item_id_in;

	UObject::ProcessEvent(Func, &Parms);

	if (Param_Index != nullptr)
		*Param_Index = Parms.Param_Index;
}


// Function PsychicObjectManager.PsychicObjectManager_C.convTempIDToPsyObjID
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Temp_id_in                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// PsychicObjectID::EPsychicObjectID       Psy_obj_id_in                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// PsychicObjectID::EPsychicObjectID       Psy_obj_id_out                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Temp_id_out                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APsychicObjectManager_C::ConvTempIDToPsyObjID(int32 Temp_id_in, PsychicObjectID::EPsychicObjectID Psy_obj_id_in, PsychicObjectID::EPsychicObjectID* Psy_obj_id_out, int32* Temp_id_out)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "convTempIDToPsyObjID");

	Params::PsychicObjectManager_C_ConvTempIDToPsyObjID Parms{};

	Parms.Temp_id_in = Temp_id_in;
	Parms.Psy_obj_id_in = Psy_obj_id_in;

	UObject::ProcessEvent(Func, &Parms);

	if (Psy_obj_id_out != nullptr)
		*Psy_obj_id_out = Parms.Psy_obj_id_out;

	if (Temp_id_out != nullptr)
		*Temp_id_out = Parms.Temp_id_out;
}


// Function PsychicObjectManager.PsychicObjectManager_C.convPsyObjIDtoSoftClass
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// PsychicObjectID::EPsychicObjectID       Psy_obj_id_in                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TSoftClassPtr<class UClass>             Psy_obj_soft_class                                     (Parm, OutParm, HasGetValueTypeHash)

void APsychicObjectManager_C::ConvPsyObjIDtoSoftClass(PsychicObjectID::EPsychicObjectID Psy_obj_id_in, TSoftClassPtr<class UClass>* Psy_obj_soft_class)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "convPsyObjIDtoSoftClass");

	Params::PsychicObjectManager_C_ConvPsyObjIDtoSoftClass Parms{};

	Parms.Psy_obj_id_in = Psy_obj_id_in;

	UObject::ProcessEvent(Func, &Parms);

	if (Psy_obj_soft_class != nullptr)
		*Psy_obj_soft_class = Parms.Psy_obj_soft_class;
}


// Function PsychicObjectManager.PsychicObjectManager_C.convTransferItemIDToName
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EConsumeItemID                          Item_id_in                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             Item_name                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APsychicObjectManager_C::ConvTransferItemIDToName(EConsumeItemID Item_id_in, class FName* Item_name)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "convTransferItemIDToName");

	Params::PsychicObjectManager_C_ConvTransferItemIDToName Parms{};

	Parms.Item_id_in = Item_id_in;

	UObject::ProcessEvent(Func, &Parms);

	if (Item_name != nullptr)
		*Item_name = Parms.Item_name;
}


// Function PsychicObjectManager.PsychicObjectManager_C.DebugDispTransferObject
// (Public, BlueprintCallable, BlueprintEvent)

void APsychicObjectManager_C::DebugDispTransferObject()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "DebugDispTransferObject");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PsychicObjectManager.PsychicObjectManager_C.CreatePsychicCluster
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_PsychicObjectBasic_C*         Psychic_object_in                                      (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class ABP_PsychicObjectBasic_C*> Cluster_list                                           (Parm, OutParm, HasGetValueTypeHash)

void APsychicObjectManager_C::CreatePsychicCluster(class ABP_PsychicObjectBasic_C*& Psychic_object_in, TArray<class ABP_PsychicObjectBasic_C*>* Cluster_list)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "CreatePsychicCluster");

	Params::PsychicObjectManager_C_CreatePsychicCluster Parms{};

	Parms.Psychic_object_in = Psychic_object_in;

	UObject::ProcessEvent(Func, &Parms);

	Psychic_object_in = Parms.Psychic_object_in;

	if (Cluster_list != nullptr)
		*Cluster_list = std::move(Parms.Cluster_list);
}


// Function PsychicObjectManager.PsychicObjectManager_C.CreateEnemyPsychicObject
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ARSBattleCharacter_C*             Enemy_owner_in                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<TSoftClassPtr<class UClass>>     Object_list_in                                         (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// class FName                             List_name                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Drop_type_in                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void APsychicObjectManager_C::CreateEnemyPsychicObject(class ARSBattleCharacter_C* Enemy_owner_in, TArray<TSoftClassPtr<class UClass>>& Object_list_in, class FName List_name, bool Drop_type_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "CreateEnemyPsychicObject");

	Params::PsychicObjectManager_C_CreateEnemyPsychicObject Parms{};

	Parms.Enemy_owner_in = Enemy_owner_in;
	Parms.Object_list_in = std::move(Object_list_in);
	Parms.List_name = List_name;
	Parms.Drop_type_in = Drop_type_in;

	UObject::ProcessEvent(Func, &Parms);

	Object_list_in = std::move(Parms.Object_list_in);
}


// Function PsychicObjectManager.PsychicObjectManager_C.GetEnemyPsychicObject
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ARSBattleCharacter_C*             Owner_in                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             List_name                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Random_obj                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// E_SASKind                               Sas_kind_in                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ABP_PsychicObjectBasic_C*         Em_psy_obj                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APsychicObjectManager_C::GetEnemyPsychicObject(class ARSBattleCharacter_C* Owner_in, class FName List_name, bool Random_obj, E_SASKind Sas_kind_in, class ABP_PsychicObjectBasic_C** Em_psy_obj)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "GetEnemyPsychicObject");

	Params::PsychicObjectManager_C_GetEnemyPsychicObject Parms{};

	Parms.Owner_in = Owner_in;
	Parms.List_name = List_name;
	Parms.Random_obj = Random_obj;
	Parms.Sas_kind_in = Sas_kind_in;

	UObject::ProcessEvent(Func, &Parms);

	if (Em_psy_obj != nullptr)
		*Em_psy_obj = Parms.Em_psy_obj;
}


// Function PsychicObjectManager.PsychicObjectManager_C.DestroyEnemyPsychicObject
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ARSBattleCharacter_C*             Em_owner_in                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             List_name                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APsychicObjectManager_C::DestroyEnemyPsychicObject(class ARSBattleCharacter_C* Em_owner_in, class FName List_name)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "DestroyEnemyPsychicObject");

	Params::PsychicObjectManager_C_DestroyEnemyPsychicObject Parms{};

	Parms.Em_owner_in = Em_owner_in;
	Parms.List_name = List_name;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PsychicObjectManager.PsychicObjectManager_C.UpdateEnemyPsychicObject
// (Public, BlueprintCallable, BlueprintEvent)

void APsychicObjectManager_C::UpdateEnemyPsychicObject()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "UpdateEnemyPsychicObject");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PsychicObjectManager.PsychicObjectManager_C.DebugDisplayEnemyPsychicObject
// (Public, BlueprintCallable, BlueprintEvent)

void APsychicObjectManager_C::DebugDisplayEnemyPsychicObject()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "DebugDisplayEnemyPsychicObject");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PsychicObjectManager.PsychicObjectManager_C.DebugStartTestLevelSequence
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ARSBattleCharacter_C*             Enemy_in                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APsychicObjectManager_C::DebugStartTestLevelSequence(class ARSBattleCharacter_C* Enemy_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "DebugStartTestLevelSequence");

	Params::PsychicObjectManager_C_DebugStartTestLevelSequence Parms{};

	Parms.Enemy_in = Enemy_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PsychicObjectManager.PsychicObjectManager_C.DebugUpdateTestLevelSequence
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void APsychicObjectManager_C::DebugUpdateTestLevelSequence()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "DebugUpdateTestLevelSequence");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PsychicObjectManager.PsychicObjectManager_C.LoadDataTable
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void APsychicObjectManager_C::LoadDataTable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "LoadDataTable");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PsychicObjectManager.PsychicObjectManager_C.SetPsychicObjectParameter
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_PsychicObjectBasic_C*         Psy_obj_in                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APsychicObjectManager_C::SetPsychicObjectParameter(class ABP_PsychicObjectBasic_C* Psy_obj_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "SetPsychicObjectParameter");

	Params::PsychicObjectManager_C_SetPsychicObjectParameter Parms{};

	Parms.Psy_obj_in = Psy_obj_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PsychicObjectManager.PsychicObjectManager_C.GetGrabMovementData
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPsychicGrabMovementData         Grab_movement_data                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APsychicObjectManager_C::GetGrabMovementData(struct FPsychicGrabMovementData* Grab_movement_data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "GetGrabMovementData");

	Params::PsychicObjectManager_C_GetGrabMovementData Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Grab_movement_data != nullptr)
		*Grab_movement_data = std::move(Parms.Grab_movement_data);
}


// Function PsychicObjectManager.PsychicObjectManager_C.GetGrabMovementSizeData
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPsychicObjectSizeType                  Obj_size_in                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FPsychicGrabMovementSizeData     Grab_movement_size_data                                (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APsychicObjectManager_C::GetGrabMovementSizeData(EPsychicObjectSizeType Obj_size_in, struct FPsychicGrabMovementSizeData* Grab_movement_size_data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "GetGrabMovementSizeData");

	Params::PsychicObjectManager_C_GetGrabMovementSizeData Parms{};

	Parms.Obj_size_in = Obj_size_in;

	UObject::ProcessEvent(Func, &Parms);

	if (Grab_movement_size_data != nullptr)
		*Grab_movement_size_data = std::move(Parms.Grab_movement_size_data);
}


// Function PsychicObjectManager.PsychicObjectManager_C.GetGrabParameterData
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPsychicGrabParameterData        Grab_parameter_data                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APsychicObjectManager_C::GetGrabParameterData(struct FPsychicGrabParameterData* Grab_parameter_data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "GetGrabParameterData");

	Params::PsychicObjectManager_C_GetGrabParameterData Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Grab_parameter_data != nullptr)
		*Grab_parameter_data = std::move(Parms.Grab_parameter_data);
}


// Function PsychicObjectManager.PsychicObjectManager_C.GetGrabParameterSizeData
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPsychicObjectSizeType                  Obj_size_in                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FPsychicGrabParameterSizeData    Grab_parameter_size_data                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APsychicObjectManager_C::GetGrabParameterSizeData(EPsychicObjectSizeType Obj_size_in, struct FPsychicGrabParameterSizeData* Grab_parameter_size_data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "GetGrabParameterSizeData");

	Params::PsychicObjectManager_C_GetGrabParameterSizeData Parms{};

	Parms.Obj_size_in = Obj_size_in;

	UObject::ProcessEvent(Func, &Parms);

	if (Grab_parameter_size_data != nullptr)
		*Grab_parameter_size_data = std::move(Parms.Grab_parameter_size_data);
}


// Function PsychicObjectManager.PsychicObjectManager_C.GetGrabPosData
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Grab_index_in                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FPsychicGrabPosData              Grab_pos_data                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APsychicObjectManager_C::GetGrabPosData(int32 Grab_index_in, struct FPsychicGrabPosData* Grab_pos_data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "GetGrabPosData");

	Params::PsychicObjectManager_C_GetGrabPosData Parms{};

	Parms.Grab_index_in = Grab_index_in;

	UObject::ProcessEvent(Func, &Parms);

	if (Grab_pos_data != nullptr)
		*Grab_pos_data = std::move(Parms.Grab_pos_data);
}


// Function PsychicObjectManager.PsychicObjectManager_C.GetAttackParameter
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_PsychicObjectBasic_C*         Psy_obj_in                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHCCollisionCommonInfo           Common_info                                            (Parm, OutParm)
// struct FHCSkillCommonInfo               Skill_info                                             (Parm, OutParm)

void APsychicObjectManager_C::GetAttackParameter(class ABP_PsychicObjectBasic_C* Psy_obj_in, struct FHCCollisionCommonInfo* Common_info, struct FHCSkillCommonInfo* Skill_info)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "GetAttackParameter");

	Params::PsychicObjectManager_C_GetAttackParameter Parms{};

	Parms.Psy_obj_in = Psy_obj_in;

	UObject::ProcessEvent(Func, &Parms);

	if (Common_info != nullptr)
		*Common_info = std::move(Parms.Common_info);

	if (Skill_info != nullptr)
		*Skill_info = std::move(Parms.Skill_info);
}


// Function PsychicObjectManager.PsychicObjectManager_C.SetPsychicObjectTickRadius
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Radius_in                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APsychicObjectManager_C::SetPsychicObjectTickRadius(float Radius_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "SetPsychicObjectTickRadius");

	Params::PsychicObjectManager_C_SetPsychicObjectTickRadius Parms{};

	Parms.Radius_in = Radius_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PsychicObjectManager.PsychicObjectManager_C.SetPsyObjRespawn
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_PsychicObjectBasic_C*         Psy_obj_in                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APsychicObjectManager_C::SetPsyObjRespawn(class ABP_PsychicObjectBasic_C* Psy_obj_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "SetPsyObjRespawn");

	Params::PsychicObjectManager_C_SetPsyObjRespawn Parms{};

	Parms.Psy_obj_in = Psy_obj_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PsychicObjectManager.PsychicObjectManager_C.UpdatePsyObjRespawn
// (Public, BlueprintCallable, BlueprintEvent)

void APsychicObjectManager_C::UpdatePsyObjRespawn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "UpdatePsyObjRespawn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PsychicObjectManager.PsychicObjectManager_C.DebugDispPsyObjRespawn
// (Public, BlueprintCallable, BlueprintEvent)

void APsychicObjectManager_C::DebugDispPsyObjRespawn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "DebugDispPsyObjRespawn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PsychicObjectManager.PsychicObjectManager_C.CreatePsychicBullet
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// BattlePrototype::EPsychicObjectID       Psy_obj_id_in                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ABP_PsychicObjectBasic_C*         Psy_obj_in                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   bul_magazine                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   bul_max                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APsychicObjectManager_C::CreatePsychicBullet(BattlePrototype::EPsychicObjectID Psy_obj_id_in, class ABP_PsychicObjectBasic_C* Psy_obj_in, int32 bul_magazine, int32 bul_max)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "CreatePsychicBullet");

	Params::PsychicObjectManager_C_CreatePsychicBullet Parms{};

	Parms.Psy_obj_id_in = Psy_obj_id_in;
	Parms.Psy_obj_in = Psy_obj_in;
	Parms.bul_magazine = bul_magazine;
	Parms.bul_max = bul_max;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PsychicObjectManager.PsychicObjectManager_C.UpdatePsychicBullet
// (Public, BlueprintCallable, BlueprintEvent)

void APsychicObjectManager_C::UpdatePsychicBullet()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "UpdatePsychicBullet");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PsychicObjectManager.PsychicObjectManager_C.GetPsychicBullet
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// BattlePrototype::EPsychicObjectID       Psy_obj_id_in                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ABP_PsychicObjectBasic_C*         Parent_obj_in                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ABP_PsychicObjectBasic_C*         Psy_bullet                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APsychicObjectManager_C::GetPsychicBullet(BattlePrototype::EPsychicObjectID Psy_obj_id_in, class ABP_PsychicObjectBasic_C* Parent_obj_in, class ABP_PsychicObjectBasic_C** Psy_bullet)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "GetPsychicBullet");

	Params::PsychicObjectManager_C_GetPsychicBullet Parms{};

	Parms.Psy_obj_id_in = Psy_obj_id_in;
	Parms.Parent_obj_in = Parent_obj_in;

	UObject::ProcessEvent(Func, &Parms);

	if (Psy_bullet != nullptr)
		*Psy_bullet = Parms.Psy_bullet;
}


// Function PsychicObjectManager.PsychicObjectManager_C.ResetPsychicBullet
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_PsychicObjectBasic_C*         Psy_bullet_in                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APsychicObjectManager_C::ResetPsychicBullet(class ABP_PsychicObjectBasic_C* Psy_bullet_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "ResetPsychicBullet");

	Params::PsychicObjectManager_C_ResetPsychicBullet Parms{};

	Parms.Psy_bullet_in = Psy_bullet_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PsychicObjectManager.PsychicObjectManager_C.DebugDispPsychicBullet
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void APsychicObjectManager_C::DebugDispPsychicBullet()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "DebugDispPsychicBullet");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PsychicObjectManager.PsychicObjectManager_C.SetPsychicObjectHidden
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void APsychicObjectManager_C::SetPsychicObjectHidden(bool Flag_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "SetPsychicObjectHidden");

	Params::PsychicObjectManager_C_SetPsychicObjectHidden Parms{};

	Parms.Flag_in = Flag_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PsychicObjectManager.PsychicObjectManager_C.UpdateFocusPsychicObject
// (Public, BlueprintCallable, BlueprintEvent)

void APsychicObjectManager_C::UpdateFocusPsychicObject()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "UpdateFocusPsychicObject");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PsychicObjectManager.PsychicObjectManager_C.CaptureFocusObject
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ARsBattleHero_C*                  Capture_owner_in                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Unique_obj_in                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Combo_in                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Npc_in                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Enemy_in                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Air_in                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void APsychicObjectManager_C::CaptureFocusObject(class ARsBattleHero_C* Capture_owner_in, bool Unique_obj_in, bool Combo_in, bool Npc_in, bool Enemy_in, bool Air_in, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "CaptureFocusObject");

	Params::PsychicObjectManager_C_CaptureFocusObject Parms{};

	Parms.Capture_owner_in = Capture_owner_in;
	Parms.Unique_obj_in = Unique_obj_in;
	Parms.Combo_in = Combo_in;
	Parms.Npc_in = Npc_in;
	Parms.Enemy_in = Enemy_in;
	Parms.Air_in = Air_in;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function PsychicObjectManager.PsychicObjectManager_C.AttackCaptureObject
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_PsychicObjectBasic_C*         Psy_obj_in                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Target_actor_in                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Direct_drop_in                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Npc_in                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Enemy_in                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   Copy_count_in                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class ABP_PsychicObjectBasic_C*         Unique_object                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APsychicObjectManager_C::AttackCaptureObject(class ABP_PsychicObjectBasic_C* Psy_obj_in, class AActor* Target_actor_in, bool Direct_drop_in, bool Npc_in, bool Enemy_in, int32 Copy_count_in, bool* Return, class ABP_PsychicObjectBasic_C** Unique_object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "AttackCaptureObject");

	Params::PsychicObjectManager_C_AttackCaptureObject Parms{};

	Parms.Psy_obj_in = Psy_obj_in;
	Parms.Target_actor_in = Target_actor_in;
	Parms.Direct_drop_in = Direct_drop_in;
	Parms.Npc_in = Npc_in;
	Parms.Enemy_in = Enemy_in;
	Parms.Copy_count_in = Copy_count_in;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;

	if (Unique_object != nullptr)
		*Unique_object = Parms.Unique_object;
}


// Function PsychicObjectManager.PsychicObjectManager_C.CancelCaptureObject
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Npc_in                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Enemy_in                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void APsychicObjectManager_C::CancelCaptureObject(bool Npc_in, bool Enemy_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "CancelCaptureObject");

	Params::PsychicObjectManager_C_CancelCaptureObject Parms{};

	Parms.Npc_in = Npc_in;
	Parms.Enemy_in = Enemy_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PsychicObjectManager.PsychicObjectManager_C.AttackComboCaptureObject
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Target_actor_in                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Attack_level_in                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Attack_index_in                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Attract_time_in                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UAnimSequence*                    Anim_seq_in                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Air_combo_in                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Enemy_direct_shot_in                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Npc_in                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Enemy_in                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   Copy_count_in                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class ABP_PsychicObjectBasic_C*         Combo_obj                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APsychicObjectManager_C::AttackComboCaptureObject(class AActor* Target_actor_in, int32 Attack_level_in, int32 Attack_index_in, float Attract_time_in, class UAnimSequence* Anim_seq_in, bool Air_combo_in, bool Enemy_direct_shot_in, bool Npc_in, bool Enemy_in, int32 Copy_count_in, bool* Return, class ABP_PsychicObjectBasic_C** Combo_obj)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "AttackComboCaptureObject");

	Params::PsychicObjectManager_C_AttackComboCaptureObject Parms{};

	Parms.Target_actor_in = Target_actor_in;
	Parms.Attack_level_in = Attack_level_in;
	Parms.Attack_index_in = Attack_index_in;
	Parms.Attract_time_in = Attract_time_in;
	Parms.Anim_seq_in = Anim_seq_in;
	Parms.Air_combo_in = Air_combo_in;
	Parms.Enemy_direct_shot_in = Enemy_direct_shot_in;
	Parms.Npc_in = Npc_in;
	Parms.Enemy_in = Enemy_in;
	Parms.Copy_count_in = Copy_count_in;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;

	if (Combo_obj != nullptr)
		*Combo_obj = Parms.Combo_obj;
}


// Function PsychicObjectManager.PsychicObjectManager_C.CreateAnimObject
// (Public, BlueprintCallable, BlueprintEvent)

void APsychicObjectManager_C::CreateAnimObject()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "CreateAnimObject");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PsychicObjectManager.PsychicObjectManager_C.UpdateAnimObject
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void APsychicObjectManager_C::UpdateAnimObject()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "UpdateAnimObject");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PsychicObjectManager.PsychicObjectManager_C.GetAnimObject
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APsychicAnimObject_C*             Anim_obj                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APsychicObjectManager_C::GetAnimObject(class APsychicAnimObject_C** Anim_obj)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "GetAnimObject");

	Params::PsychicObjectManager_C_GetAnimObject Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Anim_obj != nullptr)
		*Anim_obj = Parms.Anim_obj;
}


// Function PsychicObjectManager.PsychicObjectManager_C.DeleteAnimObject
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APsychicAnimObject_C*             Anim_obj_in                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APsychicObjectManager_C::DeleteAnimObject(class APsychicAnimObject_C* Anim_obj_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "DeleteAnimObject");

	Params::PsychicObjectManager_C_DeleteAnimObject Parms{};

	Parms.Anim_obj_in = Anim_obj_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PsychicObjectManager.PsychicObjectManager_C.ClearAnimObjectList
// (Public, BlueprintCallable, BlueprintEvent)

void APsychicObjectManager_C::ClearAnimObjectList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "ClearAnimObjectList");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PsychicObjectManager.PsychicObjectManager_C.GetUniqueObjectMontageOld
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_PsychicObjectBasic_C*         Psy_obj_in                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EPsychicObjectUniqueMontageIndex        Montage_index_in                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Left_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void APsychicObjectManager_C::GetUniqueObjectMontageOld(class ABP_PsychicObjectBasic_C* Psy_obj_in, EPsychicObjectUniqueMontageIndex Montage_index_in, bool Left_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "GetUniqueObjectMontageOld");

	Params::PsychicObjectManager_C_GetUniqueObjectMontageOld Parms{};

	Parms.Psy_obj_in = Psy_obj_in;
	Parms.Montage_index_in = Montage_index_in;
	Parms.Left_in = Left_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PsychicObjectManager.PsychicObjectManager_C.DebugDrawEaseCurve
// (Public, BlueprintCallable, BlueprintEvent)

void APsychicObjectManager_C::DebugDrawEaseCurve()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "DebugDrawEaseCurve");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PsychicObjectManager.PsychicObjectManager_C.GetElectricPoleDataTable
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FUniqueObjectElectricPoleEffectParameter>Param_ElectricPoleEffectList                           (Parm, OutParm, HasGetValueTypeHash)

void APsychicObjectManager_C::GetElectricPoleDataTable(TArray<struct FUniqueObjectElectricPoleEffectParameter>* Param_ElectricPoleEffectList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "GetElectricPoleDataTable");

	Params::PsychicObjectManager_C_GetElectricPoleDataTable Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_ElectricPoleEffectList != nullptr)
		*Param_ElectricPoleEffectList = std::move(Parms.Param_ElectricPoleEffectList);
}


// Function PsychicObjectManager.PsychicObjectManager_C.SetUniqueObjectInput
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void APsychicObjectManager_C::SetUniqueObjectInput(bool Flag_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "SetUniqueObjectInput");

	Params::PsychicObjectManager_C_SetUniqueObjectInput Parms{};

	Parms.Flag_in = Flag_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PsychicObjectManager.PsychicObjectManager_C.IsUniqueObjectInput
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void APsychicObjectManager_C::IsUniqueObjectInput(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "IsUniqueObjectInput");

	Params::PsychicObjectManager_C_IsUniqueObjectInput Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function PsychicObjectManager.PsychicObjectManager_C.SetUniqueInputObject
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_PsychicObjectBasic_C*         Unq_input_in                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APsychicObjectManager_C::SetUniqueInputObject(class ABP_PsychicObjectBasic_C* Unq_input_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "SetUniqueInputObject");

	Params::PsychicObjectManager_C_SetUniqueInputObject Parms{};

	Parms.Unq_input_in = Unq_input_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PsychicObjectManager.PsychicObjectManager_C.GetAttackObjectOld
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_PsychicObjectBasic_C*         Psy_obj                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APsychicObjectManager_C::GetAttackObjectOld(class ABP_PsychicObjectBasic_C** Psy_obj)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "GetAttackObjectOld");

	Params::PsychicObjectManager_C_GetAttackObjectOld Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Psy_obj != nullptr)
		*Psy_obj = Parms.Psy_obj;
}


// Function PsychicObjectManager.PsychicObjectManager_C.SetFocusSearch
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void APsychicObjectManager_C::SetFocusSearch(bool Flag_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "SetFocusSearch");

	Params::PsychicObjectManager_C_SetFocusSearch Parms{};

	Parms.Flag_in = Flag_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PsychicObjectManager.PsychicObjectManager_C.SetPsyObjDtSound
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_PsychicObjectBasic_C*         Psy_obj_in                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APsychicObjectManager_C::SetPsyObjDtSound(class ABP_PsychicObjectBasic_C* Psy_obj_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "SetPsyObjDtSound");

	Params::PsychicObjectManager_C_SetPsyObjDtSound Parms{};

	Parms.Psy_obj_in = Psy_obj_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PsychicObjectManager.PsychicObjectManager_C.LoadDataTableSound
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   Index_in                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APsychicObjectManager_C::LoadDataTableSound(bool Flag_in, int32 Index_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "LoadDataTableSound");

	Params::PsychicObjectManager_C_LoadDataTableSound Parms{};

	Parms.Flag_in = Flag_in;
	Parms.Index_in = Index_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PsychicObjectManager.PsychicObjectManager_C.SetWeightGaugeEnable
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Player_in                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Unq_obj_in                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class ABP_PsychicObjectBasic_C*         Psy_obj_in                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    AttackFlag                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void APsychicObjectManager_C::SetWeightGaugeEnable(bool Player_in, bool Flag_in, bool Unq_obj_in, class ABP_PsychicObjectBasic_C* Psy_obj_in, bool AttackFlag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "SetWeightGaugeEnable");

	Params::PsychicObjectManager_C_SetWeightGaugeEnable Parms{};

	Parms.Player_in = Player_in;
	Parms.Flag_in = Flag_in;
	Parms.Unq_obj_in = Unq_obj_in;
	Parms.Psy_obj_in = Psy_obj_in;
	Parms.AttackFlag = AttackFlag;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PsychicObjectManager.PsychicObjectManager_C.CanCapture
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Unq_obj_in                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void APsychicObjectManager_C::CanCapture(bool Unq_obj_in, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "CanCapture");

	Params::PsychicObjectManager_C_CanCapture Parms{};

	Parms.Unq_obj_in = Unq_obj_in;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function PsychicObjectManager.PsychicObjectManager_C.SetFocusPause
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class FName                             Tag_name_in                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APsychicObjectManager_C::SetFocusPause(bool Flag_in, class FName Tag_name_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "SetFocusPause");

	Params::PsychicObjectManager_C_SetFocusPause Parms{};

	Parms.Flag_in = Flag_in;
	Parms.Tag_name_in = Tag_name_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PsychicObjectManager.PsychicObjectManager_C.CheckEnemyObject
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bUnqObj                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    ChkCapture                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    ChkAttack                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool APsychicObjectManager_C::CheckEnemyObject(bool bUnqObj, bool ChkCapture, bool ChkAttack)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "CheckEnemyObject");

	Params::PsychicObjectManager_C_CheckEnemyObject Parms{};

	Parms.bUnqObj = bUnqObj;
	Parms.ChkCapture = ChkCapture;
	Parms.ChkAttack = ChkAttack;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PsychicObjectManager.PsychicObjectManager_C.SetInstantRespawn
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void APsychicObjectManager_C::SetInstantRespawn(bool Flag_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "SetInstantRespawn");

	Params::PsychicObjectManager_C_SetInstantRespawn Parms{};

	Parms.Flag_in = Flag_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PsychicObjectManager.PsychicObjectManager_C.SetCopyPsychicObject
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void APsychicObjectManager_C::SetCopyPsychicObject(bool Flag_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "SetCopyPsychicObject");

	Params::PsychicObjectManager_C_SetCopyPsychicObject Parms{};

	Parms.Flag_in = Flag_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PsychicObjectManager.PsychicObjectManager_C.UpdateCopyPsychicObject
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void APsychicObjectManager_C::UpdateCopyPsychicObject()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "UpdateCopyPsychicObject");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PsychicObjectManager.PsychicObjectManager_C.ResetCopyPsychicObject
// (Public, BlueprintCallable, BlueprintEvent)

void APsychicObjectManager_C::ResetCopyPsychicObject()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "ResetCopyPsychicObject");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PsychicObjectManager.PsychicObjectManager_C.SetCopyPsychicObjectPause
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void APsychicObjectManager_C::SetCopyPsychicObjectPause(bool Flag_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "SetCopyPsychicObjectPause");

	Params::PsychicObjectManager_C_SetCopyPsychicObjectPause Parms{};

	Parms.Flag_in = Flag_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PsychicObjectManager.PsychicObjectManager_C.GetCopyPsychicObject
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_PsychicObjectBasic_C*         Parent_obj_in                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ABP_PsychicObjectBasic_C*         Copy_psy_obj_0                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ABP_PsychicObjectBasic_C*         Copy_psy_obj_1                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ABP_PsychicObjectBasic_C*         Copy_psy_obj_2                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ABP_PsychicObjectBasic_C*         Copy_psy_obj_3                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APsychicObjectManager_C::GetCopyPsychicObject(class ABP_PsychicObjectBasic_C* Parent_obj_in, class ABP_PsychicObjectBasic_C** Copy_psy_obj_0, class ABP_PsychicObjectBasic_C** Copy_psy_obj_1, class ABP_PsychicObjectBasic_C** Copy_psy_obj_2, class ABP_PsychicObjectBasic_C** Copy_psy_obj_3)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "GetCopyPsychicObject");

	Params::PsychicObjectManager_C_GetCopyPsychicObject Parms{};

	Parms.Parent_obj_in = Parent_obj_in;

	UObject::ProcessEvent(Func, &Parms);

	if (Copy_psy_obj_0 != nullptr)
		*Copy_psy_obj_0 = Parms.Copy_psy_obj_0;

	if (Copy_psy_obj_1 != nullptr)
		*Copy_psy_obj_1 = Parms.Copy_psy_obj_1;

	if (Copy_psy_obj_2 != nullptr)
		*Copy_psy_obj_2 = Parms.Copy_psy_obj_2;

	if (Copy_psy_obj_3 != nullptr)
		*Copy_psy_obj_3 = Parms.Copy_psy_obj_3;
}


// Function PsychicObjectManager.PsychicObjectManager_C.CopyCaptureObject
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_PsychicObjectBasic_C*         Parent_obj_in                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Copy_count_in                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Direct_drop_in                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Combo_in                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   Comb_level_in                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APsychicObjectManager_C::CopyCaptureObject(class ABP_PsychicObjectBasic_C* Parent_obj_in, int32 Copy_count_in, bool Direct_drop_in, bool Combo_in, int32 Comb_level_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "CopyCaptureObject");

	Params::PsychicObjectManager_C_CopyCaptureObject Parms{};

	Parms.Parent_obj_in = Parent_obj_in;
	Parms.Copy_count_in = Copy_count_in;
	Parms.Direct_drop_in = Direct_drop_in;
	Parms.Combo_in = Combo_in;
	Parms.Comb_level_in = Comb_level_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PsychicObjectManager.PsychicObjectManager_C.GetCopyPsychicObjectPos
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_PsychicObjectBasic_C*         Parent_obj_in                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Copy_index_in                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Copy_obj_pos_0                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Copy_obj_pos_1                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Copy_obj_pos_2                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Copy_obj_pos_3                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APsychicObjectManager_C::GetCopyPsychicObjectPos(class ABP_PsychicObjectBasic_C* Parent_obj_in, int32 Copy_index_in, struct FVector* Copy_obj_pos_0, struct FVector* Copy_obj_pos_1, struct FVector* Copy_obj_pos_2, struct FVector* Copy_obj_pos_3)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "GetCopyPsychicObjectPos");

	Params::PsychicObjectManager_C_GetCopyPsychicObjectPos Parms{};

	Parms.Parent_obj_in = Parent_obj_in;
	Parms.Copy_index_in = Copy_index_in;

	UObject::ProcessEvent(Func, &Parms);

	if (Copy_obj_pos_0 != nullptr)
		*Copy_obj_pos_0 = std::move(Parms.Copy_obj_pos_0);

	if (Copy_obj_pos_1 != nullptr)
		*Copy_obj_pos_1 = std::move(Parms.Copy_obj_pos_1);

	if (Copy_obj_pos_2 != nullptr)
		*Copy_obj_pos_2 = std::move(Parms.Copy_obj_pos_2);

	if (Copy_obj_pos_3 != nullptr)
		*Copy_obj_pos_3 = std::move(Parms.Copy_obj_pos_3);
}


// Function PsychicObjectManager.PsychicObjectManager_C.AttackCopyPsychicObject
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USkeletalMeshComponent*           AnimObjMesh                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APsychicObjectManager_C::AttackCopyPsychicObject(class USkeletalMeshComponent* AnimObjMesh)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "AttackCopyPsychicObject");

	Params::PsychicObjectManager_C_AttackCopyPsychicObject Parms{};

	Parms.AnimObjMesh = AnimObjMesh;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PsychicObjectManager.PsychicObjectManager_C.GetDataTableParamEnemyInfo
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Em_actor_in                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FUniqueObjectContainerEnemyInfo  Data_table                                             (Parm, OutParm, HasGetValueTypeHash)

void APsychicObjectManager_C::GetDataTableParamEnemyInfo(class AActor* Em_actor_in, struct FUniqueObjectContainerEnemyInfo* Data_table)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "GetDataTableParamEnemyInfo");

	Params::PsychicObjectManager_C_GetDataTableParamEnemyInfo Parms{};

	Parms.Em_actor_in = Em_actor_in;

	UObject::ProcessEvent(Func, &Parms);

	if (Data_table != nullptr)
		*Data_table = std::move(Parms.Data_table);
}


// Function PsychicObjectManager.PsychicObjectManager_C.ResetFocusPsychicObject
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Loading_start_in                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class FName                             Tag_name_in                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APsychicObjectManager_C::ResetFocusPsychicObject(bool Loading_start_in, class FName Tag_name_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "ResetFocusPsychicObject");

	Params::PsychicObjectManager_C_ResetFocusPsychicObject Parms{};

	Parms.Loading_start_in = Loading_start_in;
	Parms.Tag_name_in = Tag_name_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PsychicObjectManager.PsychicObjectManager_C.GetAttackRowName
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Name_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// TArray<class FName>                     Row_name_list                                          (Parm, OutParm, HasGetValueTypeHash)

void APsychicObjectManager_C::GetAttackRowName(const class FString& Name_in, TArray<class FName>* Row_name_list)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "GetAttackRowName");

	Params::PsychicObjectManager_C_GetAttackRowName Parms{};

	Parms.Name_in = std::move(Name_in);

	UObject::ProcessEvent(Func, &Parms);

	if (Row_name_list != nullptr)
		*Row_name_list = std::move(Parms.Row_name_list);
}


// Function PsychicObjectManager.PsychicObjectManager_C.DebugDrawPsyObjAttackSphere
// (Public, BlueprintCallable, BlueprintEvent)

void APsychicObjectManager_C::DebugDrawPsyObjAttackSphere()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "DebugDrawPsyObjAttackSphere");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PsychicObjectManager.PsychicObjectManager_C.LoadPsychicBattle
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPsychicBattleType                      PsychicBattleType                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APsychicObjectManager_C::LoadPsychicBattle(EPsychicBattleType PsychicBattleType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "LoadPsychicBattle");

	Params::PsychicObjectManager_C_LoadPsychicBattle Parms{};

	Parms.PsychicBattleType = PsychicBattleType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PsychicObjectManager.PsychicObjectManager_C.FinalizePsychicBattle
// (Public, BlueprintCallable, BlueprintEvent)

void APsychicObjectManager_C::FinalizePsychicBattle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "FinalizePsychicBattle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PsychicObjectManager.PsychicObjectManager_C.IsPlayPsychicBattle
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Play                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void APsychicObjectManager_C::IsPlayPsychicBattle(bool* Play)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "IsPlayPsychicBattle");

	Params::PsychicObjectManager_C_IsPlayPsychicBattle Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Play != nullptr)
		*Play = Parms.Play;
}


// Function PsychicObjectManager.PsychicObjectManager_C.IsBattleSequencePsychicBattle
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Play                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void APsychicObjectManager_C::IsBattleSequencePsychicBattle(bool* Play)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "IsBattleSequencePsychicBattle");

	Params::PsychicObjectManager_C_IsBattleSequencePsychicBattle Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Play != nullptr)
		*Play = Parms.Play;
}


// Function PsychicObjectManager.PsychicObjectManager_C.StartPsychicBattle
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPsychicBattleType                      PsychicBattleType                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ABP_PsychicObjectBasic_C*         Psychic_Object_Actor                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APsychicObjectManager_C::StartPsychicBattle(EPsychicBattleType PsychicBattleType, class ABP_PsychicObjectBasic_C* Psychic_Object_Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "StartPsychicBattle");

	Params::PsychicObjectManager_C_StartPsychicBattle Parms{};

	Parms.PsychicBattleType = PsychicBattleType;
	Parms.Psychic_Object_Actor = Psychic_Object_Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PsychicObjectManager.PsychicObjectManager_C.SetPsychicBattleRate
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   PsychicBattleType                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APsychicObjectManager_C::SetPsychicBattleRate(float PsychicBattleType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "SetPsychicBattleRate");

	Params::PsychicObjectManager_C_SetPsychicBattleRate Parms{};

	Parms.PsychicBattleType = PsychicBattleType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PsychicObjectManager.PsychicObjectManager_C.EndBattleSequencePsychicBattle
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Win                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void APsychicObjectManager_C::EndBattleSequencePsychicBattle(bool Win)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "EndBattleSequencePsychicBattle");

	Params::PsychicObjectManager_C_EndBattleSequencePsychicBattle Parms{};

	Parms.Win = Win;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PsychicObjectManager.PsychicObjectManager_C.GetCameraParameterRowName
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Name_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FName                             Row_name_list                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APsychicObjectManager_C::GetCameraParameterRowName(const class FString& Name_in, class FName* Row_name_list)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "GetCameraParameterRowName");

	Params::PsychicObjectManager_C_GetCameraParameterRowName Parms{};

	Parms.Name_in = std::move(Name_in);

	UObject::ProcessEvent(Func, &Parms);

	if (Row_name_list != nullptr)
		*Row_name_list = Parms.Row_name_list;
}


// Function PsychicObjectManager.PsychicObjectManager_C.GetUnqObjBeamsID
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Rail                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// BattlePrototype::EPsychicObjectID       ID                                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APsychicObjectManager_C::GetUnqObjBeamsID(bool Rail, BattlePrototype::EPsychicObjectID* ID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "GetUnqObjBeamsID");

	Params::PsychicObjectManager_C_GetUnqObjBeamsID Parms{};

	Parms.Rail = Rail;

	UObject::ProcessEvent(Func, &Parms);

	if (ID != nullptr)
		*ID = Parms.ID;
}


// Function PsychicObjectManager.PsychicObjectManager_C.GetUnqObjClass
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// BattlePrototype::EPsychicObjectID       Psy_obj_id                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TSoftClassPtr<class UClass>             ID                                                     (Parm, OutParm, HasGetValueTypeHash)

void APsychicObjectManager_C::GetUnqObjClass(BattlePrototype::EPsychicObjectID Psy_obj_id, TSoftClassPtr<class UClass>* ID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "GetUnqObjClass");

	Params::PsychicObjectManager_C_GetUnqObjClass Parms{};

	Parms.Psy_obj_id = Psy_obj_id;

	UObject::ProcessEvent(Func, &Parms);

	if (ID != nullptr)
		*ID = Parms.ID;
}


// Function PsychicObjectManager.PsychicObjectManager_C.GetUniqueObjectParameter
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Name_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// struct FUniqueObjectCommonParameter     Parameter                                              (Parm, OutParm, HasGetValueTypeHash)

void APsychicObjectManager_C::GetUniqueObjectParameter(const class FString& Name_in, struct FUniqueObjectCommonParameter* Parameter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "GetUniqueObjectParameter");

	Params::PsychicObjectManager_C_GetUniqueObjectParameter Parms{};

	Parms.Name_in = std::move(Name_in);

	UObject::ProcessEvent(Func, &Parms);

	if (Parameter != nullptr)
		*Parameter = std::move(Parms.Parameter);
}


// Function PsychicObjectManager.PsychicObjectManager_C.CreateChildPsychicObject
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_PsychicObjectBasic_C*         Parent_obj_in                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TSoftClassPtr<class UClass>             Child_class_in                                         (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// int32                                   Child_num_in                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class ABP_PsychicObjectBasic_C*> Child_list                                             (Parm, OutParm, HasGetValueTypeHash)

void APsychicObjectManager_C::CreateChildPsychicObject(class ABP_PsychicObjectBasic_C* Parent_obj_in, TSoftClassPtr<class UClass> Child_class_in, int32 Child_num_in, TArray<class ABP_PsychicObjectBasic_C*>* Child_list)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "CreateChildPsychicObject");

	Params::PsychicObjectManager_C_CreateChildPsychicObject Parms{};

	Parms.Parent_obj_in = Parent_obj_in;
	Parms.Child_class_in = Child_class_in;
	Parms.Child_num_in = Child_num_in;

	UObject::ProcessEvent(Func, &Parms);

	if (Child_list != nullptr)
		*Child_list = std::move(Parms.Child_list);
}


// Function PsychicObjectManager.PsychicObjectManager_C.DestroyChildPsychicObject
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class ABP_PsychicObjectBasic_C*> Child_list_in                                          (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)

void APsychicObjectManager_C::DestroyChildPsychicObject(TArray<class ABP_PsychicObjectBasic_C*>& Child_list_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "DestroyChildPsychicObject");

	Params::PsychicObjectManager_C_DestroyChildPsychicObject Parms{};

	Parms.Child_list_in = std::move(Child_list_in);

	UObject::ProcessEvent(Func, &Parms);

	Child_list_in = std::move(Parms.Child_list_in);
}


// Function PsychicObjectManager.PsychicObjectManager_C.ClearChildPsychicObject
// (Public, BlueprintCallable, BlueprintEvent)

void APsychicObjectManager_C::ClearChildPsychicObject()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "ClearChildPsychicObject");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PsychicObjectManager.PsychicObjectManager_C.GetPsychicBulletDataIndex
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// BattlePrototype::EPsychicObjectID       PsyObjId                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Param_Index                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APsychicObjectManager_C::GetPsychicBulletDataIndex(BattlePrototype::EPsychicObjectID PsyObjId, int32* Param_Index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "GetPsychicBulletDataIndex");

	Params::PsychicObjectManager_C_GetPsychicBulletDataIndex Parms{};

	Parms.PsyObjId = PsyObjId;

	UObject::ProcessEvent(Func, &Parms);

	if (Param_Index != nullptr)
		*Param_Index = Parms.Param_Index;
}


// Function PsychicObjectManager.PsychicObjectManager_C.SetPsychicBulletData
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// BattlePrototype::EPsychicObjectID       PsyObjId                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Param_Index                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APsychicObjectManager_C::SetPsychicBulletData(BattlePrototype::EPsychicObjectID PsyObjId, int32* Param_Index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "SetPsychicBulletData");

	Params::PsychicObjectManager_C_SetPsychicBulletData Parms{};

	Parms.PsyObjId = PsyObjId;

	UObject::ProcessEvent(Func, &Parms);

	if (Param_Index != nullptr)
		*Param_Index = Parms.Param_Index;
}


// Function PsychicObjectManager.PsychicObjectManager_C.RemovePsychicBulletOwner
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_PsychicObjectBasic_C*         Owner_obj_in                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APsychicObjectManager_C::RemovePsychicBulletOwner(class ABP_PsychicObjectBasic_C* Owner_obj_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "RemovePsychicBulletOwner");

	Params::PsychicObjectManager_C_RemovePsychicBulletOwner Parms{};

	Parms.Owner_obj_in = Owner_obj_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PsychicObjectManager.PsychicObjectManager_C.SetFocus
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Unq_obj_in                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Map_gmk_in                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class AActor*                           Object_actor_in                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APsychicObjectManager_C::SetFocus(bool Flag_in, bool Unq_obj_in, bool Map_gmk_in, class AActor* Object_actor_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "SetFocus");

	Params::PsychicObjectManager_C_SetFocus Parms{};

	Parms.Flag_in = Flag_in;
	Parms.Unq_obj_in = Unq_obj_in;
	Parms.Map_gmk_in = Map_gmk_in;
	Parms.Object_actor_in = Object_actor_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PsychicObjectManager.PsychicObjectManager_C.SetPsychicGaugeCheck
// (Public, BlueprintCallable, BlueprintEvent)

void APsychicObjectManager_C::SetPsychicGaugeCheck()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "SetPsychicGaugeCheck");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PsychicObjectManager.PsychicObjectManager_C.UpdatePsychicGaugeCheck
// (Public, BlueprintCallable, BlueprintEvent)

void APsychicObjectManager_C::UpdatePsychicGaugeCheck()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "UpdatePsychicGaugeCheck");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PsychicObjectManager.PsychicObjectManager_C.GetHudMain
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AHUDMainGame_C*                   Param_HUDMainGame                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APsychicObjectManager_C::GetHudMain(class AHUDMainGame_C** Param_HUDMainGame)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "GetHudMain");

	Params::PsychicObjectManager_C_GetHudMain Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_HUDMainGame != nullptr)
		*Param_HUDMainGame = Parms.Param_HUDMainGame;
}


// Function PsychicObjectManager.PsychicObjectManager_C.UpdatePsychicComboCheck
// (Public, BlueprintCallable, BlueprintEvent)

void APsychicObjectManager_C::UpdatePsychicComboCheck()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "UpdatePsychicComboCheck");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PsychicObjectManager.PsychicObjectManager_C.CancelPsychicObjectAction
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Event_in                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Psychic_battle_in                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Npc_in                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Enemy_in                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void APsychicObjectManager_C::CancelPsychicObjectAction(bool Event_in, bool Psychic_battle_in, bool Npc_in, bool Enemy_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "CancelPsychicObjectAction");

	Params::PsychicObjectManager_C_CancelPsychicObjectAction Parms{};

	Parms.Event_in = Event_in;
	Parms.Psychic_battle_in = Psychic_battle_in;
	Parms.Npc_in = Npc_in;
	Parms.Enemy_in = Enemy_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PsychicObjectManager.PsychicObjectManager_C.RegisterPsychicSlowActor
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ARSBattleCharacter_C*             SlowActor                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APsychicObjectManager_C::RegisterPsychicSlowActor(class ARSBattleCharacter_C* SlowActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "RegisterPsychicSlowActor");

	Params::PsychicObjectManager_C_RegisterPsychicSlowActor Parms{};

	Parms.SlowActor = SlowActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PsychicObjectManager.PsychicObjectManager_C.UnregisterPsychicSlowActor
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ARSBattleCharacter_C*             SlowActor                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APsychicObjectManager_C::UnregisterPsychicSlowActor(class ARSBattleCharacter_C* SlowActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "UnregisterPsychicSlowActor");

	Params::PsychicObjectManager_C_UnregisterPsychicSlowActor Parms{};

	Parms.SlowActor = SlowActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PsychicObjectManager.PsychicObjectManager_C.SetPsychicComboSlow
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bSlow                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void APsychicObjectManager_C::SetPsychicComboSlow(bool bSlow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "SetPsychicComboSlow");

	Params::PsychicObjectManager_C_SetPsychicComboSlow Parms{};

	Parms.bSlow = bSlow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PsychicObjectManager.PsychicObjectManager_C.DebugSetPsychicObjectWeight
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Weight_in                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APsychicObjectManager_C::DebugSetPsychicObjectWeight(float Weight_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "DebugSetPsychicObjectWeight");

	Params::PsychicObjectManager_C_DebugSetPsychicObjectWeight Parms{};

	Parms.Weight_in = Weight_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PsychicObjectManager.PsychicObjectManager_C.ClearUniqueObject
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_PsychicObjectBasic_C*         Psy_obj_in                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APsychicObjectManager_C::ClearUniqueObject(class ABP_PsychicObjectBasic_C* Psy_obj_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "ClearUniqueObject");

	Params::PsychicObjectManager_C_ClearUniqueObject Parms{};

	Parms.Psy_obj_in = Psy_obj_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PsychicObjectManager.PsychicObjectManager_C.SetUniqueObjectUse
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class ABP_PsychicObjectBasic_C*         Unq_obj_in                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APsychicObjectManager_C::SetUniqueObjectUse(bool Flag_in, class ABP_PsychicObjectBasic_C* Unq_obj_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "SetUniqueObjectUse");

	Params::PsychicObjectManager_C_SetUniqueObjectUse Parms{};

	Parms.Flag_in = Flag_in;
	Parms.Unq_obj_in = Unq_obj_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PsychicObjectManager.PsychicObjectManager_C.IsUniqueObjectUse
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Is_use                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void APsychicObjectManager_C::IsUniqueObjectUse(bool* Is_use)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "IsUniqueObjectUse");

	Params::PsychicObjectManager_C_IsUniqueObjectUse Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Is_use != nullptr)
		*Is_use = Parms.Is_use;
}


// Function PsychicObjectManager.PsychicObjectManager_C.SetPsychicFieldCapture
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Capture_num_in                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APsychicObjectManager_C::SetPsychicFieldCapture(int32 Capture_num_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "SetPsychicFieldCapture");

	Params::PsychicObjectManager_C_SetPsychicFieldCapture Parms{};

	Parms.Capture_num_in = Capture_num_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PsychicObjectManager.PsychicObjectManager_C.IsPsychicFieldCaptureFinish
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Finish                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void APsychicObjectManager_C::IsPsychicFieldCaptureFinish(bool* Finish)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "IsPsychicFieldCaptureFinish");

	Params::PsychicObjectManager_C_IsPsychicFieldCaptureFinish Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Finish != nullptr)
		*Finish = Parms.Finish;
}


// Function PsychicObjectManager.PsychicObjectManager_C.SetPsychicFieldAttract
// (Public, BlueprintCallable, BlueprintEvent)

void APsychicObjectManager_C::SetPsychicFieldAttract()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "SetPsychicFieldAttract");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PsychicObjectManager.PsychicObjectManager_C.SetPsychicFieldThrow
// (Public, BlueprintCallable, BlueprintEvent)

void APsychicObjectManager_C::SetPsychicFieldThrow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "SetPsychicFieldThrow");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PsychicObjectManager.PsychicObjectManager_C.SetPsychicFieldTarget
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void APsychicObjectManager_C::SetPsychicFieldTarget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "SetPsychicFieldTarget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PsychicObjectManager.PsychicObjectManager_C.CancelPsychicField
// (Public, BlueprintCallable, BlueprintEvent)

void APsychicObjectManager_C::CancelPsychicField()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "CancelPsychicField");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PsychicObjectManager.PsychicObjectManager_C.UpdatePsychicField
// (Public, BlueprintCallable, BlueprintEvent)

void APsychicObjectManager_C::UpdatePsychicField()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "UpdatePsychicField");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PsychicObjectManager.PsychicObjectManager_C.SetFocusSearchRadiusRate
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Rate_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APsychicObjectManager_C::SetFocusSearchRadiusRate(float Rate_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "SetFocusSearchRadiusRate");

	Params::PsychicObjectManager_C_SetFocusSearchRadiusRate Parms{};

	Parms.Rate_in = Rate_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PsychicObjectManager.PsychicObjectManager_C.CheckPsychicFieldObject
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class AActor*>                   Actor_list_in                                          (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)

void APsychicObjectManager_C::CheckPsychicFieldObject(TArray<class AActor*>& Actor_list_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "CheckPsychicFieldObject");

	Params::PsychicObjectManager_C_CheckPsychicFieldObject Parms{};

	Parms.Actor_list_in = std::move(Actor_list_in);

	UObject::ProcessEvent(Func, &Parms);

	Actor_list_in = std::move(Parms.Actor_list_in);
}


// Function PsychicObjectManager.PsychicObjectManager_C.SetPsychicFieldWeightGauge
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void APsychicObjectManager_C::SetPsychicFieldWeightGauge(bool Flag_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "SetPsychicFieldWeightGauge");

	Params::PsychicObjectManager_C_SetPsychicFieldWeightGauge Parms{};

	Parms.Flag_in = Flag_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PsychicObjectManager.PsychicObjectManager_C.GetAvailableRegisterSizeArraySafety
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Len_in                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<EPsychicObjectSizeType>          Request_size_in                                        (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// TArray<EPsychicObjectSizeType>          Size_array                                             (Parm, OutParm, HasGetValueTypeHash)
// bool                                    Safety                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void APsychicObjectManager_C::GetAvailableRegisterSizeArraySafety(int32 Len_in, TArray<EPsychicObjectSizeType>& Request_size_in, TArray<EPsychicObjectSizeType>* Size_array, bool* Safety)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "GetAvailableRegisterSizeArraySafety");

	Params::PsychicObjectManager_C_GetAvailableRegisterSizeArraySafety Parms{};

	Parms.Len_in = Len_in;
	Parms.Request_size_in = std::move(Request_size_in);

	UObject::ProcessEvent(Func, &Parms);

	Request_size_in = std::move(Parms.Request_size_in);

	if (Size_array != nullptr)
		*Size_array = std::move(Parms.Size_array);

	if (Safety != nullptr)
		*Safety = Parms.Safety;
}


// Function PsychicObjectManager.PsychicObjectManager_C.GetRandomRegisterPsychicObjectSafety
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPsychicObjectSizeType                  Obj_size_in                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Safety_in                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class ABP_PsychicObjectBasic_C*         Psy_obj                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APsychicObjectManager_C::GetRandomRegisterPsychicObjectSafety(EPsychicObjectSizeType Obj_size_in, bool Safety_in, class ABP_PsychicObjectBasic_C** Psy_obj)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "GetRandomRegisterPsychicObjectSafety");

	Params::PsychicObjectManager_C_GetRandomRegisterPsychicObjectSafety Parms{};

	Parms.Obj_size_in = Obj_size_in;
	Parms.Safety_in = Safety_in;

	UObject::ProcessEvent(Func, &Parms);

	if (Psy_obj != nullptr)
		*Psy_obj = Parms.Psy_obj;
}


// Function PsychicObjectManager.PsychicObjectManager_C.GetRandomRegisterSwingObjectSafety
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_PsychicObjectBasic_C*         Psy_obj                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APsychicObjectManager_C::GetRandomRegisterSwingObjectSafety(class ABP_PsychicObjectBasic_C** Psy_obj)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "GetRandomRegisterSwingObjectSafety");

	Params::PsychicObjectManager_C_GetRandomRegisterSwingObjectSafety Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Psy_obj != nullptr)
		*Psy_obj = Parms.Psy_obj;
}


// Function PsychicObjectManager.PsychicObjectManager_C.CheckPsychicObjectAction
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Direct_shot                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Unq_obj_capture                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Unq_obj_action                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Psychic_field                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Just_dodge                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void APsychicObjectManager_C::CheckPsychicObjectAction(bool Direct_shot, bool Unq_obj_capture, bool Unq_obj_action, bool Psychic_field, bool Just_dodge, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "CheckPsychicObjectAction");

	Params::PsychicObjectManager_C_CheckPsychicObjectAction Parms{};

	Parms.Direct_shot = Direct_shot;
	Parms.Unq_obj_capture = Unq_obj_capture;
	Parms.Unq_obj_action = Unq_obj_action;
	Parms.Psychic_field = Psychic_field;
	Parms.Just_dodge = Just_dodge;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function PsychicObjectManager.PsychicObjectManager_C.SetPsychicObjectAction
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Direct_shot                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Unique_object                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Map_gimmick                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class FString                           Obj_name_in                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    Just_dodge                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Intercept                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Psychic_field                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void APsychicObjectManager_C::SetPsychicObjectAction(bool Direct_shot, bool Unique_object, bool Map_gimmick, bool Flag_in, const class FString& Obj_name_in, bool Just_dodge, bool Intercept, bool Psychic_field)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "SetPsychicObjectAction");

	Params::PsychicObjectManager_C_SetPsychicObjectAction Parms{};

	Parms.Direct_shot = Direct_shot;
	Parms.Unique_object = Unique_object;
	Parms.Map_gimmick = Map_gimmick;
	Parms.Flag_in = Flag_in;
	Parms.Obj_name_in = std::move(Obj_name_in);
	Parms.Just_dodge = Just_dodge;
	Parms.Intercept = Intercept;
	Parms.Psychic_field = Psychic_field;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PsychicObjectManager.PsychicObjectManager_C.UpdatePsychicObjectAction
// (Public, BlueprintCallable, BlueprintEvent)

void APsychicObjectManager_C::UpdatePsychicObjectAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "UpdatePsychicObjectAction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PsychicObjectManager.PsychicObjectManager_C.ResetPsychicObjectAction
// (Public, BlueprintCallable, BlueprintEvent)

void APsychicObjectManager_C::ResetPsychicObjectAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "ResetPsychicObjectAction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PsychicObjectManager.PsychicObjectManager_C.DebugDrawAnimObjectList
// (Public, BlueprintCallable, BlueprintEvent)

void APsychicObjectManager_C::DebugDrawAnimObjectList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "DebugDrawAnimObjectList");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PsychicObjectManager.PsychicObjectManager_C.GetUniqueEffectParam
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    brain_field                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// EPsychicObjectBrainFieldAttackType      brain_field_attack_type_in                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   brain_field_level_in                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Psychic_field                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   Psychic_field_obj_num_in                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FPsychicObjectSizeParameter      Parameter                                              (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APsychicObjectManager_C::GetUniqueEffectParam(bool brain_field, EPsychicObjectBrainFieldAttackType brain_field_attack_type_in, int32 brain_field_level_in, bool Psychic_field, int32 Psychic_field_obj_num_in, bool* Return, struct FPsychicObjectSizeParameter* Parameter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "GetUniqueEffectParam");

	Params::PsychicObjectManager_C_GetUniqueEffectParam Parms{};

	Parms.brain_field = brain_field;
	Parms.brain_field_attack_type_in = brain_field_attack_type_in;
	Parms.brain_field_level_in = brain_field_level_in;
	Parms.Psychic_field = Psychic_field;
	Parms.Psychic_field_obj_num_in = Psychic_field_obj_num_in;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;

	if (Parameter != nullptr)
		*Parameter = std::move(Parms.Parameter);
}


// Function PsychicObjectManager.PsychicObjectManager_C.DebugDrawPsychicObjectAction
// (Public, BlueprintCallable, BlueprintEvent)

void APsychicObjectManager_C::DebugDrawPsychicObjectAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "DebugDrawPsychicObjectAction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PsychicObjectManager.PsychicObjectManager_C.GetFocusObject
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Unq_obj_in                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Npc_in                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Enemy_in                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class ABP_PsychicObjectBasic_C*         Focus_obj                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APsychicObjectManager_C::GetFocusObject(bool Unq_obj_in, bool Npc_in, bool Enemy_in, class ABP_PsychicObjectBasic_C** Focus_obj)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "GetFocusObject");

	Params::PsychicObjectManager_C_GetFocusObject Parms{};

	Parms.Unq_obj_in = Unq_obj_in;
	Parms.Npc_in = Npc_in;
	Parms.Enemy_in = Enemy_in;

	UObject::ProcessEvent(Func, &Parms);

	if (Focus_obj != nullptr)
		*Focus_obj = Parms.Focus_obj;
}


// Function PsychicObjectManager.PsychicObjectManager_C.DebugDrawObjectStatus
// (Public, BlueprintCallable, BlueprintEvent)

void APsychicObjectManager_C::DebugDrawObjectStatus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "DebugDrawObjectStatus");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PsychicObjectManager.PsychicObjectManager_C.GetCaptureObject
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Npc_in                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Enemy_in                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Unq_obj_in                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Check_obj_type_in                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class ABP_PsychicObjectBasic_C*         Capture_obj                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APsychicObjectManager_C::GetCaptureObject(bool Npc_in, bool Enemy_in, bool Unq_obj_in, bool Check_obj_type_in, class ABP_PsychicObjectBasic_C** Capture_obj)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "GetCaptureObject");

	Params::PsychicObjectManager_C_GetCaptureObject Parms{};

	Parms.Npc_in = Npc_in;
	Parms.Enemy_in = Enemy_in;
	Parms.Unq_obj_in = Unq_obj_in;
	Parms.Check_obj_type_in = Check_obj_type_in;

	UObject::ProcessEvent(Func, &Parms);

	if (Capture_obj != nullptr)
		*Capture_obj = Parms.Capture_obj;
}


// Function PsychicObjectManager.PsychicObjectManager_C.SetCaptureObject
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_PsychicObjectBasic_C*         Psy_obj_in                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Npc_in                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Enemy_in                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void APsychicObjectManager_C::SetCaptureObject(class ABP_PsychicObjectBasic_C* Psy_obj_in, bool Npc_in, bool Enemy_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "SetCaptureObject");

	Params::PsychicObjectManager_C_SetCaptureObject Parms{};

	Parms.Psy_obj_in = Psy_obj_in;
	Parms.Npc_in = Npc_in;
	Parms.Enemy_in = Enemy_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PsychicObjectManager.PsychicObjectManager_C.GetAttackObject
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Unq_obj_in                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Npc_in                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Enemy_in                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class ABP_PsychicObjectBasic_C*         Attack_obj_                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APsychicObjectManager_C::GetAttackObject(bool Unq_obj_in, bool Npc_in, bool Enemy_in, class ABP_PsychicObjectBasic_C** Attack_obj_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "GetAttackObject");

	Params::PsychicObjectManager_C_GetAttackObject Parms{};

	Parms.Unq_obj_in = Unq_obj_in;
	Parms.Npc_in = Npc_in;
	Parms.Enemy_in = Enemy_in;

	UObject::ProcessEvent(Func, &Parms);

	if (Attack_obj_ != nullptr)
		*Attack_obj_ = Parms.Attack_obj_;
}


// Function PsychicObjectManager.PsychicObjectManager_C.SetAttackObject
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_PsychicObjectBasic_C*         Psy_obj_in                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Unq_obj_in                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Npc_in                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Enemy_in                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void APsychicObjectManager_C::SetAttackObject(class ABP_PsychicObjectBasic_C* Psy_obj_in, bool Unq_obj_in, bool Npc_in, bool Enemy_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "SetAttackObject");

	Params::PsychicObjectManager_C_SetAttackObject Parms{};

	Parms.Psy_obj_in = Psy_obj_in;
	Parms.Unq_obj_in = Unq_obj_in;
	Parms.Npc_in = Npc_in;
	Parms.Enemy_in = Enemy_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PsychicObjectManager.PsychicObjectManager_C.GetPsychicObject
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Unq_obj_in                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Npc_in                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Enemy_in                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Focus_in                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Capture_in                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Attack_in                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class ABP_PsychicObjectBasic_C*         Psy_obj                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APsychicObjectManager_C::GetPsychicObject(bool Unq_obj_in, bool Npc_in, bool Enemy_in, bool Focus_in, bool Capture_in, bool Attack_in, class ABP_PsychicObjectBasic_C** Psy_obj)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "GetPsychicObject");

	Params::PsychicObjectManager_C_GetPsychicObject Parms{};

	Parms.Unq_obj_in = Unq_obj_in;
	Parms.Npc_in = Npc_in;
	Parms.Enemy_in = Enemy_in;
	Parms.Focus_in = Focus_in;
	Parms.Capture_in = Capture_in;
	Parms.Attack_in = Attack_in;

	UObject::ProcessEvent(Func, &Parms);

	if (Psy_obj != nullptr)
		*Psy_obj = Parms.Psy_obj;
}


// Function PsychicObjectManager.PsychicObjectManager_C.SetIntercept
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Obj_actor_in                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ARSBattleCharacter_C*             Intercepter_in                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ARSBattleCharacter_C*             New_target_in                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APsychicObjectManager_C::SetIntercept(class AActor* Obj_actor_in, class ARSBattleCharacter_C* Intercepter_in, class ARSBattleCharacter_C* New_target_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "SetIntercept");

	Params::PsychicObjectManager_C_SetIntercept Parms{};

	Parms.Obj_actor_in = Obj_actor_in;
	Parms.Intercepter_in = Intercepter_in;
	Parms.New_target_in = New_target_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PsychicObjectManager.PsychicObjectManager_C.CreateInterceptObject
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void APsychicObjectManager_C::CreateInterceptObject()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "CreateInterceptObject");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PsychicObjectManager.PsychicObjectManager_C.SetInterceptObjectActive
// (Public, BlueprintCallable, BlueprintEvent)

void APsychicObjectManager_C::SetInterceptObjectActive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "SetInterceptObjectActive");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PsychicObjectManager.PsychicObjectManager_C.DeleteInterceptObject
// (Public, BlueprintCallable, BlueprintEvent)

void APsychicObjectManager_C::DeleteInterceptObject()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "DeleteInterceptObject");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PsychicObjectManager.PsychicObjectManager_C.DebugDrawInterceptObject
// (Public, BlueprintCallable, BlueprintEvent)

void APsychicObjectManager_C::DebugDrawInterceptObject()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "DebugDrawInterceptObject");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PsychicObjectManager.PsychicObjectManager_C.DebugCreatePsychicObject
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TSoftClassPtr<class UClass>             Psy_obj_class_in                                       (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void APsychicObjectManager_C::DebugCreatePsychicObject(TSoftClassPtr<class UClass> Psy_obj_class_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "DebugCreatePsychicObject");

	Params::PsychicObjectManager_C_DebugCreatePsychicObject Parms{};

	Parms.Psy_obj_class_in = Psy_obj_class_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PsychicObjectManager.PsychicObjectManager_C.InitDebugTraceRecord
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Radius_in                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Radius_ex_0_in                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Radius_ex_1_in                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Radius_ex_2_in                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Radius_ex_3_in                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     Color_ex_0_in                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     Color_ex_1_in                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     Color_ex_2_in                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     Color_ex_3_in                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APsychicObjectManager_C::InitDebugTraceRecord(float Radius_in, float Radius_ex_0_in, float Radius_ex_1_in, float Radius_ex_2_in, float Radius_ex_3_in, const struct FLinearColor& Color_ex_0_in, const struct FLinearColor& Color_ex_1_in, const struct FLinearColor& Color_ex_2_in, const struct FLinearColor& Color_ex_3_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "InitDebugTraceRecord");

	Params::PsychicObjectManager_C_InitDebugTraceRecord Parms{};

	Parms.Radius_in = Radius_in;
	Parms.Radius_ex_0_in = Radius_ex_0_in;
	Parms.Radius_ex_1_in = Radius_ex_1_in;
	Parms.Radius_ex_2_in = Radius_ex_2_in;
	Parms.Radius_ex_3_in = Radius_ex_3_in;
	Parms.Color_ex_0_in = std::move(Color_ex_0_in);
	Parms.Color_ex_1_in = std::move(Color_ex_1_in);
	Parms.Color_ex_2_in = std::move(Color_ex_2_in);
	Parms.Color_ex_3_in = std::move(Color_ex_3_in);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PsychicObjectManager.PsychicObjectManager_C.AddDebugTraceRecord
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Stt_pos_in                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          End_pos_in                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Hit_in                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector                          Hit_pos_in                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Hit_nrl_in                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Extra_0_in                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Extra_1_in                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Extra_2_in                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Extra_3_in                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APsychicObjectManager_C::AddDebugTraceRecord(const struct FVector& Stt_pos_in, const struct FVector& End_pos_in, bool Hit_in, const struct FVector& Hit_pos_in, const struct FVector& Hit_nrl_in, const struct FVector& Extra_0_in, const struct FVector& Extra_1_in, const struct FVector& Extra_2_in, const struct FVector& Extra_3_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "AddDebugTraceRecord");

	Params::PsychicObjectManager_C_AddDebugTraceRecord Parms{};

	Parms.Stt_pos_in = std::move(Stt_pos_in);
	Parms.End_pos_in = std::move(End_pos_in);
	Parms.Hit_in = Hit_in;
	Parms.Hit_pos_in = std::move(Hit_pos_in);
	Parms.Hit_nrl_in = std::move(Hit_nrl_in);
	Parms.Extra_0_in = std::move(Extra_0_in);
	Parms.Extra_1_in = std::move(Extra_1_in);
	Parms.Extra_2_in = std::move(Extra_2_in);
	Parms.Extra_3_in = std::move(Extra_3_in);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PsychicObjectManager.PsychicObjectManager_C.DrawDebugTraceRecord
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void APsychicObjectManager_C::DrawDebugTraceRecord(bool Flag_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "DrawDebugTraceRecord");

	Params::PsychicObjectManager_C_DrawDebugTraceRecord Parms{};

	Parms.Flag_in = Flag_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PsychicObjectManager.PsychicObjectManager_C.NextDebugTraceRecord
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    back_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    One0                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    One00                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    One000                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void APsychicObjectManager_C::NextDebugTraceRecord(bool back_in, bool One0, bool One00, bool One000)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "NextDebugTraceRecord");

	Params::PsychicObjectManager_C_NextDebugTraceRecord Parms{};

	Parms.back_in = back_in;
	Parms.One0 = One0;
	Parms.One00 = One00;
	Parms.One000 = One000;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PsychicObjectManager.PsychicObjectManager_C.UpdateDebugTraceRecord
// (Public, BlueprintCallable, BlueprintEvent)

void APsychicObjectManager_C::UpdateDebugTraceRecord()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "UpdateDebugTraceRecord");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PsychicObjectManager.PsychicObjectManager_C.DebugDrawRotArrow
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Pos_in                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         Rot_in                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   Len_in                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Size_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Time_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APsychicObjectManager_C::DebugDrawRotArrow(const struct FVector& Pos_in, const struct FRotator& Rot_in, float Len_in, float Size_in, float Time_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "DebugDrawRotArrow");

	Params::PsychicObjectManager_C_DebugDrawRotArrow Parms{};

	Parms.Pos_in = std::move(Pos_in);
	Parms.Rot_in = std::move(Rot_in);
	Parms.Len_in = Len_in;
	Parms.Size_in = Size_in;
	Parms.Time_in = Time_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PsychicObjectManager.PsychicObjectManager_C.CheckNpcObject
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bUnqObj                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bEnemy                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    ChkCapture                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    ChkAttack                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool APsychicObjectManager_C::CheckNpcObject(bool bUnqObj, bool bEnemy, bool ChkCapture, bool ChkAttack)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "CheckNpcObject");

	Params::PsychicObjectManager_C_CheckNpcObject Parms{};

	Parms.bUnqObj = bUnqObj;
	Parms.bEnemy = bEnemy;
	Parms.ChkCapture = ChkCapture;
	Parms.ChkAttack = ChkAttack;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PsychicObjectManager.PsychicObjectManager_C.CancelPsychicObjectHoming
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Npc_in                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Enemy_in                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void APsychicObjectManager_C::CancelPsychicObjectHoming(bool Npc_in, bool Enemy_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "CancelPsychicObjectHoming");

	Params::PsychicObjectManager_C_CancelPsychicObjectHoming Parms{};

	Parms.Npc_in = Npc_in;
	Parms.Enemy_in = Enemy_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PsychicObjectManager.PsychicObjectManager_C.SetUsingBossGauge
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_bInBossGauge                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void APsychicObjectManager_C::SetUsingBossGauge(bool Param_bInBossGauge)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "SetUsingBossGauge");

	Params::PsychicObjectManager_C_SetUsingBossGauge Parms{};

	Parms.Param_bInBossGauge = Param_bInBossGauge;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PsychicObjectManager.PsychicObjectManager_C.SetMapGimmickExMode
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class ABP_MapGimmickObjectBase_C*       Actor_in                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APsychicObjectManager_C::SetMapGimmickExMode(bool Flag_in, class ABP_MapGimmickObjectBase_C* Actor_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "SetMapGimmickExMode");

	Params::PsychicObjectManager_C_SetMapGimmickExMode Parms{};

	Parms.Flag_in = Flag_in;
	Parms.Actor_in = Actor_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PsychicObjectManager.PsychicObjectManager_C.SetMapGimmickEx
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_MapGimmickObjectBase_C*       Actor_in                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APsychicObjectManager_C::SetMapGimmickEx(class ABP_MapGimmickObjectBase_C* Actor_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "SetMapGimmickEx");

	Params::PsychicObjectManager_C_SetMapGimmickEx Parms{};

	Parms.Actor_in = Actor_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PsychicObjectManager.PsychicObjectManager_C.ExceptionallyAllowTriggerEffect
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Allow                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void APsychicObjectManager_C::ExceptionallyAllowTriggerEffect(bool* Allow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "ExceptionallyAllowTriggerEffect");

	Params::PsychicObjectManager_C_ExceptionallyAllowTriggerEffect Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Allow != nullptr)
		*Allow = Parms.Allow;
}


// Function PsychicObjectManager.PsychicObjectManager_C.DebugPrintRegisterList
// (Public, BlueprintCallable, BlueprintEvent)

void APsychicObjectManager_C::DebugPrintRegisterList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "DebugPrintRegisterList");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PsychicObjectManager.PsychicObjectManager_C.SetUniqueObjectSkipDisableCamera
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bSkip                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void APsychicObjectManager_C::SetUniqueObjectSkipDisableCamera(bool bSkip)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "SetUniqueObjectSkipDisableCamera");

	Params::PsychicObjectManager_C_SetUniqueObjectSkipDisableCamera Parms{};

	Parms.bSkip = bSkip;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PsychicObjectManager.PsychicObjectManager_C.IsUniqueObjectSkipDisableCamera
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Return_                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void APsychicObjectManager_C::IsUniqueObjectSkipDisableCamera(bool* Return_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "IsUniqueObjectSkipDisableCamera");

	Params::PsychicObjectManager_C_IsUniqueObjectSkipDisableCamera Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return_ != nullptr)
		*Return_ = Parms.Return_;
}


// Function PsychicObjectManager.PsychicObjectManager_C.DebugDrawRegisterPos
// (Public, BlueprintCallable, BlueprintEvent)

void APsychicObjectManager_C::DebugDrawRegisterPos()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "DebugDrawRegisterPos");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PsychicObjectManager.PsychicObjectManager_C.RespawnEnemyObject
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void APsychicObjectManager_C::RespawnEnemyObject()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "RespawnEnemyObject");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PsychicObjectManager.PsychicObjectManager_C.DebugDrawRegisterObjInfo
// (Public, BlueprintCallable, BlueprintEvent)

void APsychicObjectManager_C::DebugDrawRegisterObjInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "DebugDrawRegisterObjInfo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PsychicObjectManager.PsychicObjectManager_C.SetUniqueObjectAutoTakeItem
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void APsychicObjectManager_C::SetUniqueObjectAutoTakeItem(bool Flag_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "SetUniqueObjectAutoTakeItem");

	Params::PsychicObjectManager_C_SetUniqueObjectAutoTakeItem Parms{};

	Parms.Flag_in = Flag_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PsychicObjectManager.PsychicObjectManager_C.IsUniqueObjectAutoTakeItem
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void APsychicObjectManager_C::IsUniqueObjectAutoTakeItem(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "IsUniqueObjectAutoTakeItem");

	Params::PsychicObjectManager_C_IsUniqueObjectAutoTakeItem Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function PsychicObjectManager.PsychicObjectManager_C.SetLockInputMode
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class FName                             Ref_name_in                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APsychicObjectManager_C::SetLockInputMode(bool Flag_in, class FName Ref_name_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "SetLockInputMode");

	Params::PsychicObjectManager_C_SetLockInputMode Parms{};

	Parms.Flag_in = Flag_in;
	Parms.Ref_name_in = Ref_name_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PsychicObjectManager.PsychicObjectManager_C.DebugDrawInputModeLock
// (Public, BlueprintCallable, BlueprintEvent)

void APsychicObjectManager_C::DebugDrawInputModeLock()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "DebugDrawInputModeLock");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PsychicObjectManager.PsychicObjectManager_C.AddEventPsychicObject
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class AActor*>                   Actor_list_in                                          (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)

void APsychicObjectManager_C::AddEventPsychicObject(TArray<class AActor*>& Actor_list_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "AddEventPsychicObject");

	Params::PsychicObjectManager_C_AddEventPsychicObject Parms{};

	Parms.Actor_list_in = std::move(Actor_list_in);

	UObject::ProcessEvent(Func, &Parms);

	Actor_list_in = std::move(Parms.Actor_list_in);
}


// Function PsychicObjectManager.PsychicObjectManager_C.SetEventPsychicObject
// (Public, BlueprintCallable, BlueprintEvent)

void APsychicObjectManager_C::SetEventPsychicObject()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "SetEventPsychicObject");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PsychicObjectManager.PsychicObjectManager_C.ClearEventPsychicObject
// (Public, BlueprintCallable, BlueprintEvent)

void APsychicObjectManager_C::ClearEventPsychicObject()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "ClearEventPsychicObject");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PsychicObjectManager.PsychicObjectManager_C.UpdateDestroyList
// (Public, BlueprintCallable, BlueprintEvent)

void APsychicObjectManager_C::UpdateDestroyList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "UpdateDestroyList");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PsychicObjectManager.PsychicObjectManager_C.DebugDrawPsyObjInfo
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void APsychicObjectManager_C::DebugDrawPsyObjInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "DebugDrawPsyObjInfo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PsychicObjectManager.PsychicObjectManager_C.IsNeedFrameWait
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool APsychicObjectManager_C::IsNeedFrameWait()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "IsNeedFrameWait");

	Params::PsychicObjectManager_C_IsNeedFrameWait Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PsychicObjectManager.PsychicObjectManager_C.SetDebugPrintPsyObjInfo
// (Public, BlueprintCallable, BlueprintEvent)

void APsychicObjectManager_C::SetDebugPrintPsyObjInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "SetDebugPrintPsyObjInfo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PsychicObjectManager.PsychicObjectManager_C.DebugDrawFcousObj
// (Public, BlueprintCallable, BlueprintEvent)

void APsychicObjectManager_C::DebugDrawFcousObj()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "DebugDrawFcousObj");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PsychicObjectManager.PsychicObjectManager_C.LostCaptureOwner
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Capture_owner_in                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Npc_in                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Enemy_in                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void APsychicObjectManager_C::LostCaptureOwner(class AActor* Capture_owner_in, bool Npc_in, bool Enemy_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "LostCaptureOwner");

	Params::PsychicObjectManager_C_LostCaptureOwner Parms{};

	Parms.Capture_owner_in = Capture_owner_in;
	Parms.Npc_in = Npc_in;
	Parms.Enemy_in = Enemy_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PsychicObjectManager.PsychicObjectManager_C.ChangeUniqueObjectTargetActor
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Old_actor_in                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           New_actor_in                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APsychicObjectManager_C::ChangeUniqueObjectTargetActor(class AActor* Old_actor_in, class AActor* New_actor_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "ChangeUniqueObjectTargetActor");

	Params::PsychicObjectManager_C_ChangeUniqueObjectTargetActor Parms{};

	Parms.Old_actor_in = Old_actor_in;
	Parms.New_actor_in = New_actor_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PsychicObjectManager.PsychicObjectManager_C.SetWeightGaugeCheck
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Force_in                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class ABP_PsychicObjectBasic_C*         Psy_obj_in                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APsychicObjectManager_C::SetWeightGaugeCheck(bool Flag_in, bool Force_in, class ABP_PsychicObjectBasic_C* Psy_obj_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "SetWeightGaugeCheck");

	Params::PsychicObjectManager_C_SetWeightGaugeCheck Parms{};

	Parms.Flag_in = Flag_in;
	Parms.Force_in = Force_in;
	Parms.Psy_obj_in = Psy_obj_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PsychicObjectManager.PsychicObjectManager_C.ResetWeightGaugeCheck
// (Public, BlueprintCallable, BlueprintEvent)

void APsychicObjectManager_C::ResetWeightGaugeCheck()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "ResetWeightGaugeCheck");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PsychicObjectManager.PsychicObjectManager_C.StartWeightGaugeCheck
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Map_gimmick_in                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void APsychicObjectManager_C::StartWeightGaugeCheck(bool Map_gimmick_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "StartWeightGaugeCheck");

	Params::PsychicObjectManager_C_StartWeightGaugeCheck Parms{};

	Parms.Map_gimmick_in = Map_gimmick_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PsychicObjectManager.PsychicObjectManager_C.EndWeightGaugeCheck
// (Public, BlueprintCallable, BlueprintEvent)

void APsychicObjectManager_C::EndWeightGaugeCheck()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "EndWeightGaugeCheck");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PsychicObjectManager.PsychicObjectManager_C.CancelCopyPsychicObject
// (Public, BlueprintCallable, BlueprintEvent)

void APsychicObjectManager_C::CancelCopyPsychicObject()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "CancelCopyPsychicObject");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PsychicObjectManager.PsychicObjectManager_C.EventManagerStart
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    EnableTick                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Visibility                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool APsychicObjectManager_C::EventManagerStart(bool EnableTick, bool Visibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "EventManagerStart");

	Params::PsychicObjectManager_C_EventManagerStart Parms{};

	Parms.EnableTick = EnableTick;
	Parms.Visibility = Visibility;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PsychicObjectManager.PsychicObjectManager_C.EventManagerEnd
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    RestoreEnableTick                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    RestoreVisibility                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool APsychicObjectManager_C::EventManagerEnd(bool RestoreEnableTick, bool RestoreVisibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "EventManagerEnd");

	Params::PsychicObjectManager_C_EventManagerEnd Parms{};

	Parms.RestoreEnableTick = RestoreEnableTick;
	Parms.RestoreVisibility = RestoreVisibility;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PsychicObjectManager.PsychicObjectManager_C.GetInterceptAttackParam
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// bool                                    bFind                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FHCCollisionCommonInfo           CommonInfo                                             (Parm, OutParm)
// struct FHCSkillCommonInfo               SkillInfo                                              (Parm, OutParm)

void APsychicObjectManager_C::GetInterceptAttackParam(bool* bFind, struct FHCCollisionCommonInfo* CommonInfo, struct FHCSkillCommonInfo* SkillInfo) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicObjectManager_C", "GetInterceptAttackParam");

	Params::PsychicObjectManager_C_GetInterceptAttackParam Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bFind != nullptr)
		*bFind = Parms.bFind;

	if (CommonInfo != nullptr)
		*CommonInfo = std::move(Parms.CommonInfo);

	if (SkillInfo != nullptr)
		*SkillInfo = std::move(Parms.SkillInfo);
}

}

