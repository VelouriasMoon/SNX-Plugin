#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_AimInterface

#include "Basic.hpp"


namespace SDK::Params
{

// Function BPI_AimInterface.BPI_AimInterface_C.StartAim
// 0x0008 (0x0008 - 0x0000)
struct BPI_AimInterface_C_StartAim final
{
public:
	float                                         LimitAngle;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDummy;                                            // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_AimInterface_C_StartAim) == 0x000004, "Wrong alignment on BPI_AimInterface_C_StartAim");
static_assert(sizeof(BPI_AimInterface_C_StartAim) == 0x000008, "Wrong size on BPI_AimInterface_C_StartAim");
static_assert(offsetof(BPI_AimInterface_C_StartAim, LimitAngle) == 0x000000, "Member 'BPI_AimInterface_C_StartAim::LimitAngle' has a wrong offset!");
static_assert(offsetof(BPI_AimInterface_C_StartAim, bDummy) == 0x000004, "Member 'BPI_AimInterface_C_StartAim::bDummy' has a wrong offset!");

// Function BPI_AimInterface.BPI_AimInterface_C.EndAim
// 0x0001 (0x0001 - 0x0000)
struct BPI_AimInterface_C_EndAim final
{
public:
	bool                                          bDummy;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_AimInterface_C_EndAim) == 0x000001, "Wrong alignment on BPI_AimInterface_C_EndAim");
static_assert(sizeof(BPI_AimInterface_C_EndAim) == 0x000001, "Wrong size on BPI_AimInterface_C_EndAim");
static_assert(offsetof(BPI_AimInterface_C_EndAim, bDummy) == 0x000000, "Member 'BPI_AimInterface_C_EndAim::bDummy' has a wrong offset!");

}

