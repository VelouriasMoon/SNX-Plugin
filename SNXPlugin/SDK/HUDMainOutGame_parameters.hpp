#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HUDMainOutGame

#include "Basic.hpp"


namespace SDK::Params
{

// Function HUDMainOutGame.HUDMainOutGame_C.ExecuteUbergraph_HUDMainOutGame
// 0x0010 (0x0010 - 0x0000)
struct HUDMainOutGame_C_ExecuteUbergraph_HUDMainOutGame final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Init_ReturnValue;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E91[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_ui_PhotoMode_C*                     CallFunc_Create_ReturnValue;                       // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HUDMainOutGame_C_ExecuteUbergraph_HUDMainOutGame) == 0x000008, "Wrong alignment on HUDMainOutGame_C_ExecuteUbergraph_HUDMainOutGame");
static_assert(sizeof(HUDMainOutGame_C_ExecuteUbergraph_HUDMainOutGame) == 0x000010, "Wrong size on HUDMainOutGame_C_ExecuteUbergraph_HUDMainOutGame");
static_assert(offsetof(HUDMainOutGame_C_ExecuteUbergraph_HUDMainOutGame, EntryPoint) == 0x000000, "Member 'HUDMainOutGame_C_ExecuteUbergraph_HUDMainOutGame::EntryPoint' has a wrong offset!");
static_assert(offsetof(HUDMainOutGame_C_ExecuteUbergraph_HUDMainOutGame, CallFunc_Init_ReturnValue) == 0x000004, "Member 'HUDMainOutGame_C_ExecuteUbergraph_HUDMainOutGame::CallFunc_Init_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUDMainOutGame_C_ExecuteUbergraph_HUDMainOutGame, CallFunc_Create_ReturnValue) == 0x000008, "Member 'HUDMainOutGame_C_ExecuteUbergraph_HUDMainOutGame::CallFunc_Create_ReturnValue' has a wrong offset!");

// Function HUDMainOutGame.HUDMainOutGame_C.InitMessageWidget
// 0x0010 (0x0010 - 0x0000)
struct HUDMainOutGame_C_InitMessageWidget final
{
public:
	class UWB_ui_Caption_1_C*                     CallFunc_Create_ReturnValue;                       // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWB_ui_Caption_Guide_1_C*               CallFunc_Create_ReturnValue_1;                     // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HUDMainOutGame_C_InitMessageWidget) == 0x000008, "Wrong alignment on HUDMainOutGame_C_InitMessageWidget");
static_assert(sizeof(HUDMainOutGame_C_InitMessageWidget) == 0x000010, "Wrong size on HUDMainOutGame_C_InitMessageWidget");
static_assert(offsetof(HUDMainOutGame_C_InitMessageWidget, CallFunc_Create_ReturnValue) == 0x000000, "Member 'HUDMainOutGame_C_InitMessageWidget::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUDMainOutGame_C_InitMessageWidget, CallFunc_Create_ReturnValue_1) == 0x000008, "Member 'HUDMainOutGame_C_InitMessageWidget::CallFunc_Create_ReturnValue_1' has a wrong offset!");

// Function HUDMainOutGame.HUDMainOutGame_C.DrawMessage
// 0x0048 (0x0048 - 0x0000)
struct HUDMainOutGame_C_DrawMessage final
{
public:
	class FString                                 Talker;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Message;                                           // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         WindowType;                                        // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DrawSecond;                                        // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsEnableSkip;                                      // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E92[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URSAtomComponentBase*                   Voice;                                             // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSkipVoiceEnd;                                    // 0x0038(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsWaitMode;                                        // 0x0039(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E93[0x2];                                     // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ReturnValue;                                       // 0x003C(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddDrawMessageNormal_MessageIndex;        // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HUDMainOutGame_C_DrawMessage) == 0x000008, "Wrong alignment on HUDMainOutGame_C_DrawMessage");
static_assert(sizeof(HUDMainOutGame_C_DrawMessage) == 0x000048, "Wrong size on HUDMainOutGame_C_DrawMessage");
static_assert(offsetof(HUDMainOutGame_C_DrawMessage, Talker) == 0x000000, "Member 'HUDMainOutGame_C_DrawMessage::Talker' has a wrong offset!");
static_assert(offsetof(HUDMainOutGame_C_DrawMessage, Message) == 0x000010, "Member 'HUDMainOutGame_C_DrawMessage::Message' has a wrong offset!");
static_assert(offsetof(HUDMainOutGame_C_DrawMessage, WindowType) == 0x000020, "Member 'HUDMainOutGame_C_DrawMessage::WindowType' has a wrong offset!");
static_assert(offsetof(HUDMainOutGame_C_DrawMessage, DrawSecond) == 0x000024, "Member 'HUDMainOutGame_C_DrawMessage::DrawSecond' has a wrong offset!");
static_assert(offsetof(HUDMainOutGame_C_DrawMessage, IsEnableSkip) == 0x000028, "Member 'HUDMainOutGame_C_DrawMessage::IsEnableSkip' has a wrong offset!");
static_assert(offsetof(HUDMainOutGame_C_DrawMessage, Voice) == 0x000030, "Member 'HUDMainOutGame_C_DrawMessage::Voice' has a wrong offset!");
static_assert(offsetof(HUDMainOutGame_C_DrawMessage, IsSkipVoiceEnd) == 0x000038, "Member 'HUDMainOutGame_C_DrawMessage::IsSkipVoiceEnd' has a wrong offset!");
static_assert(offsetof(HUDMainOutGame_C_DrawMessage, IsWaitMode) == 0x000039, "Member 'HUDMainOutGame_C_DrawMessage::IsWaitMode' has a wrong offset!");
static_assert(offsetof(HUDMainOutGame_C_DrawMessage, ReturnValue) == 0x00003C, "Member 'HUDMainOutGame_C_DrawMessage::ReturnValue' has a wrong offset!");
static_assert(offsetof(HUDMainOutGame_C_DrawMessage, CallFunc_AddDrawMessageNormal_MessageIndex) == 0x000040, "Member 'HUDMainOutGame_C_DrawMessage::CallFunc_AddDrawMessageNormal_MessageIndex' has a wrong offset!");

// Function HUDMainOutGame.HUDMainOutGame_C.DrawChoiceMessage
// 0x0070 (0x0070 - 0x0000)
struct HUDMainOutGame_C_DrawChoiceMessage final
{
public:
	int32                                         ChoiceNum;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E94[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Choice0;                                           // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Choice1;                                           // 0x0018(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Choice2;                                           // 0x0028(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Choice3;                                           // 0x0038(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Choice4;                                           // 0x0048(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         DefaultIndex;                                      // 0x0058(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CancelIndex;                                       // 0x005C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DrawSecond;                                        // 0x0060(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsEnableCancel;                                    // 0x0064(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsWaitMode;                                        // 0x0065(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E95[0x2];                                     // 0x0066(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ReturnValue;                                       // 0x0068(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddDrawMessageChoice_MessageIndex;        // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HUDMainOutGame_C_DrawChoiceMessage) == 0x000008, "Wrong alignment on HUDMainOutGame_C_DrawChoiceMessage");
static_assert(sizeof(HUDMainOutGame_C_DrawChoiceMessage) == 0x000070, "Wrong size on HUDMainOutGame_C_DrawChoiceMessage");
static_assert(offsetof(HUDMainOutGame_C_DrawChoiceMessage, ChoiceNum) == 0x000000, "Member 'HUDMainOutGame_C_DrawChoiceMessage::ChoiceNum' has a wrong offset!");
static_assert(offsetof(HUDMainOutGame_C_DrawChoiceMessage, Choice0) == 0x000008, "Member 'HUDMainOutGame_C_DrawChoiceMessage::Choice0' has a wrong offset!");
static_assert(offsetof(HUDMainOutGame_C_DrawChoiceMessage, Choice1) == 0x000018, "Member 'HUDMainOutGame_C_DrawChoiceMessage::Choice1' has a wrong offset!");
static_assert(offsetof(HUDMainOutGame_C_DrawChoiceMessage, Choice2) == 0x000028, "Member 'HUDMainOutGame_C_DrawChoiceMessage::Choice2' has a wrong offset!");
static_assert(offsetof(HUDMainOutGame_C_DrawChoiceMessage, Choice3) == 0x000038, "Member 'HUDMainOutGame_C_DrawChoiceMessage::Choice3' has a wrong offset!");
static_assert(offsetof(HUDMainOutGame_C_DrawChoiceMessage, Choice4) == 0x000048, "Member 'HUDMainOutGame_C_DrawChoiceMessage::Choice4' has a wrong offset!");
static_assert(offsetof(HUDMainOutGame_C_DrawChoiceMessage, DefaultIndex) == 0x000058, "Member 'HUDMainOutGame_C_DrawChoiceMessage::DefaultIndex' has a wrong offset!");
static_assert(offsetof(HUDMainOutGame_C_DrawChoiceMessage, CancelIndex) == 0x00005C, "Member 'HUDMainOutGame_C_DrawChoiceMessage::CancelIndex' has a wrong offset!");
static_assert(offsetof(HUDMainOutGame_C_DrawChoiceMessage, DrawSecond) == 0x000060, "Member 'HUDMainOutGame_C_DrawChoiceMessage::DrawSecond' has a wrong offset!");
static_assert(offsetof(HUDMainOutGame_C_DrawChoiceMessage, IsEnableCancel) == 0x000064, "Member 'HUDMainOutGame_C_DrawChoiceMessage::IsEnableCancel' has a wrong offset!");
static_assert(offsetof(HUDMainOutGame_C_DrawChoiceMessage, IsWaitMode) == 0x000065, "Member 'HUDMainOutGame_C_DrawChoiceMessage::IsWaitMode' has a wrong offset!");
static_assert(offsetof(HUDMainOutGame_C_DrawChoiceMessage, ReturnValue) == 0x000068, "Member 'HUDMainOutGame_C_DrawChoiceMessage::ReturnValue' has a wrong offset!");
static_assert(offsetof(HUDMainOutGame_C_DrawChoiceMessage, CallFunc_AddDrawMessageChoice_MessageIndex) == 0x00006C, "Member 'HUDMainOutGame_C_DrawChoiceMessage::CallFunc_AddDrawMessageChoice_MessageIndex' has a wrong offset!");

// Function HUDMainOutGame.HUDMainOutGame_C.SkipMessage
// 0x0001 (0x0001 - 0x0000)
struct HUDMainOutGame_C_SkipMessage final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HUDMainOutGame_C_SkipMessage) == 0x000001, "Wrong alignment on HUDMainOutGame_C_SkipMessage");
static_assert(sizeof(HUDMainOutGame_C_SkipMessage) == 0x000001, "Wrong size on HUDMainOutGame_C_SkipMessage");
static_assert(offsetof(HUDMainOutGame_C_SkipMessage, ReturnValue) == 0x000000, "Member 'HUDMainOutGame_C_SkipMessage::ReturnValue' has a wrong offset!");

// Function HUDMainOutGame.HUDMainOutGame_C.GetChoiceResult
// 0x000C (0x000C - 0x0000)
struct HUDMainOutGame_C_GetChoiceResult final
{
public:
	int32                                         MessageIndex;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Result;                                            // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetChoiceResult_Result;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HUDMainOutGame_C_GetChoiceResult) == 0x000004, "Wrong alignment on HUDMainOutGame_C_GetChoiceResult");
static_assert(sizeof(HUDMainOutGame_C_GetChoiceResult) == 0x00000C, "Wrong size on HUDMainOutGame_C_GetChoiceResult");
static_assert(offsetof(HUDMainOutGame_C_GetChoiceResult, MessageIndex) == 0x000000, "Member 'HUDMainOutGame_C_GetChoiceResult::MessageIndex' has a wrong offset!");
static_assert(offsetof(HUDMainOutGame_C_GetChoiceResult, Result) == 0x000004, "Member 'HUDMainOutGame_C_GetChoiceResult::Result' has a wrong offset!");
static_assert(offsetof(HUDMainOutGame_C_GetChoiceResult, CallFunc_GetChoiceResult_Result) == 0x000008, "Member 'HUDMainOutGame_C_GetChoiceResult::CallFunc_GetChoiceResult_Result' has a wrong offset!");

// Function HUDMainOutGame.HUDMainOutGame_C.GetLastChoiceResult
// 0x0008 (0x0008 - 0x0000)
struct HUDMainOutGame_C_GetLastChoiceResult final
{
public:
	int32                                         Result;                                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetLastChoiceResult_Result;               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HUDMainOutGame_C_GetLastChoiceResult) == 0x000004, "Wrong alignment on HUDMainOutGame_C_GetLastChoiceResult");
static_assert(sizeof(HUDMainOutGame_C_GetLastChoiceResult) == 0x000008, "Wrong size on HUDMainOutGame_C_GetLastChoiceResult");
static_assert(offsetof(HUDMainOutGame_C_GetLastChoiceResult, Result) == 0x000000, "Member 'HUDMainOutGame_C_GetLastChoiceResult::Result' has a wrong offset!");
static_assert(offsetof(HUDMainOutGame_C_GetLastChoiceResult, CallFunc_GetLastChoiceResult_Result) == 0x000004, "Member 'HUDMainOutGame_C_GetLastChoiceResult::CallFunc_GetLastChoiceResult_Result' has a wrong offset!");

// Function HUDMainOutGame.HUDMainOutGame_C.CheckEndMessage
// 0x0008 (0x0008 - 0x0000)
struct HUDMainOutGame_C_CheckEndMessage final
{
public:
	int32                                         MessageIndex;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsEnd;                                             // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckEndMessage_IsEnd;                    // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HUDMainOutGame_C_CheckEndMessage) == 0x000004, "Wrong alignment on HUDMainOutGame_C_CheckEndMessage");
static_assert(sizeof(HUDMainOutGame_C_CheckEndMessage) == 0x000008, "Wrong size on HUDMainOutGame_C_CheckEndMessage");
static_assert(offsetof(HUDMainOutGame_C_CheckEndMessage, MessageIndex) == 0x000000, "Member 'HUDMainOutGame_C_CheckEndMessage::MessageIndex' has a wrong offset!");
static_assert(offsetof(HUDMainOutGame_C_CheckEndMessage, IsEnd) == 0x000004, "Member 'HUDMainOutGame_C_CheckEndMessage::IsEnd' has a wrong offset!");
static_assert(offsetof(HUDMainOutGame_C_CheckEndMessage, CallFunc_CheckEndMessage_IsEnd) == 0x000005, "Member 'HUDMainOutGame_C_CheckEndMessage::CallFunc_CheckEndMessage_IsEnd' has a wrong offset!");

// Function HUDMainOutGame.HUDMainOutGame_C.CheckEndAllMessage
// 0x0003 (0x0003 - 0x0000)
struct HUDMainOutGame_C_CheckEndAllMessage final
{
public:
	bool                                          IsEnd;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          FlagCheckClose;                                    // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckEndAllMessage_IsEnd;                 // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HUDMainOutGame_C_CheckEndAllMessage) == 0x000001, "Wrong alignment on HUDMainOutGame_C_CheckEndAllMessage");
static_assert(sizeof(HUDMainOutGame_C_CheckEndAllMessage) == 0x000003, "Wrong size on HUDMainOutGame_C_CheckEndAllMessage");
static_assert(offsetof(HUDMainOutGame_C_CheckEndAllMessage, IsEnd) == 0x000000, "Member 'HUDMainOutGame_C_CheckEndAllMessage::IsEnd' has a wrong offset!");
static_assert(offsetof(HUDMainOutGame_C_CheckEndAllMessage, FlagCheckClose) == 0x000001, "Member 'HUDMainOutGame_C_CheckEndAllMessage::FlagCheckClose' has a wrong offset!");
static_assert(offsetof(HUDMainOutGame_C_CheckEndAllMessage, CallFunc_CheckEndAllMessage_IsEnd) == 0x000002, "Member 'HUDMainOutGame_C_CheckEndAllMessage::CallFunc_CheckEndAllMessage_IsEnd' has a wrong offset!");

// Function HUDMainOutGame.HUDMainOutGame_C.Init
// 0x0018 (0x0018 - 0x0000)
struct HUDMainOutGame_C_Init final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          _IsEnableInit;                                     // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E96[0x5];                                     // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_ui_Loading_1_C*                     CallFunc_Create_ReturnValue;                       // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E97[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HUDMainOutGame_C_Init) == 0x000008, "Wrong alignment on HUDMainOutGame_C_Init");
static_assert(sizeof(HUDMainOutGame_C_Init) == 0x000018, "Wrong size on HUDMainOutGame_C_Init");
static_assert(offsetof(HUDMainOutGame_C_Init, ReturnValue) == 0x000000, "Member 'HUDMainOutGame_C_Init::ReturnValue' has a wrong offset!");
static_assert(offsetof(HUDMainOutGame_C_Init, _IsEnableInit) == 0x000001, "Member 'HUDMainOutGame_C_Init::_IsEnableInit' has a wrong offset!");
static_assert(offsetof(HUDMainOutGame_C_Init, CallFunc_IsValid_ReturnValue) == 0x000002, "Member 'HUDMainOutGame_C_Init::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUDMainOutGame_C_Init, CallFunc_Create_ReturnValue) == 0x000008, "Member 'HUDMainOutGame_C_Init::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUDMainOutGame_C_Init, CallFunc_MakeLiteralByte_ReturnValue) == 0x000010, "Member 'HUDMainOutGame_C_Init::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUDMainOutGame_C_Init, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000014, "Member 'HUDMainOutGame_C_Init::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");

// Function HUDMainOutGame.HUDMainOutGame_C.GetMessageVoice
// 0x0008 (0x0008 - 0x0000)
struct HUDMainOutGame_C_GetMessageVoice final
{
public:
	class URSAtomComponentBase*                   ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HUDMainOutGame_C_GetMessageVoice) == 0x000008, "Wrong alignment on HUDMainOutGame_C_GetMessageVoice");
static_assert(sizeof(HUDMainOutGame_C_GetMessageVoice) == 0x000008, "Wrong size on HUDMainOutGame_C_GetMessageVoice");
static_assert(offsetof(HUDMainOutGame_C_GetMessageVoice, ReturnValue) == 0x000000, "Member 'HUDMainOutGame_C_GetMessageVoice::ReturnValue' has a wrong offset!");

// Function HUDMainOutGame.HUDMainOutGame_C.SetSkipAllMessage
// 0x0001 (0x0001 - 0x0000)
struct HUDMainOutGame_C_SetSkipAllMessage final
{
public:
	bool                                          IsSkip;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HUDMainOutGame_C_SetSkipAllMessage) == 0x000001, "Wrong alignment on HUDMainOutGame_C_SetSkipAllMessage");
static_assert(sizeof(HUDMainOutGame_C_SetSkipAllMessage) == 0x000001, "Wrong size on HUDMainOutGame_C_SetSkipAllMessage");
static_assert(offsetof(HUDMainOutGame_C_SetSkipAllMessage, IsSkip) == 0x000000, "Member 'HUDMainOutGame_C_SetSkipAllMessage::IsSkip' has a wrong offset!");

// Function HUDMainOutGame.HUDMainOutGame_C.IsValidMessageVoiceToMessageBuffer
// 0x002C (0x002C - 0x0000)
struct HUDMainOutGame_C_IsValidMessageVoiceToMessageBuffer final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          IsValidVoice;                                      // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E98[0x1];                                     // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E99[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E9A[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E9B[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E9C[0x2];                                     // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HUDMainOutGame_C_IsValidMessageVoiceToMessageBuffer) == 0x000004, "Wrong alignment on HUDMainOutGame_C_IsValidMessageVoiceToMessageBuffer");
static_assert(sizeof(HUDMainOutGame_C_IsValidMessageVoiceToMessageBuffer) == 0x00002C, "Wrong size on HUDMainOutGame_C_IsValidMessageVoiceToMessageBuffer");
static_assert(offsetof(HUDMainOutGame_C_IsValidMessageVoiceToMessageBuffer, ReturnValue) == 0x000000, "Member 'HUDMainOutGame_C_IsValidMessageVoiceToMessageBuffer::ReturnValue' has a wrong offset!");
static_assert(offsetof(HUDMainOutGame_C_IsValidMessageVoiceToMessageBuffer, IsValidVoice) == 0x000001, "Member 'HUDMainOutGame_C_IsValidMessageVoiceToMessageBuffer::IsValidVoice' has a wrong offset!");
static_assert(offsetof(HUDMainOutGame_C_IsValidMessageVoiceToMessageBuffer, Temp_bool_True_if_break_was_hit_Variable) == 0x000002, "Member 'HUDMainOutGame_C_IsValidMessageVoiceToMessageBuffer::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(HUDMainOutGame_C_IsValidMessageVoiceToMessageBuffer, Temp_int_Array_Index_Variable) == 0x000004, "Member 'HUDMainOutGame_C_IsValidMessageVoiceToMessageBuffer::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(HUDMainOutGame_C_IsValidMessageVoiceToMessageBuffer, CallFunc_Not_PreBool_ReturnValue) == 0x000008, "Member 'HUDMainOutGame_C_IsValidMessageVoiceToMessageBuffer::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUDMainOutGame_C_IsValidMessageVoiceToMessageBuffer, Temp_int_Loop_Num_Variable) == 0x00000C, "Member 'HUDMainOutGame_C_IsValidMessageVoiceToMessageBuffer::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(HUDMainOutGame_C_IsValidMessageVoiceToMessageBuffer, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'HUDMainOutGame_C_IsValidMessageVoiceToMessageBuffer::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(HUDMainOutGame_C_IsValidMessageVoiceToMessageBuffer, CallFunc_Less_IntInt_ReturnValue) == 0x000014, "Member 'HUDMainOutGame_C_IsValidMessageVoiceToMessageBuffer::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUDMainOutGame_C_IsValidMessageVoiceToMessageBuffer, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'HUDMainOutGame_C_IsValidMessageVoiceToMessageBuffer::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUDMainOutGame_C_IsValidMessageVoiceToMessageBuffer, CallFunc_BooleanAND_ReturnValue) == 0x00001C, "Member 'HUDMainOutGame_C_IsValidMessageVoiceToMessageBuffer::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUDMainOutGame_C_IsValidMessageVoiceToMessageBuffer, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'HUDMainOutGame_C_IsValidMessageVoiceToMessageBuffer::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUDMainOutGame_C_IsValidMessageVoiceToMessageBuffer, CallFunc_Greater_IntInt_ReturnValue) == 0x000024, "Member 'HUDMainOutGame_C_IsValidMessageVoiceToMessageBuffer::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUDMainOutGame_C_IsValidMessageVoiceToMessageBuffer, CallFunc_IsValid_ReturnValue) == 0x000025, "Member 'HUDMainOutGame_C_IsValidMessageVoiceToMessageBuffer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUDMainOutGame_C_IsValidMessageVoiceToMessageBuffer, CallFunc_Array_Length_ReturnValue_1) == 0x000028, "Member 'HUDMainOutGame_C_IsValidMessageVoiceToMessageBuffer::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");

// Function HUDMainOutGame.HUDMainOutGame_C.StartPhotoMode
// 0x0018 (0x0018 - 0x0000)
struct HUDMainOutGame_C_StartPhotoMode final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E9D[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SoundManager_C*                     CallFunc_GetSoundManager_SoundManager;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ChangeSoundState_ReturnValue;             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_StartPhotoMode_ReturnValue;               // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HUDMainOutGame_C_StartPhotoMode) == 0x000008, "Wrong alignment on HUDMainOutGame_C_StartPhotoMode");
static_assert(sizeof(HUDMainOutGame_C_StartPhotoMode) == 0x000018, "Wrong size on HUDMainOutGame_C_StartPhotoMode");
static_assert(offsetof(HUDMainOutGame_C_StartPhotoMode, ReturnValue) == 0x000000, "Member 'HUDMainOutGame_C_StartPhotoMode::ReturnValue' has a wrong offset!");
static_assert(offsetof(HUDMainOutGame_C_StartPhotoMode, CallFunc_GetSoundManager_SoundManager) == 0x000008, "Member 'HUDMainOutGame_C_StartPhotoMode::CallFunc_GetSoundManager_SoundManager' has a wrong offset!");
static_assert(offsetof(HUDMainOutGame_C_StartPhotoMode, CallFunc_ChangeSoundState_ReturnValue) == 0x000010, "Member 'HUDMainOutGame_C_StartPhotoMode::CallFunc_ChangeSoundState_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUDMainOutGame_C_StartPhotoMode, CallFunc_StartPhotoMode_ReturnValue) == 0x000011, "Member 'HUDMainOutGame_C_StartPhotoMode::CallFunc_StartPhotoMode_ReturnValue' has a wrong offset!");

// Function HUDMainOutGame.HUDMainOutGame_C.EndPhotoMode
// 0x0018 (0x0018 - 0x0000)
struct HUDMainOutGame_C_EndPhotoMode final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E9E[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SoundManager_C*                     CallFunc_GetSoundManager_SoundManager;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ChangeSoundState_ReturnValue;             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EndPhotoMode_ReturnValue;                 // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HUDMainOutGame_C_EndPhotoMode) == 0x000008, "Wrong alignment on HUDMainOutGame_C_EndPhotoMode");
static_assert(sizeof(HUDMainOutGame_C_EndPhotoMode) == 0x000018, "Wrong size on HUDMainOutGame_C_EndPhotoMode");
static_assert(offsetof(HUDMainOutGame_C_EndPhotoMode, ReturnValue) == 0x000000, "Member 'HUDMainOutGame_C_EndPhotoMode::ReturnValue' has a wrong offset!");
static_assert(offsetof(HUDMainOutGame_C_EndPhotoMode, CallFunc_GetSoundManager_SoundManager) == 0x000008, "Member 'HUDMainOutGame_C_EndPhotoMode::CallFunc_GetSoundManager_SoundManager' has a wrong offset!");
static_assert(offsetof(HUDMainOutGame_C_EndPhotoMode, CallFunc_ChangeSoundState_ReturnValue) == 0x000010, "Member 'HUDMainOutGame_C_EndPhotoMode::CallFunc_ChangeSoundState_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUDMainOutGame_C_EndPhotoMode, CallFunc_EndPhotoMode_ReturnValue) == 0x000011, "Member 'HUDMainOutGame_C_EndPhotoMode::CallFunc_EndPhotoMode_ReturnValue' has a wrong offset!");

// Function HUDMainOutGame.HUDMainOutGame_C.IsEnableOpenPhotoMode
// 0x0030 (0x0030 - 0x0000)
struct HUDMainOutGame_C_IsEnableOpenPhotoMode final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          LbEnable;                                          // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E9F[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetEventManager_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFadeAnimation_ReturnValue;              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3EA0[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AEventManager*                          K2Node_DynamicCast_AsEvent_Manager;                // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsFade_ReturnValue;                       // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsTalkEvent_ReturnValue;                  // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsCutSceneEventNative_ReturnValue;        // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlaying_IsPlaying;                      // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HUDMainOutGame_C_IsEnableOpenPhotoMode) == 0x000008, "Wrong alignment on HUDMainOutGame_C_IsEnableOpenPhotoMode");
static_assert(sizeof(HUDMainOutGame_C_IsEnableOpenPhotoMode) == 0x000030, "Wrong size on HUDMainOutGame_C_IsEnableOpenPhotoMode");
static_assert(offsetof(HUDMainOutGame_C_IsEnableOpenPhotoMode, ReturnValue) == 0x000000, "Member 'HUDMainOutGame_C_IsEnableOpenPhotoMode::ReturnValue' has a wrong offset!");
static_assert(offsetof(HUDMainOutGame_C_IsEnableOpenPhotoMode, LbEnable) == 0x000001, "Member 'HUDMainOutGame_C_IsEnableOpenPhotoMode::LbEnable' has a wrong offset!");
static_assert(offsetof(HUDMainOutGame_C_IsEnableOpenPhotoMode, CallFunc_GetEventManager_ReturnValue) == 0x000008, "Member 'HUDMainOutGame_C_IsEnableOpenPhotoMode::CallFunc_GetEventManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUDMainOutGame_C_IsEnableOpenPhotoMode, CallFunc_IsFadeAnimation_ReturnValue) == 0x000010, "Member 'HUDMainOutGame_C_IsEnableOpenPhotoMode::CallFunc_IsFadeAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUDMainOutGame_C_IsEnableOpenPhotoMode, K2Node_DynamicCast_AsEvent_Manager) == 0x000018, "Member 'HUDMainOutGame_C_IsEnableOpenPhotoMode::K2Node_DynamicCast_AsEvent_Manager' has a wrong offset!");
static_assert(offsetof(HUDMainOutGame_C_IsEnableOpenPhotoMode, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'HUDMainOutGame_C_IsEnableOpenPhotoMode::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(HUDMainOutGame_C_IsEnableOpenPhotoMode, CallFunc_IsFade_ReturnValue) == 0x000021, "Member 'HUDMainOutGame_C_IsEnableOpenPhotoMode::CallFunc_IsFade_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUDMainOutGame_C_IsEnableOpenPhotoMode, CallFunc_IsValid_ReturnValue) == 0x000022, "Member 'HUDMainOutGame_C_IsEnableOpenPhotoMode::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUDMainOutGame_C_IsEnableOpenPhotoMode, CallFunc_IsTalkEvent_ReturnValue) == 0x000023, "Member 'HUDMainOutGame_C_IsEnableOpenPhotoMode::CallFunc_IsTalkEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUDMainOutGame_C_IsEnableOpenPhotoMode, CallFunc_IsCutSceneEventNative_ReturnValue) == 0x000024, "Member 'HUDMainOutGame_C_IsEnableOpenPhotoMode::CallFunc_IsCutSceneEventNative_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUDMainOutGame_C_IsEnableOpenPhotoMode, CallFunc_IsPlaying_IsPlaying) == 0x000025, "Member 'HUDMainOutGame_C_IsEnableOpenPhotoMode::CallFunc_IsPlaying_IsPlaying' has a wrong offset!");
static_assert(offsetof(HUDMainOutGame_C_IsEnableOpenPhotoMode, CallFunc_BooleanOR_ReturnValue) == 0x000026, "Member 'HUDMainOutGame_C_IsEnableOpenPhotoMode::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUDMainOutGame_C_IsEnableOpenPhotoMode, CallFunc_BooleanOR_ReturnValue_1) == 0x000027, "Member 'HUDMainOutGame_C_IsEnableOpenPhotoMode::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(HUDMainOutGame_C_IsEnableOpenPhotoMode, CallFunc_Not_PreBool_ReturnValue) == 0x000028, "Member 'HUDMainOutGame_C_IsEnableOpenPhotoMode::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function HUDMainOutGame.HUDMainOutGame_C.CanPlayCutScene_FromNative
// 0x0002 (0x0002 - 0x0000)
struct HUDMainOutGame_C_CanPlayCutScene_FromNative final
{
public:
	bool                                          IsTipsCheck;                                       // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HUDMainOutGame_C_CanPlayCutScene_FromNative) == 0x000001, "Wrong alignment on HUDMainOutGame_C_CanPlayCutScene_FromNative");
static_assert(sizeof(HUDMainOutGame_C_CanPlayCutScene_FromNative) == 0x000002, "Wrong size on HUDMainOutGame_C_CanPlayCutScene_FromNative");
static_assert(offsetof(HUDMainOutGame_C_CanPlayCutScene_FromNative, IsTipsCheck) == 0x000000, "Member 'HUDMainOutGame_C_CanPlayCutScene_FromNative::IsTipsCheck' has a wrong offset!");
static_assert(offsetof(HUDMainOutGame_C_CanPlayCutScene_FromNative, ReturnValue) == 0x000001, "Member 'HUDMainOutGame_C_CanPlayCutScene_FromNative::ReturnValue' has a wrong offset!");

// Function HUDMainOutGame.HUDMainOutGame_C.CloseMessageGuide
// 0x0001 (0x0001 - 0x0000)
struct HUDMainOutGame_C_CloseMessageGuide final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HUDMainOutGame_C_CloseMessageGuide) == 0x000001, "Wrong alignment on HUDMainOutGame_C_CloseMessageGuide");
static_assert(sizeof(HUDMainOutGame_C_CloseMessageGuide) == 0x000001, "Wrong size on HUDMainOutGame_C_CloseMessageGuide");
static_assert(offsetof(HUDMainOutGame_C_CloseMessageGuide, ReturnValue) == 0x000000, "Member 'HUDMainOutGame_C_CloseMessageGuide::ReturnValue' has a wrong offset!");

// Function HUDMainOutGame.HUDMainOutGame_C.StartMessageGuide
// 0x0003 (0x0003 - 0x0000)
struct HUDMainOutGame_C_StartMessageGuide final
{
public:
	bool                                          FlagSkip;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          FlagPhotoMode;                                     // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ReturnValue;                                       // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HUDMainOutGame_C_StartMessageGuide) == 0x000001, "Wrong alignment on HUDMainOutGame_C_StartMessageGuide");
static_assert(sizeof(HUDMainOutGame_C_StartMessageGuide) == 0x000003, "Wrong size on HUDMainOutGame_C_StartMessageGuide");
static_assert(offsetof(HUDMainOutGame_C_StartMessageGuide, FlagSkip) == 0x000000, "Member 'HUDMainOutGame_C_StartMessageGuide::FlagSkip' has a wrong offset!");
static_assert(offsetof(HUDMainOutGame_C_StartMessageGuide, FlagPhotoMode) == 0x000001, "Member 'HUDMainOutGame_C_StartMessageGuide::FlagPhotoMode' has a wrong offset!");
static_assert(offsetof(HUDMainOutGame_C_StartMessageGuide, ReturnValue) == 0x000002, "Member 'HUDMainOutGame_C_StartMessageGuide::ReturnValue' has a wrong offset!");

// Function HUDMainOutGame.HUDMainOutGame_C.StartLoading
// 0x0008 (0x0008 - 0x0000)
struct HUDMainOutGame_C_StartLoading final
{
public:
	bool                                          IsFadeWhite;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3EA1[0x1];                                     // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HUDMainOutGame_C_StartLoading) == 0x000004, "Wrong alignment on HUDMainOutGame_C_StartLoading");
static_assert(sizeof(HUDMainOutGame_C_StartLoading) == 0x000008, "Wrong size on HUDMainOutGame_C_StartLoading");
static_assert(offsetof(HUDMainOutGame_C_StartLoading, IsFadeWhite) == 0x000000, "Member 'HUDMainOutGame_C_StartLoading::IsFadeWhite' has a wrong offset!");
static_assert(offsetof(HUDMainOutGame_C_StartLoading, ReturnValue) == 0x000001, "Member 'HUDMainOutGame_C_StartLoading::ReturnValue' has a wrong offset!");
static_assert(offsetof(HUDMainOutGame_C_StartLoading, CallFunc_MakeLiteralByte_ReturnValue) == 0x000002, "Member 'HUDMainOutGame_C_StartLoading::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUDMainOutGame_C_StartLoading, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000004, "Member 'HUDMainOutGame_C_StartLoading::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");

// Function HUDMainOutGame.HUDMainOutGame_C.EndLoading
// 0x0018 (0x0018 - 0x0000)
struct HUDMainOutGame_C_EndLoading final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3EA2[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URSAccountManager*                      CallFunc_GetRSAccountManager_RSAcountManager;      // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HUDMainOutGame_C_EndLoading) == 0x000008, "Wrong alignment on HUDMainOutGame_C_EndLoading");
static_assert(sizeof(HUDMainOutGame_C_EndLoading) == 0x000018, "Wrong size on HUDMainOutGame_C_EndLoading");
static_assert(offsetof(HUDMainOutGame_C_EndLoading, ReturnValue) == 0x000000, "Member 'HUDMainOutGame_C_EndLoading::ReturnValue' has a wrong offset!");
static_assert(offsetof(HUDMainOutGame_C_EndLoading, CallFunc_GetRSAccountManager_RSAcountManager) == 0x000008, "Member 'HUDMainOutGame_C_EndLoading::CallFunc_GetRSAccountManager_RSAcountManager' has a wrong offset!");
static_assert(offsetof(HUDMainOutGame_C_EndLoading, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'HUDMainOutGame_C_EndLoading::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function HUDMainOutGame.HUDMainOutGame_C.IsDrawMessageGuide
// 0x0002 (0x0002 - 0x0000)
struct HUDMainOutGame_C_IsDrawMessageGuide final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlaying_IsPlaying;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HUDMainOutGame_C_IsDrawMessageGuide) == 0x000001, "Wrong alignment on HUDMainOutGame_C_IsDrawMessageGuide");
static_assert(sizeof(HUDMainOutGame_C_IsDrawMessageGuide) == 0x000002, "Wrong size on HUDMainOutGame_C_IsDrawMessageGuide");
static_assert(offsetof(HUDMainOutGame_C_IsDrawMessageGuide, ReturnValue) == 0x000000, "Member 'HUDMainOutGame_C_IsDrawMessageGuide::ReturnValue' has a wrong offset!");
static_assert(offsetof(HUDMainOutGame_C_IsDrawMessageGuide, CallFunc_IsPlaying_IsPlaying) == 0x000001, "Member 'HUDMainOutGame_C_IsDrawMessageGuide::CallFunc_IsPlaying_IsPlaying' has a wrong offset!");

}

