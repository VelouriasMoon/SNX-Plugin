#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PostProcessOverrayScreenLight

#include "Basic.hpp"

#include "BP_PostProcessOverrayBase_classes.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_PostProcessOverrayScreenLight.BP_PostProcessOverrayScreenLight_C
// 0x0020 (0x02A0 - 0x0280)
class ABP_PostProcessOverrayScreenLight_C final : public ABP_PostProcessOverrayBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_PostProcessOverrayScreenLight_C; // 0x0280(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FLinearColor                           Color;                                             // 0x0288(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	float                                         Intensity;                                         // 0x0298(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	float                                         Size;                                              // 0x029C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_PostProcessOverrayScreenLight(int32 EntryPoint);
	void RemoveSystem();
	void AddSystem();
	void UserConstructionScript();
	void CalcRate(const struct FVector& CameraVector, const struct FRotator& CameraRotation, float* Rate);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_PostProcessOverrayScreenLight_C">();
	}
	static class ABP_PostProcessOverrayScreenLight_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_PostProcessOverrayScreenLight_C>();
	}
};
static_assert(alignof(ABP_PostProcessOverrayScreenLight_C) == 0x000008, "Wrong alignment on ABP_PostProcessOverrayScreenLight_C");
static_assert(sizeof(ABP_PostProcessOverrayScreenLight_C) == 0x0002A0, "Wrong size on ABP_PostProcessOverrayScreenLight_C");
static_assert(offsetof(ABP_PostProcessOverrayScreenLight_C, UberGraphFrame_BP_PostProcessOverrayScreenLight_C) == 0x000280, "Member 'ABP_PostProcessOverrayScreenLight_C::UberGraphFrame_BP_PostProcessOverrayScreenLight_C' has a wrong offset!");
static_assert(offsetof(ABP_PostProcessOverrayScreenLight_C, Color) == 0x000288, "Member 'ABP_PostProcessOverrayScreenLight_C::Color' has a wrong offset!");
static_assert(offsetof(ABP_PostProcessOverrayScreenLight_C, Intensity) == 0x000298, "Member 'ABP_PostProcessOverrayScreenLight_C::Intensity' has a wrong offset!");
static_assert(offsetof(ABP_PostProcessOverrayScreenLight_C, Size) == 0x00029C, "Member 'ABP_PostProcessOverrayScreenLight_C::Size' has a wrong offset!");

}

