#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DamagePostEffectComponent

#include "Basic.hpp"


namespace SDK::Params
{

// Function DamagePostEffectComponent.DamagePostEffectComponent_C.ExecuteUbergraph_DamagePostEffectComponent
// 0x0020 (0x0020 - 0x0000)
struct DamagePostEffectComponent_C_ExecuteUbergraph_DamagePostEffectComponent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_413C[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattlePlayer_C*                      K2Node_DynamicCast_AsRSBattle_Player;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_413D[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DamagePostEffectComponent_C_ExecuteUbergraph_DamagePostEffectComponent) == 0x000008, "Wrong alignment on DamagePostEffectComponent_C_ExecuteUbergraph_DamagePostEffectComponent");
static_assert(sizeof(DamagePostEffectComponent_C_ExecuteUbergraph_DamagePostEffectComponent) == 0x000020, "Wrong size on DamagePostEffectComponent_C_ExecuteUbergraph_DamagePostEffectComponent");
static_assert(offsetof(DamagePostEffectComponent_C_ExecuteUbergraph_DamagePostEffectComponent, EntryPoint) == 0x000000, "Member 'DamagePostEffectComponent_C_ExecuteUbergraph_DamagePostEffectComponent::EntryPoint' has a wrong offset!");
static_assert(offsetof(DamagePostEffectComponent_C_ExecuteUbergraph_DamagePostEffectComponent, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'DamagePostEffectComponent_C_ExecuteUbergraph_DamagePostEffectComponent::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(DamagePostEffectComponent_C_ExecuteUbergraph_DamagePostEffectComponent, K2Node_DynamicCast_AsRSBattle_Player) == 0x000010, "Member 'DamagePostEffectComponent_C_ExecuteUbergraph_DamagePostEffectComponent::K2Node_DynamicCast_AsRSBattle_Player' has a wrong offset!");
static_assert(offsetof(DamagePostEffectComponent_C_ExecuteUbergraph_DamagePostEffectComponent, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'DamagePostEffectComponent_C_ExecuteUbergraph_DamagePostEffectComponent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(DamagePostEffectComponent_C_ExecuteUbergraph_DamagePostEffectComponent, K2Node_Event_DeltaSeconds) == 0x00001C, "Member 'DamagePostEffectComponent_C_ExecuteUbergraph_DamagePostEffectComponent::K2Node_Event_DeltaSeconds' has a wrong offset!");

// Function DamagePostEffectComponent.DamagePostEffectComponent_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct DamagePostEffectComponent_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DamagePostEffectComponent_C_ReceiveTick) == 0x000004, "Wrong alignment on DamagePostEffectComponent_C_ReceiveTick");
static_assert(sizeof(DamagePostEffectComponent_C_ReceiveTick) == 0x000004, "Wrong size on DamagePostEffectComponent_C_ReceiveTick");
static_assert(offsetof(DamagePostEffectComponent_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'DamagePostEffectComponent_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function DamagePostEffectComponent.DamagePostEffectComponent_C.Setup
// 0x0004 (0x0004 - 0x0000)
struct DamagePostEffectComponent_C_Setup final
{
public:
	int32                                         HP;                                                // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DamagePostEffectComponent_C_Setup) == 0x000004, "Wrong alignment on DamagePostEffectComponent_C_Setup");
static_assert(sizeof(DamagePostEffectComponent_C_Setup) == 0x000004, "Wrong size on DamagePostEffectComponent_C_Setup");
static_assert(offsetof(DamagePostEffectComponent_C_Setup, HP) == 0x000000, "Member 'DamagePostEffectComponent_C_Setup::HP' has a wrong offset!");

// Function DamagePostEffectComponent.DamagePostEffectComponent_C.UpdatePostEffect
// 0x0034 (0x0034 - 0x0000)
struct DamagePostEffectComponent_C_UpdatePostEffect final
{
public:
	int32                                         HP;                                                // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LPrev;                                             // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LPower;                                            // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LMaxHP;                                            // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_413E[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEnable_ReturnValue;                     // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnable_ReturnValue_1;                   // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_MathExpression_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_413F[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Ease_ReturnValue;                         // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMaxHp_ReturnValue;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsControlAI_bAI;                          // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4140[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DamagePostEffectComponent_C_UpdatePostEffect) == 0x000004, "Wrong alignment on DamagePostEffectComponent_C_UpdatePostEffect");
static_assert(sizeof(DamagePostEffectComponent_C_UpdatePostEffect) == 0x000034, "Wrong size on DamagePostEffectComponent_C_UpdatePostEffect");
static_assert(offsetof(DamagePostEffectComponent_C_UpdatePostEffect, HP) == 0x000000, "Member 'DamagePostEffectComponent_C_UpdatePostEffect::HP' has a wrong offset!");
static_assert(offsetof(DamagePostEffectComponent_C_UpdatePostEffect, LPrev) == 0x000004, "Member 'DamagePostEffectComponent_C_UpdatePostEffect::LPrev' has a wrong offset!");
static_assert(offsetof(DamagePostEffectComponent_C_UpdatePostEffect, LPower) == 0x000008, "Member 'DamagePostEffectComponent_C_UpdatePostEffect::LPower' has a wrong offset!");
static_assert(offsetof(DamagePostEffectComponent_C_UpdatePostEffect, LMaxHP) == 0x00000C, "Member 'DamagePostEffectComponent_C_UpdatePostEffect::LMaxHP' has a wrong offset!");
static_assert(offsetof(DamagePostEffectComponent_C_UpdatePostEffect, CallFunc_Less_IntInt_ReturnValue) == 0x000010, "Member 'DamagePostEffectComponent_C_UpdatePostEffect::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(DamagePostEffectComponent_C_UpdatePostEffect, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000014, "Member 'DamagePostEffectComponent_C_UpdatePostEffect::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(DamagePostEffectComponent_C_UpdatePostEffect, CallFunc_IsEnable_ReturnValue) == 0x000018, "Member 'DamagePostEffectComponent_C_UpdatePostEffect::CallFunc_IsEnable_ReturnValue' has a wrong offset!");
static_assert(offsetof(DamagePostEffectComponent_C_UpdatePostEffect, CallFunc_Not_PreBool_ReturnValue) == 0x000019, "Member 'DamagePostEffectComponent_C_UpdatePostEffect::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(DamagePostEffectComponent_C_UpdatePostEffect, CallFunc_IsEnable_ReturnValue_1) == 0x00001A, "Member 'DamagePostEffectComponent_C_UpdatePostEffect::CallFunc_IsEnable_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DamagePostEffectComponent_C_UpdatePostEffect, CallFunc_Not_PreBool_ReturnValue_1) == 0x00001B, "Member 'DamagePostEffectComponent_C_UpdatePostEffect::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DamagePostEffectComponent_C_UpdatePostEffect, K2Node_MathExpression_ReturnValue) == 0x00001C, "Member 'DamagePostEffectComponent_C_UpdatePostEffect::K2Node_MathExpression_ReturnValue' has a wrong offset!");
static_assert(offsetof(DamagePostEffectComponent_C_UpdatePostEffect, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000020, "Member 'DamagePostEffectComponent_C_UpdatePostEffect::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(DamagePostEffectComponent_C_UpdatePostEffect, CallFunc_Ease_ReturnValue) == 0x000024, "Member 'DamagePostEffectComponent_C_UpdatePostEffect::CallFunc_Ease_ReturnValue' has a wrong offset!");
static_assert(offsetof(DamagePostEffectComponent_C_UpdatePostEffect, CallFunc_GetMaxHp_ReturnValue) == 0x000028, "Member 'DamagePostEffectComponent_C_UpdatePostEffect::CallFunc_GetMaxHp_ReturnValue' has a wrong offset!");
static_assert(offsetof(DamagePostEffectComponent_C_UpdatePostEffect, CallFunc_IsControlAI_bAI) == 0x00002C, "Member 'DamagePostEffectComponent_C_UpdatePostEffect::CallFunc_IsControlAI_bAI' has a wrong offset!");
static_assert(offsetof(DamagePostEffectComponent_C_UpdatePostEffect, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000030, "Member 'DamagePostEffectComponent_C_UpdatePostEffect::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");

// Function DamagePostEffectComponent.DamagePostEffectComponent_C.TickUpdate
// 0x001C (0x001C - 0x0000)
struct DamagePostEffectComponent_C_TickUpdate final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOver_ReturnValue;                       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4141[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRate_ReturnValue;                      // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEnable_ReturnValue;                     // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsOver_ReturnValue_1;                     // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnable_ReturnValue_1;                   // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4142[0x1];                                     // 0x0013(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_MathExpression_ReturnValue;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOver_ReturnValue_2;                     // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnable_ReturnValue_2;                   // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(DamagePostEffectComponent_C_TickUpdate) == 0x000004, "Wrong alignment on DamagePostEffectComponent_C_TickUpdate");
static_assert(sizeof(DamagePostEffectComponent_C_TickUpdate) == 0x00001C, "Wrong size on DamagePostEffectComponent_C_TickUpdate");
static_assert(offsetof(DamagePostEffectComponent_C_TickUpdate, DeltaSeconds) == 0x000000, "Member 'DamagePostEffectComponent_C_TickUpdate::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(DamagePostEffectComponent_C_TickUpdate, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000004, "Member 'DamagePostEffectComponent_C_TickUpdate::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(DamagePostEffectComponent_C_TickUpdate, CallFunc_IsOver_ReturnValue) == 0x000008, "Member 'DamagePostEffectComponent_C_TickUpdate::CallFunc_IsOver_ReturnValue' has a wrong offset!");
static_assert(offsetof(DamagePostEffectComponent_C_TickUpdate, CallFunc_GetRate_ReturnValue) == 0x00000C, "Member 'DamagePostEffectComponent_C_TickUpdate::CallFunc_GetRate_ReturnValue' has a wrong offset!");
static_assert(offsetof(DamagePostEffectComponent_C_TickUpdate, CallFunc_IsEnable_ReturnValue) == 0x000010, "Member 'DamagePostEffectComponent_C_TickUpdate::CallFunc_IsEnable_ReturnValue' has a wrong offset!");
static_assert(offsetof(DamagePostEffectComponent_C_TickUpdate, CallFunc_IsOver_ReturnValue_1) == 0x000011, "Member 'DamagePostEffectComponent_C_TickUpdate::CallFunc_IsOver_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DamagePostEffectComponent_C_TickUpdate, CallFunc_IsEnable_ReturnValue_1) == 0x000012, "Member 'DamagePostEffectComponent_C_TickUpdate::CallFunc_IsEnable_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DamagePostEffectComponent_C_TickUpdate, K2Node_MathExpression_ReturnValue) == 0x000014, "Member 'DamagePostEffectComponent_C_TickUpdate::K2Node_MathExpression_ReturnValue' has a wrong offset!");
static_assert(offsetof(DamagePostEffectComponent_C_TickUpdate, CallFunc_IsOver_ReturnValue_2) == 0x000018, "Member 'DamagePostEffectComponent_C_TickUpdate::CallFunc_IsOver_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(DamagePostEffectComponent_C_TickUpdate, CallFunc_IsEnable_ReturnValue_2) == 0x000019, "Member 'DamagePostEffectComponent_C_TickUpdate::CallFunc_IsEnable_ReturnValue_2' has a wrong offset!");

// Function DamagePostEffectComponent.DamagePostEffectComponent_C.SetRestHpEffectPower
// 0x0018 (0x0018 - 0x0000)
struct DamagePostEffectComponent_C_SetRestHpEffectPower final
{
public:
	float                                         Power;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4143[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PostProcessManager_C*               CallFunc_GetPostProcessManager_Manager;            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(DamagePostEffectComponent_C_SetRestHpEffectPower) == 0x000008, "Wrong alignment on DamagePostEffectComponent_C_SetRestHpEffectPower");
static_assert(sizeof(DamagePostEffectComponent_C_SetRestHpEffectPower) == 0x000018, "Wrong size on DamagePostEffectComponent_C_SetRestHpEffectPower");
static_assert(offsetof(DamagePostEffectComponent_C_SetRestHpEffectPower, Power) == 0x000000, "Member 'DamagePostEffectComponent_C_SetRestHpEffectPower::Power' has a wrong offset!");
static_assert(offsetof(DamagePostEffectComponent_C_SetRestHpEffectPower, CallFunc_GetPostProcessManager_Manager) == 0x000008, "Member 'DamagePostEffectComponent_C_SetRestHpEffectPower::CallFunc_GetPostProcessManager_Manager' has a wrong offset!");
static_assert(offsetof(DamagePostEffectComponent_C_SetRestHpEffectPower, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'DamagePostEffectComponent_C_SetRestHpEffectPower::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function DamagePostEffectComponent.DamagePostEffectComponent_C.SetDamageFlashEffectPower
// 0x0010 (0x0010 - 0x0000)
struct DamagePostEffectComponent_C_SetDamageFlashEffectPower final
{
public:
	float                                         Power;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4144[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PostProcessManager_C*               CallFunc_GetPostProcessManager_Manager;            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DamagePostEffectComponent_C_SetDamageFlashEffectPower) == 0x000008, "Wrong alignment on DamagePostEffectComponent_C_SetDamageFlashEffectPower");
static_assert(sizeof(DamagePostEffectComponent_C_SetDamageFlashEffectPower) == 0x000010, "Wrong size on DamagePostEffectComponent_C_SetDamageFlashEffectPower");
static_assert(offsetof(DamagePostEffectComponent_C_SetDamageFlashEffectPower, Power) == 0x000000, "Member 'DamagePostEffectComponent_C_SetDamageFlashEffectPower::Power' has a wrong offset!");
static_assert(offsetof(DamagePostEffectComponent_C_SetDamageFlashEffectPower, CallFunc_GetPostProcessManager_Manager) == 0x000008, "Member 'DamagePostEffectComponent_C_SetDamageFlashEffectPower::CallFunc_GetPostProcessManager_Manager' has a wrong offset!");

// Function DamagePostEffectComponent.DamagePostEffectComponent_C.SetEnableDamagePostEffect
// 0x0001 (0x0001 - 0x0000)
struct DamagePostEffectComponent_C_SetEnableDamagePostEffect final
{
public:
	bool                                          Param_bEnable;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(DamagePostEffectComponent_C_SetEnableDamagePostEffect) == 0x000001, "Wrong alignment on DamagePostEffectComponent_C_SetEnableDamagePostEffect");
static_assert(sizeof(DamagePostEffectComponent_C_SetEnableDamagePostEffect) == 0x000001, "Wrong size on DamagePostEffectComponent_C_SetEnableDamagePostEffect");
static_assert(offsetof(DamagePostEffectComponent_C_SetEnableDamagePostEffect, Param_bEnable) == 0x000000, "Member 'DamagePostEffectComponent_C_SetEnableDamagePostEffect::Param_bEnable' has a wrong offset!");

}

