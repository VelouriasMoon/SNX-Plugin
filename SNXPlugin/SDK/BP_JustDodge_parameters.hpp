#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_JustDodge

#include "Basic.hpp"

#include "BattlePrototype_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_JustDodge.BP_JustDodge_C.ExecuteUbergraph_BP_JustDodge
// 0x0048 (0x0048 - 0x0000)
struct BP_JustDodge_C_ExecuteUbergraph_BP_JustDodge final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOver_ReturnValue;                       // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnable_ReturnValue;                     // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsOver_ReturnValue_1;                     // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5784[0x1];                                     // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5785[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARsBattleHero_C*                        K2Node_DynamicCast_AsRs_Battle_Hero;               // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5786[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsControlAI_bAI;                          // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5787[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_2;                   // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetInvalidDamage_Dummy;                   // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_JustDodge_C_ExecuteUbergraph_BP_JustDodge) == 0x000008, "Wrong alignment on BP_JustDodge_C_ExecuteUbergraph_BP_JustDodge");
static_assert(sizeof(BP_JustDodge_C_ExecuteUbergraph_BP_JustDodge) == 0x000048, "Wrong size on BP_JustDodge_C_ExecuteUbergraph_BP_JustDodge");
static_assert(offsetof(BP_JustDodge_C_ExecuteUbergraph_BP_JustDodge, EntryPoint) == 0x000000, "Member 'BP_JustDodge_C_ExecuteUbergraph_BP_JustDodge::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_JustDodge_C_ExecuteUbergraph_BP_JustDodge, CallFunc_IsOver_ReturnValue) == 0x000004, "Member 'BP_JustDodge_C_ExecuteUbergraph_BP_JustDodge::CallFunc_IsOver_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JustDodge_C_ExecuteUbergraph_BP_JustDodge, CallFunc_IsEnable_ReturnValue) == 0x000005, "Member 'BP_JustDodge_C_ExecuteUbergraph_BP_JustDodge::CallFunc_IsEnable_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JustDodge_C_ExecuteUbergraph_BP_JustDodge, CallFunc_IsOver_ReturnValue_1) == 0x000006, "Member 'BP_JustDodge_C_ExecuteUbergraph_BP_JustDodge::CallFunc_IsOver_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JustDodge_C_ExecuteUbergraph_BP_JustDodge, K2Node_Event_DeltaSeconds) == 0x000008, "Member 'BP_JustDodge_C_ExecuteUbergraph_BP_JustDodge::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_JustDodge_C_ExecuteUbergraph_BP_JustDodge, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'BP_JustDodge_C_ExecuteUbergraph_BP_JustDodge::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JustDodge_C_ExecuteUbergraph_BP_JustDodge, K2Node_DynamicCast_AsRs_Battle_Hero) == 0x000018, "Member 'BP_JustDodge_C_ExecuteUbergraph_BP_JustDodge::K2Node_DynamicCast_AsRs_Battle_Hero' has a wrong offset!");
static_assert(offsetof(BP_JustDodge_C_ExecuteUbergraph_BP_JustDodge, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_JustDodge_C_ExecuteUbergraph_BP_JustDodge::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_JustDodge_C_ExecuteUbergraph_BP_JustDodge, CallFunc_GetOwner_ReturnValue_1) == 0x000028, "Member 'BP_JustDodge_C_ExecuteUbergraph_BP_JustDodge::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JustDodge_C_ExecuteUbergraph_BP_JustDodge, CallFunc_IsControlAI_bAI) == 0x000030, "Member 'BP_JustDodge_C_ExecuteUbergraph_BP_JustDodge::CallFunc_IsControlAI_bAI' has a wrong offset!");
static_assert(offsetof(BP_JustDodge_C_ExecuteUbergraph_BP_JustDodge, CallFunc_GetOwner_ReturnValue_2) == 0x000038, "Member 'BP_JustDodge_C_ExecuteUbergraph_BP_JustDodge::CallFunc_GetOwner_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JustDodge_C_ExecuteUbergraph_BP_JustDodge, CallFunc_SetInvalidDamage_Dummy) == 0x000040, "Member 'BP_JustDodge_C_ExecuteUbergraph_BP_JustDodge::CallFunc_SetInvalidDamage_Dummy' has a wrong offset!");

// Function BP_JustDodge.BP_JustDodge_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_JustDodge_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JustDodge_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_JustDodge_C_ReceiveTick");
static_assert(sizeof(BP_JustDodge_C_ReceiveTick) == 0x000004, "Wrong size on BP_JustDodge_C_ReceiveTick");
static_assert(offsetof(BP_JustDodge_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_JustDodge_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_JustDodge.BP_JustDodge_C.Start
// 0x0078 (0x0078 - 0x0000)
struct BP_JustDodge_C_Start final
{
public:
	float                                         PrevElapsedTime;                                   // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CheckElapsedTime;                                  // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHitManager_C*                          CallFunc_GetHitManager_Manager;                    // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEnableNexusDriveSas_ReturnValue;        // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_1;       // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetValueRange_MinValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueRange_MaxValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckIntercept_bExistObject;              // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5788[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CalcJustDodgeByLocation_ReturnValue;      // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5789[0x2];                                     // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PostProcessManager_C*               CallFunc_GetPostProcessManager_Manager;            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBattleSituationComponent*              CallFunc_GetBattleSituation_BattleSituation;       // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_578A[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SoundManager_C*                     CallFunc_GetSoundManager_SoundManager;             // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetInvalidDamage_Dummy;                   // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FActionParameter                       K2Node_MakeStruct_ActionParameter;                 // 0x0051(0x0001)(NoDestructor)
	uint8                                         Pad_578B[0x6];                                     // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_GhostTrail_C>     K2Node_DynamicCast_AsBPI_Ghost_Trail;              // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_JustDodge_C_Start) == 0x000008, "Wrong alignment on BP_JustDodge_C_Start");
static_assert(sizeof(BP_JustDodge_C_Start) == 0x000078, "Wrong size on BP_JustDodge_C_Start");
static_assert(offsetof(BP_JustDodge_C_Start, PrevElapsedTime) == 0x000000, "Member 'BP_JustDodge_C_Start::PrevElapsedTime' has a wrong offset!");
static_assert(offsetof(BP_JustDodge_C_Start, CheckElapsedTime) == 0x000004, "Member 'BP_JustDodge_C_Start::CheckElapsedTime' has a wrong offset!");
static_assert(offsetof(BP_JustDodge_C_Start, CallFunc_GetHitManager_Manager) == 0x000008, "Member 'BP_JustDodge_C_Start::CallFunc_GetHitManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_JustDodge_C_Start, CallFunc_IsEnableNexusDriveSas_ReturnValue) == 0x000010, "Member 'BP_JustDodge_C_Start::CallFunc_IsEnableNexusDriveSas_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JustDodge_C_Start, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000011, "Member 'BP_JustDodge_C_Start::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JustDodge_C_Start, CallFunc_LessEqual_FloatFloat_ReturnValue_1) == 0x000012, "Member 'BP_JustDodge_C_Start::CallFunc_LessEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JustDodge_C_Start, CallFunc_IsValid_ReturnValue) == 0x000013, "Member 'BP_JustDodge_C_Start::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JustDodge_C_Start, CallFunc_GetValueRange_MinValue) == 0x000014, "Member 'BP_JustDodge_C_Start::CallFunc_GetValueRange_MinValue' has a wrong offset!");
static_assert(offsetof(BP_JustDodge_C_Start, CallFunc_GetValueRange_MaxValue) == 0x000018, "Member 'BP_JustDodge_C_Start::CallFunc_GetValueRange_MaxValue' has a wrong offset!");
static_assert(offsetof(BP_JustDodge_C_Start, CallFunc_CheckIntercept_bExistObject) == 0x00001C, "Member 'BP_JustDodge_C_Start::CallFunc_CheckIntercept_bExistObject' has a wrong offset!");
static_assert(offsetof(BP_JustDodge_C_Start, CallFunc_MakeVector_ReturnValue) == 0x000020, "Member 'BP_JustDodge_C_Start::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JustDodge_C_Start, CallFunc_CalcJustDodgeByLocation_ReturnValue) == 0x00002C, "Member 'BP_JustDodge_C_Start::CallFunc_CalcJustDodgeByLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JustDodge_C_Start, CallFunc_IsValid_ReturnValue_1) == 0x00002D, "Member 'BP_JustDodge_C_Start::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JustDodge_C_Start, CallFunc_GetPostProcessManager_Manager) == 0x000030, "Member 'BP_JustDodge_C_Start::CallFunc_GetPostProcessManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_JustDodge_C_Start, CallFunc_GetBattleSituation_BattleSituation) == 0x000038, "Member 'BP_JustDodge_C_Start::CallFunc_GetBattleSituation_BattleSituation' has a wrong offset!");
static_assert(offsetof(BP_JustDodge_C_Start, CallFunc_IsValid_ReturnValue_2) == 0x000040, "Member 'BP_JustDodge_C_Start::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JustDodge_C_Start, CallFunc_GetSoundManager_SoundManager) == 0x000048, "Member 'BP_JustDodge_C_Start::CallFunc_GetSoundManager_SoundManager' has a wrong offset!");
static_assert(offsetof(BP_JustDodge_C_Start, CallFunc_SetInvalidDamage_Dummy) == 0x000050, "Member 'BP_JustDodge_C_Start::CallFunc_SetInvalidDamage_Dummy' has a wrong offset!");
static_assert(offsetof(BP_JustDodge_C_Start, K2Node_MakeStruct_ActionParameter) == 0x000051, "Member 'BP_JustDodge_C_Start::K2Node_MakeStruct_ActionParameter' has a wrong offset!");
static_assert(offsetof(BP_JustDodge_C_Start, CallFunc_GetOwner_ReturnValue) == 0x000058, "Member 'BP_JustDodge_C_Start::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JustDodge_C_Start, K2Node_DynamicCast_AsBPI_Ghost_Trail) == 0x000060, "Member 'BP_JustDodge_C_Start::K2Node_DynamicCast_AsBPI_Ghost_Trail' has a wrong offset!");
static_assert(offsetof(BP_JustDodge_C_Start, K2Node_DynamicCast_bSuccess) == 0x000070, "Member 'BP_JustDodge_C_Start::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_JustDodge.BP_JustDodge_C.End
// 0x0020 (0x0020 - 0x0000)
struct BP_JustDodge_C_End final
{
public:
	class APsychicObjectManager_C*                CallFunc_GetPsychicObjectManager_PsyObjManager;    // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_SoundManager_C*                     CallFunc_GetSoundManager_SoundManager;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameSystemManager_C*                CallFunc_GetGameSystemManager_Manager;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DisplayTipsOrMiniTipsByHelpID_ReturnValue; // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEnable_ReturnValue;                     // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_RemoveGlobalCustomTimeDilation_Success;   // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_JustDodge_C_End) == 0x000008, "Wrong alignment on BP_JustDodge_C_End");
static_assert(sizeof(BP_JustDodge_C_End) == 0x000020, "Wrong size on BP_JustDodge_C_End");
static_assert(offsetof(BP_JustDodge_C_End, CallFunc_GetPsychicObjectManager_PsyObjManager) == 0x000000, "Member 'BP_JustDodge_C_End::CallFunc_GetPsychicObjectManager_PsyObjManager' has a wrong offset!");
static_assert(offsetof(BP_JustDodge_C_End, CallFunc_GetSoundManager_SoundManager) == 0x000008, "Member 'BP_JustDodge_C_End::CallFunc_GetSoundManager_SoundManager' has a wrong offset!");
static_assert(offsetof(BP_JustDodge_C_End, CallFunc_GetGameSystemManager_Manager) == 0x000010, "Member 'BP_JustDodge_C_End::CallFunc_GetGameSystemManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_JustDodge_C_End, CallFunc_DisplayTipsOrMiniTipsByHelpID_ReturnValue) == 0x000018, "Member 'BP_JustDodge_C_End::CallFunc_DisplayTipsOrMiniTipsByHelpID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JustDodge_C_End, CallFunc_IsEnable_ReturnValue) == 0x00001C, "Member 'BP_JustDodge_C_End::CallFunc_IsEnable_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JustDodge_C_End, CallFunc_RemoveGlobalCustomTimeDilation_Success) == 0x00001D, "Member 'BP_JustDodge_C_End::CallFunc_RemoveGlobalCustomTimeDilation_Success' has a wrong offset!");

// Function BP_JustDodge.BP_JustDodge_C.CheckJustDodge
// 0x0028 (0x0028 - 0x0000)
struct BP_JustDodge_C_CheckJustDodge final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_578C[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsExistDamage_bExist;                     // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActionStatus_Result;                    // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActionStatus_Result_1;                  // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_578D[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AHitManager_C*                          CallFunc_GetHitManager_Manager;                    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEnable_ReturnValue;                     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CalcJustDodgeByLocation_ReturnValue;      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_JustDodge_C_CheckJustDodge) == 0x000008, "Wrong alignment on BP_JustDodge_C_CheckJustDodge");
static_assert(sizeof(BP_JustDodge_C_CheckJustDodge) == 0x000028, "Wrong size on BP_JustDodge_C_CheckJustDodge");
static_assert(offsetof(BP_JustDodge_C_CheckJustDodge, ReturnValue) == 0x000000, "Member 'BP_JustDodge_C_CheckJustDodge::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JustDodge_C_CheckJustDodge, CallFunc_MakeVector_ReturnValue) == 0x000004, "Member 'BP_JustDodge_C_CheckJustDodge::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JustDodge_C_CheckJustDodge, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_JustDodge_C_CheckJustDodge::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JustDodge_C_CheckJustDodge, CallFunc_IsExistDamage_bExist) == 0x000011, "Member 'BP_JustDodge_C_CheckJustDodge::CallFunc_IsExistDamage_bExist' has a wrong offset!");
static_assert(offsetof(BP_JustDodge_C_CheckJustDodge, CallFunc_IsActionStatus_Result) == 0x000012, "Member 'BP_JustDodge_C_CheckJustDodge::CallFunc_IsActionStatus_Result' has a wrong offset!");
static_assert(offsetof(BP_JustDodge_C_CheckJustDodge, CallFunc_IsActionStatus_Result_1) == 0x000013, "Member 'BP_JustDodge_C_CheckJustDodge::CallFunc_IsActionStatus_Result_1' has a wrong offset!");
static_assert(offsetof(BP_JustDodge_C_CheckJustDodge, CallFunc_GetHitManager_Manager) == 0x000018, "Member 'BP_JustDodge_C_CheckJustDodge::CallFunc_GetHitManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_JustDodge_C_CheckJustDodge, CallFunc_IsEnable_ReturnValue) == 0x000020, "Member 'BP_JustDodge_C_CheckJustDodge::CallFunc_IsEnable_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JustDodge_C_CheckJustDodge, CallFunc_CalcJustDodgeByLocation_ReturnValue) == 0x000021, "Member 'BP_JustDodge_C_CheckJustDodge::CallFunc_CalcJustDodgeByLocation_ReturnValue' has a wrong offset!");

// Function BP_JustDodge.BP_JustDodge_C.UpdateTimeDilation
// 0x0038 (0x0038 - 0x0000)
struct BP_JustDodge_C_UpdateTimeDilation final
{
public:
	float                                         LGlobalTimeDilation;                               // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LTime;                                             // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_578E[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GameSystemManager_C*                CallFunc_GetGameSystemManager_Manager;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetGlobalCustomTimeDilation_CurrentCustomTimeDilation; // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetElapsedTime_ReturnValue;               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue_1;              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue_1;                       // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JustDodge_C_UpdateTimeDilation) == 0x000008, "Wrong alignment on BP_JustDodge_C_UpdateTimeDilation");
static_assert(sizeof(BP_JustDodge_C_UpdateTimeDilation) == 0x000038, "Wrong size on BP_JustDodge_C_UpdateTimeDilation");
static_assert(offsetof(BP_JustDodge_C_UpdateTimeDilation, LGlobalTimeDilation) == 0x000000, "Member 'BP_JustDodge_C_UpdateTimeDilation::LGlobalTimeDilation' has a wrong offset!");
static_assert(offsetof(BP_JustDodge_C_UpdateTimeDilation, LTime) == 0x000004, "Member 'BP_JustDodge_C_UpdateTimeDilation::LTime' has a wrong offset!");
static_assert(offsetof(BP_JustDodge_C_UpdateTimeDilation, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000008, "Member 'BP_JustDodge_C_UpdateTimeDilation::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JustDodge_C_UpdateTimeDilation, CallFunc_GetGameSystemManager_Manager) == 0x000010, "Member 'BP_JustDodge_C_UpdateTimeDilation::CallFunc_GetGameSystemManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_JustDodge_C_UpdateTimeDilation, CallFunc_SetGlobalCustomTimeDilation_CurrentCustomTimeDilation) == 0x000018, "Member 'BP_JustDodge_C_UpdateTimeDilation::CallFunc_SetGlobalCustomTimeDilation_CurrentCustomTimeDilation' has a wrong offset!");
static_assert(offsetof(BP_JustDodge_C_UpdateTimeDilation, CallFunc_GetFloatValue_ReturnValue) == 0x00001C, "Member 'BP_JustDodge_C_UpdateTimeDilation::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JustDodge_C_UpdateTimeDilation, CallFunc_FMax_ReturnValue) == 0x000020, "Member 'BP_JustDodge_C_UpdateTimeDilation::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JustDodge_C_UpdateTimeDilation, CallFunc_GetElapsedTime_ReturnValue) == 0x000024, "Member 'BP_JustDodge_C_UpdateTimeDilation::CallFunc_GetElapsedTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JustDodge_C_UpdateTimeDilation, CallFunc_GetFloatValue_ReturnValue_1) == 0x000028, "Member 'BP_JustDodge_C_UpdateTimeDilation::CallFunc_GetFloatValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JustDodge_C_UpdateTimeDilation, CallFunc_FMax_ReturnValue_1) == 0x00002C, "Member 'BP_JustDodge_C_UpdateTimeDilation::CallFunc_FMax_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JustDodge_C_UpdateTimeDilation, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000030, "Member 'BP_JustDodge_C_UpdateTimeDilation::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JustDodge_C_UpdateTimeDilation, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000034, "Member 'BP_JustDodge_C_UpdateTimeDilation::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_JustDodge.BP_JustDodge_C.RemoveTimeDilation
// 0x0010 (0x0010 - 0x0000)
struct BP_JustDodge_C_RemoveTimeDilation final
{
public:
	class ABP_GameSystemManager_C*                CallFunc_GetGameSystemManager_Manager;             // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveGlobalCustomTimeDilation_Success;   // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_578F[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JustDodge_C_RemoveTimeDilation) == 0x000008, "Wrong alignment on BP_JustDodge_C_RemoveTimeDilation");
static_assert(sizeof(BP_JustDodge_C_RemoveTimeDilation) == 0x000010, "Wrong size on BP_JustDodge_C_RemoveTimeDilation");
static_assert(offsetof(BP_JustDodge_C_RemoveTimeDilation, CallFunc_GetGameSystemManager_Manager) == 0x000000, "Member 'BP_JustDodge_C_RemoveTimeDilation::CallFunc_GetGameSystemManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_JustDodge_C_RemoveTimeDilation, CallFunc_RemoveGlobalCustomTimeDilation_Success) == 0x000008, "Member 'BP_JustDodge_C_RemoveTimeDilation::CallFunc_RemoveGlobalCustomTimeDilation_Success' has a wrong offset!");
static_assert(offsetof(BP_JustDodge_C_RemoveTimeDilation, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00000C, "Member 'BP_JustDodge_C_RemoveTimeDilation::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_JustDodge.BP_JustDodge_C.SettingCheckParameter
// 0x004C (0x004C - 0x0000)
struct BP_JustDodge_C_SettingCheckParameter final
{
public:
	bool                                          bSuccess;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          LbSuccess;                                         // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5790[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEnableSASEffect_bEnable;                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5791[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_IsEnableSASEffect_Param0;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_IsEnableSASEffect_Param1;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_IsEnableSASEffect_Param2;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_IsEnableSASEffect_Param3;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScaledCapsuleHalfHeight_ReturnValue;   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScaledCapsuleRadius_ReturnValue;       // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsControlAI_bAI;                          // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_JustDodge_C_SettingCheckParameter) == 0x000004, "Wrong alignment on BP_JustDodge_C_SettingCheckParameter");
static_assert(sizeof(BP_JustDodge_C_SettingCheckParameter) == 0x00004C, "Wrong size on BP_JustDodge_C_SettingCheckParameter");
static_assert(offsetof(BP_JustDodge_C_SettingCheckParameter, bSuccess) == 0x000000, "Member 'BP_JustDodge_C_SettingCheckParameter::bSuccess' has a wrong offset!");
static_assert(offsetof(BP_JustDodge_C_SettingCheckParameter, LbSuccess) == 0x000001, "Member 'BP_JustDodge_C_SettingCheckParameter::LbSuccess' has a wrong offset!");
static_assert(offsetof(BP_JustDodge_C_SettingCheckParameter, CallFunc_MakeVector_ReturnValue) == 0x000004, "Member 'BP_JustDodge_C_SettingCheckParameter::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JustDodge_C_SettingCheckParameter, CallFunc_IsEnableSASEffect_bEnable) == 0x000010, "Member 'BP_JustDodge_C_SettingCheckParameter::CallFunc_IsEnableSASEffect_bEnable' has a wrong offset!");
static_assert(offsetof(BP_JustDodge_C_SettingCheckParameter, CallFunc_IsEnableSASEffect_Param0) == 0x000014, "Member 'BP_JustDodge_C_SettingCheckParameter::CallFunc_IsEnableSASEffect_Param0' has a wrong offset!");
static_assert(offsetof(BP_JustDodge_C_SettingCheckParameter, CallFunc_IsEnableSASEffect_Param1) == 0x000018, "Member 'BP_JustDodge_C_SettingCheckParameter::CallFunc_IsEnableSASEffect_Param1' has a wrong offset!");
static_assert(offsetof(BP_JustDodge_C_SettingCheckParameter, CallFunc_IsEnableSASEffect_Param2) == 0x00001C, "Member 'BP_JustDodge_C_SettingCheckParameter::CallFunc_IsEnableSASEffect_Param2' has a wrong offset!");
static_assert(offsetof(BP_JustDodge_C_SettingCheckParameter, CallFunc_IsEnableSASEffect_Param3) == 0x000020, "Member 'BP_JustDodge_C_SettingCheckParameter::CallFunc_IsEnableSASEffect_Param3' has a wrong offset!");
static_assert(offsetof(BP_JustDodge_C_SettingCheckParameter, CallFunc_Add_FloatFloat_ReturnValue) == 0x000024, "Member 'BP_JustDodge_C_SettingCheckParameter::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JustDodge_C_SettingCheckParameter, CallFunc_GetScaledCapsuleHalfHeight_ReturnValue) == 0x000028, "Member 'BP_JustDodge_C_SettingCheckParameter::CallFunc_GetScaledCapsuleHalfHeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JustDodge_C_SettingCheckParameter, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x00002C, "Member 'BP_JustDodge_C_SettingCheckParameter::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JustDodge_C_SettingCheckParameter, CallFunc_GetScaledCapsuleRadius_ReturnValue) == 0x000030, "Member 'BP_JustDodge_C_SettingCheckParameter::CallFunc_GetScaledCapsuleRadius_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JustDodge_C_SettingCheckParameter, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000034, "Member 'BP_JustDodge_C_SettingCheckParameter::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JustDodge_C_SettingCheckParameter, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000040, "Member 'BP_JustDodge_C_SettingCheckParameter::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JustDodge_C_SettingCheckParameter, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x000044, "Member 'BP_JustDodge_C_SettingCheckParameter::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JustDodge_C_SettingCheckParameter, CallFunc_IsControlAI_bAI) == 0x000048, "Member 'BP_JustDodge_C_SettingCheckParameter::CallFunc_IsControlAI_bAI' has a wrong offset!");
static_assert(offsetof(BP_JustDodge_C_SettingCheckParameter, CallFunc_IsValid_ReturnValue) == 0x000049, "Member 'BP_JustDodge_C_SettingCheckParameter::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_JustDodge.BP_JustDodge_C.DebugDraw
// 0x0020 (0x0020 - 0x0000)
struct BP_JustDodge_C_DebugDraw final
{
public:
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_GetDebuggingManager_Manager;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_JustDodge_C_DebugDraw) == 0x000008, "Wrong alignment on BP_JustDodge_C_DebugDraw");
static_assert(sizeof(BP_JustDodge_C_DebugDraw) == 0x000020, "Wrong size on BP_JustDodge_C_DebugDraw");
static_assert(offsetof(BP_JustDodge_C_DebugDraw, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000000, "Member 'BP_JustDodge_C_DebugDraw::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JustDodge_C_DebugDraw, CallFunc_Add_FloatFloat_ReturnValue) == 0x000004, "Member 'BP_JustDodge_C_DebugDraw::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JustDodge_C_DebugDraw, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000008, "Member 'BP_JustDodge_C_DebugDraw::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JustDodge_C_DebugDraw, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x00000C, "Member 'BP_JustDodge_C_DebugDraw::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JustDodge_C_DebugDraw, CallFunc_GetDebuggingManager_Manager) == 0x000010, "Member 'BP_JustDodge_C_DebugDraw::CallFunc_GetDebuggingManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_JustDodge_C_DebugDraw, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_JustDodge_C_DebugDraw::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JustDodge_C_DebugDraw, CallFunc_IsValid_ReturnValue_1) == 0x000019, "Member 'BP_JustDodge_C_DebugDraw::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_JustDodge.BP_JustDodge_C.IsNexusDriveBestJustDodge
// 0x0001 (0x0001 - 0x0000)
struct BP_JustDodge_C_IsNexusDriveBestJustDodge final
{
public:
	bool                                          bBestJustDodge;                                    // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_JustDodge_C_IsNexusDriveBestJustDodge) == 0x000001, "Wrong alignment on BP_JustDodge_C_IsNexusDriveBestJustDodge");
static_assert(sizeof(BP_JustDodge_C_IsNexusDriveBestJustDodge) == 0x000001, "Wrong size on BP_JustDodge_C_IsNexusDriveBestJustDodge");
static_assert(offsetof(BP_JustDodge_C_IsNexusDriveBestJustDodge, bBestJustDodge) == 0x000000, "Member 'BP_JustDodge_C_IsNexusDriveBestJustDodge::bBestJustDodge' has a wrong offset!");

// Function BP_JustDodge.BP_JustDodge_C.NexusDriveBestJustDodge
// 0x0050 (0x0050 - 0x0000)
struct BP_JustDodge_C_NexusDriveBestJustDodge final
{
public:
	class ARSBattlePlayer_C*                      LPlayer;                                           // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ARSBattlePlayer_C*>              LPlayerList;                                       // 0x0008(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsControlAI_bAI;                          // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsCharacterDead_ReturnValue;              // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5792[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ARSBattlePlayer_C*>              CallFunc_GetPlayersAll_Player;                     // 0x0038(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_JustDodge_C_NexusDriveBestJustDodge) == 0x000008, "Wrong alignment on BP_JustDodge_C_NexusDriveBestJustDodge");
static_assert(sizeof(BP_JustDodge_C_NexusDriveBestJustDodge) == 0x000050, "Wrong size on BP_JustDodge_C_NexusDriveBestJustDodge");
static_assert(offsetof(BP_JustDodge_C_NexusDriveBestJustDodge, LPlayer) == 0x000000, "Member 'BP_JustDodge_C_NexusDriveBestJustDodge::LPlayer' has a wrong offset!");
static_assert(offsetof(BP_JustDodge_C_NexusDriveBestJustDodge, LPlayerList) == 0x000008, "Member 'BP_JustDodge_C_NexusDriveBestJustDodge::LPlayerList' has a wrong offset!");
static_assert(offsetof(BP_JustDodge_C_NexusDriveBestJustDodge, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BP_JustDodge_C_NexusDriveBestJustDodge::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_JustDodge_C_NexusDriveBestJustDodge, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'BP_JustDodge_C_NexusDriveBestJustDodge::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_JustDodge_C_NexusDriveBestJustDodge, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BP_JustDodge_C_NexusDriveBestJustDodge::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JustDodge_C_NexusDriveBestJustDodge, Temp_int_Loop_Num_Variable) == 0x000024, "Member 'BP_JustDodge_C_NexusDriveBestJustDodge::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_JustDodge_C_NexusDriveBestJustDodge, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'BP_JustDodge_C_NexusDriveBestJustDodge::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JustDodge_C_NexusDriveBestJustDodge, CallFunc_IsControlAI_bAI) == 0x000029, "Member 'BP_JustDodge_C_NexusDriveBestJustDodge::CallFunc_IsControlAI_bAI' has a wrong offset!");
static_assert(offsetof(BP_JustDodge_C_NexusDriveBestJustDodge, CallFunc_IsValid_ReturnValue) == 0x00002A, "Member 'BP_JustDodge_C_NexusDriveBestJustDodge::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JustDodge_C_NexusDriveBestJustDodge, CallFunc_IsCharacterDead_ReturnValue) == 0x00002B, "Member 'BP_JustDodge_C_NexusDriveBestJustDodge::CallFunc_IsCharacterDead_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JustDodge_C_NexusDriveBestJustDodge, CallFunc_GetPlayerManager_PlayerManager) == 0x000030, "Member 'BP_JustDodge_C_NexusDriveBestJustDodge::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_JustDodge_C_NexusDriveBestJustDodge, CallFunc_GetPlayersAll_Player) == 0x000038, "Member 'BP_JustDodge_C_NexusDriveBestJustDodge::CallFunc_GetPlayersAll_Player' has a wrong offset!");
static_assert(offsetof(BP_JustDodge_C_NexusDriveBestJustDodge, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'BP_JustDodge_C_NexusDriveBestJustDodge::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JustDodge_C_NexusDriveBestJustDodge, CallFunc_IsValid_ReturnValue_1) == 0x00004C, "Member 'BP_JustDodge_C_NexusDriveBestJustDodge::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_JustDodge.BP_JustDodge_C.NexusDriveBestJustDodgeAttackBegin
// 0x0001 (0x0001 - 0x0000)
struct BP_JustDodge_C_NexusDriveBestJustDodgeAttackBegin final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_JustDodge_C_NexusDriveBestJustDodgeAttackBegin) == 0x000001, "Wrong alignment on BP_JustDodge_C_NexusDriveBestJustDodgeAttackBegin");
static_assert(sizeof(BP_JustDodge_C_NexusDriveBestJustDodgeAttackBegin) == 0x000001, "Wrong size on BP_JustDodge_C_NexusDriveBestJustDodgeAttackBegin");
static_assert(offsetof(BP_JustDodge_C_NexusDriveBestJustDodgeAttackBegin, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_JustDodge_C_NexusDriveBestJustDodgeAttackBegin::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_JustDodge.BP_JustDodge_C.GetCheckAcceptTime
// 0x0004 (0x0004 - 0x0000)
struct BP_JustDodge_C_GetCheckAcceptTime final
{
public:
	float                                         Time;                                              // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JustDodge_C_GetCheckAcceptTime) == 0x000004, "Wrong alignment on BP_JustDodge_C_GetCheckAcceptTime");
static_assert(sizeof(BP_JustDodge_C_GetCheckAcceptTime) == 0x000004, "Wrong size on BP_JustDodge_C_GetCheckAcceptTime");
static_assert(offsetof(BP_JustDodge_C_GetCheckAcceptTime, Time) == 0x000000, "Member 'BP_JustDodge_C_GetCheckAcceptTime::Time' has a wrong offset!");

// Function BP_JustDodge.BP_JustDodge_C.IsJustDodgeDirection
// 0x0001 (0x0001 - 0x0000)
struct BP_JustDodge_C_IsJustDodgeDirection final
{
public:
	bool                                          bJustDodge;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_JustDodge_C_IsJustDodgeDirection) == 0x000001, "Wrong alignment on BP_JustDodge_C_IsJustDodgeDirection");
static_assert(sizeof(BP_JustDodge_C_IsJustDodgeDirection) == 0x000001, "Wrong size on BP_JustDodge_C_IsJustDodgeDirection");
static_assert(offsetof(BP_JustDodge_C_IsJustDodgeDirection, bJustDodge) == 0x000000, "Member 'BP_JustDodge_C_IsJustDodgeDirection::bJustDodge' has a wrong offset!");

}

