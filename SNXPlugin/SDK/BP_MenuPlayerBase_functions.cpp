#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MenuPlayerBase

#include "Basic.hpp"

#include "BP_MenuPlayerBase_classes.hpp"
#include "BP_MenuPlayerBase_parameters.hpp"


namespace SDK
{

// Function BP_MenuPlayerBase.BP_MenuPlayerBase_C.ExecuteUbergraph_BP_MenuPlayerBase
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MenuPlayerBase_C::ExecuteUbergraph_BP_MenuPlayerBase(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MenuPlayerBase_C", "ExecuteUbergraph_BP_MenuPlayerBase");

	Params::BP_MenuPlayerBase_C_ExecuteUbergraph_BP_MenuPlayerBase Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MenuPlayerBase.BP_MenuPlayerBase_C.ReceiveEndPlay
// (Event, Protected, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MenuPlayerBase_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MenuPlayerBase_C", "ReceiveEndPlay");

	Params::BP_MenuPlayerBase_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MenuPlayerBase.BP_MenuPlayerBase_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MenuPlayerBase_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MenuPlayerBase_C", "ReceiveTick");

	Params::BP_MenuPlayerBase_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MenuPlayerBase.BP_MenuPlayerBase_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_MenuPlayerBase_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MenuPlayerBase_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MenuPlayerBase.BP_MenuPlayerBase_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_MenuPlayerBase_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MenuPlayerBase_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MenuPlayerBase.BP_MenuPlayerBase_C.StartUIMainAnimation
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_MenuPlayerBase_C::StartUIMainAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MenuPlayerBase_C", "StartUIMainAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MenuPlayerBase.BP_MenuPlayerBase_C.LoadAsset
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_MenuPlayerBase_C::LoadAsset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MenuPlayerBase_C", "LoadAsset");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MenuPlayerBase.BP_MenuPlayerBase_C.PrivateSetupVisibility
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_MenuPlayerBase_C::PrivateSetupVisibility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MenuPlayerBase_C", "PrivateSetupVisibility");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MenuPlayerBase.BP_MenuPlayerBase_C.StartUIMainEquipAnimation
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_MenuPlayerBase_C::StartUIMainEquipAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MenuPlayerBase_C", "StartUIMainEquipAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MenuPlayerBase.BP_MenuPlayerBase_C.StartUIMainCostumeAnimation
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_MenuPlayerBase_C::StartUIMainCostumeAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MenuPlayerBase_C", "StartUIMainCostumeAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MenuPlayerBase.BP_MenuPlayerBase_C.SetRenderLayer
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// uint8                                   Layer                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MenuPlayerBase_C::SetRenderLayer(uint8 Layer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MenuPlayerBase_C", "SetRenderLayer");

	Params::BP_MenuPlayerBase_C_SetRenderLayer Parms{};

	Parms.Layer = Layer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MenuPlayerBase.BP_MenuPlayerBase_C.SetLightChannel
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Channel0                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Channel1                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Channel2                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_MenuPlayerBase_C::SetLightChannel(bool Channel0, bool Channel1, bool Channel2)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MenuPlayerBase_C", "SetLightChannel");

	Params::BP_MenuPlayerBase_C_SetLightChannel Parms{};

	Parms.Channel0 = Channel0;
	Parms.Channel1 = Channel1;
	Parms.Channel2 = Channel2;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MenuPlayerBase.BP_MenuPlayerBase_C.SetPauseFlag
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PauseFlag                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MenuPlayerBase_C::SetPauseFlag(int32 PauseFlag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MenuPlayerBase_C", "SetPauseFlag");

	Params::BP_MenuPlayerBase_C_SetPauseFlag Parms{};

	Parms.PauseFlag = PauseFlag;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MenuPlayerBase.BP_MenuPlayerBase_C.SwitchWeaponBattle
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Battle                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_MenuPlayerBase_C::SwitchWeaponBattle(bool Battle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MenuPlayerBase_C", "SwitchWeaponBattle");

	Params::BP_MenuPlayerBase_C_SwitchWeaponBattle Parms{};

	Parms.Battle = Battle;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MenuPlayerBase.BP_MenuPlayerBase_C.BeginSASTelepo
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DisappearTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MenuPlayerBase_C::BeginSASTelepo(float DisappearTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MenuPlayerBase_C", "BeginSASTelepo");

	Params::BP_MenuPlayerBase_C_BeginSASTelepo Parms{};

	Parms.DisappearTime = DisappearTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MenuPlayerBase.BP_MenuPlayerBase_C.EndSASTelepo
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   AppearTime                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MenuPlayerBase_C::EndSASTelepo(float AppearTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MenuPlayerBase_C", "EndSASTelepo");

	Params::BP_MenuPlayerBase_C_EndSASTelepo Parms{};

	Parms.AppearTime = AppearTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MenuPlayerBase.BP_MenuPlayerBase_C.UpdateTelepo
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_MenuPlayerBase_C::UpdateTelepo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MenuPlayerBase_C", "UpdateTelepo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MenuPlayerBase.BP_MenuPlayerBase_C.SetTransAnim
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Battle                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_MenuPlayerBase_C::SetTransAnim(bool Battle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MenuPlayerBase_C", "SetTransAnim");

	Params::BP_MenuPlayerBase_C_SetTransAnim Parms{};

	Parms.Battle = Battle;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MenuPlayerBase.BP_MenuPlayerBase_C.GetOptionalMeshes
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class USkeletalMeshComponent*>   Meshes                                                 (Parm, OutParm, ContainsInstancedReference, HasGetValueTypeHash)

void ABP_MenuPlayerBase_C::GetOptionalMeshes(TArray<class USkeletalMeshComponent*>* Meshes)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MenuPlayerBase_C", "GetOptionalMeshes");

	Params::BP_MenuPlayerBase_C_GetOptionalMeshes Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Meshes != nullptr)
		*Meshes = std::move(Parms.Meshes);
}


// Function BP_MenuPlayerBase.BP_MenuPlayerBase_C.GetWeaponMeshes
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class USkeletalMeshComponent*>   Meshes                                                 (Parm, OutParm, ContainsInstancedReference, HasGetValueTypeHash)

void ABP_MenuPlayerBase_C::GetWeaponMeshes(TArray<class USkeletalMeshComponent*>* Meshes)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MenuPlayerBase_C", "GetWeaponMeshes");

	Params::BP_MenuPlayerBase_C_GetWeaponMeshes Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Meshes != nullptr)
		*Meshes = std::move(Parms.Meshes);
}


// Function BP_MenuPlayerBase.BP_MenuPlayerBase_C.SetMaterialScalarParameter
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             ParamName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Weapon                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_MenuPlayerBase_C::SetMaterialScalarParameter(class FName ParamName, float Value, bool Player, bool Weapon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MenuPlayerBase_C", "SetMaterialScalarParameter");

	Params::BP_MenuPlayerBase_C_SetMaterialScalarParameter Parms{};

	Parms.ParamName = ParamName;
	Parms.Value = Value;
	Parms.Player = Player;
	Parms.Weapon = Weapon;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MenuPlayerBase.BP_MenuPlayerBase_C.SetMaterialVectorParameter
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             ParamName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Weapon                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_MenuPlayerBase_C::SetMaterialVectorParameter(class FName ParamName, const struct FLinearColor& Value, bool Player, bool Weapon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MenuPlayerBase_C", "SetMaterialVectorParameter");

	Params::BP_MenuPlayerBase_C_SetMaterialVectorParameter Parms{};

	Parms.ParamName = ParamName;
	Parms.Value = std::move(Value);
	Parms.Player = Player;
	Parms.Weapon = Weapon;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MenuPlayerBase.BP_MenuPlayerBase_C.SetMaterialScalarArrayParameter
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class FName>                     ParamName                                              (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// TArray<float>                           Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// bool                                    Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Weapon                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_MenuPlayerBase_C::SetMaterialScalarArrayParameter(TArray<class FName>& ParamName, TArray<float>& Value, bool Player, bool Weapon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MenuPlayerBase_C", "SetMaterialScalarArrayParameter");

	Params::BP_MenuPlayerBase_C_SetMaterialScalarArrayParameter Parms{};

	Parms.ParamName = std::move(ParamName);
	Parms.Value = std::move(Value);
	Parms.Player = Player;
	Parms.Weapon = Weapon;

	UObject::ProcessEvent(Func, &Parms);

	ParamName = std::move(Parms.ParamName);
	Value = std::move(Parms.Value);
}


// Function BP_MenuPlayerBase.BP_MenuPlayerBase_C.SetMaterialVectorArrayParameter
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class FName>                     ParamName                                              (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// TArray<struct FLinearColor>             Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// bool                                    Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Weapon                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_MenuPlayerBase_C::SetMaterialVectorArrayParameter(TArray<class FName>& ParamName, TArray<struct FLinearColor>& Value, bool Player, bool Weapon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MenuPlayerBase_C", "SetMaterialVectorArrayParameter");

	Params::BP_MenuPlayerBase_C_SetMaterialVectorArrayParameter Parms{};

	Parms.ParamName = std::move(ParamName);
	Parms.Value = std::move(Value);
	Parms.Player = Player;
	Parms.Weapon = Weapon;

	UObject::ProcessEvent(Func, &Parms);

	ParamName = std::move(Parms.ParamName);
	Value = std::move(Parms.Value);
}


// Function BP_MenuPlayerBase.BP_MenuPlayerBase_C.SetAttachment
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    CheckEquipAble                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_MenuPlayerBase_C::SetAttachment(bool CheckEquipAble)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MenuPlayerBase_C", "SetAttachment");

	Params::BP_MenuPlayerBase_C_SetAttachment Parms{};

	Parms.CheckEquipAble = CheckEquipAble;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MenuPlayerBase.BP_MenuPlayerBase_C.EventUIMainMontageEnd
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAnimMontage*                     Montage                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Interrupt                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_MenuPlayerBase_C::EventUIMainMontageEnd(class UAnimMontage* Montage, bool Interrupt)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MenuPlayerBase_C", "EventUIMainMontageEnd");

	Params::BP_MenuPlayerBase_C_EventUIMainMontageEnd Parms{};

	Parms.Montage = Montage;
	Parms.Interrupt = Interrupt;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MenuPlayerBase.BP_MenuPlayerBase_C.PlayUIMainAnimationInternal
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UAnimMontage*>             PlayMontages                                           (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// bool                                    StopMontage                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_MenuPlayerBase_C::PlayUIMainAnimationInternal(TArray<class UAnimMontage*>& PlayMontages, bool StopMontage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MenuPlayerBase_C", "PlayUIMainAnimationInternal");

	Params::BP_MenuPlayerBase_C_PlayUIMainAnimationInternal Parms{};

	Parms.PlayMontages = std::move(PlayMontages);
	Parms.StopMontage = StopMontage;

	UObject::ProcessEvent(Func, &Parms);

	PlayMontages = std::move(Parms.PlayMontages);
}


// Function BP_MenuPlayerBase.BP_MenuPlayerBase_C.StopUIMainAnimation
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MenuPlayerBase_C::StopUIMainAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MenuPlayerBase_C", "StopUIMainAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MenuPlayerBase.BP_MenuPlayerBase_C.EquipWeapon
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   WeaponId                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MenuPlayerBase_C::EquipWeapon(int32 WeaponId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MenuPlayerBase_C", "EquipWeapon");

	Params::BP_MenuPlayerBase_C_EquipWeapon Parms{};

	Parms.WeaponId = WeaponId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MenuPlayerBase.BP_MenuPlayerBase_C.OnChangeWeapon
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MenuPlayerBase_C::OnChangeWeapon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MenuPlayerBase_C", "OnChangeWeapon");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MenuPlayerBase.BP_MenuPlayerBase_C.PrivateWeaponInitialize
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_MenuPlayerBase_C::PrivateWeaponInitialize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MenuPlayerBase_C", "PrivateWeaponInitialize");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MenuPlayerBase.BP_MenuPlayerBase_C.EquipCostume
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   CostumeId                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MenuPlayerBase_C::EquipCostume(int32 CostumeId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MenuPlayerBase_C", "EquipCostume");

	Params::BP_MenuPlayerBase_C_EquipCostume Parms{};

	Parms.CostumeId = CostumeId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MenuPlayerBase.BP_MenuPlayerBase_C.DispWeaponString
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Visible                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_MenuPlayerBase_C::DispWeaponString(bool Visible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MenuPlayerBase_C", "DispWeaponString");

	Params::BP_MenuPlayerBase_C_DispWeaponString Parms{};

	Parms.Visible = Visible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MenuPlayerBase.BP_MenuPlayerBase_C.SetupDepthMeshComponent
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    EquipIgnoreVisibility                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_MenuPlayerBase_C::SetupDepthMeshComponent(bool EquipIgnoreVisibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MenuPlayerBase_C", "SetupDepthMeshComponent");

	Params::BP_MenuPlayerBase_C_SetupDepthMeshComponent Parms{};

	Parms.EquipIgnoreVisibility = EquipIgnoreVisibility;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MenuPlayerBase.BP_MenuPlayerBase_C.PrivateDestroyDepthMeshComponent
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MenuPlayerBase_C::PrivateDestroyDepthMeshComponent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MenuPlayerBase_C", "PrivateDestroyDepthMeshComponent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MenuPlayerBase.BP_MenuPlayerBase_C.PrivateCheckUseDepthMesh
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           MeshName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    UseDepth                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_MenuPlayerBase_C::PrivateCheckUseDepthMesh(const class FString& MeshName, bool* UseDepth)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MenuPlayerBase_C", "PrivateCheckUseDepthMesh");

	Params::BP_MenuPlayerBase_C_PrivateCheckUseDepthMesh Parms{};

	Parms.MeshName = std::move(MeshName);

	UObject::ProcessEvent(Func, &Parms);

	if (UseDepth != nullptr)
		*UseDepth = Parms.UseDepth;
}


// Function BP_MenuPlayerBase.BP_MenuPlayerBase_C.PrivateCostumeInitialize
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_MenuPlayerBase_C::PrivateCostumeInitialize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MenuPlayerBase_C", "PrivateCostumeInitialize");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MenuPlayerBase.BP_MenuPlayerBase_C.SetForceMipLevelsToBeResident
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    TargetPlayer                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    TargetWeapon                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    TargetAttachments                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    HighPriority                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_MenuPlayerBase_C::SetForceMipLevelsToBeResident(bool TargetPlayer, bool TargetWeapon, bool TargetAttachments, bool HighPriority)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MenuPlayerBase_C", "SetForceMipLevelsToBeResident");

	Params::BP_MenuPlayerBase_C_SetForceMipLevelsToBeResident Parms{};

	Parms.TargetPlayer = TargetPlayer;
	Parms.TargetWeapon = TargetWeapon;
	Parms.TargetAttachments = TargetAttachments;
	Parms.HighPriority = HighPriority;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MenuPlayerBase.BP_MenuPlayerBase_C.ResetForceMipLevelsToBeResident
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    TargetPlayer                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    TargetWeapon                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    TargetAttachments                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_MenuPlayerBase_C::ResetForceMipLevelsToBeResident(bool TargetPlayer, bool TargetWeapon, bool TargetAttachments)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MenuPlayerBase_C", "ResetForceMipLevelsToBeResident");

	Params::BP_MenuPlayerBase_C_ResetForceMipLevelsToBeResident Parms{};

	Parms.TargetPlayer = TargetPlayer;
	Parms.TargetWeapon = TargetWeapon;
	Parms.TargetAttachments = TargetAttachments;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MenuPlayerBase.BP_MenuPlayerBase_C.DoEquipWeaponAfter
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bDisableYuitoString                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_MenuPlayerBase_C::DoEquipWeaponAfter(bool bDisableYuitoString, bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MenuPlayerBase_C", "DoEquipWeaponAfter");

	Params::BP_MenuPlayerBase_C_DoEquipWeaponAfter Parms{};

	Parms.bDisableYuitoString = bDisableYuitoString;

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function BP_MenuPlayerBase.BP_MenuPlayerBase_C.DestroyAttachmentMeshComponent
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USceneComponent*                  DestroyMeshComponent                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_MenuPlayerBase_C::DestroyAttachmentMeshComponent(class USceneComponent* DestroyMeshComponent, bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MenuPlayerBase_C", "DestroyAttachmentMeshComponent");

	Params::BP_MenuPlayerBase_C_DestroyAttachmentMeshComponent Parms{};

	Parms.DestroyMeshComponent = DestroyMeshComponent;

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function BP_MenuPlayerBase.BP_MenuPlayerBase_C.EquipAttachmentInterface
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPlayerAttachment                       Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   AttachmentItemID                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EPlayerID                               EquipPlayerID                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   EquipMeshIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_MenuPlayerBase_C::EquipAttachmentInterface(EPlayerAttachment Param_Index, int32 AttachmentItemID, EPlayerID EquipPlayerID, int32 EquipMeshIndex, bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MenuPlayerBase_C", "EquipAttachmentInterface");

	Params::BP_MenuPlayerBase_C_EquipAttachmentInterface Parms{};

	Parms.Param_Index = Param_Index;
	Parms.AttachmentItemID = AttachmentItemID;
	Parms.EquipPlayerID = EquipPlayerID;
	Parms.EquipMeshIndex = EquipMeshIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function BP_MenuPlayerBase.BP_MenuPlayerBase_C.GetAttachedCharacterMesh
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPlayerID                               EquipPlayerID                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   EquipMeshIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USkeletalMeshComponent*           Mesh                                                   (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MenuPlayerBase_C::GetAttachedCharacterMesh(EPlayerID EquipPlayerID, int32 EquipMeshIndex, class USkeletalMeshComponent** Mesh)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MenuPlayerBase_C", "GetAttachedCharacterMesh");

	Params::BP_MenuPlayerBase_C_GetAttachedCharacterMesh Parms{};

	Parms.EquipPlayerID = EquipPlayerID;
	Parms.EquipMeshIndex = EquipMeshIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (Mesh != nullptr)
		*Mesh = Parms.Mesh;
}


// Function BP_MenuPlayerBase.BP_MenuPlayerBase_C.AttachmentVisibilityOffOnHead
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bOff                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_MenuPlayerBase_C::AttachmentVisibilityOffOnHead(bool bOff, bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MenuPlayerBase_C", "AttachmentVisibilityOffOnHead");

	Params::BP_MenuPlayerBase_C_AttachmentVisibilityOffOnHead Parms{};

	Parms.bOff = bOff;

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function BP_MenuPlayerBase.BP_MenuPlayerBase_C.AttachmentVisibilityOffOnBackBody
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bVisibility                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   FadeTime                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_MenuPlayerBase_C::AttachmentVisibilityOffOnBackBody(bool bVisibility, float FadeTime, bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MenuPlayerBase_C", "AttachmentVisibilityOffOnBackBody");

	Params::BP_MenuPlayerBase_C_AttachmentVisibilityOffOnBackBody Parms{};

	Parms.bVisibility = bVisibility;
	Parms.FadeTime = FadeTime;

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function BP_MenuPlayerBase.BP_MenuPlayerBase_C.PrivateLoadMontage
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// TArray<TSoftObjectPtr<class UAnimMontage>>MontageAsset                                           (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// TArray<class UAnimMontage*>             MontageObject                                          (Parm, OutParm, HasGetValueTypeHash)

void ABP_MenuPlayerBase_C::PrivateLoadMontage(TArray<TSoftObjectPtr<class UAnimMontage>>& MontageAsset, TArray<class UAnimMontage*>* MontageObject) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MenuPlayerBase_C", "PrivateLoadMontage");

	Params::BP_MenuPlayerBase_C_PrivateLoadMontage Parms{};

	Parms.MontageAsset = std::move(MontageAsset);

	UObject::ProcessEvent(Func, &Parms);

	MontageAsset = std::move(Parms.MontageAsset);

	if (MontageObject != nullptr)
		*MontageObject = std::move(Parms.MontageObject);
}

}

