#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MapGimmickObjectBase

#include "Basic.hpp"

#include "PsyObjType_structs.hpp"
#include "CascadeExtensionPlugin_structs.hpp"
#include "BattlePrototype_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "MovieScene_structs.hpp"


namespace SDK::Params
{

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.ExecuteUbergraph_BP_MapGimmickObjectBase
// 0x02D0 (0x02D0 - 0x0000)
struct BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_ParamName;                            // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_ParamValue;                           // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_flag;                                 // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_isActive;                             // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_flag_in;                              // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_is_mesh_only;                         // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_CustomEvent_DelaySec_2;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NextStateName;                  // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_DelaySec_1;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_704F[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_ChangeState_ReturnValue;                  // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_DelaySec;                       // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetNextStateName_ReturnValue;             // 0x005C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetNextCancelStateName_ReturnValue;       // 0x0064(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Delay;                          // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Enable_1;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_Enable;                         // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7050[0x6];                                     // 0x0072(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    CallFunc_GetAttackCollisionPrimitive_ReturnValue;  // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_GetPrimitive_ReturnValue;                 // 0x0080(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7051[0x3];                                     // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerManager*                         CallFunc_GetPlayerManager_PlayerManager;           // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerManager_C*                    K2Node_DynamicCast_AsBP_Player_Manager;            // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7052[0x7];                                     // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ICameraInterface>      K2Node_DynamicCast_AsCamera_Interface;             // 0x00A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7053[0x7];                                     // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_GetPlayer_ReturnValue;                    // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class ICameraInterface>      K2Node_DynamicCast_AsCamera_Interface_1;           // 0x00C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7054[0x3];                                     // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetPlayerCameraViewTarget_ReturnValue;    // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetPlayerCameraLocation_ReturnValue;      // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7055[0x2];                                     // 0x0102(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_ChangeState_ReturnValue_1;                // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_StateName_1;                          // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_StateName;                            // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMapGimmickManager*                     CallFunc_GetMapGimmickManager_MapGimmickManager;   // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APsychicObjectManager_C*                CallFunc_GetPsychicObjectManager_PsyObjManager;    // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSetSearchComponent_ReturnValue;         // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7056[0x6];                                     // 0x0132(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    CallFunc_GetPrimitive_ReturnValue_1;               // 0x0138(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetIconVisible_ReturnValue;               // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Set_Icon_Gauge_Enable_ReturnValue;        // 0x0142(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7057[0x5];                                     // 0x0143(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue_1;          // 0x0148(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FCameraUniqueObjectParameter           CallFunc_GetDataTableRowFromName_OutRow;           // 0x0158(0x0058)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7058[0x7];                                     // 0x01B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x01B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_ChangeState_ReturnValue_2;                // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerManager*                         CallFunc_GetPlayerManager_PlayerManager_1;         // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue_2;          // 0x01D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ARSCharacterBase*                       CallFunc_GetPlayer_ReturnValue_1;                  // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x01F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TScriptInterface<class IPlayerInterface>      K2Node_DynamicCast_AsPlayer_Interface;             // 0x0200(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerID                                     CallFunc_GetPlayerID_ReturnValue;                  // 0x0211(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7059[0x2];                                     // 0x0212(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_ChangeState_ReturnValue_3;                // 0x0214(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_705A[0x4];                                     // 0x021C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCameraUniqueObjectParameter           CallFunc_GetDataTableRowFromName_OutRow_1;         // 0x0220(0x0058)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_1;    // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_705B[0x7];                                     // 0x0279(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserParamManager*                      CallFunc_GetUserParamManager_UserParamManager;     // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerID                                     Temp_byte_Variable;                                // 0x0289(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x028A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x028B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_CustomEvent_Duration;                       // 0x028C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0291(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_705C[0x6];                                     // 0x0292(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ARSLevelSequenceActor*>          CallFunc_Map_Values_Values;                        // 0x0298(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class ARSLevelSequenceActor*                  CallFunc_Array_Get_Item;                           // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_705D[0x3];                                     // 0x02B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x02B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x02B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x02B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x02BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_705E[0x5];                                     // 0x02BB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AMapGimmickManager*                     CallFunc_GetMapGimmickManager_MapGimmickManager_1; // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase) == 0x000008, "Wrong alignment on BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase");
static_assert(sizeof(BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase) == 0x0002D0, "Wrong size on BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase");
static_assert(offsetof(BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase, EntryPoint) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase, K2Node_Event_ParamName) == 0x00000C, "Member 'BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase::K2Node_Event_ParamName' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase, K2Node_Event_ParamValue) == 0x000014, "Member 'BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase::K2Node_Event_ParamValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase, K2Node_Event_flag) == 0x000018, "Member 'BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase::K2Node_Event_flag' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase, K2Node_Event_isActive) == 0x000019, "Member 'BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase::K2Node_Event_isActive' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase, K2Node_Event_flag_in) == 0x00001A, "Member 'BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase::K2Node_Event_flag_in' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase, K2Node_Event_is_mesh_only) == 0x00001B, "Member 'BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase::K2Node_Event_is_mesh_only' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase, K2Node_CustomEvent_DelaySec_2) == 0x00001C, "Member 'BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase::K2Node_CustomEvent_DelaySec_2' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase, K2Node_CustomEvent_NextStateName) == 0x000020, "Member 'BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase::K2Node_CustomEvent_NextStateName' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase, K2Node_CustomEvent_DelaySec_1) == 0x000028, "Member 'BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase::K2Node_CustomEvent_DelaySec_1' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase, CallFunc_Conv_NameToString_ReturnValue) == 0x000030, "Member 'BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase, CallFunc_Concat_StrStr_ReturnValue) == 0x000040, "Member 'BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase, CallFunc_ChangeState_ReturnValue) == 0x000050, "Member 'BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase::CallFunc_ChangeState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase, K2Node_CustomEvent_DelaySec) == 0x000058, "Member 'BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase::K2Node_CustomEvent_DelaySec' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase, CallFunc_GetNextStateName_ReturnValue) == 0x00005C, "Member 'BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase::CallFunc_GetNextStateName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase, CallFunc_GetNextCancelStateName_ReturnValue) == 0x000064, "Member 'BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase::CallFunc_GetNextCancelStateName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase, K2Node_CustomEvent_Delay) == 0x00006C, "Member 'BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase::K2Node_CustomEvent_Delay' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase, K2Node_CustomEvent_Enable_1) == 0x000070, "Member 'BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase::K2Node_CustomEvent_Enable_1' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase, K2Node_CustomEvent_Enable) == 0x000071, "Member 'BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase::K2Node_CustomEvent_Enable' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase, CallFunc_GetAttackCollisionPrimitive_ReturnValue) == 0x000078, "Member 'BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase::CallFunc_GetAttackCollisionPrimitive_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase, CallFunc_GetPrimitive_ReturnValue) == 0x000080, "Member 'BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase::CallFunc_GetPrimitive_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase, CallFunc_IsValid_ReturnValue) == 0x000088, "Member 'BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase, Temp_int_Array_Index_Variable) == 0x00008C, "Member 'BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase, CallFunc_GetPlayerManager_PlayerManager) == 0x000090, "Member 'BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase, K2Node_DynamicCast_AsBP_Player_Manager) == 0x000098, "Member 'BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase::K2Node_DynamicCast_AsBP_Player_Manager' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase, K2Node_DynamicCast_bSuccess) == 0x0000A0, "Member 'BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase, K2Node_DynamicCast_AsCamera_Interface) == 0x0000A8, "Member 'BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase::K2Node_DynamicCast_AsCamera_Interface' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase, K2Node_DynamicCast_bSuccess_1) == 0x0000B8, "Member 'BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase, CallFunc_GetPlayer_ReturnValue) == 0x0000C0, "Member 'BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase::CallFunc_GetPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase, K2Node_DynamicCast_AsCamera_Interface_1) == 0x0000C8, "Member 'BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase::K2Node_DynamicCast_AsCamera_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase, K2Node_DynamicCast_bSuccess_2) == 0x0000D8, "Member 'BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase, CallFunc_BreakTransform_Location) == 0x0000DC, "Member 'BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase, CallFunc_BreakTransform_Rotation) == 0x0000E8, "Member 'BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase, CallFunc_BreakTransform_Scale) == 0x0000F4, "Member 'BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase, CallFunc_SetPlayerCameraViewTarget_ReturnValue) == 0x000100, "Member 'BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase::CallFunc_SetPlayerCameraViewTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase, CallFunc_SetPlayerCameraLocation_ReturnValue) == 0x000101, "Member 'BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase::CallFunc_SetPlayerCameraLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase, K2Node_Event_DeltaSeconds) == 0x000104, "Member 'BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase, CallFunc_ChangeState_ReturnValue_1) == 0x000108, "Member 'BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase::CallFunc_ChangeState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase, K2Node_Event_StateName_1) == 0x000110, "Member 'BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase::K2Node_Event_StateName_1' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase, K2Node_Event_StateName) == 0x000118, "Member 'BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase::K2Node_Event_StateName' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase, CallFunc_GetMapGimmickManager_MapGimmickManager) == 0x000120, "Member 'BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase::CallFunc_GetMapGimmickManager_MapGimmickManager' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase, CallFunc_GetPsychicObjectManager_PsyObjManager) == 0x000128, "Member 'BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase::CallFunc_GetPsychicObjectManager_PsyObjManager' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase, CallFunc_IsValid_ReturnValue_1) == 0x000130, "Member 'BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase, CallFunc_IsSetSearchComponent_ReturnValue) == 0x000131, "Member 'BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase::CallFunc_IsSetSearchComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase, CallFunc_GetPrimitive_ReturnValue_1) == 0x000138, "Member 'BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase::CallFunc_GetPrimitive_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase, CallFunc_IsValid_ReturnValue_2) == 0x000140, "Member 'BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase, CallFunc_SetIconVisible_ReturnValue) == 0x000141, "Member 'BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase::CallFunc_SetIconVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase, CallFunc_Set_Icon_Gauge_Enable_ReturnValue) == 0x000142, "Member 'BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase::CallFunc_Set_Icon_Gauge_Enable_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase, CallFunc_Conv_NameToString_ReturnValue_1) == 0x000148, "Member 'BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase::CallFunc_Conv_NameToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase, CallFunc_GetDataTableRowFromName_OutRow) == 0x000158, "Member 'BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0001B0, "Member 'BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0001B8, "Member 'BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase, CallFunc_ChangeState_ReturnValue_2) == 0x0001C8, "Member 'BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase::CallFunc_ChangeState_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase, CallFunc_GetPlayerManager_PlayerManager_1) == 0x0001D0, "Member 'BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase::CallFunc_GetPlayerManager_PlayerManager_1' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase, CallFunc_Conv_NameToString_ReturnValue_2) == 0x0001D8, "Member 'BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase::CallFunc_Conv_NameToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase, CallFunc_GetPlayer_ReturnValue_1) == 0x0001E8, "Member 'BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase::CallFunc_GetPlayer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0001F0, "Member 'BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase, K2Node_DynamicCast_AsPlayer_Interface) == 0x000200, "Member 'BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase::K2Node_DynamicCast_AsPlayer_Interface' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase, K2Node_DynamicCast_bSuccess_3) == 0x000210, "Member 'BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase, CallFunc_GetPlayerID_ReturnValue) == 0x000211, "Member 'BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase::CallFunc_GetPlayerID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase, CallFunc_ChangeState_ReturnValue_3) == 0x000214, "Member 'BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase::CallFunc_ChangeState_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase, CallFunc_GetDataTableRowFromName_OutRow_1) == 0x000220, "Member 'BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase::CallFunc_GetDataTableRowFromName_OutRow_1' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase, CallFunc_GetDataTableRowFromName_ReturnValue_1) == 0x000278, "Member 'BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase::CallFunc_GetDataTableRowFromName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase, CallFunc_GetUserParamManager_UserParamManager) == 0x000280, "Member 'BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase::CallFunc_GetUserParamManager_UserParamManager' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase, CallFunc_IsValid_ReturnValue_3) == 0x000288, "Member 'BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase, Temp_byte_Variable) == 0x000289, "Member 'BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00028A, "Member 'BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00028B, "Member 'BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase, K2Node_CustomEvent_Duration) == 0x00028C, "Member 'BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase::K2Node_CustomEvent_Duration' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase, K2Node_Event_EndPlayReason) == 0x000290, "Member 'BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase, CallFunc_IsValid_ReturnValue_4) == 0x000291, "Member 'BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase, CallFunc_Map_Values_Values) == 0x000298, "Member 'BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase, CallFunc_Array_Get_Item) == 0x0002A8, "Member 'BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase, CallFunc_IsValid_ReturnValue_5) == 0x0002B0, "Member 'BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase, CallFunc_Array_Length_ReturnValue) == 0x0002B4, "Member 'BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase, CallFunc_Less_IntInt_ReturnValue) == 0x0002B8, "Member 'BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase, CallFunc_IsValid_ReturnValue_6) == 0x0002B9, "Member 'BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase, CallFunc_IsValid_ReturnValue_7) == 0x0002BA, "Member 'BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase, CallFunc_GetMapGimmickManager_MapGimmickManager_1) == 0x0002C0, "Member 'BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase::CallFunc_GetMapGimmickManager_MapGimmickManager_1' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase, CallFunc_IsValid_ReturnValue_8) == 0x0002C8, "Member 'BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_MapGimmickObjectBase_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BP_MapGimmickObjectBase_C_ReceiveEndPlay");
static_assert(sizeof(BP_MapGimmickObjectBase_C_ReceiveEndPlay) == 0x000001, "Wrong size on BP_MapGimmickObjectBase_C_ReceiveEndPlay");
static_assert(offsetof(BP_MapGimmickObjectBase_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.DelayFadeOutAndDestloy
// 0x0004 (0x0004 - 0x0000)
struct BP_MapGimmickObjectBase_C_DelayFadeOutAndDestloy final
{
public:
	float                                         Duration;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_DelayFadeOutAndDestloy) == 0x000004, "Wrong alignment on BP_MapGimmickObjectBase_C_DelayFadeOutAndDestloy");
static_assert(sizeof(BP_MapGimmickObjectBase_C_DelayFadeOutAndDestloy) == 0x000004, "Wrong size on BP_MapGimmickObjectBase_C_DelayFadeOutAndDestloy");
static_assert(offsetof(BP_MapGimmickObjectBase_C_DelayFadeOutAndDestloy, Duration) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_DelayFadeOutAndDestloy::Duration' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.OnStateEndFunction
// 0x0008 (0x0008 - 0x0000)
struct BP_MapGimmickObjectBase_C_OnStateEndFunction final
{
public:
	class FName                                   StateName;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_OnStateEndFunction) == 0x000004, "Wrong alignment on BP_MapGimmickObjectBase_C_OnStateEndFunction");
static_assert(sizeof(BP_MapGimmickObjectBase_C_OnStateEndFunction) == 0x000008, "Wrong size on BP_MapGimmickObjectBase_C_OnStateEndFunction");
static_assert(offsetof(BP_MapGimmickObjectBase_C_OnStateEndFunction, StateName) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_OnStateEndFunction::StateName' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.OnStateBeginFunction
// 0x0008 (0x0008 - 0x0000)
struct BP_MapGimmickObjectBase_C_OnStateBeginFunction final
{
public:
	class FName                                   StateName;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_OnStateBeginFunction) == 0x000004, "Wrong alignment on BP_MapGimmickObjectBase_C_OnStateBeginFunction");
static_assert(sizeof(BP_MapGimmickObjectBase_C_OnStateBeginFunction) == 0x000008, "Wrong size on BP_MapGimmickObjectBase_C_OnStateBeginFunction");
static_assert(offsetof(BP_MapGimmickObjectBase_C_OnStateBeginFunction, StateName) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_OnStateBeginFunction::StateName' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_MapGimmickObjectBase_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_MapGimmickObjectBase_C_ReceiveTick");
static_assert(sizeof(BP_MapGimmickObjectBase_C_ReceiveTick) == 0x000004, "Wrong size on BP_MapGimmickObjectBase_C_ReceiveTick");
static_assert(offsetof(BP_MapGimmickObjectBase_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.EnableAttackCollision
// 0x0001 (0x0001 - 0x0000)
struct BP_MapGimmickObjectBase_C_EnableAttackCollision final
{
public:
	bool                                          Enable;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_EnableAttackCollision) == 0x000001, "Wrong alignment on BP_MapGimmickObjectBase_C_EnableAttackCollision");
static_assert(sizeof(BP_MapGimmickObjectBase_C_EnableAttackCollision) == 0x000001, "Wrong size on BP_MapGimmickObjectBase_C_EnableAttackCollision");
static_assert(offsetof(BP_MapGimmickObjectBase_C_EnableAttackCollision, Enable) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_EnableAttackCollision::Enable' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.EnablePhysics
// 0x0001 (0x0001 - 0x0000)
struct BP_MapGimmickObjectBase_C_EnablePhysics final
{
public:
	bool                                          Enable;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_EnablePhysics) == 0x000001, "Wrong alignment on BP_MapGimmickObjectBase_C_EnablePhysics");
static_assert(sizeof(BP_MapGimmickObjectBase_C_EnablePhysics) == 0x000001, "Wrong size on BP_MapGimmickObjectBase_C_EnablePhysics");
static_assert(offsetof(BP_MapGimmickObjectBase_C_EnablePhysics, Enable) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_EnablePhysics::Enable' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.DelayAttackEffectOff
// 0x0004 (0x0004 - 0x0000)
struct BP_MapGimmickObjectBase_C_DelayAttackEffectOff final
{
public:
	float                                         Delay;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_DelayAttackEffectOff) == 0x000004, "Wrong alignment on BP_MapGimmickObjectBase_C_DelayAttackEffectOff");
static_assert(sizeof(BP_MapGimmickObjectBase_C_DelayAttackEffectOff) == 0x000004, "Wrong size on BP_MapGimmickObjectBase_C_DelayAttackEffectOff");
static_assert(offsetof(BP_MapGimmickObjectBase_C_DelayAttackEffectOff, Delay) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_DelayAttackEffectOff::Delay' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.ChangeStateInCancelWithDelay
// 0x0004 (0x0004 - 0x0000)
struct BP_MapGimmickObjectBase_C_ChangeStateInCancelWithDelay final
{
public:
	float                                         DelaySec;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_ChangeStateInCancelWithDelay) == 0x000004, "Wrong alignment on BP_MapGimmickObjectBase_C_ChangeStateInCancelWithDelay");
static_assert(sizeof(BP_MapGimmickObjectBase_C_ChangeStateInCancelWithDelay) == 0x000004, "Wrong size on BP_MapGimmickObjectBase_C_ChangeStateInCancelWithDelay");
static_assert(offsetof(BP_MapGimmickObjectBase_C_ChangeStateInCancelWithDelay, DelaySec) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_ChangeStateInCancelWithDelay::DelaySec' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.ChangeToNextStateWithDelay
// 0x0004 (0x0004 - 0x0000)
struct BP_MapGimmickObjectBase_C_ChangeToNextStateWithDelay final
{
public:
	float                                         DelaySec;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_ChangeToNextStateWithDelay) == 0x000004, "Wrong alignment on BP_MapGimmickObjectBase_C_ChangeToNextStateWithDelay");
static_assert(sizeof(BP_MapGimmickObjectBase_C_ChangeToNextStateWithDelay) == 0x000004, "Wrong size on BP_MapGimmickObjectBase_C_ChangeToNextStateWithDelay");
static_assert(offsetof(BP_MapGimmickObjectBase_C_ChangeToNextStateWithDelay, DelaySec) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_ChangeToNextStateWithDelay::DelaySec' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.ChangeStateWithDelay
// 0x000C (0x000C - 0x0000)
struct BP_MapGimmickObjectBase_C_ChangeStateWithDelay final
{
public:
	float                                         DelaySec;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   NextStateName;                                     // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_ChangeStateWithDelay) == 0x000004, "Wrong alignment on BP_MapGimmickObjectBase_C_ChangeStateWithDelay");
static_assert(sizeof(BP_MapGimmickObjectBase_C_ChangeStateWithDelay) == 0x00000C, "Wrong size on BP_MapGimmickObjectBase_C_ChangeStateWithDelay");
static_assert(offsetof(BP_MapGimmickObjectBase_C_ChangeStateWithDelay, DelaySec) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_ChangeStateWithDelay::DelaySec' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_ChangeStateWithDelay, NextStateName) == 0x000004, "Member 'BP_MapGimmickObjectBase_C_ChangeStateWithDelay::NextStateName' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.SetPsychicObjectVisibility
// 0x0002 (0x0002 - 0x0000)
struct BP_MapGimmickObjectBase_C_SetPsychicObjectVisibility final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Is_mesh_only;                                      // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_SetPsychicObjectVisibility) == 0x000001, "Wrong alignment on BP_MapGimmickObjectBase_C_SetPsychicObjectVisibility");
static_assert(sizeof(BP_MapGimmickObjectBase_C_SetPsychicObjectVisibility) == 0x000002, "Wrong size on BP_MapGimmickObjectBase_C_SetPsychicObjectVisibility");
static_assert(offsetof(BP_MapGimmickObjectBase_C_SetPsychicObjectVisibility, Flag_in) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_SetPsychicObjectVisibility::Flag_in' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_SetPsychicObjectVisibility, Is_mesh_only) == 0x000001, "Member 'BP_MapGimmickObjectBase_C_SetPsychicObjectVisibility::Is_mesh_only' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.SetPsychicObjectActive
// 0x0001 (0x0001 - 0x0000)
struct BP_MapGimmickObjectBase_C_SetPsychicObjectActive final
{
public:
	bool                                          Param_IsActive;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_SetPsychicObjectActive) == 0x000001, "Wrong alignment on BP_MapGimmickObjectBase_C_SetPsychicObjectActive");
static_assert(sizeof(BP_MapGimmickObjectBase_C_SetPsychicObjectActive) == 0x000001, "Wrong size on BP_MapGimmickObjectBase_C_SetPsychicObjectActive");
static_assert(offsetof(BP_MapGimmickObjectBase_C_SetPsychicObjectActive, Param_IsActive) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_SetPsychicObjectActive::Param_IsActive' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.SetTownSetting
// 0x0001 (0x0001 - 0x0000)
struct BP_MapGimmickObjectBase_C_SetTownSetting final
{
public:
	bool                                          Flag;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_SetTownSetting) == 0x000001, "Wrong alignment on BP_MapGimmickObjectBase_C_SetTownSetting");
static_assert(sizeof(BP_MapGimmickObjectBase_C_SetTownSetting) == 0x000001, "Wrong size on BP_MapGimmickObjectBase_C_SetTownSetting");
static_assert(offsetof(BP_MapGimmickObjectBase_C_SetTownSetting, Flag) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_SetTownSetting::Flag' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.SetMaterialParameter
// 0x000C (0x000C - 0x0000)
struct BP_MapGimmickObjectBase_C_SetMaterialParameter final
{
public:
	class FName                                   ParamName;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ParamValue;                                        // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_SetMaterialParameter) == 0x000004, "Wrong alignment on BP_MapGimmickObjectBase_C_SetMaterialParameter");
static_assert(sizeof(BP_MapGimmickObjectBase_C_SetMaterialParameter) == 0x00000C, "Wrong size on BP_MapGimmickObjectBase_C_SetMaterialParameter");
static_assert(offsetof(BP_MapGimmickObjectBase_C_SetMaterialParameter, ParamName) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_SetMaterialParameter::ParamName' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_SetMaterialParameter, ParamValue) == 0x000008, "Member 'BP_MapGimmickObjectBase_C_SetMaterialParameter::ParamValue' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.MakeStateFromDataTable
// 0x0080 (0x0080 - 0x0000)
struct BP_MapGimmickObjectBase_C_MakeStateFromDataTable final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0008(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_705F[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMapGimmickState                       CallFunc_GetDataTableRowFromName_OutRow;           // 0x0020(0x0048)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7060[0x3];                                     // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7061[0x3];                                     // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_MakeStateFromDataTable) == 0x000008, "Wrong alignment on BP_MapGimmickObjectBase_C_MakeStateFromDataTable");
static_assert(sizeof(BP_MapGimmickObjectBase_C_MakeStateFromDataTable) == 0x000080, "Wrong size on BP_MapGimmickObjectBase_C_MakeStateFromDataTable");
static_assert(offsetof(BP_MapGimmickObjectBase_C_MakeStateFromDataTable, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_MakeStateFromDataTable::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_MakeStateFromDataTable, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_MapGimmickObjectBase_C_MakeStateFromDataTable::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_MakeStateFromDataTable, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000008, "Member 'BP_MapGimmickObjectBase_C_MakeStateFromDataTable::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_MakeStateFromDataTable, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_MapGimmickObjectBase_C_MakeStateFromDataTable::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_MakeStateFromDataTable, CallFunc_GetDataTableRowFromName_OutRow) == 0x000020, "Member 'BP_MapGimmickObjectBase_C_MakeStateFromDataTable::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_MakeStateFromDataTable, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000068, "Member 'BP_MapGimmickObjectBase_C_MakeStateFromDataTable::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_MakeStateFromDataTable, CallFunc_Array_Length_ReturnValue) == 0x00006C, "Member 'BP_MapGimmickObjectBase_C_MakeStateFromDataTable::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_MakeStateFromDataTable, CallFunc_Less_IntInt_ReturnValue) == 0x000070, "Member 'BP_MapGimmickObjectBase_C_MakeStateFromDataTable::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_MakeStateFromDataTable, CallFunc_Array_Add_ReturnValue) == 0x000074, "Member 'BP_MapGimmickObjectBase_C_MakeStateFromDataTable::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_MakeStateFromDataTable, CallFunc_Add_IntInt_ReturnValue) == 0x000078, "Member 'BP_MapGimmickObjectBase_C_MakeStateFromDataTable::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.InitializeIcon
// 0x0008 (0x0008 - 0x0000)
struct BP_MapGimmickObjectBase_C_InitializeIcon final
{
public:
	class AHUDMainGame_C*                         CallFunc_GetHud_HudMain;                           // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_InitializeIcon) == 0x000008, "Wrong alignment on BP_MapGimmickObjectBase_C_InitializeIcon");
static_assert(sizeof(BP_MapGimmickObjectBase_C_InitializeIcon) == 0x000008, "Wrong size on BP_MapGimmickObjectBase_C_InitializeIcon");
static_assert(offsetof(BP_MapGimmickObjectBase_C_InitializeIcon, CallFunc_GetHud_HudMain) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_InitializeIcon::CallFunc_GetHud_HudMain' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.SetIconVisible
// 0x0020 (0x0020 - 0x0000)
struct BP_MapGimmickObjectBase_C_SetIconVisible final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsSuccess;                                         // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsCancel;                                          // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ReturnValue;                                       // 0x0003(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7062[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUDMainGame_C*                         HUD;                                               // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHUDMainGame_C*                         CallFunc_GetHud_HudMain;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_SetIconVisible) == 0x000008, "Wrong alignment on BP_MapGimmickObjectBase_C_SetIconVisible");
static_assert(sizeof(BP_MapGimmickObjectBase_C_SetIconVisible) == 0x000020, "Wrong size on BP_MapGimmickObjectBase_C_SetIconVisible");
static_assert(offsetof(BP_MapGimmickObjectBase_C_SetIconVisible, Visible) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_SetIconVisible::Visible' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_SetIconVisible, IsSuccess) == 0x000001, "Member 'BP_MapGimmickObjectBase_C_SetIconVisible::IsSuccess' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_SetIconVisible, IsCancel) == 0x000002, "Member 'BP_MapGimmickObjectBase_C_SetIconVisible::IsCancel' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_SetIconVisible, ReturnValue) == 0x000003, "Member 'BP_MapGimmickObjectBase_C_SetIconVisible::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_SetIconVisible, HUD) == 0x000008, "Member 'BP_MapGimmickObjectBase_C_SetIconVisible::HUD' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_SetIconVisible, CallFunc_GetHud_HudMain) == 0x000010, "Member 'BP_MapGimmickObjectBase_C_SetIconVisible::CallFunc_GetHud_HudMain' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_SetIconVisible, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_MapGimmickObjectBase_C_SetIconVisible::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.GetSequencePlayer
// 0x0110 (0x0110 - 0x0000)
struct BP_MapGimmickObjectBase_C_GetSequencePlayer final
{
public:
	class FName                                   StateName;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSLevelSequenceActor*                  Actor;                                             // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   Player;                                            // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Error;                                             // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7063[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMapGimmickState                       State;                                             // 0x0020(0x0048)(Edit, BlueprintVisible)
	class ULevelSequence*                         Sequence;                                          // 0x0068(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSLevelSequenceActor*                  LsActor;                                           // 0x0070(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequence*                         CallFunc_GetStateLevelSequence_Sequence;           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetStateLevelSequence_Found;              // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7064[0x7];                                     // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMapGimmickState                       CallFunc_GetStateByName_ReturnValue;               // 0x0088(0x0048)(ConstParm)
	class ARSLevelSequenceActor*                  CallFunc_CreateRSLevelSequencerPlayer_Actor;       // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   CallFunc_CreateRSLevelSequencerPlayer_ReturnValue; // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7065[0x7];                                     // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x00E8(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue;            // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSLevelSequenceActor*                  CallFunc_Map_Find_Value;                           // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_GetSequencePlayer) == 0x000008, "Wrong alignment on BP_MapGimmickObjectBase_C_GetSequencePlayer");
static_assert(sizeof(BP_MapGimmickObjectBase_C_GetSequencePlayer) == 0x000110, "Wrong size on BP_MapGimmickObjectBase_C_GetSequencePlayer");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetSequencePlayer, StateName) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_GetSequencePlayer::StateName' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetSequencePlayer, Actor) == 0x000008, "Member 'BP_MapGimmickObjectBase_C_GetSequencePlayer::Actor' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetSequencePlayer, Player) == 0x000010, "Member 'BP_MapGimmickObjectBase_C_GetSequencePlayer::Player' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetSequencePlayer, Error) == 0x000018, "Member 'BP_MapGimmickObjectBase_C_GetSequencePlayer::Error' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetSequencePlayer, State) == 0x000020, "Member 'BP_MapGimmickObjectBase_C_GetSequencePlayer::State' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetSequencePlayer, Sequence) == 0x000068, "Member 'BP_MapGimmickObjectBase_C_GetSequencePlayer::Sequence' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetSequencePlayer, LsActor) == 0x000070, "Member 'BP_MapGimmickObjectBase_C_GetSequencePlayer::LsActor' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetSequencePlayer, CallFunc_GetStateLevelSequence_Sequence) == 0x000078, "Member 'BP_MapGimmickObjectBase_C_GetSequencePlayer::CallFunc_GetStateLevelSequence_Sequence' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetSequencePlayer, CallFunc_GetStateLevelSequence_Found) == 0x000080, "Member 'BP_MapGimmickObjectBase_C_GetSequencePlayer::CallFunc_GetStateLevelSequence_Found' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetSequencePlayer, CallFunc_GetStateByName_ReturnValue) == 0x000088, "Member 'BP_MapGimmickObjectBase_C_GetSequencePlayer::CallFunc_GetStateByName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetSequencePlayer, CallFunc_CreateRSLevelSequencerPlayer_Actor) == 0x0000D0, "Member 'BP_MapGimmickObjectBase_C_GetSequencePlayer::CallFunc_CreateRSLevelSequencerPlayer_Actor' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetSequencePlayer, CallFunc_CreateRSLevelSequencerPlayer_ReturnValue) == 0x0000D8, "Member 'BP_MapGimmickObjectBase_C_GetSequencePlayer::CallFunc_CreateRSLevelSequencerPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetSequencePlayer, CallFunc_IsValid_ReturnValue) == 0x0000E0, "Member 'BP_MapGimmickObjectBase_C_GetSequencePlayer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetSequencePlayer, K2Node_MakeArray_Array) == 0x0000E8, "Member 'BP_MapGimmickObjectBase_C_GetSequencePlayer::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetSequencePlayer, CallFunc_GetSequencePlayer_ReturnValue) == 0x0000F8, "Member 'BP_MapGimmickObjectBase_C_GetSequencePlayer::CallFunc_GetSequencePlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetSequencePlayer, CallFunc_Map_Find_Value) == 0x000100, "Member 'BP_MapGimmickObjectBase_C_GetSequencePlayer::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetSequencePlayer, CallFunc_Map_Find_ReturnValue) == 0x000108, "Member 'BP_MapGimmickObjectBase_C_GetSequencePlayer::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.OnFinishSequenceEnablePhysics
// 0x0008 (0x0008 - 0x0000)
struct BP_MapGimmickObjectBase_C_OnFinishSequenceEnablePhysics final
{
public:
	class UPrimitiveComponent*                    CallFunc_GetPrimitive_ReturnValue;                 // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_OnFinishSequenceEnablePhysics) == 0x000008, "Wrong alignment on BP_MapGimmickObjectBase_C_OnFinishSequenceEnablePhysics");
static_assert(sizeof(BP_MapGimmickObjectBase_C_OnFinishSequenceEnablePhysics) == 0x000008, "Wrong size on BP_MapGimmickObjectBase_C_OnFinishSequenceEnablePhysics");
static_assert(offsetof(BP_MapGimmickObjectBase_C_OnFinishSequenceEnablePhysics, CallFunc_GetPrimitive_ReturnValue) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_OnFinishSequenceEnablePhysics::CallFunc_GetPrimitive_ReturnValue' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.PlayStateSequenceWithCallback
// 0x0038 (0x0038 - 0x0000)
struct BP_MapGimmickObjectBase_C_PlayStateSequenceWithCallback final
{
public:
	class FName                                   StateName;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             OnFinishedFunc;                                    // 0x0008(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor)
	bool                                          Error;                                             // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7066[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSLevelSequenceActor*                  CallFunc_GetSequencePlayer_Actor;                  // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_Player;                 // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSequencePlayer_Error;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_PlayStateSequenceWithCallback) == 0x000008, "Wrong alignment on BP_MapGimmickObjectBase_C_PlayStateSequenceWithCallback");
static_assert(sizeof(BP_MapGimmickObjectBase_C_PlayStateSequenceWithCallback) == 0x000038, "Wrong size on BP_MapGimmickObjectBase_C_PlayStateSequenceWithCallback");
static_assert(offsetof(BP_MapGimmickObjectBase_C_PlayStateSequenceWithCallback, StateName) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_PlayStateSequenceWithCallback::StateName' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_PlayStateSequenceWithCallback, OnFinishedFunc) == 0x000008, "Member 'BP_MapGimmickObjectBase_C_PlayStateSequenceWithCallback::OnFinishedFunc' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_PlayStateSequenceWithCallback, Error) == 0x000018, "Member 'BP_MapGimmickObjectBase_C_PlayStateSequenceWithCallback::Error' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_PlayStateSequenceWithCallback, CallFunc_GetSequencePlayer_Actor) == 0x000020, "Member 'BP_MapGimmickObjectBase_C_PlayStateSequenceWithCallback::CallFunc_GetSequencePlayer_Actor' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_PlayStateSequenceWithCallback, CallFunc_GetSequencePlayer_Player) == 0x000028, "Member 'BP_MapGimmickObjectBase_C_PlayStateSequenceWithCallback::CallFunc_GetSequencePlayer_Player' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_PlayStateSequenceWithCallback, CallFunc_GetSequencePlayer_Error) == 0x000030, "Member 'BP_MapGimmickObjectBase_C_PlayStateSequenceWithCallback::CallFunc_GetSequencePlayer_Error' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.PlayStateSequence
// 0x0170 (0x0170 - 0x0000)
struct BP_MapGimmickObjectBase_C_PlayStateSequence final
{
public:
	class FName                                   StateName;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   Player;                                            // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsExistStateLevelSequence_Exist;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7067[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0014(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_7068[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerManager*                         CallFunc_GetPlayerManager_PlayerManager;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSCharacterBase*                       CallFunc_GetPlayer_ReturnValue;                    // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7069[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMapGimmickState                       CallFunc_GetStateByName_ReturnValue;               // 0x0040(0x0048)(ConstParm)
	uint8                                         Pad_706A[0x8];                                     // 0x0088(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0090(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult;      // 0x00C0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue;         // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_706B[0x7];                                     // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSLevelSequenceActor*                  CallFunc_GetSequencePlayer_Actor;                  // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_Player;                 // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSequencePlayer_Error;                  // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_PlayStateSequence) == 0x000010, "Wrong alignment on BP_MapGimmickObjectBase_C_PlayStateSequence");
static_assert(sizeof(BP_MapGimmickObjectBase_C_PlayStateSequence) == 0x000170, "Wrong size on BP_MapGimmickObjectBase_C_PlayStateSequence");
static_assert(offsetof(BP_MapGimmickObjectBase_C_PlayStateSequence, StateName) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_PlayStateSequence::StateName' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_PlayStateSequence, Player) == 0x000008, "Member 'BP_MapGimmickObjectBase_C_PlayStateSequence::Player' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_PlayStateSequence, CallFunc_IsExistStateLevelSequence_Exist) == 0x000010, "Member 'BP_MapGimmickObjectBase_C_PlayStateSequence::CallFunc_IsExistStateLevelSequence_Exist' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_PlayStateSequence, K2Node_CreateDelegate_OutputDelegate) == 0x000014, "Member 'BP_MapGimmickObjectBase_C_PlayStateSequence::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_PlayStateSequence, CallFunc_GetPlayerManager_PlayerManager) == 0x000028, "Member 'BP_MapGimmickObjectBase_C_PlayStateSequence::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_PlayStateSequence, CallFunc_GetPlayer_ReturnValue) == 0x000030, "Member 'BP_MapGimmickObjectBase_C_PlayStateSequence::CallFunc_GetPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_PlayStateSequence, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'BP_MapGimmickObjectBase_C_PlayStateSequence::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_PlayStateSequence, CallFunc_GetStateByName_ReturnValue) == 0x000040, "Member 'BP_MapGimmickObjectBase_C_PlayStateSequence::CallFunc_GetStateByName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_PlayStateSequence, CallFunc_GetTransform_ReturnValue) == 0x000090, "Member 'BP_MapGimmickObjectBase_C_PlayStateSequence::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_PlayStateSequence, CallFunc_K2_SetActorTransform_SweepHitResult) == 0x0000C0, "Member 'BP_MapGimmickObjectBase_C_PlayStateSequence::CallFunc_K2_SetActorTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_PlayStateSequence, CallFunc_K2_SetActorTransform_ReturnValue) == 0x000148, "Member 'BP_MapGimmickObjectBase_C_PlayStateSequence::CallFunc_K2_SetActorTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_PlayStateSequence, CallFunc_GetSequencePlayer_Actor) == 0x000150, "Member 'BP_MapGimmickObjectBase_C_PlayStateSequence::CallFunc_GetSequencePlayer_Actor' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_PlayStateSequence, CallFunc_GetSequencePlayer_Player) == 0x000158, "Member 'BP_MapGimmickObjectBase_C_PlayStateSequence::CallFunc_GetSequencePlayer_Player' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_PlayStateSequence, CallFunc_GetSequencePlayer_Error) == 0x000160, "Member 'BP_MapGimmickObjectBase_C_PlayStateSequence::CallFunc_GetSequencePlayer_Error' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.CreateRSLevelSequencerPlayer
// 0x0090 (0x0090 - 0x0000)
struct BP_MapGimmickObjectBase_C_CreateRSLevelSequencerPlayer final
{
public:
	class ULevelSequence*                         LevelSequence;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMovieSceneSequencePlaybackSettings    Settings;                                          // 0x0008(0x0014)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	uint8                                         Pad_706C[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSLevelSequenceActor*                  Actor;                                             // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   ReturnValue;                                       // 0x0028(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSLevelSequenceActor*                  LsActor;                                           // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_706D[0x8];                                     // 0x0038(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0040(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue;            // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSLevelSequenceActor*                  CallFunc_FinishSpawningActor_ReturnValue;          // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_CreateRSLevelSequencerPlayer) == 0x000010, "Wrong alignment on BP_MapGimmickObjectBase_C_CreateRSLevelSequencerPlayer");
static_assert(sizeof(BP_MapGimmickObjectBase_C_CreateRSLevelSequencerPlayer) == 0x000090, "Wrong size on BP_MapGimmickObjectBase_C_CreateRSLevelSequencerPlayer");
static_assert(offsetof(BP_MapGimmickObjectBase_C_CreateRSLevelSequencerPlayer, LevelSequence) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_CreateRSLevelSequencerPlayer::LevelSequence' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_CreateRSLevelSequencerPlayer, Settings) == 0x000008, "Member 'BP_MapGimmickObjectBase_C_CreateRSLevelSequencerPlayer::Settings' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_CreateRSLevelSequencerPlayer, Actor) == 0x000020, "Member 'BP_MapGimmickObjectBase_C_CreateRSLevelSequencerPlayer::Actor' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_CreateRSLevelSequencerPlayer, ReturnValue) == 0x000028, "Member 'BP_MapGimmickObjectBase_C_CreateRSLevelSequencerPlayer::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_CreateRSLevelSequencerPlayer, LsActor) == 0x000030, "Member 'BP_MapGimmickObjectBase_C_CreateRSLevelSequencerPlayer::LsActor' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_CreateRSLevelSequencerPlayer, CallFunc_MakeTransform_ReturnValue) == 0x000040, "Member 'BP_MapGimmickObjectBase_C_CreateRSLevelSequencerPlayer::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_CreateRSLevelSequencerPlayer, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000070, "Member 'BP_MapGimmickObjectBase_C_CreateRSLevelSequencerPlayer::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_CreateRSLevelSequencerPlayer, CallFunc_GetSequencePlayer_ReturnValue) == 0x000078, "Member 'BP_MapGimmickObjectBase_C_CreateRSLevelSequencerPlayer::CallFunc_GetSequencePlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_CreateRSLevelSequencerPlayer, CallFunc_FinishSpawningActor_ReturnValue) == 0x000080, "Member 'BP_MapGimmickObjectBase_C_CreateRSLevelSequencerPlayer::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_CreateRSLevelSequencerPlayer, CallFunc_IsValid_ReturnValue) == 0x000088, "Member 'BP_MapGimmickObjectBase_C_CreateRSLevelSequencerPlayer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_CreateRSLevelSequencerPlayer, CallFunc_MakeLiteralByte_ReturnValue) == 0x000089, "Member 'BP_MapGimmickObjectBase_C_CreateRSLevelSequencerPlayer::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.InitializeSequenceUniqueActor
// 0x0130 (0x0130 - 0x0000)
struct BP_MapGimmickObjectBase_C_InitializeSequenceUniqueActor final
{
public:
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_706E[0xF];                                     // 0x0001(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0010(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_706F[0x8];                                     // 0x0048(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x0050(0x0030)(IsPlainOldData, NoDestructor)
	class ACineCameraActor*                       CallFunc_FinishSpawningActor_ReturnValue;          // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1; // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_EventCameraRoot_C*                  CallFunc_FinishSpawningActor_ReturnValue_1;        // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_1;            // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7070[0x7];                                     // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_2;              // 0x00A0(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_3;              // 0x00D0(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_2; // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_3; // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_EventCameraRoot_C*                  CallFunc_FinishSpawningActor_ReturnValue_2;        // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_EventCameraRoot_C*                  CallFunc_FinishSpawningActor_ReturnValue_3;        // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_2;            // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_3;            // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_InitializeSequenceUniqueActor) == 0x000010, "Wrong alignment on BP_MapGimmickObjectBase_C_InitializeSequenceUniqueActor");
static_assert(sizeof(BP_MapGimmickObjectBase_C_InitializeSequenceUniqueActor) == 0x000130, "Wrong size on BP_MapGimmickObjectBase_C_InitializeSequenceUniqueActor");
static_assert(offsetof(BP_MapGimmickObjectBase_C_InitializeSequenceUniqueActor, CallFunc_MakeLiteralByte_ReturnValue) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_InitializeSequenceUniqueActor::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_InitializeSequenceUniqueActor, CallFunc_MakeTransform_ReturnValue) == 0x000010, "Member 'BP_MapGimmickObjectBase_C_InitializeSequenceUniqueActor::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_InitializeSequenceUniqueActor, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000040, "Member 'BP_MapGimmickObjectBase_C_InitializeSequenceUniqueActor::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_InitializeSequenceUniqueActor, CallFunc_MakeTransform_ReturnValue_1) == 0x000050, "Member 'BP_MapGimmickObjectBase_C_InitializeSequenceUniqueActor::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_InitializeSequenceUniqueActor, CallFunc_FinishSpawningActor_ReturnValue) == 0x000080, "Member 'BP_MapGimmickObjectBase_C_InitializeSequenceUniqueActor::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_InitializeSequenceUniqueActor, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1) == 0x000088, "Member 'BP_MapGimmickObjectBase_C_InitializeSequenceUniqueActor::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_InitializeSequenceUniqueActor, CallFunc_FinishSpawningActor_ReturnValue_1) == 0x000090, "Member 'BP_MapGimmickObjectBase_C_InitializeSequenceUniqueActor::CallFunc_FinishSpawningActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_InitializeSequenceUniqueActor, CallFunc_MakeLiteralByte_ReturnValue_1) == 0x000098, "Member 'BP_MapGimmickObjectBase_C_InitializeSequenceUniqueActor::CallFunc_MakeLiteralByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_InitializeSequenceUniqueActor, CallFunc_MakeTransform_ReturnValue_2) == 0x0000A0, "Member 'BP_MapGimmickObjectBase_C_InitializeSequenceUniqueActor::CallFunc_MakeTransform_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_InitializeSequenceUniqueActor, CallFunc_MakeTransform_ReturnValue_3) == 0x0000D0, "Member 'BP_MapGimmickObjectBase_C_InitializeSequenceUniqueActor::CallFunc_MakeTransform_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_InitializeSequenceUniqueActor, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_2) == 0x000100, "Member 'BP_MapGimmickObjectBase_C_InitializeSequenceUniqueActor::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_InitializeSequenceUniqueActor, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_3) == 0x000108, "Member 'BP_MapGimmickObjectBase_C_InitializeSequenceUniqueActor::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_InitializeSequenceUniqueActor, CallFunc_FinishSpawningActor_ReturnValue_2) == 0x000110, "Member 'BP_MapGimmickObjectBase_C_InitializeSequenceUniqueActor::CallFunc_FinishSpawningActor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_InitializeSequenceUniqueActor, CallFunc_FinishSpawningActor_ReturnValue_3) == 0x000118, "Member 'BP_MapGimmickObjectBase_C_InitializeSequenceUniqueActor::CallFunc_FinishSpawningActor_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_InitializeSequenceUniqueActor, CallFunc_MakeLiteralByte_ReturnValue_2) == 0x000120, "Member 'BP_MapGimmickObjectBase_C_InitializeSequenceUniqueActor::CallFunc_MakeLiteralByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_InitializeSequenceUniqueActor, CallFunc_MakeLiteralByte_ReturnValue_3) == 0x000121, "Member 'BP_MapGimmickObjectBase_C_InitializeSequenceUniqueActor::CallFunc_MakeLiteralByte_ReturnValue_3' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.FinishPlayProc
// 0x01A4 (0x01A4 - 0x0000)
struct BP_MapGimmickObjectBase_C_FinishPlayProc final
{
public:
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x0000(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7071[0x3];                                     // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult_1;     // 0x008C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue_1;        // 0x0114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7072[0x3];                                     // 0x0115(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult_2;     // 0x0118(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue_2;        // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_FinishPlayProc) == 0x000004, "Wrong alignment on BP_MapGimmickObjectBase_C_FinishPlayProc");
static_assert(sizeof(BP_MapGimmickObjectBase_C_FinishPlayProc) == 0x0001A4, "Wrong size on BP_MapGimmickObjectBase_C_FinishPlayProc");
static_assert(offsetof(BP_MapGimmickObjectBase_C_FinishPlayProc, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_FinishPlayProc::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_FinishPlayProc, CallFunc_K2_SetActorLocation_ReturnValue) == 0x000088, "Member 'BP_MapGimmickObjectBase_C_FinishPlayProc::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_FinishPlayProc, CallFunc_K2_SetActorLocation_SweepHitResult_1) == 0x00008C, "Member 'BP_MapGimmickObjectBase_C_FinishPlayProc::CallFunc_K2_SetActorLocation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_FinishPlayProc, CallFunc_K2_SetActorLocation_ReturnValue_1) == 0x000114, "Member 'BP_MapGimmickObjectBase_C_FinishPlayProc::CallFunc_K2_SetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_FinishPlayProc, CallFunc_K2_SetActorLocation_SweepHitResult_2) == 0x000118, "Member 'BP_MapGimmickObjectBase_C_FinishPlayProc::CallFunc_K2_SetActorLocation_SweepHitResult_2' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_FinishPlayProc, CallFunc_K2_SetActorLocation_ReturnValue_2) == 0x0001A0, "Member 'BP_MapGimmickObjectBase_C_FinishPlayProc::CallFunc_K2_SetActorLocation_ReturnValue_2' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.SetupSequencePlay
// 0x00D8 (0x00D8 - 0x0000)
struct BP_MapGimmickObjectBase_C_SetupSequencePlay final
{
public:
	class FName                                   StateName;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSLevelSequenceActor*                  LsActor;                                           // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSequenceObjectBindingID_IsFind;        // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7073[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMovieSceneObjectBindingID             CallFunc_GetSequenceObjectBindingID_ReturnValue;   // 0x0014(0x0018)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7074[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0030(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array_1;                          // 0x0040(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array_2;                          // 0x0050(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_GetSequenceObjectBindingID_IsFind_1;      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7075[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMovieSceneObjectBindingID             CallFunc_GetSequenceObjectBindingID_ReturnValue_1; // 0x0064(0x0018)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7076[0x4];                                     // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_MakeArray_Array_3;                          // 0x0080(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_GetSequenceObjectBindingID_IsFind_2;      // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7077[0x3];                                     // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMovieSceneObjectBindingID             CallFunc_GetSequenceObjectBindingID_ReturnValue_2; // 0x0094(0x0018)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSequenceObjectBindingID_IsFind_3;      // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7078[0x3];                                     // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMovieSceneObjectBindingID             CallFunc_GetSequenceObjectBindingID_ReturnValue_3; // 0x00B0(0x0018)(NoDestructor, HasGetValueTypeHash)
	class ARSLevelSequenceActor*                  CallFunc_Map_Find_Value;                           // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_SetupSequencePlay) == 0x000008, "Wrong alignment on BP_MapGimmickObjectBase_C_SetupSequencePlay");
static_assert(sizeof(BP_MapGimmickObjectBase_C_SetupSequencePlay) == 0x0000D8, "Wrong size on BP_MapGimmickObjectBase_C_SetupSequencePlay");
static_assert(offsetof(BP_MapGimmickObjectBase_C_SetupSequencePlay, StateName) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_SetupSequencePlay::StateName' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_SetupSequencePlay, LsActor) == 0x000008, "Member 'BP_MapGimmickObjectBase_C_SetupSequencePlay::LsActor' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_SetupSequencePlay, CallFunc_GetSequenceObjectBindingID_IsFind) == 0x000010, "Member 'BP_MapGimmickObjectBase_C_SetupSequencePlay::CallFunc_GetSequenceObjectBindingID_IsFind' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_SetupSequencePlay, CallFunc_GetSequenceObjectBindingID_ReturnValue) == 0x000014, "Member 'BP_MapGimmickObjectBase_C_SetupSequencePlay::CallFunc_GetSequenceObjectBindingID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_SetupSequencePlay, K2Node_MakeArray_Array) == 0x000030, "Member 'BP_MapGimmickObjectBase_C_SetupSequencePlay::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_SetupSequencePlay, K2Node_MakeArray_Array_1) == 0x000040, "Member 'BP_MapGimmickObjectBase_C_SetupSequencePlay::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_SetupSequencePlay, K2Node_MakeArray_Array_2) == 0x000050, "Member 'BP_MapGimmickObjectBase_C_SetupSequencePlay::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_SetupSequencePlay, CallFunc_GetSequenceObjectBindingID_IsFind_1) == 0x000060, "Member 'BP_MapGimmickObjectBase_C_SetupSequencePlay::CallFunc_GetSequenceObjectBindingID_IsFind_1' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_SetupSequencePlay, CallFunc_GetSequenceObjectBindingID_ReturnValue_1) == 0x000064, "Member 'BP_MapGimmickObjectBase_C_SetupSequencePlay::CallFunc_GetSequenceObjectBindingID_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_SetupSequencePlay, K2Node_MakeArray_Array_3) == 0x000080, "Member 'BP_MapGimmickObjectBase_C_SetupSequencePlay::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_SetupSequencePlay, CallFunc_GetSequenceObjectBindingID_IsFind_2) == 0x000090, "Member 'BP_MapGimmickObjectBase_C_SetupSequencePlay::CallFunc_GetSequenceObjectBindingID_IsFind_2' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_SetupSequencePlay, CallFunc_GetSequenceObjectBindingID_ReturnValue_2) == 0x000094, "Member 'BP_MapGimmickObjectBase_C_SetupSequencePlay::CallFunc_GetSequenceObjectBindingID_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_SetupSequencePlay, CallFunc_GetSequenceObjectBindingID_IsFind_3) == 0x0000AC, "Member 'BP_MapGimmickObjectBase_C_SetupSequencePlay::CallFunc_GetSequenceObjectBindingID_IsFind_3' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_SetupSequencePlay, CallFunc_GetSequenceObjectBindingID_ReturnValue_3) == 0x0000B0, "Member 'BP_MapGimmickObjectBase_C_SetupSequencePlay::CallFunc_GetSequenceObjectBindingID_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_SetupSequencePlay, CallFunc_Map_Find_Value) == 0x0000C8, "Member 'BP_MapGimmickObjectBase_C_SetupSequencePlay::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_SetupSequencePlay, CallFunc_Map_Find_ReturnValue) == 0x0000D0, "Member 'BP_MapGimmickObjectBase_C_SetupSequencePlay::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.GetHUD
// 0x0018 (0x0018 - 0x0000)
struct BP_MapGimmickObjectBase_C_GetHUD final
{
public:
	class AHUDMainGame_C*                         Param_HudMain;                                     // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHUDMainGame_C*                         CallFunc_GetHUDMainGame_HUDMainGame;               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_GetHUD) == 0x000008, "Wrong alignment on BP_MapGimmickObjectBase_C_GetHUD");
static_assert(sizeof(BP_MapGimmickObjectBase_C_GetHUD) == 0x000018, "Wrong size on BP_MapGimmickObjectBase_C_GetHUD");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetHUD, Param_HudMain) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_GetHUD::Param_HudMain' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetHUD, CallFunc_GetHUDMainGame_HUDMainGame) == 0x000008, "Member 'BP_MapGimmickObjectBase_C_GetHUD::CallFunc_GetHUDMainGame_HUDMainGame' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetHUD, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_MapGimmickObjectBase_C_GetHUD::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.UpdateWidgetGauge
// 0x0018 (0x0018 - 0x0000)
struct BP_MapGimmickObjectBase_C_UpdateWidgetGauge final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7079[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurrentChargeRate_Rate;                // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_707A[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUDMainGame_C*                         CallFunc_GetHud_HudMain;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_UpdateWidgetGauge) == 0x000008, "Wrong alignment on BP_MapGimmickObjectBase_C_UpdateWidgetGauge");
static_assert(sizeof(BP_MapGimmickObjectBase_C_UpdateWidgetGauge) == 0x000018, "Wrong size on BP_MapGimmickObjectBase_C_UpdateWidgetGauge");
static_assert(offsetof(BP_MapGimmickObjectBase_C_UpdateWidgetGauge, ReturnValue) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_UpdateWidgetGauge::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_UpdateWidgetGauge, CallFunc_GetCurrentChargeRate_Rate) == 0x000004, "Member 'BP_MapGimmickObjectBase_C_UpdateWidgetGauge::CallFunc_GetCurrentChargeRate_Rate' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_UpdateWidgetGauge, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000008, "Member 'BP_MapGimmickObjectBase_C_UpdateWidgetGauge::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_UpdateWidgetGauge, CallFunc_GetHud_HudMain) == 0x000010, "Member 'BP_MapGimmickObjectBase_C_UpdateWidgetGauge::CallFunc_GetHud_HudMain' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.UpdateBeginCameraInterp
// 0x01C0 (0x01C0 - 0x0000)
struct BP_MapGimmickObjectBase_C_UpdateBeginCameraInterp final
{
public:
	struct FTransform                             CurTrans;                                          // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FTransform                             InterpTrans;                                       // 0x0030(0x0030)(Parm, OutParm, IsPlainOldData, NoDestructor)
	struct FTransform                             TransEnd;                                          // 0x0060(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	struct FTransform                             TransBegin;                                        // 0x0090(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	struct FTransform                             TransInterpolated;                                 // 0x00C0(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0108(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_707B[0xC];                                     // 0x0114(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetRelativeTransform_ReturnValue;         // 0x0120(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x0150(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x015C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x0168(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeRange_MinTime;                     // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeRange_MaxTime;                     // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x017C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_707C[0x7];                                     // 0x0189(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0190(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_UpdateBeginCameraInterp) == 0x000010, "Wrong alignment on BP_MapGimmickObjectBase_C_UpdateBeginCameraInterp");
static_assert(sizeof(BP_MapGimmickObjectBase_C_UpdateBeginCameraInterp) == 0x0001C0, "Wrong size on BP_MapGimmickObjectBase_C_UpdateBeginCameraInterp");
static_assert(offsetof(BP_MapGimmickObjectBase_C_UpdateBeginCameraInterp, CurTrans) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_UpdateBeginCameraInterp::CurTrans' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_UpdateBeginCameraInterp, InterpTrans) == 0x000030, "Member 'BP_MapGimmickObjectBase_C_UpdateBeginCameraInterp::InterpTrans' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_UpdateBeginCameraInterp, TransEnd) == 0x000060, "Member 'BP_MapGimmickObjectBase_C_UpdateBeginCameraInterp::TransEnd' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_UpdateBeginCameraInterp, TransBegin) == 0x000090, "Member 'BP_MapGimmickObjectBase_C_UpdateBeginCameraInterp::TransBegin' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_UpdateBeginCameraInterp, TransInterpolated) == 0x0000C0, "Member 'BP_MapGimmickObjectBase_C_UpdateBeginCameraInterp::TransInterpolated' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_UpdateBeginCameraInterp, CallFunc_BreakTransform_Location) == 0x0000F0, "Member 'BP_MapGimmickObjectBase_C_UpdateBeginCameraInterp::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_UpdateBeginCameraInterp, CallFunc_BreakTransform_Rotation) == 0x0000FC, "Member 'BP_MapGimmickObjectBase_C_UpdateBeginCameraInterp::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_UpdateBeginCameraInterp, CallFunc_BreakTransform_Scale) == 0x000108, "Member 'BP_MapGimmickObjectBase_C_UpdateBeginCameraInterp::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_UpdateBeginCameraInterp, CallFunc_GetRelativeTransform_ReturnValue) == 0x000120, "Member 'BP_MapGimmickObjectBase_C_UpdateBeginCameraInterp::CallFunc_GetRelativeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_UpdateBeginCameraInterp, CallFunc_BreakTransform_Location_1) == 0x000150, "Member 'BP_MapGimmickObjectBase_C_UpdateBeginCameraInterp::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_UpdateBeginCameraInterp, CallFunc_BreakTransform_Rotation_1) == 0x00015C, "Member 'BP_MapGimmickObjectBase_C_UpdateBeginCameraInterp::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_UpdateBeginCameraInterp, CallFunc_BreakTransform_Scale_1) == 0x000168, "Member 'BP_MapGimmickObjectBase_C_UpdateBeginCameraInterp::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_UpdateBeginCameraInterp, CallFunc_GetTimeRange_MinTime) == 0x000174, "Member 'BP_MapGimmickObjectBase_C_UpdateBeginCameraInterp::CallFunc_GetTimeRange_MinTime' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_UpdateBeginCameraInterp, CallFunc_GetTimeRange_MaxTime) == 0x000178, "Member 'BP_MapGimmickObjectBase_C_UpdateBeginCameraInterp::CallFunc_GetTimeRange_MaxTime' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_UpdateBeginCameraInterp, CallFunc_Add_VectorVector_ReturnValue) == 0x00017C, "Member 'BP_MapGimmickObjectBase_C_UpdateBeginCameraInterp::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_UpdateBeginCameraInterp, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000188, "Member 'BP_MapGimmickObjectBase_C_UpdateBeginCameraInterp::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_UpdateBeginCameraInterp, CallFunc_MakeTransform_ReturnValue) == 0x000190, "Member 'BP_MapGimmickObjectBase_C_UpdateBeginCameraInterp::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.UpdateSeqRoot
// 0x0230 (0x0230 - 0x0000)
struct BP_MapGimmickObjectBase_C_UpdateSeqRoot final
{
public:
	struct FTransform                             CurTrans;                                          // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FTransform                             InterpTrans;                                       // 0x0030(0x0030)(Parm, OutParm, IsPlainOldData, NoDestructor)
	struct FTransform                             TransEnd;                                          // 0x0060(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	struct FTransform                             TransBegin;                                        // 0x0090(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	struct FTransform                             TransInterpolated;                                 // 0x00C0(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00F0(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x0120(0x0030)(IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_707D[0xC];                                     // 0x0154(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_TLerp_ReturnValue;                        // 0x0160(0x0030)(IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetTimeRange_MinTime;                     // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeRange_MaxTime;                     // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult;      // 0x0198(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue;         // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0221(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_UpdateSeqRoot) == 0x000010, "Wrong alignment on BP_MapGimmickObjectBase_C_UpdateSeqRoot");
static_assert(sizeof(BP_MapGimmickObjectBase_C_UpdateSeqRoot) == 0x000230, "Wrong size on BP_MapGimmickObjectBase_C_UpdateSeqRoot");
static_assert(offsetof(BP_MapGimmickObjectBase_C_UpdateSeqRoot, CurTrans) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_UpdateSeqRoot::CurTrans' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_UpdateSeqRoot, InterpTrans) == 0x000030, "Member 'BP_MapGimmickObjectBase_C_UpdateSeqRoot::InterpTrans' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_UpdateSeqRoot, TransEnd) == 0x000060, "Member 'BP_MapGimmickObjectBase_C_UpdateSeqRoot::TransEnd' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_UpdateSeqRoot, TransBegin) == 0x000090, "Member 'BP_MapGimmickObjectBase_C_UpdateSeqRoot::TransBegin' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_UpdateSeqRoot, TransInterpolated) == 0x0000C0, "Member 'BP_MapGimmickObjectBase_C_UpdateSeqRoot::TransInterpolated' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_UpdateSeqRoot, CallFunc_MakeTransform_ReturnValue) == 0x0000F0, "Member 'BP_MapGimmickObjectBase_C_UpdateSeqRoot::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_UpdateSeqRoot, CallFunc_MakeTransform_ReturnValue_1) == 0x000120, "Member 'BP_MapGimmickObjectBase_C_UpdateSeqRoot::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_UpdateSeqRoot, CallFunc_GetFloatValue_ReturnValue) == 0x000150, "Member 'BP_MapGimmickObjectBase_C_UpdateSeqRoot::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_UpdateSeqRoot, CallFunc_TLerp_ReturnValue) == 0x000160, "Member 'BP_MapGimmickObjectBase_C_UpdateSeqRoot::CallFunc_TLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_UpdateSeqRoot, CallFunc_GetTimeRange_MinTime) == 0x000190, "Member 'BP_MapGimmickObjectBase_C_UpdateSeqRoot::CallFunc_GetTimeRange_MinTime' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_UpdateSeqRoot, CallFunc_GetTimeRange_MaxTime) == 0x000194, "Member 'BP_MapGimmickObjectBase_C_UpdateSeqRoot::CallFunc_GetTimeRange_MaxTime' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_UpdateSeqRoot, CallFunc_K2_SetActorTransform_SweepHitResult) == 0x000198, "Member 'BP_MapGimmickObjectBase_C_UpdateSeqRoot::CallFunc_K2_SetActorTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_UpdateSeqRoot, CallFunc_K2_SetActorTransform_ReturnValue) == 0x000220, "Member 'BP_MapGimmickObjectBase_C_UpdateSeqRoot::CallFunc_K2_SetActorTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_UpdateSeqRoot, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000221, "Member 'BP_MapGimmickObjectBase_C_UpdateSeqRoot::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.GetCurrentChargeRate
// 0x0010 (0x0010 - 0x0000)
struct BP_MapGimmickObjectBase_C_GetCurrentChargeRate final
{
public:
	float                                         Rate;                                              // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_707E[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_GetCurrentChargeRate) == 0x000004, "Wrong alignment on BP_MapGimmickObjectBase_C_GetCurrentChargeRate");
static_assert(sizeof(BP_MapGimmickObjectBase_C_GetCurrentChargeRate) == 0x000010, "Wrong size on BP_MapGimmickObjectBase_C_GetCurrentChargeRate");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetCurrentChargeRate, Rate) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_GetCurrentChargeRate::Rate' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetCurrentChargeRate, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000004, "Member 'BP_MapGimmickObjectBase_C_GetCurrentChargeRate::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetCurrentChargeRate, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000008, "Member 'BP_MapGimmickObjectBase_C_GetCurrentChargeRate::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetCurrentChargeRate, CallFunc_FClamp_ReturnValue) == 0x00000C, "Member 'BP_MapGimmickObjectBase_C_GetCurrentChargeRate::CallFunc_FClamp_ReturnValue' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.GetFocalLengthFromFovDegree
// 0x0020 (0x0020 - 0x0000)
struct BP_MapGimmickObjectBase_C_GetFocalLengthFromFovDegree final
{
public:
	float                                         SensorWidth;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FovDegree;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FocalLength;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegTan_ReturnValue;                       // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_2;          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_GetFocalLengthFromFovDegree) == 0x000004, "Wrong alignment on BP_MapGimmickObjectBase_C_GetFocalLengthFromFovDegree");
static_assert(sizeof(BP_MapGimmickObjectBase_C_GetFocalLengthFromFovDegree) == 0x000020, "Wrong size on BP_MapGimmickObjectBase_C_GetFocalLengthFromFovDegree");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetFocalLengthFromFovDegree, SensorWidth) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_GetFocalLengthFromFovDegree::SensorWidth' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetFocalLengthFromFovDegree, FovDegree) == 0x000004, "Member 'BP_MapGimmickObjectBase_C_GetFocalLengthFromFovDegree::FovDegree' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetFocalLengthFromFovDegree, FocalLength) == 0x000008, "Member 'BP_MapGimmickObjectBase_C_GetFocalLengthFromFovDegree::FocalLength' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetFocalLengthFromFovDegree, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00000C, "Member 'BP_MapGimmickObjectBase_C_GetFocalLengthFromFovDegree::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetFocalLengthFromFovDegree, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000010, "Member 'BP_MapGimmickObjectBase_C_GetFocalLengthFromFovDegree::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetFocalLengthFromFovDegree, CallFunc_FMax_ReturnValue) == 0x000014, "Member 'BP_MapGimmickObjectBase_C_GetFocalLengthFromFovDegree::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetFocalLengthFromFovDegree, CallFunc_DegTan_ReturnValue) == 0x000018, "Member 'BP_MapGimmickObjectBase_C_GetFocalLengthFromFovDegree::CallFunc_DegTan_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetFocalLengthFromFovDegree, CallFunc_Divide_FloatFloat_ReturnValue_2) == 0x00001C, "Member 'BP_MapGimmickObjectBase_C_GetFocalLengthFromFovDegree::CallFunc_Divide_FloatFloat_ReturnValue_2' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.SetCineCameraFov
// 0x0018 (0x0018 - 0x0000)
struct BP_MapGimmickObjectBase_C_SetCineCameraFov final
{
public:
	float                                         FovDegree;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_707F[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCineCameraComponent*                   CallFunc_GetCineCameraComponent_ReturnValue;       // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFocalLengthFromFovDegree_FocalLength;  // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_SetCineCameraFov) == 0x000008, "Wrong alignment on BP_MapGimmickObjectBase_C_SetCineCameraFov");
static_assert(sizeof(BP_MapGimmickObjectBase_C_SetCineCameraFov) == 0x000018, "Wrong size on BP_MapGimmickObjectBase_C_SetCineCameraFov");
static_assert(offsetof(BP_MapGimmickObjectBase_C_SetCineCameraFov, FovDegree) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_SetCineCameraFov::FovDegree' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_SetCineCameraFov, CallFunc_GetCineCameraComponent_ReturnValue) == 0x000008, "Member 'BP_MapGimmickObjectBase_C_SetCineCameraFov::CallFunc_GetCineCameraComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_SetCineCameraFov, CallFunc_GetFocalLengthFromFovDegree_FocalLength) == 0x000010, "Member 'BP_MapGimmickObjectBase_C_SetCineCameraFov::CallFunc_GetFocalLengthFromFovDegree_FocalLength' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.GetFocalLengthFromFovRadian
// 0x0018 (0x0018 - 0x0000)
struct BP_MapGimmickObjectBase_C_GetFocalLengthFromFovRadian final
{
public:
	float                                         SensorWidth;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FovRadian;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FocalLength;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_GetFocalLengthFromFovRadian) == 0x000004, "Wrong alignment on BP_MapGimmickObjectBase_C_GetFocalLengthFromFovRadian");
static_assert(sizeof(BP_MapGimmickObjectBase_C_GetFocalLengthFromFovRadian) == 0x000018, "Wrong size on BP_MapGimmickObjectBase_C_GetFocalLengthFromFovRadian");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetFocalLengthFromFovRadian, SensorWidth) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_GetFocalLengthFromFovRadian::SensorWidth' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetFocalLengthFromFovRadian, FovRadian) == 0x000004, "Member 'BP_MapGimmickObjectBase_C_GetFocalLengthFromFovRadian::FovRadian' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetFocalLengthFromFovRadian, FocalLength) == 0x000008, "Member 'BP_MapGimmickObjectBase_C_GetFocalLengthFromFovRadian::FocalLength' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetFocalLengthFromFovRadian, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00000C, "Member 'BP_MapGimmickObjectBase_C_GetFocalLengthFromFovRadian::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetFocalLengthFromFovRadian, CallFunc_FMax_ReturnValue) == 0x000010, "Member 'BP_MapGimmickObjectBase_C_GetFocalLengthFromFovRadian::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetFocalLengthFromFovRadian, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000014, "Member 'BP_MapGimmickObjectBase_C_GetFocalLengthFromFovRadian::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.OnBeginTriggerVolumeOverlap
// 0x0003 (0x0003 - 0x0000)
struct BP_MapGimmickObjectBase_C_OnBeginTriggerVolumeOverlap final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OnBeginTriggerVolumeOverlap_ReturnValue;  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_OnBeginTriggerVolumeOverlap) == 0x000001, "Wrong alignment on BP_MapGimmickObjectBase_C_OnBeginTriggerVolumeOverlap");
static_assert(sizeof(BP_MapGimmickObjectBase_C_OnBeginTriggerVolumeOverlap) == 0x000003, "Wrong size on BP_MapGimmickObjectBase_C_OnBeginTriggerVolumeOverlap");
static_assert(offsetof(BP_MapGimmickObjectBase_C_OnBeginTriggerVolumeOverlap, ReturnValue) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_OnBeginTriggerVolumeOverlap::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_OnBeginTriggerVolumeOverlap, CallFunc_OnBeginTriggerVolumeOverlap_ReturnValue) == 0x000001, "Member 'BP_MapGimmickObjectBase_C_OnBeginTriggerVolumeOverlap::CallFunc_OnBeginTriggerVolumeOverlap_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_OnBeginTriggerVolumeOverlap, K2Node_SwitchName_CmpSuccess) == 0x000002, "Member 'BP_MapGimmickObjectBase_C_OnBeginTriggerVolumeOverlap::K2Node_SwitchName_CmpSuccess' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.OnEndTriggerVolumeOverlap
// 0x0002 (0x0002 - 0x0000)
struct BP_MapGimmickObjectBase_C_OnEndTriggerVolumeOverlap final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OnEndTriggerVolumeOverlap_ReturnValue;    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_OnEndTriggerVolumeOverlap) == 0x000001, "Wrong alignment on BP_MapGimmickObjectBase_C_OnEndTriggerVolumeOverlap");
static_assert(sizeof(BP_MapGimmickObjectBase_C_OnEndTriggerVolumeOverlap) == 0x000002, "Wrong size on BP_MapGimmickObjectBase_C_OnEndTriggerVolumeOverlap");
static_assert(offsetof(BP_MapGimmickObjectBase_C_OnEndTriggerVolumeOverlap, ReturnValue) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_OnEndTriggerVolumeOverlap::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_OnEndTriggerVolumeOverlap, CallFunc_OnEndTriggerVolumeOverlap_ReturnValue) == 0x000001, "Member 'BP_MapGimmickObjectBase_C_OnEndTriggerVolumeOverlap::CallFunc_OnEndTriggerVolumeOverlap_ReturnValue' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.GetStateLevelSequence
// 0x0038 (0x0038 - 0x0000)
struct BP_MapGimmickObjectBase_C_GetStateLevelSequence final
{
public:
	class FName                                   StateName;                                         // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequence*                         Sequence;                                          // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Found;                                             // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7080[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMapGimmickStateLevelSequence          CallFunc_Map_Find_Value;                           // 0x0018(0x0010)()
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7081[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelSequence*                         CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_GetStateLevelSequence) == 0x000008, "Wrong alignment on BP_MapGimmickObjectBase_C_GetStateLevelSequence");
static_assert(sizeof(BP_MapGimmickObjectBase_C_GetStateLevelSequence) == 0x000038, "Wrong size on BP_MapGimmickObjectBase_C_GetStateLevelSequence");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetStateLevelSequence, StateName) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_GetStateLevelSequence::StateName' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetStateLevelSequence, Sequence) == 0x000008, "Member 'BP_MapGimmickObjectBase_C_GetStateLevelSequence::Sequence' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetStateLevelSequence, Found) == 0x000010, "Member 'BP_MapGimmickObjectBase_C_GetStateLevelSequence::Found' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetStateLevelSequence, CallFunc_Map_Find_Value) == 0x000018, "Member 'BP_MapGimmickObjectBase_C_GetStateLevelSequence::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetStateLevelSequence, CallFunc_Map_Find_ReturnValue) == 0x000028, "Member 'BP_MapGimmickObjectBase_C_GetStateLevelSequence::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetStateLevelSequence, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_MapGimmickObjectBase_C_GetStateLevelSequence::CallFunc_Array_Get_Item' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.GetSeqCameraReverceTransform
// 0x00F0 (0x00F0 - 0x0000)
struct BP_MapGimmickObjectBase_C_GetSeqCameraReverceTransform final
{
public:
	struct FTransform                             RevTrans;                                          // 0x0000(0x0030)(Parm, OutParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7082[0xC];                                     // 0x0054(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetRelativeTransform_ReturnValue;         // 0x0060(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x0090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x009C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x00A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x00B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00C0(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_GetSeqCameraReverceTransform) == 0x000010, "Wrong alignment on BP_MapGimmickObjectBase_C_GetSeqCameraReverceTransform");
static_assert(sizeof(BP_MapGimmickObjectBase_C_GetSeqCameraReverceTransform) == 0x0000F0, "Wrong size on BP_MapGimmickObjectBase_C_GetSeqCameraReverceTransform");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetSeqCameraReverceTransform, RevTrans) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_GetSeqCameraReverceTransform::RevTrans' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetSeqCameraReverceTransform, CallFunc_BreakTransform_Location) == 0x000030, "Member 'BP_MapGimmickObjectBase_C_GetSeqCameraReverceTransform::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetSeqCameraReverceTransform, CallFunc_BreakTransform_Rotation) == 0x00003C, "Member 'BP_MapGimmickObjectBase_C_GetSeqCameraReverceTransform::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetSeqCameraReverceTransform, CallFunc_BreakTransform_Scale) == 0x000048, "Member 'BP_MapGimmickObjectBase_C_GetSeqCameraReverceTransform::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetSeqCameraReverceTransform, CallFunc_GetRelativeTransform_ReturnValue) == 0x000060, "Member 'BP_MapGimmickObjectBase_C_GetSeqCameraReverceTransform::CallFunc_GetRelativeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetSeqCameraReverceTransform, CallFunc_BreakTransform_Location_1) == 0x000090, "Member 'BP_MapGimmickObjectBase_C_GetSeqCameraReverceTransform::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetSeqCameraReverceTransform, CallFunc_BreakTransform_Rotation_1) == 0x00009C, "Member 'BP_MapGimmickObjectBase_C_GetSeqCameraReverceTransform::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetSeqCameraReverceTransform, CallFunc_BreakTransform_Scale_1) == 0x0000A8, "Member 'BP_MapGimmickObjectBase_C_GetSeqCameraReverceTransform::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetSeqCameraReverceTransform, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0000B4, "Member 'BP_MapGimmickObjectBase_C_GetSeqCameraReverceTransform::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetSeqCameraReverceTransform, CallFunc_MakeTransform_ReturnValue) == 0x0000C0, "Member 'BP_MapGimmickObjectBase_C_GetSeqCameraReverceTransform::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.BackupBeforeSequencePlay
// 0x0120 (0x0120 - 0x0000)
struct BP_MapGimmickObjectBase_C_BackupBeforeSequencePlay final
{
public:
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFOVAngle_ReturnValue;                  // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult;      // 0x000C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue;         // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7083[0x3];                                     // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerManager*                         CallFunc_GetPlayerManager_PlayerManager;           // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue_1;     // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSCharacterBase*                       CallFunc_GetPlayer_ReturnValue;                    // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x00B0(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7084[0xF];                                     // 0x00E1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue_1;               // 0x00F0(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_BackupBeforeSequencePlay) == 0x000010, "Wrong alignment on BP_MapGimmickObjectBase_C_BackupBeforeSequencePlay");
static_assert(sizeof(BP_MapGimmickObjectBase_C_BackupBeforeSequencePlay) == 0x000120, "Wrong size on BP_MapGimmickObjectBase_C_BackupBeforeSequencePlay");
static_assert(offsetof(BP_MapGimmickObjectBase_C_BackupBeforeSequencePlay, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_BackupBeforeSequencePlay::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_BackupBeforeSequencePlay, CallFunc_GetFOVAngle_ReturnValue) == 0x000008, "Member 'BP_MapGimmickObjectBase_C_BackupBeforeSequencePlay::CallFunc_GetFOVAngle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_BackupBeforeSequencePlay, CallFunc_K2_SetActorTransform_SweepHitResult) == 0x00000C, "Member 'BP_MapGimmickObjectBase_C_BackupBeforeSequencePlay::CallFunc_K2_SetActorTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_BackupBeforeSequencePlay, CallFunc_K2_SetActorTransform_ReturnValue) == 0x000094, "Member 'BP_MapGimmickObjectBase_C_BackupBeforeSequencePlay::CallFunc_K2_SetActorTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_BackupBeforeSequencePlay, CallFunc_GetPlayerManager_PlayerManager) == 0x000098, "Member 'BP_MapGimmickObjectBase_C_BackupBeforeSequencePlay::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_BackupBeforeSequencePlay, CallFunc_GetPlayerCameraManager_ReturnValue_1) == 0x0000A0, "Member 'BP_MapGimmickObjectBase_C_BackupBeforeSequencePlay::CallFunc_GetPlayerCameraManager_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_BackupBeforeSequencePlay, CallFunc_GetPlayer_ReturnValue) == 0x0000A8, "Member 'BP_MapGimmickObjectBase_C_BackupBeforeSequencePlay::CallFunc_GetPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_BackupBeforeSequencePlay, CallFunc_GetTransform_ReturnValue) == 0x0000B0, "Member 'BP_MapGimmickObjectBase_C_BackupBeforeSequencePlay::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_BackupBeforeSequencePlay, CallFunc_IsValid_ReturnValue) == 0x0000E0, "Member 'BP_MapGimmickObjectBase_C_BackupBeforeSequencePlay::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_BackupBeforeSequencePlay, CallFunc_GetTransform_ReturnValue_1) == 0x0000F0, "Member 'BP_MapGimmickObjectBase_C_BackupBeforeSequencePlay::CallFunc_GetTransform_ReturnValue_1' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.IsExistStateLevelSequence
// 0x0030 (0x0030 - 0x0000)
struct BP_MapGimmickObjectBase_C_IsExistStateLevelSequence final
{
public:
	class FName                                   StateName;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Exist;                                             // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7085[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMapGimmickStateLevelSequence          CallFunc_Map_Find_Value;                           // 0x0010(0x0010)()
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7086[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_IsExistStateLevelSequence) == 0x000008, "Wrong alignment on BP_MapGimmickObjectBase_C_IsExistStateLevelSequence");
static_assert(sizeof(BP_MapGimmickObjectBase_C_IsExistStateLevelSequence) == 0x000030, "Wrong size on BP_MapGimmickObjectBase_C_IsExistStateLevelSequence");
static_assert(offsetof(BP_MapGimmickObjectBase_C_IsExistStateLevelSequence, StateName) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_IsExistStateLevelSequence::StateName' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_IsExistStateLevelSequence, Exist) == 0x000008, "Member 'BP_MapGimmickObjectBase_C_IsExistStateLevelSequence::Exist' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_IsExistStateLevelSequence, CallFunc_Map_Find_Value) == 0x000010, "Member 'BP_MapGimmickObjectBase_C_IsExistStateLevelSequence::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_IsExistStateLevelSequence, CallFunc_Map_Find_ReturnValue) == 0x000020, "Member 'BP_MapGimmickObjectBase_C_IsExistStateLevelSequence::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_IsExistStateLevelSequence, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'BP_MapGimmickObjectBase_C_IsExistStateLevelSequence::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_IsExistStateLevelSequence, CallFunc_Greater_IntInt_ReturnValue) == 0x000028, "Member 'BP_MapGimmickObjectBase_C_IsExistStateLevelSequence::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.OnAnimationEndDefaultFunc
// 0x0008 (0x0008 - 0x0000)
struct BP_MapGimmickObjectBase_C_OnAnimationEndDefaultFunc final
{
public:
	class FName                                   CallFunc_ChangeToNextState_ReturnValue;            // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_OnAnimationEndDefaultFunc) == 0x000004, "Wrong alignment on BP_MapGimmickObjectBase_C_OnAnimationEndDefaultFunc");
static_assert(sizeof(BP_MapGimmickObjectBase_C_OnAnimationEndDefaultFunc) == 0x000008, "Wrong size on BP_MapGimmickObjectBase_C_OnAnimationEndDefaultFunc");
static_assert(offsetof(BP_MapGimmickObjectBase_C_OnAnimationEndDefaultFunc, CallFunc_ChangeToNextState_ReturnValue) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_OnAnimationEndDefaultFunc::CallFunc_ChangeToNextState_ReturnValue' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.StopStateSequence
// 0x0030 (0x0030 - 0x0000)
struct BP_MapGimmickObjectBase_C_StopStateSequence final
{
public:
	class FName                                   StateName;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   Player;                                            // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsExistStateLevelSequence_Exist;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7087[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSLevelSequenceActor*                  CallFunc_GetSequencePlayer_Actor;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_Player;                 // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSequencePlayer_Error;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_StopStateSequence) == 0x000008, "Wrong alignment on BP_MapGimmickObjectBase_C_StopStateSequence");
static_assert(sizeof(BP_MapGimmickObjectBase_C_StopStateSequence) == 0x000030, "Wrong size on BP_MapGimmickObjectBase_C_StopStateSequence");
static_assert(offsetof(BP_MapGimmickObjectBase_C_StopStateSequence, StateName) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_StopStateSequence::StateName' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_StopStateSequence, Player) == 0x000008, "Member 'BP_MapGimmickObjectBase_C_StopStateSequence::Player' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_StopStateSequence, CallFunc_IsExistStateLevelSequence_Exist) == 0x000010, "Member 'BP_MapGimmickObjectBase_C_StopStateSequence::CallFunc_IsExistStateLevelSequence_Exist' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_StopStateSequence, CallFunc_GetSequencePlayer_Actor) == 0x000018, "Member 'BP_MapGimmickObjectBase_C_StopStateSequence::CallFunc_GetSequencePlayer_Actor' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_StopStateSequence, CallFunc_GetSequencePlayer_Player) == 0x000020, "Member 'BP_MapGimmickObjectBase_C_StopStateSequence::CallFunc_GetSequencePlayer_Player' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_StopStateSequence, CallFunc_GetSequencePlayer_Error) == 0x000028, "Member 'BP_MapGimmickObjectBase_C_StopStateSequence::CallFunc_GetSequencePlayer_Error' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.PlayFinishAnimation
// 0x00F0 (0x00F0 - 0x0000)
struct BP_MapGimmickObjectBase_C_PlayFinishAnimation final
{
public:
	float                                         MoveScale;                                         // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMapGimmickFinishDir                          FinishDir;                                         // 0x0004(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7088[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue;           // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_GetActorToPlayerDistance_Distance;        // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7089[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue_1;         // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue_2;         // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_708A[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_CalcFinishAnimMoveDistance_Length;        // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_708B[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue_3;         // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_708C[0x4];                                     // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_6;              // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_CallOnExecMapGimmickEvent_ReturnValue;    // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_708D[0x3];                                     // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGimmickTriggerVolume*                  CallFunc_Array_Get_Item;                           // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_PlayFinishAnimation) == 0x000008, "Wrong alignment on BP_MapGimmickObjectBase_C_PlayFinishAnimation");
static_assert(sizeof(BP_MapGimmickObjectBase_C_PlayFinishAnimation) == 0x0000F0, "Wrong size on BP_MapGimmickObjectBase_C_PlayFinishAnimation");
static_assert(offsetof(BP_MapGimmickObjectBase_C_PlayFinishAnimation, MoveScale) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_PlayFinishAnimation::MoveScale' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_PlayFinishAnimation, FinishDir) == 0x000004, "Member 'BP_MapGimmickObjectBase_C_PlayFinishAnimation::FinishDir' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_PlayFinishAnimation, CallFunc_Conv_FloatToString_ReturnValue) == 0x000008, "Member 'BP_MapGimmickObjectBase_C_PlayFinishAnimation::CallFunc_Conv_FloatToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_PlayFinishAnimation, CallFunc_GetActorToPlayerDistance_Distance) == 0x000018, "Member 'BP_MapGimmickObjectBase_C_PlayFinishAnimation::CallFunc_GetActorToPlayerDistance_Distance' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_PlayFinishAnimation, CallFunc_Conv_FloatToString_ReturnValue_1) == 0x000020, "Member 'BP_MapGimmickObjectBase_C_PlayFinishAnimation::CallFunc_Conv_FloatToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_PlayFinishAnimation, CallFunc_Conv_FloatToString_ReturnValue_2) == 0x000030, "Member 'BP_MapGimmickObjectBase_C_PlayFinishAnimation::CallFunc_Conv_FloatToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_PlayFinishAnimation, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000040, "Member 'BP_MapGimmickObjectBase_C_PlayFinishAnimation::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_PlayFinishAnimation, CallFunc_Concat_StrStr_ReturnValue) == 0x000048, "Member 'BP_MapGimmickObjectBase_C_PlayFinishAnimation::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_PlayFinishAnimation, CallFunc_CalcFinishAnimMoveDistance_Length) == 0x000058, "Member 'BP_MapGimmickObjectBase_C_PlayFinishAnimation::CallFunc_CalcFinishAnimMoveDistance_Length' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_PlayFinishAnimation, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000060, "Member 'BP_MapGimmickObjectBase_C_PlayFinishAnimation::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_PlayFinishAnimation, CallFunc_Conv_FloatToString_ReturnValue_3) == 0x000070, "Member 'BP_MapGimmickObjectBase_C_PlayFinishAnimation::CallFunc_Conv_FloatToString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_PlayFinishAnimation, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000080, "Member 'BP_MapGimmickObjectBase_C_PlayFinishAnimation::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_PlayFinishAnimation, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000090, "Member 'BP_MapGimmickObjectBase_C_PlayFinishAnimation::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_PlayFinishAnimation, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000098, "Member 'BP_MapGimmickObjectBase_C_PlayFinishAnimation::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_PlayFinishAnimation, CallFunc_Concat_StrStr_ReturnValue_4) == 0x0000A8, "Member 'BP_MapGimmickObjectBase_C_PlayFinishAnimation::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_PlayFinishAnimation, CallFunc_Concat_StrStr_ReturnValue_5) == 0x0000B8, "Member 'BP_MapGimmickObjectBase_C_PlayFinishAnimation::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_PlayFinishAnimation, CallFunc_Concat_StrStr_ReturnValue_6) == 0x0000C8, "Member 'BP_MapGimmickObjectBase_C_PlayFinishAnimation::CallFunc_Concat_StrStr_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_PlayFinishAnimation, CallFunc_CallOnExecMapGimmickEvent_ReturnValue) == 0x0000D8, "Member 'BP_MapGimmickObjectBase_C_PlayFinishAnimation::CallFunc_CallOnExecMapGimmickEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_PlayFinishAnimation, CallFunc_Array_LastIndex_ReturnValue) == 0x0000DC, "Member 'BP_MapGimmickObjectBase_C_PlayFinishAnimation::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_PlayFinishAnimation, CallFunc_Array_Get_Item) == 0x0000E0, "Member 'BP_MapGimmickObjectBase_C_PlayFinishAnimation::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_PlayFinishAnimation, CallFunc_IsValid_ReturnValue) == 0x0000E8, "Member 'BP_MapGimmickObjectBase_C_PlayFinishAnimation::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.PlayFinishAnimationRaw
// 0x0001 (0x0001 - 0x0000)
struct BP_MapGimmickObjectBase_C_PlayFinishAnimationRaw final
{
public:
	EMapGimmickFinishDir                          Dir;                                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_PlayFinishAnimationRaw) == 0x000001, "Wrong alignment on BP_MapGimmickObjectBase_C_PlayFinishAnimationRaw");
static_assert(sizeof(BP_MapGimmickObjectBase_C_PlayFinishAnimationRaw) == 0x000001, "Wrong size on BP_MapGimmickObjectBase_C_PlayFinishAnimationRaw");
static_assert(offsetof(BP_MapGimmickObjectBase_C_PlayFinishAnimationRaw, Dir) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_PlayFinishAnimationRaw::Dir' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.GetPlayerToGimmickDir
// 0x0010 (0x0010 - 0x0000)
struct BP_MapGimmickObjectBase_C_GetPlayerToGimmickDir final
{
public:
	EMapGimmickFinishDir                          Dir;                                               // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_708E[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerManager*                         CallFunc_GetPlayerManager_PlayerManager;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_GetPlayerToGimmickDir) == 0x000008, "Wrong alignment on BP_MapGimmickObjectBase_C_GetPlayerToGimmickDir");
static_assert(sizeof(BP_MapGimmickObjectBase_C_GetPlayerToGimmickDir) == 0x000010, "Wrong size on BP_MapGimmickObjectBase_C_GetPlayerToGimmickDir");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetPlayerToGimmickDir, Dir) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_GetPlayerToGimmickDir::Dir' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetPlayerToGimmickDir, CallFunc_GetPlayerManager_PlayerManager) == 0x000008, "Member 'BP_MapGimmickObjectBase_C_GetPlayerToGimmickDir::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.DefaultChargeFunc
// 0x0048 (0x0048 - 0x0000)
struct BP_MapGimmickObjectBase_C_DefaultChargeFunc final
{
public:
	EMapGimmickStatusFunc                         Status;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_708F[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DeltaSeconds;                                      // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   StateName;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7090[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetNextStateName_ReturnValue;             // 0x0014(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7091[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_ChangeState_ReturnValue;                  // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetNextCancelStateName_ReturnValue;       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UpdateWidgetGauge_ReturnValue;            // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7092[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_ChangeState_ReturnValue_1;                // 0x0034(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7093[0x3];                                     // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue;                         // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_DefaultChargeFunc) == 0x000004, "Wrong alignment on BP_MapGimmickObjectBase_C_DefaultChargeFunc");
static_assert(sizeof(BP_MapGimmickObjectBase_C_DefaultChargeFunc) == 0x000048, "Wrong size on BP_MapGimmickObjectBase_C_DefaultChargeFunc");
static_assert(offsetof(BP_MapGimmickObjectBase_C_DefaultChargeFunc, Status) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_DefaultChargeFunc::Status' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_DefaultChargeFunc, DeltaSeconds) == 0x000004, "Member 'BP_MapGimmickObjectBase_C_DefaultChargeFunc::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_DefaultChargeFunc, StateName) == 0x000008, "Member 'BP_MapGimmickObjectBase_C_DefaultChargeFunc::StateName' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_DefaultChargeFunc, Result) == 0x000010, "Member 'BP_MapGimmickObjectBase_C_DefaultChargeFunc::Result' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_DefaultChargeFunc, CallFunc_GetNextStateName_ReturnValue) == 0x000014, "Member 'BP_MapGimmickObjectBase_C_DefaultChargeFunc::CallFunc_GetNextStateName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_DefaultChargeFunc, K2Node_SwitchEnum_CmpSuccess) == 0x00001C, "Member 'BP_MapGimmickObjectBase_C_DefaultChargeFunc::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_DefaultChargeFunc, CallFunc_ChangeState_ReturnValue) == 0x000020, "Member 'BP_MapGimmickObjectBase_C_DefaultChargeFunc::CallFunc_ChangeState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_DefaultChargeFunc, CallFunc_GetNextCancelStateName_ReturnValue) == 0x000028, "Member 'BP_MapGimmickObjectBase_C_DefaultChargeFunc::CallFunc_GetNextCancelStateName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_DefaultChargeFunc, CallFunc_UpdateWidgetGauge_ReturnValue) == 0x000030, "Member 'BP_MapGimmickObjectBase_C_DefaultChargeFunc::CallFunc_UpdateWidgetGauge_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_DefaultChargeFunc, CallFunc_ChangeState_ReturnValue_1) == 0x000034, "Member 'BP_MapGimmickObjectBase_C_DefaultChargeFunc::CallFunc_ChangeState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_DefaultChargeFunc, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x00003C, "Member 'BP_MapGimmickObjectBase_C_DefaultChargeFunc::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_DefaultChargeFunc, CallFunc_Add_FloatFloat_ReturnValue) == 0x000040, "Member 'BP_MapGimmickObjectBase_C_DefaultChargeFunc::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_DefaultChargeFunc, CallFunc_FMin_ReturnValue) == 0x000044, "Member 'BP_MapGimmickObjectBase_C_DefaultChargeFunc::CallFunc_FMin_ReturnValue' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.UpdateSequenceCameraFunc
// 0x01C0 (0x01C0 - 0x0000)
struct BP_MapGimmickObjectBase_C_UpdateSequenceCameraFunc final
{
public:
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7094[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSeqCameraReverceTransform_RevTrans;    // 0x0010(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_TLerp_ReturnValue;                        // 0x0040(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult;      // 0x0070(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue;         // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7095[0x3];                                     // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult_1;    // 0x00FC(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue_1;       // 0x0184(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7096[0xB];                                     // 0x0185(0x000B)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetRelativeTransform_ReturnValue;         // 0x0190(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_UpdateSequenceCameraFunc) == 0x000010, "Wrong alignment on BP_MapGimmickObjectBase_C_UpdateSequenceCameraFunc");
static_assert(sizeof(BP_MapGimmickObjectBase_C_UpdateSequenceCameraFunc) == 0x0001C0, "Wrong size on BP_MapGimmickObjectBase_C_UpdateSequenceCameraFunc");
static_assert(offsetof(BP_MapGimmickObjectBase_C_UpdateSequenceCameraFunc, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_UpdateSequenceCameraFunc::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_UpdateSequenceCameraFunc, CallFunc_GetFloatValue_ReturnValue) == 0x000008, "Member 'BP_MapGimmickObjectBase_C_UpdateSequenceCameraFunc::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_UpdateSequenceCameraFunc, CallFunc_GetSeqCameraReverceTransform_RevTrans) == 0x000010, "Member 'BP_MapGimmickObjectBase_C_UpdateSequenceCameraFunc::CallFunc_GetSeqCameraReverceTransform_RevTrans' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_UpdateSequenceCameraFunc, CallFunc_TLerp_ReturnValue) == 0x000040, "Member 'BP_MapGimmickObjectBase_C_UpdateSequenceCameraFunc::CallFunc_TLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_UpdateSequenceCameraFunc, CallFunc_K2_SetActorTransform_SweepHitResult) == 0x000070, "Member 'BP_MapGimmickObjectBase_C_UpdateSequenceCameraFunc::CallFunc_K2_SetActorTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_UpdateSequenceCameraFunc, CallFunc_K2_SetActorTransform_ReturnValue) == 0x0000F8, "Member 'BP_MapGimmickObjectBase_C_UpdateSequenceCameraFunc::CallFunc_K2_SetActorTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_UpdateSequenceCameraFunc, CallFunc_K2_SetActorTransform_SweepHitResult_1) == 0x0000FC, "Member 'BP_MapGimmickObjectBase_C_UpdateSequenceCameraFunc::CallFunc_K2_SetActorTransform_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_UpdateSequenceCameraFunc, CallFunc_K2_SetActorTransform_ReturnValue_1) == 0x000184, "Member 'BP_MapGimmickObjectBase_C_UpdateSequenceCameraFunc::CallFunc_K2_SetActorTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_UpdateSequenceCameraFunc, CallFunc_GetRelativeTransform_ReturnValue) == 0x000190, "Member 'BP_MapGimmickObjectBase_C_UpdateSequenceCameraFunc::CallFunc_GetRelativeTransform_ReturnValue' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.RegisterToManager
// 0x0008 (0x0008 - 0x0000)
struct BP_MapGimmickObjectBase_C_RegisterToManager final
{
public:
	class AMapGimmickManager*                     CallFunc_GetMapGimmickManager_MapGimmickManager;   // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_RegisterToManager) == 0x000008, "Wrong alignment on BP_MapGimmickObjectBase_C_RegisterToManager");
static_assert(sizeof(BP_MapGimmickObjectBase_C_RegisterToManager) == 0x000008, "Wrong size on BP_MapGimmickObjectBase_C_RegisterToManager");
static_assert(offsetof(BP_MapGimmickObjectBase_C_RegisterToManager, CallFunc_GetMapGimmickManager_MapGimmickManager) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_RegisterToManager::CallFunc_GetMapGimmickManager_MapGimmickManager' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.GetPlayerFinishAnimation
// 0x00C0 (0x00C0 - 0x0000)
struct BP_MapGimmickObjectBase_C_GetPlayerFinishAnimation final
{
public:
	class UAnimMontage*                           AnimMontage;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMapGimmickFinishDir                          Dir;                                               // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerID                                     Temp_byte_Variable;                                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMapGimmickFinishDir                          Temp_byte_Variable_1;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7097[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerManager*                         CallFunc_GetPlayerManager_PlayerManager;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMapGimmickPlayerFinishAnimations      CallFunc_GetDataTableRowFromName_OutRow;           // 0x0018(0x0028)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7098[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_GetPlayer_ReturnValue;                    // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IPlayerInterface>      K2Node_DynamicCast_AsPlayer_Interface;             // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerID                                     CallFunc_GetPlayerID_ReturnValue;                  // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMapGimmickFinishDir                          Temp_byte_Variable_2;                              // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7099[0x5];                                     // 0x0063(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           K2Node_Select_Default;                             // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMapGimmickPlayerFinishAnimations      CallFunc_GetDataTableRowFromName_OutRow_1;         // 0x0070(0x0028)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_1;    // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_709A[0x7];                                     // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           K2Node_Select_Default_1;                           // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_709B[0x4];                                     // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGimmickTriggerVolume*                  CallFunc_Array_Get_Item;                           // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_GetPlayerFinishAnimation) == 0x000008, "Wrong alignment on BP_MapGimmickObjectBase_C_GetPlayerFinishAnimation");
static_assert(sizeof(BP_MapGimmickObjectBase_C_GetPlayerFinishAnimation) == 0x0000C0, "Wrong size on BP_MapGimmickObjectBase_C_GetPlayerFinishAnimation");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetPlayerFinishAnimation, AnimMontage) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_GetPlayerFinishAnimation::AnimMontage' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetPlayerFinishAnimation, Dir) == 0x000008, "Member 'BP_MapGimmickObjectBase_C_GetPlayerFinishAnimation::Dir' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetPlayerFinishAnimation, Temp_byte_Variable) == 0x000009, "Member 'BP_MapGimmickObjectBase_C_GetPlayerFinishAnimation::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetPlayerFinishAnimation, Temp_byte_Variable_1) == 0x00000A, "Member 'BP_MapGimmickObjectBase_C_GetPlayerFinishAnimation::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetPlayerFinishAnimation, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00000B, "Member 'BP_MapGimmickObjectBase_C_GetPlayerFinishAnimation::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetPlayerFinishAnimation, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00000C, "Member 'BP_MapGimmickObjectBase_C_GetPlayerFinishAnimation::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetPlayerFinishAnimation, CallFunc_GetPlayerManager_PlayerManager) == 0x000010, "Member 'BP_MapGimmickObjectBase_C_GetPlayerFinishAnimation::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetPlayerFinishAnimation, CallFunc_GetDataTableRowFromName_OutRow) == 0x000018, "Member 'BP_MapGimmickObjectBase_C_GetPlayerFinishAnimation::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetPlayerFinishAnimation, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000040, "Member 'BP_MapGimmickObjectBase_C_GetPlayerFinishAnimation::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetPlayerFinishAnimation, CallFunc_GetPlayer_ReturnValue) == 0x000048, "Member 'BP_MapGimmickObjectBase_C_GetPlayerFinishAnimation::CallFunc_GetPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetPlayerFinishAnimation, K2Node_DynamicCast_AsPlayer_Interface) == 0x000050, "Member 'BP_MapGimmickObjectBase_C_GetPlayerFinishAnimation::K2Node_DynamicCast_AsPlayer_Interface' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetPlayerFinishAnimation, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'BP_MapGimmickObjectBase_C_GetPlayerFinishAnimation::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetPlayerFinishAnimation, CallFunc_GetPlayerID_ReturnValue) == 0x000061, "Member 'BP_MapGimmickObjectBase_C_GetPlayerFinishAnimation::CallFunc_GetPlayerID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetPlayerFinishAnimation, Temp_byte_Variable_2) == 0x000062, "Member 'BP_MapGimmickObjectBase_C_GetPlayerFinishAnimation::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetPlayerFinishAnimation, K2Node_Select_Default) == 0x000068, "Member 'BP_MapGimmickObjectBase_C_GetPlayerFinishAnimation::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetPlayerFinishAnimation, CallFunc_GetDataTableRowFromName_OutRow_1) == 0x000070, "Member 'BP_MapGimmickObjectBase_C_GetPlayerFinishAnimation::CallFunc_GetDataTableRowFromName_OutRow_1' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetPlayerFinishAnimation, CallFunc_GetDataTableRowFromName_ReturnValue_1) == 0x000098, "Member 'BP_MapGimmickObjectBase_C_GetPlayerFinishAnimation::CallFunc_GetDataTableRowFromName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetPlayerFinishAnimation, K2Node_Select_Default_1) == 0x0000A0, "Member 'BP_MapGimmickObjectBase_C_GetPlayerFinishAnimation::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetPlayerFinishAnimation, CallFunc_Array_LastIndex_ReturnValue) == 0x0000A8, "Member 'BP_MapGimmickObjectBase_C_GetPlayerFinishAnimation::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetPlayerFinishAnimation, CallFunc_Array_Get_Item) == 0x0000B0, "Member 'BP_MapGimmickObjectBase_C_GetPlayerFinishAnimation::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetPlayerFinishAnimation, CallFunc_IsValid_ReturnValue) == 0x0000B8, "Member 'BP_MapGimmickObjectBase_C_GetPlayerFinishAnimation::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.SetOutline
// 0x0048 (0x0048 - 0x0000)
struct BP_MapGimmickObjectBase_C_SetOutline final
{
public:
	bool                                          On;                                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ParamOn;                                           // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_709C[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APsychicObjectManager_C*                CallFunc_GetPsychicObjectManager_PsyObjManager;    // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_709D[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    CallFunc_GetPrimitive_ReturnValue;                 // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_709E[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 K2Node_DynamicCast_AsSkeletal_Mesh_Component;      // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_709F[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   K2Node_DynamicCast_AsStatic_Mesh_Component;        // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_SetOutline) == 0x000008, "Wrong alignment on BP_MapGimmickObjectBase_C_SetOutline");
static_assert(sizeof(BP_MapGimmickObjectBase_C_SetOutline) == 0x000048, "Wrong size on BP_MapGimmickObjectBase_C_SetOutline");
static_assert(offsetof(BP_MapGimmickObjectBase_C_SetOutline, On) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_SetOutline::On' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_SetOutline, ParamOn) == 0x000001, "Member 'BP_MapGimmickObjectBase_C_SetOutline::ParamOn' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_SetOutline, CallFunc_GetPsychicObjectManager_PsyObjManager) == 0x000008, "Member 'BP_MapGimmickObjectBase_C_SetOutline::CallFunc_GetPsychicObjectManager_PsyObjManager' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_SetOutline, CallFunc_SelectFloat_ReturnValue) == 0x000010, "Member 'BP_MapGimmickObjectBase_C_SetOutline::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_SetOutline, CallFunc_GetPrimitive_ReturnValue) == 0x000018, "Member 'BP_MapGimmickObjectBase_C_SetOutline::CallFunc_GetPrimitive_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_SetOutline, CallFunc_SelectInt_ReturnValue) == 0x000020, "Member 'BP_MapGimmickObjectBase_C_SetOutline::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_SetOutline, CallFunc_IsValid_ReturnValue) == 0x000024, "Member 'BP_MapGimmickObjectBase_C_SetOutline::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_SetOutline, K2Node_DynamicCast_AsSkeletal_Mesh_Component) == 0x000028, "Member 'BP_MapGimmickObjectBase_C_SetOutline::K2Node_DynamicCast_AsSkeletal_Mesh_Component' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_SetOutline, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_MapGimmickObjectBase_C_SetOutline::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_SetOutline, K2Node_DynamicCast_AsStatic_Mesh_Component) == 0x000038, "Member 'BP_MapGimmickObjectBase_C_SetOutline::K2Node_DynamicCast_AsStatic_Mesh_Component' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_SetOutline, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'BP_MapGimmickObjectBase_C_SetOutline::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_SetOutline, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000041, "Member 'BP_MapGimmickObjectBase_C_SetOutline::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.SetEffectFocus
// 0x0002 (0x0002 - 0x0000)
struct BP_MapGimmickObjectBase_C_SetEffectFocus final
{
public:
	bool                                          Flag;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_SetEffectFocus) == 0x000001, "Wrong alignment on BP_MapGimmickObjectBase_C_SetEffectFocus");
static_assert(sizeof(BP_MapGimmickObjectBase_C_SetEffectFocus) == 0x000002, "Wrong size on BP_MapGimmickObjectBase_C_SetEffectFocus");
static_assert(offsetof(BP_MapGimmickObjectBase_C_SetEffectFocus, Flag) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_SetEffectFocus::Flag' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_SetEffectFocus, ReturnValue) == 0x000001, "Member 'BP_MapGimmickObjectBase_C_SetEffectFocus::ReturnValue' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.SetFadeoutMIParameter
// 0x0048 (0x0048 - 0x0000)
struct BP_MapGimmickObjectBase_C_SetFadeoutMIParameter final
{
public:
	float                                         Fade;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_70A0[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    CallFunc_GetPrimitive_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_70A1[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UDestructibleComponent*                 K2Node_DynamicCast_AsDestructible_Component;       // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_70A2[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 K2Node_DynamicCast_AsSkeletal_Mesh_Component;      // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_70A3[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   K2Node_DynamicCast_AsStatic_Mesh_Component;        // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_SetFadeoutMIParameter) == 0x000008, "Wrong alignment on BP_MapGimmickObjectBase_C_SetFadeoutMIParameter");
static_assert(sizeof(BP_MapGimmickObjectBase_C_SetFadeoutMIParameter) == 0x000048, "Wrong size on BP_MapGimmickObjectBase_C_SetFadeoutMIParameter");
static_assert(offsetof(BP_MapGimmickObjectBase_C_SetFadeoutMIParameter, Fade) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_SetFadeoutMIParameter::Fade' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_SetFadeoutMIParameter, CallFunc_GetPrimitive_ReturnValue) == 0x000008, "Member 'BP_MapGimmickObjectBase_C_SetFadeoutMIParameter::CallFunc_GetPrimitive_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_SetFadeoutMIParameter, CallFunc_FClamp_ReturnValue) == 0x000010, "Member 'BP_MapGimmickObjectBase_C_SetFadeoutMIParameter::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_SetFadeoutMIParameter, K2Node_DynamicCast_AsDestructible_Component) == 0x000018, "Member 'BP_MapGimmickObjectBase_C_SetFadeoutMIParameter::K2Node_DynamicCast_AsDestructible_Component' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_SetFadeoutMIParameter, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_MapGimmickObjectBase_C_SetFadeoutMIParameter::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_SetFadeoutMIParameter, K2Node_DynamicCast_AsSkeletal_Mesh_Component) == 0x000028, "Member 'BP_MapGimmickObjectBase_C_SetFadeoutMIParameter::K2Node_DynamicCast_AsSkeletal_Mesh_Component' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_SetFadeoutMIParameter, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'BP_MapGimmickObjectBase_C_SetFadeoutMIParameter::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_SetFadeoutMIParameter, K2Node_DynamicCast_AsStatic_Mesh_Component) == 0x000038, "Member 'BP_MapGimmickObjectBase_C_SetFadeoutMIParameter::K2Node_DynamicCast_AsStatic_Mesh_Component' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_SetFadeoutMIParameter, K2Node_DynamicCast_bSuccess_2) == 0x000040, "Member 'BP_MapGimmickObjectBase_C_SetFadeoutMIParameter::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.DebugCallActivate
// 0x0010 (0x0010 - 0x0000)
struct BP_MapGimmickObjectBase_C_DebugCallActivate final
{
public:
	class FName                                   CallFunc_ChangeState_ReturnValue;                  // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_ChangeState_ReturnValue_1;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_DebugCallActivate) == 0x000004, "Wrong alignment on BP_MapGimmickObjectBase_C_DebugCallActivate");
static_assert(sizeof(BP_MapGimmickObjectBase_C_DebugCallActivate) == 0x000010, "Wrong size on BP_MapGimmickObjectBase_C_DebugCallActivate");
static_assert(offsetof(BP_MapGimmickObjectBase_C_DebugCallActivate, CallFunc_ChangeState_ReturnValue) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_DebugCallActivate::CallFunc_ChangeState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_DebugCallActivate, CallFunc_ChangeState_ReturnValue_1) == 0x000008, "Member 'BP_MapGimmickObjectBase_C_DebugCallActivate::CallFunc_ChangeState_ReturnValue_1' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.StartCamera
// 0x0020 (0x0020 - 0x0000)
struct BP_MapGimmickObjectBase_C_StartCamera final
{
public:
	class APlayerManager*                         CallFunc_GetPlayerManager_PlayerManager;           // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSCharacterBase*                       CallFunc_GetPlayer_ReturnValue;                    // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARsBattleHero_C*                        K2Node_DynamicCast_AsRs_Battle_Hero;               // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_StartCamera) == 0x000008, "Wrong alignment on BP_MapGimmickObjectBase_C_StartCamera");
static_assert(sizeof(BP_MapGimmickObjectBase_C_StartCamera) == 0x000020, "Wrong size on BP_MapGimmickObjectBase_C_StartCamera");
static_assert(offsetof(BP_MapGimmickObjectBase_C_StartCamera, CallFunc_GetPlayerManager_PlayerManager) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_StartCamera::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_StartCamera, CallFunc_GetPlayer_ReturnValue) == 0x000008, "Member 'BP_MapGimmickObjectBase_C_StartCamera::CallFunc_GetPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_StartCamera, K2Node_DynamicCast_AsRs_Battle_Hero) == 0x000010, "Member 'BP_MapGimmickObjectBase_C_StartCamera::K2Node_DynamicCast_AsRs_Battle_Hero' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_StartCamera, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_MapGimmickObjectBase_C_StartCamera::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.EndCamera
// 0x0028 (0x0028 - 0x0000)
struct BP_MapGimmickObjectBase_C_EndCamera final
{
public:
	bool                                          Force;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Capture_cancel;                                    // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_70A4[0x5];                                     // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerManager*                         CallFunc_GetPlayerManager_PlayerManager;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSCharacterBase*                       CallFunc_GetPlayer_ReturnValue;                    // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARsBattleHero_C*                        K2Node_DynamicCast_AsRs_Battle_Hero;               // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_EndCamera) == 0x000008, "Wrong alignment on BP_MapGimmickObjectBase_C_EndCamera");
static_assert(sizeof(BP_MapGimmickObjectBase_C_EndCamera) == 0x000028, "Wrong size on BP_MapGimmickObjectBase_C_EndCamera");
static_assert(offsetof(BP_MapGimmickObjectBase_C_EndCamera, Force) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_EndCamera::Force' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_EndCamera, Capture_cancel) == 0x000001, "Member 'BP_MapGimmickObjectBase_C_EndCamera::Capture_cancel' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_EndCamera, CallFunc_BooleanAND_ReturnValue) == 0x000002, "Member 'BP_MapGimmickObjectBase_C_EndCamera::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_EndCamera, CallFunc_GetPlayerManager_PlayerManager) == 0x000008, "Member 'BP_MapGimmickObjectBase_C_EndCamera::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_EndCamera, CallFunc_GetPlayer_ReturnValue) == 0x000010, "Member 'BP_MapGimmickObjectBase_C_EndCamera::CallFunc_GetPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_EndCamera, K2Node_DynamicCast_AsRs_Battle_Hero) == 0x000018, "Member 'BP_MapGimmickObjectBase_C_EndCamera::K2Node_DynamicCast_AsRs_Battle_Hero' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_EndCamera, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_MapGimmickObjectBase_C_EndCamera::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.ResetCamera
// 0x0020 (0x0020 - 0x0000)
struct BP_MapGimmickObjectBase_C_ResetCamera final
{
public:
	class APlayerManager*                         CallFunc_GetPlayerManager_PlayerManager;           // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSCharacterBase*                       CallFunc_GetPlayer_ReturnValue;                    // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARsBattleHero_C*                        K2Node_DynamicCast_AsRs_Battle_Hero;               // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_ResetCamera) == 0x000008, "Wrong alignment on BP_MapGimmickObjectBase_C_ResetCamera");
static_assert(sizeof(BP_MapGimmickObjectBase_C_ResetCamera) == 0x000020, "Wrong size on BP_MapGimmickObjectBase_C_ResetCamera");
static_assert(offsetof(BP_MapGimmickObjectBase_C_ResetCamera, CallFunc_GetPlayerManager_PlayerManager) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_ResetCamera::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_ResetCamera, CallFunc_GetPlayer_ReturnValue) == 0x000008, "Member 'BP_MapGimmickObjectBase_C_ResetCamera::CallFunc_GetPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_ResetCamera, K2Node_DynamicCast_AsRs_Battle_Hero) == 0x000010, "Member 'BP_MapGimmickObjectBase_C_ResetCamera::K2Node_DynamicCast_AsRs_Battle_Hero' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_ResetCamera, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_MapGimmickObjectBase_C_ResetCamera::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.ShakeCamera
// 0x0020 (0x0020 - 0x0000)
struct BP_MapGimmickObjectBase_C_ShakeCamera final
{
public:
	int32                                         No;                                                // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_70A5[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_ShakeCamera) == 0x000008, "Wrong alignment on BP_MapGimmickObjectBase_C_ShakeCamera");
static_assert(sizeof(BP_MapGimmickObjectBase_C_ShakeCamera) == 0x000020, "Wrong size on BP_MapGimmickObjectBase_C_ShakeCamera");
static_assert(offsetof(BP_MapGimmickObjectBase_C_ShakeCamera, No) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_ShakeCamera::No' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_ShakeCamera, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'BP_MapGimmickObjectBase_C_ShakeCamera::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_ShakeCamera, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_MapGimmickObjectBase_C_ShakeCamera::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_ShakeCamera, CallFunc_IsValidClass_ReturnValue) == 0x000018, "Member 'BP_MapGimmickObjectBase_C_ShakeCamera::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.PlayEffectBackgrounds
// 0x0018 (0x0018 - 0x0000)
struct BP_MapGimmickObjectBase_C_PlayEffectBackgrounds final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_70A6[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_PlayEffectBackgrounds) == 0x000004, "Wrong alignment on BP_MapGimmickObjectBase_C_PlayEffectBackgrounds");
static_assert(sizeof(BP_MapGimmickObjectBase_C_PlayEffectBackgrounds) == 0x000018, "Wrong size on BP_MapGimmickObjectBase_C_PlayEffectBackgrounds");
static_assert(offsetof(BP_MapGimmickObjectBase_C_PlayEffectBackgrounds, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_PlayEffectBackgrounds::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_PlayEffectBackgrounds, Temp_int_Loop_Num_Variable) == 0x000004, "Member 'BP_MapGimmickObjectBase_C_PlayEffectBackgrounds::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_PlayEffectBackgrounds, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_MapGimmickObjectBase_C_PlayEffectBackgrounds::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_PlayEffectBackgrounds, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'BP_MapGimmickObjectBase_C_PlayEffectBackgrounds::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_PlayEffectBackgrounds, CallFunc_Less_IntInt_ReturnValue) == 0x000010, "Member 'BP_MapGimmickObjectBase_C_PlayEffectBackgrounds::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_PlayEffectBackgrounds, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_MapGimmickObjectBase_C_PlayEffectBackgrounds::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.EffectAttackStart
// 0x0001 (0x0001 - 0x0000)
struct BP_MapGimmickObjectBase_C_EffectAttackStart final
{
public:
	bool                                          CallFunc_SetPsychicObjectAttack_return;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_EffectAttackStart) == 0x000001, "Wrong alignment on BP_MapGimmickObjectBase_C_EffectAttackStart");
static_assert(sizeof(BP_MapGimmickObjectBase_C_EffectAttackStart) == 0x000001, "Wrong size on BP_MapGimmickObjectBase_C_EffectAttackStart");
static_assert(offsetof(BP_MapGimmickObjectBase_C_EffectAttackStart, CallFunc_SetPsychicObjectAttack_return) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_EffectAttackStart::CallFunc_SetPsychicObjectAttack_return' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.EffectAttackEnd
// 0x0001 (0x0001 - 0x0000)
struct BP_MapGimmickObjectBase_C_EffectAttackEnd final
{
public:
	bool                                          CallFunc_SetPsychicObjectAttack_return;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_EffectAttackEnd) == 0x000001, "Wrong alignment on BP_MapGimmickObjectBase_C_EffectAttackEnd");
static_assert(sizeof(BP_MapGimmickObjectBase_C_EffectAttackEnd) == 0x000001, "Wrong size on BP_MapGimmickObjectBase_C_EffectAttackEnd");
static_assert(offsetof(BP_MapGimmickObjectBase_C_EffectAttackEnd, CallFunc_SetPsychicObjectAttack_return) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_EffectAttackEnd::CallFunc_SetPsychicObjectAttack_return' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.EffectCaptureStart
// 0x0001 (0x0001 - 0x0000)
struct BP_MapGimmickObjectBase_C_EffectCaptureStart final
{
public:
	bool                                          CallFunc_SetPsychicObjectCapture_return;           // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_EffectCaptureStart) == 0x000001, "Wrong alignment on BP_MapGimmickObjectBase_C_EffectCaptureStart");
static_assert(sizeof(BP_MapGimmickObjectBase_C_EffectCaptureStart) == 0x000001, "Wrong size on BP_MapGimmickObjectBase_C_EffectCaptureStart");
static_assert(offsetof(BP_MapGimmickObjectBase_C_EffectCaptureStart, CallFunc_SetPsychicObjectCapture_return) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_EffectCaptureStart::CallFunc_SetPsychicObjectCapture_return' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.EffectCaptureEnd
// 0x0001 (0x0001 - 0x0000)
struct BP_MapGimmickObjectBase_C_EffectCaptureEnd final
{
public:
	bool                                          CallFunc_SetPsychicObjectCapture_return;           // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_EffectCaptureEnd) == 0x000001, "Wrong alignment on BP_MapGimmickObjectBase_C_EffectCaptureEnd");
static_assert(sizeof(BP_MapGimmickObjectBase_C_EffectCaptureEnd) == 0x000001, "Wrong size on BP_MapGimmickObjectBase_C_EffectCaptureEnd");
static_assert(offsetof(BP_MapGimmickObjectBase_C_EffectCaptureEnd, CallFunc_SetPsychicObjectCapture_return) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_EffectCaptureEnd::CallFunc_SetPsychicObjectCapture_return' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.PlayExtraParticles
// 0x0014 (0x0014 - 0x0000)
struct BP_MapGimmickObjectBase_C_PlayExtraParticles final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_PlayExtraParticles) == 0x000004, "Wrong alignment on BP_MapGimmickObjectBase_C_PlayExtraParticles");
static_assert(sizeof(BP_MapGimmickObjectBase_C_PlayExtraParticles) == 0x000014, "Wrong size on BP_MapGimmickObjectBase_C_PlayExtraParticles");
static_assert(offsetof(BP_MapGimmickObjectBase_C_PlayExtraParticles, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_PlayExtraParticles::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_PlayExtraParticles, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_MapGimmickObjectBase_C_PlayExtraParticles::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_PlayExtraParticles, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_MapGimmickObjectBase_C_PlayExtraParticles::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_PlayExtraParticles, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'BP_MapGimmickObjectBase_C_PlayExtraParticles::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_PlayExtraParticles, CallFunc_Less_IntInt_ReturnValue) == 0x000010, "Member 'BP_MapGimmickObjectBase_C_PlayExtraParticles::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.ResetCameraLerp
// 0x0020 (0x0020 - 0x0000)
struct BP_MapGimmickObjectBase_C_ResetCameraLerp final
{
public:
	class APlayerManager*                         CallFunc_GetPlayerManager_PlayerManager;           // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSCharacterBase*                       CallFunc_GetPlayer_ReturnValue;                    // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARsBattleHero_C*                        K2Node_DynamicCast_AsRs_Battle_Hero;               // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_ResetCameraLerp) == 0x000008, "Wrong alignment on BP_MapGimmickObjectBase_C_ResetCameraLerp");
static_assert(sizeof(BP_MapGimmickObjectBase_C_ResetCameraLerp) == 0x000020, "Wrong size on BP_MapGimmickObjectBase_C_ResetCameraLerp");
static_assert(offsetof(BP_MapGimmickObjectBase_C_ResetCameraLerp, CallFunc_GetPlayerManager_PlayerManager) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_ResetCameraLerp::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_ResetCameraLerp, CallFunc_GetPlayer_ReturnValue) == 0x000008, "Member 'BP_MapGimmickObjectBase_C_ResetCameraLerp::CallFunc_GetPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_ResetCameraLerp, K2Node_DynamicCast_AsRs_Battle_Hero) == 0x000010, "Member 'BP_MapGimmickObjectBase_C_ResetCameraLerp::K2Node_DynamicCast_AsRs_Battle_Hero' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_ResetCameraLerp, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_MapGimmickObjectBase_C_ResetCameraLerp::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.DebugEnableUse
// 0x0001 (0x0001 - 0x0000)
struct BP_MapGimmickObjectBase_C_DebugEnableUse final
{
public:
	bool                                          CallFunc_SetActive_ReturnValue;                    // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_DebugEnableUse) == 0x000001, "Wrong alignment on BP_MapGimmickObjectBase_C_DebugEnableUse");
static_assert(sizeof(BP_MapGimmickObjectBase_C_DebugEnableUse) == 0x000001, "Wrong size on BP_MapGimmickObjectBase_C_DebugEnableUse");
static_assert(offsetof(BP_MapGimmickObjectBase_C_DebugEnableUse, CallFunc_SetActive_ReturnValue) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_DebugEnableUse::CallFunc_SetActive_ReturnValue' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.AddUseTime
// 0x0010 (0x0010 - 0x0000)
struct BP_MapGimmickObjectBase_C_AddUseTime final
{
public:
	class ABP_MapGimmickManager_C*                K2Node_DynamicCast_AsBP_Map_Gimmick_Manager;       // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_AddMapGimmickUseTime_ReturnValue;         // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_AddUseTime) == 0x000008, "Wrong alignment on BP_MapGimmickObjectBase_C_AddUseTime");
static_assert(sizeof(BP_MapGimmickObjectBase_C_AddUseTime) == 0x000010, "Wrong size on BP_MapGimmickObjectBase_C_AddUseTime");
static_assert(offsetof(BP_MapGimmickObjectBase_C_AddUseTime, K2Node_DynamicCast_AsBP_Map_Gimmick_Manager) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_AddUseTime::K2Node_DynamicCast_AsBP_Map_Gimmick_Manager' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_AddUseTime, K2Node_DynamicCast_bSuccess) == 0x000008, "Member 'BP_MapGimmickObjectBase_C_AddUseTime::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_AddUseTime, CallFunc_AddMapGimmickUseTime_ReturnValue) == 0x000009, "Member 'BP_MapGimmickObjectBase_C_AddUseTime::CallFunc_AddMapGimmickUseTime_ReturnValue' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.OnGimmickUse
// 0x0001 (0x0001 - 0x0000)
struct BP_MapGimmickObjectBase_C_OnGimmickUse final
{
public:
	bool                                          CallFunc_CallOnChangeFinishedMapGimmickEvent_ReturnValue; // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_OnGimmickUse) == 0x000001, "Wrong alignment on BP_MapGimmickObjectBase_C_OnGimmickUse");
static_assert(sizeof(BP_MapGimmickObjectBase_C_OnGimmickUse) == 0x000001, "Wrong size on BP_MapGimmickObjectBase_C_OnGimmickUse");
static_assert(offsetof(BP_MapGimmickObjectBase_C_OnGimmickUse, CallFunc_CallOnChangeFinishedMapGimmickEvent_ReturnValue) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_OnGimmickUse::CallFunc_CallOnChangeFinishedMapGimmickEvent_ReturnValue' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.PlayHintBrainTalk
// 0x0068 (0x0068 - 0x0000)
struct BP_MapGimmickObjectBase_C_PlayHintBrainTalk final
{
public:
	class FString                                 GimmickBrainTalkId;                                // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	EBrainTalkGimmickCondition                    BrainTalkConditionId;                              // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckInKizunaEp_PlayOk;                   // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_70A7[0x6];                                     // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ABrainTalkManager*                      CallFunc_GetBrainTalkManager_BrainTalkManager;     // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BrainTalkMapGimmick_ReturnValue;          // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_70A8[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_PlayHintBrainTalk) == 0x000008, "Wrong alignment on BP_MapGimmickObjectBase_C_PlayHintBrainTalk");
static_assert(sizeof(BP_MapGimmickObjectBase_C_PlayHintBrainTalk) == 0x000068, "Wrong size on BP_MapGimmickObjectBase_C_PlayHintBrainTalk");
static_assert(offsetof(BP_MapGimmickObjectBase_C_PlayHintBrainTalk, GimmickBrainTalkId) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_PlayHintBrainTalk::GimmickBrainTalkId' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_PlayHintBrainTalk, BrainTalkConditionId) == 0x000010, "Member 'BP_MapGimmickObjectBase_C_PlayHintBrainTalk::BrainTalkConditionId' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_PlayHintBrainTalk, CallFunc_CheckInKizunaEp_PlayOk) == 0x000011, "Member 'BP_MapGimmickObjectBase_C_PlayHintBrainTalk::CallFunc_CheckInKizunaEp_PlayOk' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_PlayHintBrainTalk, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000018, "Member 'BP_MapGimmickObjectBase_C_PlayHintBrainTalk::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_PlayHintBrainTalk, CallFunc_Concat_StrStr_ReturnValue) == 0x000028, "Member 'BP_MapGimmickObjectBase_C_PlayHintBrainTalk::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_PlayHintBrainTalk, CallFunc_GetBrainTalkManager_BrainTalkManager) == 0x000038, "Member 'BP_MapGimmickObjectBase_C_PlayHintBrainTalk::CallFunc_GetBrainTalkManager_BrainTalkManager' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_PlayHintBrainTalk, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000040, "Member 'BP_MapGimmickObjectBase_C_PlayHintBrainTalk::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_PlayHintBrainTalk, CallFunc_BrainTalkMapGimmick_ReturnValue) == 0x000050, "Member 'BP_MapGimmickObjectBase_C_PlayHintBrainTalk::CallFunc_BrainTalkMapGimmick_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_PlayHintBrainTalk, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000058, "Member 'BP_MapGimmickObjectBase_C_PlayHintBrainTalk::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.GetHintBrainTalkWaitTime
// 0x0028 (0x0028 - 0x0000)
struct BP_MapGimmickObjectBase_C_GetHintBrainTalkWaitTime final
{
public:
	class FString                                 GimmickBrainTalkId;                                // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	EBrainTalkGimmickCondition                    BrainTalkConditionId;                              // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_70A9[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         WaitSec;                                           // 0x0014(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABrainTalkManager*                      CallFunc_GetBrainTalkManager_BrainTalkManager;     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetBrainTalkMapGimmickWaitTime_ReturnValue; // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_GetHintBrainTalkWaitTime) == 0x000008, "Wrong alignment on BP_MapGimmickObjectBase_C_GetHintBrainTalkWaitTime");
static_assert(sizeof(BP_MapGimmickObjectBase_C_GetHintBrainTalkWaitTime) == 0x000028, "Wrong size on BP_MapGimmickObjectBase_C_GetHintBrainTalkWaitTime");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetHintBrainTalkWaitTime, GimmickBrainTalkId) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_GetHintBrainTalkWaitTime::GimmickBrainTalkId' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetHintBrainTalkWaitTime, BrainTalkConditionId) == 0x000010, "Member 'BP_MapGimmickObjectBase_C_GetHintBrainTalkWaitTime::BrainTalkConditionId' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetHintBrainTalkWaitTime, WaitSec) == 0x000014, "Member 'BP_MapGimmickObjectBase_C_GetHintBrainTalkWaitTime::WaitSec' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetHintBrainTalkWaitTime, CallFunc_GetBrainTalkManager_BrainTalkManager) == 0x000018, "Member 'BP_MapGimmickObjectBase_C_GetHintBrainTalkWaitTime::CallFunc_GetBrainTalkManager_BrainTalkManager' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetHintBrainTalkWaitTime, CallFunc_GetBrainTalkMapGimmickWaitTime_ReturnValue) == 0x000020, "Member 'BP_MapGimmickObjectBase_C_GetHintBrainTalkWaitTime::CallFunc_GetBrainTalkMapGimmickWaitTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetHintBrainTalkWaitTime, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000024, "Member 'BP_MapGimmickObjectBase_C_GetHintBrainTalkWaitTime::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.PlayHintBrainTalkWithWait
// 0x0018 (0x0018 - 0x0000)
struct BP_MapGimmickObjectBase_C_PlayHintBrainTalkWithWait final
{
public:
	class FString                                 GimmickBrainTalkId;                                // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	EBrainTalkGimmickCondition                    BrainTalkConditionId;                              // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_70AA[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         WaitSec;                                           // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_PlayHintBrainTalkWithWait) == 0x000008, "Wrong alignment on BP_MapGimmickObjectBase_C_PlayHintBrainTalkWithWait");
static_assert(sizeof(BP_MapGimmickObjectBase_C_PlayHintBrainTalkWithWait) == 0x000018, "Wrong size on BP_MapGimmickObjectBase_C_PlayHintBrainTalkWithWait");
static_assert(offsetof(BP_MapGimmickObjectBase_C_PlayHintBrainTalkWithWait, GimmickBrainTalkId) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_PlayHintBrainTalkWithWait::GimmickBrainTalkId' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_PlayHintBrainTalkWithWait, BrainTalkConditionId) == 0x000010, "Member 'BP_MapGimmickObjectBase_C_PlayHintBrainTalkWithWait::BrainTalkConditionId' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_PlayHintBrainTalkWithWait, WaitSec) == 0x000014, "Member 'BP_MapGimmickObjectBase_C_PlayHintBrainTalkWithWait::WaitSec' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.PlaySE
// 0x0020 (0x0020 - 0x0000)
struct BP_MapGimmickObjectBase_C_PlaySE final
{
public:
	class USoundAtomCue*                          Sound;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_70AB[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class URSAtomComponentBase*                   CallFunc_SpawnSoundAtLocationRS_ReturnValue;       // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_PlaySE) == 0x000008, "Wrong alignment on BP_MapGimmickObjectBase_C_PlaySE");
static_assert(sizeof(BP_MapGimmickObjectBase_C_PlaySE) == 0x000020, "Wrong size on BP_MapGimmickObjectBase_C_PlaySE");
static_assert(offsetof(BP_MapGimmickObjectBase_C_PlaySE, Sound) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_PlaySE::Sound' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_PlaySE, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000008, "Member 'BP_MapGimmickObjectBase_C_PlaySE::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_PlaySE, CallFunc_IsValid_ReturnValue) == 0x000014, "Member 'BP_MapGimmickObjectBase_C_PlaySE::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_PlaySE, CallFunc_SpawnSoundAtLocationRS_ReturnValue) == 0x000018, "Member 'BP_MapGimmickObjectBase_C_PlaySE::CallFunc_SpawnSoundAtLocationRS_ReturnValue' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.Set Icon Gauge Enable
// 0x0020 (0x0020 - 0x0000)
struct BP_MapGimmickObjectBase_C_Set_Icon_Gauge_Enable final
{
public:
	bool                                          Enable;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_70AC[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUDMainGame_C*                         HUD;                                               // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHUDMainGame_C*                         CallFunc_GetHud_HudMain;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_Set_Icon_Gauge_Enable) == 0x000008, "Wrong alignment on BP_MapGimmickObjectBase_C_Set_Icon_Gauge_Enable");
static_assert(sizeof(BP_MapGimmickObjectBase_C_Set_Icon_Gauge_Enable) == 0x000020, "Wrong size on BP_MapGimmickObjectBase_C_Set_Icon_Gauge_Enable");
static_assert(offsetof(BP_MapGimmickObjectBase_C_Set_Icon_Gauge_Enable, Enable) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_Set_Icon_Gauge_Enable::Enable' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_Set_Icon_Gauge_Enable, ReturnValue) == 0x000001, "Member 'BP_MapGimmickObjectBase_C_Set_Icon_Gauge_Enable::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_Set_Icon_Gauge_Enable, HUD) == 0x000008, "Member 'BP_MapGimmickObjectBase_C_Set_Icon_Gauge_Enable::HUD' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_Set_Icon_Gauge_Enable, CallFunc_GetHud_HudMain) == 0x000010, "Member 'BP_MapGimmickObjectBase_C_Set_Icon_Gauge_Enable::CallFunc_GetHud_HudMain' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_Set_Icon_Gauge_Enable, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_MapGimmickObjectBase_C_Set_Icon_Gauge_Enable::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.CalcFinishAnimMoveDistance
// 0x0160 (0x0160 - 0x0000)
struct BP_MapGimmickObjectBase_C_CalcFinishAnimMoveDistance final
{
public:
	float                                         Length;                                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_70AD[0xC];                                     // 0x0004(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             TransEnd;                                          // 0x0010(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	struct FTransform                             TransStart;                                        // 0x0040(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	class UAnimMontage*                           CallFunc_GetPlayerFinishAnimation_AnimMontage;     // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayLength_ReturnValue;                // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_70AE[0x4];                                     // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetBoneTransformForAnimMontage_ReturnValue; // 0x0080(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_GetBoneTransformForAnimMontage_ReturnValue_1; // 0x00B0(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_70AF[0x3];                                     // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x0108(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x0114(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x0120(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x012C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_70B0[0x4];                                     // 0x013C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue;           // 0x0140(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue;                         // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_CalcFinishAnimMoveDistance) == 0x000010, "Wrong alignment on BP_MapGimmickObjectBase_C_CalcFinishAnimMoveDistance");
static_assert(sizeof(BP_MapGimmickObjectBase_C_CalcFinishAnimMoveDistance) == 0x000160, "Wrong size on BP_MapGimmickObjectBase_C_CalcFinishAnimMoveDistance");
static_assert(offsetof(BP_MapGimmickObjectBase_C_CalcFinishAnimMoveDistance, Length) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_CalcFinishAnimMoveDistance::Length' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_CalcFinishAnimMoveDistance, TransEnd) == 0x000010, "Member 'BP_MapGimmickObjectBase_C_CalcFinishAnimMoveDistance::TransEnd' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_CalcFinishAnimMoveDistance, TransStart) == 0x000040, "Member 'BP_MapGimmickObjectBase_C_CalcFinishAnimMoveDistance::TransStart' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_CalcFinishAnimMoveDistance, CallFunc_GetPlayerFinishAnimation_AnimMontage) == 0x000070, "Member 'BP_MapGimmickObjectBase_C_CalcFinishAnimMoveDistance::CallFunc_GetPlayerFinishAnimation_AnimMontage' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_CalcFinishAnimMoveDistance, CallFunc_GetPlayLength_ReturnValue) == 0x000078, "Member 'BP_MapGimmickObjectBase_C_CalcFinishAnimMoveDistance::CallFunc_GetPlayLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_CalcFinishAnimMoveDistance, CallFunc_GetBoneTransformForAnimMontage_ReturnValue) == 0x000080, "Member 'BP_MapGimmickObjectBase_C_CalcFinishAnimMoveDistance::CallFunc_GetBoneTransformForAnimMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_CalcFinishAnimMoveDistance, CallFunc_GetBoneTransformForAnimMontage_ReturnValue_1) == 0x0000B0, "Member 'BP_MapGimmickObjectBase_C_CalcFinishAnimMoveDistance::CallFunc_GetBoneTransformForAnimMontage_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_CalcFinishAnimMoveDistance, CallFunc_IsValid_ReturnValue) == 0x0000E0, "Member 'BP_MapGimmickObjectBase_C_CalcFinishAnimMoveDistance::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_CalcFinishAnimMoveDistance, CallFunc_BreakTransform_Location) == 0x0000E4, "Member 'BP_MapGimmickObjectBase_C_CalcFinishAnimMoveDistance::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_CalcFinishAnimMoveDistance, CallFunc_BreakTransform_Rotation) == 0x0000F0, "Member 'BP_MapGimmickObjectBase_C_CalcFinishAnimMoveDistance::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_CalcFinishAnimMoveDistance, CallFunc_BreakTransform_Scale) == 0x0000FC, "Member 'BP_MapGimmickObjectBase_C_CalcFinishAnimMoveDistance::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_CalcFinishAnimMoveDistance, CallFunc_BreakTransform_Location_1) == 0x000108, "Member 'BP_MapGimmickObjectBase_C_CalcFinishAnimMoveDistance::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_CalcFinishAnimMoveDistance, CallFunc_BreakTransform_Rotation_1) == 0x000114, "Member 'BP_MapGimmickObjectBase_C_CalcFinishAnimMoveDistance::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_CalcFinishAnimMoveDistance, CallFunc_BreakTransform_Scale_1) == 0x000120, "Member 'BP_MapGimmickObjectBase_C_CalcFinishAnimMoveDistance::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_CalcFinishAnimMoveDistance, CallFunc_Subtract_VectorVector_ReturnValue) == 0x00012C, "Member 'BP_MapGimmickObjectBase_C_CalcFinishAnimMoveDistance::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_CalcFinishAnimMoveDistance, CallFunc_VSize_ReturnValue) == 0x000138, "Member 'BP_MapGimmickObjectBase_C_CalcFinishAnimMoveDistance::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_CalcFinishAnimMoveDistance, CallFunc_Conv_FloatToString_ReturnValue) == 0x000140, "Member 'BP_MapGimmickObjectBase_C_CalcFinishAnimMoveDistance::CallFunc_Conv_FloatToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_CalcFinishAnimMoveDistance, CallFunc_Abs_ReturnValue) == 0x000150, "Member 'BP_MapGimmickObjectBase_C_CalcFinishAnimMoveDistance::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_CalcFinishAnimMoveDistance, CallFunc_FMin_ReturnValue) == 0x000154, "Member 'BP_MapGimmickObjectBase_C_CalcFinishAnimMoveDistance::CallFunc_FMin_ReturnValue' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.GetActorToPlayerDistance
// 0x0040 (0x0040 - 0x0000)
struct BP_MapGimmickObjectBase_C_GetActorToPlayerDistance final
{
public:
	float                                         Distance;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerManager*                         CallFunc_GetPlayerManager_PlayerManager;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSCharacterBase*                       CallFunc_GetPlayer_ReturnValue;                    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSizeXY_ReturnValue;                      // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_GetActorToPlayerDistance) == 0x000008, "Wrong alignment on BP_MapGimmickObjectBase_C_GetActorToPlayerDistance");
static_assert(sizeof(BP_MapGimmickObjectBase_C_GetActorToPlayerDistance) == 0x000040, "Wrong size on BP_MapGimmickObjectBase_C_GetActorToPlayerDistance");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetActorToPlayerDistance, Distance) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_GetActorToPlayerDistance::Distance' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetActorToPlayerDistance, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000004, "Member 'BP_MapGimmickObjectBase_C_GetActorToPlayerDistance::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetActorToPlayerDistance, CallFunc_GetPlayerManager_PlayerManager) == 0x000010, "Member 'BP_MapGimmickObjectBase_C_GetActorToPlayerDistance::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetActorToPlayerDistance, CallFunc_GetPlayer_ReturnValue) == 0x000018, "Member 'BP_MapGimmickObjectBase_C_GetActorToPlayerDistance::CallFunc_GetPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetActorToPlayerDistance, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000020, "Member 'BP_MapGimmickObjectBase_C_GetActorToPlayerDistance::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetActorToPlayerDistance, CallFunc_Subtract_VectorVector_ReturnValue) == 0x00002C, "Member 'BP_MapGimmickObjectBase_C_GetActorToPlayerDistance::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetActorToPlayerDistance, CallFunc_VSizeXY_ReturnValue) == 0x000038, "Member 'BP_MapGimmickObjectBase_C_GetActorToPlayerDistance::CallFunc_VSizeXY_ReturnValue' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.SetPlayerRootMoveScale
// 0x0018 (0x0018 - 0x0000)
struct BP_MapGimmickObjectBase_C_SetPlayerRootMoveScale final
{
public:
	float                                         Scale;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_70B1[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerManager*                         CallFunc_GetPlayerManager_PlayerManager;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSCharacterBase*                       CallFunc_GetPlayer_ReturnValue;                    // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_SetPlayerRootMoveScale) == 0x000008, "Wrong alignment on BP_MapGimmickObjectBase_C_SetPlayerRootMoveScale");
static_assert(sizeof(BP_MapGimmickObjectBase_C_SetPlayerRootMoveScale) == 0x000018, "Wrong size on BP_MapGimmickObjectBase_C_SetPlayerRootMoveScale");
static_assert(offsetof(BP_MapGimmickObjectBase_C_SetPlayerRootMoveScale, Scale) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_SetPlayerRootMoveScale::Scale' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_SetPlayerRootMoveScale, CallFunc_GetPlayerManager_PlayerManager) == 0x000008, "Member 'BP_MapGimmickObjectBase_C_SetPlayerRootMoveScale::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_SetPlayerRootMoveScale, CallFunc_GetPlayer_ReturnValue) == 0x000010, "Member 'BP_MapGimmickObjectBase_C_SetPlayerRootMoveScale::CallFunc_GetPlayer_ReturnValue' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.IsInCapture
// 0x0002 (0x0002 - 0x0000)
struct BP_MapGimmickObjectBase_C_IsInCapture final
{
public:
	bool                                          Capturing;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_IsInCapture) == 0x000001, "Wrong alignment on BP_MapGimmickObjectBase_C_IsInCapture");
static_assert(sizeof(BP_MapGimmickObjectBase_C_IsInCapture) == 0x000002, "Wrong size on BP_MapGimmickObjectBase_C_IsInCapture");
static_assert(offsetof(BP_MapGimmickObjectBase_C_IsInCapture, Capturing) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_IsInCapture::Capturing' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_IsInCapture, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000001, "Member 'BP_MapGimmickObjectBase_C_IsInCapture::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.SetNotUseVisible
// 0x0004 (0x0004 - 0x0000)
struct BP_MapGimmickObjectBase_C_SetNotUseVisible final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetIconVisible_ReturnValue;               // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Set_Icon_Gauge_Enable_ReturnValue;        // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_SetNotUseVisible) == 0x000001, "Wrong alignment on BP_MapGimmickObjectBase_C_SetNotUseVisible");
static_assert(sizeof(BP_MapGimmickObjectBase_C_SetNotUseVisible) == 0x000004, "Wrong size on BP_MapGimmickObjectBase_C_SetNotUseVisible");
static_assert(offsetof(BP_MapGimmickObjectBase_C_SetNotUseVisible, Visible) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_SetNotUseVisible::Visible' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_SetNotUseVisible, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'BP_MapGimmickObjectBase_C_SetNotUseVisible::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_SetNotUseVisible, CallFunc_SetIconVisible_ReturnValue) == 0x000002, "Member 'BP_MapGimmickObjectBase_C_SetNotUseVisible::CallFunc_SetIconVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_SetNotUseVisible, CallFunc_Set_Icon_Gauge_Enable_ReturnValue) == 0x000003, "Member 'BP_MapGimmickObjectBase_C_SetNotUseVisible::CallFunc_Set_Icon_Gauge_Enable_ReturnValue' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.OnBeginOverlapBossMapGimmickArea
// 0x0020 (0x0020 - 0x0000)
struct BP_MapGimmickObjectBase_C_OnBeginOverlapBossMapGimmickArea final
{
public:
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_OnBeginOverlapBossMapGimmickArea) == 0x000008, "Wrong alignment on BP_MapGimmickObjectBase_C_OnBeginOverlapBossMapGimmickArea");
static_assert(sizeof(BP_MapGimmickObjectBase_C_OnBeginOverlapBossMapGimmickArea) == 0x000020, "Wrong size on BP_MapGimmickObjectBase_C_OnBeginOverlapBossMapGimmickArea");
static_assert(offsetof(BP_MapGimmickObjectBase_C_OnBeginOverlapBossMapGimmickArea, CallFunc_GetDisplayName_ReturnValue) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_OnBeginOverlapBossMapGimmickArea::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_OnBeginOverlapBossMapGimmickArea, CallFunc_Concat_StrStr_ReturnValue) == 0x000010, "Member 'BP_MapGimmickObjectBase_C_OnBeginOverlapBossMapGimmickArea::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.OnEndOverlapBossMapGimmickArea
// 0x0020 (0x0020 - 0x0000)
struct BP_MapGimmickObjectBase_C_OnEndOverlapBossMapGimmickArea final
{
public:
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_OnEndOverlapBossMapGimmickArea) == 0x000008, "Wrong alignment on BP_MapGimmickObjectBase_C_OnEndOverlapBossMapGimmickArea");
static_assert(sizeof(BP_MapGimmickObjectBase_C_OnEndOverlapBossMapGimmickArea) == 0x000020, "Wrong size on BP_MapGimmickObjectBase_C_OnEndOverlapBossMapGimmickArea");
static_assert(offsetof(BP_MapGimmickObjectBase_C_OnEndOverlapBossMapGimmickArea, CallFunc_GetDisplayName_ReturnValue) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_OnEndOverlapBossMapGimmickArea::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_OnEndOverlapBossMapGimmickArea, CallFunc_Concat_StrStr_ReturnValue) == 0x000010, "Member 'BP_MapGimmickObjectBase_C_OnEndOverlapBossMapGimmickArea::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.SetNearCameraParameter
// 0x0020 (0x0020 - 0x0000)
struct BP_MapGimmickObjectBase_C_SetNearCameraParameter final
{
public:
	bool                                          In;                                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_70B2[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattlePlayer_C*                      CallFunc_GetMainPlayer_Player;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_SetNearCameraParameter) == 0x000008, "Wrong alignment on BP_MapGimmickObjectBase_C_SetNearCameraParameter");
static_assert(sizeof(BP_MapGimmickObjectBase_C_SetNearCameraParameter) == 0x000020, "Wrong size on BP_MapGimmickObjectBase_C_SetNearCameraParameter");
static_assert(offsetof(BP_MapGimmickObjectBase_C_SetNearCameraParameter, In) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_SetNearCameraParameter::In' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_SetNearCameraParameter, CallFunc_GetPlayerManager_PlayerManager) == 0x000008, "Member 'BP_MapGimmickObjectBase_C_SetNearCameraParameter::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_SetNearCameraParameter, CallFunc_GetMainPlayer_Player) == 0x000010, "Member 'BP_MapGimmickObjectBase_C_SetNearCameraParameter::CallFunc_GetMainPlayer_Player' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_SetNearCameraParameter, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_MapGimmickObjectBase_C_SetNearCameraParameter::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.CalcAnimMoveDistance
// 0x0160 (0x0160 - 0x0000)
struct BP_MapGimmickObjectBase_C_CalcAnimMoveDistance final
{
public:
	class UAnimMontage*                           Anim;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Length;                                            // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_70B3[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             TransEnd;                                          // 0x0010(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	struct FTransform                             TransStart;                                        // 0x0040(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x007C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x0094(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x00AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x00B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayLength_ReturnValue;                // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetBoneTransformForAnimMontage_ReturnValue; // 0x00D0(0x0030)(IsPlainOldData, NoDestructor)
	float                                         CallFunc_FMin_ReturnValue;                         // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_70B4[0x4];                                     // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue;           // 0x0108(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	uint8                                         Pad_70B5[0x8];                                     // 0x0118(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetBoneTransformForAnimMontage_ReturnValue_1; // 0x0120(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_CalcAnimMoveDistance) == 0x000010, "Wrong alignment on BP_MapGimmickObjectBase_C_CalcAnimMoveDistance");
static_assert(sizeof(BP_MapGimmickObjectBase_C_CalcAnimMoveDistance) == 0x000160, "Wrong size on BP_MapGimmickObjectBase_C_CalcAnimMoveDistance");
static_assert(offsetof(BP_MapGimmickObjectBase_C_CalcAnimMoveDistance, Anim) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_CalcAnimMoveDistance::Anim' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_CalcAnimMoveDistance, Length) == 0x000008, "Member 'BP_MapGimmickObjectBase_C_CalcAnimMoveDistance::Length' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_CalcAnimMoveDistance, TransEnd) == 0x000010, "Member 'BP_MapGimmickObjectBase_C_CalcAnimMoveDistance::TransEnd' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_CalcAnimMoveDistance, TransStart) == 0x000040, "Member 'BP_MapGimmickObjectBase_C_CalcAnimMoveDistance::TransStart' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_CalcAnimMoveDistance, CallFunc_BreakTransform_Location) == 0x000070, "Member 'BP_MapGimmickObjectBase_C_CalcAnimMoveDistance::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_CalcAnimMoveDistance, CallFunc_BreakTransform_Rotation) == 0x00007C, "Member 'BP_MapGimmickObjectBase_C_CalcAnimMoveDistance::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_CalcAnimMoveDistance, CallFunc_BreakTransform_Scale) == 0x000088, "Member 'BP_MapGimmickObjectBase_C_CalcAnimMoveDistance::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_CalcAnimMoveDistance, CallFunc_BreakTransform_Location_1) == 0x000094, "Member 'BP_MapGimmickObjectBase_C_CalcAnimMoveDistance::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_CalcAnimMoveDistance, CallFunc_BreakTransform_Rotation_1) == 0x0000A0, "Member 'BP_MapGimmickObjectBase_C_CalcAnimMoveDistance::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_CalcAnimMoveDistance, CallFunc_BreakTransform_Scale_1) == 0x0000AC, "Member 'BP_MapGimmickObjectBase_C_CalcAnimMoveDistance::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_CalcAnimMoveDistance, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0000B8, "Member 'BP_MapGimmickObjectBase_C_CalcAnimMoveDistance::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_CalcAnimMoveDistance, CallFunc_VSize_ReturnValue) == 0x0000C4, "Member 'BP_MapGimmickObjectBase_C_CalcAnimMoveDistance::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_CalcAnimMoveDistance, CallFunc_GetPlayLength_ReturnValue) == 0x0000C8, "Member 'BP_MapGimmickObjectBase_C_CalcAnimMoveDistance::CallFunc_GetPlayLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_CalcAnimMoveDistance, CallFunc_Abs_ReturnValue) == 0x0000CC, "Member 'BP_MapGimmickObjectBase_C_CalcAnimMoveDistance::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_CalcAnimMoveDistance, CallFunc_GetBoneTransformForAnimMontage_ReturnValue) == 0x0000D0, "Member 'BP_MapGimmickObjectBase_C_CalcAnimMoveDistance::CallFunc_GetBoneTransformForAnimMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_CalcAnimMoveDistance, CallFunc_FMin_ReturnValue) == 0x000100, "Member 'BP_MapGimmickObjectBase_C_CalcAnimMoveDistance::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_CalcAnimMoveDistance, CallFunc_Conv_FloatToString_ReturnValue) == 0x000108, "Member 'BP_MapGimmickObjectBase_C_CalcAnimMoveDistance::CallFunc_Conv_FloatToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_CalcAnimMoveDistance, CallFunc_GetBoneTransformForAnimMontage_ReturnValue_1) == 0x000120, "Member 'BP_MapGimmickObjectBase_C_CalcAnimMoveDistance::CallFunc_GetBoneTransformForAnimMontage_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_CalcAnimMoveDistance, CallFunc_IsValid_ReturnValue) == 0x000150, "Member 'BP_MapGimmickObjectBase_C_CalcAnimMoveDistance::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.OnBeginOverlapTriggerCommon
// 0x0010 (0x0010 - 0x0000)
struct BP_MapGimmickObjectBase_C_OnBeginOverlapTriggerCommon final
{
public:
	class APsychicObjectManager_C*                CallFunc_GetPsychicObjectManager_PsyObjManager;    // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetIconVisible_ReturnValue;               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Set_Icon_Gauge_Enable_ReturnValue;        // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetIconVisible_ReturnValue_1;             // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_OnBeginOverlapTriggerCommon) == 0x000008, "Wrong alignment on BP_MapGimmickObjectBase_C_OnBeginOverlapTriggerCommon");
static_assert(sizeof(BP_MapGimmickObjectBase_C_OnBeginOverlapTriggerCommon) == 0x000010, "Wrong size on BP_MapGimmickObjectBase_C_OnBeginOverlapTriggerCommon");
static_assert(offsetof(BP_MapGimmickObjectBase_C_OnBeginOverlapTriggerCommon, CallFunc_GetPsychicObjectManager_PsyObjManager) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_OnBeginOverlapTriggerCommon::CallFunc_GetPsychicObjectManager_PsyObjManager' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_OnBeginOverlapTriggerCommon, CallFunc_SetIconVisible_ReturnValue) == 0x000008, "Member 'BP_MapGimmickObjectBase_C_OnBeginOverlapTriggerCommon::CallFunc_SetIconVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_OnBeginOverlapTriggerCommon, CallFunc_Set_Icon_Gauge_Enable_ReturnValue) == 0x000009, "Member 'BP_MapGimmickObjectBase_C_OnBeginOverlapTriggerCommon::CallFunc_Set_Icon_Gauge_Enable_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_OnBeginOverlapTriggerCommon, CallFunc_SetIconVisible_ReturnValue_1) == 0x00000A, "Member 'BP_MapGimmickObjectBase_C_OnBeginOverlapTriggerCommon::CallFunc_SetIconVisible_ReturnValue_1' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.OnEndOverlapTriggerCommon
// 0x0003 (0x0003 - 0x0000)
struct BP_MapGimmickObjectBase_C_OnEndOverlapTriggerCommon final
{
public:
	bool                                          CallFunc_Set_Icon_Gauge_Enable_ReturnValue;        // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInCapture_Capturing;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetIconVisible_ReturnValue;               // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_OnEndOverlapTriggerCommon) == 0x000001, "Wrong alignment on BP_MapGimmickObjectBase_C_OnEndOverlapTriggerCommon");
static_assert(sizeof(BP_MapGimmickObjectBase_C_OnEndOverlapTriggerCommon) == 0x000003, "Wrong size on BP_MapGimmickObjectBase_C_OnEndOverlapTriggerCommon");
static_assert(offsetof(BP_MapGimmickObjectBase_C_OnEndOverlapTriggerCommon, CallFunc_Set_Icon_Gauge_Enable_ReturnValue) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_OnEndOverlapTriggerCommon::CallFunc_Set_Icon_Gauge_Enable_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_OnEndOverlapTriggerCommon, CallFunc_IsInCapture_Capturing) == 0x000001, "Member 'BP_MapGimmickObjectBase_C_OnEndOverlapTriggerCommon::CallFunc_IsInCapture_Capturing' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_OnEndOverlapTriggerCommon, CallFunc_SetIconVisible_ReturnValue) == 0x000002, "Member 'BP_MapGimmickObjectBase_C_OnEndOverlapTriggerCommon::CallFunc_SetIconVisible_ReturnValue' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.Check Use Gate by Sas
// 0x0098 (0x0098 - 0x0000)
struct BP_MapGimmickObjectBase_C_Check_Use_Gate_by_Sas final
{
public:
	bool                                          CanUseGate;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_70B6[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MaterialValue;                                     // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_70B7[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_70B8[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_1;                      // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_2;                      // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_70B9[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_70BA[0x2];                                     // 0x003E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_70BB[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class USceneComponent*>                CallFunc_GetChildrenComponents_Children;           // 0x0058(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	class UMeshComponent*                         K2Node_DynamicCast_AsMesh_Component;               // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_70BC[0x3];                                     // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ComponentHasTag_ReturnValue;              // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_70BD[0x3];                                     // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserParamManager*                      CallFunc_GetUserParamManager_UserParamManager;     // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESASEquipStatus                               CallFunc_GetSASEquipStatus_ReturnValue;            // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_70BE[0x1];                                     // 0x0093(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_Check_Use_Gate_by_Sas) == 0x000008, "Wrong alignment on BP_MapGimmickObjectBase_C_Check_Use_Gate_by_Sas");
static_assert(sizeof(BP_MapGimmickObjectBase_C_Check_Use_Gate_by_Sas) == 0x000098, "Wrong size on BP_MapGimmickObjectBase_C_Check_Use_Gate_by_Sas");
static_assert(offsetof(BP_MapGimmickObjectBase_C_Check_Use_Gate_by_Sas, CanUseGate) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_Check_Use_Gate_by_Sas::CanUseGate' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_Check_Use_Gate_by_Sas, MaterialValue) == 0x000004, "Member 'BP_MapGimmickObjectBase_C_Check_Use_Gate_by_Sas::MaterialValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_Check_Use_Gate_by_Sas, Temp_bool_True_if_break_was_hit_Variable) == 0x000008, "Member 'BP_MapGimmickObjectBase_C_Check_Use_Gate_by_Sas::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_Check_Use_Gate_by_Sas, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'BP_MapGimmickObjectBase_C_Check_Use_Gate_by_Sas::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_Check_Use_Gate_by_Sas, CallFunc_Not_PreBool_ReturnValue) == 0x000010, "Member 'BP_MapGimmickObjectBase_C_Check_Use_Gate_by_Sas::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_Check_Use_Gate_by_Sas, Temp_int_Loop_Num_Variable) == 0x000014, "Member 'BP_MapGimmickObjectBase_C_Check_Use_Gate_by_Sas::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_Check_Use_Gate_by_Sas, Temp_int_Loop_Num_Variable_1) == 0x000018, "Member 'BP_MapGimmickObjectBase_C_Check_Use_Gate_by_Sas::Temp_int_Loop_Num_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_Check_Use_Gate_by_Sas, Temp_int_Array_Index_Variable_1) == 0x00001C, "Member 'BP_MapGimmickObjectBase_C_Check_Use_Gate_by_Sas::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_Check_Use_Gate_by_Sas, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'BP_MapGimmickObjectBase_C_Check_Use_Gate_by_Sas::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_Check_Use_Gate_by_Sas, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'BP_MapGimmickObjectBase_C_Check_Use_Gate_by_Sas::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_Check_Use_Gate_by_Sas, Temp_int_Array_Index_Variable_2) == 0x000028, "Member 'BP_MapGimmickObjectBase_C_Check_Use_Gate_by_Sas::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_Check_Use_Gate_by_Sas, Temp_int_Loop_Num_Variable_2) == 0x00002C, "Member 'BP_MapGimmickObjectBase_C_Check_Use_Gate_by_Sas::Temp_int_Loop_Num_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_Check_Use_Gate_by_Sas, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'BP_MapGimmickObjectBase_C_Check_Use_Gate_by_Sas::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_Check_Use_Gate_by_Sas, Temp_int_Loop_Counter_Variable_1) == 0x000034, "Member 'BP_MapGimmickObjectBase_C_Check_Use_Gate_by_Sas::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_Check_Use_Gate_by_Sas, CallFunc_SelectFloat_ReturnValue) == 0x000038, "Member 'BP_MapGimmickObjectBase_C_Check_Use_Gate_by_Sas::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_Check_Use_Gate_by_Sas, CallFunc_Less_IntInt_ReturnValue_1) == 0x00003C, "Member 'BP_MapGimmickObjectBase_C_Check_Use_Gate_by_Sas::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_Check_Use_Gate_by_Sas, CallFunc_BooleanAND_ReturnValue) == 0x00003D, "Member 'BP_MapGimmickObjectBase_C_Check_Use_Gate_by_Sas::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_Check_Use_Gate_by_Sas, CallFunc_Add_IntInt_ReturnValue_1) == 0x000040, "Member 'BP_MapGimmickObjectBase_C_Check_Use_Gate_by_Sas::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_Check_Use_Gate_by_Sas, CallFunc_Array_Length_ReturnValue) == 0x000044, "Member 'BP_MapGimmickObjectBase_C_Check_Use_Gate_by_Sas::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_Check_Use_Gate_by_Sas, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000048, "Member 'BP_MapGimmickObjectBase_C_Check_Use_Gate_by_Sas::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_Check_Use_Gate_by_Sas, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000050, "Member 'BP_MapGimmickObjectBase_C_Check_Use_Gate_by_Sas::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_Check_Use_Gate_by_Sas, CallFunc_GetChildrenComponents_Children) == 0x000058, "Member 'BP_MapGimmickObjectBase_C_Check_Use_Gate_by_Sas::CallFunc_GetChildrenComponents_Children' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_Check_Use_Gate_by_Sas, K2Node_DynamicCast_AsMesh_Component) == 0x000068, "Member 'BP_MapGimmickObjectBase_C_Check_Use_Gate_by_Sas::K2Node_DynamicCast_AsMesh_Component' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_Check_Use_Gate_by_Sas, K2Node_DynamicCast_bSuccess) == 0x000070, "Member 'BP_MapGimmickObjectBase_C_Check_Use_Gate_by_Sas::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_Check_Use_Gate_by_Sas, CallFunc_Array_Length_ReturnValue_1) == 0x000074, "Member 'BP_MapGimmickObjectBase_C_Check_Use_Gate_by_Sas::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_Check_Use_Gate_by_Sas, CallFunc_Array_AddUnique_ReturnValue) == 0x000078, "Member 'BP_MapGimmickObjectBase_C_Check_Use_Gate_by_Sas::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_Check_Use_Gate_by_Sas, CallFunc_ComponentHasTag_ReturnValue) == 0x00007C, "Member 'BP_MapGimmickObjectBase_C_Check_Use_Gate_by_Sas::CallFunc_ComponentHasTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_Check_Use_Gate_by_Sas, CallFunc_Array_Length_ReturnValue_2) == 0x000080, "Member 'BP_MapGimmickObjectBase_C_Check_Use_Gate_by_Sas::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_Check_Use_Gate_by_Sas, Temp_int_Loop_Counter_Variable_2) == 0x000084, "Member 'BP_MapGimmickObjectBase_C_Check_Use_Gate_by_Sas::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_Check_Use_Gate_by_Sas, CallFunc_GetUserParamManager_UserParamManager) == 0x000088, "Member 'BP_MapGimmickObjectBase_C_Check_Use_Gate_by_Sas::CallFunc_GetUserParamManager_UserParamManager' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_Check_Use_Gate_by_Sas, CallFunc_GetSASEquipStatus_ReturnValue) == 0x000090, "Member 'BP_MapGimmickObjectBase_C_Check_Use_Gate_by_Sas::CallFunc_GetSASEquipStatus_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_Check_Use_Gate_by_Sas, CallFunc_Less_IntInt_ReturnValue_2) == 0x000091, "Member 'BP_MapGimmickObjectBase_C_Check_Use_Gate_by_Sas::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_Check_Use_Gate_by_Sas, K2Node_SwitchEnum_CmpSuccess) == 0x000092, "Member 'BP_MapGimmickObjectBase_C_Check_Use_Gate_by_Sas::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_Check_Use_Gate_by_Sas, CallFunc_Add_IntInt_ReturnValue_2) == 0x000094, "Member 'BP_MapGimmickObjectBase_C_Check_Use_Gate_by_Sas::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.AdjustPlayRateSameAsPlayer
// 0x0068 (0x0068 - 0x0000)
struct BP_MapGimmickObjectBase_C_AdjustPlayRateSameAsPlayer final
{
public:
	bool                                          L_isPause;                                         // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_70BF[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         L_playerDilation;                                  // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_70C0[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetRedPaused_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_70C1[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ARSLevelSequenceActor*>          CallFunc_Map_Values_Values;                        // 0x0028(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_70C2[0x3];                                     // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerManager*                         CallFunc_GetPlayerManager_PlayerManager;           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_70C3[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ARSLevelSequenceActor*>          CallFunc_Map_Values_Values_1;                      // 0x0050(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_AdjustPlayRateSameAsPlayer) == 0x000008, "Wrong alignment on BP_MapGimmickObjectBase_C_AdjustPlayRateSameAsPlayer");
static_assert(sizeof(BP_MapGimmickObjectBase_C_AdjustPlayRateSameAsPlayer) == 0x000068, "Wrong size on BP_MapGimmickObjectBase_C_AdjustPlayRateSameAsPlayer");
static_assert(offsetof(BP_MapGimmickObjectBase_C_AdjustPlayRateSameAsPlayer, L_isPause) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_AdjustPlayRateSameAsPlayer::L_isPause' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_AdjustPlayRateSameAsPlayer, L_playerDilation) == 0x000004, "Member 'BP_MapGimmickObjectBase_C_AdjustPlayRateSameAsPlayer::L_playerDilation' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_AdjustPlayRateSameAsPlayer, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_MapGimmickObjectBase_C_AdjustPlayRateSameAsPlayer::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_AdjustPlayRateSameAsPlayer, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_MapGimmickObjectBase_C_AdjustPlayRateSameAsPlayer::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_AdjustPlayRateSameAsPlayer, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_MapGimmickObjectBase_C_AdjustPlayRateSameAsPlayer::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_AdjustPlayRateSameAsPlayer, Temp_int_Loop_Num_Variable) == 0x000014, "Member 'BP_MapGimmickObjectBase_C_AdjustPlayRateSameAsPlayer::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_AdjustPlayRateSameAsPlayer, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'BP_MapGimmickObjectBase_C_AdjustPlayRateSameAsPlayer::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_AdjustPlayRateSameAsPlayer, CallFunc_GetRedPaused_ReturnValue) == 0x00001C, "Member 'BP_MapGimmickObjectBase_C_AdjustPlayRateSameAsPlayer::CallFunc_GetRedPaused_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_AdjustPlayRateSameAsPlayer, CallFunc_Greater_IntInt_ReturnValue) == 0x000020, "Member 'BP_MapGimmickObjectBase_C_AdjustPlayRateSameAsPlayer::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_AdjustPlayRateSameAsPlayer, CallFunc_Map_Values_Values) == 0x000028, "Member 'BP_MapGimmickObjectBase_C_AdjustPlayRateSameAsPlayer::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_AdjustPlayRateSameAsPlayer, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'BP_MapGimmickObjectBase_C_AdjustPlayRateSameAsPlayer::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_AdjustPlayRateSameAsPlayer, CallFunc_Greater_IntInt_ReturnValue_1) == 0x00003C, "Member 'BP_MapGimmickObjectBase_C_AdjustPlayRateSameAsPlayer::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_AdjustPlayRateSameAsPlayer, CallFunc_GetPlayerManager_PlayerManager) == 0x000040, "Member 'BP_MapGimmickObjectBase_C_AdjustPlayRateSameAsPlayer::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_AdjustPlayRateSameAsPlayer, CallFunc_IsValid_ReturnValue) == 0x000048, "Member 'BP_MapGimmickObjectBase_C_AdjustPlayRateSameAsPlayer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_AdjustPlayRateSameAsPlayer, CallFunc_Map_Values_Values_1) == 0x000050, "Member 'BP_MapGimmickObjectBase_C_AdjustPlayRateSameAsPlayer::CallFunc_Map_Values_Values_1' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_AdjustPlayRateSameAsPlayer, CallFunc_Array_Length_ReturnValue_1) == 0x000060, "Member 'BP_MapGimmickObjectBase_C_AdjustPlayRateSameAsPlayer::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.SetCameraControl
// 0x0002 (0x0002 - 0x0000)
struct BP_MapGimmickObjectBase_C_SetCameraControl final
{
public:
	bool                                          OnStart;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          OnEnd;                                             // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_SetCameraControl) == 0x000001, "Wrong alignment on BP_MapGimmickObjectBase_C_SetCameraControl");
static_assert(sizeof(BP_MapGimmickObjectBase_C_SetCameraControl) == 0x000002, "Wrong size on BP_MapGimmickObjectBase_C_SetCameraControl");
static_assert(offsetof(BP_MapGimmickObjectBase_C_SetCameraControl, OnStart) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_SetCameraControl::OnStart' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_SetCameraControl, OnEnd) == 0x000001, "Member 'BP_MapGimmickObjectBase_C_SetCameraControl::OnEnd' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.OnBeginForceIconVisibleOverlap
// 0x0004 (0x0004 - 0x0000)
struct BP_MapGimmickObjectBase_C_OnBeginForceIconVisibleOverlap final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetLimitIconVisible_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetLimitIconVisible_ReturnValue_1;        // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OnBeginForceIconVisibleOverlap_ReturnValue; // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_OnBeginForceIconVisibleOverlap) == 0x000001, "Wrong alignment on BP_MapGimmickObjectBase_C_OnBeginForceIconVisibleOverlap");
static_assert(sizeof(BP_MapGimmickObjectBase_C_OnBeginForceIconVisibleOverlap) == 0x000004, "Wrong size on BP_MapGimmickObjectBase_C_OnBeginForceIconVisibleOverlap");
static_assert(offsetof(BP_MapGimmickObjectBase_C_OnBeginForceIconVisibleOverlap, ReturnValue) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_OnBeginForceIconVisibleOverlap::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_OnBeginForceIconVisibleOverlap, CallFunc_SetLimitIconVisible_ReturnValue) == 0x000001, "Member 'BP_MapGimmickObjectBase_C_OnBeginForceIconVisibleOverlap::CallFunc_SetLimitIconVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_OnBeginForceIconVisibleOverlap, CallFunc_SetLimitIconVisible_ReturnValue_1) == 0x000002, "Member 'BP_MapGimmickObjectBase_C_OnBeginForceIconVisibleOverlap::CallFunc_SetLimitIconVisible_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_OnBeginForceIconVisibleOverlap, CallFunc_OnBeginForceIconVisibleOverlap_ReturnValue) == 0x000003, "Member 'BP_MapGimmickObjectBase_C_OnBeginForceIconVisibleOverlap::CallFunc_OnBeginForceIconVisibleOverlap_ReturnValue' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.OnEndForceIconVisibleOverlap
// 0x0004 (0x0004 - 0x0000)
struct BP_MapGimmickObjectBase_C_OnEndForceIconVisibleOverlap final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetLimitIconVisible_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetLimitIconVisible_ReturnValue_1;        // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OnEndForceIconVisibleOverlap_ReturnValue; // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_OnEndForceIconVisibleOverlap) == 0x000001, "Wrong alignment on BP_MapGimmickObjectBase_C_OnEndForceIconVisibleOverlap");
static_assert(sizeof(BP_MapGimmickObjectBase_C_OnEndForceIconVisibleOverlap) == 0x000004, "Wrong size on BP_MapGimmickObjectBase_C_OnEndForceIconVisibleOverlap");
static_assert(offsetof(BP_MapGimmickObjectBase_C_OnEndForceIconVisibleOverlap, ReturnValue) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_OnEndForceIconVisibleOverlap::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_OnEndForceIconVisibleOverlap, CallFunc_SetLimitIconVisible_ReturnValue) == 0x000001, "Member 'BP_MapGimmickObjectBase_C_OnEndForceIconVisibleOverlap::CallFunc_SetLimitIconVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_OnEndForceIconVisibleOverlap, CallFunc_SetLimitIconVisible_ReturnValue_1) == 0x000002, "Member 'BP_MapGimmickObjectBase_C_OnEndForceIconVisibleOverlap::CallFunc_SetLimitIconVisible_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_OnEndForceIconVisibleOverlap, CallFunc_OnEndForceIconVisibleOverlap_ReturnValue) == 0x000003, "Member 'BP_MapGimmickObjectBase_C_OnEndForceIconVisibleOverlap::CallFunc_OnEndForceIconVisibleOverlap_ReturnValue' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.SetLimitIconVisible
// 0x0006 (0x0006 - 0x0000)
struct BP_MapGimmickObjectBase_C_SetLimitIconVisible final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Limit;                                             // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsSuccess;                                         // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ReturnValue;                                       // 0x0003(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Set_Icon_Gauge_Enable_ReturnValue;        // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetIconVisible_ReturnValue;               // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_SetLimitIconVisible) == 0x000001, "Wrong alignment on BP_MapGimmickObjectBase_C_SetLimitIconVisible");
static_assert(sizeof(BP_MapGimmickObjectBase_C_SetLimitIconVisible) == 0x000006, "Wrong size on BP_MapGimmickObjectBase_C_SetLimitIconVisible");
static_assert(offsetof(BP_MapGimmickObjectBase_C_SetLimitIconVisible, Visible) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_SetLimitIconVisible::Visible' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_SetLimitIconVisible, Limit) == 0x000001, "Member 'BP_MapGimmickObjectBase_C_SetLimitIconVisible::Limit' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_SetLimitIconVisible, IsSuccess) == 0x000002, "Member 'BP_MapGimmickObjectBase_C_SetLimitIconVisible::IsSuccess' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_SetLimitIconVisible, ReturnValue) == 0x000003, "Member 'BP_MapGimmickObjectBase_C_SetLimitIconVisible::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_SetLimitIconVisible, CallFunc_Set_Icon_Gauge_Enable_ReturnValue) == 0x000004, "Member 'BP_MapGimmickObjectBase_C_SetLimitIconVisible::CallFunc_Set_Icon_Gauge_Enable_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_SetLimitIconVisible, CallFunc_SetIconVisible_ReturnValue) == 0x000005, "Member 'BP_MapGimmickObjectBase_C_SetLimitIconVisible::CallFunc_SetIconVisible_ReturnValue' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.OnBeginUseLimitIconVisibleOverlap
// 0x0010 (0x0010 - 0x0000)
struct BP_MapGimmickObjectBase_C_OnBeginUseLimitIconVisibleOverlap final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_70C4[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetNextStateName_ReturnValue;             // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetLimitIconVisible_ReturnValue;          // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetLimitIconVisible_ReturnValue_1;        // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OnBeginUseLimitIconVisibleOverlap_ReturnValue; // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_OnBeginUseLimitIconVisibleOverlap) == 0x000004, "Wrong alignment on BP_MapGimmickObjectBase_C_OnBeginUseLimitIconVisibleOverlap");
static_assert(sizeof(BP_MapGimmickObjectBase_C_OnBeginUseLimitIconVisibleOverlap) == 0x000010, "Wrong size on BP_MapGimmickObjectBase_C_OnBeginUseLimitIconVisibleOverlap");
static_assert(offsetof(BP_MapGimmickObjectBase_C_OnBeginUseLimitIconVisibleOverlap, ReturnValue) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_OnBeginUseLimitIconVisibleOverlap::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_OnBeginUseLimitIconVisibleOverlap, CallFunc_GetNextStateName_ReturnValue) == 0x000004, "Member 'BP_MapGimmickObjectBase_C_OnBeginUseLimitIconVisibleOverlap::CallFunc_GetNextStateName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_OnBeginUseLimitIconVisibleOverlap, CallFunc_SetLimitIconVisible_ReturnValue) == 0x00000C, "Member 'BP_MapGimmickObjectBase_C_OnBeginUseLimitIconVisibleOverlap::CallFunc_SetLimitIconVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_OnBeginUseLimitIconVisibleOverlap, CallFunc_EqualEqual_NameName_ReturnValue) == 0x00000D, "Member 'BP_MapGimmickObjectBase_C_OnBeginUseLimitIconVisibleOverlap::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_OnBeginUseLimitIconVisibleOverlap, CallFunc_SetLimitIconVisible_ReturnValue_1) == 0x00000E, "Member 'BP_MapGimmickObjectBase_C_OnBeginUseLimitIconVisibleOverlap::CallFunc_SetLimitIconVisible_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_OnBeginUseLimitIconVisibleOverlap, CallFunc_OnBeginUseLimitIconVisibleOverlap_ReturnValue) == 0x00000F, "Member 'BP_MapGimmickObjectBase_C_OnBeginUseLimitIconVisibleOverlap::CallFunc_OnBeginUseLimitIconVisibleOverlap_ReturnValue' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.OnEndUseLimitIconVisibleOverlap
// 0x0004 (0x0004 - 0x0000)
struct BP_MapGimmickObjectBase_C_OnEndUseLimitIconVisibleOverlap final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetLimitIconVisible_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetLimitIconVisible_ReturnValue_1;        // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OnEndUseLimitIconVisibleOverlap_ReturnValue; // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_OnEndUseLimitIconVisibleOverlap) == 0x000001, "Wrong alignment on BP_MapGimmickObjectBase_C_OnEndUseLimitIconVisibleOverlap");
static_assert(sizeof(BP_MapGimmickObjectBase_C_OnEndUseLimitIconVisibleOverlap) == 0x000004, "Wrong size on BP_MapGimmickObjectBase_C_OnEndUseLimitIconVisibleOverlap");
static_assert(offsetof(BP_MapGimmickObjectBase_C_OnEndUseLimitIconVisibleOverlap, ReturnValue) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_OnEndUseLimitIconVisibleOverlap::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_OnEndUseLimitIconVisibleOverlap, CallFunc_SetLimitIconVisible_ReturnValue) == 0x000001, "Member 'BP_MapGimmickObjectBase_C_OnEndUseLimitIconVisibleOverlap::CallFunc_SetLimitIconVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_OnEndUseLimitIconVisibleOverlap, CallFunc_SetLimitIconVisible_ReturnValue_1) == 0x000002, "Member 'BP_MapGimmickObjectBase_C_OnEndUseLimitIconVisibleOverlap::CallFunc_SetLimitIconVisible_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_OnEndUseLimitIconVisibleOverlap, CallFunc_OnEndUseLimitIconVisibleOverlap_ReturnValue) == 0x000003, "Member 'BP_MapGimmickObjectBase_C_OnEndUseLimitIconVisibleOverlap::CallFunc_OnEndUseLimitIconVisibleOverlap_ReturnValue' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.SetIconGaugeEnableProxy
// 0x0003 (0x0003 - 0x0000)
struct BP_MapGimmickObjectBase_C_SetIconGaugeEnableProxy final
{
public:
	bool                                          Enable;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Set_Icon_Gauge_Enable_ReturnValue;        // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_SetIconGaugeEnableProxy) == 0x000001, "Wrong alignment on BP_MapGimmickObjectBase_C_SetIconGaugeEnableProxy");
static_assert(sizeof(BP_MapGimmickObjectBase_C_SetIconGaugeEnableProxy) == 0x000003, "Wrong size on BP_MapGimmickObjectBase_C_SetIconGaugeEnableProxy");
static_assert(offsetof(BP_MapGimmickObjectBase_C_SetIconGaugeEnableProxy, Enable) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_SetIconGaugeEnableProxy::Enable' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_SetIconGaugeEnableProxy, ReturnValue) == 0x000001, "Member 'BP_MapGimmickObjectBase_C_SetIconGaugeEnableProxy::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_SetIconGaugeEnableProxy, CallFunc_Set_Icon_Gauge_Enable_ReturnValue) == 0x000002, "Member 'BP_MapGimmickObjectBase_C_SetIconGaugeEnableProxy::CallFunc_Set_Icon_Gauge_Enable_ReturnValue' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.IsSkipCheckRendered
// 0x0001 (0x0001 - 0x0000)
struct BP_MapGimmickObjectBase_C_IsSkipCheckRendered final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_IsSkipCheckRendered) == 0x000001, "Wrong alignment on BP_MapGimmickObjectBase_C_IsSkipCheckRendered");
static_assert(sizeof(BP_MapGimmickObjectBase_C_IsSkipCheckRendered) == 0x000001, "Wrong size on BP_MapGimmickObjectBase_C_IsSkipCheckRendered");
static_assert(offsetof(BP_MapGimmickObjectBase_C_IsSkipCheckRendered, ReturnValue) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_IsSkipCheckRendered::ReturnValue' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.CheckInKizunaEp
// 0x0018 (0x0018 - 0x0000)
struct BP_MapGimmickObjectBase_C_CheckInKizunaEp final
{
public:
	bool                                          PlayOk;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_70C5[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserParamManager*                      CallFunc_GetUserParamManager_UserParamManager;     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerID                                     CallFunc_GetIsProgressBondsEpisode_playerID;       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerID                                     CallFunc_GetIsProgressBondsEpisode_targetID;       // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsProgressBondsEpisode_ReturnValue;    // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_CheckInKizunaEp) == 0x000008, "Wrong alignment on BP_MapGimmickObjectBase_C_CheckInKizunaEp");
static_assert(sizeof(BP_MapGimmickObjectBase_C_CheckInKizunaEp) == 0x000018, "Wrong size on BP_MapGimmickObjectBase_C_CheckInKizunaEp");
static_assert(offsetof(BP_MapGimmickObjectBase_C_CheckInKizunaEp, PlayOk) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_CheckInKizunaEp::PlayOk' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_CheckInKizunaEp, CallFunc_GetUserParamManager_UserParamManager) == 0x000008, "Member 'BP_MapGimmickObjectBase_C_CheckInKizunaEp::CallFunc_GetUserParamManager_UserParamManager' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_CheckInKizunaEp, CallFunc_GetIsProgressBondsEpisode_playerID) == 0x000010, "Member 'BP_MapGimmickObjectBase_C_CheckInKizunaEp::CallFunc_GetIsProgressBondsEpisode_playerID' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_CheckInKizunaEp, CallFunc_GetIsProgressBondsEpisode_targetID) == 0x000011, "Member 'BP_MapGimmickObjectBase_C_CheckInKizunaEp::CallFunc_GetIsProgressBondsEpisode_targetID' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_CheckInKizunaEp, CallFunc_GetIsProgressBondsEpisode_ReturnValue) == 0x000012, "Member 'BP_MapGimmickObjectBase_C_CheckInKizunaEp::CallFunc_GetIsProgressBondsEpisode_ReturnValue' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.DebugCheckKizunaEp
// 0x0001 (0x0001 - 0x0000)
struct BP_MapGimmickObjectBase_C_DebugCheckKizunaEp final
{
public:
	bool                                          CallFunc_CheckInKizunaEp_PlayOk;                   // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_DebugCheckKizunaEp) == 0x000001, "Wrong alignment on BP_MapGimmickObjectBase_C_DebugCheckKizunaEp");
static_assert(sizeof(BP_MapGimmickObjectBase_C_DebugCheckKizunaEp) == 0x000001, "Wrong size on BP_MapGimmickObjectBase_C_DebugCheckKizunaEp");
static_assert(offsetof(BP_MapGimmickObjectBase_C_DebugCheckKizunaEp, CallFunc_CheckInKizunaEp_PlayOk) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_DebugCheckKizunaEp::CallFunc_CheckInKizunaEp_PlayOk' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.GetPsychicObjectCentrePos
// 0x000C (0x000C - 0x0000)
struct BP_MapGimmickObjectBase_C_GetPsychicObjectCentrePos final
{
public:
	struct FVector                                Centre_pos;                                        // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_GetPsychicObjectCentrePos) == 0x000004, "Wrong alignment on BP_MapGimmickObjectBase_C_GetPsychicObjectCentrePos");
static_assert(sizeof(BP_MapGimmickObjectBase_C_GetPsychicObjectCentrePos) == 0x00000C, "Wrong size on BP_MapGimmickObjectBase_C_GetPsychicObjectCentrePos");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetPsychicObjectCentrePos, Centre_pos) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_GetPsychicObjectCentrePos::Centre_pos' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.GetPsychicObjectWeightGaugePos
// 0x0018 (0x0018 - 0x0000)
struct BP_MapGimmickObjectBase_C_GetPsychicObjectWeightGaugePos final
{
public:
	struct FVector                                Weight_gauge_pos;                                  // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_GetPsychicObjectWeightGaugePos) == 0x000004, "Wrong alignment on BP_MapGimmickObjectBase_C_GetPsychicObjectWeightGaugePos");
static_assert(sizeof(BP_MapGimmickObjectBase_C_GetPsychicObjectWeightGaugePos) == 0x000018, "Wrong size on BP_MapGimmickObjectBase_C_GetPsychicObjectWeightGaugePos");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetPsychicObjectWeightGaugePos, Weight_gauge_pos) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_GetPsychicObjectWeightGaugePos::Weight_gauge_pos' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetPsychicObjectWeightGaugePos, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00000C, "Member 'BP_MapGimmickObjectBase_C_GetPsychicObjectWeightGaugePos::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.GetPsychicObjectType
// 0x0001 (0x0001 - 0x0000)
struct BP_MapGimmickObjectBase_C_GetPsychicObjectType final
{
public:
	EPsyObjType                                   Psychic_object_type;                               // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_GetPsychicObjectType) == 0x000001, "Wrong alignment on BP_MapGimmickObjectBase_C_GetPsychicObjectType");
static_assert(sizeof(BP_MapGimmickObjectBase_C_GetPsychicObjectType) == 0x000001, "Wrong size on BP_MapGimmickObjectBase_C_GetPsychicObjectType");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetPsychicObjectType, Psychic_object_type) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_GetPsychicObjectType::Psychic_object_type' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.IsPsychicObject
// 0x0001 (0x0001 - 0x0000)
struct BP_MapGimmickObjectBase_C_IsPsychicObject final
{
public:
	bool                                          bResult;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_IsPsychicObject) == 0x000001, "Wrong alignment on BP_MapGimmickObjectBase_C_IsPsychicObject");
static_assert(sizeof(BP_MapGimmickObjectBase_C_IsPsychicObject) == 0x000001, "Wrong size on BP_MapGimmickObjectBase_C_IsPsychicObject");
static_assert(offsetof(BP_MapGimmickObjectBase_C_IsPsychicObject, bResult) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_IsPsychicObject::bResult' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.IsPsychicObjectActive
// 0x0001 (0x0001 - 0x0000)
struct BP_MapGimmickObjectBase_C_IsPsychicObjectActive final
{
public:
	bool                                          Param_IsActive;                                    // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_IsPsychicObjectActive) == 0x000001, "Wrong alignment on BP_MapGimmickObjectBase_C_IsPsychicObjectActive");
static_assert(sizeof(BP_MapGimmickObjectBase_C_IsPsychicObjectActive) == 0x000001, "Wrong size on BP_MapGimmickObjectBase_C_IsPsychicObjectActive");
static_assert(offsetof(BP_MapGimmickObjectBase_C_IsPsychicObjectActive, Param_IsActive) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_IsPsychicObjectActive::Param_IsActive' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.GetPsychicObjectVhsParam
// 0x0018 (0x0018 - 0x0000)
struct BP_MapGimmickObjectBase_C_GetPsychicObjectVhsParam final
{
public:
	class UCurveVector*                           ParamCurve;                                        // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveVector*                           ColorCurve;                                        // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         VhsSeconds;                                        // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_GetPsychicObjectVhsParam) == 0x000008, "Wrong alignment on BP_MapGimmickObjectBase_C_GetPsychicObjectVhsParam");
static_assert(sizeof(BP_MapGimmickObjectBase_C_GetPsychicObjectVhsParam) == 0x000018, "Wrong size on BP_MapGimmickObjectBase_C_GetPsychicObjectVhsParam");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetPsychicObjectVhsParam, ParamCurve) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_GetPsychicObjectVhsParam::ParamCurve' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetPsychicObjectVhsParam, ColorCurve) == 0x000008, "Member 'BP_MapGimmickObjectBase_C_GetPsychicObjectVhsParam::ColorCurve' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetPsychicObjectVhsParam, VhsSeconds) == 0x000010, "Member 'BP_MapGimmickObjectBase_C_GetPsychicObjectVhsParam::VhsSeconds' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.CanUseMapGimmick
// 0x0003 (0x0003 - 0x0000)
struct BP_MapGimmickObjectBase_C_CanUseMapGimmick final
{
public:
	bool                                          UseOk;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_CanUseMapGimmick) == 0x000001, "Wrong alignment on BP_MapGimmickObjectBase_C_CanUseMapGimmick");
static_assert(sizeof(BP_MapGimmickObjectBase_C_CanUseMapGimmick) == 0x000003, "Wrong size on BP_MapGimmickObjectBase_C_CanUseMapGimmick");
static_assert(offsetof(BP_MapGimmickObjectBase_C_CanUseMapGimmick, UseOk) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_CanUseMapGimmick::UseOk' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_CanUseMapGimmick, ReturnValue) == 0x000001, "Member 'BP_MapGimmickObjectBase_C_CanUseMapGimmick::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_CanUseMapGimmick, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'BP_MapGimmickObjectBase_C_CanUseMapGimmick::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.SetPlayerCameraViewTarget
// 0x0010 (0x0010 - 0x0000)
struct BP_MapGimmickObjectBase_C_SetPlayerCameraViewTarget final
{
public:
	float                                         BlendTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EViewTargetBlendFunction                      BlendFunc;                                         // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_70C6[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         BlendExp;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_SetPlayerCameraViewTarget) == 0x000004, "Wrong alignment on BP_MapGimmickObjectBase_C_SetPlayerCameraViewTarget");
static_assert(sizeof(BP_MapGimmickObjectBase_C_SetPlayerCameraViewTarget) == 0x000010, "Wrong size on BP_MapGimmickObjectBase_C_SetPlayerCameraViewTarget");
static_assert(offsetof(BP_MapGimmickObjectBase_C_SetPlayerCameraViewTarget, BlendTime) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_SetPlayerCameraViewTarget::BlendTime' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_SetPlayerCameraViewTarget, BlendFunc) == 0x000004, "Member 'BP_MapGimmickObjectBase_C_SetPlayerCameraViewTarget::BlendFunc' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_SetPlayerCameraViewTarget, BlendExp) == 0x000008, "Member 'BP_MapGimmickObjectBase_C_SetPlayerCameraViewTarget::BlendExp' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_SetPlayerCameraViewTarget, ReturnValue) == 0x00000C, "Member 'BP_MapGimmickObjectBase_C_SetPlayerCameraViewTarget::ReturnValue' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.SetPlayerCameraRotation
// 0x0010 (0x0010 - 0x0000)
struct BP_MapGimmickObjectBase_C_SetPlayerCameraRotation final
{
public:
	struct FRotator                               Rot;                                               // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ReturnValue;                                       // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_SetPlayerCameraRotation) == 0x000004, "Wrong alignment on BP_MapGimmickObjectBase_C_SetPlayerCameraRotation");
static_assert(sizeof(BP_MapGimmickObjectBase_C_SetPlayerCameraRotation) == 0x000010, "Wrong size on BP_MapGimmickObjectBase_C_SetPlayerCameraRotation");
static_assert(offsetof(BP_MapGimmickObjectBase_C_SetPlayerCameraRotation, Rot) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_SetPlayerCameraRotation::Rot' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_SetPlayerCameraRotation, ReturnValue) == 0x00000C, "Member 'BP_MapGimmickObjectBase_C_SetPlayerCameraRotation::ReturnValue' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.SetPlayerCameraMode
// 0x0002 (0x0002 - 0x0000)
struct BP_MapGimmickObjectBase_C_SetPlayerCameraMode final
{
public:
	EPlayerCameraMode                             Mode;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_SetPlayerCameraMode) == 0x000001, "Wrong alignment on BP_MapGimmickObjectBase_C_SetPlayerCameraMode");
static_assert(sizeof(BP_MapGimmickObjectBase_C_SetPlayerCameraMode) == 0x000002, "Wrong size on BP_MapGimmickObjectBase_C_SetPlayerCameraMode");
static_assert(offsetof(BP_MapGimmickObjectBase_C_SetPlayerCameraMode, Mode) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_SetPlayerCameraMode::Mode' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_SetPlayerCameraMode, ReturnValue) == 0x000001, "Member 'BP_MapGimmickObjectBase_C_SetPlayerCameraMode::ReturnValue' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.SetPlayerCameraLocation
// 0x0010 (0x0010 - 0x0000)
struct BP_MapGimmickObjectBase_C_SetPlayerCameraLocation final
{
public:
	struct FVector                                Pos;                                               // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_SetPlayerCameraLocation) == 0x000004, "Wrong alignment on BP_MapGimmickObjectBase_C_SetPlayerCameraLocation");
static_assert(sizeof(BP_MapGimmickObjectBase_C_SetPlayerCameraLocation) == 0x000010, "Wrong size on BP_MapGimmickObjectBase_C_SetPlayerCameraLocation");
static_assert(offsetof(BP_MapGimmickObjectBase_C_SetPlayerCameraLocation, Pos) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_SetPlayerCameraLocation::Pos' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_SetPlayerCameraLocation, ReturnValue) == 0x00000C, "Member 'BP_MapGimmickObjectBase_C_SetPlayerCameraLocation::ReturnValue' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.SetPlayerCameraFieldOfView
// 0x0008 (0x0008 - 0x0000)
struct BP_MapGimmickObjectBase_C_SetPlayerCameraFieldOfView final
{
public:
	float                                         FOV;                                               // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_SetPlayerCameraFieldOfView) == 0x000004, "Wrong alignment on BP_MapGimmickObjectBase_C_SetPlayerCameraFieldOfView");
static_assert(sizeof(BP_MapGimmickObjectBase_C_SetPlayerCameraFieldOfView) == 0x000008, "Wrong size on BP_MapGimmickObjectBase_C_SetPlayerCameraFieldOfView");
static_assert(offsetof(BP_MapGimmickObjectBase_C_SetPlayerCameraFieldOfView, FOV) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_SetPlayerCameraFieldOfView::FOV' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_SetPlayerCameraFieldOfView, ReturnValue) == 0x000004, "Member 'BP_MapGimmickObjectBase_C_SetPlayerCameraFieldOfView::ReturnValue' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.SetPlayerCameraDirection
// 0x0010 (0x0010 - 0x0000)
struct BP_MapGimmickObjectBase_C_SetPlayerCameraDirection final
{
public:
	struct FVector                                Pos;                                               // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_SetPlayerCameraDirection) == 0x000004, "Wrong alignment on BP_MapGimmickObjectBase_C_SetPlayerCameraDirection");
static_assert(sizeof(BP_MapGimmickObjectBase_C_SetPlayerCameraDirection) == 0x000010, "Wrong size on BP_MapGimmickObjectBase_C_SetPlayerCameraDirection");
static_assert(offsetof(BP_MapGimmickObjectBase_C_SetPlayerCameraDirection, Pos) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_SetPlayerCameraDirection::Pos' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_SetPlayerCameraDirection, ReturnValue) == 0x00000C, "Member 'BP_MapGimmickObjectBase_C_SetPlayerCameraDirection::ReturnValue' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.GetPlayerCameraRotation
// 0x000C (0x000C - 0x0000)
struct BP_MapGimmickObjectBase_C_GetPlayerCameraRotation final
{
public:
	struct FRotator                               ReturnValue;                                       // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_GetPlayerCameraRotation) == 0x000004, "Wrong alignment on BP_MapGimmickObjectBase_C_GetPlayerCameraRotation");
static_assert(sizeof(BP_MapGimmickObjectBase_C_GetPlayerCameraRotation) == 0x00000C, "Wrong size on BP_MapGimmickObjectBase_C_GetPlayerCameraRotation");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetPlayerCameraRotation, ReturnValue) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_GetPlayerCameraRotation::ReturnValue' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.GetPlayerCameraMode
// 0x0001 (0x0001 - 0x0000)
struct BP_MapGimmickObjectBase_C_GetPlayerCameraMode final
{
public:
	EPlayerCameraMode                             ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_GetPlayerCameraMode) == 0x000001, "Wrong alignment on BP_MapGimmickObjectBase_C_GetPlayerCameraMode");
static_assert(sizeof(BP_MapGimmickObjectBase_C_GetPlayerCameraMode) == 0x000001, "Wrong size on BP_MapGimmickObjectBase_C_GetPlayerCameraMode");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetPlayerCameraMode, ReturnValue) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_GetPlayerCameraMode::ReturnValue' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.GetPlayerCameraLocation
// 0x000C (0x000C - 0x0000)
struct BP_MapGimmickObjectBase_C_GetPlayerCameraLocation final
{
public:
	struct FVector                                ReturnValue;                                       // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_GetPlayerCameraLocation) == 0x000004, "Wrong alignment on BP_MapGimmickObjectBase_C_GetPlayerCameraLocation");
static_assert(sizeof(BP_MapGimmickObjectBase_C_GetPlayerCameraLocation) == 0x00000C, "Wrong size on BP_MapGimmickObjectBase_C_GetPlayerCameraLocation");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetPlayerCameraLocation, ReturnValue) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_GetPlayerCameraLocation::ReturnValue' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.GetPlayerCameraFieldOfView
// 0x0004 (0x0004 - 0x0000)
struct BP_MapGimmickObjectBase_C_GetPlayerCameraFieldOfView final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_GetPlayerCameraFieldOfView) == 0x000004, "Wrong alignment on BP_MapGimmickObjectBase_C_GetPlayerCameraFieldOfView");
static_assert(sizeof(BP_MapGimmickObjectBase_C_GetPlayerCameraFieldOfView) == 0x000004, "Wrong size on BP_MapGimmickObjectBase_C_GetPlayerCameraFieldOfView");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetPlayerCameraFieldOfView, ReturnValue) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_GetPlayerCameraFieldOfView::ReturnValue' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.GetPlayerCameraDirection
// 0x000C (0x000C - 0x0000)
struct BP_MapGimmickObjectBase_C_GetPlayerCameraDirection final
{
public:
	struct FVector                                ReturnValue;                                       // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_GetPlayerCameraDirection) == 0x000004, "Wrong alignment on BP_MapGimmickObjectBase_C_GetPlayerCameraDirection");
static_assert(sizeof(BP_MapGimmickObjectBase_C_GetPlayerCameraDirection) == 0x00000C, "Wrong size on BP_MapGimmickObjectBase_C_GetPlayerCameraDirection");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetPlayerCameraDirection, ReturnValue) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_GetPlayerCameraDirection::ReturnValue' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.GetCameraLookAtPos
// 0x0018 (0x0018 - 0x0000)
struct BP_MapGimmickObjectBase_C_GetCameraLookAtPos final
{
public:
	struct FVector                                ReturnValue;                                       // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLookAtPosition_ReturnValue;            // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_GetCameraLookAtPos) == 0x000004, "Wrong alignment on BP_MapGimmickObjectBase_C_GetCameraLookAtPos");
static_assert(sizeof(BP_MapGimmickObjectBase_C_GetCameraLookAtPos) == 0x000018, "Wrong size on BP_MapGimmickObjectBase_C_GetCameraLookAtPos");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetCameraLookAtPos, ReturnValue) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_GetCameraLookAtPos::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetCameraLookAtPos, CallFunc_GetLookAtPosition_ReturnValue) == 0x00000C, "Member 'BP_MapGimmickObjectBase_C_GetCameraLookAtPos::CallFunc_GetLookAtPosition_ReturnValue' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.GetRemoteActorRotation
// 0x000C (0x000C - 0x0000)
struct BP_MapGimmickObjectBase_C_GetRemoteActorRotation final
{
public:
	struct FRotator                               ReturnValue;                                       // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_GetRemoteActorRotation) == 0x000004, "Wrong alignment on BP_MapGimmickObjectBase_C_GetRemoteActorRotation");
static_assert(sizeof(BP_MapGimmickObjectBase_C_GetRemoteActorRotation) == 0x00000C, "Wrong size on BP_MapGimmickObjectBase_C_GetRemoteActorRotation");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetRemoteActorRotation, ReturnValue) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_GetRemoteActorRotation::ReturnValue' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.GetRemoteActorLocation
// 0x000C (0x000C - 0x0000)
struct BP_MapGimmickObjectBase_C_GetRemoteActorLocation final
{
public:
	struct FVector                                ReturnValue;                                       // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_GetRemoteActorLocation) == 0x000004, "Wrong alignment on BP_MapGimmickObjectBase_C_GetRemoteActorLocation");
static_assert(sizeof(BP_MapGimmickObjectBase_C_GetRemoteActorLocation) == 0x00000C, "Wrong size on BP_MapGimmickObjectBase_C_GetRemoteActorLocation");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetRemoteActorLocation, ReturnValue) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_GetRemoteActorLocation::ReturnValue' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.RequestEndUniqueObjectState
// 0x0010 (0x0010 - 0x0000)
struct BP_MapGimmickObjectBase_C_RequestEndUniqueObjectState final
{
public:
	class AActor*                                 PActor;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_RequestEndUniqueObjectState) == 0x000008, "Wrong alignment on BP_MapGimmickObjectBase_C_RequestEndUniqueObjectState");
static_assert(sizeof(BP_MapGimmickObjectBase_C_RequestEndUniqueObjectState) == 0x000010, "Wrong size on BP_MapGimmickObjectBase_C_RequestEndUniqueObjectState");
static_assert(offsetof(BP_MapGimmickObjectBase_C_RequestEndUniqueObjectState, PActor) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_RequestEndUniqueObjectState::PActor' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_RequestEndUniqueObjectState, ReturnValue) == 0x000008, "Member 'BP_MapGimmickObjectBase_C_RequestEndUniqueObjectState::ReturnValue' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.IsUniqueObject
// 0x0001 (0x0001 - 0x0000)
struct BP_MapGimmickObjectBase_C_IsUniqueObject final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_IsUniqueObject) == 0x000001, "Wrong alignment on BP_MapGimmickObjectBase_C_IsUniqueObject");
static_assert(sizeof(BP_MapGimmickObjectBase_C_IsUniqueObject) == 0x000001, "Wrong size on BP_MapGimmickObjectBase_C_IsUniqueObject");
static_assert(offsetof(BP_MapGimmickObjectBase_C_IsUniqueObject, ReturnValue) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_IsUniqueObject::ReturnValue' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.IsPsychicObjectActiveC
// 0x0001 (0x0001 - 0x0000)
struct BP_MapGimmickObjectBase_C_IsPsychicObjectActiveC final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_IsPsychicObjectActiveC) == 0x000001, "Wrong alignment on BP_MapGimmickObjectBase_C_IsPsychicObjectActiveC");
static_assert(sizeof(BP_MapGimmickObjectBase_C_IsPsychicObjectActiveC) == 0x000001, "Wrong size on BP_MapGimmickObjectBase_C_IsPsychicObjectActiveC");
static_assert(offsetof(BP_MapGimmickObjectBase_C_IsPsychicObjectActiveC, ReturnValue) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_IsPsychicObjectActiveC::ReturnValue' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.IsCopyPsychicObject
// 0x0001 (0x0001 - 0x0000)
struct BP_MapGimmickObjectBase_C_IsCopyPsychicObject final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_IsCopyPsychicObject) == 0x000001, "Wrong alignment on BP_MapGimmickObjectBase_C_IsCopyPsychicObject");
static_assert(sizeof(BP_MapGimmickObjectBase_C_IsCopyPsychicObject) == 0x000001, "Wrong size on BP_MapGimmickObjectBase_C_IsCopyPsychicObject");
static_assert(offsetof(BP_MapGimmickObjectBase_C_IsCopyPsychicObject, ReturnValue) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_IsCopyPsychicObject::ReturnValue' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.InitializeCopyPsychicObject
// 0x0001 (0x0001 - 0x0000)
struct BP_MapGimmickObjectBase_C_InitializeCopyPsychicObject final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_InitializeCopyPsychicObject) == 0x000001, "Wrong alignment on BP_MapGimmickObjectBase_C_InitializeCopyPsychicObject");
static_assert(sizeof(BP_MapGimmickObjectBase_C_InitializeCopyPsychicObject) == 0x000001, "Wrong size on BP_MapGimmickObjectBase_C_InitializeCopyPsychicObject");
static_assert(offsetof(BP_MapGimmickObjectBase_C_InitializeCopyPsychicObject, ReturnValue) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_InitializeCopyPsychicObject::ReturnValue' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.GetUnqObjMoveVelocity
// 0x000C (0x000C - 0x0000)
struct BP_MapGimmickObjectBase_C_GetUnqObjMoveVelocity final
{
public:
	struct FVector                                ReturnValue;                                       // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_GetUnqObjMoveVelocity) == 0x000004, "Wrong alignment on BP_MapGimmickObjectBase_C_GetUnqObjMoveVelocity");
static_assert(sizeof(BP_MapGimmickObjectBase_C_GetUnqObjMoveVelocity) == 0x00000C, "Wrong size on BP_MapGimmickObjectBase_C_GetUnqObjMoveVelocity");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetUnqObjMoveVelocity, ReturnValue) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_GetUnqObjMoveVelocity::ReturnValue' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.GetUnqObjCamTargetPos
// 0x000C (0x000C - 0x0000)
struct BP_MapGimmickObjectBase_C_GetUnqObjCamTargetPos final
{
public:
	struct FVector                                ReturnValue;                                       // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_GetUnqObjCamTargetPos) == 0x000004, "Wrong alignment on BP_MapGimmickObjectBase_C_GetUnqObjCamTargetPos");
static_assert(sizeof(BP_MapGimmickObjectBase_C_GetUnqObjCamTargetPos) == 0x00000C, "Wrong size on BP_MapGimmickObjectBase_C_GetUnqObjCamTargetPos");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetUnqObjCamTargetPos, ReturnValue) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_GetUnqObjCamTargetPos::ReturnValue' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.GetUniqueObjectCameraOwnerRotation
// 0x0080 (0x0080 - 0x0000)
struct BP_MapGimmickObjectBase_C_GetUniqueObjectCameraOwnerRotation final
{
public:
	struct FRotator                               ReturnValue;                                       // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_70C7[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerManager*                         CallFunc_GetPlayerManager_PlayerManager;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSCharacterBase*                       CallFunc_GetPlayer_ReturnValue;                    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0020(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_GetUniqueObjectCameraOwnerRotation) == 0x000010, "Wrong alignment on BP_MapGimmickObjectBase_C_GetUniqueObjectCameraOwnerRotation");
static_assert(sizeof(BP_MapGimmickObjectBase_C_GetUniqueObjectCameraOwnerRotation) == 0x000080, "Wrong size on BP_MapGimmickObjectBase_C_GetUniqueObjectCameraOwnerRotation");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetUniqueObjectCameraOwnerRotation, ReturnValue) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_GetUniqueObjectCameraOwnerRotation::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetUniqueObjectCameraOwnerRotation, CallFunc_GetPlayerManager_PlayerManager) == 0x000010, "Member 'BP_MapGimmickObjectBase_C_GetUniqueObjectCameraOwnerRotation::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetUniqueObjectCameraOwnerRotation, CallFunc_GetPlayer_ReturnValue) == 0x000018, "Member 'BP_MapGimmickObjectBase_C_GetUniqueObjectCameraOwnerRotation::CallFunc_GetPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetUniqueObjectCameraOwnerRotation, CallFunc_GetTransform_ReturnValue) == 0x000020, "Member 'BP_MapGimmickObjectBase_C_GetUniqueObjectCameraOwnerRotation::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetUniqueObjectCameraOwnerRotation, CallFunc_BreakTransform_Location) == 0x000050, "Member 'BP_MapGimmickObjectBase_C_GetUniqueObjectCameraOwnerRotation::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetUniqueObjectCameraOwnerRotation, CallFunc_BreakTransform_Rotation) == 0x00005C, "Member 'BP_MapGimmickObjectBase_C_GetUniqueObjectCameraOwnerRotation::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetUniqueObjectCameraOwnerRotation, CallFunc_BreakTransform_Scale) == 0x000068, "Member 'BP_MapGimmickObjectBase_C_GetUniqueObjectCameraOwnerRotation::CallFunc_BreakTransform_Scale' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.GetUniqueObjectCameraLookAtPos
// 0x001C (0x001C - 0x0000)
struct BP_MapGimmickObjectBase_C_GetUniqueObjectCameraLookAtPos final
{
public:
	float                                         LookAtRate;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ReturnValue;                                       // 0x0004(0x000C)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLookAtPosition_ReturnValue;            // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_GetUniqueObjectCameraLookAtPos) == 0x000004, "Wrong alignment on BP_MapGimmickObjectBase_C_GetUniqueObjectCameraLookAtPos");
static_assert(sizeof(BP_MapGimmickObjectBase_C_GetUniqueObjectCameraLookAtPos) == 0x00001C, "Wrong size on BP_MapGimmickObjectBase_C_GetUniqueObjectCameraLookAtPos");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetUniqueObjectCameraLookAtPos, LookAtRate) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_GetUniqueObjectCameraLookAtPos::LookAtRate' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetUniqueObjectCameraLookAtPos, ReturnValue) == 0x000004, "Member 'BP_MapGimmickObjectBase_C_GetUniqueObjectCameraLookAtPos::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetUniqueObjectCameraLookAtPos, CallFunc_GetLookAtPosition_ReturnValue) == 0x000010, "Member 'BP_MapGimmickObjectBase_C_GetUniqueObjectCameraLookAtPos::CallFunc_GetLookAtPosition_ReturnValue' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.GetDebrisEffectData
// 0x0018 (0x0018 - 0x0000)
struct BP_MapGimmickObjectBase_C_GetDebrisEffectData final
{
public:
	class UParticleSystem*                        ParticleTemplate;                                  // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     OverrideMaterial;                                  // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_GetDebrisEffectData) == 0x000008, "Wrong alignment on BP_MapGimmickObjectBase_C_GetDebrisEffectData");
static_assert(sizeof(BP_MapGimmickObjectBase_C_GetDebrisEffectData) == 0x000018, "Wrong size on BP_MapGimmickObjectBase_C_GetDebrisEffectData");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetDebrisEffectData, ParticleTemplate) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_GetDebrisEffectData::ParticleTemplate' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetDebrisEffectData, OverrideMaterial) == 0x000008, "Member 'BP_MapGimmickObjectBase_C_GetDebrisEffectData::OverrideMaterial' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetDebrisEffectData, ReturnValue) == 0x000010, "Member 'BP_MapGimmickObjectBase_C_GetDebrisEffectData::ReturnValue' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.GetDebrisEffect
// 0x0018 (0x0018 - 0x0000)
struct BP_MapGimmickObjectBase_C_GetDebrisEffect final
{
public:
	EEffectObjectDebrisType                       Type;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_70C8[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     OverrideMaterial;                                  // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_GetDebrisEffect) == 0x000008, "Wrong alignment on BP_MapGimmickObjectBase_C_GetDebrisEffect");
static_assert(sizeof(BP_MapGimmickObjectBase_C_GetDebrisEffect) == 0x000018, "Wrong size on BP_MapGimmickObjectBase_C_GetDebrisEffect");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetDebrisEffect, Type) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_GetDebrisEffect::Type' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetDebrisEffect, OverrideMaterial) == 0x000008, "Member 'BP_MapGimmickObjectBase_C_GetDebrisEffect::OverrideMaterial' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetDebrisEffect, ReturnValue) == 0x000010, "Member 'BP_MapGimmickObjectBase_C_GetDebrisEffect::ReturnValue' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.IsSwingType
// 0x0001 (0x0001 - 0x0000)
struct BP_MapGimmickObjectBase_C_IsSwingType final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_IsSwingType) == 0x000001, "Wrong alignment on BP_MapGimmickObjectBase_C_IsSwingType");
static_assert(sizeof(BP_MapGimmickObjectBase_C_IsSwingType) == 0x000001, "Wrong size on BP_MapGimmickObjectBase_C_IsSwingType");
static_assert(offsetof(BP_MapGimmickObjectBase_C_IsSwingType, ReturnValue) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_IsSwingType::ReturnValue' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.GetPsychicObjectSize
// 0x0001 (0x0001 - 0x0000)
struct BP_MapGimmickObjectBase_C_GetPsychicObjectSize final
{
public:
	EPsychicObjectSizeType                        ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_GetPsychicObjectSize) == 0x000001, "Wrong alignment on BP_MapGimmickObjectBase_C_GetPsychicObjectSize");
static_assert(sizeof(BP_MapGimmickObjectBase_C_GetPsychicObjectSize) == 0x000001, "Wrong size on BP_MapGimmickObjectBase_C_GetPsychicObjectSize");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetPsychicObjectSize, ReturnValue) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_GetPsychicObjectSize::ReturnValue' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.SetUniqueObjectC
// 0x0002 (0x0002 - 0x0000)
struct BP_MapGimmickObjectBase_C_SetUniqueObjectC final
{
public:
	bool                                          Flag;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_SetUniqueObjectC) == 0x000001, "Wrong alignment on BP_MapGimmickObjectBase_C_SetUniqueObjectC");
static_assert(sizeof(BP_MapGimmickObjectBase_C_SetUniqueObjectC) == 0x000002, "Wrong size on BP_MapGimmickObjectBase_C_SetUniqueObjectC");
static_assert(offsetof(BP_MapGimmickObjectBase_C_SetUniqueObjectC, Flag) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_SetUniqueObjectC::Flag' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_SetUniqueObjectC, ReturnValue) == 0x000001, "Member 'BP_MapGimmickObjectBase_C_SetUniqueObjectC::ReturnValue' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.SetSwingTypeC
// 0x0002 (0x0002 - 0x0000)
struct BP_MapGimmickObjectBase_C_SetSwingTypeC final
{
public:
	bool                                          Flag;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_SetSwingTypeC) == 0x000001, "Wrong alignment on BP_MapGimmickObjectBase_C_SetSwingTypeC");
static_assert(sizeof(BP_MapGimmickObjectBase_C_SetSwingTypeC) == 0x000002, "Wrong size on BP_MapGimmickObjectBase_C_SetSwingTypeC");
static_assert(offsetof(BP_MapGimmickObjectBase_C_SetSwingTypeC, Flag) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_SetSwingTypeC::Flag' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_SetSwingTypeC, ReturnValue) == 0x000001, "Member 'BP_MapGimmickObjectBase_C_SetSwingTypeC::ReturnValue' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.SetPsychicObjectTickC
// 0x000C (0x000C - 0x0000)
struct BP_MapGimmickObjectBase_C_SetPsychicObjectTickC final
{
public:
	class FName                                   RefName;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Flag;                                              // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ReturnValue;                                       // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_SetPsychicObjectTickC) == 0x000004, "Wrong alignment on BP_MapGimmickObjectBase_C_SetPsychicObjectTickC");
static_assert(sizeof(BP_MapGimmickObjectBase_C_SetPsychicObjectTickC) == 0x00000C, "Wrong size on BP_MapGimmickObjectBase_C_SetPsychicObjectTickC");
static_assert(offsetof(BP_MapGimmickObjectBase_C_SetPsychicObjectTickC, RefName) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_SetPsychicObjectTickC::RefName' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_SetPsychicObjectTickC, Flag) == 0x000008, "Member 'BP_MapGimmickObjectBase_C_SetPsychicObjectTickC::Flag' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_SetPsychicObjectTickC, ReturnValue) == 0x000009, "Member 'BP_MapGimmickObjectBase_C_SetPsychicObjectTickC::ReturnValue' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.SetPsychicObjectInUseC
// 0x0002 (0x0002 - 0x0000)
struct BP_MapGimmickObjectBase_C_SetPsychicObjectInUseC final
{
public:
	bool                                          Flag;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_SetPsychicObjectInUseC) == 0x000001, "Wrong alignment on BP_MapGimmickObjectBase_C_SetPsychicObjectInUseC");
static_assert(sizeof(BP_MapGimmickObjectBase_C_SetPsychicObjectInUseC) == 0x000002, "Wrong size on BP_MapGimmickObjectBase_C_SetPsychicObjectInUseC");
static_assert(offsetof(BP_MapGimmickObjectBase_C_SetPsychicObjectInUseC, Flag) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_SetPsychicObjectInUseC::Flag' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_SetPsychicObjectInUseC, ReturnValue) == 0x000001, "Member 'BP_MapGimmickObjectBase_C_SetPsychicObjectInUseC::ReturnValue' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.SetPsychicObjectActiveC
// 0x0002 (0x0002 - 0x0000)
struct BP_MapGimmickObjectBase_C_SetPsychicObjectActiveC final
{
public:
	bool                                          Flag;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_SetPsychicObjectActiveC) == 0x000001, "Wrong alignment on BP_MapGimmickObjectBase_C_SetPsychicObjectActiveC");
static_assert(sizeof(BP_MapGimmickObjectBase_C_SetPsychicObjectActiveC) == 0x000002, "Wrong size on BP_MapGimmickObjectBase_C_SetPsychicObjectActiveC");
static_assert(offsetof(BP_MapGimmickObjectBase_C_SetPsychicObjectActiveC, Flag) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_SetPsychicObjectActiveC::Flag' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_SetPsychicObjectActiveC, ReturnValue) == 0x000001, "Member 'BP_MapGimmickObjectBase_C_SetPsychicObjectActiveC::ReturnValue' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.SetBrainFieldObjectC
// 0x0002 (0x0002 - 0x0000)
struct BP_MapGimmickObjectBase_C_SetBrainFieldObjectC final
{
public:
	bool                                          Flag;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_SetBrainFieldObjectC) == 0x000001, "Wrong alignment on BP_MapGimmickObjectBase_C_SetBrainFieldObjectC");
static_assert(sizeof(BP_MapGimmickObjectBase_C_SetBrainFieldObjectC) == 0x000002, "Wrong size on BP_MapGimmickObjectBase_C_SetBrainFieldObjectC");
static_assert(offsetof(BP_MapGimmickObjectBase_C_SetBrainFieldObjectC, Flag) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_SetBrainFieldObjectC::Flag' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_SetBrainFieldObjectC, ReturnValue) == 0x000001, "Member 'BP_MapGimmickObjectBase_C_SetBrainFieldObjectC::ReturnValue' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.IsUniqueObjectC
// 0x0001 (0x0001 - 0x0000)
struct BP_MapGimmickObjectBase_C_IsUniqueObjectC final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_IsUniqueObjectC) == 0x000001, "Wrong alignment on BP_MapGimmickObjectBase_C_IsUniqueObjectC");
static_assert(sizeof(BP_MapGimmickObjectBase_C_IsUniqueObjectC) == 0x000001, "Wrong size on BP_MapGimmickObjectBase_C_IsUniqueObjectC");
static_assert(offsetof(BP_MapGimmickObjectBase_C_IsUniqueObjectC, ReturnValue) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_IsUniqueObjectC::ReturnValue' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.IsSwingTypeC
// 0x0001 (0x0001 - 0x0000)
struct BP_MapGimmickObjectBase_C_IsSwingTypeC final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_IsSwingTypeC) == 0x000001, "Wrong alignment on BP_MapGimmickObjectBase_C_IsSwingTypeC");
static_assert(sizeof(BP_MapGimmickObjectBase_C_IsSwingTypeC) == 0x000001, "Wrong size on BP_MapGimmickObjectBase_C_IsSwingTypeC");
static_assert(offsetof(BP_MapGimmickObjectBase_C_IsSwingTypeC, ReturnValue) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_IsSwingTypeC::ReturnValue' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.IsPsychicObjectTickC
// 0x0001 (0x0001 - 0x0000)
struct BP_MapGimmickObjectBase_C_IsPsychicObjectTickC final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_IsPsychicObjectTickC) == 0x000001, "Wrong alignment on BP_MapGimmickObjectBase_C_IsPsychicObjectTickC");
static_assert(sizeof(BP_MapGimmickObjectBase_C_IsPsychicObjectTickC) == 0x000001, "Wrong size on BP_MapGimmickObjectBase_C_IsPsychicObjectTickC");
static_assert(offsetof(BP_MapGimmickObjectBase_C_IsPsychicObjectTickC, ReturnValue) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_IsPsychicObjectTickC::ReturnValue' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.IsPsychicObjectInUseC
// 0x0001 (0x0001 - 0x0000)
struct BP_MapGimmickObjectBase_C_IsPsychicObjectInUseC final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_IsPsychicObjectInUseC) == 0x000001, "Wrong alignment on BP_MapGimmickObjectBase_C_IsPsychicObjectInUseC");
static_assert(sizeof(BP_MapGimmickObjectBase_C_IsPsychicObjectInUseC) == 0x000001, "Wrong size on BP_MapGimmickObjectBase_C_IsPsychicObjectInUseC");
static_assert(offsetof(BP_MapGimmickObjectBase_C_IsPsychicObjectInUseC, ReturnValue) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_IsPsychicObjectInUseC::ReturnValue' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.IsBrainFieldObjectC
// 0x0001 (0x0001 - 0x0000)
struct BP_MapGimmickObjectBase_C_IsBrainFieldObjectC final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_IsBrainFieldObjectC) == 0x000001, "Wrong alignment on BP_MapGimmickObjectBase_C_IsBrainFieldObjectC");
static_assert(sizeof(BP_MapGimmickObjectBase_C_IsBrainFieldObjectC) == 0x000001, "Wrong size on BP_MapGimmickObjectBase_C_IsBrainFieldObjectC");
static_assert(offsetof(BP_MapGimmickObjectBase_C_IsBrainFieldObjectC, ReturnValue) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_IsBrainFieldObjectC::ReturnValue' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.CheckPsychicObjectIdC
// 0x0002 (0x0002 - 0x0000)
struct BP_MapGimmickObjectBase_C_CheckPsychicObjectIdC final
{
public:
	BattlePrototype::EPsychicObjectID             CheckId;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_CheckPsychicObjectIdC) == 0x000001, "Wrong alignment on BP_MapGimmickObjectBase_C_CheckPsychicObjectIdC");
static_assert(sizeof(BP_MapGimmickObjectBase_C_CheckPsychicObjectIdC) == 0x000002, "Wrong size on BP_MapGimmickObjectBase_C_CheckPsychicObjectIdC");
static_assert(offsetof(BP_MapGimmickObjectBase_C_CheckPsychicObjectIdC, CheckId) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_CheckPsychicObjectIdC::CheckId' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_CheckPsychicObjectIdC, ReturnValue) == 0x000001, "Member 'BP_MapGimmickObjectBase_C_CheckPsychicObjectIdC::ReturnValue' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.IsPsychicObjectRegisterableC
// 0x0001 (0x0001 - 0x0000)
struct BP_MapGimmickObjectBase_C_IsPsychicObjectRegisterableC final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_IsPsychicObjectRegisterableC) == 0x000001, "Wrong alignment on BP_MapGimmickObjectBase_C_IsPsychicObjectRegisterableC");
static_assert(sizeof(BP_MapGimmickObjectBase_C_IsPsychicObjectRegisterableC) == 0x000001, "Wrong size on BP_MapGimmickObjectBase_C_IsPsychicObjectRegisterableC");
static_assert(offsetof(BP_MapGimmickObjectBase_C_IsPsychicObjectRegisterableC, ReturnValue) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_IsPsychicObjectRegisterableC::ReturnValue' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.SetDuelPoleType
// 0x0002 (0x0002 - 0x0000)
struct BP_MapGimmickObjectBase_C_SetDuelPoleType final
{
public:
	bool                                          bDuelType;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_SetDuelPoleType) == 0x000001, "Wrong alignment on BP_MapGimmickObjectBase_C_SetDuelPoleType");
static_assert(sizeof(BP_MapGimmickObjectBase_C_SetDuelPoleType) == 0x000002, "Wrong size on BP_MapGimmickObjectBase_C_SetDuelPoleType");
static_assert(offsetof(BP_MapGimmickObjectBase_C_SetDuelPoleType, bDuelType) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_SetDuelPoleType::bDuelType' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_SetDuelPoleType, ReturnValue) == 0x000001, "Member 'BP_MapGimmickObjectBase_C_SetDuelPoleType::ReturnValue' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.SetPsychicObjectRenderC
// 0x0002 (0x0002 - 0x0000)
struct BP_MapGimmickObjectBase_C_SetPsychicObjectRenderC final
{
public:
	bool                                          Flag;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_SetPsychicObjectRenderC) == 0x000001, "Wrong alignment on BP_MapGimmickObjectBase_C_SetPsychicObjectRenderC");
static_assert(sizeof(BP_MapGimmickObjectBase_C_SetPsychicObjectRenderC) == 0x000002, "Wrong size on BP_MapGimmickObjectBase_C_SetPsychicObjectRenderC");
static_assert(offsetof(BP_MapGimmickObjectBase_C_SetPsychicObjectRenderC, Flag) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_SetPsychicObjectRenderC::Flag' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_SetPsychicObjectRenderC, ReturnValue) == 0x000001, "Member 'BP_MapGimmickObjectBase_C_SetPsychicObjectRenderC::ReturnValue' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.IsPsychicObjectRenderC
// 0x0001 (0x0001 - 0x0000)
struct BP_MapGimmickObjectBase_C_IsPsychicObjectRenderC final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_IsPsychicObjectRenderC) == 0x000001, "Wrong alignment on BP_MapGimmickObjectBase_C_IsPsychicObjectRenderC");
static_assert(sizeof(BP_MapGimmickObjectBase_C_IsPsychicObjectRenderC) == 0x000001, "Wrong size on BP_MapGimmickObjectBase_C_IsPsychicObjectRenderC");
static_assert(offsetof(BP_MapGimmickObjectBase_C_IsPsychicObjectRenderC, ReturnValue) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_IsPsychicObjectRenderC::ReturnValue' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.SetPsychicObjectSimulateControlC
// 0x0002 (0x0002 - 0x0000)
struct BP_MapGimmickObjectBase_C_SetPsychicObjectSimulateControlC final
{
public:
	bool                                          Flag;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_SetPsychicObjectSimulateControlC) == 0x000001, "Wrong alignment on BP_MapGimmickObjectBase_C_SetPsychicObjectSimulateControlC");
static_assert(sizeof(BP_MapGimmickObjectBase_C_SetPsychicObjectSimulateControlC) == 0x000002, "Wrong size on BP_MapGimmickObjectBase_C_SetPsychicObjectSimulateControlC");
static_assert(offsetof(BP_MapGimmickObjectBase_C_SetPsychicObjectSimulateControlC, Flag) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_SetPsychicObjectSimulateControlC::Flag' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_SetPsychicObjectSimulateControlC, ReturnValue) == 0x000001, "Member 'BP_MapGimmickObjectBase_C_SetPsychicObjectSimulateControlC::ReturnValue' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.IsPsychicObjectSimulateControlEnableC
// 0x0001 (0x0001 - 0x0000)
struct BP_MapGimmickObjectBase_C_IsPsychicObjectSimulateControlEnableC final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_IsPsychicObjectSimulateControlEnableC) == 0x000001, "Wrong alignment on BP_MapGimmickObjectBase_C_IsPsychicObjectSimulateControlEnableC");
static_assert(sizeof(BP_MapGimmickObjectBase_C_IsPsychicObjectSimulateControlEnableC) == 0x000001, "Wrong size on BP_MapGimmickObjectBase_C_IsPsychicObjectSimulateControlEnableC");
static_assert(offsetof(BP_MapGimmickObjectBase_C_IsPsychicObjectSimulateControlEnableC, ReturnValue) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_IsPsychicObjectSimulateControlEnableC::ReturnValue' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.IsPsychicObjectSimulateC
// 0x0001 (0x0001 - 0x0000)
struct BP_MapGimmickObjectBase_C_IsPsychicObjectSimulateC final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_IsPsychicObjectSimulateC) == 0x000001, "Wrong alignment on BP_MapGimmickObjectBase_C_IsPsychicObjectSimulateC");
static_assert(sizeof(BP_MapGimmickObjectBase_C_IsPsychicObjectSimulateC) == 0x000001, "Wrong size on BP_MapGimmickObjectBase_C_IsPsychicObjectSimulateC");
static_assert(offsetof(BP_MapGimmickObjectBase_C_IsPsychicObjectSimulateC, ReturnValue) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_IsPsychicObjectSimulateC::ReturnValue' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.GetPsychicObjectSimulateControlDistanceSqC
// 0x0008 (0x0008 - 0x0000)
struct BP_MapGimmickObjectBase_C_GetPsychicObjectSimulateControlDistanceSqC final
{
public:
	float                                         DistSq;                                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_GetPsychicObjectSimulateControlDistanceSqC) == 0x000004, "Wrong alignment on BP_MapGimmickObjectBase_C_GetPsychicObjectSimulateControlDistanceSqC");
static_assert(sizeof(BP_MapGimmickObjectBase_C_GetPsychicObjectSimulateControlDistanceSqC) == 0x000008, "Wrong size on BP_MapGimmickObjectBase_C_GetPsychicObjectSimulateControlDistanceSqC");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetPsychicObjectSimulateControlDistanceSqC, DistSq) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_GetPsychicObjectSimulateControlDistanceSqC::DistSq' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetPsychicObjectSimulateControlDistanceSqC, ReturnValue) == 0x000004, "Member 'BP_MapGimmickObjectBase_C_GetPsychicObjectSimulateControlDistanceSqC::ReturnValue' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.CheckPsychicObjectSimulateC
// 0x0010 (0x0010 - 0x0000)
struct BP_MapGimmickObjectBase_C_CheckPsychicObjectSimulateC final
{
public:
	struct FVector                                PosPly;                                            // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_CheckPsychicObjectSimulateC) == 0x000004, "Wrong alignment on BP_MapGimmickObjectBase_C_CheckPsychicObjectSimulateC");
static_assert(sizeof(BP_MapGimmickObjectBase_C_CheckPsychicObjectSimulateC) == 0x000010, "Wrong size on BP_MapGimmickObjectBase_C_CheckPsychicObjectSimulateC");
static_assert(offsetof(BP_MapGimmickObjectBase_C_CheckPsychicObjectSimulateC, PosPly) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_CheckPsychicObjectSimulateC::PosPly' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_CheckPsychicObjectSimulateC, ReturnValue) == 0x00000C, "Member 'BP_MapGimmickObjectBase_C_CheckPsychicObjectSimulateC::ReturnValue' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.IsFloatObjectC
// 0x0001 (0x0001 - 0x0000)
struct BP_MapGimmickObjectBase_C_IsFloatObjectC final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_IsFloatObjectC) == 0x000001, "Wrong alignment on BP_MapGimmickObjectBase_C_IsFloatObjectC");
static_assert(sizeof(BP_MapGimmickObjectBase_C_IsFloatObjectC) == 0x000001, "Wrong size on BP_MapGimmickObjectBase_C_IsFloatObjectC");
static_assert(offsetof(BP_MapGimmickObjectBase_C_IsFloatObjectC, ReturnValue) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_IsFloatObjectC::ReturnValue' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.ResetPsychicObjectArrangeTransformC
// 0x0001 (0x0001 - 0x0000)
struct BP_MapGimmickObjectBase_C_ResetPsychicObjectArrangeTransformC final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_ResetPsychicObjectArrangeTransformC) == 0x000001, "Wrong alignment on BP_MapGimmickObjectBase_C_ResetPsychicObjectArrangeTransformC");
static_assert(sizeof(BP_MapGimmickObjectBase_C_ResetPsychicObjectArrangeTransformC) == 0x000001, "Wrong size on BP_MapGimmickObjectBase_C_ResetPsychicObjectArrangeTransformC");
static_assert(offsetof(BP_MapGimmickObjectBase_C_ResetPsychicObjectArrangeTransformC, ReturnValue) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_ResetPsychicObjectArrangeTransformC::ReturnValue' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.SetPsychicObjectEventC
// 0x0004 (0x0004 - 0x0000)
struct BP_MapGimmickObjectBase_C_SetPsychicObjectEventC final
{
public:
	bool                                          bStart;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bTick;                                             // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bVisibility;                                       // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ReturnValue;                                       // 0x0003(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_SetPsychicObjectEventC) == 0x000001, "Wrong alignment on BP_MapGimmickObjectBase_C_SetPsychicObjectEventC");
static_assert(sizeof(BP_MapGimmickObjectBase_C_SetPsychicObjectEventC) == 0x000004, "Wrong size on BP_MapGimmickObjectBase_C_SetPsychicObjectEventC");
static_assert(offsetof(BP_MapGimmickObjectBase_C_SetPsychicObjectEventC, bStart) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_SetPsychicObjectEventC::bStart' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_SetPsychicObjectEventC, bTick) == 0x000001, "Member 'BP_MapGimmickObjectBase_C_SetPsychicObjectEventC::bTick' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_SetPsychicObjectEventC, bVisibility) == 0x000002, "Member 'BP_MapGimmickObjectBase_C_SetPsychicObjectEventC::bVisibility' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_SetPsychicObjectEventC, ReturnValue) == 0x000003, "Member 'BP_MapGimmickObjectBase_C_SetPsychicObjectEventC::ReturnValue' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.OnMapGimmickChargeCancel
// 0x0028 (0x0028 - 0x0000)
struct BP_MapGimmickObjectBase_C_OnMapGimmickChargeCancel final
{
public:
	class AMapGimmickObject*                      GimmickActor;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_70C9[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APsychicObjectManager_C*                CallFunc_GetPsychicObjectManager_PsyObjManager;    // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_OnMapGimmickChargeCancel) == 0x000008, "Wrong alignment on BP_MapGimmickObjectBase_C_OnMapGimmickChargeCancel");
static_assert(sizeof(BP_MapGimmickObjectBase_C_OnMapGimmickChargeCancel) == 0x000028, "Wrong size on BP_MapGimmickObjectBase_C_OnMapGimmickChargeCancel");
static_assert(offsetof(BP_MapGimmickObjectBase_C_OnMapGimmickChargeCancel, GimmickActor) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_OnMapGimmickChargeCancel::GimmickActor' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_OnMapGimmickChargeCancel, ReturnValue) == 0x000008, "Member 'BP_MapGimmickObjectBase_C_OnMapGimmickChargeCancel::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_OnMapGimmickChargeCancel, CallFunc_GetPsychicObjectManager_PsyObjManager) == 0x000010, "Member 'BP_MapGimmickObjectBase_C_OnMapGimmickChargeCancel::CallFunc_GetPsychicObjectManager_PsyObjManager' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_OnMapGimmickChargeCancel, CallFunc_GetDisplayName_ReturnValue) == 0x000018, "Member 'BP_MapGimmickObjectBase_C_OnMapGimmickChargeCancel::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.OnMapGimmickChargeEnd
// 0x0030 (0x0030 - 0x0000)
struct BP_MapGimmickObjectBase_C_OnMapGimmickChargeEnd final
{
public:
	class AMapGimmickObject*                      GimmickActor;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_70CA[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_TriggerEffectManager_C*             CallFunc_GetTriggerEffectManager_BP_TriggerEffectManager; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class APsychicObjectManager_C*                CallFunc_GetPsychicObjectManager_PsyObjManager;    // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_OnMapGimmickChargeEnd) == 0x000008, "Wrong alignment on BP_MapGimmickObjectBase_C_OnMapGimmickChargeEnd");
static_assert(sizeof(BP_MapGimmickObjectBase_C_OnMapGimmickChargeEnd) == 0x000030, "Wrong size on BP_MapGimmickObjectBase_C_OnMapGimmickChargeEnd");
static_assert(offsetof(BP_MapGimmickObjectBase_C_OnMapGimmickChargeEnd, GimmickActor) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_OnMapGimmickChargeEnd::GimmickActor' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_OnMapGimmickChargeEnd, ReturnValue) == 0x000008, "Member 'BP_MapGimmickObjectBase_C_OnMapGimmickChargeEnd::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_OnMapGimmickChargeEnd, CallFunc_GetTriggerEffectManager_BP_TriggerEffectManager) == 0x000010, "Member 'BP_MapGimmickObjectBase_C_OnMapGimmickChargeEnd::CallFunc_GetTriggerEffectManager_BP_TriggerEffectManager' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_OnMapGimmickChargeEnd, CallFunc_GetDisplayName_ReturnValue) == 0x000018, "Member 'BP_MapGimmickObjectBase_C_OnMapGimmickChargeEnd::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_OnMapGimmickChargeEnd, CallFunc_GetPsychicObjectManager_PsyObjManager) == 0x000028, "Member 'BP_MapGimmickObjectBase_C_OnMapGimmickChargeEnd::CallFunc_GetPsychicObjectManager_PsyObjManager' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.OnMapGimmickChargeStart
// 0x0028 (0x0028 - 0x0000)
struct BP_MapGimmickObjectBase_C_OnMapGimmickChargeStart final
{
public:
	class AMapGimmickObject*                      GimmickActor;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_70CB[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class APsychicObjectManager_C*                CallFunc_GetPsychicObjectManager_PsyObjManager;    // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_OnMapGimmickChargeStart) == 0x000008, "Wrong alignment on BP_MapGimmickObjectBase_C_OnMapGimmickChargeStart");
static_assert(sizeof(BP_MapGimmickObjectBase_C_OnMapGimmickChargeStart) == 0x000028, "Wrong size on BP_MapGimmickObjectBase_C_OnMapGimmickChargeStart");
static_assert(offsetof(BP_MapGimmickObjectBase_C_OnMapGimmickChargeStart, GimmickActor) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_OnMapGimmickChargeStart::GimmickActor' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_OnMapGimmickChargeStart, ReturnValue) == 0x000008, "Member 'BP_MapGimmickObjectBase_C_OnMapGimmickChargeStart::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_OnMapGimmickChargeStart, CallFunc_GetDisplayName_ReturnValue) == 0x000010, "Member 'BP_MapGimmickObjectBase_C_OnMapGimmickChargeStart::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_OnMapGimmickChargeStart, CallFunc_GetPsychicObjectManager_PsyObjManager) == 0x000020, "Member 'BP_MapGimmickObjectBase_C_OnMapGimmickChargeStart::CallFunc_GetPsychicObjectManager_PsyObjManager' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.CalcLerpLookAtPosition
// 0x00A8 (0x00A8 - 0x0000)
struct BP_MapGimmickObjectBase_C_CalcLerpLookAtPosition final
{
public:
	class USceneComponent*                        NearLookAt;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        FarLookAt;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LookAtPos;                                         // 0x0010(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                FarLookAtPos;                                      // 0x001C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NearLookAtPos;                                     // 0x0028(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurDistance;                                       // 0x0034(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VLerp_ReturnValue;                        // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_70CC[0x4];                                     // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerManager*                         CallFunc_GetPlayerManager_PlayerManager;           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_70CD[0x4];                                     // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_GetPlayer_ReturnValue;                    // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0094(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSizeXY_ReturnValue;                      // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_CalcLerpLookAtPosition) == 0x000008, "Wrong alignment on BP_MapGimmickObjectBase_C_CalcLerpLookAtPosition");
static_assert(sizeof(BP_MapGimmickObjectBase_C_CalcLerpLookAtPosition) == 0x0000A8, "Wrong size on BP_MapGimmickObjectBase_C_CalcLerpLookAtPosition");
static_assert(offsetof(BP_MapGimmickObjectBase_C_CalcLerpLookAtPosition, NearLookAt) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_CalcLerpLookAtPosition::NearLookAt' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_CalcLerpLookAtPosition, FarLookAt) == 0x000008, "Member 'BP_MapGimmickObjectBase_C_CalcLerpLookAtPosition::FarLookAt' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_CalcLerpLookAtPosition, LookAtPos) == 0x000010, "Member 'BP_MapGimmickObjectBase_C_CalcLerpLookAtPosition::LookAtPos' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_CalcLerpLookAtPosition, FarLookAtPos) == 0x00001C, "Member 'BP_MapGimmickObjectBase_C_CalcLerpLookAtPosition::FarLookAtPos' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_CalcLerpLookAtPosition, NearLookAtPos) == 0x000028, "Member 'BP_MapGimmickObjectBase_C_CalcLerpLookAtPosition::NearLookAtPos' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_CalcLerpLookAtPosition, CurDistance) == 0x000034, "Member 'BP_MapGimmickObjectBase_C_CalcLerpLookAtPosition::CurDistance' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_CalcLerpLookAtPosition, CallFunc_FClamp_ReturnValue) == 0x000038, "Member 'BP_MapGimmickObjectBase_C_CalcLerpLookAtPosition::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_CalcLerpLookAtPosition, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x00003C, "Member 'BP_MapGimmickObjectBase_C_CalcLerpLookAtPosition::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_CalcLerpLookAtPosition, CallFunc_MapRangeClamped_ReturnValue) == 0x000048, "Member 'BP_MapGimmickObjectBase_C_CalcLerpLookAtPosition::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_CalcLerpLookAtPosition, CallFunc_VLerp_ReturnValue) == 0x00004C, "Member 'BP_MapGimmickObjectBase_C_CalcLerpLookAtPosition::CallFunc_VLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_CalcLerpLookAtPosition, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x000058, "Member 'BP_MapGimmickObjectBase_C_CalcLerpLookAtPosition::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_CalcLerpLookAtPosition, CallFunc_GetPlayerManager_PlayerManager) == 0x000068, "Member 'BP_MapGimmickObjectBase_C_CalcLerpLookAtPosition::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_CalcLerpLookAtPosition, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000070, "Member 'BP_MapGimmickObjectBase_C_CalcLerpLookAtPosition::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_CalcLerpLookAtPosition, CallFunc_GetPlayer_ReturnValue) == 0x000080, "Member 'BP_MapGimmickObjectBase_C_CalcLerpLookAtPosition::CallFunc_GetPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_CalcLerpLookAtPosition, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000088, "Member 'BP_MapGimmickObjectBase_C_CalcLerpLookAtPosition::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_CalcLerpLookAtPosition, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000094, "Member 'BP_MapGimmickObjectBase_C_CalcLerpLookAtPosition::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_CalcLerpLookAtPosition, CallFunc_VSizeXY_ReturnValue) == 0x0000A0, "Member 'BP_MapGimmickObjectBase_C_CalcLerpLookAtPosition::CallFunc_VSizeXY_ReturnValue' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.IsPsychicComboAttack
// 0x0001 (0x0001 - 0x0000)
struct BP_MapGimmickObjectBase_C_IsPsychicComboAttack final
{
public:
	bool                                          bComboAttack;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_IsPsychicComboAttack) == 0x000001, "Wrong alignment on BP_MapGimmickObjectBase_C_IsPsychicComboAttack");
static_assert(sizeof(BP_MapGimmickObjectBase_C_IsPsychicComboAttack) == 0x000001, "Wrong size on BP_MapGimmickObjectBase_C_IsPsychicComboAttack");
static_assert(offsetof(BP_MapGimmickObjectBase_C_IsPsychicComboAttack, bComboAttack) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_IsPsychicComboAttack::bComboAttack' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.GetUniqueObjectCaptureMontage
// 0x0018 (0x0018 - 0x0000)
struct BP_MapGimmickObjectBase_C_GetUniqueObjectCaptureMontage final
{
public:
	EPlayerID                                     PlayerId;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bBack;                                             // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bLeft;                                             // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bUseBlend;                                         // 0x0003(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_70CE[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           StartMontage;                                      // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           CancelMontage;                                     // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_GetUniqueObjectCaptureMontage) == 0x000008, "Wrong alignment on BP_MapGimmickObjectBase_C_GetUniqueObjectCaptureMontage");
static_assert(sizeof(BP_MapGimmickObjectBase_C_GetUniqueObjectCaptureMontage) == 0x000018, "Wrong size on BP_MapGimmickObjectBase_C_GetUniqueObjectCaptureMontage");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetUniqueObjectCaptureMontage, PlayerId) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_GetUniqueObjectCaptureMontage::PlayerId' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetUniqueObjectCaptureMontage, bBack) == 0x000001, "Member 'BP_MapGimmickObjectBase_C_GetUniqueObjectCaptureMontage::bBack' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetUniqueObjectCaptureMontage, bLeft) == 0x000002, "Member 'BP_MapGimmickObjectBase_C_GetUniqueObjectCaptureMontage::bLeft' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetUniqueObjectCaptureMontage, bUseBlend) == 0x000003, "Member 'BP_MapGimmickObjectBase_C_GetUniqueObjectCaptureMontage::bUseBlend' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetUniqueObjectCaptureMontage, StartMontage) == 0x000008, "Member 'BP_MapGimmickObjectBase_C_GetUniqueObjectCaptureMontage::StartMontage' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetUniqueObjectCaptureMontage, CancelMontage) == 0x000010, "Member 'BP_MapGimmickObjectBase_C_GetUniqueObjectCaptureMontage::CancelMontage' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.IsKarenUniqueObject
// 0x0001 (0x0001 - 0x0000)
struct BP_MapGimmickObjectBase_C_IsKarenUniqueObject final
{
public:
	bool                                          bKaren;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_IsKarenUniqueObject) == 0x000001, "Wrong alignment on BP_MapGimmickObjectBase_C_IsKarenUniqueObject");
static_assert(sizeof(BP_MapGimmickObjectBase_C_IsKarenUniqueObject) == 0x000001, "Wrong size on BP_MapGimmickObjectBase_C_IsKarenUniqueObject");
static_assert(offsetof(BP_MapGimmickObjectBase_C_IsKarenUniqueObject, bKaren) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_IsKarenUniqueObject::bKaren' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.GetMapGimmickType
// 0x0001 (0x0001 - 0x0000)
struct BP_MapGimmickObjectBase_C_GetMapGimmickType final
{
public:
	EMapGimmickType                               Type;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_GetMapGimmickType) == 0x000001, "Wrong alignment on BP_MapGimmickObjectBase_C_GetMapGimmickType");
static_assert(sizeof(BP_MapGimmickObjectBase_C_GetMapGimmickType) == 0x000001, "Wrong size on BP_MapGimmickObjectBase_C_GetMapGimmickType");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetMapGimmickType, Type) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_GetMapGimmickType::Type' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.GetMeshTriangleData
// 0x0020 (0x0020 - 0x0000)
struct BP_MapGimmickObjectBase_C_GetMeshTriangleData final
{
public:
	struct FMeshTriangleData                      ReturnValue;                                       // 0x0000(0x0020)(Parm, OutParm, ReturnParm)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_GetMeshTriangleData) == 0x000008, "Wrong alignment on BP_MapGimmickObjectBase_C_GetMeshTriangleData");
static_assert(sizeof(BP_MapGimmickObjectBase_C_GetMeshTriangleData) == 0x000020, "Wrong size on BP_MapGimmickObjectBase_C_GetMeshTriangleData");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetMeshTriangleData, ReturnValue) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_GetMeshTriangleData::ReturnValue' has a wrong offset!");

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.GetDataRevision
// 0x0004 (0x0004 - 0x0000)
struct BP_MapGimmickObjectBase_C_GetDataRevision final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapGimmickObjectBase_C_GetDataRevision) == 0x000004, "Wrong alignment on BP_MapGimmickObjectBase_C_GetDataRevision");
static_assert(sizeof(BP_MapGimmickObjectBase_C_GetDataRevision) == 0x000004, "Wrong size on BP_MapGimmickObjectBase_C_GetDataRevision");
static_assert(offsetof(BP_MapGimmickObjectBase_C_GetDataRevision, ReturnValue) == 0x000000, "Member 'BP_MapGimmickObjectBase_C_GetDataRevision::ReturnValue' has a wrong offset!");

}

