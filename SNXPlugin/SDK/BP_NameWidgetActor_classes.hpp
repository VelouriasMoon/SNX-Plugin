#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_NameWidgetActor

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "BattlePrototype_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_NameWidgetActor.BP_NameWidgetActor_C
// 0x0020 (0x0250 - 0x0230)
class ABP_NameWidgetActor_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0230(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetComponent*                       NameWidget;                                        // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          IsUsedNameWidget;                                  // 0x0248(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BP_NameWidgetActor(int32 EntryPoint);
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void ReceiveBeginPlay();
	void StartEventCharaName(class ABPCaptureActor_C* CaptureActor, const struct FVector& Scale, class FName SocketName, class UUserWidget* CharaNameWidget, const class FString& CharaID);
	void StartEventBossName(class FName SocketName, const class FString& bossId, const struct FVector& Scale, EBossNameMode Mode, float FreeFixedDrawSecond, class UUserWidget* BossNameWidget, class ABPCaptureActor_C* CaptureActor);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_NameWidgetActor_C">();
	}
	static class ABP_NameWidgetActor_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_NameWidgetActor_C>();
	}
};
static_assert(alignof(ABP_NameWidgetActor_C) == 0x000008, "Wrong alignment on ABP_NameWidgetActor_C");
static_assert(sizeof(ABP_NameWidgetActor_C) == 0x000250, "Wrong size on ABP_NameWidgetActor_C");
static_assert(offsetof(ABP_NameWidgetActor_C, UberGraphFrame) == 0x000230, "Member 'ABP_NameWidgetActor_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_NameWidgetActor_C, NameWidget) == 0x000238, "Member 'ABP_NameWidgetActor_C::NameWidget' has a wrong offset!");
static_assert(offsetof(ABP_NameWidgetActor_C, DefaultSceneRoot) == 0x000240, "Member 'ABP_NameWidgetActor_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_NameWidgetActor_C, IsUsedNameWidget) == 0x000248, "Member 'ABP_NameWidgetActor_C::IsUsedNameWidget' has a wrong offset!");

}

