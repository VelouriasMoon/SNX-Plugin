#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTT_ch_BattleStart

#include "Basic.hpp"

#include "BattlePrototype_structs.hpp"


namespace SDK::Params
{

// Function BTT_ch_BattleStart.BTT_ch_BattleStart_C.ExecuteUbergraph_BTT_ch_BattleStart
// 0x0078 (0x0078 - 0x0000)
struct BTT_ch_BattleStart_C_ExecuteUbergraph_BTT_ch_BattleStart final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7E2B[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_Event_OwnerController;                      // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn;                       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7E2C[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattlePlayer_C*                      K2Node_DynamicCast_AsRSBattle_Player;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E2D[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerAIInterface_C> K2Node_DynamicCast_AsBPI_Player_AIInterface;       // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerUpperActionKind                        CallFunc_GetCurrentUpperActionState_Kind;          // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NextBattleThink_Dummy;                    // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E2E[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerAIInterface_C> K2Node_DynamicCast_AsBPI_Player_AIInterface_1;     // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E2F[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerAIInterface_C> K2Node_DynamicCast_AsBPI_Player_AIInterface_2;     // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayerStatusAI_bResult;                 // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayerStatusAI_bResult_1;               // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BTT_ch_BattleStart_C_ExecuteUbergraph_BTT_ch_BattleStart) == 0x000008, "Wrong alignment on BTT_ch_BattleStart_C_ExecuteUbergraph_BTT_ch_BattleStart");
static_assert(sizeof(BTT_ch_BattleStart_C_ExecuteUbergraph_BTT_ch_BattleStart) == 0x000078, "Wrong size on BTT_ch_BattleStart_C_ExecuteUbergraph_BTT_ch_BattleStart");
static_assert(offsetof(BTT_ch_BattleStart_C_ExecuteUbergraph_BTT_ch_BattleStart, EntryPoint) == 0x000000, "Member 'BTT_ch_BattleStart_C_ExecuteUbergraph_BTT_ch_BattleStart::EntryPoint' has a wrong offset!");
static_assert(offsetof(BTT_ch_BattleStart_C_ExecuteUbergraph_BTT_ch_BattleStart, K2Node_Event_OwnerController) == 0x000008, "Member 'BTT_ch_BattleStart_C_ExecuteUbergraph_BTT_ch_BattleStart::K2Node_Event_OwnerController' has a wrong offset!");
static_assert(offsetof(BTT_ch_BattleStart_C_ExecuteUbergraph_BTT_ch_BattleStart, K2Node_Event_ControlledPawn) == 0x000010, "Member 'BTT_ch_BattleStart_C_ExecuteUbergraph_BTT_ch_BattleStart::K2Node_Event_ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTT_ch_BattleStart_C_ExecuteUbergraph_BTT_ch_BattleStart, K2Node_Event_DeltaSeconds) == 0x000018, "Member 'BTT_ch_BattleStart_C_ExecuteUbergraph_BTT_ch_BattleStart::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BTT_ch_BattleStart_C_ExecuteUbergraph_BTT_ch_BattleStart, K2Node_DynamicCast_AsRSBattle_Player) == 0x000020, "Member 'BTT_ch_BattleStart_C_ExecuteUbergraph_BTT_ch_BattleStart::K2Node_DynamicCast_AsRSBattle_Player' has a wrong offset!");
static_assert(offsetof(BTT_ch_BattleStart_C_ExecuteUbergraph_BTT_ch_BattleStart, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BTT_ch_BattleStart_C_ExecuteUbergraph_BTT_ch_BattleStart::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BTT_ch_BattleStart_C_ExecuteUbergraph_BTT_ch_BattleStart, K2Node_DynamicCast_AsBPI_Player_AIInterface) == 0x000030, "Member 'BTT_ch_BattleStart_C_ExecuteUbergraph_BTT_ch_BattleStart::K2Node_DynamicCast_AsBPI_Player_AIInterface' has a wrong offset!");
static_assert(offsetof(BTT_ch_BattleStart_C_ExecuteUbergraph_BTT_ch_BattleStart, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'BTT_ch_BattleStart_C_ExecuteUbergraph_BTT_ch_BattleStart::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BTT_ch_BattleStart_C_ExecuteUbergraph_BTT_ch_BattleStart, CallFunc_GetCurrentUpperActionState_Kind) == 0x000041, "Member 'BTT_ch_BattleStart_C_ExecuteUbergraph_BTT_ch_BattleStart::CallFunc_GetCurrentUpperActionState_Kind' has a wrong offset!");
static_assert(offsetof(BTT_ch_BattleStart_C_ExecuteUbergraph_BTT_ch_BattleStart, CallFunc_NextBattleThink_Dummy) == 0x000042, "Member 'BTT_ch_BattleStart_C_ExecuteUbergraph_BTT_ch_BattleStart::CallFunc_NextBattleThink_Dummy' has a wrong offset!");
static_assert(offsetof(BTT_ch_BattleStart_C_ExecuteUbergraph_BTT_ch_BattleStart, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000043, "Member 'BTT_ch_BattleStart_C_ExecuteUbergraph_BTT_ch_BattleStart::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_ch_BattleStart_C_ExecuteUbergraph_BTT_ch_BattleStart, K2Node_DynamicCast_AsBPI_Player_AIInterface_1) == 0x000048, "Member 'BTT_ch_BattleStart_C_ExecuteUbergraph_BTT_ch_BattleStart::K2Node_DynamicCast_AsBPI_Player_AIInterface_1' has a wrong offset!");
static_assert(offsetof(BTT_ch_BattleStart_C_ExecuteUbergraph_BTT_ch_BattleStart, K2Node_DynamicCast_bSuccess_2) == 0x000058, "Member 'BTT_ch_BattleStart_C_ExecuteUbergraph_BTT_ch_BattleStart::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BTT_ch_BattleStart_C_ExecuteUbergraph_BTT_ch_BattleStart, K2Node_DynamicCast_AsBPI_Player_AIInterface_2) == 0x000060, "Member 'BTT_ch_BattleStart_C_ExecuteUbergraph_BTT_ch_BattleStart::K2Node_DynamicCast_AsBPI_Player_AIInterface_2' has a wrong offset!");
static_assert(offsetof(BTT_ch_BattleStart_C_ExecuteUbergraph_BTT_ch_BattleStart, K2Node_DynamicCast_bSuccess_3) == 0x000070, "Member 'BTT_ch_BattleStart_C_ExecuteUbergraph_BTT_ch_BattleStart::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BTT_ch_BattleStart_C_ExecuteUbergraph_BTT_ch_BattleStart, CallFunc_IsPlayerStatusAI_bResult) == 0x000071, "Member 'BTT_ch_BattleStart_C_ExecuteUbergraph_BTT_ch_BattleStart::CallFunc_IsPlayerStatusAI_bResult' has a wrong offset!");
static_assert(offsetof(BTT_ch_BattleStart_C_ExecuteUbergraph_BTT_ch_BattleStart, CallFunc_IsPlayerStatusAI_bResult_1) == 0x000072, "Member 'BTT_ch_BattleStart_C_ExecuteUbergraph_BTT_ch_BattleStart::CallFunc_IsPlayerStatusAI_bResult_1' has a wrong offset!");

// Function BTT_ch_BattleStart.BTT_ch_BattleStart_C.ReceiveTickAI
// 0x0018 (0x0018 - 0x0000)
struct BTT_ch_BattleStart_C_ReceiveTickAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaSeconds;                                      // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_ch_BattleStart_C_ReceiveTickAI) == 0x000008, "Wrong alignment on BTT_ch_BattleStart_C_ReceiveTickAI");
static_assert(sizeof(BTT_ch_BattleStart_C_ReceiveTickAI) == 0x000018, "Wrong size on BTT_ch_BattleStart_C_ReceiveTickAI");
static_assert(offsetof(BTT_ch_BattleStart_C_ReceiveTickAI, OwnerController) == 0x000000, "Member 'BTT_ch_BattleStart_C_ReceiveTickAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTT_ch_BattleStart_C_ReceiveTickAI, ControlledPawn) == 0x000008, "Member 'BTT_ch_BattleStart_C_ReceiveTickAI::ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTT_ch_BattleStart_C_ReceiveTickAI, DeltaSeconds) == 0x000010, "Member 'BTT_ch_BattleStart_C_ReceiveTickAI::DeltaSeconds' has a wrong offset!");

}

