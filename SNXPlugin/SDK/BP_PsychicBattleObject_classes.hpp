#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PsychicBattleObject

#include "Basic.hpp"

#include "BattlePrototype_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_PsychicBattleObject.BP_PsychicBattleObject_C
// 0x0078 (0x02A8 - 0x0230)
class ABP_PsychicBattleObject_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0230(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   LocalAppendMeshEnemy;                              // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   LocalAppendMeshPlayer;                             // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 LocalSkeletalMeshEnemy;                            // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 LocalSkeletalMeshPlayer;                           // 0x0250(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0258(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<class UAnimMontage*>                   Montages0100;                                      // 0x0260(0x0010)(Edit, BlueprintVisible, Transient, DisableEditOnInstance, HasGetValueTypeHash)
	TArray<class UAnimMontage*>                   Montages0200;                                      // 0x0270(0x0010)(Edit, BlueprintVisible, Transient, DisableEditOnInstance, HasGetValueTypeHash)
	class UAnimMontage*                           NowPlayMontagePlayer;                              // 0x0280(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           NowPlayMontageEnemy;                               // 0x0288(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 ControlMeshPlayer;                                 // 0x0290(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 ControlMeshEnemy;                                  // 0x0298(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPsychicBattleAnimationPhaseType              BattleAnimationPhase;                              // 0x02A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerID                                     UserId;                                            // 0x02A1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_PsychicBattleObject(int32 EntryPoint);
	void ChangeAppendMesh(class UStaticMesh* Mesh0100, class UStaticMesh* Mesh0200);
	void SetUserID(EPlayerID UserPlayerID);
	void AppendMesh(class UStaticMesh* Mesh0100, class UStaticMesh* Mesh0200);
	void PlayPhaseAnimation(EPsychicBattleAnimationPhaseType Param_BattleAnimationPhase);
	void StopAnimation();
	void CreateMeshes(class USkeletalMesh* SkelMesh0100, class USkeletalMesh* SkelMesh0200);
	void SetMeshes(class USkeletalMeshComponent* SkelMeshComp0100, class USkeletalMeshComponent* SkelMeshComp0200);
	void SetMontages(const TArray<class UAnimMontage*>& Animation0100, const TArray<class UAnimMontage*>& Animation0200);
	void ReceiveTick(float DeltaSeconds);
	void PrivateSetMontages(TArray<class UAnimMontage*>& Animation0100, TArray<class UAnimMontage*>& Animation0200);
	void PrivatePlayPhaseAnimation(EPsychicBattleAnimationPhaseType Param_BattleAnimationPhase);
	void PrivateStopAnimation();
	void OnFinishAnimation(class UAnimMontage* PlayMontage, bool Interrupted);
	void PrivateSetMeshes(class USkeletalMeshComponent* SkelMeshComp0100, class USkeletalMeshComponent* SkelMeshComp0200);
	void PrivateCreateMeshes(class USkeletalMesh* SkelMesh0100, class USkeletalMesh* SkelMesh0200);
	void PrivatePostSetupMesh();
	void PrivateAppendMesh(class UStaticMesh* Mesh0100, class UStaticMesh* Mesh0200);
	void GetAppendMeshPlayer(class UStaticMeshComponent** MeshComp);
	void GetAppendMeshEnemy(class UStaticMeshComponent** MeshComp);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_PsychicBattleObject_C">();
	}
	static class ABP_PsychicBattleObject_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_PsychicBattleObject_C>();
	}
};
static_assert(alignof(ABP_PsychicBattleObject_C) == 0x000008, "Wrong alignment on ABP_PsychicBattleObject_C");
static_assert(sizeof(ABP_PsychicBattleObject_C) == 0x0002A8, "Wrong size on ABP_PsychicBattleObject_C");
static_assert(offsetof(ABP_PsychicBattleObject_C, UberGraphFrame) == 0x000230, "Member 'ABP_PsychicBattleObject_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_PsychicBattleObject_C, LocalAppendMeshEnemy) == 0x000238, "Member 'ABP_PsychicBattleObject_C::LocalAppendMeshEnemy' has a wrong offset!");
static_assert(offsetof(ABP_PsychicBattleObject_C, LocalAppendMeshPlayer) == 0x000240, "Member 'ABP_PsychicBattleObject_C::LocalAppendMeshPlayer' has a wrong offset!");
static_assert(offsetof(ABP_PsychicBattleObject_C, LocalSkeletalMeshEnemy) == 0x000248, "Member 'ABP_PsychicBattleObject_C::LocalSkeletalMeshEnemy' has a wrong offset!");
static_assert(offsetof(ABP_PsychicBattleObject_C, LocalSkeletalMeshPlayer) == 0x000250, "Member 'ABP_PsychicBattleObject_C::LocalSkeletalMeshPlayer' has a wrong offset!");
static_assert(offsetof(ABP_PsychicBattleObject_C, DefaultSceneRoot) == 0x000258, "Member 'ABP_PsychicBattleObject_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_PsychicBattleObject_C, Montages0100) == 0x000260, "Member 'ABP_PsychicBattleObject_C::Montages0100' has a wrong offset!");
static_assert(offsetof(ABP_PsychicBattleObject_C, Montages0200) == 0x000270, "Member 'ABP_PsychicBattleObject_C::Montages0200' has a wrong offset!");
static_assert(offsetof(ABP_PsychicBattleObject_C, NowPlayMontagePlayer) == 0x000280, "Member 'ABP_PsychicBattleObject_C::NowPlayMontagePlayer' has a wrong offset!");
static_assert(offsetof(ABP_PsychicBattleObject_C, NowPlayMontageEnemy) == 0x000288, "Member 'ABP_PsychicBattleObject_C::NowPlayMontageEnemy' has a wrong offset!");
static_assert(offsetof(ABP_PsychicBattleObject_C, ControlMeshPlayer) == 0x000290, "Member 'ABP_PsychicBattleObject_C::ControlMeshPlayer' has a wrong offset!");
static_assert(offsetof(ABP_PsychicBattleObject_C, ControlMeshEnemy) == 0x000298, "Member 'ABP_PsychicBattleObject_C::ControlMeshEnemy' has a wrong offset!");
static_assert(offsetof(ABP_PsychicBattleObject_C, BattleAnimationPhase) == 0x0002A0, "Member 'ABP_PsychicBattleObject_C::BattleAnimationPhase' has a wrong offset!");
static_assert(offsetof(ABP_PsychicBattleObject_C, UserId) == 0x0002A1, "Member 'ABP_PsychicBattleObject_C::UserId' has a wrong offset!");

}

