#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_ui_PK_psychic_gauge_2

#include "Basic.hpp"


namespace SDK::Params
{

// Function WB_ui_PK_psychic_gauge_2.WB_ui_PK_psychic_gauge_2_C.ExecuteUbergraph_WB_ui_PK_psychic_gauge_2
// 0x0014 (0x0014 - 0x0000)
struct WB_ui_PK_psychic_gauge_2_C_ExecuteUbergraph_WB_ui_PK_psychic_gauge_2 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_State;                                // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_SubState;                             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_ui_PK_psychic_gauge_2_C_ExecuteUbergraph_WB_ui_PK_psychic_gauge_2) == 0x000004, "Wrong alignment on WB_ui_PK_psychic_gauge_2_C_ExecuteUbergraph_WB_ui_PK_psychic_gauge_2");
static_assert(sizeof(WB_ui_PK_psychic_gauge_2_C_ExecuteUbergraph_WB_ui_PK_psychic_gauge_2) == 0x000014, "Wrong size on WB_ui_PK_psychic_gauge_2_C_ExecuteUbergraph_WB_ui_PK_psychic_gauge_2");
static_assert(offsetof(WB_ui_PK_psychic_gauge_2_C_ExecuteUbergraph_WB_ui_PK_psychic_gauge_2, EntryPoint) == 0x000000, "Member 'WB_ui_PK_psychic_gauge_2_C_ExecuteUbergraph_WB_ui_PK_psychic_gauge_2::EntryPoint' has a wrong offset!");
static_assert(offsetof(WB_ui_PK_psychic_gauge_2_C_ExecuteUbergraph_WB_ui_PK_psychic_gauge_2, K2Node_Event_State) == 0x000004, "Member 'WB_ui_PK_psychic_gauge_2_C_ExecuteUbergraph_WB_ui_PK_psychic_gauge_2::K2Node_Event_State' has a wrong offset!");
static_assert(offsetof(WB_ui_PK_psychic_gauge_2_C_ExecuteUbergraph_WB_ui_PK_psychic_gauge_2, K2Node_Event_SubState) == 0x000008, "Member 'WB_ui_PK_psychic_gauge_2_C_ExecuteUbergraph_WB_ui_PK_psychic_gauge_2::K2Node_Event_SubState' has a wrong offset!");
static_assert(offsetof(WB_ui_PK_psychic_gauge_2_C_ExecuteUbergraph_WB_ui_PK_psychic_gauge_2, K2Node_Event_DeltaSeconds) == 0x00000C, "Member 'WB_ui_PK_psychic_gauge_2_C_ExecuteUbergraph_WB_ui_PK_psychic_gauge_2::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(WB_ui_PK_psychic_gauge_2_C_ExecuteUbergraph_WB_ui_PK_psychic_gauge_2, K2Node_SwitchInteger_CmpSuccess) == 0x000010, "Member 'WB_ui_PK_psychic_gauge_2_C_ExecuteUbergraph_WB_ui_PK_psychic_gauge_2::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

// Function WB_ui_PK_psychic_gauge_2.WB_ui_PK_psychic_gauge_2_C.UpdateState
// 0x000C (0x000C - 0x0000)
struct WB_ui_PK_psychic_gauge_2_C_UpdateState final
{
public:
	int32                                         State;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SubState;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaSeconds;                                      // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ui_PK_psychic_gauge_2_C_UpdateState) == 0x000004, "Wrong alignment on WB_ui_PK_psychic_gauge_2_C_UpdateState");
static_assert(sizeof(WB_ui_PK_psychic_gauge_2_C_UpdateState) == 0x00000C, "Wrong size on WB_ui_PK_psychic_gauge_2_C_UpdateState");
static_assert(offsetof(WB_ui_PK_psychic_gauge_2_C_UpdateState, State) == 0x000000, "Member 'WB_ui_PK_psychic_gauge_2_C_UpdateState::State' has a wrong offset!");
static_assert(offsetof(WB_ui_PK_psychic_gauge_2_C_UpdateState, SubState) == 0x000004, "Member 'WB_ui_PK_psychic_gauge_2_C_UpdateState::SubState' has a wrong offset!");
static_assert(offsetof(WB_ui_PK_psychic_gauge_2_C_UpdateState, DeltaSeconds) == 0x000008, "Member 'WB_ui_PK_psychic_gauge_2_C_UpdateState::DeltaSeconds' has a wrong offset!");

// Function WB_ui_PK_psychic_gauge_2.WB_ui_PK_psychic_gauge_2_C.StateNone
// 0x0008 (0x0008 - 0x0000)
struct WB_ui_PK_psychic_gauge_2_C_StateNone final
{
public:
	int32                                         SubState;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_ui_PK_psychic_gauge_2_C_StateNone) == 0x000004, "Wrong alignment on WB_ui_PK_psychic_gauge_2_C_StateNone");
static_assert(sizeof(WB_ui_PK_psychic_gauge_2_C_StateNone) == 0x000008, "Wrong size on WB_ui_PK_psychic_gauge_2_C_StateNone");
static_assert(offsetof(WB_ui_PK_psychic_gauge_2_C_StateNone, SubState) == 0x000000, "Member 'WB_ui_PK_psychic_gauge_2_C_StateNone::SubState' has a wrong offset!");
static_assert(offsetof(WB_ui_PK_psychic_gauge_2_C_StateNone, K2Node_SwitchInteger_CmpSuccess) == 0x000004, "Member 'WB_ui_PK_psychic_gauge_2_C_StateNone::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

// Function WB_ui_PK_psychic_gauge_2.WB_ui_PK_psychic_gauge_2_C.StateOpen
// 0x0008 (0x0008 - 0x0000)
struct WB_ui_PK_psychic_gauge_2_C_StateOpen final
{
public:
	int32                                         SubState;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayUICurrentAnimation_isPlay;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayUICurrentAnimation_isPlay_1;        // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_ui_PK_psychic_gauge_2_C_StateOpen) == 0x000004, "Wrong alignment on WB_ui_PK_psychic_gauge_2_C_StateOpen");
static_assert(sizeof(WB_ui_PK_psychic_gauge_2_C_StateOpen) == 0x000008, "Wrong size on WB_ui_PK_psychic_gauge_2_C_StateOpen");
static_assert(offsetof(WB_ui_PK_psychic_gauge_2_C_StateOpen, SubState) == 0x000000, "Member 'WB_ui_PK_psychic_gauge_2_C_StateOpen::SubState' has a wrong offset!");
static_assert(offsetof(WB_ui_PK_psychic_gauge_2_C_StateOpen, CallFunc_IsPlayUICurrentAnimation_isPlay) == 0x000004, "Member 'WB_ui_PK_psychic_gauge_2_C_StateOpen::CallFunc_IsPlayUICurrentAnimation_isPlay' has a wrong offset!");
static_assert(offsetof(WB_ui_PK_psychic_gauge_2_C_StateOpen, K2Node_SwitchInteger_CmpSuccess) == 0x000005, "Member 'WB_ui_PK_psychic_gauge_2_C_StateOpen::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WB_ui_PK_psychic_gauge_2_C_StateOpen, CallFunc_IsPlayUICurrentAnimation_isPlay_1) == 0x000006, "Member 'WB_ui_PK_psychic_gauge_2_C_StateOpen::CallFunc_IsPlayUICurrentAnimation_isPlay_1' has a wrong offset!");

// Function WB_ui_PK_psychic_gauge_2.WB_ui_PK_psychic_gauge_2_C.StateLoop
// 0x0008 (0x0008 - 0x0000)
struct WB_ui_PK_psychic_gauge_2_C_StateLoop final
{
public:
	int32                                         SubState;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayUICurrentAnimation_isPlay;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_ui_PK_psychic_gauge_2_C_StateLoop) == 0x000004, "Wrong alignment on WB_ui_PK_psychic_gauge_2_C_StateLoop");
static_assert(sizeof(WB_ui_PK_psychic_gauge_2_C_StateLoop) == 0x000008, "Wrong size on WB_ui_PK_psychic_gauge_2_C_StateLoop");
static_assert(offsetof(WB_ui_PK_psychic_gauge_2_C_StateLoop, SubState) == 0x000000, "Member 'WB_ui_PK_psychic_gauge_2_C_StateLoop::SubState' has a wrong offset!");
static_assert(offsetof(WB_ui_PK_psychic_gauge_2_C_StateLoop, CallFunc_IsPlayUICurrentAnimation_isPlay) == 0x000004, "Member 'WB_ui_PK_psychic_gauge_2_C_StateLoop::CallFunc_IsPlayUICurrentAnimation_isPlay' has a wrong offset!");
static_assert(offsetof(WB_ui_PK_psychic_gauge_2_C_StateLoop, K2Node_SwitchInteger_CmpSuccess) == 0x000005, "Member 'WB_ui_PK_psychic_gauge_2_C_StateLoop::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

// Function WB_ui_PK_psychic_gauge_2.WB_ui_PK_psychic_gauge_2_C.StateLoopTimer
// 0x0008 (0x0008 - 0x0000)
struct WB_ui_PK_psychic_gauge_2_C_StateLoopTimer final
{
public:
	int32                                         SubState;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayUICurrentAnimation_isPlay;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_ui_PK_psychic_gauge_2_C_StateLoopTimer) == 0x000004, "Wrong alignment on WB_ui_PK_psychic_gauge_2_C_StateLoopTimer");
static_assert(sizeof(WB_ui_PK_psychic_gauge_2_C_StateLoopTimer) == 0x000008, "Wrong size on WB_ui_PK_psychic_gauge_2_C_StateLoopTimer");
static_assert(offsetof(WB_ui_PK_psychic_gauge_2_C_StateLoopTimer, SubState) == 0x000000, "Member 'WB_ui_PK_psychic_gauge_2_C_StateLoopTimer::SubState' has a wrong offset!");
static_assert(offsetof(WB_ui_PK_psychic_gauge_2_C_StateLoopTimer, CallFunc_IsPlayUICurrentAnimation_isPlay) == 0x000004, "Member 'WB_ui_PK_psychic_gauge_2_C_StateLoopTimer::CallFunc_IsPlayUICurrentAnimation_isPlay' has a wrong offset!");
static_assert(offsetof(WB_ui_PK_psychic_gauge_2_C_StateLoopTimer, K2Node_SwitchInteger_CmpSuccess) == 0x000005, "Member 'WB_ui_PK_psychic_gauge_2_C_StateLoopTimer::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

// Function WB_ui_PK_psychic_gauge_2.WB_ui_PK_psychic_gauge_2_C.SetTimerModeFlag
// 0x0001 (0x0001 - 0x0000)
struct WB_ui_PK_psychic_gauge_2_C_SetTimerModeFlag final
{
public:
	bool                                          Param_IsTimerMode;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_ui_PK_psychic_gauge_2_C_SetTimerModeFlag) == 0x000001, "Wrong alignment on WB_ui_PK_psychic_gauge_2_C_SetTimerModeFlag");
static_assert(sizeof(WB_ui_PK_psychic_gauge_2_C_SetTimerModeFlag) == 0x000001, "Wrong size on WB_ui_PK_psychic_gauge_2_C_SetTimerModeFlag");
static_assert(offsetof(WB_ui_PK_psychic_gauge_2_C_SetTimerModeFlag, Param_IsTimerMode) == 0x000000, "Member 'WB_ui_PK_psychic_gauge_2_C_SetTimerModeFlag::Param_IsTimerMode' has a wrong offset!");

// Function WB_ui_PK_psychic_gauge_2.WB_ui_PK_psychic_gauge_2_C.StateClose
// 0x0008 (0x0008 - 0x0000)
struct WB_ui_PK_psychic_gauge_2_C_StateClose final
{
public:
	int32                                         SubState;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayUICurrentAnimation_isPlay;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_ui_PK_psychic_gauge_2_C_StateClose) == 0x000004, "Wrong alignment on WB_ui_PK_psychic_gauge_2_C_StateClose");
static_assert(sizeof(WB_ui_PK_psychic_gauge_2_C_StateClose) == 0x000008, "Wrong size on WB_ui_PK_psychic_gauge_2_C_StateClose");
static_assert(offsetof(WB_ui_PK_psychic_gauge_2_C_StateClose, SubState) == 0x000000, "Member 'WB_ui_PK_psychic_gauge_2_C_StateClose::SubState' has a wrong offset!");
static_assert(offsetof(WB_ui_PK_psychic_gauge_2_C_StateClose, CallFunc_IsPlayUICurrentAnimation_isPlay) == 0x000004, "Member 'WB_ui_PK_psychic_gauge_2_C_StateClose::CallFunc_IsPlayUICurrentAnimation_isPlay' has a wrong offset!");
static_assert(offsetof(WB_ui_PK_psychic_gauge_2_C_StateClose, K2Node_SwitchInteger_CmpSuccess) == 0x000005, "Member 'WB_ui_PK_psychic_gauge_2_C_StateClose::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

// Function WB_ui_PK_psychic_gauge_2.WB_ui_PK_psychic_gauge_2_C.SetGaugeLevel
// 0x0028 (0x0028 - 0x0000)
struct WB_ui_PK_psychic_gauge_2_C_SetGaugeLevel final
{
public:
	int32                                         Level;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4135[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<float>                                 _WidthList;                                        // 0x0008(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<float>                                 K2Node_MakeArray_Array;                            // 0x0018(0x0010)(ReferenceParm, HasGetValueTypeHash)
};
static_assert(alignof(WB_ui_PK_psychic_gauge_2_C_SetGaugeLevel) == 0x000008, "Wrong alignment on WB_ui_PK_psychic_gauge_2_C_SetGaugeLevel");
static_assert(sizeof(WB_ui_PK_psychic_gauge_2_C_SetGaugeLevel) == 0x000028, "Wrong size on WB_ui_PK_psychic_gauge_2_C_SetGaugeLevel");
static_assert(offsetof(WB_ui_PK_psychic_gauge_2_C_SetGaugeLevel, Level) == 0x000000, "Member 'WB_ui_PK_psychic_gauge_2_C_SetGaugeLevel::Level' has a wrong offset!");
static_assert(offsetof(WB_ui_PK_psychic_gauge_2_C_SetGaugeLevel, _WidthList) == 0x000008, "Member 'WB_ui_PK_psychic_gauge_2_C_SetGaugeLevel::_WidthList' has a wrong offset!");
static_assert(offsetof(WB_ui_PK_psychic_gauge_2_C_SetGaugeLevel, K2Node_MakeArray_Array) == 0x000018, "Member 'WB_ui_PK_psychic_gauge_2_C_SetGaugeLevel::K2Node_MakeArray_Array' has a wrong offset!");

}

