#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_AjitoOm

#include "Basic.hpp"

#include "BattlePrototype_structs.hpp"


namespace SDK::Params
{

// Function BPI_AjitoOm.BPI_AjitoOm_C.OM_StartStateMachine
// 0x0001 (0x0001 - 0x0000)
struct BPI_AjitoOm_C_OM_StartStateMachine final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_AjitoOm_C_OM_StartStateMachine) == 0x000001, "Wrong alignment on BPI_AjitoOm_C_OM_StartStateMachine");
static_assert(sizeof(BPI_AjitoOm_C_OM_StartStateMachine) == 0x000001, "Wrong size on BPI_AjitoOm_C_OM_StartStateMachine");
static_assert(offsetof(BPI_AjitoOm_C_OM_StartStateMachine, Result) == 0x000000, "Member 'BPI_AjitoOm_C_OM_StartStateMachine::Result' has a wrong offset!");

// Function BPI_AjitoOm.BPI_AjitoOm_C.OM_Idle
// 0x0001 (0x0001 - 0x0000)
struct BPI_AjitoOm_C_OM_Idle final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_AjitoOm_C_OM_Idle) == 0x000001, "Wrong alignment on BPI_AjitoOm_C_OM_Idle");
static_assert(sizeof(BPI_AjitoOm_C_OM_Idle) == 0x000001, "Wrong size on BPI_AjitoOm_C_OM_Idle");
static_assert(offsetof(BPI_AjitoOm_C_OM_Idle, Result) == 0x000000, "Member 'BPI_AjitoOm_C_OM_Idle::Result' has a wrong offset!");

// Function BPI_AjitoOm.BPI_AjitoOm_C.OM_Talk
// 0x0001 (0x0001 - 0x0000)
struct BPI_AjitoOm_C_OM_Talk final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_AjitoOm_C_OM_Talk) == 0x000001, "Wrong alignment on BPI_AjitoOm_C_OM_Talk");
static_assert(sizeof(BPI_AjitoOm_C_OM_Talk) == 0x000001, "Wrong size on BPI_AjitoOm_C_OM_Talk");
static_assert(offsetof(BPI_AjitoOm_C_OM_Talk, Result) == 0x000000, "Member 'BPI_AjitoOm_C_OM_Talk::Result' has a wrong offset!");

// Function BPI_AjitoOm.BPI_AjitoOm_C.OM_Reset
// 0x0001 (0x0001 - 0x0000)
struct BPI_AjitoOm_C_OM_Reset final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_AjitoOm_C_OM_Reset) == 0x000001, "Wrong alignment on BPI_AjitoOm_C_OM_Reset");
static_assert(sizeof(BPI_AjitoOm_C_OM_Reset) == 0x000001, "Wrong size on BPI_AjitoOm_C_OM_Reset");
static_assert(offsetof(BPI_AjitoOm_C_OM_Reset, Result) == 0x000000, "Member 'BPI_AjitoOm_C_OM_Reset::Result' has a wrong offset!");

// Function BPI_AjitoOm.BPI_AjitoOm_C.OM_SetCostume
// 0x0008 (0x0008 - 0x0000)
struct BPI_AjitoOm_C_OM_SetCostume final
{
public:
	int32                                         CostumeId;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDummy;                                            // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_AjitoOm_C_OM_SetCostume) == 0x000004, "Wrong alignment on BPI_AjitoOm_C_OM_SetCostume");
static_assert(sizeof(BPI_AjitoOm_C_OM_SetCostume) == 0x000008, "Wrong size on BPI_AjitoOm_C_OM_SetCostume");
static_assert(offsetof(BPI_AjitoOm_C_OM_SetCostume, CostumeId) == 0x000000, "Member 'BPI_AjitoOm_C_OM_SetCostume::CostumeId' has a wrong offset!");
static_assert(offsetof(BPI_AjitoOm_C_OM_SetCostume, bDummy) == 0x000004, "Member 'BPI_AjitoOm_C_OM_SetCostume::bDummy' has a wrong offset!");

// Function BPI_AjitoOm.BPI_AjitoOm_C.OM_SetAttachment
// 0x00D4 (0x00D4 - 0x0000)
struct BPI_AjitoOm_C_OM_SetAttachment final
{
public:
	struct FPlayerInfo                            Info;                                              // 0x0000(0x00D0)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	bool                                          bDummy;                                            // 0x00D0(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_AjitoOm_C_OM_SetAttachment) == 0x000004, "Wrong alignment on BPI_AjitoOm_C_OM_SetAttachment");
static_assert(sizeof(BPI_AjitoOm_C_OM_SetAttachment) == 0x0000D4, "Wrong size on BPI_AjitoOm_C_OM_SetAttachment");
static_assert(offsetof(BPI_AjitoOm_C_OM_SetAttachment, Info) == 0x000000, "Member 'BPI_AjitoOm_C_OM_SetAttachment::Info' has a wrong offset!");
static_assert(offsetof(BPI_AjitoOm_C_OM_SetAttachment, bDummy) == 0x0000D0, "Member 'BPI_AjitoOm_C_OM_SetAttachment::bDummy' has a wrong offset!");

// Function BPI_AjitoOm.BPI_AjitoOm_C.OM_IsCopyCh0900
// 0x0001 (0x0001 - 0x0000)
struct BPI_AjitoOm_C_OM_IsCopyCh0900 final
{
public:
	bool                                          bCopy;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_AjitoOm_C_OM_IsCopyCh0900) == 0x000001, "Wrong alignment on BPI_AjitoOm_C_OM_IsCopyCh0900");
static_assert(sizeof(BPI_AjitoOm_C_OM_IsCopyCh0900) == 0x000001, "Wrong size on BPI_AjitoOm_C_OM_IsCopyCh0900");
static_assert(offsetof(BPI_AjitoOm_C_OM_IsCopyCh0900, bCopy) == 0x000000, "Member 'BPI_AjitoOm_C_OM_IsCopyCh0900::bCopy' has a wrong offset!");

}

