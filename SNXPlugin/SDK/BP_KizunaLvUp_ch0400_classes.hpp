#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_KizunaLvUp_ch0400

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_MakeEventActorChild_classes.hpp"
#include "BattlePrototype_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_KizunaLvUp_ch0400.BP_KizunaLvUp_ch0400_C
// 0x00F0 (0x0578 - 0x0488)
class ABP_KizunaLvUp_ch0400_C final : public ABP_MakeEventActorChild_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_KizunaLvUp_ch0400_C;             // 0x0488(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	bool                                          Is_SingleLvUp;                                     // 0x0490(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_67A3[0x3];                                     // 0x0491(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MaxBondsLv;                                        // 0x0494(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 MesPlayerID;                                       // 0x0498(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	int32                                         UpLevelNum;                                        // 0x04A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         WindowType;                                        // 0x04AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 KizunaUpMassage;                                   // 0x04B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class FName                                   KizunaMaxItemId;                                   // 0x04C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   TeamKizunaItemId;                                  // 0x04C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   PlayerPlacementItemId;                             // 0x04D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         UpTeamBondsLvUpNum;                                // 0x04D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UpTeamBondsLv;                                     // 0x04DC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_67A4[0x3];                                     // 0x04DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FName, class FName>                KeyItemIDList;                                     // 0x04E0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          IsKizunaLvUp;                                      // 0x0530(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_67A5[0x7];                                     // 0x0531(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 BondsLevelTag;                                     // 0x0538(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	TArray<class FString>                         AjitoIconCharas;                                   // 0x0548(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	int32                                         beforeTeamLevel;                                   // 0x0558(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_67A6[0x4];                                     // 0x055C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           GetItemList;                                       // 0x0560(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	int32                                         MessageIndex;                                      // 0x0570(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_KizunaLvUp_ch0400(int32 EntryPoint);
	void BPEventEnd();
	void StartEvent();
	void EventLoadMessage();
	void SystemMes_TeamKizunaup(class AMainEventLatentActor* Latenter);
	void CustomEvent(class AMainEventLatentActor* Latenter);
	void SystemMes_kizunaup(class AMainEventLatentActor* Latenter);
	void SearchStringID(EPlayerID CheckCharaID, class FString* ReturnString);
	void CheckWhoLevelUp(EPlayerID CheckCharaID, bool* IsLevelUp, class FString* ReturnStringID, class FString* Param_BondsLevelTag);
	void CheckMemberAlreadyUnion(EPlayerID CheckCharaID, bool* AlreadyUnion);
	void CheckTeamBondsLvUp();
	void GetTeamBondsCostume(class FName GetCostume);
	void GetIteminAllMemberLv6(bool* IsGet);
	void Update_EP5_Synopsis();
	void ActionIconUpdate();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_KizunaLvUp_ch0400_C">();
	}
	static class ABP_KizunaLvUp_ch0400_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_KizunaLvUp_ch0400_C>();
	}
};
static_assert(alignof(ABP_KizunaLvUp_ch0400_C) == 0x000008, "Wrong alignment on ABP_KizunaLvUp_ch0400_C");
static_assert(sizeof(ABP_KizunaLvUp_ch0400_C) == 0x000578, "Wrong size on ABP_KizunaLvUp_ch0400_C");
static_assert(offsetof(ABP_KizunaLvUp_ch0400_C, UberGraphFrame_BP_KizunaLvUp_ch0400_C) == 0x000488, "Member 'ABP_KizunaLvUp_ch0400_C::UberGraphFrame_BP_KizunaLvUp_ch0400_C' has a wrong offset!");
static_assert(offsetof(ABP_KizunaLvUp_ch0400_C, Is_SingleLvUp) == 0x000490, "Member 'ABP_KizunaLvUp_ch0400_C::Is_SingleLvUp' has a wrong offset!");
static_assert(offsetof(ABP_KizunaLvUp_ch0400_C, MaxBondsLv) == 0x000494, "Member 'ABP_KizunaLvUp_ch0400_C::MaxBondsLv' has a wrong offset!");
static_assert(offsetof(ABP_KizunaLvUp_ch0400_C, MesPlayerID) == 0x000498, "Member 'ABP_KizunaLvUp_ch0400_C::MesPlayerID' has a wrong offset!");
static_assert(offsetof(ABP_KizunaLvUp_ch0400_C, UpLevelNum) == 0x0004A8, "Member 'ABP_KizunaLvUp_ch0400_C::UpLevelNum' has a wrong offset!");
static_assert(offsetof(ABP_KizunaLvUp_ch0400_C, WindowType) == 0x0004AC, "Member 'ABP_KizunaLvUp_ch0400_C::WindowType' has a wrong offset!");
static_assert(offsetof(ABP_KizunaLvUp_ch0400_C, KizunaUpMassage) == 0x0004B0, "Member 'ABP_KizunaLvUp_ch0400_C::KizunaUpMassage' has a wrong offset!");
static_assert(offsetof(ABP_KizunaLvUp_ch0400_C, KizunaMaxItemId) == 0x0004C0, "Member 'ABP_KizunaLvUp_ch0400_C::KizunaMaxItemId' has a wrong offset!");
static_assert(offsetof(ABP_KizunaLvUp_ch0400_C, TeamKizunaItemId) == 0x0004C8, "Member 'ABP_KizunaLvUp_ch0400_C::TeamKizunaItemId' has a wrong offset!");
static_assert(offsetof(ABP_KizunaLvUp_ch0400_C, PlayerPlacementItemId) == 0x0004D0, "Member 'ABP_KizunaLvUp_ch0400_C::PlayerPlacementItemId' has a wrong offset!");
static_assert(offsetof(ABP_KizunaLvUp_ch0400_C, UpTeamBondsLvUpNum) == 0x0004D8, "Member 'ABP_KizunaLvUp_ch0400_C::UpTeamBondsLvUpNum' has a wrong offset!");
static_assert(offsetof(ABP_KizunaLvUp_ch0400_C, UpTeamBondsLv) == 0x0004DC, "Member 'ABP_KizunaLvUp_ch0400_C::UpTeamBondsLv' has a wrong offset!");
static_assert(offsetof(ABP_KizunaLvUp_ch0400_C, KeyItemIDList) == 0x0004E0, "Member 'ABP_KizunaLvUp_ch0400_C::KeyItemIDList' has a wrong offset!");
static_assert(offsetof(ABP_KizunaLvUp_ch0400_C, IsKizunaLvUp) == 0x000530, "Member 'ABP_KizunaLvUp_ch0400_C::IsKizunaLvUp' has a wrong offset!");
static_assert(offsetof(ABP_KizunaLvUp_ch0400_C, BondsLevelTag) == 0x000538, "Member 'ABP_KizunaLvUp_ch0400_C::BondsLevelTag' has a wrong offset!");
static_assert(offsetof(ABP_KizunaLvUp_ch0400_C, AjitoIconCharas) == 0x000548, "Member 'ABP_KizunaLvUp_ch0400_C::AjitoIconCharas' has a wrong offset!");
static_assert(offsetof(ABP_KizunaLvUp_ch0400_C, beforeTeamLevel) == 0x000558, "Member 'ABP_KizunaLvUp_ch0400_C::beforeTeamLevel' has a wrong offset!");
static_assert(offsetof(ABP_KizunaLvUp_ch0400_C, GetItemList) == 0x000560, "Member 'ABP_KizunaLvUp_ch0400_C::GetItemList' has a wrong offset!");
static_assert(offsetof(ABP_KizunaLvUp_ch0400_C, MessageIndex) == 0x000570, "Member 'ABP_KizunaLvUp_ch0400_C::MessageIndex' has a wrong offset!");

}

