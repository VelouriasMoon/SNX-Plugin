#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SM_MapModel_Base

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "BattlePrototype_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function SM_MapModel_Base.SM_MapModel_Base_C.ExecuteUbergraph_SM_MapModel_Base
// 0x0018 (0x0018 - 0x0000)
struct SM_MapModel_Base_C_ExecuteUbergraph_SM_MapModel_Base final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_1; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SM_MapModel_Base_C_ExecuteUbergraph_SM_MapModel_Base) == 0x000008, "Wrong alignment on SM_MapModel_Base_C_ExecuteUbergraph_SM_MapModel_Base");
static_assert(sizeof(SM_MapModel_Base_C_ExecuteUbergraph_SM_MapModel_Base) == 0x000018, "Wrong size on SM_MapModel_Base_C_ExecuteUbergraph_SM_MapModel_Base");
static_assert(offsetof(SM_MapModel_Base_C_ExecuteUbergraph_SM_MapModel_Base, EntryPoint) == 0x000000, "Member 'SM_MapModel_Base_C_ExecuteUbergraph_SM_MapModel_Base::EntryPoint' has a wrong offset!");
static_assert(offsetof(SM_MapModel_Base_C_ExecuteUbergraph_SM_MapModel_Base, K2Node_Event_DeltaSeconds) == 0x000004, "Member 'SM_MapModel_Base_C_ExecuteUbergraph_SM_MapModel_Base::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(SM_MapModel_Base_C_ExecuteUbergraph_SM_MapModel_Base, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000008, "Member 'SM_MapModel_Base_C_ExecuteUbergraph_SM_MapModel_Base::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(SM_MapModel_Base_C_ExecuteUbergraph_SM_MapModel_Base, CallFunc_CreateDynamicMaterialInstance_ReturnValue_1) == 0x000010, "Member 'SM_MapModel_Base_C_ExecuteUbergraph_SM_MapModel_Base::CallFunc_CreateDynamicMaterialInstance_ReturnValue_1' has a wrong offset!");

// Function SM_MapModel_Base.SM_MapModel_Base_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct SM_MapModel_Base_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SM_MapModel_Base_C_ReceiveTick) == 0x000004, "Wrong alignment on SM_MapModel_Base_C_ReceiveTick");
static_assert(sizeof(SM_MapModel_Base_C_ReceiveTick) == 0x000004, "Wrong size on SM_MapModel_Base_C_ReceiveTick");
static_assert(offsetof(SM_MapModel_Base_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'SM_MapModel_Base_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function SM_MapModel_Base.SM_MapModel_Base_C.UserConstructionScript
// 0x05C0 (0x05C0 - 0x0000)
struct SM_MapModel_Base_C_UserConstructionScript final
{
public:
	struct FVector                                ViewTargetOffset;                                  // 0x0000(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Center;                                            // 0x000C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCineCameraComponent*                   CineCamera;                                        // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Width;                                             // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Height;                                            // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Zoom;                                              // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CameraTarget;                                      // 0x002C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          Position;                                          // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FUIDetaileMapFloorData                 CallFunc_Array_Get_Item;                           // 0x004C(0x0030)(NoDestructor)
	struct FUIDetaileMapFloorData                 K2Node_MakeStruct_UIDetaileMapFloorData;           // 0x007C(0x0030)(NoDestructor)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x00AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue_1;         // 0x00B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x00C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3AEE[0x3];                                     // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x00E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AEF[0x4];                                     // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00F0(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue_1;      // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3AF0[0x3];                                     // 0x0121(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetWorldTransform_SweepHitResult;      // 0x0124(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue_2;         // 0x01AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue_2;      // 0x01CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3AF1[0x3];                                     // 0x01CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x01D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AF2[0x8];                                     // 0x01E8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x01F0(0x0030)(IsPlainOldData, NoDestructor)
	class UCineCameraComponent*                   CallFunc_AddComponent_ReturnValue;                 // 0x0220(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue_3;      // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3AF3[0x3];                                     // 0x0229(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_3;           // 0x022C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0238(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0244(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0248(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3AF4[0xC];                                     // 0x0254(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Temp_struct_Variable;                              // 0x0260(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_1;           // 0x0290(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x029C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          CallFunc_AddComponent_ReturnValue_1;               // 0x02A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_4;           // 0x02B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBox                                   CallFunc_GetBoundingBox_ReturnValue;               // 0x02BC(0x001C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FBoxSphereBounds                       CallFunc_GetBounds_ReturnValue;                    // 0x02D8(0x001C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector_X;                            // 0x02F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x02F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x02FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_5;           // 0x0300(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x030C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0310(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0314(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Divide_VectorVector_ReturnValue;          // 0x0318(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0324(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0328(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AF5[0x4];                                     // 0x032C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_2;              // 0x0330(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetWorldTransform_SweepHitResult_1;    // 0x0360(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FUIDetaileMapFloorData                 CallFunc_Array_Get_Item_1;                         // 0x03E8(0x0030)(NoDestructor)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0418(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0420(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_1;                     // 0x0424(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0428(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x042C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0430(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0434(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue_1;                      // 0x0438(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x043C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3AF6[0x3];                                     // 0x043D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_3;              // 0x0440(0x0030)(IsPlainOldData, NoDestructor)
	struct FUIMain3DViewModeSettingTableRow       CallFunc_GetDataTableRowFromName_OutRow;           // 0x0470(0x0030)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x04A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3AF7[0x3];                                     // 0x04A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetWorldTransform_SweepHitResult_2;    // 0x04A4(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetWorldTransform_SweepHitResult_3;    // 0x052C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(SM_MapModel_Base_C_UserConstructionScript) == 0x000010, "Wrong alignment on SM_MapModel_Base_C_UserConstructionScript");
static_assert(sizeof(SM_MapModel_Base_C_UserConstructionScript) == 0x0005C0, "Wrong size on SM_MapModel_Base_C_UserConstructionScript");
static_assert(offsetof(SM_MapModel_Base_C_UserConstructionScript, ViewTargetOffset) == 0x000000, "Member 'SM_MapModel_Base_C_UserConstructionScript::ViewTargetOffset' has a wrong offset!");
static_assert(offsetof(SM_MapModel_Base_C_UserConstructionScript, Center) == 0x00000C, "Member 'SM_MapModel_Base_C_UserConstructionScript::Center' has a wrong offset!");
static_assert(offsetof(SM_MapModel_Base_C_UserConstructionScript, CineCamera) == 0x000018, "Member 'SM_MapModel_Base_C_UserConstructionScript::CineCamera' has a wrong offset!");
static_assert(offsetof(SM_MapModel_Base_C_UserConstructionScript, Width) == 0x000020, "Member 'SM_MapModel_Base_C_UserConstructionScript::Width' has a wrong offset!");
static_assert(offsetof(SM_MapModel_Base_C_UserConstructionScript, Height) == 0x000024, "Member 'SM_MapModel_Base_C_UserConstructionScript::Height' has a wrong offset!");
static_assert(offsetof(SM_MapModel_Base_C_UserConstructionScript, Zoom) == 0x000028, "Member 'SM_MapModel_Base_C_UserConstructionScript::Zoom' has a wrong offset!");
static_assert(offsetof(SM_MapModel_Base_C_UserConstructionScript, CameraTarget) == 0x00002C, "Member 'SM_MapModel_Base_C_UserConstructionScript::CameraTarget' has a wrong offset!");
static_assert(offsetof(SM_MapModel_Base_C_UserConstructionScript, Position) == 0x000038, "Member 'SM_MapModel_Base_C_UserConstructionScript::Position' has a wrong offset!");
static_assert(offsetof(SM_MapModel_Base_C_UserConstructionScript, CallFunc_Add_VectorVector_ReturnValue) == 0x000040, "Member 'SM_MapModel_Base_C_UserConstructionScript::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(SM_MapModel_Base_C_UserConstructionScript, CallFunc_Array_Get_Item) == 0x00004C, "Member 'SM_MapModel_Base_C_UserConstructionScript::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(SM_MapModel_Base_C_UserConstructionScript, K2Node_MakeStruct_UIDetaileMapFloorData) == 0x00007C, "Member 'SM_MapModel_Base_C_UserConstructionScript::K2Node_MakeStruct_UIDetaileMapFloorData' has a wrong offset!");
static_assert(offsetof(SM_MapModel_Base_C_UserConstructionScript, CallFunc_FindLookAtRotation_ReturnValue) == 0x0000AC, "Member 'SM_MapModel_Base_C_UserConstructionScript::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(SM_MapModel_Base_C_UserConstructionScript, CallFunc_FindLookAtRotation_ReturnValue_1) == 0x0000B8, "Member 'SM_MapModel_Base_C_UserConstructionScript::CallFunc_FindLookAtRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SM_MapModel_Base_C_UserConstructionScript, CallFunc_GetForwardVector_ReturnValue) == 0x0000C4, "Member 'SM_MapModel_Base_C_UserConstructionScript::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(SM_MapModel_Base_C_UserConstructionScript, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x0000D0, "Member 'SM_MapModel_Base_C_UserConstructionScript::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SM_MapModel_Base_C_UserConstructionScript, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000D4, "Member 'SM_MapModel_Base_C_UserConstructionScript::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SM_MapModel_Base_C_UserConstructionScript, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0000E0, "Member 'SM_MapModel_Base_C_UserConstructionScript::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SM_MapModel_Base_C_UserConstructionScript, CallFunc_MakeTransform_ReturnValue) == 0x0000F0, "Member 'SM_MapModel_Base_C_UserConstructionScript::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(SM_MapModel_Base_C_UserConstructionScript, CallFunc_EqualEqual_FloatFloat_ReturnValue_1) == 0x000120, "Member 'SM_MapModel_Base_C_UserConstructionScript::CallFunc_EqualEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SM_MapModel_Base_C_UserConstructionScript, CallFunc_K2_SetWorldTransform_SweepHitResult) == 0x000124, "Member 'SM_MapModel_Base_C_UserConstructionScript::CallFunc_K2_SetWorldTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(SM_MapModel_Base_C_UserConstructionScript, CallFunc_FindLookAtRotation_ReturnValue_2) == 0x0001AC, "Member 'SM_MapModel_Base_C_UserConstructionScript::CallFunc_FindLookAtRotation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SM_MapModel_Base_C_UserConstructionScript, CallFunc_BreakRotator_Roll) == 0x0001B8, "Member 'SM_MapModel_Base_C_UserConstructionScript::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(SM_MapModel_Base_C_UserConstructionScript, CallFunc_BreakRotator_Pitch) == 0x0001BC, "Member 'SM_MapModel_Base_C_UserConstructionScript::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(SM_MapModel_Base_C_UserConstructionScript, CallFunc_BreakRotator_Yaw) == 0x0001C0, "Member 'SM_MapModel_Base_C_UserConstructionScript::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(SM_MapModel_Base_C_UserConstructionScript, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0001C4, "Member 'SM_MapModel_Base_C_UserConstructionScript::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SM_MapModel_Base_C_UserConstructionScript, CallFunc_Abs_ReturnValue) == 0x0001C8, "Member 'SM_MapModel_Base_C_UserConstructionScript::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(SM_MapModel_Base_C_UserConstructionScript, CallFunc_EqualEqual_FloatFloat_ReturnValue_2) == 0x0001CC, "Member 'SM_MapModel_Base_C_UserConstructionScript::CallFunc_EqualEqual_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SM_MapModel_Base_C_UserConstructionScript, CallFunc_Array_Length_ReturnValue) == 0x0001D0, "Member 'SM_MapModel_Base_C_UserConstructionScript::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(SM_MapModel_Base_C_UserConstructionScript, CallFunc_Subtract_IntInt_ReturnValue) == 0x0001D4, "Member 'SM_MapModel_Base_C_UserConstructionScript::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SM_MapModel_Base_C_UserConstructionScript, CallFunc_Add_VectorVector_ReturnValue_2) == 0x0001D8, "Member 'SM_MapModel_Base_C_UserConstructionScript::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SM_MapModel_Base_C_UserConstructionScript, CallFunc_Clamp_ReturnValue) == 0x0001E4, "Member 'SM_MapModel_Base_C_UserConstructionScript::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(SM_MapModel_Base_C_UserConstructionScript, CallFunc_MakeTransform_ReturnValue_1) == 0x0001F0, "Member 'SM_MapModel_Base_C_UserConstructionScript::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SM_MapModel_Base_C_UserConstructionScript, CallFunc_AddComponent_ReturnValue) == 0x000220, "Member 'SM_MapModel_Base_C_UserConstructionScript::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(SM_MapModel_Base_C_UserConstructionScript, CallFunc_EqualEqual_FloatFloat_ReturnValue_3) == 0x000228, "Member 'SM_MapModel_Base_C_UserConstructionScript::CallFunc_EqualEqual_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(SM_MapModel_Base_C_UserConstructionScript, CallFunc_Add_VectorVector_ReturnValue_3) == 0x00022C, "Member 'SM_MapModel_Base_C_UserConstructionScript::CallFunc_Add_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(SM_MapModel_Base_C_UserConstructionScript, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000238, "Member 'SM_MapModel_Base_C_UserConstructionScript::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(SM_MapModel_Base_C_UserConstructionScript, CallFunc_VSize_ReturnValue) == 0x000244, "Member 'SM_MapModel_Base_C_UserConstructionScript::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(SM_MapModel_Base_C_UserConstructionScript, CallFunc_MakeRotator_ReturnValue) == 0x000248, "Member 'SM_MapModel_Base_C_UserConstructionScript::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(SM_MapModel_Base_C_UserConstructionScript, Temp_struct_Variable) == 0x000260, "Member 'SM_MapModel_Base_C_UserConstructionScript::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(SM_MapModel_Base_C_UserConstructionScript, CallFunc_GetForwardVector_ReturnValue_1) == 0x000290, "Member 'SM_MapModel_Base_C_UserConstructionScript::CallFunc_GetForwardVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SM_MapModel_Base_C_UserConstructionScript, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x00029C, "Member 'SM_MapModel_Base_C_UserConstructionScript::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SM_MapModel_Base_C_UserConstructionScript, CallFunc_AddComponent_ReturnValue_1) == 0x0002A8, "Member 'SM_MapModel_Base_C_UserConstructionScript::CallFunc_AddComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SM_MapModel_Base_C_UserConstructionScript, CallFunc_Add_VectorVector_ReturnValue_4) == 0x0002B0, "Member 'SM_MapModel_Base_C_UserConstructionScript::CallFunc_Add_VectorVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(SM_MapModel_Base_C_UserConstructionScript, CallFunc_GetBoundingBox_ReturnValue) == 0x0002BC, "Member 'SM_MapModel_Base_C_UserConstructionScript::CallFunc_GetBoundingBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(SM_MapModel_Base_C_UserConstructionScript, CallFunc_GetBounds_ReturnValue) == 0x0002D8, "Member 'SM_MapModel_Base_C_UserConstructionScript::CallFunc_GetBounds_ReturnValue' has a wrong offset!");
static_assert(offsetof(SM_MapModel_Base_C_UserConstructionScript, CallFunc_BreakVector_X) == 0x0002F4, "Member 'SM_MapModel_Base_C_UserConstructionScript::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(SM_MapModel_Base_C_UserConstructionScript, CallFunc_BreakVector_Y) == 0x0002F8, "Member 'SM_MapModel_Base_C_UserConstructionScript::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(SM_MapModel_Base_C_UserConstructionScript, CallFunc_BreakVector_Z) == 0x0002FC, "Member 'SM_MapModel_Base_C_UserConstructionScript::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(SM_MapModel_Base_C_UserConstructionScript, CallFunc_Add_VectorVector_ReturnValue_5) == 0x000300, "Member 'SM_MapModel_Base_C_UserConstructionScript::CallFunc_Add_VectorVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(SM_MapModel_Base_C_UserConstructionScript, CallFunc_BreakVector_X_1) == 0x00030C, "Member 'SM_MapModel_Base_C_UserConstructionScript::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(SM_MapModel_Base_C_UserConstructionScript, CallFunc_BreakVector_Y_1) == 0x000310, "Member 'SM_MapModel_Base_C_UserConstructionScript::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(SM_MapModel_Base_C_UserConstructionScript, CallFunc_BreakVector_Z_1) == 0x000314, "Member 'SM_MapModel_Base_C_UserConstructionScript::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(SM_MapModel_Base_C_UserConstructionScript, CallFunc_Divide_VectorVector_ReturnValue) == 0x000318, "Member 'SM_MapModel_Base_C_UserConstructionScript::CallFunc_Divide_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(SM_MapModel_Base_C_UserConstructionScript, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000324, "Member 'SM_MapModel_Base_C_UserConstructionScript::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SM_MapModel_Base_C_UserConstructionScript, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000328, "Member 'SM_MapModel_Base_C_UserConstructionScript::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SM_MapModel_Base_C_UserConstructionScript, CallFunc_MakeTransform_ReturnValue_2) == 0x000330, "Member 'SM_MapModel_Base_C_UserConstructionScript::CallFunc_MakeTransform_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SM_MapModel_Base_C_UserConstructionScript, CallFunc_K2_SetWorldTransform_SweepHitResult_1) == 0x000360, "Member 'SM_MapModel_Base_C_UserConstructionScript::CallFunc_K2_SetWorldTransform_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(SM_MapModel_Base_C_UserConstructionScript, CallFunc_Array_Get_Item_1) == 0x0003E8, "Member 'SM_MapModel_Base_C_UserConstructionScript::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(SM_MapModel_Base_C_UserConstructionScript, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000418, "Member 'SM_MapModel_Base_C_UserConstructionScript::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(SM_MapModel_Base_C_UserConstructionScript, CallFunc_FClamp_ReturnValue) == 0x000420, "Member 'SM_MapModel_Base_C_UserConstructionScript::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(SM_MapModel_Base_C_UserConstructionScript, CallFunc_FClamp_ReturnValue_1) == 0x000424, "Member 'SM_MapModel_Base_C_UserConstructionScript::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SM_MapModel_Base_C_UserConstructionScript, CallFunc_Array_Length_ReturnValue_1) == 0x000428, "Member 'SM_MapModel_Base_C_UserConstructionScript::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SM_MapModel_Base_C_UserConstructionScript, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00042C, "Member 'SM_MapModel_Base_C_UserConstructionScript::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SM_MapModel_Base_C_UserConstructionScript, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000430, "Member 'SM_MapModel_Base_C_UserConstructionScript::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SM_MapModel_Base_C_UserConstructionScript, CallFunc_Add_FloatFloat_ReturnValue) == 0x000434, "Member 'SM_MapModel_Base_C_UserConstructionScript::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SM_MapModel_Base_C_UserConstructionScript, CallFunc_Clamp_ReturnValue_1) == 0x000438, "Member 'SM_MapModel_Base_C_UserConstructionScript::CallFunc_Clamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SM_MapModel_Base_C_UserConstructionScript, CallFunc_NotEqual_IntInt_ReturnValue) == 0x00043C, "Member 'SM_MapModel_Base_C_UserConstructionScript::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SM_MapModel_Base_C_UserConstructionScript, CallFunc_MakeTransform_ReturnValue_3) == 0x000440, "Member 'SM_MapModel_Base_C_UserConstructionScript::CallFunc_MakeTransform_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(SM_MapModel_Base_C_UserConstructionScript, CallFunc_GetDataTableRowFromName_OutRow) == 0x000470, "Member 'SM_MapModel_Base_C_UserConstructionScript::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(SM_MapModel_Base_C_UserConstructionScript, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0004A0, "Member 'SM_MapModel_Base_C_UserConstructionScript::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(SM_MapModel_Base_C_UserConstructionScript, CallFunc_K2_SetWorldTransform_SweepHitResult_2) == 0x0004A4, "Member 'SM_MapModel_Base_C_UserConstructionScript::CallFunc_K2_SetWorldTransform_SweepHitResult_2' has a wrong offset!");
static_assert(offsetof(SM_MapModel_Base_C_UserConstructionScript, CallFunc_K2_SetWorldTransform_SweepHitResult_3) == 0x00052C, "Member 'SM_MapModel_Base_C_UserConstructionScript::CallFunc_K2_SetWorldTransform_SweepHitResult_3' has a wrong offset!");

// Function SM_MapModel_Base.SM_MapModel_Base_C.GetChiledComponent
// 0x0070 (0x0070 - 0x0000)
struct SM_MapModel_Base_C_GetChiledComponent final
{
public:
	int32                                         BeforeArea;                                        // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         BeforeLC;                                          // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3AF8[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3AF9[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AFA[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class USceneComponent*>                CallFunc_GetChildrenComponents_Children;           // 0x0030(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	class UStaticMeshComponent*                   K2Node_DynamicCast_AsStatic_Mesh_Component;        // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3AFB[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3AFC[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCapsuleComponent*                      K2Node_DynamicCast_AsCapsule_Collision;            // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3AFD[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SM_MapModel_Base_C_GetChiledComponent) == 0x000008, "Wrong alignment on SM_MapModel_Base_C_GetChiledComponent");
static_assert(sizeof(SM_MapModel_Base_C_GetChiledComponent) == 0x000070, "Wrong size on SM_MapModel_Base_C_GetChiledComponent");
static_assert(offsetof(SM_MapModel_Base_C_GetChiledComponent, BeforeArea) == 0x000000, "Member 'SM_MapModel_Base_C_GetChiledComponent::BeforeArea' has a wrong offset!");
static_assert(offsetof(SM_MapModel_Base_C_GetChiledComponent, BeforeLC) == 0x000004, "Member 'SM_MapModel_Base_C_GetChiledComponent::BeforeLC' has a wrong offset!");
static_assert(offsetof(SM_MapModel_Base_C_GetChiledComponent, Temp_bool_True_if_break_was_hit_Variable) == 0x000008, "Member 'SM_MapModel_Base_C_GetChiledComponent::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(SM_MapModel_Base_C_GetChiledComponent, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'SM_MapModel_Base_C_GetChiledComponent::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(SM_MapModel_Base_C_GetChiledComponent, CallFunc_Not_PreBool_ReturnValue) == 0x000010, "Member 'SM_MapModel_Base_C_GetChiledComponent::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(SM_MapModel_Base_C_GetChiledComponent, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'SM_MapModel_Base_C_GetChiledComponent::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(SM_MapModel_Base_C_GetChiledComponent, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'SM_MapModel_Base_C_GetChiledComponent::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SM_MapModel_Base_C_GetChiledComponent, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000020, "Member 'SM_MapModel_Base_C_GetChiledComponent::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(SM_MapModel_Base_C_GetChiledComponent, CallFunc_Array_Get_Item) == 0x000028, "Member 'SM_MapModel_Base_C_GetChiledComponent::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(SM_MapModel_Base_C_GetChiledComponent, CallFunc_GetChildrenComponents_Children) == 0x000030, "Member 'SM_MapModel_Base_C_GetChiledComponent::CallFunc_GetChildrenComponents_Children' has a wrong offset!");
static_assert(offsetof(SM_MapModel_Base_C_GetChiledComponent, K2Node_DynamicCast_AsStatic_Mesh_Component) == 0x000040, "Member 'SM_MapModel_Base_C_GetChiledComponent::K2Node_DynamicCast_AsStatic_Mesh_Component' has a wrong offset!");
static_assert(offsetof(SM_MapModel_Base_C_GetChiledComponent, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'SM_MapModel_Base_C_GetChiledComponent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(SM_MapModel_Base_C_GetChiledComponent, CallFunc_Array_Add_ReturnValue) == 0x00004C, "Member 'SM_MapModel_Base_C_GetChiledComponent::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(SM_MapModel_Base_C_GetChiledComponent, CallFunc_IsValid_ReturnValue) == 0x000050, "Member 'SM_MapModel_Base_C_GetChiledComponent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(SM_MapModel_Base_C_GetChiledComponent, K2Node_DynamicCast_AsCapsule_Collision) == 0x000058, "Member 'SM_MapModel_Base_C_GetChiledComponent::K2Node_DynamicCast_AsCapsule_Collision' has a wrong offset!");
static_assert(offsetof(SM_MapModel_Base_C_GetChiledComponent, K2Node_DynamicCast_bSuccess_1) == 0x000060, "Member 'SM_MapModel_Base_C_GetChiledComponent::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(SM_MapModel_Base_C_GetChiledComponent, CallFunc_Array_Length_ReturnValue) == 0x000064, "Member 'SM_MapModel_Base_C_GetChiledComponent::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(SM_MapModel_Base_C_GetChiledComponent, CallFunc_Less_IntInt_ReturnValue) == 0x000068, "Member 'SM_MapModel_Base_C_GetChiledComponent::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SM_MapModel_Base_C_GetChiledComponent, CallFunc_BooleanAND_ReturnValue) == 0x000069, "Member 'SM_MapModel_Base_C_GetChiledComponent::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function SM_MapModel_Base.SM_MapModel_Base_C.GetCollisitonData
// 0x0010 (0x0010 - 0x0000)
struct SM_MapModel_Base_C_GetCollisitonData final
{
public:
	class UCapsuleComponent*                      ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCapsuleComponent*                      CallFunc_GetCollisitonData_ReturnValue;            // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SM_MapModel_Base_C_GetCollisitonData) == 0x000008, "Wrong alignment on SM_MapModel_Base_C_GetCollisitonData");
static_assert(sizeof(SM_MapModel_Base_C_GetCollisitonData) == 0x000010, "Wrong size on SM_MapModel_Base_C_GetCollisitonData");
static_assert(offsetof(SM_MapModel_Base_C_GetCollisitonData, ReturnValue) == 0x000000, "Member 'SM_MapModel_Base_C_GetCollisitonData::ReturnValue' has a wrong offset!");
static_assert(offsetof(SM_MapModel_Base_C_GetCollisitonData, CallFunc_GetCollisitonData_ReturnValue) == 0x000008, "Member 'SM_MapModel_Base_C_GetCollisitonData::CallFunc_GetCollisitonData_ReturnValue' has a wrong offset!");

// Function SM_MapModel_Base.SM_MapModel_Base_C.GetDirectionRotate
// 0x0004 (0x0004 - 0x0000)
struct SM_MapModel_Base_C_GetDirectionRotate final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SM_MapModel_Base_C_GetDirectionRotate) == 0x000004, "Wrong alignment on SM_MapModel_Base_C_GetDirectionRotate");
static_assert(sizeof(SM_MapModel_Base_C_GetDirectionRotate) == 0x000004, "Wrong size on SM_MapModel_Base_C_GetDirectionRotate");
static_assert(offsetof(SM_MapModel_Base_C_GetDirectionRotate, ReturnValue) == 0x000000, "Member 'SM_MapModel_Base_C_GetDirectionRotate::ReturnValue' has a wrong offset!");

// Function SM_MapModel_Base.SM_MapModel_Base_C.SetFloorIndex
// 0x0008 (0x0008 - 0x0000)
struct SM_MapModel_Base_C_SetFloorIndex final
{
public:
	int32                                         Param_Floorindex;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetFloorIndex_ReturnValue;                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SM_MapModel_Base_C_SetFloorIndex) == 0x000004, "Wrong alignment on SM_MapModel_Base_C_SetFloorIndex");
static_assert(sizeof(SM_MapModel_Base_C_SetFloorIndex) == 0x000008, "Wrong size on SM_MapModel_Base_C_SetFloorIndex");
static_assert(offsetof(SM_MapModel_Base_C_SetFloorIndex, Param_Floorindex) == 0x000000, "Member 'SM_MapModel_Base_C_SetFloorIndex::Param_Floorindex' has a wrong offset!");
static_assert(offsetof(SM_MapModel_Base_C_SetFloorIndex, ReturnValue) == 0x000004, "Member 'SM_MapModel_Base_C_SetFloorIndex::ReturnValue' has a wrong offset!");
static_assert(offsetof(SM_MapModel_Base_C_SetFloorIndex, CallFunc_SetFloorIndex_ReturnValue) == 0x000005, "Member 'SM_MapModel_Base_C_SetFloorIndex::CallFunc_SetFloorIndex_ReturnValue' has a wrong offset!");

// Function SM_MapModel_Base.SM_MapModel_Base_C.MaterialUpdate
// 0x003C (0x003C - 0x0000)
struct SM_MapModel_Base_C_MaterialUpdate final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3AFE[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUIDetaileMapFloorData                 CallFunc_Array_Get_Item;                           // 0x0004(0x0030)(NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_MaterialUpdate_ReturnValue;               // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SM_MapModel_Base_C_MaterialUpdate) == 0x000004, "Wrong alignment on SM_MapModel_Base_C_MaterialUpdate");
static_assert(sizeof(SM_MapModel_Base_C_MaterialUpdate) == 0x00003C, "Wrong size on SM_MapModel_Base_C_MaterialUpdate");
static_assert(offsetof(SM_MapModel_Base_C_MaterialUpdate, ReturnValue) == 0x000000, "Member 'SM_MapModel_Base_C_MaterialUpdate::ReturnValue' has a wrong offset!");
static_assert(offsetof(SM_MapModel_Base_C_MaterialUpdate, CallFunc_Array_Get_Item) == 0x000004, "Member 'SM_MapModel_Base_C_MaterialUpdate::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(SM_MapModel_Base_C_MaterialUpdate, CallFunc_Array_Length_ReturnValue) == 0x000034, "Member 'SM_MapModel_Base_C_MaterialUpdate::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(SM_MapModel_Base_C_MaterialUpdate, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000038, "Member 'SM_MapModel_Base_C_MaterialUpdate::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SM_MapModel_Base_C_MaterialUpdate, CallFunc_MaterialUpdate_ReturnValue) == 0x000039, "Member 'SM_MapModel_Base_C_MaterialUpdate::CallFunc_MaterialUpdate_ReturnValue' has a wrong offset!");

// Function SM_MapModel_Base.SM_MapModel_Base_C.GetFloorData
// 0x0010 (0x0010 - 0x0000)
struct SM_MapModel_Base_C_GetFloorData final
{
public:
	TArray<struct FUIDetaileMapFloorData>         ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(SM_MapModel_Base_C_GetFloorData) == 0x000008, "Wrong alignment on SM_MapModel_Base_C_GetFloorData");
static_assert(sizeof(SM_MapModel_Base_C_GetFloorData) == 0x000010, "Wrong size on SM_MapModel_Base_C_GetFloorData");
static_assert(offsetof(SM_MapModel_Base_C_GetFloorData, ReturnValue) == 0x000000, "Member 'SM_MapModel_Base_C_GetFloorData::ReturnValue' has a wrong offset!");

// Function SM_MapModel_Base.SM_MapModel_Base_C.GetZoomMax
// 0x0004 (0x0004 - 0x0000)
struct SM_MapModel_Base_C_GetZoomMax final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SM_MapModel_Base_C_GetZoomMax) == 0x000004, "Wrong alignment on SM_MapModel_Base_C_GetZoomMax");
static_assert(sizeof(SM_MapModel_Base_C_GetZoomMax) == 0x000004, "Wrong size on SM_MapModel_Base_C_GetZoomMax");
static_assert(offsetof(SM_MapModel_Base_C_GetZoomMax, ReturnValue) == 0x000000, "Member 'SM_MapModel_Base_C_GetZoomMax::ReturnValue' has a wrong offset!");

// Function SM_MapModel_Base.SM_MapModel_Base_C.GetZoomMin
// 0x0004 (0x0004 - 0x0000)
struct SM_MapModel_Base_C_GetZoomMin final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SM_MapModel_Base_C_GetZoomMin) == 0x000004, "Wrong alignment on SM_MapModel_Base_C_GetZoomMin");
static_assert(sizeof(SM_MapModel_Base_C_GetZoomMin) == 0x000004, "Wrong size on SM_MapModel_Base_C_GetZoomMin");
static_assert(offsetof(SM_MapModel_Base_C_GetZoomMin, ReturnValue) == 0x000000, "Member 'SM_MapModel_Base_C_GetZoomMin::ReturnValue' has a wrong offset!");

}

