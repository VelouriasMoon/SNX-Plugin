#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPFL_EnvironmentUtility

#include "Basic.hpp"

#include "BPFL_EnvironmentUtility_classes.hpp"
#include "BPFL_EnvironmentUtility_parameters.hpp"


namespace SDK
{

// Function BPFL_EnvironmentUtility.BPFL_EnvironmentUtility_C.CalcSplineBound
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class USplineMeshComponent*>     Splines                                                (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
// ESplineMeshAxis                         ForwardAxis                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         BaseRotator                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    OneStaticMesh                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          BoxCenter                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          BoxExtent                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          BoxMin                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          BoxMax                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPFL_EnvironmentUtility_C::CalcSplineBound(TArray<class USplineMeshComponent*>& Splines, ESplineMeshAxis ForwardAxis, const struct FRotator& BaseRotator, bool OneStaticMesh, class UObject* __WorldContext, struct FVector* BoxCenter, struct FVector* BoxExtent, struct FVector* BoxMin, struct FVector* BoxMax)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_EnvironmentUtility_C", "CalcSplineBound");

	Params::BPFL_EnvironmentUtility_C_CalcSplineBound Parms{};

	Parms.Splines = std::move(Splines);
	Parms.ForwardAxis = ForwardAxis;
	Parms.BaseRotator = std::move(BaseRotator);
	Parms.OneStaticMesh = OneStaticMesh;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Splines = std::move(Parms.Splines);

	if (BoxCenter != nullptr)
		*BoxCenter = std::move(Parms.BoxCenter);

	if (BoxExtent != nullptr)
		*BoxExtent = std::move(Parms.BoxExtent);

	if (BoxMin != nullptr)
		*BoxMin = std::move(Parms.BoxMin);

	if (BoxMax != nullptr)
		*BoxMax = std::move(Parms.BoxMax);
}


// Function BPFL_EnvironmentUtility.BPFL_EnvironmentUtility_C.GetWorldBound
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          LocalBoundMin                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          LocalBoundMax                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FTransform                       WorldTransform                                         (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          BoundMin                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          BoundMax                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPFL_EnvironmentUtility_C::GetWorldBound(const struct FVector& LocalBoundMin, const struct FVector& LocalBoundMax, const struct FTransform& WorldTransform, class UObject* __WorldContext, struct FVector* BoundMin, struct FVector* BoundMax)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_EnvironmentUtility_C", "GetWorldBound");

	Params::BPFL_EnvironmentUtility_C_GetWorldBound Parms{};

	Parms.LocalBoundMin = std::move(LocalBoundMin);
	Parms.LocalBoundMax = std::move(LocalBoundMax);
	Parms.WorldTransform = std::move(WorldTransform);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (BoundMin != nullptr)
		*BoundMin = std::move(Parms.BoundMin);

	if (BoundMax != nullptr)
		*BoundMax = std::move(Parms.BoundMax);
}


// Function BPFL_EnvironmentUtility.BPFL_EnvironmentUtility_C.AddStaticMeshBound
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UStaticMeshComponent*             StaticMesh                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          BaseBoundMin                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          BaseBoundMax                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          BoundMin                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          BoundMax                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPFL_EnvironmentUtility_C::AddStaticMeshBound(class UStaticMeshComponent* StaticMesh, const struct FVector& BaseBoundMin, const struct FVector& BaseBoundMax, class UObject* __WorldContext, struct FVector* BoundMin, struct FVector* BoundMax)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_EnvironmentUtility_C", "AddStaticMeshBound");

	Params::BPFL_EnvironmentUtility_C_AddStaticMeshBound Parms{};

	Parms.StaticMesh = StaticMesh;
	Parms.BaseBoundMin = std::move(BaseBoundMin);
	Parms.BaseBoundMax = std::move(BaseBoundMax);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (BoundMin != nullptr)
		*BoundMin = std::move(Parms.BoundMin);

	if (BoundMax != nullptr)
		*BoundMax = std::move(Parms.BoundMax);
}


// Function BPFL_EnvironmentUtility.BPFL_EnvironmentUtility_C.AddInstancedStaticMeshBound
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UInstancedStaticMeshComponent*    InstancedStaticMesh                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          BaseBoundMin                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          BaseBoundMax                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          BoundMin                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          BoundMax                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPFL_EnvironmentUtility_C::AddInstancedStaticMeshBound(class UInstancedStaticMeshComponent* InstancedStaticMesh, const struct FVector& BaseBoundMin, const struct FVector& BaseBoundMax, class UObject* __WorldContext, struct FVector* BoundMin, struct FVector* BoundMax)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_EnvironmentUtility_C", "AddInstancedStaticMeshBound");

	Params::BPFL_EnvironmentUtility_C_AddInstancedStaticMeshBound Parms{};

	Parms.InstancedStaticMesh = InstancedStaticMesh;
	Parms.BaseBoundMin = std::move(BaseBoundMin);
	Parms.BaseBoundMax = std::move(BaseBoundMax);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (BoundMin != nullptr)
		*BoundMin = std::move(Parms.BoundMin);

	if (BoundMax != nullptr)
		*BoundMax = std::move(Parms.BoundMax);
}


// Function BPFL_EnvironmentUtility.BPFL_EnvironmentUtility_C.GetTargetSplineComponent
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USplineComponent*                 BaseSpline                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ABP_SplineBase_C*                 ParentActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USplineComponent*                 TargetComponent                                        (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    UseParentSpline                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBPFL_EnvironmentUtility_C::GetTargetSplineComponent(class USplineComponent* BaseSpline, class ABP_SplineBase_C* ParentActor, class UObject* __WorldContext, class USplineComponent** TargetComponent, bool* UseParentSpline)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_EnvironmentUtility_C", "GetTargetSplineComponent");

	Params::BPFL_EnvironmentUtility_C_GetTargetSplineComponent Parms{};

	Parms.BaseSpline = BaseSpline;
	Parms.ParentActor = ParentActor;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (TargetComponent != nullptr)
		*TargetComponent = Parms.TargetComponent;

	if (UseParentSpline != nullptr)
		*UseParentSpline = Parms.UseParentSpline;
}


// Function BPFL_EnvironmentUtility.BPFL_EnvironmentUtility_C.SetupSplineMaterial
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              Primitive                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class UMaterialInterface*>       Materials                                              (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPFL_EnvironmentUtility_C::SetupSplineMaterial(class UPrimitiveComponent* Primitive, TArray<class UMaterialInterface*>& Materials, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_EnvironmentUtility_C", "SetupSplineMaterial");

	Params::BPFL_EnvironmentUtility_C_SetupSplineMaterial Parms{};

	Parms.Primitive = Primitive;
	Parms.Materials = std::move(Materials);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Materials = std::move(Parms.Materials);
}


// Function BPFL_EnvironmentUtility.BPFL_EnvironmentUtility_C.CalcStaticMeshBound
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UStaticMeshComponent*>     StaticMeshes                                           (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          BoxCenter                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          BoxExtent                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          BoxMin                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          BoxMax                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPFL_EnvironmentUtility_C::CalcStaticMeshBound(TArray<class UStaticMeshComponent*>& StaticMeshes, class UObject* __WorldContext, struct FVector* BoxCenter, struct FVector* BoxExtent, struct FVector* BoxMin, struct FVector* BoxMax)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_EnvironmentUtility_C", "CalcStaticMeshBound");

	Params::BPFL_EnvironmentUtility_C_CalcStaticMeshBound Parms{};

	Parms.StaticMeshes = std::move(StaticMeshes);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	StaticMeshes = std::move(Parms.StaticMeshes);

	if (BoxCenter != nullptr)
		*BoxCenter = std::move(Parms.BoxCenter);

	if (BoxExtent != nullptr)
		*BoxExtent = std::move(Parms.BoxExtent);

	if (BoxMin != nullptr)
		*BoxMin = std::move(Parms.BoxMin);

	if (BoxMax != nullptr)
		*BoxMax = std::move(Parms.BoxMax);
}


// Function BPFL_EnvironmentUtility.BPFL_EnvironmentUtility_C.DirtyParentSplineActors
// (Static, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           SelfActor                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPFL_EnvironmentUtility_C::DirtyParentSplineActors(class AActor* SelfActor, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_EnvironmentUtility_C", "DirtyParentSplineActors");

	Params::BPFL_EnvironmentUtility_C_DirtyParentSplineActors Parms{};

	Parms.SelfActor = SelfActor;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BPFL_EnvironmentUtility.BPFL_EnvironmentUtility_C.GetEventCutsceneTransform
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// ECutsceneRootTransformID                CutsceneTransformID                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             ExtraName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FTransform                       Transform                                              (Parm, OutParm, IsPlainOldData, NoDestructor)

void UBPFL_EnvironmentUtility_C::GetEventCutsceneTransform(ECutsceneRootTransformID CutsceneTransformID, class FName ExtraName, class UObject* __WorldContext, struct FTransform* Transform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_EnvironmentUtility_C", "GetEventCutsceneTransform");

	Params::BPFL_EnvironmentUtility_C_GetEventCutsceneTransform Parms{};

	Parms.CutsceneTransformID = CutsceneTransformID;
	Parms.ExtraName = ExtraName;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Transform != nullptr)
		*Transform = std::move(Parms.Transform);
}


// Function BPFL_EnvironmentUtility.BPFL_EnvironmentUtility_C.GetTargetAnySplineComponent
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USplineComponent*                 BaseSpline                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ABP_SplineBase_C*                 ParentActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USplineComponent*                 TargetComponent                                        (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    UseParentSpline                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBPFL_EnvironmentUtility_C::GetTargetAnySplineComponent(class USplineComponent* BaseSpline, class ABP_SplineBase_C* ParentActor, class UObject* __WorldContext, class USplineComponent** TargetComponent, bool* UseParentSpline)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_EnvironmentUtility_C", "GetTargetAnySplineComponent");

	Params::BPFL_EnvironmentUtility_C_GetTargetAnySplineComponent Parms{};

	Parms.BaseSpline = BaseSpline;
	Parms.ParentActor = ParentActor;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (TargetComponent != nullptr)
		*TargetComponent = Parms.TargetComponent;

	if (UseParentSpline != nullptr)
		*UseParentSpline = Parms.UseParentSpline;
}

}

