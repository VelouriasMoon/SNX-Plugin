#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_ui_Brain_frame3

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BattlePrototype_classes.hpp"
#include "InputCore_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WB_ui_Brain_frame3.WB_ui_Brain_frame3_C
// 0x01A8 (0x0530 - 0x0388)
class UWB_ui_Brain_frame3_C final : public UUIBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0388(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Out_default_drive_on;                              // 0x0390(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       In_default_drive_on;                               // 0x0398(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Default_drive_on_out;                              // 0x03A0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Default_drive_on_in;                               // 0x03A8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Default_drive_on;                                  // 0x03B0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Out_lock;                                          // 0x03B8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       In_lock;                                           // 0x03C0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Default_lock;                                      // 0x03C8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Return_brain_lock;                                 // 0x03D0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Return_down;                                       // 0x03D8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Out_down;                                          // 0x03E0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       In_down;                                           // 0x03E8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Default_down;                                      // 0x03F0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Decision_down;                                     // 0x03F8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Return_brain;                                      // 0x0400(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Out_full;                                          // 0x0408(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       In_full;                                           // 0x0410(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Out_brain;                                         // 0x0418(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       In_brain;                                          // 0x0420(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Default_brain;                                     // 0x0428(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Decision_barin;                                    // 0x0430(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Full_in;                                           // 0x0438(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Full;                                              // 0x0440(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Out;                                               // 0x0448(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       In;                                                // 0x0450(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Default_none;                                      // 0x0458(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Default;                                           // 0x0460(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 BG;                                                // 0x0468(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 bg_drive_No_stock;                                 // 0x0470(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 bg_drive_stock;                                    // 0x0478(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 brain_button;                                      // 0x0480(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 brain_icon_font;                                   // 0x0488(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Frame_brain;                                       // 0x0490(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Frame_drive_1;                                     // 0x0498(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Frame_stock_1;                                     // 0x04A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Frame_stock_2;                                     // 0x04A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Frame_stock_3;                                     // 0x04B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                L3PlusR3_brain;                                    // 0x04B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Release;                                           // 0x04C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Release_base1;                                     // 0x04C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Release_base2;                                     // 0x04D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Release_base3;                                     // 0x04D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Release_button;                                    // 0x04E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Release_icon_font;                                 // 0x04E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Set;                                               // 0x04F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Stock_set;                                         // 0x04F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UREDTextBlock*                          Text_brain_number_1;                               // 0x0500(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UREDTextBlock*                          Text_brain_second_1;                               // 0x0508(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UREDTextBlock*                          Text_brain_warning_1;                              // 0x0510(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UREDTextBlock*                          Text_drive_name_1;                                 // 0x0518(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UREDTextBlock*                          Text_release_name_1;                               // 0x0520(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          FlagDrawBrainKeyGuide;                             // 0x0528(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          FlagEnableManualDrive;                             // 0x0529(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          FlagDrawBrainCancelKeyGuide;                       // 0x052A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_WB_ui_Brain_frame3(int32 EntryPoint);
	void OnInitialized();
	void UpdateState(int32 State, int32 SubState, float DeltaSeconds);
	void Construct();
	void StateNone(int32 SubState);
	void StateLoop(int32 SubState);
	void SetRemainingSecond(int32 Second);
	void SetVisibleBrainKeyGuide(bool Visibleflag);
	void UpdateButton();
	void SetDefaultMessage();
	void SetVisibleStockIcon(bool Visibleflag);
	void SetVisibleReleaseGuide(bool Visibleflag);
	void SetEnableManualDrive(bool IsEnable);
	void SetUnlockBrainField(bool IsUnlock);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WB_ui_Brain_frame3_C">();
	}
	static class UWB_ui_Brain_frame3_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWB_ui_Brain_frame3_C>();
	}
};
static_assert(alignof(UWB_ui_Brain_frame3_C) == 0x000008, "Wrong alignment on UWB_ui_Brain_frame3_C");
static_assert(sizeof(UWB_ui_Brain_frame3_C) == 0x000530, "Wrong size on UWB_ui_Brain_frame3_C");
static_assert(offsetof(UWB_ui_Brain_frame3_C, UberGraphFrame) == 0x000388, "Member 'UWB_ui_Brain_frame3_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWB_ui_Brain_frame3_C, Out_default_drive_on) == 0x000390, "Member 'UWB_ui_Brain_frame3_C::Out_default_drive_on' has a wrong offset!");
static_assert(offsetof(UWB_ui_Brain_frame3_C, In_default_drive_on) == 0x000398, "Member 'UWB_ui_Brain_frame3_C::In_default_drive_on' has a wrong offset!");
static_assert(offsetof(UWB_ui_Brain_frame3_C, Default_drive_on_out) == 0x0003A0, "Member 'UWB_ui_Brain_frame3_C::Default_drive_on_out' has a wrong offset!");
static_assert(offsetof(UWB_ui_Brain_frame3_C, Default_drive_on_in) == 0x0003A8, "Member 'UWB_ui_Brain_frame3_C::Default_drive_on_in' has a wrong offset!");
static_assert(offsetof(UWB_ui_Brain_frame3_C, Default_drive_on) == 0x0003B0, "Member 'UWB_ui_Brain_frame3_C::Default_drive_on' has a wrong offset!");
static_assert(offsetof(UWB_ui_Brain_frame3_C, Out_lock) == 0x0003B8, "Member 'UWB_ui_Brain_frame3_C::Out_lock' has a wrong offset!");
static_assert(offsetof(UWB_ui_Brain_frame3_C, In_lock) == 0x0003C0, "Member 'UWB_ui_Brain_frame3_C::In_lock' has a wrong offset!");
static_assert(offsetof(UWB_ui_Brain_frame3_C, Default_lock) == 0x0003C8, "Member 'UWB_ui_Brain_frame3_C::Default_lock' has a wrong offset!");
static_assert(offsetof(UWB_ui_Brain_frame3_C, Return_brain_lock) == 0x0003D0, "Member 'UWB_ui_Brain_frame3_C::Return_brain_lock' has a wrong offset!");
static_assert(offsetof(UWB_ui_Brain_frame3_C, Return_down) == 0x0003D8, "Member 'UWB_ui_Brain_frame3_C::Return_down' has a wrong offset!");
static_assert(offsetof(UWB_ui_Brain_frame3_C, Out_down) == 0x0003E0, "Member 'UWB_ui_Brain_frame3_C::Out_down' has a wrong offset!");
static_assert(offsetof(UWB_ui_Brain_frame3_C, In_down) == 0x0003E8, "Member 'UWB_ui_Brain_frame3_C::In_down' has a wrong offset!");
static_assert(offsetof(UWB_ui_Brain_frame3_C, Default_down) == 0x0003F0, "Member 'UWB_ui_Brain_frame3_C::Default_down' has a wrong offset!");
static_assert(offsetof(UWB_ui_Brain_frame3_C, Decision_down) == 0x0003F8, "Member 'UWB_ui_Brain_frame3_C::Decision_down' has a wrong offset!");
static_assert(offsetof(UWB_ui_Brain_frame3_C, Return_brain) == 0x000400, "Member 'UWB_ui_Brain_frame3_C::Return_brain' has a wrong offset!");
static_assert(offsetof(UWB_ui_Brain_frame3_C, Out_full) == 0x000408, "Member 'UWB_ui_Brain_frame3_C::Out_full' has a wrong offset!");
static_assert(offsetof(UWB_ui_Brain_frame3_C, In_full) == 0x000410, "Member 'UWB_ui_Brain_frame3_C::In_full' has a wrong offset!");
static_assert(offsetof(UWB_ui_Brain_frame3_C, Out_brain) == 0x000418, "Member 'UWB_ui_Brain_frame3_C::Out_brain' has a wrong offset!");
static_assert(offsetof(UWB_ui_Brain_frame3_C, In_brain) == 0x000420, "Member 'UWB_ui_Brain_frame3_C::In_brain' has a wrong offset!");
static_assert(offsetof(UWB_ui_Brain_frame3_C, Default_brain) == 0x000428, "Member 'UWB_ui_Brain_frame3_C::Default_brain' has a wrong offset!");
static_assert(offsetof(UWB_ui_Brain_frame3_C, Decision_barin) == 0x000430, "Member 'UWB_ui_Brain_frame3_C::Decision_barin' has a wrong offset!");
static_assert(offsetof(UWB_ui_Brain_frame3_C, Full_in) == 0x000438, "Member 'UWB_ui_Brain_frame3_C::Full_in' has a wrong offset!");
static_assert(offsetof(UWB_ui_Brain_frame3_C, Full) == 0x000440, "Member 'UWB_ui_Brain_frame3_C::Full' has a wrong offset!");
static_assert(offsetof(UWB_ui_Brain_frame3_C, Out) == 0x000448, "Member 'UWB_ui_Brain_frame3_C::Out' has a wrong offset!");
static_assert(offsetof(UWB_ui_Brain_frame3_C, In) == 0x000450, "Member 'UWB_ui_Brain_frame3_C::In' has a wrong offset!");
static_assert(offsetof(UWB_ui_Brain_frame3_C, Default_none) == 0x000458, "Member 'UWB_ui_Brain_frame3_C::Default_none' has a wrong offset!");
static_assert(offsetof(UWB_ui_Brain_frame3_C, Default) == 0x000460, "Member 'UWB_ui_Brain_frame3_C::Default' has a wrong offset!");
static_assert(offsetof(UWB_ui_Brain_frame3_C, BG) == 0x000468, "Member 'UWB_ui_Brain_frame3_C::BG' has a wrong offset!");
static_assert(offsetof(UWB_ui_Brain_frame3_C, bg_drive_No_stock) == 0x000470, "Member 'UWB_ui_Brain_frame3_C::bg_drive_No_stock' has a wrong offset!");
static_assert(offsetof(UWB_ui_Brain_frame3_C, bg_drive_stock) == 0x000478, "Member 'UWB_ui_Brain_frame3_C::bg_drive_stock' has a wrong offset!");
static_assert(offsetof(UWB_ui_Brain_frame3_C, brain_button) == 0x000480, "Member 'UWB_ui_Brain_frame3_C::brain_button' has a wrong offset!");
static_assert(offsetof(UWB_ui_Brain_frame3_C, brain_icon_font) == 0x000488, "Member 'UWB_ui_Brain_frame3_C::brain_icon_font' has a wrong offset!");
static_assert(offsetof(UWB_ui_Brain_frame3_C, Frame_brain) == 0x000490, "Member 'UWB_ui_Brain_frame3_C::Frame_brain' has a wrong offset!");
static_assert(offsetof(UWB_ui_Brain_frame3_C, Frame_drive_1) == 0x000498, "Member 'UWB_ui_Brain_frame3_C::Frame_drive_1' has a wrong offset!");
static_assert(offsetof(UWB_ui_Brain_frame3_C, Frame_stock_1) == 0x0004A0, "Member 'UWB_ui_Brain_frame3_C::Frame_stock_1' has a wrong offset!");
static_assert(offsetof(UWB_ui_Brain_frame3_C, Frame_stock_2) == 0x0004A8, "Member 'UWB_ui_Brain_frame3_C::Frame_stock_2' has a wrong offset!");
static_assert(offsetof(UWB_ui_Brain_frame3_C, Frame_stock_3) == 0x0004B0, "Member 'UWB_ui_Brain_frame3_C::Frame_stock_3' has a wrong offset!");
static_assert(offsetof(UWB_ui_Brain_frame3_C, L3PlusR3_brain) == 0x0004B8, "Member 'UWB_ui_Brain_frame3_C::L3PlusR3_brain' has a wrong offset!");
static_assert(offsetof(UWB_ui_Brain_frame3_C, Release) == 0x0004C0, "Member 'UWB_ui_Brain_frame3_C::Release' has a wrong offset!");
static_assert(offsetof(UWB_ui_Brain_frame3_C, Release_base1) == 0x0004C8, "Member 'UWB_ui_Brain_frame3_C::Release_base1' has a wrong offset!");
static_assert(offsetof(UWB_ui_Brain_frame3_C, Release_base2) == 0x0004D0, "Member 'UWB_ui_Brain_frame3_C::Release_base2' has a wrong offset!");
static_assert(offsetof(UWB_ui_Brain_frame3_C, Release_base3) == 0x0004D8, "Member 'UWB_ui_Brain_frame3_C::Release_base3' has a wrong offset!");
static_assert(offsetof(UWB_ui_Brain_frame3_C, Release_button) == 0x0004E0, "Member 'UWB_ui_Brain_frame3_C::Release_button' has a wrong offset!");
static_assert(offsetof(UWB_ui_Brain_frame3_C, Release_icon_font) == 0x0004E8, "Member 'UWB_ui_Brain_frame3_C::Release_icon_font' has a wrong offset!");
static_assert(offsetof(UWB_ui_Brain_frame3_C, Set) == 0x0004F0, "Member 'UWB_ui_Brain_frame3_C::Set' has a wrong offset!");
static_assert(offsetof(UWB_ui_Brain_frame3_C, Stock_set) == 0x0004F8, "Member 'UWB_ui_Brain_frame3_C::Stock_set' has a wrong offset!");
static_assert(offsetof(UWB_ui_Brain_frame3_C, Text_brain_number_1) == 0x000500, "Member 'UWB_ui_Brain_frame3_C::Text_brain_number_1' has a wrong offset!");
static_assert(offsetof(UWB_ui_Brain_frame3_C, Text_brain_second_1) == 0x000508, "Member 'UWB_ui_Brain_frame3_C::Text_brain_second_1' has a wrong offset!");
static_assert(offsetof(UWB_ui_Brain_frame3_C, Text_brain_warning_1) == 0x000510, "Member 'UWB_ui_Brain_frame3_C::Text_brain_warning_1' has a wrong offset!");
static_assert(offsetof(UWB_ui_Brain_frame3_C, Text_drive_name_1) == 0x000518, "Member 'UWB_ui_Brain_frame3_C::Text_drive_name_1' has a wrong offset!");
static_assert(offsetof(UWB_ui_Brain_frame3_C, Text_release_name_1) == 0x000520, "Member 'UWB_ui_Brain_frame3_C::Text_release_name_1' has a wrong offset!");
static_assert(offsetof(UWB_ui_Brain_frame3_C, FlagDrawBrainKeyGuide) == 0x000528, "Member 'UWB_ui_Brain_frame3_C::FlagDrawBrainKeyGuide' has a wrong offset!");
static_assert(offsetof(UWB_ui_Brain_frame3_C, FlagEnableManualDrive) == 0x000529, "Member 'UWB_ui_Brain_frame3_C::FlagEnableManualDrive' has a wrong offset!");
static_assert(offsetof(UWB_ui_Brain_frame3_C, FlagDrawBrainCancelKeyGuide) == 0x00052A, "Member 'UWB_ui_Brain_frame3_C::FlagDrawBrainCancelKeyGuide' has a wrong offset!");

}

