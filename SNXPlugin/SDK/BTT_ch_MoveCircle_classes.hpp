#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTT_ch_MoveCircle

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BattlePrototype_structs.hpp"
#include "BTT_ch_Base_MoveTo_classes.hpp"
#include "EPlayerAIMoveMode_structs.hpp"
#include "AIModule_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BTT_ch_MoveCircle.BTT_ch_MoveCircle_C
// 0x0028 (0x01A8 - 0x0180)
class UBTT_ch_MoveCircle_C : public UBTT_ch_Base_MoveTo_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BTT_ch_MoveCircle_C;                // 0x0180(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	float                                         TimeMin;                                           // 0x0188(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TimeMax;                                           // 0x018C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameTimer                             GameTimer;                                         // 0x0190(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bExecAIMoveTo;                                     // 0x019C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	EPlayerAIMoveMode                             MoveMode;                                          // 0x019D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_83DC[0x2];                                     // 0x019E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         LTimeRate;                                         // 0x01A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bEnableDistanceRate;                               // 0x01A4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BTT_ch_MoveCircle(int32 EntryPoint);
	void ReceiveExecuteAI(class AAIController* OwnerController, class APawn* ControlledPawn);
	void ReceiveTickAI(class AAIController* OwnerController, class APawn* ControlledPawn, float DeltaSeconds);
	void OnSuccess_B4F2C567467115C1D6ACF18928FEAB55(EPathFollowingResult MovementResult);
	void OnFail_B4F2C567467115C1D6ACF18928FEAB55(EPathFollowingResult MovementResult);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BTT_ch_MoveCircle_C">();
	}
	static class UBTT_ch_MoveCircle_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBTT_ch_MoveCircle_C>();
	}
};
static_assert(alignof(UBTT_ch_MoveCircle_C) == 0x000008, "Wrong alignment on UBTT_ch_MoveCircle_C");
static_assert(sizeof(UBTT_ch_MoveCircle_C) == 0x0001A8, "Wrong size on UBTT_ch_MoveCircle_C");
static_assert(offsetof(UBTT_ch_MoveCircle_C, UberGraphFrame_BTT_ch_MoveCircle_C) == 0x000180, "Member 'UBTT_ch_MoveCircle_C::UberGraphFrame_BTT_ch_MoveCircle_C' has a wrong offset!");
static_assert(offsetof(UBTT_ch_MoveCircle_C, TimeMin) == 0x000188, "Member 'UBTT_ch_MoveCircle_C::TimeMin' has a wrong offset!");
static_assert(offsetof(UBTT_ch_MoveCircle_C, TimeMax) == 0x00018C, "Member 'UBTT_ch_MoveCircle_C::TimeMax' has a wrong offset!");
static_assert(offsetof(UBTT_ch_MoveCircle_C, GameTimer) == 0x000190, "Member 'UBTT_ch_MoveCircle_C::GameTimer' has a wrong offset!");
static_assert(offsetof(UBTT_ch_MoveCircle_C, bExecAIMoveTo) == 0x00019C, "Member 'UBTT_ch_MoveCircle_C::bExecAIMoveTo' has a wrong offset!");
static_assert(offsetof(UBTT_ch_MoveCircle_C, MoveMode) == 0x00019D, "Member 'UBTT_ch_MoveCircle_C::MoveMode' has a wrong offset!");
static_assert(offsetof(UBTT_ch_MoveCircle_C, LTimeRate) == 0x0001A0, "Member 'UBTT_ch_MoveCircle_C::LTimeRate' has a wrong offset!");
static_assert(offsetof(UBTT_ch_MoveCircle_C, bEnableDistanceRate) == 0x0001A4, "Member 'UBTT_ch_MoveCircle_C::bEnableDistanceRate' has a wrong offset!");

}

