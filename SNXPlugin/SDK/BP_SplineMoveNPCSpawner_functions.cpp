#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SplineMoveNPCSpawner

#include "Basic.hpp"

#include "BP_SplineMoveNPCSpawner_classes.hpp"
#include "BP_SplineMoveNPCSpawner_parameters.hpp"


namespace SDK
{

// Function BP_SplineMoveNPCSpawner.BP_SplineMoveNPCSpawner_C.ExecuteUbergraph_BP_SplineMoveNPCSpawner
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SplineMoveNPCSpawner_C::ExecuteUbergraph_BP_SplineMoveNPCSpawner(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SplineMoveNPCSpawner_C", "ExecuteUbergraph_BP_SplineMoveNPCSpawner");

	Params::BP_SplineMoveNPCSpawner_C_ExecuteUbergraph_BP_SplineMoveNPCSpawner Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SplineMoveNPCSpawner.BP_SplineMoveNPCSpawner_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SplineMoveNPCSpawner_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SplineMoveNPCSpawner_C", "ReceiveTick");

	Params::BP_SplineMoveNPCSpawner_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SplineMoveNPCSpawner.BP_SplineMoveNPCSpawner_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_SplineMoveNPCSpawner_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SplineMoveNPCSpawner_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SplineMoveNPCSpawner.BP_SplineMoveNPCSpawner_C.ReceiveEndPlay
// (Event, Protected, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SplineMoveNPCSpawner_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SplineMoveNPCSpawner_C", "ReceiveEndPlay");

	Params::BP_SplineMoveNPCSpawner_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SplineMoveNPCSpawner.BP_SplineMoveNPCSpawner_C.ReceiveDestroyed
// (Event, Public, BlueprintEvent)

void ABP_SplineMoveNPCSpawner_C::ReceiveDestroyed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SplineMoveNPCSpawner_C", "ReceiveDestroyed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SplineMoveNPCSpawner.BP_SplineMoveNPCSpawner_C.GetRouteSplineAtRandom
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USplineComponent*                 SplineComponent                                        (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SplineMoveNPCSpawner_C::GetRouteSplineAtRandom(class USplineComponent** SplineComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SplineMoveNPCSpawner_C", "GetRouteSplineAtRandom");

	Params::BP_SplineMoveNPCSpawner_C_GetRouteSplineAtRandom Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (SplineComponent != nullptr)
		*SplineComponent = Parms.SplineComponent;
}


// Function BP_SplineMoveNPCSpawner.BP_SplineMoveNPCSpawner_C.GetFlatSpline
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USplineComponent*                 Spline                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USplineComponent*                 Result                                                 (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SplineMoveNPCSpawner_C::GetFlatSpline(class USplineComponent* Spline, class USplineComponent** Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SplineMoveNPCSpawner_C", "GetFlatSpline");

	Params::BP_SplineMoveNPCSpawner_C_GetFlatSpline Parms{};

	Parms.Spline = Spline;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BP_SplineMoveNPCSpawner.BP_SplineMoveNPCSpawner_C.SpawnTownPeopleCrowd
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_TownPeopleCrowd_C*            Spawned                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SplineMoveNPCSpawner_C::SpawnTownPeopleCrowd(class ABP_TownPeopleCrowd_C** Spawned)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SplineMoveNPCSpawner_C", "SpawnTownPeopleCrowd");

	Params::BP_SplineMoveNPCSpawner_C_SpawnTownPeopleCrowd Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Spawned != nullptr)
		*Spawned = Parms.Spawned;
}


// Function BP_SplineMoveNPCSpawner.BP_SplineMoveNPCSpawner_C.GetSplinePathAtRandom
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class USplineComponent*                 Spline                                                 (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SplineMoveNPCSpawner_C::GetSplinePathAtRandom(class USplineComponent** Spline)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SplineMoveNPCSpawner_C", "GetSplinePathAtRandom");

	Params::BP_SplineMoveNPCSpawner_C_GetSplinePathAtRandom Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Spline != nullptr)
		*Spline = Parms.Spline;
}


// Function BP_SplineMoveNPCSpawner.BP_SplineMoveNPCSpawner_C.InitializeSplinePaths
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_SplineMoveNPCSpawner_C::InitializeSplinePaths()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SplineMoveNPCSpawner_C", "InitializeSplinePaths");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SplineMoveNPCSpawner.BP_SplineMoveNPCSpawner_C.UpdateSpawnIntervalTime
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_SplineMoveNPCSpawner_C::UpdateSpawnIntervalTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SplineMoveNPCSpawner_C", "UpdateSpawnIntervalTime");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SplineMoveNPCSpawner.BP_SplineMoveNPCSpawner_C.InitializeSpawn
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   SpawnActorNum                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SplineMoveNPCSpawner_C::InitializeSpawn(int32 SpawnActorNum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SplineMoveNPCSpawner_C", "InitializeSpawn");

	Params::BP_SplineMoveNPCSpawner_C_InitializeSpawn Parms{};

	Parms.SpawnActorNum = SpawnActorNum;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SplineMoveNPCSpawner.BP_SplineMoveNPCSpawner_C.GetMaxPathLength
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   MaxPathLength                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SplineMoveNPCSpawner_C::GetMaxPathLength(float* MaxPathLength)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SplineMoveNPCSpawner_C", "GetMaxPathLength");

	Params::BP_SplineMoveNPCSpawner_C_GetMaxPathLength Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (MaxPathLength != nullptr)
		*MaxPathLength = Parms.MaxPathLength;
}


// Function BP_SplineMoveNPCSpawner.BP_SplineMoveNPCSpawner_C.GetRandomCrowdType
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FNpcTownPeopleCrowdType          CrowdType                                              (Parm, OutParm)

void ABP_SplineMoveNPCSpawner_C::GetRandomCrowdType(struct FNpcTownPeopleCrowdType* CrowdType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SplineMoveNPCSpawner_C", "GetRandomCrowdType");

	Params::BP_SplineMoveNPCSpawner_C_GetRandomCrowdType Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CrowdType != nullptr)
		*CrowdType = std::move(Parms.CrowdType);
}


// Function BP_SplineMoveNPCSpawner.BP_SplineMoveNPCSpawner_C.MoveNPCDeadCallback
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_TownPeopleCrowd_C*            Dead                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SplineMoveNPCSpawner_C::MoveNPCDeadCallback(class ABP_TownPeopleCrowd_C* Dead)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SplineMoveNPCSpawner_C", "MoveNPCDeadCallback");

	Params::BP_SplineMoveNPCSpawner_C_MoveNPCDeadCallback Parms{};

	Parms.Dead = Dead;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SplineMoveNPCSpawner.BP_SplineMoveNPCSpawner_C.DestroyAllNPC
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_SplineMoveNPCSpawner_C::DestroyAllNPC()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SplineMoveNPCSpawner_C", "DestroyAllNPC");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SplineMoveNPCSpawner.BP_SplineMoveNPCSpawner_C.CountNPC
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_SplineMoveNPCSpawner_C::CountNPC()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SplineMoveNPCSpawner_C", "CountNPC");

	UObject::ProcessEvent(Func, nullptr);
}

}

