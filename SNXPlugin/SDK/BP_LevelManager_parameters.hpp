#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_LevelManager

#include "Basic.hpp"

#include "S_BattleSimulatorLevelInfo_structs.hpp"
#include "BattlePrototype_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "S_LoadedLevelInfo_structs.hpp"
#include "E_SceneType_structs.hpp"
#include "S_LevelManagerCommand_structs.hpp"
#include "S_AreaInfo_structs.hpp"
#include "S_BGAreaInfo_structs.hpp"
#include "S_AreaSettingsInfo_structs.hpp"
#include "Engine_structs.hpp"
#include "S_ArrangePointAreaInfo_structs.hpp"
#include "E_LevelCommandStatus_structs.hpp"
#include "S_AreaInfoTweakExec_structs.hpp"
#include "S_AreaInfoTweakCondition_structs.hpp"
#include "S_NPCAreaInfo_structs.hpp"
#include "S_NObjAreaInfo_structs.hpp"
#include "S_EventAreaInfo_structs.hpp"
#include "S_EnemyAreaInfo_structs.hpp"
#include "E_LevelLoadStatus_structs.hpp"
#include "S_SceneInfo_structs.hpp"
#include "E_LevelManagerCommand_structs.hpp"


namespace SDK::Params
{

// Function BP_LevelManager.BP_LevelManager_C.EventFinishWaitAreaVisibleDispatcher__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_LevelManager_C_EventFinishWaitAreaVisibleDispatcher__DelegateSignature final
{
public:
	class FName                                   AreaName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LevelManager_C_EventFinishWaitAreaVisibleDispatcher__DelegateSignature) == 0x000004, "Wrong alignment on BP_LevelManager_C_EventFinishWaitAreaVisibleDispatcher__DelegateSignature");
static_assert(sizeof(BP_LevelManager_C_EventFinishWaitAreaVisibleDispatcher__DelegateSignature) == 0x000008, "Wrong size on BP_LevelManager_C_EventFinishWaitAreaVisibleDispatcher__DelegateSignature");
static_assert(offsetof(BP_LevelManager_C_EventFinishWaitAreaVisibleDispatcher__DelegateSignature, AreaName) == 0x000000, "Member 'BP_LevelManager_C_EventFinishWaitAreaVisibleDispatcher__DelegateSignature::AreaName' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.EventFinishWaitAreaUnvisibleDispatcher__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_LevelManager_C_EventFinishWaitAreaUnvisibleDispatcher__DelegateSignature final
{
public:
	class FName                                   AreaName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LevelManager_C_EventFinishWaitAreaUnvisibleDispatcher__DelegateSignature) == 0x000004, "Wrong alignment on BP_LevelManager_C_EventFinishWaitAreaUnvisibleDispatcher__DelegateSignature");
static_assert(sizeof(BP_LevelManager_C_EventFinishWaitAreaUnvisibleDispatcher__DelegateSignature) == 0x000008, "Wrong size on BP_LevelManager_C_EventFinishWaitAreaUnvisibleDispatcher__DelegateSignature");
static_assert(offsetof(BP_LevelManager_C_EventFinishWaitAreaUnvisibleDispatcher__DelegateSignature, AreaName) == 0x000000, "Member 'BP_LevelManager_C_EventFinishWaitAreaUnvisibleDispatcher__DelegateSignature::AreaName' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.EventFinishLoadAssetAsync__DelegateSignature
// 0x0028 (0x0028 - 0x0000)
struct BP_LevelManager_C_EventFinishLoadAssetAsync__DelegateSignature final
{
public:
	TSoftObjectPtr<class UObject>                 LoadedAsset;                                       // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_LevelManager_C_EventFinishLoadAssetAsync__DelegateSignature) == 0x000008, "Wrong alignment on BP_LevelManager_C_EventFinishLoadAssetAsync__DelegateSignature");
static_assert(sizeof(BP_LevelManager_C_EventFinishLoadAssetAsync__DelegateSignature) == 0x000028, "Wrong size on BP_LevelManager_C_EventFinishLoadAssetAsync__DelegateSignature");
static_assert(offsetof(BP_LevelManager_C_EventFinishLoadAssetAsync__DelegateSignature, LoadedAsset) == 0x000000, "Member 'BP_LevelManager_C_EventFinishLoadAssetAsync__DelegateSignature::LoadedAsset' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.OnStartCheckLevelVisible__DelegateSignature
// 0x0028 (0x0028 - 0x0000)
struct BP_LevelManager_C_OnStartCheckLevelVisible__DelegateSignature final
{
public:
	TSoftObjectPtr<class UObject>                 Level;                                             // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_LevelManager_C_OnStartCheckLevelVisible__DelegateSignature) == 0x000008, "Wrong alignment on BP_LevelManager_C_OnStartCheckLevelVisible__DelegateSignature");
static_assert(sizeof(BP_LevelManager_C_OnStartCheckLevelVisible__DelegateSignature) == 0x000028, "Wrong size on BP_LevelManager_C_OnStartCheckLevelVisible__DelegateSignature");
static_assert(offsetof(BP_LevelManager_C_OnStartCheckLevelVisible__DelegateSignature, Level) == 0x000000, "Member 'BP_LevelManager_C_OnStartCheckLevelVisible__DelegateSignature::Level' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.OnEndCheckLevelVisible__DelegateSignature
// 0x0028 (0x0028 - 0x0000)
struct BP_LevelManager_C_OnEndCheckLevelVisible__DelegateSignature final
{
public:
	TSoftObjectPtr<class UObject>                 Level;                                             // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_LevelManager_C_OnEndCheckLevelVisible__DelegateSignature) == 0x000008, "Wrong alignment on BP_LevelManager_C_OnEndCheckLevelVisible__DelegateSignature");
static_assert(sizeof(BP_LevelManager_C_OnEndCheckLevelVisible__DelegateSignature) == 0x000028, "Wrong size on BP_LevelManager_C_OnEndCheckLevelVisible__DelegateSignature");
static_assert(offsetof(BP_LevelManager_C_OnEndCheckLevelVisible__DelegateSignature, Level) == 0x000000, "Member 'BP_LevelManager_C_OnEndCheckLevelVisible__DelegateSignature::Level' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.ExecuteUbergraph_BP_LevelManager
// 0x0418 (0x0418 - 0x0000)
struct BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CFA[0x4];                                      // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SceneManager_C*                     CallFunc_GetSceneManager_SceneManager;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CFB[0x3];                                      // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_AreaName_4;                     // 0x0014(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetAreaInfoStatus_Error;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_LevelLoadStatus                             CallFunc_SetAreaInfoStatus_OldStatus;              // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CFC[0x2];                                      // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPrimaryAssetType                      K2Node_CustomEvent_Pack_1;                         // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RegisterPackToLoaded_IsAlreadyExists;     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CFD[0x3];                                      // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPrimaryAssetType                      K2Node_CustomEvent_Pack;                           // 0x002C(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UnregisterPackToLoaded_IsError;           // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CFE[0x3];                                      // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct FPrimaryAssetType& Pack)> K2Node_CreateDelegate_OutputDelegate;              // 0x0038(0x0010)(ZeroConstructor, NoDestructor)
	class FString                                 K2Node_CustomEvent_PortalName;                     // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_AreaName_3;                     // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class APlayerStart*>                   CallFunc_GetAllActorsOfClass_OutActors;            // 0x0060(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TSoftObjectPtr<class UObject>                 K2Node_CustomEvent_Level_1;                        // 0x0070(0x0028)(HasGetValueTypeHash)
	TSoftObjectPtr<class UObject>                 K2Node_CustomEvent_Level;                          // 0x0098(0x0028)(HasGetValueTypeHash)
	TDelegate<void(const struct FPrimaryAssetType& Pack)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x00C0(0x0010)(ZeroConstructor, NoDestructor)
	TSoftObjectPtr<class UObject>                 K2Node_CustomEvent_LevelName_1;                    // 0x00D0(0x0028)(HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_AreaName_2;                     // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_UnregisterLevelToLoaded_IsError;          // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CFF[0x2];                                      // 0x0102(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_AreaName_1;                     // 0x0104(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D00[0x3];                                      // 0x010D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UObject>                 K2Node_CustomEvent_LevelName;                      // 0x0110(0x0028)(HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_AreaName;                       // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABattlefieldManager*                    CallFunc_GetBattleFieldManager_BattleFieldManager; // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RegisterLevelToLoaded_IsAlreadyExists;    // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D01[0x7];                                      // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BattlefieldManager_C*               K2Node_DynamicCast_AsBP_Battlefield_Manager;       // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D02[0x7];                                      // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APsychicObjectManager_C*                CallFunc_GetPsychicObjectManager_PsyObjManager;    // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetEnablePsychicObjectRegister_ReturnValue; // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0169(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D03[0x6];                                      // 0x016A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APsychicObjectManager_C*                CallFunc_GetPsychicObjectManager_PsyObjManager_1;  // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetEnablePsychicObjectRegister_ReturnValue_1; // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0179(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D04[0x2];                                      // 0x017A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D05[0x7];                                      // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_LevelManagerCommand                 CallFunc_GetCurrentLevelCommand_Command;           // 0x0188(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_GetCurrentLevelCommand_IsFound;           // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D06[0x7];                                      // 0x01D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_LevelManagerCommand                 K2Node_CustomEvent_Command;                        // 0x01D8(0x0048)(HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x0221(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D07[0x6];                                      // 0x0222(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_LevelManagerCommand                 CallFunc_GetCurrentLevelCommand_Command_1;         // 0x0228(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_GetCurrentLevelCommand_IsFound_1;         // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D08[0x3];                                      // 0x0271(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(TSoftObjectPtr<class UObject> LevelName, class FName AreaName)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0274(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class FName AreaName)>         K2Node_CreateDelegate_OutputDelegate_3;            // 0x0284(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         Temp_int_Variable;                                 // 0x0294(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(TSoftObjectPtr<class UObject> LevelName, class FName AreaName)> K2Node_CreateDelegate_OutputDelegate_4;            // 0x0298(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(TSoftObjectPtr<class UObject> Level)> K2Node_CreateDelegate_OutputDelegate_5;            // 0x02A8(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x02B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(TSoftObjectPtr<class UObject> Level)> K2Node_CreateDelegate_OutputDelegate_6;            // 0x02BC(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class FName AreaName)>         K2Node_CreateDelegate_OutputDelegate_7;            // 0x02CC(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x02DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D09[0x3];                                      // 0x02DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UObject>                 CallFunc_Array_Get_Item;                           // 0x02E0(0x0028)(HasGetValueTypeHash)
	class FName                                   CallFunc_ObjectSoftRefToName_ReturnValue;          // 0x0308(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0310(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D0A[0x4];                                      // 0x0314(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0318(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0330(0x0040)(HasGetValueTypeHash)
	TDelegate<void(class FName AreaName)>         K2Node_CreateDelegate_OutputDelegate_8;            // 0x0370(0x0010)(ZeroConstructor, NoDestructor)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0380(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x03C0(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x03D0(0x0018)()
	class URSGameInstanceBP_C*                    CallFunc_GetRSGameInstance_AsRSGame_Instance_BP;   // 0x03E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x03F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D0B[0x7];                                      // 0x03F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URSGameInstanceBP_C*                    CallFunc_GetRSGameInstance_AsRSGame_Instance_BP_1; // 0x03F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0400(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0410(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager) == 0x000008, "Wrong alignment on BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager");
static_assert(sizeof(BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager) == 0x000418, "Wrong size on BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager");
static_assert(offsetof(BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager, EntryPoint) == 0x000000, "Member 'BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager, CallFunc_GetSceneManager_SceneManager) == 0x000008, "Member 'BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager::CallFunc_GetSceneManager_SceneManager' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager, K2Node_CustomEvent_AreaName_4) == 0x000014, "Member 'BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager::K2Node_CustomEvent_AreaName_4' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager, CallFunc_SetAreaInfoStatus_Error) == 0x00001C, "Member 'BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager::CallFunc_SetAreaInfoStatus_Error' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager, CallFunc_SetAreaInfoStatus_OldStatus) == 0x00001D, "Member 'BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager::CallFunc_SetAreaInfoStatus_OldStatus' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager, K2Node_CustomEvent_Pack_1) == 0x000020, "Member 'BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager::K2Node_CustomEvent_Pack_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager, CallFunc_RegisterPackToLoaded_IsAlreadyExists) == 0x000028, "Member 'BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager::CallFunc_RegisterPackToLoaded_IsAlreadyExists' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager, K2Node_CustomEvent_Pack) == 0x00002C, "Member 'BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager::K2Node_CustomEvent_Pack' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager, CallFunc_UnregisterPackToLoaded_IsError) == 0x000034, "Member 'BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager::CallFunc_UnregisterPackToLoaded_IsError' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager, K2Node_CreateDelegate_OutputDelegate) == 0x000038, "Member 'BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager, K2Node_CustomEvent_PortalName) == 0x000048, "Member 'BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager::K2Node_CustomEvent_PortalName' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager, K2Node_CustomEvent_AreaName_3) == 0x000058, "Member 'BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager::K2Node_CustomEvent_AreaName_3' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager, CallFunc_GetAllActorsOfClass_OutActors) == 0x000060, "Member 'BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager, K2Node_CustomEvent_Level_1) == 0x000070, "Member 'BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager::K2Node_CustomEvent_Level_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager, K2Node_CustomEvent_Level) == 0x000098, "Member 'BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager::K2Node_CustomEvent_Level' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager, K2Node_CreateDelegate_OutputDelegate_1) == 0x0000C0, "Member 'BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager, K2Node_CustomEvent_LevelName_1) == 0x0000D0, "Member 'BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager::K2Node_CustomEvent_LevelName_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager, K2Node_CustomEvent_AreaName_2) == 0x0000F8, "Member 'BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager::K2Node_CustomEvent_AreaName_2' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager, CallFunc_NotEqual_NameName_ReturnValue) == 0x000100, "Member 'BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager, CallFunc_UnregisterLevelToLoaded_IsError) == 0x000101, "Member 'BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager::CallFunc_UnregisterLevelToLoaded_IsError' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager, K2Node_CustomEvent_AreaName_1) == 0x000104, "Member 'BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager::K2Node_CustomEvent_AreaName_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager, CallFunc_BooleanAND_ReturnValue) == 0x00010C, "Member 'BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager, K2Node_CustomEvent_LevelName) == 0x000110, "Member 'BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager::K2Node_CustomEvent_LevelName' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager, K2Node_CustomEvent_AreaName) == 0x000138, "Member 'BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager::K2Node_CustomEvent_AreaName' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager, CallFunc_GetBattleFieldManager_BattleFieldManager) == 0x000140, "Member 'BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager::CallFunc_GetBattleFieldManager_BattleFieldManager' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager, CallFunc_RegisterLevelToLoaded_IsAlreadyExists) == 0x000148, "Member 'BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager::CallFunc_RegisterLevelToLoaded_IsAlreadyExists' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager, K2Node_DynamicCast_AsBP_Battlefield_Manager) == 0x000150, "Member 'BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager::K2Node_DynamicCast_AsBP_Battlefield_Manager' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager, K2Node_DynamicCast_bSuccess) == 0x000158, "Member 'BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager, CallFunc_GetPsychicObjectManager_PsyObjManager) == 0x000160, "Member 'BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager::CallFunc_GetPsychicObjectManager_PsyObjManager' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager, CallFunc_SetEnablePsychicObjectRegister_ReturnValue) == 0x000168, "Member 'BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager::CallFunc_SetEnablePsychicObjectRegister_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager, CallFunc_IsValid_ReturnValue_1) == 0x000169, "Member 'BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager, CallFunc_GetPsychicObjectManager_PsyObjManager_1) == 0x000170, "Member 'BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager::CallFunc_GetPsychicObjectManager_PsyObjManager_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager, CallFunc_SetEnablePsychicObjectRegister_ReturnValue_1) == 0x000178, "Member 'BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager::CallFunc_SetEnablePsychicObjectRegister_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager, CallFunc_IsValid_ReturnValue_2) == 0x000179, "Member 'BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager, K2Node_Event_DeltaSeconds) == 0x00017C, "Member 'BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager, K2Node_SwitchEnum_CmpSuccess) == 0x000180, "Member 'BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager, CallFunc_GetCurrentLevelCommand_Command) == 0x000188, "Member 'BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager::CallFunc_GetCurrentLevelCommand_Command' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager, CallFunc_GetCurrentLevelCommand_IsFound) == 0x0001D0, "Member 'BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager::CallFunc_GetCurrentLevelCommand_IsFound' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager, K2Node_CustomEvent_Command) == 0x0001D8, "Member 'BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager::K2Node_CustomEvent_Command' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager, K2Node_SwitchEnum_CmpSuccess_1) == 0x000220, "Member 'BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager, K2Node_SwitchEnum_CmpSuccess_2) == 0x000221, "Member 'BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager, CallFunc_GetCurrentLevelCommand_Command_1) == 0x000228, "Member 'BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager::CallFunc_GetCurrentLevelCommand_Command_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager, CallFunc_GetCurrentLevelCommand_IsFound_1) == 0x000270, "Member 'BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager::CallFunc_GetCurrentLevelCommand_IsFound_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager, K2Node_CreateDelegate_OutputDelegate_2) == 0x000274, "Member 'BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager, K2Node_CreateDelegate_OutputDelegate_3) == 0x000284, "Member 'BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager, Temp_int_Variable) == 0x000294, "Member 'BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager, K2Node_CreateDelegate_OutputDelegate_4) == 0x000298, "Member 'BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager, K2Node_CreateDelegate_OutputDelegate_5) == 0x0002A8, "Member 'BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager, CallFunc_Array_Length_ReturnValue) == 0x0002B8, "Member 'BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager, K2Node_CreateDelegate_OutputDelegate_6) == 0x0002BC, "Member 'BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager, K2Node_CreateDelegate_OutputDelegate_7) == 0x0002CC, "Member 'BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager, CallFunc_Less_IntInt_ReturnValue) == 0x0002DC, "Member 'BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager, CallFunc_Array_Get_Item) == 0x0002E0, "Member 'BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager, CallFunc_ObjectSoftRefToName_ReturnValue) == 0x000308, "Member 'BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager::CallFunc_ObjectSoftRefToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager, CallFunc_Add_IntInt_ReturnValue) == 0x000310, "Member 'BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager, CallFunc_Conv_NameToText_ReturnValue) == 0x000318, "Member 'BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager, K2Node_MakeStruct_FormatArgumentData) == 0x000330, "Member 'BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager, K2Node_CreateDelegate_OutputDelegate_8) == 0x000370, "Member 'BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager, K2Node_MakeStruct_FormatArgumentData_1) == 0x000380, "Member 'BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager, K2Node_MakeArray_Array) == 0x0003C0, "Member 'BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager, CallFunc_Format_ReturnValue) == 0x0003D0, "Member 'BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager, CallFunc_GetRSGameInstance_AsRSGame_Instance_BP) == 0x0003E8, "Member 'BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager::CallFunc_GetRSGameInstance_AsRSGame_Instance_BP' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager, CallFunc_IsValid_ReturnValue_3) == 0x0003F0, "Member 'BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager, CallFunc_GetRSGameInstance_AsRSGame_Instance_BP_1) == 0x0003F8, "Member 'BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager::CallFunc_GetRSGameInstance_AsRSGame_Instance_BP_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager, CallFunc_Conv_NameToString_ReturnValue) == 0x000400, "Member 'BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager, CallFunc_Conv_StringToName_ReturnValue) == 0x000410, "Member 'BP_LevelManager_C_ExecuteUbergraph_BP_LevelManager::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.ExecLevelCommand
// 0x0048 (0x0048 - 0x0000)
struct BP_LevelManager_C_ExecLevelCommand final
{
public:
	struct FS_LevelManagerCommand                 Command;                                           // 0x0000(0x0048)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_LevelManager_C_ExecLevelCommand) == 0x000008, "Wrong alignment on BP_LevelManager_C_ExecLevelCommand");
static_assert(sizeof(BP_LevelManager_C_ExecLevelCommand) == 0x000048, "Wrong size on BP_LevelManager_C_ExecLevelCommand");
static_assert(offsetof(BP_LevelManager_C_ExecLevelCommand, Command) == 0x000000, "Member 'BP_LevelManager_C_ExecLevelCommand::Command' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_LevelManager_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LevelManager_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_LevelManager_C_ReceiveTick");
static_assert(sizeof(BP_LevelManager_C_ReceiveTick) == 0x000004, "Wrong size on BP_LevelManager_C_ReceiveTick");
static_assert(offsetof(BP_LevelManager_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_LevelManager_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.EventFinishLoadLevelDispatcher_Event_0
// 0x0030 (0x0030 - 0x0000)
struct BP_LevelManager_C_EventFinishLoadLevelDispatcher_Event_0 final
{
public:
	TSoftObjectPtr<class UObject>                 LevelName;                                         // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class FName                                   AreaName;                                          // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LevelManager_C_EventFinishLoadLevelDispatcher_Event_0) == 0x000008, "Wrong alignment on BP_LevelManager_C_EventFinishLoadLevelDispatcher_Event_0");
static_assert(sizeof(BP_LevelManager_C_EventFinishLoadLevelDispatcher_Event_0) == 0x000030, "Wrong size on BP_LevelManager_C_EventFinishLoadLevelDispatcher_Event_0");
static_assert(offsetof(BP_LevelManager_C_EventFinishLoadLevelDispatcher_Event_0, LevelName) == 0x000000, "Member 'BP_LevelManager_C_EventFinishLoadLevelDispatcher_Event_0::LevelName' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_EventFinishLoadLevelDispatcher_Event_0, AreaName) == 0x000028, "Member 'BP_LevelManager_C_EventFinishLoadLevelDispatcher_Event_0::AreaName' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.EventFinishUnloadAreaDispatcher_Event_0
// 0x0008 (0x0008 - 0x0000)
struct BP_LevelManager_C_EventFinishUnloadAreaDispatcher_Event_0 final
{
public:
	class FName                                   AreaName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LevelManager_C_EventFinishUnloadAreaDispatcher_Event_0) == 0x000004, "Wrong alignment on BP_LevelManager_C_EventFinishUnloadAreaDispatcher_Event_0");
static_assert(sizeof(BP_LevelManager_C_EventFinishUnloadAreaDispatcher_Event_0) == 0x000008, "Wrong size on BP_LevelManager_C_EventFinishUnloadAreaDispatcher_Event_0");
static_assert(offsetof(BP_LevelManager_C_EventFinishUnloadAreaDispatcher_Event_0, AreaName) == 0x000000, "Member 'BP_LevelManager_C_EventFinishUnloadAreaDispatcher_Event_0::AreaName' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.EventFinishUnloadLevelDispatcher_Event_0
// 0x0030 (0x0030 - 0x0000)
struct BP_LevelManager_C_EventFinishUnloadLevelDispatcher_Event_0 final
{
public:
	TSoftObjectPtr<class UObject>                 LevelName;                                         // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class FName                                   AreaName;                                          // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LevelManager_C_EventFinishUnloadLevelDispatcher_Event_0) == 0x000008, "Wrong alignment on BP_LevelManager_C_EventFinishUnloadLevelDispatcher_Event_0");
static_assert(sizeof(BP_LevelManager_C_EventFinishUnloadLevelDispatcher_Event_0) == 0x000030, "Wrong size on BP_LevelManager_C_EventFinishUnloadLevelDispatcher_Event_0");
static_assert(offsetof(BP_LevelManager_C_EventFinishUnloadLevelDispatcher_Event_0, LevelName) == 0x000000, "Member 'BP_LevelManager_C_EventFinishUnloadLevelDispatcher_Event_0::LevelName' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_EventFinishUnloadLevelDispatcher_Event_0, AreaName) == 0x000028, "Member 'BP_LevelManager_C_EventFinishUnloadLevelDispatcher_Event_0::AreaName' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.OnEndCheckLevelVisible_Event
// 0x0028 (0x0028 - 0x0000)
struct BP_LevelManager_C_OnEndCheckLevelVisible_Event final
{
public:
	TSoftObjectPtr<class UObject>                 Level;                                             // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_LevelManager_C_OnEndCheckLevelVisible_Event) == 0x000008, "Wrong alignment on BP_LevelManager_C_OnEndCheckLevelVisible_Event");
static_assert(sizeof(BP_LevelManager_C_OnEndCheckLevelVisible_Event) == 0x000028, "Wrong size on BP_LevelManager_C_OnEndCheckLevelVisible_Event");
static_assert(offsetof(BP_LevelManager_C_OnEndCheckLevelVisible_Event, Level) == 0x000000, "Member 'BP_LevelManager_C_OnEndCheckLevelVisible_Event::Level' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.OnStartCheckLevelVisible_Event
// 0x0028 (0x0028 - 0x0000)
struct BP_LevelManager_C_OnStartCheckLevelVisible_Event final
{
public:
	TSoftObjectPtr<class UObject>                 Level;                                             // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_LevelManager_C_OnStartCheckLevelVisible_Event) == 0x000008, "Wrong alignment on BP_LevelManager_C_OnStartCheckLevelVisible_Event");
static_assert(sizeof(BP_LevelManager_C_OnStartCheckLevelVisible_Event) == 0x000028, "Wrong size on BP_LevelManager_C_OnStartCheckLevelVisible_Event");
static_assert(offsetof(BP_LevelManager_C_OnStartCheckLevelVisible_Event, Level) == 0x000000, "Member 'BP_LevelManager_C_OnStartCheckLevelVisible_Event::Level' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.CallbackSetAreaVisibleFinishedAndSetPlayer
// 0x0008 (0x0008 - 0x0000)
struct BP_LevelManager_C_CallbackSetAreaVisibleFinishedAndSetPlayer final
{
public:
	class FName                                   AreaName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LevelManager_C_CallbackSetAreaVisibleFinishedAndSetPlayer) == 0x000004, "Wrong alignment on BP_LevelManager_C_CallbackSetAreaVisibleFinishedAndSetPlayer");
static_assert(sizeof(BP_LevelManager_C_CallbackSetAreaVisibleFinishedAndSetPlayer) == 0x000008, "Wrong size on BP_LevelManager_C_CallbackSetAreaVisibleFinishedAndSetPlayer");
static_assert(offsetof(BP_LevelManager_C_CallbackSetAreaVisibleFinishedAndSetPlayer, AreaName) == 0x000000, "Member 'BP_LevelManager_C_CallbackSetAreaVisibleFinishedAndSetPlayer::AreaName' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.BindSetPlayerStartAfterFinishAreaVisible
// 0x0010 (0x0010 - 0x0000)
struct BP_LevelManager_C_BindSetPlayerStartAfterFinishAreaVisible final
{
public:
	class FString                                 PortalName;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LevelManager_C_BindSetPlayerStartAfterFinishAreaVisible) == 0x000008, "Wrong alignment on BP_LevelManager_C_BindSetPlayerStartAfterFinishAreaVisible");
static_assert(sizeof(BP_LevelManager_C_BindSetPlayerStartAfterFinishAreaVisible) == 0x000010, "Wrong size on BP_LevelManager_C_BindSetPlayerStartAfterFinishAreaVisible");
static_assert(offsetof(BP_LevelManager_C_BindSetPlayerStartAfterFinishAreaVisible, PortalName) == 0x000000, "Member 'BP_LevelManager_C_BindSetPlayerStartAfterFinishAreaVisible::PortalName' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.EventFinishUnloadPackDispatcher_Event_0
// 0x0008 (0x0008 - 0x0000)
struct BP_LevelManager_C_EventFinishUnloadPackDispatcher_Event_0 final
{
public:
	struct FPrimaryAssetType                      Pack;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LevelManager_C_EventFinishUnloadPackDispatcher_Event_0) == 0x000004, "Wrong alignment on BP_LevelManager_C_EventFinishUnloadPackDispatcher_Event_0");
static_assert(sizeof(BP_LevelManager_C_EventFinishUnloadPackDispatcher_Event_0) == 0x000008, "Wrong size on BP_LevelManager_C_EventFinishUnloadPackDispatcher_Event_0");
static_assert(offsetof(BP_LevelManager_C_EventFinishUnloadPackDispatcher_Event_0, Pack) == 0x000000, "Member 'BP_LevelManager_C_EventFinishUnloadPackDispatcher_Event_0::Pack' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.EventFinishLoadPackDispatcher_Event_0
// 0x0008 (0x0008 - 0x0000)
struct BP_LevelManager_C_EventFinishLoadPackDispatcher_Event_0 final
{
public:
	struct FPrimaryAssetType                      Pack;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LevelManager_C_EventFinishLoadPackDispatcher_Event_0) == 0x000004, "Wrong alignment on BP_LevelManager_C_EventFinishLoadPackDispatcher_Event_0");
static_assert(sizeof(BP_LevelManager_C_EventFinishLoadPackDispatcher_Event_0) == 0x000008, "Wrong size on BP_LevelManager_C_EventFinishLoadPackDispatcher_Event_0");
static_assert(offsetof(BP_LevelManager_C_EventFinishLoadPackDispatcher_Event_0, Pack) == 0x000000, "Member 'BP_LevelManager_C_EventFinishLoadPackDispatcher_Event_0::Pack' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.EventFinishLoadAreaDispatcher_Event_0
// 0x0008 (0x0008 - 0x0000)
struct BP_LevelManager_C_EventFinishLoadAreaDispatcher_Event_0 final
{
public:
	class FName                                   AreaName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LevelManager_C_EventFinishLoadAreaDispatcher_Event_0) == 0x000004, "Wrong alignment on BP_LevelManager_C_EventFinishLoadAreaDispatcher_Event_0");
static_assert(sizeof(BP_LevelManager_C_EventFinishLoadAreaDispatcher_Event_0) == 0x000008, "Wrong size on BP_LevelManager_C_EventFinishLoadAreaDispatcher_Event_0");
static_assert(offsetof(BP_LevelManager_C_EventFinishLoadAreaDispatcher_Event_0, AreaName) == 0x000000, "Member 'BP_LevelManager_C_EventFinishLoadAreaDispatcher_Event_0::AreaName' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.RequestLoadAreaImmediateByAreaName
// 0x001C (0x001C - 0x0000)
struct BP_LevelManager_C_RequestLoadAreaImmediateByAreaName final
{
public:
	class FName                                   AreaName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SetVisbleAfterLoad;                                // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          SkipEnemyLevels;                                   // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          SkipEventLevels;                                   // 0x000A(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          _needUpdateLevels;                                 // 0x000B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_AddLevelCommand_CommandNum;               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddLevelCommand_CommandNum_1;             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddLevelCommand_CommandNum_2;             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddLevelCommand_CommandNum_3;             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LevelManager_C_RequestLoadAreaImmediateByAreaName) == 0x000004, "Wrong alignment on BP_LevelManager_C_RequestLoadAreaImmediateByAreaName");
static_assert(sizeof(BP_LevelManager_C_RequestLoadAreaImmediateByAreaName) == 0x00001C, "Wrong size on BP_LevelManager_C_RequestLoadAreaImmediateByAreaName");
static_assert(offsetof(BP_LevelManager_C_RequestLoadAreaImmediateByAreaName, AreaName) == 0x000000, "Member 'BP_LevelManager_C_RequestLoadAreaImmediateByAreaName::AreaName' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestLoadAreaImmediateByAreaName, SetVisbleAfterLoad) == 0x000008, "Member 'BP_LevelManager_C_RequestLoadAreaImmediateByAreaName::SetVisbleAfterLoad' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestLoadAreaImmediateByAreaName, SkipEnemyLevels) == 0x000009, "Member 'BP_LevelManager_C_RequestLoadAreaImmediateByAreaName::SkipEnemyLevels' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestLoadAreaImmediateByAreaName, SkipEventLevels) == 0x00000A, "Member 'BP_LevelManager_C_RequestLoadAreaImmediateByAreaName::SkipEventLevels' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestLoadAreaImmediateByAreaName, _needUpdateLevels) == 0x00000B, "Member 'BP_LevelManager_C_RequestLoadAreaImmediateByAreaName::_needUpdateLevels' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestLoadAreaImmediateByAreaName, CallFunc_AddLevelCommand_CommandNum) == 0x00000C, "Member 'BP_LevelManager_C_RequestLoadAreaImmediateByAreaName::CallFunc_AddLevelCommand_CommandNum' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestLoadAreaImmediateByAreaName, CallFunc_AddLevelCommand_CommandNum_1) == 0x000010, "Member 'BP_LevelManager_C_RequestLoadAreaImmediateByAreaName::CallFunc_AddLevelCommand_CommandNum_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestLoadAreaImmediateByAreaName, CallFunc_AddLevelCommand_CommandNum_2) == 0x000014, "Member 'BP_LevelManager_C_RequestLoadAreaImmediateByAreaName::CallFunc_AddLevelCommand_CommandNum_2' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestLoadAreaImmediateByAreaName, CallFunc_AddLevelCommand_CommandNum_3) == 0x000018, "Member 'BP_LevelManager_C_RequestLoadAreaImmediateByAreaName::CallFunc_AddLevelCommand_CommandNum_3' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.SetCurrentArea
// 0x0188 (0x0188 - 0x0000)
struct BP_LevelManager_C_SetCurrentArea final
{
public:
	class FName                                   AreaName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAreaInLoadedAreaInfosWithCondition_IsLoaded; // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAreaInLoadedAreaInfosWithCondition_IsExist; // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D0C[0x5];                                      // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_AreaInfo                            CallFunc_IsAreaInLoadedAreaInfosWithCondition_AreaInfo; // 0x0010(0x0068)(HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	E_SceneType                                   CallFunc_SetCurrentSceneType_OldSceneType;         // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D0D[0x7];                                      // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x00A0(0x0018)()
	class FText                                   CallFunc_Conv_NameToText_ReturnValue_1;            // 0x00B8(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x00D0(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0110(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0150(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0160(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0178(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LevelManager_C_SetCurrentArea) == 0x000008, "Wrong alignment on BP_LevelManager_C_SetCurrentArea");
static_assert(sizeof(BP_LevelManager_C_SetCurrentArea) == 0x000188, "Wrong size on BP_LevelManager_C_SetCurrentArea");
static_assert(offsetof(BP_LevelManager_C_SetCurrentArea, AreaName) == 0x000000, "Member 'BP_LevelManager_C_SetCurrentArea::AreaName' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_SetCurrentArea, Result) == 0x000008, "Member 'BP_LevelManager_C_SetCurrentArea::Result' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_SetCurrentArea, CallFunc_IsAreaInLoadedAreaInfosWithCondition_IsLoaded) == 0x000009, "Member 'BP_LevelManager_C_SetCurrentArea::CallFunc_IsAreaInLoadedAreaInfosWithCondition_IsLoaded' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_SetCurrentArea, CallFunc_IsAreaInLoadedAreaInfosWithCondition_IsExist) == 0x00000A, "Member 'BP_LevelManager_C_SetCurrentArea::CallFunc_IsAreaInLoadedAreaInfosWithCondition_IsExist' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_SetCurrentArea, CallFunc_IsAreaInLoadedAreaInfosWithCondition_AreaInfo) == 0x000010, "Member 'BP_LevelManager_C_SetCurrentArea::CallFunc_IsAreaInLoadedAreaInfosWithCondition_AreaInfo' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_SetCurrentArea, CallFunc_Conv_NameToString_ReturnValue) == 0x000078, "Member 'BP_LevelManager_C_SetCurrentArea::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_SetCurrentArea, CallFunc_Concat_StrStr_ReturnValue) == 0x000088, "Member 'BP_LevelManager_C_SetCurrentArea::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_SetCurrentArea, CallFunc_SetCurrentSceneType_OldSceneType) == 0x000098, "Member 'BP_LevelManager_C_SetCurrentArea::CallFunc_SetCurrentSceneType_OldSceneType' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_SetCurrentArea, CallFunc_Conv_NameToText_ReturnValue) == 0x0000A0, "Member 'BP_LevelManager_C_SetCurrentArea::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_SetCurrentArea, CallFunc_Conv_NameToText_ReturnValue_1) == 0x0000B8, "Member 'BP_LevelManager_C_SetCurrentArea::CallFunc_Conv_NameToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_SetCurrentArea, K2Node_MakeStruct_FormatArgumentData) == 0x0000D0, "Member 'BP_LevelManager_C_SetCurrentArea::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_SetCurrentArea, K2Node_MakeStruct_FormatArgumentData_1) == 0x000110, "Member 'BP_LevelManager_C_SetCurrentArea::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_SetCurrentArea, K2Node_MakeArray_Array) == 0x000150, "Member 'BP_LevelManager_C_SetCurrentArea::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_SetCurrentArea, CallFunc_Format_ReturnValue) == 0x000160, "Member 'BP_LevelManager_C_SetCurrentArea::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_SetCurrentArea, CallFunc_Conv_TextToString_ReturnValue) == 0x000178, "Member 'BP_LevelManager_C_SetCurrentArea::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.CleanLoadedAreaInfos
// 0x0098 (0x0098 - 0x0000)
struct BP_LevelManager_C_CleanLoadedAreaInfos final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_Map_Keys_Keys;                            // 0x0008(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D0E[0x4];                                      // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_AreaInfo                            CallFunc_Map_Find_Value;                           // 0x0020(0x0068)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D0F[0x3];                                      // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LevelManager_C_CleanLoadedAreaInfos) == 0x000008, "Wrong alignment on BP_LevelManager_C_CleanLoadedAreaInfos");
static_assert(sizeof(BP_LevelManager_C_CleanLoadedAreaInfos) == 0x000098, "Wrong size on BP_LevelManager_C_CleanLoadedAreaInfos");
static_assert(offsetof(BP_LevelManager_C_CleanLoadedAreaInfos, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_LevelManager_C_CleanLoadedAreaInfos::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_CleanLoadedAreaInfos, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_LevelManager_C_CleanLoadedAreaInfos::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_CleanLoadedAreaInfos, CallFunc_Map_Keys_Keys) == 0x000008, "Member 'BP_LevelManager_C_CleanLoadedAreaInfos::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_CleanLoadedAreaInfos, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_LevelManager_C_CleanLoadedAreaInfos::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_CleanLoadedAreaInfos, CallFunc_Map_Find_Value) == 0x000020, "Member 'BP_LevelManager_C_CleanLoadedAreaInfos::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_CleanLoadedAreaInfos, CallFunc_Map_Find_ReturnValue) == 0x000088, "Member 'BP_LevelManager_C_CleanLoadedAreaInfos::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_CleanLoadedAreaInfos, CallFunc_Array_Length_ReturnValue) == 0x00008C, "Member 'BP_LevelManager_C_CleanLoadedAreaInfos::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_CleanLoadedAreaInfos, CallFunc_Less_IntInt_ReturnValue) == 0x000090, "Member 'BP_LevelManager_C_CleanLoadedAreaInfos::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_CleanLoadedAreaInfos, K2Node_SwitchEnum_CmpSuccess) == 0x000091, "Member 'BP_LevelManager_C_CleanLoadedAreaInfos::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.GetCurrentLevelCommand
// 0x00A0 (0x00A0 - 0x0000)
struct BP_LevelManager_C_GetCurrentLevelCommand final
{
public:
	struct FS_LevelManagerCommand                 Command;                                           // 0x0000(0x0048)(Parm, OutParm, HasGetValueTypeHash)
	bool                                          IsFound;                                           // 0x0048(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D10[0x7];                                      // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_LevelManagerCommand                 K2Node_MakeStruct_S_LevelManagerCommand;           // 0x0050(0x0048)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LevelManager_C_GetCurrentLevelCommand) == 0x000008, "Wrong alignment on BP_LevelManager_C_GetCurrentLevelCommand");
static_assert(sizeof(BP_LevelManager_C_GetCurrentLevelCommand) == 0x0000A0, "Wrong size on BP_LevelManager_C_GetCurrentLevelCommand");
static_assert(offsetof(BP_LevelManager_C_GetCurrentLevelCommand, Command) == 0x000000, "Member 'BP_LevelManager_C_GetCurrentLevelCommand::Command' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetCurrentLevelCommand, IsFound) == 0x000048, "Member 'BP_LevelManager_C_GetCurrentLevelCommand::IsFound' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetCurrentLevelCommand, K2Node_MakeStruct_S_LevelManagerCommand) == 0x000050, "Member 'BP_LevelManager_C_GetCurrentLevelCommand::K2Node_MakeStruct_S_LevelManagerCommand' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetCurrentLevelCommand, CallFunc_Array_Length_ReturnValue) == 0x000098, "Member 'BP_LevelManager_C_GetCurrentLevelCommand::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetCurrentLevelCommand, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00009C, "Member 'BP_LevelManager_C_GetCurrentLevelCommand::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.AddLevelCommand
// 0x02A0 (0x02A0 - 0x0000)
struct BP_LevelManager_C_AddLevelCommand final
{
public:
	E_LevelManagerCommand                         Command;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D11[0x3];                                      // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   ArgName;                                           // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ArgName2;                                          // 0x000C(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Flag;                                              // 0x0014(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D12[0x3];                                      // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UObject>                 Asset;                                             // 0x0018(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          Flag2;                                             // 0x0040(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D13[0x3];                                      // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CommandNum;                                        // 0x0044(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_LevelManagerCommand                 K2Node_MakeStruct_S_LevelManagerCommand;           // 0x0048(0x0048)(HasGetValueTypeHash)
	class FName                                   CallFunc_ObjectSoftRefToName_ReturnValue;          // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D14[0x4];                                      // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x00A0(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x00B8(0x0040)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_BoolToText_ReturnValue;              // 0x00F8(0x0018)()
	class FText                                   CallFunc_Conv_NameToText_ReturnValue_1;            // 0x0110(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0128(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0168(0x0040)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_NameToText_ReturnValue_2;            // 0x01A8(0x0018)()
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x01C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x01D0(0x0040)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0210(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_4;            // 0x0228(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0268(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0278(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0290(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LevelManager_C_AddLevelCommand) == 0x000008, "Wrong alignment on BP_LevelManager_C_AddLevelCommand");
static_assert(sizeof(BP_LevelManager_C_AddLevelCommand) == 0x0002A0, "Wrong size on BP_LevelManager_C_AddLevelCommand");
static_assert(offsetof(BP_LevelManager_C_AddLevelCommand, Command) == 0x000000, "Member 'BP_LevelManager_C_AddLevelCommand::Command' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_AddLevelCommand, ArgName) == 0x000004, "Member 'BP_LevelManager_C_AddLevelCommand::ArgName' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_AddLevelCommand, ArgName2) == 0x00000C, "Member 'BP_LevelManager_C_AddLevelCommand::ArgName2' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_AddLevelCommand, Flag) == 0x000014, "Member 'BP_LevelManager_C_AddLevelCommand::Flag' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_AddLevelCommand, Asset) == 0x000018, "Member 'BP_LevelManager_C_AddLevelCommand::Asset' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_AddLevelCommand, Flag2) == 0x000040, "Member 'BP_LevelManager_C_AddLevelCommand::Flag2' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_AddLevelCommand, CommandNum) == 0x000044, "Member 'BP_LevelManager_C_AddLevelCommand::CommandNum' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_AddLevelCommand, K2Node_MakeStruct_S_LevelManagerCommand) == 0x000048, "Member 'BP_LevelManager_C_AddLevelCommand::K2Node_MakeStruct_S_LevelManagerCommand' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_AddLevelCommand, CallFunc_ObjectSoftRefToName_ReturnValue) == 0x000090, "Member 'BP_LevelManager_C_AddLevelCommand::CallFunc_ObjectSoftRefToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_AddLevelCommand, CallFunc_Array_Add_ReturnValue) == 0x000098, "Member 'BP_LevelManager_C_AddLevelCommand::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_AddLevelCommand, CallFunc_Conv_NameToText_ReturnValue) == 0x0000A0, "Member 'BP_LevelManager_C_AddLevelCommand::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_AddLevelCommand, K2Node_MakeStruct_FormatArgumentData) == 0x0000B8, "Member 'BP_LevelManager_C_AddLevelCommand::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_AddLevelCommand, CallFunc_Conv_BoolToText_ReturnValue) == 0x0000F8, "Member 'BP_LevelManager_C_AddLevelCommand::CallFunc_Conv_BoolToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_AddLevelCommand, CallFunc_Conv_NameToText_ReturnValue_1) == 0x000110, "Member 'BP_LevelManager_C_AddLevelCommand::CallFunc_Conv_NameToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_AddLevelCommand, K2Node_MakeStruct_FormatArgumentData_1) == 0x000128, "Member 'BP_LevelManager_C_AddLevelCommand::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_AddLevelCommand, K2Node_MakeStruct_FormatArgumentData_2) == 0x000168, "Member 'BP_LevelManager_C_AddLevelCommand::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_AddLevelCommand, CallFunc_Conv_NameToText_ReturnValue_2) == 0x0001A8, "Member 'BP_LevelManager_C_AddLevelCommand::CallFunc_Conv_NameToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_AddLevelCommand, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x0001C0, "Member 'BP_LevelManager_C_AddLevelCommand::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_AddLevelCommand, K2Node_MakeStruct_FormatArgumentData_3) == 0x0001D0, "Member 'BP_LevelManager_C_AddLevelCommand::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_AddLevelCommand, CallFunc_Conv_StringToText_ReturnValue) == 0x000210, "Member 'BP_LevelManager_C_AddLevelCommand::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_AddLevelCommand, K2Node_MakeStruct_FormatArgumentData_4) == 0x000228, "Member 'BP_LevelManager_C_AddLevelCommand::K2Node_MakeStruct_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_AddLevelCommand, K2Node_MakeArray_Array) == 0x000268, "Member 'BP_LevelManager_C_AddLevelCommand::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_AddLevelCommand, CallFunc_Format_ReturnValue) == 0x000278, "Member 'BP_LevelManager_C_AddLevelCommand::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_AddLevelCommand, CallFunc_Conv_TextToString_ReturnValue) == 0x000290, "Member 'BP_LevelManager_C_AddLevelCommand::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.FinishLevelCommand
// 0x0140 (0x0140 - 0x0000)
struct BP_LevelManager_C_FinishLevelCommand final
{
public:
	bool                                          IsError;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D15[0x7];                                      // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_LevelManagerCommand                 CallFunc_GetCurrentLevelCommand_Command;           // 0x0008(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_GetCurrentLevelCommand_IsFound;           // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D16[0x7];                                      // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_LevelManagerCommand                 K2Node_MakeStruct_S_LevelManagerCommand;           // 0x0058(0x0048)(HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x00B0(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x00C8(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0108(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0118(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0130(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LevelManager_C_FinishLevelCommand) == 0x000008, "Wrong alignment on BP_LevelManager_C_FinishLevelCommand");
static_assert(sizeof(BP_LevelManager_C_FinishLevelCommand) == 0x000140, "Wrong size on BP_LevelManager_C_FinishLevelCommand");
static_assert(offsetof(BP_LevelManager_C_FinishLevelCommand, IsError) == 0x000000, "Member 'BP_LevelManager_C_FinishLevelCommand::IsError' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_FinishLevelCommand, CallFunc_GetCurrentLevelCommand_Command) == 0x000008, "Member 'BP_LevelManager_C_FinishLevelCommand::CallFunc_GetCurrentLevelCommand_Command' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_FinishLevelCommand, CallFunc_GetCurrentLevelCommand_IsFound) == 0x000050, "Member 'BP_LevelManager_C_FinishLevelCommand::CallFunc_GetCurrentLevelCommand_IsFound' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_FinishLevelCommand, K2Node_MakeStruct_S_LevelManagerCommand) == 0x000058, "Member 'BP_LevelManager_C_FinishLevelCommand::K2Node_MakeStruct_S_LevelManagerCommand' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_FinishLevelCommand, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x0000A0, "Member 'BP_LevelManager_C_FinishLevelCommand::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_FinishLevelCommand, CallFunc_Conv_StringToText_ReturnValue) == 0x0000B0, "Member 'BP_LevelManager_C_FinishLevelCommand::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_FinishLevelCommand, K2Node_MakeStruct_FormatArgumentData) == 0x0000C8, "Member 'BP_LevelManager_C_FinishLevelCommand::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_FinishLevelCommand, K2Node_MakeArray_Array) == 0x000108, "Member 'BP_LevelManager_C_FinishLevelCommand::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_FinishLevelCommand, CallFunc_Format_ReturnValue) == 0x000118, "Member 'BP_LevelManager_C_FinishLevelCommand::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_FinishLevelCommand, CallFunc_Conv_TextToString_ReturnValue) == 0x000130, "Member 'BP_LevelManager_C_FinishLevelCommand::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.GetAreaInfoFromDB
// 0x00E8 (0x00E8 - 0x0000)
struct BP_LevelManager_C_GetAreaInfoFromDB final
{
public:
	class FName                                   AreaName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsFound;                                           // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D17[0x7];                                      // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_AreaInfo                            AreaInfo;                                          // 0x0010(0x0068)(Parm, OutParm, HasGetValueTypeHash)
	struct FS_AreaInfo                            CallFunc_GetAreaInfo_AreaInfo;                     // 0x0078(0x0068)(HasGetValueTypeHash)
	bool                                          CallFunc_GetAreaInfo_Found;                        // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LevelManager_C_GetAreaInfoFromDB) == 0x000008, "Wrong alignment on BP_LevelManager_C_GetAreaInfoFromDB");
static_assert(sizeof(BP_LevelManager_C_GetAreaInfoFromDB) == 0x0000E8, "Wrong size on BP_LevelManager_C_GetAreaInfoFromDB");
static_assert(offsetof(BP_LevelManager_C_GetAreaInfoFromDB, AreaName) == 0x000000, "Member 'BP_LevelManager_C_GetAreaInfoFromDB::AreaName' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetAreaInfoFromDB, IsFound) == 0x000008, "Member 'BP_LevelManager_C_GetAreaInfoFromDB::IsFound' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetAreaInfoFromDB, AreaInfo) == 0x000010, "Member 'BP_LevelManager_C_GetAreaInfoFromDB::AreaInfo' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetAreaInfoFromDB, CallFunc_GetAreaInfo_AreaInfo) == 0x000078, "Member 'BP_LevelManager_C_GetAreaInfoFromDB::CallFunc_GetAreaInfo_AreaInfo' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetAreaInfoFromDB, CallFunc_GetAreaInfo_Found) == 0x0000E0, "Member 'BP_LevelManager_C_GetAreaInfoFromDB::CallFunc_GetAreaInfo_Found' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.SetAreaVisibleFlag
// 0x00B0 (0x00B0 - 0x0000)
struct BP_LevelManager_C_SetAreaVisibleFlag final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D18[0x3];                                      // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   AreaName;                                          // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D19[0x4];                                      // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftObjectPtr<class UObject>>         CallFunc_GetAllLevelInArea_Levels;                 // 0x0010(0x0010)(ReferenceParm, HasGetValueTypeHash)
	struct FS_AreaInfo                            CallFunc_GetAllLevelInArea_AreaInfo;               // 0x0020(0x0068)(HasGetValueTypeHash)
	bool                                          CallFunc_GetAllLevelInArea_Error;                  // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1A[0x3];                                      // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_ObjectSoftRefToName_ReturnValue;          // 0x0094(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelStreaming*                        CallFunc_GetStreamingLevel_ReturnValue;            // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1B[0x3];                                      // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LevelManager_C_SetAreaVisibleFlag) == 0x000008, "Wrong alignment on BP_LevelManager_C_SetAreaVisibleFlag");
static_assert(sizeof(BP_LevelManager_C_SetAreaVisibleFlag) == 0x0000B0, "Wrong size on BP_LevelManager_C_SetAreaVisibleFlag");
static_assert(offsetof(BP_LevelManager_C_SetAreaVisibleFlag, Visible) == 0x000000, "Member 'BP_LevelManager_C_SetAreaVisibleFlag::Visible' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_SetAreaVisibleFlag, AreaName) == 0x000004, "Member 'BP_LevelManager_C_SetAreaVisibleFlag::AreaName' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_SetAreaVisibleFlag, CallFunc_GetAllLevelInArea_Levels) == 0x000010, "Member 'BP_LevelManager_C_SetAreaVisibleFlag::CallFunc_GetAllLevelInArea_Levels' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_SetAreaVisibleFlag, CallFunc_GetAllLevelInArea_AreaInfo) == 0x000020, "Member 'BP_LevelManager_C_SetAreaVisibleFlag::CallFunc_GetAllLevelInArea_AreaInfo' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_SetAreaVisibleFlag, CallFunc_GetAllLevelInArea_Error) == 0x000088, "Member 'BP_LevelManager_C_SetAreaVisibleFlag::CallFunc_GetAllLevelInArea_Error' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_SetAreaVisibleFlag, Temp_int_Array_Index_Variable) == 0x00008C, "Member 'BP_LevelManager_C_SetAreaVisibleFlag::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_SetAreaVisibleFlag, CallFunc_Array_Length_ReturnValue) == 0x000090, "Member 'BP_LevelManager_C_SetAreaVisibleFlag::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_SetAreaVisibleFlag, CallFunc_ObjectSoftRefToName_ReturnValue) == 0x000094, "Member 'BP_LevelManager_C_SetAreaVisibleFlag::CallFunc_ObjectSoftRefToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_SetAreaVisibleFlag, Temp_int_Loop_Counter_Variable) == 0x00009C, "Member 'BP_LevelManager_C_SetAreaVisibleFlag::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_SetAreaVisibleFlag, CallFunc_GetStreamingLevel_ReturnValue) == 0x0000A0, "Member 'BP_LevelManager_C_SetAreaVisibleFlag::CallFunc_GetStreamingLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_SetAreaVisibleFlag, CallFunc_Less_IntInt_ReturnValue) == 0x0000A8, "Member 'BP_LevelManager_C_SetAreaVisibleFlag::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_SetAreaVisibleFlag, CallFunc_Add_IntInt_ReturnValue) == 0x0000AC, "Member 'BP_LevelManager_C_SetAreaVisibleFlag::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.RequestSetAreaVisible
// 0x00C0 (0x00C0 - 0x0000)
struct BP_LevelManager_C_RequestSetAreaVisible final
{
public:
	class FName                                   AreaName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Async;                                             // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Visible;                                           // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1C[0x6];                                      // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAreaInLoadedAreaInfosWithCondition_IsLoaded; // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAreaInLoadedAreaInfosWithCondition_IsExist; // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1D[0x6];                                      // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_AreaInfo                            CallFunc_IsAreaInLoadedAreaInfosWithCondition_AreaInfo; // 0x0028(0x0068)(HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UObject>>         CallFunc_GetSceneSystemLevels_Levels;              // 0x0090(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LevelManager_C_RequestSetAreaVisible) == 0x000008, "Wrong alignment on BP_LevelManager_C_RequestSetAreaVisible");
static_assert(sizeof(BP_LevelManager_C_RequestSetAreaVisible) == 0x0000C0, "Wrong size on BP_LevelManager_C_RequestSetAreaVisible");
static_assert(offsetof(BP_LevelManager_C_RequestSetAreaVisible, AreaName) == 0x000000, "Member 'BP_LevelManager_C_RequestSetAreaVisible::AreaName' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetAreaVisible, Async) == 0x000008, "Member 'BP_LevelManager_C_RequestSetAreaVisible::Async' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetAreaVisible, Visible) == 0x000009, "Member 'BP_LevelManager_C_RequestSetAreaVisible::Visible' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetAreaVisible, CallFunc_Conv_NameToString_ReturnValue) == 0x000010, "Member 'BP_LevelManager_C_RequestSetAreaVisible::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetAreaVisible, CallFunc_IsAreaInLoadedAreaInfosWithCondition_IsLoaded) == 0x000020, "Member 'BP_LevelManager_C_RequestSetAreaVisible::CallFunc_IsAreaInLoadedAreaInfosWithCondition_IsLoaded' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetAreaVisible, CallFunc_IsAreaInLoadedAreaInfosWithCondition_IsExist) == 0x000021, "Member 'BP_LevelManager_C_RequestSetAreaVisible::CallFunc_IsAreaInLoadedAreaInfosWithCondition_IsExist' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetAreaVisible, CallFunc_IsAreaInLoadedAreaInfosWithCondition_AreaInfo) == 0x000028, "Member 'BP_LevelManager_C_RequestSetAreaVisible::CallFunc_IsAreaInLoadedAreaInfosWithCondition_AreaInfo' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetAreaVisible, CallFunc_GetSceneSystemLevels_Levels) == 0x000090, "Member 'BP_LevelManager_C_RequestSetAreaVisible::CallFunc_GetSceneSystemLevels_Levels' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetAreaVisible, CallFunc_Concat_StrStr_ReturnValue) == 0x0000A0, "Member 'BP_LevelManager_C_RequestSetAreaVisible::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetAreaVisible, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0000B0, "Member 'BP_LevelManager_C_RequestSetAreaVisible::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.SetLevelsVisibleFlag
// 0x0030 (0x0030 - 0x0000)
struct BP_LevelManager_C_SetLevelsVisibleFlag final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1E[0x7];                                      // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftObjectPtr<class UObject>>         Levels;                                            // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	float                                         TmpTime;                                           // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1F[0x3];                                      // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LevelManager_C_SetLevelsVisibleFlag) == 0x000008, "Wrong alignment on BP_LevelManager_C_SetLevelsVisibleFlag");
static_assert(sizeof(BP_LevelManager_C_SetLevelsVisibleFlag) == 0x000030, "Wrong size on BP_LevelManager_C_SetLevelsVisibleFlag");
static_assert(offsetof(BP_LevelManager_C_SetLevelsVisibleFlag, Visible) == 0x000000, "Member 'BP_LevelManager_C_SetLevelsVisibleFlag::Visible' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_SetLevelsVisibleFlag, Levels) == 0x000008, "Member 'BP_LevelManager_C_SetLevelsVisibleFlag::Levels' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_SetLevelsVisibleFlag, TmpTime) == 0x000018, "Member 'BP_LevelManager_C_SetLevelsVisibleFlag::TmpTime' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_SetLevelsVisibleFlag, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'BP_LevelManager_C_SetLevelsVisibleFlag::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_SetLevelsVisibleFlag, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'BP_LevelManager_C_SetLevelsVisibleFlag::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_SetLevelsVisibleFlag, CallFunc_Less_IntInt_ReturnValue) == 0x000024, "Member 'BP_LevelManager_C_SetLevelsVisibleFlag::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_SetLevelsVisibleFlag, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BP_LevelManager_C_SetLevelsVisibleFlag::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_SetLevelsVisibleFlag, Temp_int_Array_Index_Variable) == 0x00002C, "Member 'BP_LevelManager_C_SetLevelsVisibleFlag::Temp_int_Array_Index_Variable' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.FullPathToLevelName
// 0x0048 (0x0048 - 0x0000)
struct BP_LevelManager_C_FullPathToLevelName final
{
public:
	class FName                                   FullPath;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   LevelName;                                         // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Len_ReturnValue;                          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FindSubstring_ReturnValue;                // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetSubstring_ReturnValue;                 // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LevelManager_C_FullPathToLevelName) == 0x000008, "Wrong alignment on BP_LevelManager_C_FullPathToLevelName");
static_assert(sizeof(BP_LevelManager_C_FullPathToLevelName) == 0x000048, "Wrong size on BP_LevelManager_C_FullPathToLevelName");
static_assert(offsetof(BP_LevelManager_C_FullPathToLevelName, FullPath) == 0x000000, "Member 'BP_LevelManager_C_FullPathToLevelName::FullPath' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_FullPathToLevelName, LevelName) == 0x000008, "Member 'BP_LevelManager_C_FullPathToLevelName::LevelName' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_FullPathToLevelName, CallFunc_Conv_NameToString_ReturnValue) == 0x000010, "Member 'BP_LevelManager_C_FullPathToLevelName::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_FullPathToLevelName, CallFunc_Len_ReturnValue) == 0x000020, "Member 'BP_LevelManager_C_FullPathToLevelName::CallFunc_Len_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_FullPathToLevelName, CallFunc_FindSubstring_ReturnValue) == 0x000024, "Member 'BP_LevelManager_C_FullPathToLevelName::CallFunc_FindSubstring_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_FullPathToLevelName, CallFunc_Subtract_IntInt_ReturnValue) == 0x000028, "Member 'BP_LevelManager_C_FullPathToLevelName::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_FullPathToLevelName, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'BP_LevelManager_C_FullPathToLevelName::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_FullPathToLevelName, CallFunc_GetSubstring_ReturnValue) == 0x000030, "Member 'BP_LevelManager_C_FullPathToLevelName::CallFunc_GetSubstring_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_FullPathToLevelName, CallFunc_Conv_StringToName_ReturnValue) == 0x000040, "Member 'BP_LevelManager_C_FullPathToLevelName::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.IsAreaInLoadedAreaInfosWithCondition
// 0x01D8 (0x01D8 - 0x0000)
struct BP_LevelManager_C_IsAreaInLoadedAreaInfosWithCondition final
{
public:
	class FName                                   AreaName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsLoaded;                                          // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsExist;                                           // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D20[0x6];                                      // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_AreaInfo                            AreaInfo;                                          // 0x0010(0x0068)(Parm, OutParm, HasGetValueTypeHash)
	struct FS_AreaInfo                            _tmpSettings;                                      // 0x0078(0x0068)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D21[0x4];                                      // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_AreaInfo                            CallFunc_GetAreaInfoAfterTweak_AreaInfo;           // 0x00F0(0x0068)(HasGetValueTypeHash)
	bool                                          CallFunc_GetAreaInfoAfterTweak_Found;              // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D22[0x3];                                      // 0x0159(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_BoolBool_ReturnValue;          // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D23[0x6];                                      // 0x0162(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_AreaInfo                            CallFunc_Map_Find_Value;                           // 0x0168(0x0068)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x01D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LevelManager_C_IsAreaInLoadedAreaInfosWithCondition) == 0x000008, "Wrong alignment on BP_LevelManager_C_IsAreaInLoadedAreaInfosWithCondition");
static_assert(sizeof(BP_LevelManager_C_IsAreaInLoadedAreaInfosWithCondition) == 0x0001D8, "Wrong size on BP_LevelManager_C_IsAreaInLoadedAreaInfosWithCondition");
static_assert(offsetof(BP_LevelManager_C_IsAreaInLoadedAreaInfosWithCondition, AreaName) == 0x000000, "Member 'BP_LevelManager_C_IsAreaInLoadedAreaInfosWithCondition::AreaName' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaInLoadedAreaInfosWithCondition, IsLoaded) == 0x000008, "Member 'BP_LevelManager_C_IsAreaInLoadedAreaInfosWithCondition::IsLoaded' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaInLoadedAreaInfosWithCondition, IsExist) == 0x000009, "Member 'BP_LevelManager_C_IsAreaInLoadedAreaInfosWithCondition::IsExist' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaInLoadedAreaInfosWithCondition, AreaInfo) == 0x000010, "Member 'BP_LevelManager_C_IsAreaInLoadedAreaInfosWithCondition::AreaInfo' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaInLoadedAreaInfosWithCondition, _tmpSettings) == 0x000078, "Member 'BP_LevelManager_C_IsAreaInLoadedAreaInfosWithCondition::_tmpSettings' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaInLoadedAreaInfosWithCondition, Temp_int_Loop_Counter_Variable) == 0x0000E0, "Member 'BP_LevelManager_C_IsAreaInLoadedAreaInfosWithCondition::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaInLoadedAreaInfosWithCondition, Temp_int_Array_Index_Variable) == 0x0000E4, "Member 'BP_LevelManager_C_IsAreaInLoadedAreaInfosWithCondition::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaInLoadedAreaInfosWithCondition, CallFunc_Add_IntInt_ReturnValue) == 0x0000E8, "Member 'BP_LevelManager_C_IsAreaInLoadedAreaInfosWithCondition::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaInLoadedAreaInfosWithCondition, CallFunc_GetAreaInfoAfterTweak_AreaInfo) == 0x0000F0, "Member 'BP_LevelManager_C_IsAreaInLoadedAreaInfosWithCondition::CallFunc_GetAreaInfoAfterTweak_AreaInfo' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaInLoadedAreaInfosWithCondition, CallFunc_GetAreaInfoAfterTweak_Found) == 0x000158, "Member 'BP_LevelManager_C_IsAreaInLoadedAreaInfosWithCondition::CallFunc_GetAreaInfoAfterTweak_Found' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaInLoadedAreaInfosWithCondition, CallFunc_Array_Length_ReturnValue) == 0x00015C, "Member 'BP_LevelManager_C_IsAreaInLoadedAreaInfosWithCondition::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaInLoadedAreaInfosWithCondition, CallFunc_EqualEqual_BoolBool_ReturnValue) == 0x000160, "Member 'BP_LevelManager_C_IsAreaInLoadedAreaInfosWithCondition::CallFunc_EqualEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaInLoadedAreaInfosWithCondition, CallFunc_Less_IntInt_ReturnValue) == 0x000161, "Member 'BP_LevelManager_C_IsAreaInLoadedAreaInfosWithCondition::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaInLoadedAreaInfosWithCondition, CallFunc_Map_Find_Value) == 0x000168, "Member 'BP_LevelManager_C_IsAreaInLoadedAreaInfosWithCondition::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaInLoadedAreaInfosWithCondition, CallFunc_Map_Find_ReturnValue) == 0x0001D0, "Member 'BP_LevelManager_C_IsAreaInLoadedAreaInfosWithCondition::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaInLoadedAreaInfosWithCondition, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x0001D1, "Member 'BP_LevelManager_C_IsAreaInLoadedAreaInfosWithCondition::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.RequestUnloadAreaAsync
// 0x0078 (0x0078 - 0x0000)
struct BP_LevelManager_C_RequestUnloadAreaAsync final
{
public:
	class FName                                   AreaName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddLevelCommand_CommandNum;               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAreaInLoadedAreaInfosWithCondition_IsLoaded; // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAreaInLoadedAreaInfosWithCondition_IsExist; // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D24[0x2];                                      // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_AreaInfo                            CallFunc_IsAreaInLoadedAreaInfosWithCondition_AreaInfo; // 0x0010(0x0068)(HasGetValueTypeHash)
};
static_assert(alignof(BP_LevelManager_C_RequestUnloadAreaAsync) == 0x000008, "Wrong alignment on BP_LevelManager_C_RequestUnloadAreaAsync");
static_assert(sizeof(BP_LevelManager_C_RequestUnloadAreaAsync) == 0x000078, "Wrong size on BP_LevelManager_C_RequestUnloadAreaAsync");
static_assert(offsetof(BP_LevelManager_C_RequestUnloadAreaAsync, AreaName) == 0x000000, "Member 'BP_LevelManager_C_RequestUnloadAreaAsync::AreaName' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestUnloadAreaAsync, CallFunc_AddLevelCommand_CommandNum) == 0x000008, "Member 'BP_LevelManager_C_RequestUnloadAreaAsync::CallFunc_AddLevelCommand_CommandNum' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestUnloadAreaAsync, CallFunc_IsAreaInLoadedAreaInfosWithCondition_IsLoaded) == 0x00000C, "Member 'BP_LevelManager_C_RequestUnloadAreaAsync::CallFunc_IsAreaInLoadedAreaInfosWithCondition_IsLoaded' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestUnloadAreaAsync, CallFunc_IsAreaInLoadedAreaInfosWithCondition_IsExist) == 0x00000D, "Member 'BP_LevelManager_C_RequestUnloadAreaAsync::CallFunc_IsAreaInLoadedAreaInfosWithCondition_IsExist' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestUnloadAreaAsync, CallFunc_IsAreaInLoadedAreaInfosWithCondition_AreaInfo) == 0x000010, "Member 'BP_LevelManager_C_RequestUnloadAreaAsync::CallFunc_IsAreaInLoadedAreaInfosWithCondition_AreaInfo' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.SetAreaInfoStatus
// 0x0078 (0x0078 - 0x0000)
struct BP_LevelManager_C_SetAreaInfoStatus final
{
public:
	class FName                                   AreaName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_LevelLoadStatus                             Status;                                            // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Error;                                             // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	E_LevelLoadStatus                             OldStatus;                                         // 0x000A(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_LevelLoadStatus                             TmpStatus;                                         // 0x000B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAreaInLoadedAreaInfosWithCondition_IsLoaded; // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAreaInLoadedAreaInfosWithCondition_IsExist; // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D25[0x2];                                      // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_AreaInfo                            CallFunc_IsAreaInLoadedAreaInfosWithCondition_AreaInfo; // 0x0010(0x0068)(HasGetValueTypeHash)
};
static_assert(alignof(BP_LevelManager_C_SetAreaInfoStatus) == 0x000008, "Wrong alignment on BP_LevelManager_C_SetAreaInfoStatus");
static_assert(sizeof(BP_LevelManager_C_SetAreaInfoStatus) == 0x000078, "Wrong size on BP_LevelManager_C_SetAreaInfoStatus");
static_assert(offsetof(BP_LevelManager_C_SetAreaInfoStatus, AreaName) == 0x000000, "Member 'BP_LevelManager_C_SetAreaInfoStatus::AreaName' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_SetAreaInfoStatus, Status) == 0x000008, "Member 'BP_LevelManager_C_SetAreaInfoStatus::Status' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_SetAreaInfoStatus, Error) == 0x000009, "Member 'BP_LevelManager_C_SetAreaInfoStatus::Error' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_SetAreaInfoStatus, OldStatus) == 0x00000A, "Member 'BP_LevelManager_C_SetAreaInfoStatus::OldStatus' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_SetAreaInfoStatus, TmpStatus) == 0x00000B, "Member 'BP_LevelManager_C_SetAreaInfoStatus::TmpStatus' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_SetAreaInfoStatus, CallFunc_IsAreaInLoadedAreaInfosWithCondition_IsLoaded) == 0x00000C, "Member 'BP_LevelManager_C_SetAreaInfoStatus::CallFunc_IsAreaInLoadedAreaInfosWithCondition_IsLoaded' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_SetAreaInfoStatus, CallFunc_IsAreaInLoadedAreaInfosWithCondition_IsExist) == 0x00000D, "Member 'BP_LevelManager_C_SetAreaInfoStatus::CallFunc_IsAreaInLoadedAreaInfosWithCondition_IsExist' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_SetAreaInfoStatus, CallFunc_IsAreaInLoadedAreaInfosWithCondition_AreaInfo) == 0x000010, "Member 'BP_LevelManager_C_SetAreaInfoStatus::CallFunc_IsAreaInLoadedAreaInfosWithCondition_AreaInfo' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.UpdateCurrentLevelCommandStatus
// 0x0001 (0x0001 - 0x0000)
struct BP_LevelManager_C_UpdateCurrentLevelCommandStatus final
{
public:
	E_LevelCommandStatus                          Status;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LevelManager_C_UpdateCurrentLevelCommandStatus) == 0x000001, "Wrong alignment on BP_LevelManager_C_UpdateCurrentLevelCommandStatus");
static_assert(sizeof(BP_LevelManager_C_UpdateCurrentLevelCommandStatus) == 0x000001, "Wrong size on BP_LevelManager_C_UpdateCurrentLevelCommandStatus");
static_assert(offsetof(BP_LevelManager_C_UpdateCurrentLevelCommandStatus, Status) == 0x000000, "Member 'BP_LevelManager_C_UpdateCurrentLevelCommandStatus::Status' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.DebugPrintArealInfoMap
// 0x01A0 (0x01A0 - 0x0000)
struct BP_LevelManager_C_DebugPrintArealInfoMap final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Map_Length_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D26[0x4];                                      // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_AreaInfo>                    CallFunc_Map_Values_Values;                        // 0x0010(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D27[0x7];                                      // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_AreaInfo                            CallFunc_Array_Get_Item;                           // 0x0028(0x0068)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D28[0x4];                                      // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D29[0x7];                                      // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x00B0(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x00C8(0x0040)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0108(0x0018)()
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D2A[0x4];                                      // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0128(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0168(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0178(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0190(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LevelManager_C_DebugPrintArealInfoMap) == 0x000008, "Wrong alignment on BP_LevelManager_C_DebugPrintArealInfoMap");
static_assert(sizeof(BP_LevelManager_C_DebugPrintArealInfoMap) == 0x0001A0, "Wrong size on BP_LevelManager_C_DebugPrintArealInfoMap");
static_assert(offsetof(BP_LevelManager_C_DebugPrintArealInfoMap, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_LevelManager_C_DebugPrintArealInfoMap::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_DebugPrintArealInfoMap, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_LevelManager_C_DebugPrintArealInfoMap::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_DebugPrintArealInfoMap, CallFunc_Map_Length_ReturnValue) == 0x000008, "Member 'BP_LevelManager_C_DebugPrintArealInfoMap::CallFunc_Map_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_DebugPrintArealInfoMap, CallFunc_Map_Values_Values) == 0x000010, "Member 'BP_LevelManager_C_DebugPrintArealInfoMap::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_DebugPrintArealInfoMap, CallFunc_Greater_IntInt_ReturnValue) == 0x000020, "Member 'BP_LevelManager_C_DebugPrintArealInfoMap::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_DebugPrintArealInfoMap, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_LevelManager_C_DebugPrintArealInfoMap::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_DebugPrintArealInfoMap, CallFunc_Array_Length_ReturnValue) == 0x000090, "Member 'BP_LevelManager_C_DebugPrintArealInfoMap::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_DebugPrintArealInfoMap, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000098, "Member 'BP_LevelManager_C_DebugPrintArealInfoMap::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_DebugPrintArealInfoMap, CallFunc_Less_IntInt_ReturnValue) == 0x0000A8, "Member 'BP_LevelManager_C_DebugPrintArealInfoMap::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_DebugPrintArealInfoMap, CallFunc_Conv_StringToText_ReturnValue) == 0x0000B0, "Member 'BP_LevelManager_C_DebugPrintArealInfoMap::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_DebugPrintArealInfoMap, K2Node_MakeStruct_FormatArgumentData) == 0x0000C8, "Member 'BP_LevelManager_C_DebugPrintArealInfoMap::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_DebugPrintArealInfoMap, CallFunc_Conv_NameToText_ReturnValue) == 0x000108, "Member 'BP_LevelManager_C_DebugPrintArealInfoMap::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_DebugPrintArealInfoMap, CallFunc_Add_IntInt_ReturnValue) == 0x000120, "Member 'BP_LevelManager_C_DebugPrintArealInfoMap::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_DebugPrintArealInfoMap, K2Node_MakeStruct_FormatArgumentData_1) == 0x000128, "Member 'BP_LevelManager_C_DebugPrintArealInfoMap::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_DebugPrintArealInfoMap, K2Node_MakeArray_Array) == 0x000168, "Member 'BP_LevelManager_C_DebugPrintArealInfoMap::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_DebugPrintArealInfoMap, CallFunc_Format_ReturnValue) == 0x000178, "Member 'BP_LevelManager_C_DebugPrintArealInfoMap::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_DebugPrintArealInfoMap, CallFunc_Conv_TextToString_ReturnValue) == 0x000190, "Member 'BP_LevelManager_C_DebugPrintArealInfoMap::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.RemoveLoadedAreaInfoForce
// 0x000C (0x000C - 0x0000)
struct BP_LevelManager_C_RemoveLoadedAreaInfoForce final
{
public:
	class FName                                   AreaName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Remove_ReturnValue;                   // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LevelManager_C_RemoveLoadedAreaInfoForce) == 0x000004, "Wrong alignment on BP_LevelManager_C_RemoveLoadedAreaInfoForce");
static_assert(sizeof(BP_LevelManager_C_RemoveLoadedAreaInfoForce) == 0x00000C, "Wrong size on BP_LevelManager_C_RemoveLoadedAreaInfoForce");
static_assert(offsetof(BP_LevelManager_C_RemoveLoadedAreaInfoForce, AreaName) == 0x000000, "Member 'BP_LevelManager_C_RemoveLoadedAreaInfoForce::AreaName' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RemoveLoadedAreaInfoForce, CallFunc_Map_Remove_ReturnValue) == 0x000008, "Member 'BP_LevelManager_C_RemoveLoadedAreaInfoForce::CallFunc_Map_Remove_ReturnValue' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.RemoveLoadedAreaInfo
// 0x00A0 (0x00A0 - 0x0000)
struct BP_LevelManager_C_RemoveLoadedAreaInfo final
{
public:
	class FName                                   AreaName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0008(0x0018)()
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D2B[0x7];                                      // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0028(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0068(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0078(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LevelManager_C_RemoveLoadedAreaInfo) == 0x000008, "Wrong alignment on BP_LevelManager_C_RemoveLoadedAreaInfo");
static_assert(sizeof(BP_LevelManager_C_RemoveLoadedAreaInfo) == 0x0000A0, "Wrong size on BP_LevelManager_C_RemoveLoadedAreaInfo");
static_assert(offsetof(BP_LevelManager_C_RemoveLoadedAreaInfo, AreaName) == 0x000000, "Member 'BP_LevelManager_C_RemoveLoadedAreaInfo::AreaName' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RemoveLoadedAreaInfo, CallFunc_Conv_NameToText_ReturnValue) == 0x000008, "Member 'BP_LevelManager_C_RemoveLoadedAreaInfo::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RemoveLoadedAreaInfo, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000020, "Member 'BP_LevelManager_C_RemoveLoadedAreaInfo::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RemoveLoadedAreaInfo, K2Node_MakeStruct_FormatArgumentData) == 0x000028, "Member 'BP_LevelManager_C_RemoveLoadedAreaInfo::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RemoveLoadedAreaInfo, K2Node_MakeArray_Array) == 0x000068, "Member 'BP_LevelManager_C_RemoveLoadedAreaInfo::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RemoveLoadedAreaInfo, CallFunc_Format_ReturnValue) == 0x000078, "Member 'BP_LevelManager_C_RemoveLoadedAreaInfo::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RemoveLoadedAreaInfo, CallFunc_Conv_TextToString_ReturnValue) == 0x000090, "Member 'BP_LevelManager_C_RemoveLoadedAreaInfo::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.GetNotCurrentAreaName
// 0x0058 (0x0058 - 0x0000)
struct BP_LevelManager_C_GetNotCurrentAreaName final
{
public:
	TArray<class FName>                           AreaNames;                                         // 0x0000(0x0010)(Parm, OutParm, HasGetValueTypeHash)
	bool                                          IsFound;                                           // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D2C[0x7];                                      // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           Result;                                            // 0x0018(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_Map_Keys_Keys;                            // 0x0028(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D2D[0x3];                                      // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D2E[0x3];                                      // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LevelManager_C_GetNotCurrentAreaName) == 0x000008, "Wrong alignment on BP_LevelManager_C_GetNotCurrentAreaName");
static_assert(sizeof(BP_LevelManager_C_GetNotCurrentAreaName) == 0x000058, "Wrong size on BP_LevelManager_C_GetNotCurrentAreaName");
static_assert(offsetof(BP_LevelManager_C_GetNotCurrentAreaName, AreaNames) == 0x000000, "Member 'BP_LevelManager_C_GetNotCurrentAreaName::AreaNames' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetNotCurrentAreaName, IsFound) == 0x000010, "Member 'BP_LevelManager_C_GetNotCurrentAreaName::IsFound' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetNotCurrentAreaName, Result) == 0x000018, "Member 'BP_LevelManager_C_GetNotCurrentAreaName::Result' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetNotCurrentAreaName, CallFunc_Map_Keys_Keys) == 0x000028, "Member 'BP_LevelManager_C_GetNotCurrentAreaName::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetNotCurrentAreaName, Temp_int_Array_Index_Variable) == 0x000038, "Member 'BP_LevelManager_C_GetNotCurrentAreaName::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetNotCurrentAreaName, CallFunc_Array_Length_ReturnValue) == 0x00003C, "Member 'BP_LevelManager_C_GetNotCurrentAreaName::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetNotCurrentAreaName, CallFunc_Array_Add_ReturnValue) == 0x000040, "Member 'BP_LevelManager_C_GetNotCurrentAreaName::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetNotCurrentAreaName, CallFunc_NotEqual_NameName_ReturnValue) == 0x000044, "Member 'BP_LevelManager_C_GetNotCurrentAreaName::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetNotCurrentAreaName, Temp_int_Loop_Counter_Variable) == 0x000048, "Member 'BP_LevelManager_C_GetNotCurrentAreaName::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetNotCurrentAreaName, CallFunc_Less_IntInt_ReturnValue) == 0x00004C, "Member 'BP_LevelManager_C_GetNotCurrentAreaName::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetNotCurrentAreaName, CallFunc_Add_IntInt_ReturnValue) == 0x000050, "Member 'BP_LevelManager_C_GetNotCurrentAreaName::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.IsLevelsUnloaded
// 0x0080 (0x0080 - 0x0000)
struct BP_LevelManager_C_IsLevelsUnloaded final
{
public:
	TArray<TSoftObjectPtr<class UObject>>         Levels;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	bool                                          CheckRaw;                                          // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Unloaded;                                          // 0x0011(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D2F[0x6];                                      // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UObject>                 Object;                                            // 0x0018(0x0028)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D30[0x3];                                      // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D31[0x3];                                      // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_ObjectSoftRefToName_ReturnValue;          // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelStreaming*                        CallFunc_GetStreamingLevel_ReturnValue;            // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLevelLoaded_ReturnValue;                // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D32[0x3];                                      // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LevelManager_C_IsLevelsUnloaded) == 0x000008, "Wrong alignment on BP_LevelManager_C_IsLevelsUnloaded");
static_assert(sizeof(BP_LevelManager_C_IsLevelsUnloaded) == 0x000080, "Wrong size on BP_LevelManager_C_IsLevelsUnloaded");
static_assert(offsetof(BP_LevelManager_C_IsLevelsUnloaded, Levels) == 0x000000, "Member 'BP_LevelManager_C_IsLevelsUnloaded::Levels' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsLevelsUnloaded, CheckRaw) == 0x000010, "Member 'BP_LevelManager_C_IsLevelsUnloaded::CheckRaw' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsLevelsUnloaded, Unloaded) == 0x000011, "Member 'BP_LevelManager_C_IsLevelsUnloaded::Unloaded' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsLevelsUnloaded, Object) == 0x000018, "Member 'BP_LevelManager_C_IsLevelsUnloaded::Object' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsLevelsUnloaded, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'BP_LevelManager_C_IsLevelsUnloaded::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsLevelsUnloaded, CallFunc_Array_Length_ReturnValue_1) == 0x000044, "Member 'BP_LevelManager_C_IsLevelsUnloaded::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsLevelsUnloaded, Temp_int_Loop_Counter_Variable) == 0x000048, "Member 'BP_LevelManager_C_IsLevelsUnloaded::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsLevelsUnloaded, CallFunc_Less_IntInt_ReturnValue) == 0x00004C, "Member 'BP_LevelManager_C_IsLevelsUnloaded::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsLevelsUnloaded, CallFunc_Add_IntInt_ReturnValue) == 0x000050, "Member 'BP_LevelManager_C_IsLevelsUnloaded::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsLevelsUnloaded, Temp_int_Array_Index_Variable) == 0x000054, "Member 'BP_LevelManager_C_IsLevelsUnloaded::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsLevelsUnloaded, Temp_int_Loop_Counter_Variable_1) == 0x000058, "Member 'BP_LevelManager_C_IsLevelsUnloaded::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsLevelsUnloaded, CallFunc_Less_IntInt_ReturnValue_1) == 0x00005C, "Member 'BP_LevelManager_C_IsLevelsUnloaded::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsLevelsUnloaded, CallFunc_ObjectSoftRefToName_ReturnValue) == 0x000060, "Member 'BP_LevelManager_C_IsLevelsUnloaded::CallFunc_ObjectSoftRefToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsLevelsUnloaded, CallFunc_GetStreamingLevel_ReturnValue) == 0x000068, "Member 'BP_LevelManager_C_IsLevelsUnloaded::CallFunc_GetStreamingLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsLevelsUnloaded, CallFunc_Add_IntInt_ReturnValue_1) == 0x000070, "Member 'BP_LevelManager_C_IsLevelsUnloaded::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsLevelsUnloaded, CallFunc_IsLevelLoaded_ReturnValue) == 0x000074, "Member 'BP_LevelManager_C_IsLevelsUnloaded::CallFunc_IsLevelLoaded_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsLevelsUnloaded, Temp_int_Array_Index_Variable_1) == 0x000078, "Member 'BP_LevelManager_C_IsLevelsUnloaded::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsLevelsUnloaded, CallFunc_Array_Contains_ReturnValue) == 0x00007C, "Member 'BP_LevelManager_C_IsLevelsUnloaded::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.IsLevelsLoaded
// 0x0098 (0x0098 - 0x0000)
struct BP_LevelManager_C_IsLevelsLoaded final
{
public:
	TArray<TSoftObjectPtr<class UObject>>         Levels;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	bool                                          CheckRaw;                                          // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsLoaded;                                          // 0x0011(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D33[0x2];                                      // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_ObjectSoftRefToName_ReturnValue;          // 0x0024(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D34[0x3];                                      // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelStreaming*                        CallFunc_GetStreamingLevel_ReturnValue;            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLevelLoaded_ReturnValue;                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D35[0x3];                                      // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D36[0x3];                                      // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_ObjectSoftRefToName_ReturnValue_1;        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D37[0x7];                                      // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D38[0x3];                                      // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LevelManager_C_IsLevelsLoaded) == 0x000008, "Wrong alignment on BP_LevelManager_C_IsLevelsLoaded");
static_assert(sizeof(BP_LevelManager_C_IsLevelsLoaded) == 0x000098, "Wrong size on BP_LevelManager_C_IsLevelsLoaded");
static_assert(offsetof(BP_LevelManager_C_IsLevelsLoaded, Levels) == 0x000000, "Member 'BP_LevelManager_C_IsLevelsLoaded::Levels' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsLevelsLoaded, CheckRaw) == 0x000010, "Member 'BP_LevelManager_C_IsLevelsLoaded::CheckRaw' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsLevelsLoaded, IsLoaded) == 0x000011, "Member 'BP_LevelManager_C_IsLevelsLoaded::IsLoaded' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsLevelsLoaded, CallFunc_Array_Length_ReturnValue) == 0x000014, "Member 'BP_LevelManager_C_IsLevelsLoaded::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsLevelsLoaded, CallFunc_Array_Length_ReturnValue_1) == 0x000018, "Member 'BP_LevelManager_C_IsLevelsLoaded::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsLevelsLoaded, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'BP_LevelManager_C_IsLevelsLoaded::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsLevelsLoaded, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'BP_LevelManager_C_IsLevelsLoaded::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsLevelsLoaded, CallFunc_ObjectSoftRefToName_ReturnValue) == 0x000024, "Member 'BP_LevelManager_C_IsLevelsLoaded::CallFunc_ObjectSoftRefToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsLevelsLoaded, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'BP_LevelManager_C_IsLevelsLoaded::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsLevelsLoaded, CallFunc_GetStreamingLevel_ReturnValue) == 0x000030, "Member 'BP_LevelManager_C_IsLevelsLoaded::CallFunc_GetStreamingLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsLevelsLoaded, CallFunc_IsLevelLoaded_ReturnValue) == 0x000038, "Member 'BP_LevelManager_C_IsLevelsLoaded::CallFunc_IsLevelLoaded_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsLevelsLoaded, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'BP_LevelManager_C_IsLevelsLoaded::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsLevelsLoaded, Temp_int_Array_Index_Variable_1) == 0x000040, "Member 'BP_LevelManager_C_IsLevelsLoaded::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsLevelsLoaded, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000044, "Member 'BP_LevelManager_C_IsLevelsLoaded::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsLevelsLoaded, CallFunc_ObjectSoftRefToName_ReturnValue_1) == 0x000048, "Member 'BP_LevelManager_C_IsLevelsLoaded::CallFunc_ObjectSoftRefToName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsLevelsLoaded, CallFunc_Conv_NameToString_ReturnValue) == 0x000050, "Member 'BP_LevelManager_C_IsLevelsLoaded::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsLevelsLoaded, CallFunc_Array_Contains_ReturnValue) == 0x000060, "Member 'BP_LevelManager_C_IsLevelsLoaded::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsLevelsLoaded, CallFunc_Concat_StrStr_ReturnValue) == 0x000068, "Member 'BP_LevelManager_C_IsLevelsLoaded::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsLevelsLoaded, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000078, "Member 'BP_LevelManager_C_IsLevelsLoaded::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsLevelsLoaded, Temp_int_Loop_Counter_Variable_1) == 0x000088, "Member 'BP_LevelManager_C_IsLevelsLoaded::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsLevelsLoaded, CallFunc_Less_IntInt_ReturnValue_1) == 0x00008C, "Member 'BP_LevelManager_C_IsLevelsLoaded::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsLevelsLoaded, CallFunc_Add_IntInt_ReturnValue_1) == 0x000090, "Member 'BP_LevelManager_C_IsLevelsLoaded::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.AddOrUpdateLoadedAreaInfo
// 0x0070 (0x0070 - 0x0000)
struct BP_LevelManager_C_AddOrUpdateLoadedAreaInfo final
{
public:
	class FName                                   Param_Name;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_AreaInfo                            AreaInfo;                                          // 0x0008(0x0068)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_LevelManager_C_AddOrUpdateLoadedAreaInfo) == 0x000008, "Wrong alignment on BP_LevelManager_C_AddOrUpdateLoadedAreaInfo");
static_assert(sizeof(BP_LevelManager_C_AddOrUpdateLoadedAreaInfo) == 0x000070, "Wrong size on BP_LevelManager_C_AddOrUpdateLoadedAreaInfo");
static_assert(offsetof(BP_LevelManager_C_AddOrUpdateLoadedAreaInfo, Param_Name) == 0x000000, "Member 'BP_LevelManager_C_AddOrUpdateLoadedAreaInfo::Param_Name' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_AddOrUpdateLoadedAreaInfo, AreaInfo) == 0x000008, "Member 'BP_LevelManager_C_AddOrUpdateLoadedAreaInfo::AreaInfo' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.RemoveRedundantLevelCommand
// 0x00B8 (0x00B8 - 0x0000)
struct BP_LevelManager_C_RemoveRedundantLevelCommand final
{
public:
	class FName                                   LevelName;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_LevelManagerCommand                 QueueCommand;                                      // 0x0008(0x0048)(Edit, BlueprintVisible, HasGetValueTypeHash)
	bool                                          NeedDelete;                                        // 0x0050(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D39[0x3];                                      // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D3A[0x4];                                      // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_LevelManagerCommand                 CallFunc_Array_Get_Item;                           // 0x0068(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LevelManager_C_RemoveRedundantLevelCommand) == 0x000008, "Wrong alignment on BP_LevelManager_C_RemoveRedundantLevelCommand");
static_assert(sizeof(BP_LevelManager_C_RemoveRedundantLevelCommand) == 0x0000B8, "Wrong size on BP_LevelManager_C_RemoveRedundantLevelCommand");
static_assert(offsetof(BP_LevelManager_C_RemoveRedundantLevelCommand, LevelName) == 0x000000, "Member 'BP_LevelManager_C_RemoveRedundantLevelCommand::LevelName' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RemoveRedundantLevelCommand, QueueCommand) == 0x000008, "Member 'BP_LevelManager_C_RemoveRedundantLevelCommand::QueueCommand' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RemoveRedundantLevelCommand, NeedDelete) == 0x000050, "Member 'BP_LevelManager_C_RemoveRedundantLevelCommand::NeedDelete' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RemoveRedundantLevelCommand, Temp_int_Array_Index_Variable) == 0x000054, "Member 'BP_LevelManager_C_RemoveRedundantLevelCommand::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RemoveRedundantLevelCommand, Temp_int_Loop_Counter_Variable) == 0x000058, "Member 'BP_LevelManager_C_RemoveRedundantLevelCommand::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RemoveRedundantLevelCommand, CallFunc_Add_IntInt_ReturnValue) == 0x00005C, "Member 'BP_LevelManager_C_RemoveRedundantLevelCommand::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RemoveRedundantLevelCommand, CallFunc_Array_Length_ReturnValue) == 0x000060, "Member 'BP_LevelManager_C_RemoveRedundantLevelCommand::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RemoveRedundantLevelCommand, CallFunc_Array_Get_Item) == 0x000068, "Member 'BP_LevelManager_C_RemoveRedundantLevelCommand::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RemoveRedundantLevelCommand, CallFunc_Less_IntInt_ReturnValue) == 0x0000B0, "Member 'BP_LevelManager_C_RemoveRedundantLevelCommand::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RemoveRedundantLevelCommand, CallFunc_Array_RemoveItem_ReturnValue) == 0x0000B1, "Member 'BP_LevelManager_C_RemoveRedundantLevelCommand::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RemoveRedundantLevelCommand, K2Node_SwitchEnum_CmpSuccess) == 0x0000B2, "Member 'BP_LevelManager_C_RemoveRedundantLevelCommand::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.RequestSetAreaOnlyVisibleAsync
// 0x0168 (0x0168 - 0x0000)
struct BP_LevelManager_C_RequestSetAreaOnlyVisibleAsync final
{
public:
	class FName                                   AreaName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Async;                                             // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D3B[0x7];                                      // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftObjectPtr<class UObject>>         CallFunc_GetSceneSystemLevelsByArea_Levels;        // 0x0010(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UObject>>         CallFunc_GetAllLevelInArea_Levels;                 // 0x0020(0x0010)(ReferenceParm, HasGetValueTypeHash)
	struct FS_AreaInfo                            CallFunc_GetAllLevelInArea_AreaInfo;               // 0x0030(0x0068)(HasGetValueTypeHash)
	bool                                          CallFunc_GetAllLevelInArea_Error;                  // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D3C[0x7];                                      // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAreaInLoadedAreaInfosWithCondition_IsLoaded; // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAreaInLoadedAreaInfosWithCondition_IsExist; // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D3D[0x6];                                      // 0x00B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_AreaInfo                            CallFunc_IsAreaInLoadedAreaInfosWithCondition_AreaInfo; // 0x00B8(0x0068)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D3E[0x3];                                      // 0x012D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_AddLevelCommand_CommandNum;               // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddLevelCommand_CommandNum_1;             // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddLevelCommand_CommandNum_2;             // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddLevelCommand_CommandNum_3;             // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue_1;             // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D3F[0x2];                                      // 0x0142(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0148(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0158(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LevelManager_C_RequestSetAreaOnlyVisibleAsync) == 0x000008, "Wrong alignment on BP_LevelManager_C_RequestSetAreaOnlyVisibleAsync");
static_assert(sizeof(BP_LevelManager_C_RequestSetAreaOnlyVisibleAsync) == 0x000168, "Wrong size on BP_LevelManager_C_RequestSetAreaOnlyVisibleAsync");
static_assert(offsetof(BP_LevelManager_C_RequestSetAreaOnlyVisibleAsync, AreaName) == 0x000000, "Member 'BP_LevelManager_C_RequestSetAreaOnlyVisibleAsync::AreaName' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetAreaOnlyVisibleAsync, Async) == 0x000008, "Member 'BP_LevelManager_C_RequestSetAreaOnlyVisibleAsync::Async' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetAreaOnlyVisibleAsync, CallFunc_GetSceneSystemLevelsByArea_Levels) == 0x000010, "Member 'BP_LevelManager_C_RequestSetAreaOnlyVisibleAsync::CallFunc_GetSceneSystemLevelsByArea_Levels' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetAreaOnlyVisibleAsync, CallFunc_GetAllLevelInArea_Levels) == 0x000020, "Member 'BP_LevelManager_C_RequestSetAreaOnlyVisibleAsync::CallFunc_GetAllLevelInArea_Levels' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetAreaOnlyVisibleAsync, CallFunc_GetAllLevelInArea_AreaInfo) == 0x000030, "Member 'BP_LevelManager_C_RequestSetAreaOnlyVisibleAsync::CallFunc_GetAllLevelInArea_AreaInfo' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetAreaOnlyVisibleAsync, CallFunc_GetAllLevelInArea_Error) == 0x000098, "Member 'BP_LevelManager_C_RequestSetAreaOnlyVisibleAsync::CallFunc_GetAllLevelInArea_Error' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetAreaOnlyVisibleAsync, CallFunc_Conv_NameToString_ReturnValue) == 0x0000A0, "Member 'BP_LevelManager_C_RequestSetAreaOnlyVisibleAsync::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetAreaOnlyVisibleAsync, CallFunc_IsAreaInLoadedAreaInfosWithCondition_IsLoaded) == 0x0000B0, "Member 'BP_LevelManager_C_RequestSetAreaOnlyVisibleAsync::CallFunc_IsAreaInLoadedAreaInfosWithCondition_IsLoaded' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetAreaOnlyVisibleAsync, CallFunc_IsAreaInLoadedAreaInfosWithCondition_IsExist) == 0x0000B1, "Member 'BP_LevelManager_C_RequestSetAreaOnlyVisibleAsync::CallFunc_IsAreaInLoadedAreaInfosWithCondition_IsExist' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetAreaOnlyVisibleAsync, CallFunc_IsAreaInLoadedAreaInfosWithCondition_AreaInfo) == 0x0000B8, "Member 'BP_LevelManager_C_RequestSetAreaOnlyVisibleAsync::CallFunc_IsAreaInLoadedAreaInfosWithCondition_AreaInfo' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetAreaOnlyVisibleAsync, CallFunc_Array_Length_ReturnValue) == 0x000120, "Member 'BP_LevelManager_C_RequestSetAreaOnlyVisibleAsync::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetAreaOnlyVisibleAsync, Temp_int_Loop_Counter_Variable) == 0x000124, "Member 'BP_LevelManager_C_RequestSetAreaOnlyVisibleAsync::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetAreaOnlyVisibleAsync, Temp_int_Array_Index_Variable) == 0x000128, "Member 'BP_LevelManager_C_RequestSetAreaOnlyVisibleAsync::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetAreaOnlyVisibleAsync, CallFunc_Less_IntInt_ReturnValue) == 0x00012C, "Member 'BP_LevelManager_C_RequestSetAreaOnlyVisibleAsync::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetAreaOnlyVisibleAsync, CallFunc_AddLevelCommand_CommandNum) == 0x000130, "Member 'BP_LevelManager_C_RequestSetAreaOnlyVisibleAsync::CallFunc_AddLevelCommand_CommandNum' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetAreaOnlyVisibleAsync, CallFunc_AddLevelCommand_CommandNum_1) == 0x000134, "Member 'BP_LevelManager_C_RequestSetAreaOnlyVisibleAsync::CallFunc_AddLevelCommand_CommandNum_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetAreaOnlyVisibleAsync, CallFunc_AddLevelCommand_CommandNum_2) == 0x000138, "Member 'BP_LevelManager_C_RequestSetAreaOnlyVisibleAsync::CallFunc_AddLevelCommand_CommandNum_2' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetAreaOnlyVisibleAsync, CallFunc_AddLevelCommand_CommandNum_3) == 0x00013C, "Member 'BP_LevelManager_C_RequestSetAreaOnlyVisibleAsync::CallFunc_AddLevelCommand_CommandNum_3' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetAreaOnlyVisibleAsync, CallFunc_Array_Contains_ReturnValue) == 0x000140, "Member 'BP_LevelManager_C_RequestSetAreaOnlyVisibleAsync::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetAreaOnlyVisibleAsync, CallFunc_Array_Contains_ReturnValue_1) == 0x000141, "Member 'BP_LevelManager_C_RequestSetAreaOnlyVisibleAsync::CallFunc_Array_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetAreaOnlyVisibleAsync, CallFunc_Add_IntInt_ReturnValue) == 0x000144, "Member 'BP_LevelManager_C_RequestSetAreaOnlyVisibleAsync::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetAreaOnlyVisibleAsync, CallFunc_Concat_StrStr_ReturnValue) == 0x000148, "Member 'BP_LevelManager_C_RequestSetAreaOnlyVisibleAsync::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetAreaOnlyVisibleAsync, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000158, "Member 'BP_LevelManager_C_RequestSetAreaOnlyVisibleAsync::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.GetNotCurrentLoadedAreaInfos
// 0x00C8 (0x00C8 - 0x0000)
struct BP_LevelManager_C_GetNotCurrentLoadedAreaInfos final
{
public:
	class FName                                   AreaName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FS_AreaInfo>                    Infos;                                             // 0x0008(0x0010)(Parm, OutParm, HasGetValueTypeHash)
	TArray<struct FS_AreaInfo>                    Result;                                            // 0x0018(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D40[0x4];                                      // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_Map_Keys_Keys;                            // 0x0038(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D41[0x3];                                      // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_AreaInfo                            CallFunc_Map_Find_Value;                           // 0x0050(0x0068)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D42[0x3];                                      // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LevelManager_C_GetNotCurrentLoadedAreaInfos) == 0x000008, "Wrong alignment on BP_LevelManager_C_GetNotCurrentLoadedAreaInfos");
static_assert(sizeof(BP_LevelManager_C_GetNotCurrentLoadedAreaInfos) == 0x0000C8, "Wrong size on BP_LevelManager_C_GetNotCurrentLoadedAreaInfos");
static_assert(offsetof(BP_LevelManager_C_GetNotCurrentLoadedAreaInfos, AreaName) == 0x000000, "Member 'BP_LevelManager_C_GetNotCurrentLoadedAreaInfos::AreaName' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetNotCurrentLoadedAreaInfos, Infos) == 0x000008, "Member 'BP_LevelManager_C_GetNotCurrentLoadedAreaInfos::Infos' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetNotCurrentLoadedAreaInfos, Result) == 0x000018, "Member 'BP_LevelManager_C_GetNotCurrentLoadedAreaInfos::Result' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetNotCurrentLoadedAreaInfos, Temp_int_Array_Index_Variable) == 0x000028, "Member 'BP_LevelManager_C_GetNotCurrentLoadedAreaInfos::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetNotCurrentLoadedAreaInfos, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'BP_LevelManager_C_GetNotCurrentLoadedAreaInfos::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetNotCurrentLoadedAreaInfos, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'BP_LevelManager_C_GetNotCurrentLoadedAreaInfos::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetNotCurrentLoadedAreaInfos, CallFunc_Map_Keys_Keys) == 0x000038, "Member 'BP_LevelManager_C_GetNotCurrentLoadedAreaInfos::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetNotCurrentLoadedAreaInfos, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'BP_LevelManager_C_GetNotCurrentLoadedAreaInfos::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetNotCurrentLoadedAreaInfos, CallFunc_Less_IntInt_ReturnValue) == 0x00004C, "Member 'BP_LevelManager_C_GetNotCurrentLoadedAreaInfos::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetNotCurrentLoadedAreaInfos, CallFunc_Map_Find_Value) == 0x000050, "Member 'BP_LevelManager_C_GetNotCurrentLoadedAreaInfos::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetNotCurrentLoadedAreaInfos, CallFunc_Map_Find_ReturnValue) == 0x0000B8, "Member 'BP_LevelManager_C_GetNotCurrentLoadedAreaInfos::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetNotCurrentLoadedAreaInfos, CallFunc_Array_Add_ReturnValue) == 0x0000BC, "Member 'BP_LevelManager_C_GetNotCurrentLoadedAreaInfos::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetNotCurrentLoadedAreaInfos, CallFunc_NotEqual_NameName_ReturnValue) == 0x0000C0, "Member 'BP_LevelManager_C_GetNotCurrentLoadedAreaInfos::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.RequestWaitLoadArea
// 0x0014 (0x0014 - 0x0000)
struct BP_LevelManager_C_RequestWaitLoadArea final
{
public:
	class FName                                   AreaName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Async;                                             // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D43[0x3];                                      // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_AddLevelCommand_CommandNum;               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddLevelCommand_CommandNum_1;             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LevelManager_C_RequestWaitLoadArea) == 0x000004, "Wrong alignment on BP_LevelManager_C_RequestWaitLoadArea");
static_assert(sizeof(BP_LevelManager_C_RequestWaitLoadArea) == 0x000014, "Wrong size on BP_LevelManager_C_RequestWaitLoadArea");
static_assert(offsetof(BP_LevelManager_C_RequestWaitLoadArea, AreaName) == 0x000000, "Member 'BP_LevelManager_C_RequestWaitLoadArea::AreaName' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestWaitLoadArea, Async) == 0x000008, "Member 'BP_LevelManager_C_RequestWaitLoadArea::Async' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestWaitLoadArea, CallFunc_AddLevelCommand_CommandNum) == 0x00000C, "Member 'BP_LevelManager_C_RequestWaitLoadArea::CallFunc_AddLevelCommand_CommandNum' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestWaitLoadArea, CallFunc_AddLevelCommand_CommandNum_1) == 0x000010, "Member 'BP_LevelManager_C_RequestWaitLoadArea::CallFunc_AddLevelCommand_CommandNum_1' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.RequestWaitUnloadArea
// 0x001C (0x001C - 0x0000)
struct BP_LevelManager_C_RequestWaitUnloadArea final
{
public:
	class FName                                   AreaName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   NextAreaName;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Async;                                             // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D44[0x3];                                      // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_AddLevelCommand_CommandNum;               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddLevelCommand_CommandNum_1;             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LevelManager_C_RequestWaitUnloadArea) == 0x000004, "Wrong alignment on BP_LevelManager_C_RequestWaitUnloadArea");
static_assert(sizeof(BP_LevelManager_C_RequestWaitUnloadArea) == 0x00001C, "Wrong size on BP_LevelManager_C_RequestWaitUnloadArea");
static_assert(offsetof(BP_LevelManager_C_RequestWaitUnloadArea, AreaName) == 0x000000, "Member 'BP_LevelManager_C_RequestWaitUnloadArea::AreaName' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestWaitUnloadArea, NextAreaName) == 0x000008, "Member 'BP_LevelManager_C_RequestWaitUnloadArea::NextAreaName' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestWaitUnloadArea, Async) == 0x000010, "Member 'BP_LevelManager_C_RequestWaitUnloadArea::Async' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestWaitUnloadArea, CallFunc_AddLevelCommand_CommandNum) == 0x000014, "Member 'BP_LevelManager_C_RequestWaitUnloadArea::CallFunc_AddLevelCommand_CommandNum' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestWaitUnloadArea, CallFunc_AddLevelCommand_CommandNum_1) == 0x000018, "Member 'BP_LevelManager_C_RequestWaitUnloadArea::CallFunc_AddLevelCommand_CommandNum_1' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.UpdateLoadedAreaInfoStatus
// 0x0008 (0x0008 - 0x0000)
struct BP_LevelManager_C_UpdateLoadedAreaInfoStatus final
{
public:
	class FName                                   LoopKey;                                           // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LevelManager_C_UpdateLoadedAreaInfoStatus) == 0x000004, "Wrong alignment on BP_LevelManager_C_UpdateLoadedAreaInfoStatus");
static_assert(sizeof(BP_LevelManager_C_UpdateLoadedAreaInfoStatus) == 0x000008, "Wrong size on BP_LevelManager_C_UpdateLoadedAreaInfoStatus");
static_assert(offsetof(BP_LevelManager_C_UpdateLoadedAreaInfoStatus, LoopKey) == 0x000000, "Member 'BP_LevelManager_C_UpdateLoadedAreaInfoStatus::LoopKey' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.RequestChangeArea
// 0x0078 (0x0078 - 0x0000)
struct BP_LevelManager_C_RequestChangeArea final
{
public:
	class FName                                   AreaName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddLevelCommand_CommandNum;               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAreaInLoadedAreaInfosWithCondition_IsLoaded; // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAreaInLoadedAreaInfosWithCondition_IsExist; // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D45[0x2];                                      // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_AreaInfo                            CallFunc_IsAreaInLoadedAreaInfosWithCondition_AreaInfo; // 0x0010(0x0068)(HasGetValueTypeHash)
};
static_assert(alignof(BP_LevelManager_C_RequestChangeArea) == 0x000008, "Wrong alignment on BP_LevelManager_C_RequestChangeArea");
static_assert(sizeof(BP_LevelManager_C_RequestChangeArea) == 0x000078, "Wrong size on BP_LevelManager_C_RequestChangeArea");
static_assert(offsetof(BP_LevelManager_C_RequestChangeArea, AreaName) == 0x000000, "Member 'BP_LevelManager_C_RequestChangeArea::AreaName' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestChangeArea, CallFunc_AddLevelCommand_CommandNum) == 0x000008, "Member 'BP_LevelManager_C_RequestChangeArea::CallFunc_AddLevelCommand_CommandNum' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestChangeArea, CallFunc_IsAreaInLoadedAreaInfosWithCondition_IsLoaded) == 0x00000C, "Member 'BP_LevelManager_C_RequestChangeArea::CallFunc_IsAreaInLoadedAreaInfosWithCondition_IsLoaded' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestChangeArea, CallFunc_IsAreaInLoadedAreaInfosWithCondition_IsExist) == 0x00000D, "Member 'BP_LevelManager_C_RequestChangeArea::CallFunc_IsAreaInLoadedAreaInfosWithCondition_IsExist' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestChangeArea, CallFunc_IsAreaInLoadedAreaInfosWithCondition_AreaInfo) == 0x000010, "Member 'BP_LevelManager_C_RequestChangeArea::CallFunc_IsAreaInLoadedAreaInfosWithCondition_AreaInfo' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C._RequestUnloadAllArea
// 0x0030 (0x0030 - 0x0000)
struct BP_LevelManager_C__RequestUnloadAllArea final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D46[0x4];                                      // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_Map_Keys_Keys;                            // 0x0010(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0024(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LevelManager_C__RequestUnloadAllArea) == 0x000008, "Wrong alignment on BP_LevelManager_C__RequestUnloadAllArea");
static_assert(sizeof(BP_LevelManager_C__RequestUnloadAllArea) == 0x000030, "Wrong size on BP_LevelManager_C__RequestUnloadAllArea");
static_assert(offsetof(BP_LevelManager_C__RequestUnloadAllArea, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_LevelManager_C__RequestUnloadAllArea::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C__RequestUnloadAllArea, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_LevelManager_C__RequestUnloadAllArea::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C__RequestUnloadAllArea, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_LevelManager_C__RequestUnloadAllArea::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C__RequestUnloadAllArea, CallFunc_Map_Keys_Keys) == 0x000010, "Member 'BP_LevelManager_C__RequestUnloadAllArea::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C__RequestUnloadAllArea, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_LevelManager_C__RequestUnloadAllArea::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C__RequestUnloadAllArea, CallFunc_Array_Get_Item) == 0x000024, "Member 'BP_LevelManager_C__RequestUnloadAllArea::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C__RequestUnloadAllArea, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'BP_LevelManager_C__RequestUnloadAllArea::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C__RequestUnloadAllArea, CallFunc_EqualEqual_NameName_ReturnValue) == 0x00002D, "Member 'BP_LevelManager_C__RequestUnloadAllArea::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.IsAreaLevelsLoadedByAreaName
// 0x00E8 (0x00E8 - 0x0000)
struct BP_LevelManager_C_IsAreaLevelsLoadedByAreaName final
{
public:
	class FName                                   AreaName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RawCheck;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsLoaded;                                          // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsError;                                           // 0x000A(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D47[0x5];                                      // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_AreaInfo                            Area_Info;                                         // 0x0010(0x0068)(Parm, OutParm, HasGetValueTypeHash)
	struct FS_AreaInfo                            CallFunc_GetAreaInfo_AreaInfo;                     // 0x0078(0x0068)(HasGetValueTypeHash)
	bool                                          CallFunc_GetAreaInfo_Found;                        // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAreaLevelsLoadedByInfo_IsLoaded;        // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LevelManager_C_IsAreaLevelsLoadedByAreaName) == 0x000008, "Wrong alignment on BP_LevelManager_C_IsAreaLevelsLoadedByAreaName");
static_assert(sizeof(BP_LevelManager_C_IsAreaLevelsLoadedByAreaName) == 0x0000E8, "Wrong size on BP_LevelManager_C_IsAreaLevelsLoadedByAreaName");
static_assert(offsetof(BP_LevelManager_C_IsAreaLevelsLoadedByAreaName, AreaName) == 0x000000, "Member 'BP_LevelManager_C_IsAreaLevelsLoadedByAreaName::AreaName' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaLevelsLoadedByAreaName, RawCheck) == 0x000008, "Member 'BP_LevelManager_C_IsAreaLevelsLoadedByAreaName::RawCheck' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaLevelsLoadedByAreaName, IsLoaded) == 0x000009, "Member 'BP_LevelManager_C_IsAreaLevelsLoadedByAreaName::IsLoaded' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaLevelsLoadedByAreaName, IsError) == 0x00000A, "Member 'BP_LevelManager_C_IsAreaLevelsLoadedByAreaName::IsError' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaLevelsLoadedByAreaName, Area_Info) == 0x000010, "Member 'BP_LevelManager_C_IsAreaLevelsLoadedByAreaName::Area_Info' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaLevelsLoadedByAreaName, CallFunc_GetAreaInfo_AreaInfo) == 0x000078, "Member 'BP_LevelManager_C_IsAreaLevelsLoadedByAreaName::CallFunc_GetAreaInfo_AreaInfo' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaLevelsLoadedByAreaName, CallFunc_GetAreaInfo_Found) == 0x0000E0, "Member 'BP_LevelManager_C_IsAreaLevelsLoadedByAreaName::CallFunc_GetAreaInfo_Found' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaLevelsLoadedByAreaName, CallFunc_IsAreaLevelsLoadedByInfo_IsLoaded) == 0x0000E1, "Member 'BP_LevelManager_C_IsAreaLevelsLoadedByAreaName::CallFunc_IsAreaLevelsLoadedByInfo_IsLoaded' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.DebugPrintCommandQueue
// 0x0278 (0x0278 - 0x0000)
struct BP_LevelManager_C_DebugPrintCommandQueue final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_LevelManagerCommand                 CallFunc_Array_Get_Item;                           // 0x0010(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D48[0x7];                                      // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_BoolToText_ReturnValue;              // 0x0060(0x0018)()
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0088(0x0040)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x00C8(0x0018)()
	class FName                                   CallFunc_ObjectSoftRefToName_ReturnValue;          // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00E8(0x0040)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0128(0x0018)()
	class FText                                   CallFunc_Conv_NameToText_ReturnValue_1;            // 0x0140(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0158(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0198(0x0040)(HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1; // 0x01D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x01E8(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_4;            // 0x0200(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0240(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0250(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0268(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LevelManager_C_DebugPrintCommandQueue) == 0x000008, "Wrong alignment on BP_LevelManager_C_DebugPrintCommandQueue");
static_assert(sizeof(BP_LevelManager_C_DebugPrintCommandQueue) == 0x000278, "Wrong size on BP_LevelManager_C_DebugPrintCommandQueue");
static_assert(offsetof(BP_LevelManager_C_DebugPrintCommandQueue, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_LevelManager_C_DebugPrintCommandQueue::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_DebugPrintCommandQueue, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_LevelManager_C_DebugPrintCommandQueue::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_DebugPrintCommandQueue, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_LevelManager_C_DebugPrintCommandQueue::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_DebugPrintCommandQueue, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'BP_LevelManager_C_DebugPrintCommandQueue::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_DebugPrintCommandQueue, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_LevelManager_C_DebugPrintCommandQueue::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_DebugPrintCommandQueue, CallFunc_Less_IntInt_ReturnValue) == 0x000058, "Member 'BP_LevelManager_C_DebugPrintCommandQueue::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_DebugPrintCommandQueue, CallFunc_Conv_BoolToText_ReturnValue) == 0x000060, "Member 'BP_LevelManager_C_DebugPrintCommandQueue::CallFunc_Conv_BoolToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_DebugPrintCommandQueue, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000078, "Member 'BP_LevelManager_C_DebugPrintCommandQueue::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_DebugPrintCommandQueue, K2Node_MakeStruct_FormatArgumentData) == 0x000088, "Member 'BP_LevelManager_C_DebugPrintCommandQueue::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_DebugPrintCommandQueue, CallFunc_Conv_StringToText_ReturnValue) == 0x0000C8, "Member 'BP_LevelManager_C_DebugPrintCommandQueue::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_DebugPrintCommandQueue, CallFunc_ObjectSoftRefToName_ReturnValue) == 0x0000E0, "Member 'BP_LevelManager_C_DebugPrintCommandQueue::CallFunc_ObjectSoftRefToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_DebugPrintCommandQueue, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000E8, "Member 'BP_LevelManager_C_DebugPrintCommandQueue::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_DebugPrintCommandQueue, CallFunc_Conv_NameToText_ReturnValue) == 0x000128, "Member 'BP_LevelManager_C_DebugPrintCommandQueue::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_DebugPrintCommandQueue, CallFunc_Conv_NameToText_ReturnValue_1) == 0x000140, "Member 'BP_LevelManager_C_DebugPrintCommandQueue::CallFunc_Conv_NameToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_DebugPrintCommandQueue, K2Node_MakeStruct_FormatArgumentData_2) == 0x000158, "Member 'BP_LevelManager_C_DebugPrintCommandQueue::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_DebugPrintCommandQueue, K2Node_MakeStruct_FormatArgumentData_3) == 0x000198, "Member 'BP_LevelManager_C_DebugPrintCommandQueue::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_DebugPrintCommandQueue, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1) == 0x0001D8, "Member 'BP_LevelManager_C_DebugPrintCommandQueue::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_DebugPrintCommandQueue, CallFunc_Conv_StringToText_ReturnValue_1) == 0x0001E8, "Member 'BP_LevelManager_C_DebugPrintCommandQueue::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_DebugPrintCommandQueue, K2Node_MakeStruct_FormatArgumentData_4) == 0x000200, "Member 'BP_LevelManager_C_DebugPrintCommandQueue::K2Node_MakeStruct_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_DebugPrintCommandQueue, K2Node_MakeArray_Array) == 0x000240, "Member 'BP_LevelManager_C_DebugPrintCommandQueue::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_DebugPrintCommandQueue, CallFunc_Format_ReturnValue) == 0x000250, "Member 'BP_LevelManager_C_DebugPrintCommandQueue::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_DebugPrintCommandQueue, CallFunc_Conv_TextToString_ReturnValue) == 0x000268, "Member 'BP_LevelManager_C_DebugPrintCommandQueue::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.IsLevelInLoadedAreaInfos
// 0x00D0 (0x00D0 - 0x0000)
struct BP_LevelManager_C_IsLevelInLoadedAreaInfos final
{
public:
	TSoftObjectPtr<class UObject>                 Level;                                             // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          IsExist;                                           // 0x0028(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D49[0x3];                                      // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_Map_Keys_Keys;                            // 0x0038(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D4A[0x3];                                      // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftObjectPtr<class UObject>>         CallFunc_GetAllLevelInArea_Levels;                 // 0x0050(0x0010)(ReferenceParm, HasGetValueTypeHash)
	struct FS_AreaInfo                            CallFunc_GetAllLevelInArea_AreaInfo;               // 0x0060(0x0068)(HasGetValueTypeHash)
	bool                                          CallFunc_GetAllLevelInArea_Error;                  // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LevelManager_C_IsLevelInLoadedAreaInfos) == 0x000008, "Wrong alignment on BP_LevelManager_C_IsLevelInLoadedAreaInfos");
static_assert(sizeof(BP_LevelManager_C_IsLevelInLoadedAreaInfos) == 0x0000D0, "Wrong size on BP_LevelManager_C_IsLevelInLoadedAreaInfos");
static_assert(offsetof(BP_LevelManager_C_IsLevelInLoadedAreaInfos, Level) == 0x000000, "Member 'BP_LevelManager_C_IsLevelInLoadedAreaInfos::Level' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsLevelInLoadedAreaInfos, IsExist) == 0x000028, "Member 'BP_LevelManager_C_IsLevelInLoadedAreaInfos::IsExist' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsLevelInLoadedAreaInfos, Temp_int_Array_Index_Variable) == 0x00002C, "Member 'BP_LevelManager_C_IsLevelInLoadedAreaInfos::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsLevelInLoadedAreaInfos, Temp_int_Loop_Counter_Variable) == 0x000030, "Member 'BP_LevelManager_C_IsLevelInLoadedAreaInfos::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsLevelInLoadedAreaInfos, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'BP_LevelManager_C_IsLevelInLoadedAreaInfos::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsLevelInLoadedAreaInfos, CallFunc_Map_Keys_Keys) == 0x000038, "Member 'BP_LevelManager_C_IsLevelInLoadedAreaInfos::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsLevelInLoadedAreaInfos, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'BP_LevelManager_C_IsLevelInLoadedAreaInfos::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsLevelInLoadedAreaInfos, CallFunc_Less_IntInt_ReturnValue) == 0x00004C, "Member 'BP_LevelManager_C_IsLevelInLoadedAreaInfos::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsLevelInLoadedAreaInfos, CallFunc_GetAllLevelInArea_Levels) == 0x000050, "Member 'BP_LevelManager_C_IsLevelInLoadedAreaInfos::CallFunc_GetAllLevelInArea_Levels' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsLevelInLoadedAreaInfos, CallFunc_GetAllLevelInArea_AreaInfo) == 0x000060, "Member 'BP_LevelManager_C_IsLevelInLoadedAreaInfos::CallFunc_GetAllLevelInArea_AreaInfo' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsLevelInLoadedAreaInfos, CallFunc_GetAllLevelInArea_Error) == 0x0000C8, "Member 'BP_LevelManager_C_IsLevelInLoadedAreaInfos::CallFunc_GetAllLevelInArea_Error' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsLevelInLoadedAreaInfos, CallFunc_Array_Contains_ReturnValue) == 0x0000C9, "Member 'BP_LevelManager_C_IsLevelInLoadedAreaInfos::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.IsLevelInLoadedAreaInfosWithExclude
// 0x00E0 (0x00E0 - 0x0000)
struct BP_LevelManager_C_IsLevelInLoadedAreaInfosWithExclude final
{
public:
	TSoftObjectPtr<class UObject>                 Level;                                             // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	TArray<class FName>                           ExcludeAreaName;                                   // 0x0028(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	bool                                          IsExist;                                           // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D4B[0x3];                                      // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_Map_Keys_Keys;                            // 0x0048(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D4C[0x2];                                      // 0x005E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftObjectPtr<class UObject>>         CallFunc_GetAllLevelInArea_Levels;                 // 0x0060(0x0010)(ReferenceParm, HasGetValueTypeHash)
	struct FS_AreaInfo                            CallFunc_GetAllLevelInArea_AreaInfo;               // 0x0070(0x0068)(HasGetValueTypeHash)
	bool                                          CallFunc_GetAllLevelInArea_Error;                  // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue_1;             // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LevelManager_C_IsLevelInLoadedAreaInfosWithExclude) == 0x000008, "Wrong alignment on BP_LevelManager_C_IsLevelInLoadedAreaInfosWithExclude");
static_assert(sizeof(BP_LevelManager_C_IsLevelInLoadedAreaInfosWithExclude) == 0x0000E0, "Wrong size on BP_LevelManager_C_IsLevelInLoadedAreaInfosWithExclude");
static_assert(offsetof(BP_LevelManager_C_IsLevelInLoadedAreaInfosWithExclude, Level) == 0x000000, "Member 'BP_LevelManager_C_IsLevelInLoadedAreaInfosWithExclude::Level' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsLevelInLoadedAreaInfosWithExclude, ExcludeAreaName) == 0x000028, "Member 'BP_LevelManager_C_IsLevelInLoadedAreaInfosWithExclude::ExcludeAreaName' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsLevelInLoadedAreaInfosWithExclude, IsExist) == 0x000038, "Member 'BP_LevelManager_C_IsLevelInLoadedAreaInfosWithExclude::IsExist' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsLevelInLoadedAreaInfosWithExclude, Temp_int_Array_Index_Variable) == 0x00003C, "Member 'BP_LevelManager_C_IsLevelInLoadedAreaInfosWithExclude::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsLevelInLoadedAreaInfosWithExclude, Temp_int_Loop_Counter_Variable) == 0x000040, "Member 'BP_LevelManager_C_IsLevelInLoadedAreaInfosWithExclude::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsLevelInLoadedAreaInfosWithExclude, CallFunc_Add_IntInt_ReturnValue) == 0x000044, "Member 'BP_LevelManager_C_IsLevelInLoadedAreaInfosWithExclude::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsLevelInLoadedAreaInfosWithExclude, CallFunc_Map_Keys_Keys) == 0x000048, "Member 'BP_LevelManager_C_IsLevelInLoadedAreaInfosWithExclude::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsLevelInLoadedAreaInfosWithExclude, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'BP_LevelManager_C_IsLevelInLoadedAreaInfosWithExclude::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsLevelInLoadedAreaInfosWithExclude, CallFunc_Less_IntInt_ReturnValue) == 0x00005C, "Member 'BP_LevelManager_C_IsLevelInLoadedAreaInfosWithExclude::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsLevelInLoadedAreaInfosWithExclude, CallFunc_Array_Contains_ReturnValue) == 0x00005D, "Member 'BP_LevelManager_C_IsLevelInLoadedAreaInfosWithExclude::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsLevelInLoadedAreaInfosWithExclude, CallFunc_GetAllLevelInArea_Levels) == 0x000060, "Member 'BP_LevelManager_C_IsLevelInLoadedAreaInfosWithExclude::CallFunc_GetAllLevelInArea_Levels' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsLevelInLoadedAreaInfosWithExclude, CallFunc_GetAllLevelInArea_AreaInfo) == 0x000070, "Member 'BP_LevelManager_C_IsLevelInLoadedAreaInfosWithExclude::CallFunc_GetAllLevelInArea_AreaInfo' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsLevelInLoadedAreaInfosWithExclude, CallFunc_GetAllLevelInArea_Error) == 0x0000D8, "Member 'BP_LevelManager_C_IsLevelInLoadedAreaInfosWithExclude::CallFunc_GetAllLevelInArea_Error' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsLevelInLoadedAreaInfosWithExclude, CallFunc_Array_Contains_ReturnValue_1) == 0x0000D9, "Member 'BP_LevelManager_C_IsLevelInLoadedAreaInfosWithExclude::CallFunc_Array_Contains_ReturnValue_1' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.RegisterLevelToLoaded
// 0x00F0 (0x00F0 - 0x0000)
struct BP_LevelManager_C_RegisterLevelToLoaded final
{
public:
	TSoftObjectPtr<class UObject>                 Level;                                             // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class FName                                   AreaName;                                          // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsAlreadyExists;                                   // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D4D[0x7];                                      // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           K2Node_MakeArray_Array;                            // 0x0038(0x0010)(ReferenceParm, HasGetValueTypeHash)
	struct FS_LoadedLevelInfo                     CallFunc_IsLevelInLoadedLevelInfo_LevelInfoRef;    // 0x0048(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_IsLevelInLoadedLevelInfo_Exist;           // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D4E[0x3];                                      // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue_1;            // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4F[0x4];                                      // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_LoadedLevelInfo                     K2Node_MakeStruct_S_LoadedLevelInfo;               // 0x00A0(0x0048)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LevelManager_C_RegisterLevelToLoaded) == 0x000008, "Wrong alignment on BP_LevelManager_C_RegisterLevelToLoaded");
static_assert(sizeof(BP_LevelManager_C_RegisterLevelToLoaded) == 0x0000F0, "Wrong size on BP_LevelManager_C_RegisterLevelToLoaded");
static_assert(offsetof(BP_LevelManager_C_RegisterLevelToLoaded, Level) == 0x000000, "Member 'BP_LevelManager_C_RegisterLevelToLoaded::Level' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RegisterLevelToLoaded, AreaName) == 0x000028, "Member 'BP_LevelManager_C_RegisterLevelToLoaded::AreaName' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RegisterLevelToLoaded, IsAlreadyExists) == 0x000030, "Member 'BP_LevelManager_C_RegisterLevelToLoaded::IsAlreadyExists' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RegisterLevelToLoaded, K2Node_MakeArray_Array) == 0x000038, "Member 'BP_LevelManager_C_RegisterLevelToLoaded::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RegisterLevelToLoaded, CallFunc_IsLevelInLoadedLevelInfo_LevelInfoRef) == 0x000048, "Member 'BP_LevelManager_C_RegisterLevelToLoaded::CallFunc_IsLevelInLoadedLevelInfo_LevelInfoRef' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RegisterLevelToLoaded, CallFunc_IsLevelInLoadedLevelInfo_Exist) == 0x000090, "Member 'BP_LevelManager_C_RegisterLevelToLoaded::CallFunc_IsLevelInLoadedLevelInfo_Exist' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RegisterLevelToLoaded, CallFunc_Array_AddUnique_ReturnValue) == 0x000094, "Member 'BP_LevelManager_C_RegisterLevelToLoaded::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RegisterLevelToLoaded, CallFunc_Array_AddUnique_ReturnValue_1) == 0x000098, "Member 'BP_LevelManager_C_RegisterLevelToLoaded::CallFunc_Array_AddUnique_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RegisterLevelToLoaded, K2Node_MakeStruct_S_LoadedLevelInfo) == 0x0000A0, "Member 'BP_LevelManager_C_RegisterLevelToLoaded::K2Node_MakeStruct_S_LoadedLevelInfo' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RegisterLevelToLoaded, CallFunc_Array_Add_ReturnValue) == 0x0000E8, "Member 'BP_LevelManager_C_RegisterLevelToLoaded::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.UnregisterLevelToLoaded
// 0x01C0 (0x01C0 - 0x0000)
struct BP_LevelManager_C_UnregisterLevelToLoaded final
{
public:
	TSoftObjectPtr<class UObject>                 Level;                                             // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class FName                                   AreaName;                                          // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsError;                                           // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D50[0x3];                                      // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_LoadedLevelInfo                     CallFunc_IsLevelInLoadedLevelInfo_LevelInfoRef;    // 0x0038(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_IsLevelInLoadedLevelInfo_Exist;           // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D51[0x3];                                      // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue_1;           // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue_2;           // 0x008B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue_3;           // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D52[0x3];                                      // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FS_AreaInfo>                    CallFunc_Map_Values_Values;                        // 0x0098(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class FName                                   CallFunc_ObjectSoftRefToName_ReturnValue;          // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_AreaInfo                            CallFunc_Array_Get_Item;                           // 0x00B0(0x0068)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0118(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0130(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0170(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0180(0x0018)()
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D53[0x7];                                      // 0x0199(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x01A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue_1;             // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x01B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x01B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D54[0x1];                                      // 0x01B3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LevelManager_C_UnregisterLevelToLoaded) == 0x000008, "Wrong alignment on BP_LevelManager_C_UnregisterLevelToLoaded");
static_assert(sizeof(BP_LevelManager_C_UnregisterLevelToLoaded) == 0x0001C0, "Wrong size on BP_LevelManager_C_UnregisterLevelToLoaded");
static_assert(offsetof(BP_LevelManager_C_UnregisterLevelToLoaded, Level) == 0x000000, "Member 'BP_LevelManager_C_UnregisterLevelToLoaded::Level' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_UnregisterLevelToLoaded, AreaName) == 0x000028, "Member 'BP_LevelManager_C_UnregisterLevelToLoaded::AreaName' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_UnregisterLevelToLoaded, IsError) == 0x000030, "Member 'BP_LevelManager_C_UnregisterLevelToLoaded::IsError' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_UnregisterLevelToLoaded, Temp_int_Array_Index_Variable) == 0x000034, "Member 'BP_LevelManager_C_UnregisterLevelToLoaded::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_UnregisterLevelToLoaded, CallFunc_IsLevelInLoadedLevelInfo_LevelInfoRef) == 0x000038, "Member 'BP_LevelManager_C_UnregisterLevelToLoaded::CallFunc_IsLevelInLoadedLevelInfo_LevelInfoRef' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_UnregisterLevelToLoaded, CallFunc_IsLevelInLoadedLevelInfo_Exist) == 0x000080, "Member 'BP_LevelManager_C_UnregisterLevelToLoaded::CallFunc_IsLevelInLoadedLevelInfo_Exist' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_UnregisterLevelToLoaded, CallFunc_Array_Length_ReturnValue) == 0x000084, "Member 'BP_LevelManager_C_UnregisterLevelToLoaded::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_UnregisterLevelToLoaded, CallFunc_Greater_IntInt_ReturnValue) == 0x000088, "Member 'BP_LevelManager_C_UnregisterLevelToLoaded::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_UnregisterLevelToLoaded, CallFunc_Array_RemoveItem_ReturnValue) == 0x000089, "Member 'BP_LevelManager_C_UnregisterLevelToLoaded::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_UnregisterLevelToLoaded, CallFunc_Array_RemoveItem_ReturnValue_1) == 0x00008A, "Member 'BP_LevelManager_C_UnregisterLevelToLoaded::CallFunc_Array_RemoveItem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_UnregisterLevelToLoaded, CallFunc_Array_RemoveItem_ReturnValue_2) == 0x00008B, "Member 'BP_LevelManager_C_UnregisterLevelToLoaded::CallFunc_Array_RemoveItem_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_UnregisterLevelToLoaded, CallFunc_Array_RemoveItem_ReturnValue_3) == 0x00008C, "Member 'BP_LevelManager_C_UnregisterLevelToLoaded::CallFunc_Array_RemoveItem_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_UnregisterLevelToLoaded, Temp_int_Loop_Counter_Variable) == 0x000090, "Member 'BP_LevelManager_C_UnregisterLevelToLoaded::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_UnregisterLevelToLoaded, CallFunc_Add_IntInt_ReturnValue) == 0x000094, "Member 'BP_LevelManager_C_UnregisterLevelToLoaded::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_UnregisterLevelToLoaded, CallFunc_Map_Values_Values) == 0x000098, "Member 'BP_LevelManager_C_UnregisterLevelToLoaded::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_UnregisterLevelToLoaded, CallFunc_ObjectSoftRefToName_ReturnValue) == 0x0000A8, "Member 'BP_LevelManager_C_UnregisterLevelToLoaded::CallFunc_ObjectSoftRefToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_UnregisterLevelToLoaded, CallFunc_Array_Get_Item) == 0x0000B0, "Member 'BP_LevelManager_C_UnregisterLevelToLoaded::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_UnregisterLevelToLoaded, CallFunc_Conv_NameToText_ReturnValue) == 0x000118, "Member 'BP_LevelManager_C_UnregisterLevelToLoaded::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_UnregisterLevelToLoaded, K2Node_MakeStruct_FormatArgumentData) == 0x000130, "Member 'BP_LevelManager_C_UnregisterLevelToLoaded::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_UnregisterLevelToLoaded, K2Node_MakeArray_Array) == 0x000170, "Member 'BP_LevelManager_C_UnregisterLevelToLoaded::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_UnregisterLevelToLoaded, CallFunc_Format_ReturnValue) == 0x000180, "Member 'BP_LevelManager_C_UnregisterLevelToLoaded::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_UnregisterLevelToLoaded, CallFunc_Array_Contains_ReturnValue) == 0x000198, "Member 'BP_LevelManager_C_UnregisterLevelToLoaded::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_UnregisterLevelToLoaded, CallFunc_Conv_TextToString_ReturnValue) == 0x0001A0, "Member 'BP_LevelManager_C_UnregisterLevelToLoaded::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_UnregisterLevelToLoaded, CallFunc_Array_Contains_ReturnValue_1) == 0x0001B0, "Member 'BP_LevelManager_C_UnregisterLevelToLoaded::CallFunc_Array_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_UnregisterLevelToLoaded, CallFunc_BooleanOR_ReturnValue) == 0x0001B1, "Member 'BP_LevelManager_C_UnregisterLevelToLoaded::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_UnregisterLevelToLoaded, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0001B2, "Member 'BP_LevelManager_C_UnregisterLevelToLoaded::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_UnregisterLevelToLoaded, CallFunc_Array_Length_ReturnValue_1) == 0x0001B4, "Member 'BP_LevelManager_C_UnregisterLevelToLoaded::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_UnregisterLevelToLoaded, CallFunc_Less_IntInt_ReturnValue) == 0x0001B8, "Member 'BP_LevelManager_C_UnregisterLevelToLoaded::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.RegisterPackToLoaded
// 0x0014 (0x0014 - 0x0000)
struct BP_LevelManager_C_RegisterPackToLoaded final
{
public:
	struct FPrimaryAssetType                      Param_Name;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          IsAlreadyExists;                                   // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D55[0x3];                                      // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LevelManager_C_RegisterPackToLoaded) == 0x000004, "Wrong alignment on BP_LevelManager_C_RegisterPackToLoaded");
static_assert(sizeof(BP_LevelManager_C_RegisterPackToLoaded) == 0x000014, "Wrong size on BP_LevelManager_C_RegisterPackToLoaded");
static_assert(offsetof(BP_LevelManager_C_RegisterPackToLoaded, Param_Name) == 0x000000, "Member 'BP_LevelManager_C_RegisterPackToLoaded::Param_Name' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RegisterPackToLoaded, IsAlreadyExists) == 0x000008, "Member 'BP_LevelManager_C_RegisterPackToLoaded::IsAlreadyExists' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RegisterPackToLoaded, CallFunc_Array_AddUnique_ReturnValue) == 0x00000C, "Member 'BP_LevelManager_C_RegisterPackToLoaded::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RegisterPackToLoaded, CallFunc_Less_IntInt_ReturnValue) == 0x000010, "Member 'BP_LevelManager_C_RegisterPackToLoaded::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.UnregisterPackToLoaded
// 0x0014 (0x0014 - 0x0000)
struct BP_LevelManager_C_UnregisterPackToLoaded final
{
public:
	struct FPrimaryAssetType                      LevelName;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          IsError;                                           // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D56[0x3];                                      // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LevelManager_C_UnregisterPackToLoaded) == 0x000004, "Wrong alignment on BP_LevelManager_C_UnregisterPackToLoaded");
static_assert(sizeof(BP_LevelManager_C_UnregisterPackToLoaded) == 0x000014, "Wrong size on BP_LevelManager_C_UnregisterPackToLoaded");
static_assert(offsetof(BP_LevelManager_C_UnregisterPackToLoaded, LevelName) == 0x000000, "Member 'BP_LevelManager_C_UnregisterPackToLoaded::LevelName' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_UnregisterPackToLoaded, IsError) == 0x000008, "Member 'BP_LevelManager_C_UnregisterPackToLoaded::IsError' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_UnregisterPackToLoaded, CallFunc_Array_Find_ReturnValue) == 0x00000C, "Member 'BP_LevelManager_C_UnregisterPackToLoaded::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_UnregisterPackToLoaded, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000010, "Member 'BP_LevelManager_C_UnregisterPackToLoaded::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.IsAreaLevelsLoadedByInfo
// 0x0090 (0x0090 - 0x0000)
struct BP_LevelManager_C_IsAreaLevelsLoadedByInfo final
{
public:
	class FName                                   AreaName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RawCheck;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsLoaded;                                          // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D57[0x6];                                      // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftObjectPtr<class UObject>>         CallFunc_GetAllLevelInArea_Levels;                 // 0x0010(0x0010)(ReferenceParm, HasGetValueTypeHash)
	struct FS_AreaInfo                            CallFunc_GetAllLevelInArea_AreaInfo;               // 0x0020(0x0068)(HasGetValueTypeHash)
	bool                                          CallFunc_GetAllLevelInArea_Error;                  // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLevelsLoaded_IsLoaded;                  // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LevelManager_C_IsAreaLevelsLoadedByInfo) == 0x000008, "Wrong alignment on BP_LevelManager_C_IsAreaLevelsLoadedByInfo");
static_assert(sizeof(BP_LevelManager_C_IsAreaLevelsLoadedByInfo) == 0x000090, "Wrong size on BP_LevelManager_C_IsAreaLevelsLoadedByInfo");
static_assert(offsetof(BP_LevelManager_C_IsAreaLevelsLoadedByInfo, AreaName) == 0x000000, "Member 'BP_LevelManager_C_IsAreaLevelsLoadedByInfo::AreaName' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaLevelsLoadedByInfo, RawCheck) == 0x000008, "Member 'BP_LevelManager_C_IsAreaLevelsLoadedByInfo::RawCheck' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaLevelsLoadedByInfo, IsLoaded) == 0x000009, "Member 'BP_LevelManager_C_IsAreaLevelsLoadedByInfo::IsLoaded' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaLevelsLoadedByInfo, CallFunc_GetAllLevelInArea_Levels) == 0x000010, "Member 'BP_LevelManager_C_IsAreaLevelsLoadedByInfo::CallFunc_GetAllLevelInArea_Levels' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaLevelsLoadedByInfo, CallFunc_GetAllLevelInArea_AreaInfo) == 0x000020, "Member 'BP_LevelManager_C_IsAreaLevelsLoadedByInfo::CallFunc_GetAllLevelInArea_AreaInfo' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaLevelsLoadedByInfo, CallFunc_GetAllLevelInArea_Error) == 0x000088, "Member 'BP_LevelManager_C_IsAreaLevelsLoadedByInfo::CallFunc_GetAllLevelInArea_Error' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaLevelsLoadedByInfo, CallFunc_IsLevelsLoaded_IsLoaded) == 0x000089, "Member 'BP_LevelManager_C_IsAreaLevelsLoadedByInfo::CallFunc_IsLevelsLoaded_IsLoaded' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.IsAreaLevelsUnloadedWithoutOtherAreaUsing
// 0x00E8 (0x00E8 - 0x0000)
struct BP_LevelManager_C_IsAreaLevelsUnloadedWithoutOtherAreaUsing final
{
public:
	class FName                                   AreaName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsUnloaded;                                        // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Error;                                             // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D58[0x6];                                      // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftObjectPtr<class UObject>>         CallFunc_GetAllLevelInArea_Levels;                 // 0x0010(0x0010)(ReferenceParm, HasGetValueTypeHash)
	struct FS_AreaInfo                            CallFunc_GetAllLevelInArea_AreaInfo;               // 0x0020(0x0068)(HasGetValueTypeHash)
	bool                                          CallFunc_GetAllLevelInArea_Error;                  // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D59[0x3];                                      // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D5A[0x4];                                      // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UObject>                 CallFunc_Array_Get_Item;                           // 0x0098(0x0028)(HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D5B[0x2];                                      // 0x00C6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D5C[0x4];                                      // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           K2Node_MakeArray_Array;                            // 0x00D0(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_IsLevelInLoadedAreaInfosWithExclude_IsExist; // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LevelManager_C_IsAreaLevelsUnloadedWithoutOtherAreaUsing) == 0x000008, "Wrong alignment on BP_LevelManager_C_IsAreaLevelsUnloadedWithoutOtherAreaUsing");
static_assert(sizeof(BP_LevelManager_C_IsAreaLevelsUnloadedWithoutOtherAreaUsing) == 0x0000E8, "Wrong size on BP_LevelManager_C_IsAreaLevelsUnloadedWithoutOtherAreaUsing");
static_assert(offsetof(BP_LevelManager_C_IsAreaLevelsUnloadedWithoutOtherAreaUsing, AreaName) == 0x000000, "Member 'BP_LevelManager_C_IsAreaLevelsUnloadedWithoutOtherAreaUsing::AreaName' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaLevelsUnloadedWithoutOtherAreaUsing, IsUnloaded) == 0x000008, "Member 'BP_LevelManager_C_IsAreaLevelsUnloadedWithoutOtherAreaUsing::IsUnloaded' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaLevelsUnloadedWithoutOtherAreaUsing, Error) == 0x000009, "Member 'BP_LevelManager_C_IsAreaLevelsUnloadedWithoutOtherAreaUsing::Error' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaLevelsUnloadedWithoutOtherAreaUsing, CallFunc_GetAllLevelInArea_Levels) == 0x000010, "Member 'BP_LevelManager_C_IsAreaLevelsUnloadedWithoutOtherAreaUsing::CallFunc_GetAllLevelInArea_Levels' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaLevelsUnloadedWithoutOtherAreaUsing, CallFunc_GetAllLevelInArea_AreaInfo) == 0x000020, "Member 'BP_LevelManager_C_IsAreaLevelsUnloadedWithoutOtherAreaUsing::CallFunc_GetAllLevelInArea_AreaInfo' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaLevelsUnloadedWithoutOtherAreaUsing, CallFunc_GetAllLevelInArea_Error) == 0x000088, "Member 'BP_LevelManager_C_IsAreaLevelsUnloadedWithoutOtherAreaUsing::CallFunc_GetAllLevelInArea_Error' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaLevelsUnloadedWithoutOtherAreaUsing, Temp_int_Array_Index_Variable) == 0x00008C, "Member 'BP_LevelManager_C_IsAreaLevelsUnloadedWithoutOtherAreaUsing::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaLevelsUnloadedWithoutOtherAreaUsing, CallFunc_Array_Length_ReturnValue) == 0x000090, "Member 'BP_LevelManager_C_IsAreaLevelsUnloadedWithoutOtherAreaUsing::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaLevelsUnloadedWithoutOtherAreaUsing, CallFunc_Array_Get_Item) == 0x000098, "Member 'BP_LevelManager_C_IsAreaLevelsUnloadedWithoutOtherAreaUsing::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaLevelsUnloadedWithoutOtherAreaUsing, Temp_int_Loop_Counter_Variable) == 0x0000C0, "Member 'BP_LevelManager_C_IsAreaLevelsUnloadedWithoutOtherAreaUsing::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaLevelsUnloadedWithoutOtherAreaUsing, CallFunc_Array_Contains_ReturnValue) == 0x0000C4, "Member 'BP_LevelManager_C_IsAreaLevelsUnloadedWithoutOtherAreaUsing::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaLevelsUnloadedWithoutOtherAreaUsing, CallFunc_Less_IntInt_ReturnValue) == 0x0000C5, "Member 'BP_LevelManager_C_IsAreaLevelsUnloadedWithoutOtherAreaUsing::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaLevelsUnloadedWithoutOtherAreaUsing, CallFunc_Add_IntInt_ReturnValue) == 0x0000C8, "Member 'BP_LevelManager_C_IsAreaLevelsUnloadedWithoutOtherAreaUsing::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaLevelsUnloadedWithoutOtherAreaUsing, K2Node_MakeArray_Array) == 0x0000D0, "Member 'BP_LevelManager_C_IsAreaLevelsUnloadedWithoutOtherAreaUsing::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaLevelsUnloadedWithoutOtherAreaUsing, CallFunc_IsLevelInLoadedAreaInfosWithExclude_IsExist) == 0x0000E0, "Member 'BP_LevelManager_C_IsAreaLevelsUnloadedWithoutOtherAreaUsing::CallFunc_IsLevelInLoadedAreaInfosWithExclude_IsExist' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.IsLevelInOtherLoadedArea
// 0x0120 (0x0120 - 0x0000)
struct BP_LevelManager_C_IsLevelInOtherLoadedArea final
{
public:
	TSoftObjectPtr<class UObject>                 Level;                                             // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class FName                                   ExcludeAreaName;                                   // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Found;                                             // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D5D[0x3];                                      // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D5E[0x4];                                      // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_Map_Keys_Keys;                            // 0x0050(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0064(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D5F[0x3];                                      // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftObjectPtr<class UObject>>         CallFunc_GetAllLevelInLoadedAreaInfo_Levels;       // 0x0070(0x0010)(ReferenceParm, HasGetValueTypeHash)
	struct FS_AreaInfo                            CallFunc_GetAllLevelInLoadedAreaInfo_AreaInfo;     // 0x0080(0x0068)(HasGetValueTypeHash)
	bool                                          CallFunc_GetAllLevelInLoadedAreaInfo_Error;        // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D60[0x7];                                      // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UObject>                 CallFunc_Array_Get_Item_1;                         // 0x00F0(0x0028)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_SoftObjectReference_ReturnValue; // 0x011C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x011D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x011E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LevelManager_C_IsLevelInOtherLoadedArea) == 0x000008, "Wrong alignment on BP_LevelManager_C_IsLevelInOtherLoadedArea");
static_assert(sizeof(BP_LevelManager_C_IsLevelInOtherLoadedArea) == 0x000120, "Wrong size on BP_LevelManager_C_IsLevelInOtherLoadedArea");
static_assert(offsetof(BP_LevelManager_C_IsLevelInOtherLoadedArea, Level) == 0x000000, "Member 'BP_LevelManager_C_IsLevelInOtherLoadedArea::Level' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsLevelInOtherLoadedArea, ExcludeAreaName) == 0x000028, "Member 'BP_LevelManager_C_IsLevelInOtherLoadedArea::ExcludeAreaName' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsLevelInOtherLoadedArea, Found) == 0x000030, "Member 'BP_LevelManager_C_IsLevelInOtherLoadedArea::Found' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsLevelInOtherLoadedArea, Temp_int_Array_Index_Variable) == 0x000034, "Member 'BP_LevelManager_C_IsLevelInOtherLoadedArea::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsLevelInOtherLoadedArea, Temp_int_Loop_Counter_Variable) == 0x000038, "Member 'BP_LevelManager_C_IsLevelInOtherLoadedArea::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsLevelInOtherLoadedArea, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'BP_LevelManager_C_IsLevelInOtherLoadedArea::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsLevelInOtherLoadedArea, Temp_int_Array_Index_Variable_1) == 0x000040, "Member 'BP_LevelManager_C_IsLevelInOtherLoadedArea::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsLevelInOtherLoadedArea, Temp_int_Loop_Counter_Variable_1) == 0x000044, "Member 'BP_LevelManager_C_IsLevelInOtherLoadedArea::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsLevelInOtherLoadedArea, CallFunc_Add_IntInt_ReturnValue_1) == 0x000048, "Member 'BP_LevelManager_C_IsLevelInOtherLoadedArea::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsLevelInOtherLoadedArea, CallFunc_Map_Keys_Keys) == 0x000050, "Member 'BP_LevelManager_C_IsLevelInOtherLoadedArea::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsLevelInOtherLoadedArea, CallFunc_Array_Length_ReturnValue) == 0x000060, "Member 'BP_LevelManager_C_IsLevelInOtherLoadedArea::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsLevelInOtherLoadedArea, CallFunc_Array_Get_Item) == 0x000064, "Member 'BP_LevelManager_C_IsLevelInOtherLoadedArea::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsLevelInOtherLoadedArea, CallFunc_Less_IntInt_ReturnValue) == 0x00006C, "Member 'BP_LevelManager_C_IsLevelInOtherLoadedArea::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsLevelInOtherLoadedArea, CallFunc_GetAllLevelInLoadedAreaInfo_Levels) == 0x000070, "Member 'BP_LevelManager_C_IsLevelInOtherLoadedArea::CallFunc_GetAllLevelInLoadedAreaInfo_Levels' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsLevelInOtherLoadedArea, CallFunc_GetAllLevelInLoadedAreaInfo_AreaInfo) == 0x000080, "Member 'BP_LevelManager_C_IsLevelInOtherLoadedArea::CallFunc_GetAllLevelInLoadedAreaInfo_AreaInfo' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsLevelInOtherLoadedArea, CallFunc_GetAllLevelInLoadedAreaInfo_Error) == 0x0000E8, "Member 'BP_LevelManager_C_IsLevelInOtherLoadedArea::CallFunc_GetAllLevelInLoadedAreaInfo_Error' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsLevelInOtherLoadedArea, CallFunc_Array_Get_Item_1) == 0x0000F0, "Member 'BP_LevelManager_C_IsLevelInOtherLoadedArea::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsLevelInOtherLoadedArea, CallFunc_Array_Length_ReturnValue_1) == 0x000118, "Member 'BP_LevelManager_C_IsLevelInOtherLoadedArea::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsLevelInOtherLoadedArea, CallFunc_EqualEqual_SoftObjectReference_ReturnValue) == 0x00011C, "Member 'BP_LevelManager_C_IsLevelInOtherLoadedArea::CallFunc_EqualEqual_SoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsLevelInOtherLoadedArea, CallFunc_Less_IntInt_ReturnValue_1) == 0x00011D, "Member 'BP_LevelManager_C_IsLevelInOtherLoadedArea::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsLevelInOtherLoadedArea, CallFunc_EqualEqual_NameName_ReturnValue) == 0x00011E, "Member 'BP_LevelManager_C_IsLevelInOtherLoadedArea::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.__RequestSetAreaVisibleAsync
// 0x00B0 (0x00B0 - 0x0000)
struct BP_LevelManager_C___RequestSetAreaVisibleAsync final
{
public:
	class FName                                   AreaName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsVisible;                                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D61[0x7];                                      // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAreaInLoadedAreaInfosWithCondition_IsLoaded; // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAreaInLoadedAreaInfosWithCondition_IsExist; // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D62[0x6];                                      // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_AreaInfo                            CallFunc_IsAreaInLoadedAreaInfosWithCondition_AreaInfo; // 0x0038(0x0068)(HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LevelManager_C___RequestSetAreaVisibleAsync) == 0x000008, "Wrong alignment on BP_LevelManager_C___RequestSetAreaVisibleAsync");
static_assert(sizeof(BP_LevelManager_C___RequestSetAreaVisibleAsync) == 0x0000B0, "Wrong size on BP_LevelManager_C___RequestSetAreaVisibleAsync");
static_assert(offsetof(BP_LevelManager_C___RequestSetAreaVisibleAsync, AreaName) == 0x000000, "Member 'BP_LevelManager_C___RequestSetAreaVisibleAsync::AreaName' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C___RequestSetAreaVisibleAsync, IsVisible) == 0x000008, "Member 'BP_LevelManager_C___RequestSetAreaVisibleAsync::IsVisible' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C___RequestSetAreaVisibleAsync, CallFunc_Concat_StrStr_ReturnValue) == 0x000010, "Member 'BP_LevelManager_C___RequestSetAreaVisibleAsync::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C___RequestSetAreaVisibleAsync, CallFunc_Conv_NameToString_ReturnValue) == 0x000020, "Member 'BP_LevelManager_C___RequestSetAreaVisibleAsync::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C___RequestSetAreaVisibleAsync, CallFunc_IsAreaInLoadedAreaInfosWithCondition_IsLoaded) == 0x000030, "Member 'BP_LevelManager_C___RequestSetAreaVisibleAsync::CallFunc_IsAreaInLoadedAreaInfosWithCondition_IsLoaded' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C___RequestSetAreaVisibleAsync, CallFunc_IsAreaInLoadedAreaInfosWithCondition_IsExist) == 0x000031, "Member 'BP_LevelManager_C___RequestSetAreaVisibleAsync::CallFunc_IsAreaInLoadedAreaInfosWithCondition_IsExist' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C___RequestSetAreaVisibleAsync, CallFunc_IsAreaInLoadedAreaInfosWithCondition_AreaInfo) == 0x000038, "Member 'BP_LevelManager_C___RequestSetAreaVisibleAsync::CallFunc_IsAreaInLoadedAreaInfosWithCondition_AreaInfo' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C___RequestSetAreaVisibleAsync, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0000A0, "Member 'BP_LevelManager_C___RequestSetAreaVisibleAsync::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.SetAllLevelsVisible
// 0x0050 (0x0050 - 0x0000)
struct BP_LevelManager_C_SetAllLevelsVisible final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D63[0x3];                                      // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UObject>                 CallFunc_Array_Get_Item;                           // 0x0010(0x0028)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_ObjectSoftRefToName_ReturnValue;          // 0x003C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D64[0x3];                                      // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelStreaming*                        CallFunc_GetStreamingLevel_ReturnValue;            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LevelManager_C_SetAllLevelsVisible) == 0x000008, "Wrong alignment on BP_LevelManager_C_SetAllLevelsVisible");
static_assert(sizeof(BP_LevelManager_C_SetAllLevelsVisible) == 0x000050, "Wrong size on BP_LevelManager_C_SetAllLevelsVisible");
static_assert(offsetof(BP_LevelManager_C_SetAllLevelsVisible, Visible) == 0x000000, "Member 'BP_LevelManager_C_SetAllLevelsVisible::Visible' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_SetAllLevelsVisible, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_LevelManager_C_SetAllLevelsVisible::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_SetAllLevelsVisible, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_LevelManager_C_SetAllLevelsVisible::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_SetAllLevelsVisible, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_LevelManager_C_SetAllLevelsVisible::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_SetAllLevelsVisible, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_LevelManager_C_SetAllLevelsVisible::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_SetAllLevelsVisible, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'BP_LevelManager_C_SetAllLevelsVisible::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_SetAllLevelsVisible, CallFunc_ObjectSoftRefToName_ReturnValue) == 0x00003C, "Member 'BP_LevelManager_C_SetAllLevelsVisible::CallFunc_ObjectSoftRefToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_SetAllLevelsVisible, CallFunc_Less_IntInt_ReturnValue) == 0x000044, "Member 'BP_LevelManager_C_SetAllLevelsVisible::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_SetAllLevelsVisible, CallFunc_GetStreamingLevel_ReturnValue) == 0x000048, "Member 'BP_LevelManager_C_SetAllLevelsVisible::CallFunc_GetStreamingLevel_ReturnValue' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C._SetAreaOnlyVisible
// 0x0150 (0x0150 - 0x0000)
struct BP_LevelManager_C__SetAreaOnlyVisible final
{
public:
	class FName                                   AreaName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UObject>>         NewAreaLevels;                                     // 0x0008(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UObject>>         CallFunc_GetAllLevelInArea_Levels;                 // 0x0018(0x0010)(ReferenceParm, HasGetValueTypeHash)
	struct FS_AreaInfo                            CallFunc_GetAllLevelInArea_AreaInfo;               // 0x0028(0x0068)(HasGetValueTypeHash)
	bool                                          CallFunc_GetAllLevelInArea_Error;                  // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D65[0x3];                                      // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D66[0x4];                                      // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftObjectPtr<class UObject>>         CallFunc_GetSceneSystemLevelsByArea_Levels;        // 0x00A8(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TSoftObjectPtr<class UObject>                 CallFunc_Array_Get_Item;                           // 0x00B8(0x0028)(HasGetValueTypeHash)
	TSoftObjectPtr<class UObject>                 CallFunc_Array_Get_Item_1;                         // 0x00E0(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D67[0x3];                                      // 0x0109(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_ObjectSoftRefToName_ReturnValue;          // 0x010C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue_1;             // 0x0114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D68[0x3];                                      // 0x0115(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelStreaming*                        CallFunc_GetStreamingLevel_ReturnValue;            // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue_2;             // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D69[0x2];                                      // 0x0122(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_ObjectSoftRefToName_ReturnValue_1;        // 0x0124(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelStreaming*                        CallFunc_GetStreamingLevel_ReturnValue_1;          // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D6A[0x3];                                      // 0x0139(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0144(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D6B[0x3];                                      // 0x0145(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LevelManager_C__SetAreaOnlyVisible) == 0x000008, "Wrong alignment on BP_LevelManager_C__SetAreaOnlyVisible");
static_assert(sizeof(BP_LevelManager_C__SetAreaOnlyVisible) == 0x000150, "Wrong size on BP_LevelManager_C__SetAreaOnlyVisible");
static_assert(offsetof(BP_LevelManager_C__SetAreaOnlyVisible, AreaName) == 0x000000, "Member 'BP_LevelManager_C__SetAreaOnlyVisible::AreaName' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C__SetAreaOnlyVisible, NewAreaLevels) == 0x000008, "Member 'BP_LevelManager_C__SetAreaOnlyVisible::NewAreaLevels' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C__SetAreaOnlyVisible, CallFunc_GetAllLevelInArea_Levels) == 0x000018, "Member 'BP_LevelManager_C__SetAreaOnlyVisible::CallFunc_GetAllLevelInArea_Levels' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C__SetAreaOnlyVisible, CallFunc_GetAllLevelInArea_AreaInfo) == 0x000028, "Member 'BP_LevelManager_C__SetAreaOnlyVisible::CallFunc_GetAllLevelInArea_AreaInfo' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C__SetAreaOnlyVisible, CallFunc_GetAllLevelInArea_Error) == 0x000090, "Member 'BP_LevelManager_C__SetAreaOnlyVisible::CallFunc_GetAllLevelInArea_Error' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C__SetAreaOnlyVisible, Temp_int_Loop_Counter_Variable) == 0x000094, "Member 'BP_LevelManager_C__SetAreaOnlyVisible::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C__SetAreaOnlyVisible, CallFunc_Add_IntInt_ReturnValue) == 0x000098, "Member 'BP_LevelManager_C__SetAreaOnlyVisible::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C__SetAreaOnlyVisible, Temp_int_Array_Index_Variable) == 0x00009C, "Member 'BP_LevelManager_C__SetAreaOnlyVisible::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C__SetAreaOnlyVisible, Temp_int_Array_Index_Variable_1) == 0x0000A0, "Member 'BP_LevelManager_C__SetAreaOnlyVisible::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C__SetAreaOnlyVisible, CallFunc_GetSceneSystemLevelsByArea_Levels) == 0x0000A8, "Member 'BP_LevelManager_C__SetAreaOnlyVisible::CallFunc_GetSceneSystemLevelsByArea_Levels' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C__SetAreaOnlyVisible, CallFunc_Array_Get_Item) == 0x0000B8, "Member 'BP_LevelManager_C__SetAreaOnlyVisible::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C__SetAreaOnlyVisible, CallFunc_Array_Get_Item_1) == 0x0000E0, "Member 'BP_LevelManager_C__SetAreaOnlyVisible::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C__SetAreaOnlyVisible, CallFunc_Array_Contains_ReturnValue) == 0x000108, "Member 'BP_LevelManager_C__SetAreaOnlyVisible::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C__SetAreaOnlyVisible, CallFunc_ObjectSoftRefToName_ReturnValue) == 0x00010C, "Member 'BP_LevelManager_C__SetAreaOnlyVisible::CallFunc_ObjectSoftRefToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C__SetAreaOnlyVisible, CallFunc_Array_Contains_ReturnValue_1) == 0x000114, "Member 'BP_LevelManager_C__SetAreaOnlyVisible::CallFunc_Array_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C__SetAreaOnlyVisible, CallFunc_GetStreamingLevel_ReturnValue) == 0x000118, "Member 'BP_LevelManager_C__SetAreaOnlyVisible::CallFunc_GetStreamingLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C__SetAreaOnlyVisible, CallFunc_Not_PreBool_ReturnValue) == 0x000120, "Member 'BP_LevelManager_C__SetAreaOnlyVisible::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C__SetAreaOnlyVisible, CallFunc_Array_Contains_ReturnValue_2) == 0x000121, "Member 'BP_LevelManager_C__SetAreaOnlyVisible::CallFunc_Array_Contains_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C__SetAreaOnlyVisible, CallFunc_ObjectSoftRefToName_ReturnValue_1) == 0x000124, "Member 'BP_LevelManager_C__SetAreaOnlyVisible::CallFunc_ObjectSoftRefToName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C__SetAreaOnlyVisible, CallFunc_Array_Length_ReturnValue) == 0x00012C, "Member 'BP_LevelManager_C__SetAreaOnlyVisible::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C__SetAreaOnlyVisible, CallFunc_GetStreamingLevel_ReturnValue_1) == 0x000130, "Member 'BP_LevelManager_C__SetAreaOnlyVisible::CallFunc_GetStreamingLevel_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C__SetAreaOnlyVisible, CallFunc_Less_IntInt_ReturnValue) == 0x000138, "Member 'BP_LevelManager_C__SetAreaOnlyVisible::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C__SetAreaOnlyVisible, CallFunc_Array_Length_ReturnValue_1) == 0x00013C, "Member 'BP_LevelManager_C__SetAreaOnlyVisible::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C__SetAreaOnlyVisible, Temp_int_Loop_Counter_Variable_1) == 0x000140, "Member 'BP_LevelManager_C__SetAreaOnlyVisible::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C__SetAreaOnlyVisible, CallFunc_Less_IntInt_ReturnValue_1) == 0x000144, "Member 'BP_LevelManager_C__SetAreaOnlyVisible::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C__SetAreaOnlyVisible, CallFunc_Add_IntInt_ReturnValue_1) == 0x000148, "Member 'BP_LevelManager_C__SetAreaOnlyVisible::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.GetSceneSystemLevels
// 0x0058 (0x0058 - 0x0000)
struct BP_LevelManager_C_GetSceneSystemLevels final
{
public:
	E_SceneType                                   Scene;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D6C[0x7];                                      // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftObjectPtr<class UObject>>         Levels;                                            // 0x0008(0x0010)(Parm, OutParm, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UObject>>         Tmp;                                               // 0x0018(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_SceneInfo                           CallFunc_GetDataTableRowFromName_OutRow;           // 0x0040(0x0010)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LevelManager_C_GetSceneSystemLevels) == 0x000008, "Wrong alignment on BP_LevelManager_C_GetSceneSystemLevels");
static_assert(sizeof(BP_LevelManager_C_GetSceneSystemLevels) == 0x000058, "Wrong size on BP_LevelManager_C_GetSceneSystemLevels");
static_assert(offsetof(BP_LevelManager_C_GetSceneSystemLevels, Scene) == 0x000000, "Member 'BP_LevelManager_C_GetSceneSystemLevels::Scene' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetSceneSystemLevels, Levels) == 0x000008, "Member 'BP_LevelManager_C_GetSceneSystemLevels::Levels' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetSceneSystemLevels, Tmp) == 0x000018, "Member 'BP_LevelManager_C_GetSceneSystemLevels::Tmp' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetSceneSystemLevels, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000028, "Member 'BP_LevelManager_C_GetSceneSystemLevels::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetSceneSystemLevels, CallFunc_Conv_StringToName_ReturnValue) == 0x000038, "Member 'BP_LevelManager_C_GetSceneSystemLevels::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetSceneSystemLevels, CallFunc_GetDataTableRowFromName_OutRow) == 0x000040, "Member 'BP_LevelManager_C_GetSceneSystemLevels::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetSceneSystemLevels, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000050, "Member 'BP_LevelManager_C_GetSceneSystemLevels::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.GetAreaSystemLevelNames
// 0x00A8 (0x00A8 - 0x0000)
struct BP_LevelManager_C_GetAreaSystemLevelNames final
{
public:
	class FName                                   AreaName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UObject>>         LevelNames;                                        // 0x0008(0x0010)(Parm, OutParm, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UObject>>         Tmp;                                               // 0x0018(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FS_AreaInfo                            CallFunc_GetAreaInfo_AreaInfo;                     // 0x0028(0x0068)(HasGetValueTypeHash)
	bool                                          CallFunc_GetAreaInfo_Found;                        // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D6D[0x7];                                      // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftObjectPtr<class UObject>>         CallFunc_GetSceneSystemLevels_Levels;              // 0x0098(0x0010)(ReferenceParm, HasGetValueTypeHash)
};
static_assert(alignof(BP_LevelManager_C_GetAreaSystemLevelNames) == 0x000008, "Wrong alignment on BP_LevelManager_C_GetAreaSystemLevelNames");
static_assert(sizeof(BP_LevelManager_C_GetAreaSystemLevelNames) == 0x0000A8, "Wrong size on BP_LevelManager_C_GetAreaSystemLevelNames");
static_assert(offsetof(BP_LevelManager_C_GetAreaSystemLevelNames, AreaName) == 0x000000, "Member 'BP_LevelManager_C_GetAreaSystemLevelNames::AreaName' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetAreaSystemLevelNames, LevelNames) == 0x000008, "Member 'BP_LevelManager_C_GetAreaSystemLevelNames::LevelNames' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetAreaSystemLevelNames, Tmp) == 0x000018, "Member 'BP_LevelManager_C_GetAreaSystemLevelNames::Tmp' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetAreaSystemLevelNames, CallFunc_GetAreaInfo_AreaInfo) == 0x000028, "Member 'BP_LevelManager_C_GetAreaSystemLevelNames::CallFunc_GetAreaInfo_AreaInfo' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetAreaSystemLevelNames, CallFunc_GetAreaInfo_Found) == 0x000090, "Member 'BP_LevelManager_C_GetAreaSystemLevelNames::CallFunc_GetAreaInfo_Found' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetAreaSystemLevelNames, CallFunc_GetSceneSystemLevels_Levels) == 0x000098, "Member 'BP_LevelManager_C_GetAreaSystemLevelNames::CallFunc_GetSceneSystemLevels_Levels' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.__IsPackInOtherLoadedArea
// 0x0040 (0x0040 - 0x0000)
struct BP_LevelManager_C___IsPackInOtherLoadedArea final
{
public:
	struct FPrimaryAssetType                      PAT;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   ExcludeAreaName;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Found;                                             // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D6E[0x3];                                      // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_Map_Keys_Keys;                            // 0x0020(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0034(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LevelManager_C___IsPackInOtherLoadedArea) == 0x000008, "Wrong alignment on BP_LevelManager_C___IsPackInOtherLoadedArea");
static_assert(sizeof(BP_LevelManager_C___IsPackInOtherLoadedArea) == 0x000040, "Wrong size on BP_LevelManager_C___IsPackInOtherLoadedArea");
static_assert(offsetof(BP_LevelManager_C___IsPackInOtherLoadedArea, PAT) == 0x000000, "Member 'BP_LevelManager_C___IsPackInOtherLoadedArea::PAT' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C___IsPackInOtherLoadedArea, ExcludeAreaName) == 0x000008, "Member 'BP_LevelManager_C___IsPackInOtherLoadedArea::ExcludeAreaName' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C___IsPackInOtherLoadedArea, Found) == 0x000010, "Member 'BP_LevelManager_C___IsPackInOtherLoadedArea::Found' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C___IsPackInOtherLoadedArea, Temp_int_Array_Index_Variable) == 0x000014, "Member 'BP_LevelManager_C___IsPackInOtherLoadedArea::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C___IsPackInOtherLoadedArea, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'BP_LevelManager_C___IsPackInOtherLoadedArea::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C___IsPackInOtherLoadedArea, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'BP_LevelManager_C___IsPackInOtherLoadedArea::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C___IsPackInOtherLoadedArea, CallFunc_Map_Keys_Keys) == 0x000020, "Member 'BP_LevelManager_C___IsPackInOtherLoadedArea::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C___IsPackInOtherLoadedArea, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BP_LevelManager_C___IsPackInOtherLoadedArea::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C___IsPackInOtherLoadedArea, CallFunc_Array_Get_Item) == 0x000034, "Member 'BP_LevelManager_C___IsPackInOtherLoadedArea::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C___IsPackInOtherLoadedArea, CallFunc_Less_IntInt_ReturnValue) == 0x00003C, "Member 'BP_LevelManager_C___IsPackInOtherLoadedArea::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C___IsPackInOtherLoadedArea, CallFunc_EqualEqual_NameName_ReturnValue) == 0x00003D, "Member 'BP_LevelManager_C___IsPackInOtherLoadedArea::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C._RequestUnloadUnsedSystemLevelAsync
// 0x0078 (0x0078 - 0x0000)
struct BP_LevelManager_C__RequestUnloadUnsedSystemLevelAsync final
{
public:
	class FName                                   AreaName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SetVisbleAfterLoad;                                // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAreaInLoadedAreaInfosWithCondition_IsLoaded; // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAreaInLoadedAreaInfosWithCondition_IsExist; // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D6F[0x5];                                      // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_AreaInfo                            CallFunc_IsAreaInLoadedAreaInfosWithCondition_AreaInfo; // 0x0010(0x0068)(HasGetValueTypeHash)
};
static_assert(alignof(BP_LevelManager_C__RequestUnloadUnsedSystemLevelAsync) == 0x000008, "Wrong alignment on BP_LevelManager_C__RequestUnloadUnsedSystemLevelAsync");
static_assert(sizeof(BP_LevelManager_C__RequestUnloadUnsedSystemLevelAsync) == 0x000078, "Wrong size on BP_LevelManager_C__RequestUnloadUnsedSystemLevelAsync");
static_assert(offsetof(BP_LevelManager_C__RequestUnloadUnsedSystemLevelAsync, AreaName) == 0x000000, "Member 'BP_LevelManager_C__RequestUnloadUnsedSystemLevelAsync::AreaName' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C__RequestUnloadUnsedSystemLevelAsync, SetVisbleAfterLoad) == 0x000008, "Member 'BP_LevelManager_C__RequestUnloadUnsedSystemLevelAsync::SetVisbleAfterLoad' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C__RequestUnloadUnsedSystemLevelAsync, CallFunc_IsAreaInLoadedAreaInfosWithCondition_IsLoaded) == 0x000009, "Member 'BP_LevelManager_C__RequestUnloadUnsedSystemLevelAsync::CallFunc_IsAreaInLoadedAreaInfosWithCondition_IsLoaded' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C__RequestUnloadUnsedSystemLevelAsync, CallFunc_IsAreaInLoadedAreaInfosWithCondition_IsExist) == 0x00000A, "Member 'BP_LevelManager_C__RequestUnloadUnsedSystemLevelAsync::CallFunc_IsAreaInLoadedAreaInfosWithCondition_IsExist' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C__RequestUnloadUnsedSystemLevelAsync, CallFunc_IsAreaInLoadedAreaInfosWithCondition_AreaInfo) == 0x000010, "Member 'BP_LevelManager_C__RequestUnloadUnsedSystemLevelAsync::CallFunc_IsAreaInLoadedAreaInfosWithCondition_AreaInfo' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.GetUnusedSystemLevelName
// 0x0190 (0x0190 - 0x0000)
struct BP_LevelManager_C_GetUnusedSystemLevelName final
{
public:
	class FName                                   WillUnloadAreaName;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Found;                                             // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D70[0x7];                                      // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UObject>                 UnusedSystemLevel;                                 // 0x0010(0x0028)(Parm, OutParm, HasGetValueTypeHash)
	E_SceneType                                   WillUnloadSceneType;                               // 0x0038(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsFound;                                           // 0x0039(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D71[0x6];                                      // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           Result;                                            // 0x0040(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D72[0x4];                                      // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UObject>                 CallFunc_GetSystemLevel_SystemLevel;               // 0x0060(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_GetSystemLevel_Found;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D73[0x7];                                      // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_AreaInfo                            CallFunc_Map_Find_Value;                           // 0x0090(0x0068)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D74[0x7];                                      // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_Map_Keys_Keys;                            // 0x0100(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D75[0x4];                                      // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_AreaInfo                            CallFunc_Map_Find_Value_1;                         // 0x0120(0x0068)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0189(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x018A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x018B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LevelManager_C_GetUnusedSystemLevelName) == 0x000008, "Wrong alignment on BP_LevelManager_C_GetUnusedSystemLevelName");
static_assert(sizeof(BP_LevelManager_C_GetUnusedSystemLevelName) == 0x000190, "Wrong size on BP_LevelManager_C_GetUnusedSystemLevelName");
static_assert(offsetof(BP_LevelManager_C_GetUnusedSystemLevelName, WillUnloadAreaName) == 0x000000, "Member 'BP_LevelManager_C_GetUnusedSystemLevelName::WillUnloadAreaName' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetUnusedSystemLevelName, Found) == 0x000008, "Member 'BP_LevelManager_C_GetUnusedSystemLevelName::Found' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetUnusedSystemLevelName, UnusedSystemLevel) == 0x000010, "Member 'BP_LevelManager_C_GetUnusedSystemLevelName::UnusedSystemLevel' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetUnusedSystemLevelName, WillUnloadSceneType) == 0x000038, "Member 'BP_LevelManager_C_GetUnusedSystemLevelName::WillUnloadSceneType' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetUnusedSystemLevelName, IsFound) == 0x000039, "Member 'BP_LevelManager_C_GetUnusedSystemLevelName::IsFound' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetUnusedSystemLevelName, Result) == 0x000040, "Member 'BP_LevelManager_C_GetUnusedSystemLevelName::Result' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetUnusedSystemLevelName, Temp_int_Array_Index_Variable) == 0x000050, "Member 'BP_LevelManager_C_GetUnusedSystemLevelName::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetUnusedSystemLevelName, Temp_int_Loop_Counter_Variable) == 0x000054, "Member 'BP_LevelManager_C_GetUnusedSystemLevelName::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetUnusedSystemLevelName, CallFunc_Add_IntInt_ReturnValue) == 0x000058, "Member 'BP_LevelManager_C_GetUnusedSystemLevelName::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetUnusedSystemLevelName, CallFunc_GetSystemLevel_SystemLevel) == 0x000060, "Member 'BP_LevelManager_C_GetUnusedSystemLevelName::CallFunc_GetSystemLevel_SystemLevel' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetUnusedSystemLevelName, CallFunc_GetSystemLevel_Found) == 0x000088, "Member 'BP_LevelManager_C_GetUnusedSystemLevelName::CallFunc_GetSystemLevel_Found' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetUnusedSystemLevelName, CallFunc_Map_Find_Value) == 0x000090, "Member 'BP_LevelManager_C_GetUnusedSystemLevelName::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetUnusedSystemLevelName, CallFunc_Map_Find_ReturnValue) == 0x0000F8, "Member 'BP_LevelManager_C_GetUnusedSystemLevelName::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetUnusedSystemLevelName, CallFunc_Map_Keys_Keys) == 0x000100, "Member 'BP_LevelManager_C_GetUnusedSystemLevelName::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetUnusedSystemLevelName, CallFunc_Array_Get_Item) == 0x000110, "Member 'BP_LevelManager_C_GetUnusedSystemLevelName::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetUnusedSystemLevelName, CallFunc_Array_Length_ReturnValue) == 0x000118, "Member 'BP_LevelManager_C_GetUnusedSystemLevelName::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetUnusedSystemLevelName, CallFunc_Map_Find_Value_1) == 0x000120, "Member 'BP_LevelManager_C_GetUnusedSystemLevelName::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetUnusedSystemLevelName, CallFunc_Map_Find_ReturnValue_1) == 0x000188, "Member 'BP_LevelManager_C_GetUnusedSystemLevelName::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetUnusedSystemLevelName, CallFunc_Less_IntInt_ReturnValue) == 0x000189, "Member 'BP_LevelManager_C_GetUnusedSystemLevelName::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetUnusedSystemLevelName, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00018A, "Member 'BP_LevelManager_C_GetUnusedSystemLevelName::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetUnusedSystemLevelName, CallFunc_NotEqual_NameName_ReturnValue) == 0x00018B, "Member 'BP_LevelManager_C_GetUnusedSystemLevelName::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.GetSystemLevel
// 0x0090 (0x0090 - 0x0000)
struct BP_LevelManager_C_GetSystemLevel final
{
public:
	E_SceneType                                   SceneType;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D76[0x7];                                      // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UObject>                 SystemLevel;                                       // 0x0008(0x0028)(Parm, OutParm, HasGetValueTypeHash)
	bool                                          Found;                                             // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D77[0x7];                                      // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_SceneInfo                           CallFunc_GetDataTableRowFromName_OutRow;           // 0x0050(0x0010)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D78[0x7];                                      // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UObject>                 CallFunc_Array_Get_Item;                           // 0x0068(0x0028)(HasGetValueTypeHash)
};
static_assert(alignof(BP_LevelManager_C_GetSystemLevel) == 0x000008, "Wrong alignment on BP_LevelManager_C_GetSystemLevel");
static_assert(sizeof(BP_LevelManager_C_GetSystemLevel) == 0x000090, "Wrong size on BP_LevelManager_C_GetSystemLevel");
static_assert(offsetof(BP_LevelManager_C_GetSystemLevel, SceneType) == 0x000000, "Member 'BP_LevelManager_C_GetSystemLevel::SceneType' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetSystemLevel, SystemLevel) == 0x000008, "Member 'BP_LevelManager_C_GetSystemLevel::SystemLevel' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetSystemLevel, Found) == 0x000030, "Member 'BP_LevelManager_C_GetSystemLevel::Found' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetSystemLevel, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000038, "Member 'BP_LevelManager_C_GetSystemLevel::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetSystemLevel, CallFunc_Conv_StringToName_ReturnValue) == 0x000048, "Member 'BP_LevelManager_C_GetSystemLevel::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetSystemLevel, CallFunc_GetDataTableRowFromName_OutRow) == 0x000050, "Member 'BP_LevelManager_C_GetSystemLevel::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetSystemLevel, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000060, "Member 'BP_LevelManager_C_GetSystemLevel::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetSystemLevel, CallFunc_Array_Get_Item) == 0x000068, "Member 'BP_LevelManager_C_GetSystemLevel::CallFunc_Array_Get_Item' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.IsAreaVisible
// 0x0090 (0x0090 - 0x0000)
struct BP_LevelManager_C_IsAreaVisible final
{
public:
	class FName                                   AreaName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AllVisible;                                        // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D79[0x7];                                      // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftObjectPtr<class UObject>>         CallFunc_GetAllLevelInLoadedAreaInfo_Levels;       // 0x0010(0x0010)(ReferenceParm, HasGetValueTypeHash)
	struct FS_AreaInfo                            CallFunc_GetAllLevelInLoadedAreaInfo_AreaInfo;     // 0x0020(0x0068)(HasGetValueTypeHash)
	bool                                          CallFunc_GetAllLevelInLoadedAreaInfo_Error;        // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLevelsVisible_AllVisible;               // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LevelManager_C_IsAreaVisible) == 0x000008, "Wrong alignment on BP_LevelManager_C_IsAreaVisible");
static_assert(sizeof(BP_LevelManager_C_IsAreaVisible) == 0x000090, "Wrong size on BP_LevelManager_C_IsAreaVisible");
static_assert(offsetof(BP_LevelManager_C_IsAreaVisible, AreaName) == 0x000000, "Member 'BP_LevelManager_C_IsAreaVisible::AreaName' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaVisible, AllVisible) == 0x000008, "Member 'BP_LevelManager_C_IsAreaVisible::AllVisible' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaVisible, CallFunc_GetAllLevelInLoadedAreaInfo_Levels) == 0x000010, "Member 'BP_LevelManager_C_IsAreaVisible::CallFunc_GetAllLevelInLoadedAreaInfo_Levels' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaVisible, CallFunc_GetAllLevelInLoadedAreaInfo_AreaInfo) == 0x000020, "Member 'BP_LevelManager_C_IsAreaVisible::CallFunc_GetAllLevelInLoadedAreaInfo_AreaInfo' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaVisible, CallFunc_GetAllLevelInLoadedAreaInfo_Error) == 0x000088, "Member 'BP_LevelManager_C_IsAreaVisible::CallFunc_GetAllLevelInLoadedAreaInfo_Error' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaVisible, CallFunc_IsLevelsVisible_AllVisible) == 0x000089, "Member 'BP_LevelManager_C_IsAreaVisible::CallFunc_IsLevelsVisible_AllVisible' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.GetAllLevelInArea
// 0x0198 (0x0198 - 0x0000)
struct BP_LevelManager_C_GetAllLevelInArea final
{
public:
	class FName                                   AreaName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UObject>>         Levels;                                            // 0x0008(0x0010)(Parm, OutParm, HasGetValueTypeHash)
	struct FS_AreaInfo                            AreaInfo;                                          // 0x0018(0x0068)(Parm, OutParm, HasGetValueTypeHash)
	bool                                          Error;                                             // 0x0080(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D7A[0x7];                                      // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftObjectPtr<class UObject>>         L_allLevel;                                        // 0x0088(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UObject>>         Tmp;                                               // 0x0098(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UObject>>         TmpLevels;                                         // 0x00A8(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<class FName>                           TmpLevelNames;                                     // 0x00B8(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FS_AreaInfo                            CallFunc_GetAreaInfo_AreaInfo;                     // 0x00C8(0x0068)(HasGetValueTypeHash)
	bool                                          CallFunc_GetAreaInfo_Found;                        // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D7B[0x3];                                      // 0x0131(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UObject>>         CallFunc_GetSceneSystemLevels_Levels;              // 0x0138(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TSoftObjectPtr<class UObject>                 CallFunc_Array_Get_Item;                           // 0x0148(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D7C[0x7];                                      // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftObjectPtr<class UObject>>         CallFunc_DebugFilterLevels_FilteredLevels;         // 0x0178(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D7D[0x3];                                      // 0x0191(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LevelManager_C_GetAllLevelInArea) == 0x000008, "Wrong alignment on BP_LevelManager_C_GetAllLevelInArea");
static_assert(sizeof(BP_LevelManager_C_GetAllLevelInArea) == 0x000198, "Wrong size on BP_LevelManager_C_GetAllLevelInArea");
static_assert(offsetof(BP_LevelManager_C_GetAllLevelInArea, AreaName) == 0x000000, "Member 'BP_LevelManager_C_GetAllLevelInArea::AreaName' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetAllLevelInArea, Levels) == 0x000008, "Member 'BP_LevelManager_C_GetAllLevelInArea::Levels' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetAllLevelInArea, AreaInfo) == 0x000018, "Member 'BP_LevelManager_C_GetAllLevelInArea::AreaInfo' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetAllLevelInArea, Error) == 0x000080, "Member 'BP_LevelManager_C_GetAllLevelInArea::Error' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetAllLevelInArea, L_allLevel) == 0x000088, "Member 'BP_LevelManager_C_GetAllLevelInArea::L_allLevel' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetAllLevelInArea, Tmp) == 0x000098, "Member 'BP_LevelManager_C_GetAllLevelInArea::Tmp' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetAllLevelInArea, TmpLevels) == 0x0000A8, "Member 'BP_LevelManager_C_GetAllLevelInArea::TmpLevels' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetAllLevelInArea, TmpLevelNames) == 0x0000B8, "Member 'BP_LevelManager_C_GetAllLevelInArea::TmpLevelNames' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetAllLevelInArea, CallFunc_GetAreaInfo_AreaInfo) == 0x0000C8, "Member 'BP_LevelManager_C_GetAllLevelInArea::CallFunc_GetAreaInfo_AreaInfo' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetAllLevelInArea, CallFunc_GetAreaInfo_Found) == 0x000130, "Member 'BP_LevelManager_C_GetAllLevelInArea::CallFunc_GetAreaInfo_Found' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetAllLevelInArea, Temp_int_Array_Index_Variable) == 0x000134, "Member 'BP_LevelManager_C_GetAllLevelInArea::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetAllLevelInArea, CallFunc_GetSceneSystemLevels_Levels) == 0x000138, "Member 'BP_LevelManager_C_GetAllLevelInArea::CallFunc_GetSceneSystemLevels_Levels' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetAllLevelInArea, CallFunc_Array_Get_Item) == 0x000148, "Member 'BP_LevelManager_C_GetAllLevelInArea::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetAllLevelInArea, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000170, "Member 'BP_LevelManager_C_GetAllLevelInArea::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetAllLevelInArea, CallFunc_DebugFilterLevels_FilteredLevels) == 0x000178, "Member 'BP_LevelManager_C_GetAllLevelInArea::CallFunc_DebugFilterLevels_FilteredLevels' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetAllLevelInArea, CallFunc_Array_Length_ReturnValue) == 0x000188, "Member 'BP_LevelManager_C_GetAllLevelInArea::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetAllLevelInArea, Temp_int_Loop_Counter_Variable) == 0x00018C, "Member 'BP_LevelManager_C_GetAllLevelInArea::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetAllLevelInArea, CallFunc_Less_IntInt_ReturnValue) == 0x000190, "Member 'BP_LevelManager_C_GetAllLevelInArea::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetAllLevelInArea, CallFunc_Add_IntInt_ReturnValue) == 0x000194, "Member 'BP_LevelManager_C_GetAllLevelInArea::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.IsAreaUnvisible
// 0x00E0 (0x00E0 - 0x0000)
struct BP_LevelManager_C_IsAreaUnvisible final
{
public:
	class FName                                   AreaName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AllUnvisible;                                      // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D7E[0x7];                                      // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftObjectPtr<class UObject>>         CallFunc_GetAllLevelInArea_Levels;                 // 0x0010(0x0010)(ReferenceParm, HasGetValueTypeHash)
	struct FS_AreaInfo                            CallFunc_GetAllLevelInArea_AreaInfo;               // 0x0020(0x0068)(HasGetValueTypeHash)
	bool                                          CallFunc_GetAllLevelInArea_Error;                  // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D7F[0x3];                                      // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D80[0x4];                                      // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UObject>                 CallFunc_Array_Get_Item;                           // 0x0098(0x0028)(HasGetValueTypeHash)
	class FName                                   CallFunc_ObjectSoftRefToName_ReturnValue;          // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D81[0x4];                                      // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelStreaming*                        CallFunc_GetStreamingLevel_ReturnValue;            // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLevelVisible_ReturnValue;               // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D82[0x1];                                      // 0x00DB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LevelManager_C_IsAreaUnvisible) == 0x000008, "Wrong alignment on BP_LevelManager_C_IsAreaUnvisible");
static_assert(sizeof(BP_LevelManager_C_IsAreaUnvisible) == 0x0000E0, "Wrong size on BP_LevelManager_C_IsAreaUnvisible");
static_assert(offsetof(BP_LevelManager_C_IsAreaUnvisible, AreaName) == 0x000000, "Member 'BP_LevelManager_C_IsAreaUnvisible::AreaName' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaUnvisible, AllUnvisible) == 0x000008, "Member 'BP_LevelManager_C_IsAreaUnvisible::AllUnvisible' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaUnvisible, CallFunc_GetAllLevelInArea_Levels) == 0x000010, "Member 'BP_LevelManager_C_IsAreaUnvisible::CallFunc_GetAllLevelInArea_Levels' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaUnvisible, CallFunc_GetAllLevelInArea_AreaInfo) == 0x000020, "Member 'BP_LevelManager_C_IsAreaUnvisible::CallFunc_GetAllLevelInArea_AreaInfo' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaUnvisible, CallFunc_GetAllLevelInArea_Error) == 0x000088, "Member 'BP_LevelManager_C_IsAreaUnvisible::CallFunc_GetAllLevelInArea_Error' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaUnvisible, Temp_int_Array_Index_Variable) == 0x00008C, "Member 'BP_LevelManager_C_IsAreaUnvisible::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaUnvisible, CallFunc_Array_Length_ReturnValue) == 0x000090, "Member 'BP_LevelManager_C_IsAreaUnvisible::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaUnvisible, CallFunc_Array_Get_Item) == 0x000098, "Member 'BP_LevelManager_C_IsAreaUnvisible::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaUnvisible, CallFunc_ObjectSoftRefToName_ReturnValue) == 0x0000C0, "Member 'BP_LevelManager_C_IsAreaUnvisible::CallFunc_ObjectSoftRefToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaUnvisible, Temp_int_Loop_Counter_Variable) == 0x0000C8, "Member 'BP_LevelManager_C_IsAreaUnvisible::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaUnvisible, CallFunc_GetStreamingLevel_ReturnValue) == 0x0000D0, "Member 'BP_LevelManager_C_IsAreaUnvisible::CallFunc_GetStreamingLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaUnvisible, CallFunc_IsValid_ReturnValue) == 0x0000D8, "Member 'BP_LevelManager_C_IsAreaUnvisible::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaUnvisible, CallFunc_IsLevelVisible_ReturnValue) == 0x0000D9, "Member 'BP_LevelManager_C_IsAreaUnvisible::CallFunc_IsLevelVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaUnvisible, CallFunc_Less_IntInt_ReturnValue) == 0x0000DA, "Member 'BP_LevelManager_C_IsAreaUnvisible::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaUnvisible, CallFunc_Add_IntInt_ReturnValue) == 0x0000DC, "Member 'BP_LevelManager_C_IsAreaUnvisible::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.RequestWaitAreaVisible
// 0x000C (0x000C - 0x0000)
struct BP_LevelManager_C_RequestWaitAreaVisible final
{
public:
	class FName                                   AreaName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddLevelCommand_CommandNum;               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LevelManager_C_RequestWaitAreaVisible) == 0x000004, "Wrong alignment on BP_LevelManager_C_RequestWaitAreaVisible");
static_assert(sizeof(BP_LevelManager_C_RequestWaitAreaVisible) == 0x00000C, "Wrong size on BP_LevelManager_C_RequestWaitAreaVisible");
static_assert(offsetof(BP_LevelManager_C_RequestWaitAreaVisible, AreaName) == 0x000000, "Member 'BP_LevelManager_C_RequestWaitAreaVisible::AreaName' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestWaitAreaVisible, CallFunc_AddLevelCommand_CommandNum) == 0x000008, "Member 'BP_LevelManager_C_RequestWaitAreaVisible::CallFunc_AddLevelCommand_CommandNum' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.RequestWaitAreaUnvisible
// 0x000C (0x000C - 0x0000)
struct BP_LevelManager_C_RequestWaitAreaUnvisible final
{
public:
	class FName                                   AreaName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddLevelCommand_CommandNum;               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LevelManager_C_RequestWaitAreaUnvisible) == 0x000004, "Wrong alignment on BP_LevelManager_C_RequestWaitAreaUnvisible");
static_assert(sizeof(BP_LevelManager_C_RequestWaitAreaUnvisible) == 0x00000C, "Wrong size on BP_LevelManager_C_RequestWaitAreaUnvisible");
static_assert(offsetof(BP_LevelManager_C_RequestWaitAreaUnvisible, AreaName) == 0x000000, "Member 'BP_LevelManager_C_RequestWaitAreaUnvisible::AreaName' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestWaitAreaUnvisible, CallFunc_AddLevelCommand_CommandNum) == 0x000008, "Member 'BP_LevelManager_C_RequestWaitAreaUnvisible::CallFunc_AddLevelCommand_CommandNum' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.DebugPrintCommandInfo
// 0x0250 (0x0250 - 0x0000)
struct BP_LevelManager_C_DebugPrintCommandInfo final
{
public:
	struct FS_LevelManagerCommand                 Command;                                           // 0x0000(0x0048)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_BoolToText_ReturnValue;              // 0x0058(0x0018)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0070(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0088(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00C8(0x0040)(HasGetValueTypeHash)
	class FName                                   CallFunc_ObjectSoftRefToName_ReturnValue;          // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0110(0x0018)()
	class FText                                   CallFunc_Conv_NameToText_ReturnValue_1;            // 0x0128(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0140(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0180(0x0040)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_NameToText_ReturnValue_2;            // 0x01C0(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_4;            // 0x01D8(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0218(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0228(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0240(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LevelManager_C_DebugPrintCommandInfo) == 0x000008, "Wrong alignment on BP_LevelManager_C_DebugPrintCommandInfo");
static_assert(sizeof(BP_LevelManager_C_DebugPrintCommandInfo) == 0x000250, "Wrong size on BP_LevelManager_C_DebugPrintCommandInfo");
static_assert(offsetof(BP_LevelManager_C_DebugPrintCommandInfo, Command) == 0x000000, "Member 'BP_LevelManager_C_DebugPrintCommandInfo::Command' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_DebugPrintCommandInfo, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000048, "Member 'BP_LevelManager_C_DebugPrintCommandInfo::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_DebugPrintCommandInfo, CallFunc_Conv_BoolToText_ReturnValue) == 0x000058, "Member 'BP_LevelManager_C_DebugPrintCommandInfo::CallFunc_Conv_BoolToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_DebugPrintCommandInfo, CallFunc_Conv_StringToText_ReturnValue) == 0x000070, "Member 'BP_LevelManager_C_DebugPrintCommandInfo::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_DebugPrintCommandInfo, K2Node_MakeStruct_FormatArgumentData) == 0x000088, "Member 'BP_LevelManager_C_DebugPrintCommandInfo::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_DebugPrintCommandInfo, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000C8, "Member 'BP_LevelManager_C_DebugPrintCommandInfo::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_DebugPrintCommandInfo, CallFunc_ObjectSoftRefToName_ReturnValue) == 0x000108, "Member 'BP_LevelManager_C_DebugPrintCommandInfo::CallFunc_ObjectSoftRefToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_DebugPrintCommandInfo, CallFunc_Conv_NameToText_ReturnValue) == 0x000110, "Member 'BP_LevelManager_C_DebugPrintCommandInfo::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_DebugPrintCommandInfo, CallFunc_Conv_NameToText_ReturnValue_1) == 0x000128, "Member 'BP_LevelManager_C_DebugPrintCommandInfo::CallFunc_Conv_NameToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_DebugPrintCommandInfo, K2Node_MakeStruct_FormatArgumentData_2) == 0x000140, "Member 'BP_LevelManager_C_DebugPrintCommandInfo::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_DebugPrintCommandInfo, K2Node_MakeStruct_FormatArgumentData_3) == 0x000180, "Member 'BP_LevelManager_C_DebugPrintCommandInfo::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_DebugPrintCommandInfo, CallFunc_Conv_NameToText_ReturnValue_2) == 0x0001C0, "Member 'BP_LevelManager_C_DebugPrintCommandInfo::CallFunc_Conv_NameToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_DebugPrintCommandInfo, K2Node_MakeStruct_FormatArgumentData_4) == 0x0001D8, "Member 'BP_LevelManager_C_DebugPrintCommandInfo::K2Node_MakeStruct_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_DebugPrintCommandInfo, K2Node_MakeArray_Array) == 0x000218, "Member 'BP_LevelManager_C_DebugPrintCommandInfo::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_DebugPrintCommandInfo, CallFunc_Format_ReturnValue) == 0x000228, "Member 'BP_LevelManager_C_DebugPrintCommandInfo::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_DebugPrintCommandInfo, CallFunc_Conv_TextToString_ReturnValue) == 0x000240, "Member 'BP_LevelManager_C_DebugPrintCommandInfo::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C._RequestCancelLoadAreaAsync
// 0x000C (0x000C - 0x0000)
struct BP_LevelManager_C__RequestCancelLoadAreaAsync final
{
public:
	class FName                                   AreaName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SetVisbleAfterLoad;                                // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LevelManager_C__RequestCancelLoadAreaAsync) == 0x000004, "Wrong alignment on BP_LevelManager_C__RequestCancelLoadAreaAsync");
static_assert(sizeof(BP_LevelManager_C__RequestCancelLoadAreaAsync) == 0x00000C, "Wrong size on BP_LevelManager_C__RequestCancelLoadAreaAsync");
static_assert(offsetof(BP_LevelManager_C__RequestCancelLoadAreaAsync, AreaName) == 0x000000, "Member 'BP_LevelManager_C__RequestCancelLoadAreaAsync::AreaName' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C__RequestCancelLoadAreaAsync, SetVisbleAfterLoad) == 0x000008, "Member 'BP_LevelManager_C__RequestCancelLoadAreaAsync::SetVisbleAfterLoad' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C__RequestCancelLoadAreaAsync, CallFunc_NotEqual_NameName_ReturnValue) == 0x000009, "Member 'BP_LevelManager_C__RequestCancelLoadAreaAsync::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C._RequestLoadAssetPackAsync
// 0x000C (0x000C - 0x0000)
struct BP_LevelManager_C__RequestLoadAssetPackAsync final
{
public:
	class FName                                   AssetPackName;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddLevelCommand_CommandNum;               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LevelManager_C__RequestLoadAssetPackAsync) == 0x000004, "Wrong alignment on BP_LevelManager_C__RequestLoadAssetPackAsync");
static_assert(sizeof(BP_LevelManager_C__RequestLoadAssetPackAsync) == 0x00000C, "Wrong size on BP_LevelManager_C__RequestLoadAssetPackAsync");
static_assert(offsetof(BP_LevelManager_C__RequestLoadAssetPackAsync, AssetPackName) == 0x000000, "Member 'BP_LevelManager_C__RequestLoadAssetPackAsync::AssetPackName' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C__RequestLoadAssetPackAsync, CallFunc_AddLevelCommand_CommandNum) == 0x000008, "Member 'BP_LevelManager_C__RequestLoadAssetPackAsync::CallFunc_AddLevelCommand_CommandNum' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.RequestLoadAssetAsync
// 0x0030 (0x0030 - 0x0000)
struct BP_LevelManager_C_RequestLoadAssetAsync final
{
public:
	TSoftObjectPtr<class UObject>                 Asset;                                             // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	int32                                         CallFunc_AddLevelCommand_CommandNum;               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LevelManager_C_RequestLoadAssetAsync) == 0x000008, "Wrong alignment on BP_LevelManager_C_RequestLoadAssetAsync");
static_assert(sizeof(BP_LevelManager_C_RequestLoadAssetAsync) == 0x000030, "Wrong size on BP_LevelManager_C_RequestLoadAssetAsync");
static_assert(offsetof(BP_LevelManager_C_RequestLoadAssetAsync, Asset) == 0x000000, "Member 'BP_LevelManager_C_RequestLoadAssetAsync::Asset' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestLoadAssetAsync, CallFunc_AddLevelCommand_CommandNum) == 0x000028, "Member 'BP_LevelManager_C_RequestLoadAssetAsync::CallFunc_AddLevelCommand_CommandNum' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.GetAllLevelInAreaWithoutSystem
// 0x00D0 (0x00D0 - 0x0000)
struct BP_LevelManager_C_GetAllLevelInAreaWithoutSystem final
{
public:
	class FName                                   AreaName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UObject>>         Levels;                                            // 0x0008(0x0010)(Parm, OutParm, HasGetValueTypeHash)
	bool                                          Error;                                             // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D83[0x7];                                      // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftObjectPtr<class UObject>>         Tmp;                                               // 0x0020(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UObject>>         TmpLevels;                                         // 0x0030(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<class FName>                           TmpLevelNames;                                     // 0x0040(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FS_AreaInfo                            CallFunc_GetAreaInfo_AreaInfo;                     // 0x0050(0x0068)(HasGetValueTypeHash)
	bool                                          CallFunc_GetAreaInfo_Found;                        // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D84[0x7];                                      // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftObjectPtr<class UObject>>         CallFunc_DebugFilterLevels_FilteredLevels;         // 0x00C0(0x0010)(ReferenceParm, HasGetValueTypeHash)
};
static_assert(alignof(BP_LevelManager_C_GetAllLevelInAreaWithoutSystem) == 0x000008, "Wrong alignment on BP_LevelManager_C_GetAllLevelInAreaWithoutSystem");
static_assert(sizeof(BP_LevelManager_C_GetAllLevelInAreaWithoutSystem) == 0x0000D0, "Wrong size on BP_LevelManager_C_GetAllLevelInAreaWithoutSystem");
static_assert(offsetof(BP_LevelManager_C_GetAllLevelInAreaWithoutSystem, AreaName) == 0x000000, "Member 'BP_LevelManager_C_GetAllLevelInAreaWithoutSystem::AreaName' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetAllLevelInAreaWithoutSystem, Levels) == 0x000008, "Member 'BP_LevelManager_C_GetAllLevelInAreaWithoutSystem::Levels' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetAllLevelInAreaWithoutSystem, Error) == 0x000018, "Member 'BP_LevelManager_C_GetAllLevelInAreaWithoutSystem::Error' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetAllLevelInAreaWithoutSystem, Tmp) == 0x000020, "Member 'BP_LevelManager_C_GetAllLevelInAreaWithoutSystem::Tmp' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetAllLevelInAreaWithoutSystem, TmpLevels) == 0x000030, "Member 'BP_LevelManager_C_GetAllLevelInAreaWithoutSystem::TmpLevels' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetAllLevelInAreaWithoutSystem, TmpLevelNames) == 0x000040, "Member 'BP_LevelManager_C_GetAllLevelInAreaWithoutSystem::TmpLevelNames' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetAllLevelInAreaWithoutSystem, CallFunc_GetAreaInfo_AreaInfo) == 0x000050, "Member 'BP_LevelManager_C_GetAllLevelInAreaWithoutSystem::CallFunc_GetAreaInfo_AreaInfo' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetAllLevelInAreaWithoutSystem, CallFunc_GetAreaInfo_Found) == 0x0000B8, "Member 'BP_LevelManager_C_GetAllLevelInAreaWithoutSystem::CallFunc_GetAreaInfo_Found' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetAllLevelInAreaWithoutSystem, CallFunc_DebugFilterLevels_FilteredLevels) == 0x0000C0, "Member 'BP_LevelManager_C_GetAllLevelInAreaWithoutSystem::CallFunc_DebugFilterLevels_FilteredLevels' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.GetSceneSystemLevelsByArea
// 0x00B8 (0x00B8 - 0x0000)
struct BP_LevelManager_C_GetSceneSystemLevelsByArea final
{
public:
	class FName                                   AreaName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UObject>>         Levels;                                            // 0x0008(0x0010)(Parm, OutParm, HasGetValueTypeHash)
	struct FS_AreaInfo                            CallFunc_GetAreaInfo_AreaInfo;                     // 0x0018(0x0068)(HasGetValueTypeHash)
	bool                                          CallFunc_GetAreaInfo_Found;                        // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D85[0x7];                                      // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_SceneInfo                           CallFunc_GetDataTableRowFromName_OutRow;           // 0x00A0(0x0010)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LevelManager_C_GetSceneSystemLevelsByArea) == 0x000008, "Wrong alignment on BP_LevelManager_C_GetSceneSystemLevelsByArea");
static_assert(sizeof(BP_LevelManager_C_GetSceneSystemLevelsByArea) == 0x0000B8, "Wrong size on BP_LevelManager_C_GetSceneSystemLevelsByArea");
static_assert(offsetof(BP_LevelManager_C_GetSceneSystemLevelsByArea, AreaName) == 0x000000, "Member 'BP_LevelManager_C_GetSceneSystemLevelsByArea::AreaName' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetSceneSystemLevelsByArea, Levels) == 0x000008, "Member 'BP_LevelManager_C_GetSceneSystemLevelsByArea::Levels' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetSceneSystemLevelsByArea, CallFunc_GetAreaInfo_AreaInfo) == 0x000018, "Member 'BP_LevelManager_C_GetSceneSystemLevelsByArea::CallFunc_GetAreaInfo_AreaInfo' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetSceneSystemLevelsByArea, CallFunc_GetAreaInfo_Found) == 0x000080, "Member 'BP_LevelManager_C_GetSceneSystemLevelsByArea::CallFunc_GetAreaInfo_Found' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetSceneSystemLevelsByArea, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000088, "Member 'BP_LevelManager_C_GetSceneSystemLevelsByArea::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetSceneSystemLevelsByArea, CallFunc_Conv_StringToName_ReturnValue) == 0x000098, "Member 'BP_LevelManager_C_GetSceneSystemLevelsByArea::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetSceneSystemLevelsByArea, CallFunc_GetDataTableRowFromName_OutRow) == 0x0000A0, "Member 'BP_LevelManager_C_GetSceneSystemLevelsByArea::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetSceneSystemLevelsByArea, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0000B0, "Member 'BP_LevelManager_C_GetSceneSystemLevelsByArea::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.ResetPlayerTransform
// 0x00E0 (0x00E0 - 0x0000)
struct BP_LevelManager_C_ResetPlayerTransform final
{
public:
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class APlayerStart*>                   CallFunc_GetAllActorsOfClass_OutActors;            // 0x0008(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class APlayerStart*                           CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0020(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult;      // 0x0050(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue;         // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LevelManager_C_ResetPlayerTransform) == 0x000010, "Wrong alignment on BP_LevelManager_C_ResetPlayerTransform");
static_assert(sizeof(BP_LevelManager_C_ResetPlayerTransform) == 0x0000E0, "Wrong size on BP_LevelManager_C_ResetPlayerTransform");
static_assert(offsetof(BP_LevelManager_C_ResetPlayerTransform, CallFunc_GetPlayerPawn_ReturnValue) == 0x000000, "Member 'BP_LevelManager_C_ResetPlayerTransform::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ResetPlayerTransform, CallFunc_GetAllActorsOfClass_OutActors) == 0x000008, "Member 'BP_LevelManager_C_ResetPlayerTransform::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ResetPlayerTransform, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_LevelManager_C_ResetPlayerTransform::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ResetPlayerTransform, CallFunc_GetTransform_ReturnValue) == 0x000020, "Member 'BP_LevelManager_C_ResetPlayerTransform::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ResetPlayerTransform, CallFunc_K2_SetActorTransform_SweepHitResult) == 0x000050, "Member 'BP_LevelManager_C_ResetPlayerTransform::CallFunc_K2_SetActorTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ResetPlayerTransform, CallFunc_K2_SetActorTransform_ReturnValue) == 0x0000D8, "Member 'BP_LevelManager_C_ResetPlayerTransform::CallFunc_K2_SetActorTransform_ReturnValue' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.RequestSetCallbackPlayerStartAfterAreaVisible
// 0x0010 (0x0010 - 0x0000)
struct BP_LevelManager_C_RequestSetCallbackPlayerStartAfterAreaVisible final
{
public:
	class FString                                 PortalName;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LevelManager_C_RequestSetCallbackPlayerStartAfterAreaVisible) == 0x000008, "Wrong alignment on BP_LevelManager_C_RequestSetCallbackPlayerStartAfterAreaVisible");
static_assert(sizeof(BP_LevelManager_C_RequestSetCallbackPlayerStartAfterAreaVisible) == 0x000010, "Wrong size on BP_LevelManager_C_RequestSetCallbackPlayerStartAfterAreaVisible");
static_assert(offsetof(BP_LevelManager_C_RequestSetCallbackPlayerStartAfterAreaVisible, PortalName) == 0x000000, "Member 'BP_LevelManager_C_RequestSetCallbackPlayerStartAfterAreaVisible::PortalName' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.UpdateLoadedLevels
// 0x0088 (0x0088 - 0x0000)
struct BP_LevelManager_C_UpdateLoadedLevels final
{
public:
	struct FS_LoadedLevelInfo                     LevelInfoToRemove;                                 // 0x0000(0x0048)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<int32>                                 ToDeleteIdices;                                    // 0x0048(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	bool                                          CurVisible;                                        // 0x0058(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          OldVisible;                                        // 0x0059(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D86[0x2];                                      // 0x005A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D87[0x3];                                      // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_ObjectSoftRefToName_ReturnValue;          // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelStreaming*                        CallFunc_GetStreamingLevel_ReturnValue;            // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLevelVisible_ReturnValue;               // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0082(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LevelManager_C_UpdateLoadedLevels) == 0x000008, "Wrong alignment on BP_LevelManager_C_UpdateLoadedLevels");
static_assert(sizeof(BP_LevelManager_C_UpdateLoadedLevels) == 0x000088, "Wrong size on BP_LevelManager_C_UpdateLoadedLevels");
static_assert(offsetof(BP_LevelManager_C_UpdateLoadedLevels, LevelInfoToRemove) == 0x000000, "Member 'BP_LevelManager_C_UpdateLoadedLevels::LevelInfoToRemove' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_UpdateLoadedLevels, ToDeleteIdices) == 0x000048, "Member 'BP_LevelManager_C_UpdateLoadedLevels::ToDeleteIdices' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_UpdateLoadedLevels, CurVisible) == 0x000058, "Member 'BP_LevelManager_C_UpdateLoadedLevels::CurVisible' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_UpdateLoadedLevels, OldVisible) == 0x000059, "Member 'BP_LevelManager_C_UpdateLoadedLevels::OldVisible' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_UpdateLoadedLevels, Temp_int_Loop_Counter_Variable) == 0x00005C, "Member 'BP_LevelManager_C_UpdateLoadedLevels::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_UpdateLoadedLevels, CallFunc_Add_IntInt_ReturnValue) == 0x000060, "Member 'BP_LevelManager_C_UpdateLoadedLevels::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_UpdateLoadedLevels, Temp_int_Array_Index_Variable) == 0x000064, "Member 'BP_LevelManager_C_UpdateLoadedLevels::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_UpdateLoadedLevels, CallFunc_Array_Length_ReturnValue) == 0x000068, "Member 'BP_LevelManager_C_UpdateLoadedLevels::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_UpdateLoadedLevels, CallFunc_Less_IntInt_ReturnValue) == 0x00006C, "Member 'BP_LevelManager_C_UpdateLoadedLevels::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_UpdateLoadedLevels, CallFunc_ObjectSoftRefToName_ReturnValue) == 0x000070, "Member 'BP_LevelManager_C_UpdateLoadedLevels::CallFunc_ObjectSoftRefToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_UpdateLoadedLevels, CallFunc_GetStreamingLevel_ReturnValue) == 0x000078, "Member 'BP_LevelManager_C_UpdateLoadedLevels::CallFunc_GetStreamingLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_UpdateLoadedLevels, CallFunc_IsValid_ReturnValue) == 0x000080, "Member 'BP_LevelManager_C_UpdateLoadedLevels::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_UpdateLoadedLevels, CallFunc_IsLevelVisible_ReturnValue) == 0x000081, "Member 'BP_LevelManager_C_UpdateLoadedLevels::CallFunc_IsLevelVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_UpdateLoadedLevels, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000082, "Member 'BP_LevelManager_C_UpdateLoadedLevels::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.IsLevelInLoadedLevelInfo
// 0x0090 (0x0090 - 0x0000)
struct BP_LevelManager_C_IsLevelInLoadedLevelInfo final
{
public:
	TSoftObjectPtr<class UObject>                 Level;                                             // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	struct FS_LoadedLevelInfo                     LevelInfoRef;                                      // 0x0028(0x0048)(Parm, OutParm, HasGetValueTypeHash)
	bool                                          Exist;                                             // 0x0070(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D88[0x2];                                      // 0x0072(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D89[0x3];                                      // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_SoftObjectReference_ReturnValue; // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LevelManager_C_IsLevelInLoadedLevelInfo) == 0x000008, "Wrong alignment on BP_LevelManager_C_IsLevelInLoadedLevelInfo");
static_assert(sizeof(BP_LevelManager_C_IsLevelInLoadedLevelInfo) == 0x000090, "Wrong size on BP_LevelManager_C_IsLevelInLoadedLevelInfo");
static_assert(offsetof(BP_LevelManager_C_IsLevelInLoadedLevelInfo, Level) == 0x000000, "Member 'BP_LevelManager_C_IsLevelInLoadedLevelInfo::Level' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsLevelInLoadedLevelInfo, LevelInfoRef) == 0x000028, "Member 'BP_LevelManager_C_IsLevelInLoadedLevelInfo::LevelInfoRef' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsLevelInLoadedLevelInfo, Exist) == 0x000070, "Member 'BP_LevelManager_C_IsLevelInLoadedLevelInfo::Exist' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsLevelInLoadedLevelInfo, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000071, "Member 'BP_LevelManager_C_IsLevelInLoadedLevelInfo::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsLevelInLoadedLevelInfo, Temp_int_Array_Index_Variable) == 0x000074, "Member 'BP_LevelManager_C_IsLevelInLoadedLevelInfo::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsLevelInLoadedLevelInfo, Temp_int_Loop_Num_Variable) == 0x000078, "Member 'BP_LevelManager_C_IsLevelInLoadedLevelInfo::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsLevelInLoadedLevelInfo, Temp_int_Loop_Counter_Variable) == 0x00007C, "Member 'BP_LevelManager_C_IsLevelInLoadedLevelInfo::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsLevelInLoadedLevelInfo, CallFunc_Less_IntInt_ReturnValue) == 0x000080, "Member 'BP_LevelManager_C_IsLevelInLoadedLevelInfo::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsLevelInLoadedLevelInfo, CallFunc_Add_IntInt_ReturnValue) == 0x000084, "Member 'BP_LevelManager_C_IsLevelInLoadedLevelInfo::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsLevelInLoadedLevelInfo, CallFunc_Array_Length_ReturnValue) == 0x000088, "Member 'BP_LevelManager_C_IsLevelInLoadedLevelInfo::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsLevelInLoadedLevelInfo, CallFunc_EqualEqual_SoftObjectReference_ReturnValue) == 0x00008C, "Member 'BP_LevelManager_C_IsLevelInLoadedLevelInfo::CallFunc_EqualEqual_SoftObjectReference_ReturnValue' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.RemoveLevelFromLevelInfo
// 0x0128 (0x0128 - 0x0000)
struct BP_LevelManager_C_RemoveLevelFromLevelInfo final
{
public:
	TSoftObjectPtr<class UObject>                 Level;                                             // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_ObjectSoftRefToName_ReturnValue;          // 0x0034(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D8A[0x4];                                      // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0040(0x0018)()
	struct FS_LoadedLevelInfo                     CallFunc_Array_Get_Item;                           // 0x0058(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x00A0(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00E0(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_SoftObjectReference_ReturnValue; // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D8B[0x7];                                      // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00F8(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0110(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LevelManager_C_RemoveLevelFromLevelInfo) == 0x000008, "Wrong alignment on BP_LevelManager_C_RemoveLevelFromLevelInfo");
static_assert(sizeof(BP_LevelManager_C_RemoveLevelFromLevelInfo) == 0x000128, "Wrong size on BP_LevelManager_C_RemoveLevelFromLevelInfo");
static_assert(offsetof(BP_LevelManager_C_RemoveLevelFromLevelInfo, Level) == 0x000000, "Member 'BP_LevelManager_C_RemoveLevelFromLevelInfo::Level' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RemoveLevelFromLevelInfo, Temp_int_Array_Index_Variable) == 0x000028, "Member 'BP_LevelManager_C_RemoveLevelFromLevelInfo::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RemoveLevelFromLevelInfo, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'BP_LevelManager_C_RemoveLevelFromLevelInfo::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RemoveLevelFromLevelInfo, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'BP_LevelManager_C_RemoveLevelFromLevelInfo::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RemoveLevelFromLevelInfo, CallFunc_ObjectSoftRefToName_ReturnValue) == 0x000034, "Member 'BP_LevelManager_C_RemoveLevelFromLevelInfo::CallFunc_ObjectSoftRefToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RemoveLevelFromLevelInfo, CallFunc_Conv_NameToText_ReturnValue) == 0x000040, "Member 'BP_LevelManager_C_RemoveLevelFromLevelInfo::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RemoveLevelFromLevelInfo, CallFunc_Array_Get_Item) == 0x000058, "Member 'BP_LevelManager_C_RemoveLevelFromLevelInfo::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RemoveLevelFromLevelInfo, K2Node_MakeStruct_FormatArgumentData) == 0x0000A0, "Member 'BP_LevelManager_C_RemoveLevelFromLevelInfo::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RemoveLevelFromLevelInfo, K2Node_MakeArray_Array) == 0x0000E0, "Member 'BP_LevelManager_C_RemoveLevelFromLevelInfo::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RemoveLevelFromLevelInfo, CallFunc_EqualEqual_SoftObjectReference_ReturnValue) == 0x0000F0, "Member 'BP_LevelManager_C_RemoveLevelFromLevelInfo::CallFunc_EqualEqual_SoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RemoveLevelFromLevelInfo, CallFunc_Format_ReturnValue) == 0x0000F8, "Member 'BP_LevelManager_C_RemoveLevelFromLevelInfo::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RemoveLevelFromLevelInfo, CallFunc_Conv_TextToString_ReturnValue) == 0x000110, "Member 'BP_LevelManager_C_RemoveLevelFromLevelInfo::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RemoveLevelFromLevelInfo, CallFunc_Array_Length_ReturnValue) == 0x000120, "Member 'BP_LevelManager_C_RemoveLevelFromLevelInfo::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RemoveLevelFromLevelInfo, CallFunc_Less_IntInt_ReturnValue) == 0x000124, "Member 'BP_LevelManager_C_RemoveLevelFromLevelInfo::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.GetAllAreaInfoLevels
// 0x00E8 (0x00E8 - 0x0000)
struct BP_LevelManager_C_GetAllAreaInfoLevels final
{
public:
	class FName                                   AdditionalArea;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   RemoveArea;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UObject>>         Levels;                                            // 0x0010(0x0010)(Parm, OutParm, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UObject>>         AllLevels;                                         // 0x0020(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<class FName>                           NeedAreas;                                         // 0x0030(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D8C[0x4];                                      // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_Map_Keys_Keys;                            // 0x0050(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UObject>>         CallFunc_GetAllLevelInArea_Levels;                 // 0x0060(0x0010)(ReferenceParm, HasGetValueTypeHash)
	struct FS_AreaInfo                            CallFunc_GetAllLevelInArea_AreaInfo;               // 0x0070(0x0068)(HasGetValueTypeHash)
	bool                                          CallFunc_GetAllLevelInArea_Error;                  // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D8D[0x3];                                      // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D8E[0x2];                                      // 0x00E2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LevelManager_C_GetAllAreaInfoLevels) == 0x000008, "Wrong alignment on BP_LevelManager_C_GetAllAreaInfoLevels");
static_assert(sizeof(BP_LevelManager_C_GetAllAreaInfoLevels) == 0x0000E8, "Wrong size on BP_LevelManager_C_GetAllAreaInfoLevels");
static_assert(offsetof(BP_LevelManager_C_GetAllAreaInfoLevels, AdditionalArea) == 0x000000, "Member 'BP_LevelManager_C_GetAllAreaInfoLevels::AdditionalArea' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetAllAreaInfoLevels, RemoveArea) == 0x000008, "Member 'BP_LevelManager_C_GetAllAreaInfoLevels::RemoveArea' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetAllAreaInfoLevels, Levels) == 0x000010, "Member 'BP_LevelManager_C_GetAllAreaInfoLevels::Levels' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetAllAreaInfoLevels, AllLevels) == 0x000020, "Member 'BP_LevelManager_C_GetAllAreaInfoLevels::AllLevels' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetAllAreaInfoLevels, NeedAreas) == 0x000030, "Member 'BP_LevelManager_C_GetAllAreaInfoLevels::NeedAreas' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetAllAreaInfoLevels, Temp_int_Array_Index_Variable) == 0x000040, "Member 'BP_LevelManager_C_GetAllAreaInfoLevels::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetAllAreaInfoLevels, Temp_int_Loop_Counter_Variable) == 0x000044, "Member 'BP_LevelManager_C_GetAllAreaInfoLevels::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetAllAreaInfoLevels, CallFunc_Add_IntInt_ReturnValue) == 0x000048, "Member 'BP_LevelManager_C_GetAllAreaInfoLevels::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetAllAreaInfoLevels, CallFunc_Map_Keys_Keys) == 0x000050, "Member 'BP_LevelManager_C_GetAllAreaInfoLevels::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetAllAreaInfoLevels, CallFunc_GetAllLevelInArea_Levels) == 0x000060, "Member 'BP_LevelManager_C_GetAllAreaInfoLevels::CallFunc_GetAllLevelInArea_Levels' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetAllAreaInfoLevels, CallFunc_GetAllLevelInArea_AreaInfo) == 0x000070, "Member 'BP_LevelManager_C_GetAllAreaInfoLevels::CallFunc_GetAllLevelInArea_AreaInfo' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetAllAreaInfoLevels, CallFunc_GetAllLevelInArea_Error) == 0x0000D8, "Member 'BP_LevelManager_C_GetAllAreaInfoLevels::CallFunc_GetAllLevelInArea_Error' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetAllAreaInfoLevels, CallFunc_Array_Length_ReturnValue) == 0x0000DC, "Member 'BP_LevelManager_C_GetAllAreaInfoLevels::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetAllAreaInfoLevels, CallFunc_Less_IntInt_ReturnValue) == 0x0000E0, "Member 'BP_LevelManager_C_GetAllAreaInfoLevels::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetAllAreaInfoLevels, CallFunc_Array_RemoveItem_ReturnValue) == 0x0000E1, "Member 'BP_LevelManager_C_GetAllAreaInfoLevels::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetAllAreaInfoLevels, CallFunc_Array_Add_ReturnValue) == 0x0000E4, "Member 'BP_LevelManager_C_GetAllAreaInfoLevels::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.GetUnusedLevelWhenUnloadArea
// 0x0128 (0x0128 - 0x0000)
struct BP_LevelManager_C_GetUnusedLevelWhenUnloadArea final
{
public:
	class FName                                   UnloadAreaName;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   NextAreaName;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UObject>>         ShouldUnloadLevels;                                // 0x0010(0x0010)(Parm, OutParm, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UObject>>         ResultAreaLevels;                                  // 0x0020(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UObject>>         NeedAreaLevels;                                    // 0x0030(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UObject>>         UnloadAreaLevels;                                  // 0x0040(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D8F[0x4];                                      // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftObjectPtr<class UObject>>         CallFunc_GetAllLevelInLoadedAreaInfo_Levels;       // 0x0058(0x0010)(ReferenceParm, HasGetValueTypeHash)
	struct FS_AreaInfo                            CallFunc_GetAllLevelInLoadedAreaInfo_AreaInfo;     // 0x0068(0x0068)(HasGetValueTypeHash)
	bool                                          CallFunc_GetAllLevelInLoadedAreaInfo_Error;        // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D90[0x7];                                      // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftObjectPtr<class UObject>>         CallFunc_GetAllAreaInfoLevels_Levels;              // 0x00D8(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TSoftObjectPtr<class UObject>                 CallFunc_Array_Get_Item;                           // 0x00E8(0x0028)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x011C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x011D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D91[0x2];                                      // 0x011E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LevelManager_C_GetUnusedLevelWhenUnloadArea) == 0x000008, "Wrong alignment on BP_LevelManager_C_GetUnusedLevelWhenUnloadArea");
static_assert(sizeof(BP_LevelManager_C_GetUnusedLevelWhenUnloadArea) == 0x000128, "Wrong size on BP_LevelManager_C_GetUnusedLevelWhenUnloadArea");
static_assert(offsetof(BP_LevelManager_C_GetUnusedLevelWhenUnloadArea, UnloadAreaName) == 0x000000, "Member 'BP_LevelManager_C_GetUnusedLevelWhenUnloadArea::UnloadAreaName' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetUnusedLevelWhenUnloadArea, NextAreaName) == 0x000008, "Member 'BP_LevelManager_C_GetUnusedLevelWhenUnloadArea::NextAreaName' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetUnusedLevelWhenUnloadArea, ShouldUnloadLevels) == 0x000010, "Member 'BP_LevelManager_C_GetUnusedLevelWhenUnloadArea::ShouldUnloadLevels' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetUnusedLevelWhenUnloadArea, ResultAreaLevels) == 0x000020, "Member 'BP_LevelManager_C_GetUnusedLevelWhenUnloadArea::ResultAreaLevels' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetUnusedLevelWhenUnloadArea, NeedAreaLevels) == 0x000030, "Member 'BP_LevelManager_C_GetUnusedLevelWhenUnloadArea::NeedAreaLevels' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetUnusedLevelWhenUnloadArea, UnloadAreaLevels) == 0x000040, "Member 'BP_LevelManager_C_GetUnusedLevelWhenUnloadArea::UnloadAreaLevels' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetUnusedLevelWhenUnloadArea, Temp_int_Array_Index_Variable) == 0x000050, "Member 'BP_LevelManager_C_GetUnusedLevelWhenUnloadArea::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetUnusedLevelWhenUnloadArea, CallFunc_GetAllLevelInLoadedAreaInfo_Levels) == 0x000058, "Member 'BP_LevelManager_C_GetUnusedLevelWhenUnloadArea::CallFunc_GetAllLevelInLoadedAreaInfo_Levels' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetUnusedLevelWhenUnloadArea, CallFunc_GetAllLevelInLoadedAreaInfo_AreaInfo) == 0x000068, "Member 'BP_LevelManager_C_GetUnusedLevelWhenUnloadArea::CallFunc_GetAllLevelInLoadedAreaInfo_AreaInfo' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetUnusedLevelWhenUnloadArea, CallFunc_GetAllLevelInLoadedAreaInfo_Error) == 0x0000D0, "Member 'BP_LevelManager_C_GetUnusedLevelWhenUnloadArea::CallFunc_GetAllLevelInLoadedAreaInfo_Error' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetUnusedLevelWhenUnloadArea, CallFunc_GetAllAreaInfoLevels_Levels) == 0x0000D8, "Member 'BP_LevelManager_C_GetUnusedLevelWhenUnloadArea::CallFunc_GetAllAreaInfoLevels_Levels' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetUnusedLevelWhenUnloadArea, CallFunc_Array_Get_Item) == 0x0000E8, "Member 'BP_LevelManager_C_GetUnusedLevelWhenUnloadArea::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetUnusedLevelWhenUnloadArea, CallFunc_Array_Length_ReturnValue) == 0x000110, "Member 'BP_LevelManager_C_GetUnusedLevelWhenUnloadArea::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetUnusedLevelWhenUnloadArea, CallFunc_Array_Add_ReturnValue) == 0x000114, "Member 'BP_LevelManager_C_GetUnusedLevelWhenUnloadArea::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetUnusedLevelWhenUnloadArea, Temp_int_Loop_Counter_Variable) == 0x000118, "Member 'BP_LevelManager_C_GetUnusedLevelWhenUnloadArea::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetUnusedLevelWhenUnloadArea, CallFunc_Array_Contains_ReturnValue) == 0x00011C, "Member 'BP_LevelManager_C_GetUnusedLevelWhenUnloadArea::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetUnusedLevelWhenUnloadArea, CallFunc_Less_IntInt_ReturnValue) == 0x00011D, "Member 'BP_LevelManager_C_GetUnusedLevelWhenUnloadArea::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetUnusedLevelWhenUnloadArea, CallFunc_Add_IntInt_ReturnValue) == 0x000120, "Member 'BP_LevelManager_C_GetUnusedLevelWhenUnloadArea::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.SetStatToLoadedLevel
// 0x0088 (0x0088 - 0x0000)
struct BP_LevelManager_C_SetStatToLoadedLevel final
{
public:
	TSoftObjectPtr<class UObject>                 Level;                                             // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	E_LevelLoadStatus                             Status;                                            // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D92[0x3];                                      // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_LoadedLevelInfo                     CallFunc_Array_Get_Item;                           // 0x0038(0x0048)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_SoftObjectReference_ReturnValue; // 0x0085(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LevelManager_C_SetStatToLoadedLevel) == 0x000008, "Wrong alignment on BP_LevelManager_C_SetStatToLoadedLevel");
static_assert(sizeof(BP_LevelManager_C_SetStatToLoadedLevel) == 0x000088, "Wrong size on BP_LevelManager_C_SetStatToLoadedLevel");
static_assert(offsetof(BP_LevelManager_C_SetStatToLoadedLevel, Level) == 0x000000, "Member 'BP_LevelManager_C_SetStatToLoadedLevel::Level' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_SetStatToLoadedLevel, Status) == 0x000028, "Member 'BP_LevelManager_C_SetStatToLoadedLevel::Status' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_SetStatToLoadedLevel, Temp_int_Array_Index_Variable) == 0x00002C, "Member 'BP_LevelManager_C_SetStatToLoadedLevel::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_SetStatToLoadedLevel, Temp_int_Loop_Counter_Variable) == 0x000030, "Member 'BP_LevelManager_C_SetStatToLoadedLevel::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_SetStatToLoadedLevel, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'BP_LevelManager_C_SetStatToLoadedLevel::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_SetStatToLoadedLevel, CallFunc_Array_Get_Item) == 0x000038, "Member 'BP_LevelManager_C_SetStatToLoadedLevel::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_SetStatToLoadedLevel, CallFunc_Array_Length_ReturnValue) == 0x000080, "Member 'BP_LevelManager_C_SetStatToLoadedLevel::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_SetStatToLoadedLevel, CallFunc_Less_IntInt_ReturnValue) == 0x000084, "Member 'BP_LevelManager_C_SetStatToLoadedLevel::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_SetStatToLoadedLevel, CallFunc_EqualEqual_SoftObjectReference_ReturnValue) == 0x000085, "Member 'BP_LevelManager_C_SetStatToLoadedLevel::CallFunc_EqualEqual_SoftObjectReference_ReturnValue' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.StartPlayerWithPortalName
// 0x0280 (0x0280 - 0x0000)
struct BP_LevelManager_C_StartPlayerWithPortalName final
{
public:
	class FString                                 PortalName;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	TArray<class APlayerStart*>                   Portals;                                           // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	TArray<struct FUiSceneMapIconNode>            ResultList;                                        // 0x0020(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	class APlayerStart*                           CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D93[0x3];                                      // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0040(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_1;          // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D94[0x3];                                      // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerStart*                           CallFunc_Array_Get_Item_1;                         // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetTransform_ReturnValue_1;               // 0x00A0(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	class FString                                 CallFunc_GetDisplayName_ReturnValue_1;             // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x00E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_2;          // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D95[0x7];                                      // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SceneManager_C*                     CallFunc_GetSceneManager_SceneManager;             // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetStartPortalName_PortalName;            // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetPortalTransform_Transform;             // 0x0110(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetPortalTransform_Found;                 // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D96[0x7];                                      // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0148(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0160(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x01A0(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x01B0(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x01C8(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x01E0(0x0040)(HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0220(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0230(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0240(0x0018)()
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D97[0x7];                                      // 0x0259(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x0260(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0274(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D98[0x3];                                      // 0x0275(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x027C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LevelManager_C_StartPlayerWithPortalName) == 0x000010, "Wrong alignment on BP_LevelManager_C_StartPlayerWithPortalName");
static_assert(sizeof(BP_LevelManager_C_StartPlayerWithPortalName) == 0x000280, "Wrong size on BP_LevelManager_C_StartPlayerWithPortalName");
static_assert(offsetof(BP_LevelManager_C_StartPlayerWithPortalName, PortalName) == 0x000000, "Member 'BP_LevelManager_C_StartPlayerWithPortalName::PortalName' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_StartPlayerWithPortalName, Portals) == 0x000010, "Member 'BP_LevelManager_C_StartPlayerWithPortalName::Portals' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_StartPlayerWithPortalName, ResultList) == 0x000020, "Member 'BP_LevelManager_C_StartPlayerWithPortalName::ResultList' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_StartPlayerWithPortalName, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_LevelManager_C_StartPlayerWithPortalName::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_StartPlayerWithPortalName, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'BP_LevelManager_C_StartPlayerWithPortalName::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_StartPlayerWithPortalName, CallFunc_IsValid_ReturnValue) == 0x00003C, "Member 'BP_LevelManager_C_StartPlayerWithPortalName::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_StartPlayerWithPortalName, CallFunc_GetTransform_ReturnValue) == 0x000040, "Member 'BP_LevelManager_C_StartPlayerWithPortalName::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_StartPlayerWithPortalName, CallFunc_GetDisplayName_ReturnValue) == 0x000070, "Member 'BP_LevelManager_C_StartPlayerWithPortalName::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_StartPlayerWithPortalName, CallFunc_Conv_StringToName_ReturnValue) == 0x000080, "Member 'BP_LevelManager_C_StartPlayerWithPortalName::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_StartPlayerWithPortalName, CallFunc_Conv_StringToName_ReturnValue_1) == 0x000088, "Member 'BP_LevelManager_C_StartPlayerWithPortalName::CallFunc_Conv_StringToName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_StartPlayerWithPortalName, Temp_bool_True_if_break_was_hit_Variable) == 0x000090, "Member 'BP_LevelManager_C_StartPlayerWithPortalName::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_StartPlayerWithPortalName, Temp_int_Array_Index_Variable) == 0x000094, "Member 'BP_LevelManager_C_StartPlayerWithPortalName::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_StartPlayerWithPortalName, CallFunc_Array_Get_Item_1) == 0x000098, "Member 'BP_LevelManager_C_StartPlayerWithPortalName::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_StartPlayerWithPortalName, CallFunc_GetTransform_ReturnValue_1) == 0x0000A0, "Member 'BP_LevelManager_C_StartPlayerWithPortalName::CallFunc_GetTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_StartPlayerWithPortalName, CallFunc_GetDisplayName_ReturnValue_1) == 0x0000D0, "Member 'BP_LevelManager_C_StartPlayerWithPortalName::CallFunc_GetDisplayName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_StartPlayerWithPortalName, CallFunc_GetObjectName_ReturnValue) == 0x0000E0, "Member 'BP_LevelManager_C_StartPlayerWithPortalName::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_StartPlayerWithPortalName, CallFunc_Conv_StringToName_ReturnValue_2) == 0x0000F0, "Member 'BP_LevelManager_C_StartPlayerWithPortalName::CallFunc_Conv_StringToName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_StartPlayerWithPortalName, CallFunc_Not_PreBool_ReturnValue) == 0x0000F8, "Member 'BP_LevelManager_C_StartPlayerWithPortalName::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_StartPlayerWithPortalName, CallFunc_GetSceneManager_SceneManager) == 0x000100, "Member 'BP_LevelManager_C_StartPlayerWithPortalName::CallFunc_GetSceneManager_SceneManager' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_StartPlayerWithPortalName, CallFunc_GetStartPortalName_PortalName) == 0x000108, "Member 'BP_LevelManager_C_StartPlayerWithPortalName::CallFunc_GetStartPortalName_PortalName' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_StartPlayerWithPortalName, CallFunc_GetPortalTransform_Transform) == 0x000110, "Member 'BP_LevelManager_C_StartPlayerWithPortalName::CallFunc_GetPortalTransform_Transform' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_StartPlayerWithPortalName, CallFunc_GetPortalTransform_Found) == 0x000140, "Member 'BP_LevelManager_C_StartPlayerWithPortalName::CallFunc_GetPortalTransform_Found' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_StartPlayerWithPortalName, CallFunc_Conv_StringToText_ReturnValue) == 0x000148, "Member 'BP_LevelManager_C_StartPlayerWithPortalName::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_StartPlayerWithPortalName, K2Node_MakeStruct_FormatArgumentData) == 0x000160, "Member 'BP_LevelManager_C_StartPlayerWithPortalName::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_StartPlayerWithPortalName, K2Node_MakeArray_Array) == 0x0001A0, "Member 'BP_LevelManager_C_StartPlayerWithPortalName::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_StartPlayerWithPortalName, CallFunc_Conv_StringToText_ReturnValue_1) == 0x0001B0, "Member 'BP_LevelManager_C_StartPlayerWithPortalName::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_StartPlayerWithPortalName, CallFunc_Format_ReturnValue) == 0x0001C8, "Member 'BP_LevelManager_C_StartPlayerWithPortalName::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_StartPlayerWithPortalName, K2Node_MakeStruct_FormatArgumentData_1) == 0x0001E0, "Member 'BP_LevelManager_C_StartPlayerWithPortalName::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_StartPlayerWithPortalName, CallFunc_Conv_TextToString_ReturnValue) == 0x000220, "Member 'BP_LevelManager_C_StartPlayerWithPortalName::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_StartPlayerWithPortalName, K2Node_MakeArray_Array_1) == 0x000230, "Member 'BP_LevelManager_C_StartPlayerWithPortalName::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_StartPlayerWithPortalName, CallFunc_Format_ReturnValue_1) == 0x000240, "Member 'BP_LevelManager_C_StartPlayerWithPortalName::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_StartPlayerWithPortalName, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000258, "Member 'BP_LevelManager_C_StartPlayerWithPortalName::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_StartPlayerWithPortalName, CallFunc_Conv_TextToString_ReturnValue_1) == 0x000260, "Member 'BP_LevelManager_C_StartPlayerWithPortalName::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_StartPlayerWithPortalName, Temp_int_Loop_Counter_Variable) == 0x000270, "Member 'BP_LevelManager_C_StartPlayerWithPortalName::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_StartPlayerWithPortalName, CallFunc_Less_IntInt_ReturnValue) == 0x000274, "Member 'BP_LevelManager_C_StartPlayerWithPortalName::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_StartPlayerWithPortalName, CallFunc_Add_IntInt_ReturnValue) == 0x000278, "Member 'BP_LevelManager_C_StartPlayerWithPortalName::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_StartPlayerWithPortalName, CallFunc_BooleanAND_ReturnValue) == 0x00027C, "Member 'BP_LevelManager_C_StartPlayerWithPortalName::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.StartPlayerAtActor
// 0x0040 (0x0040 - 0x0000)
struct BP_LevelManager_C_StartPlayerAtActor final
{
public:
	class AActor*                                 Portal;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D99[0x8];                                      // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0010(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LevelManager_C_StartPlayerAtActor) == 0x000010, "Wrong alignment on BP_LevelManager_C_StartPlayerAtActor");
static_assert(sizeof(BP_LevelManager_C_StartPlayerAtActor) == 0x000040, "Wrong size on BP_LevelManager_C_StartPlayerAtActor");
static_assert(offsetof(BP_LevelManager_C_StartPlayerAtActor, Portal) == 0x000000, "Member 'BP_LevelManager_C_StartPlayerAtActor::Portal' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_StartPlayerAtActor, CallFunc_GetTransform_ReturnValue) == 0x000010, "Member 'BP_LevelManager_C_StartPlayerAtActor::CallFunc_GetTransform_ReturnValue' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.IsLevelVisibleInLoadedLevelInfo
// 0x0090 (0x0090 - 0x0000)
struct BP_LevelManager_C_IsLevelVisibleInLoadedLevelInfo final
{
public:
	TSoftObjectPtr<class UObject>                 Level;                                             // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          Visible;                                           // 0x0028(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Error;                                             // 0x0029(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D9A[0x2];                                      // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D9B[0x4];                                      // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_LoadedLevelInfo                     CallFunc_Array_Get_Item;                           // 0x0040(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_SoftObjectReference_ReturnValue; // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LevelManager_C_IsLevelVisibleInLoadedLevelInfo) == 0x000008, "Wrong alignment on BP_LevelManager_C_IsLevelVisibleInLoadedLevelInfo");
static_assert(sizeof(BP_LevelManager_C_IsLevelVisibleInLoadedLevelInfo) == 0x000090, "Wrong size on BP_LevelManager_C_IsLevelVisibleInLoadedLevelInfo");
static_assert(offsetof(BP_LevelManager_C_IsLevelVisibleInLoadedLevelInfo, Level) == 0x000000, "Member 'BP_LevelManager_C_IsLevelVisibleInLoadedLevelInfo::Level' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsLevelVisibleInLoadedLevelInfo, Visible) == 0x000028, "Member 'BP_LevelManager_C_IsLevelVisibleInLoadedLevelInfo::Visible' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsLevelVisibleInLoadedLevelInfo, Error) == 0x000029, "Member 'BP_LevelManager_C_IsLevelVisibleInLoadedLevelInfo::Error' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsLevelVisibleInLoadedLevelInfo, Temp_int_Array_Index_Variable) == 0x00002C, "Member 'BP_LevelManager_C_IsLevelVisibleInLoadedLevelInfo::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsLevelVisibleInLoadedLevelInfo, Temp_int_Loop_Counter_Variable) == 0x000030, "Member 'BP_LevelManager_C_IsLevelVisibleInLoadedLevelInfo::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsLevelVisibleInLoadedLevelInfo, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'BP_LevelManager_C_IsLevelVisibleInLoadedLevelInfo::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsLevelVisibleInLoadedLevelInfo, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'BP_LevelManager_C_IsLevelVisibleInLoadedLevelInfo::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsLevelVisibleInLoadedLevelInfo, CallFunc_Array_Get_Item) == 0x000040, "Member 'BP_LevelManager_C_IsLevelVisibleInLoadedLevelInfo::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsLevelVisibleInLoadedLevelInfo, CallFunc_Less_IntInt_ReturnValue) == 0x000088, "Member 'BP_LevelManager_C_IsLevelVisibleInLoadedLevelInfo::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsLevelVisibleInLoadedLevelInfo, CallFunc_EqualEqual_SoftObjectReference_ReturnValue) == 0x000089, "Member 'BP_LevelManager_C_IsLevelVisibleInLoadedLevelInfo::CallFunc_EqualEqual_SoftObjectReference_ReturnValue' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.SetLevelVisibleFlag
// 0x01D0 (0x01D0 - 0x0000)
struct BP_LevelManager_C_SetLevelVisibleFlag final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D9C[0x7];                                      // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UObject>                 Levels;                                            // 0x0008(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class ULevelStreaming*                        _StreamingLevel;                                   // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TmpTime;                                           // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_ObjectSoftRefToString_ReturnValue;        // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D9D[0x4];                                      // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0068(0x0018)()
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0088(0x0040)(HasGetValueTypeHash)
	class ULevelStreaming*                        CallFunc_GetStreamingLevel_ReturnValue;            // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D9E[0x3];                                      // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_ObjectSoftRefToName_ReturnValue;          // 0x00DC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D9F[0x4];                                      // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelStreaming*                        CallFunc_GetStreamingLevel_ReturnValue_1;          // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_SoftObjectReference_ReturnValue; // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLevelVisible_ReturnValue;               // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DA0[0x6];                                      // 0x00F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_LoadedLevelInfo                     K2Node_MakeStruct_S_LoadedLevelInfo;               // 0x00F8(0x0048)(HasGetValueTypeHash)
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue_1;       // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DA1[0x4];                                      // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0150(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0190(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x01A0(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x01B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LevelManager_C_SetLevelVisibleFlag) == 0x000008, "Wrong alignment on BP_LevelManager_C_SetLevelVisibleFlag");
static_assert(sizeof(BP_LevelManager_C_SetLevelVisibleFlag) == 0x0001D0, "Wrong size on BP_LevelManager_C_SetLevelVisibleFlag");
static_assert(offsetof(BP_LevelManager_C_SetLevelVisibleFlag, Visible) == 0x000000, "Member 'BP_LevelManager_C_SetLevelVisibleFlag::Visible' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_SetLevelVisibleFlag, Levels) == 0x000008, "Member 'BP_LevelManager_C_SetLevelVisibleFlag::Levels' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_SetLevelVisibleFlag, _StreamingLevel) == 0x000030, "Member 'BP_LevelManager_C_SetLevelVisibleFlag::_StreamingLevel' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_SetLevelVisibleFlag, TmpTime) == 0x000038, "Member 'BP_LevelManager_C_SetLevelVisibleFlag::TmpTime' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_SetLevelVisibleFlag, Temp_int_Loop_Counter_Variable) == 0x00003C, "Member 'BP_LevelManager_C_SetLevelVisibleFlag::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_SetLevelVisibleFlag, CallFunc_ObjectSoftRefToString_ReturnValue) == 0x000040, "Member 'BP_LevelManager_C_SetLevelVisibleFlag::CallFunc_ObjectSoftRefToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_SetLevelVisibleFlag, CallFunc_Add_IntInt_ReturnValue) == 0x000050, "Member 'BP_LevelManager_C_SetLevelVisibleFlag::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_SetLevelVisibleFlag, CallFunc_Concat_StrStr_ReturnValue) == 0x000058, "Member 'BP_LevelManager_C_SetLevelVisibleFlag::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_SetLevelVisibleFlag, CallFunc_Conv_StringToText_ReturnValue) == 0x000068, "Member 'BP_LevelManager_C_SetLevelVisibleFlag::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_SetLevelVisibleFlag, CallFunc_Conv_StringToName_ReturnValue) == 0x000080, "Member 'BP_LevelManager_C_SetLevelVisibleFlag::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_SetLevelVisibleFlag, K2Node_MakeStruct_FormatArgumentData) == 0x000088, "Member 'BP_LevelManager_C_SetLevelVisibleFlag::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_SetLevelVisibleFlag, CallFunc_GetStreamingLevel_ReturnValue) == 0x0000C8, "Member 'BP_LevelManager_C_SetLevelVisibleFlag::CallFunc_GetStreamingLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_SetLevelVisibleFlag, Temp_int_Array_Index_Variable) == 0x0000D0, "Member 'BP_LevelManager_C_SetLevelVisibleFlag::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_SetLevelVisibleFlag, CallFunc_Array_Length_ReturnValue) == 0x0000D4, "Member 'BP_LevelManager_C_SetLevelVisibleFlag::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_SetLevelVisibleFlag, CallFunc_Less_IntInt_ReturnValue) == 0x0000D8, "Member 'BP_LevelManager_C_SetLevelVisibleFlag::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_SetLevelVisibleFlag, CallFunc_ObjectSoftRefToName_ReturnValue) == 0x0000DC, "Member 'BP_LevelManager_C_SetLevelVisibleFlag::CallFunc_ObjectSoftRefToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_SetLevelVisibleFlag, CallFunc_GetStreamingLevel_ReturnValue_1) == 0x0000E8, "Member 'BP_LevelManager_C_SetLevelVisibleFlag::CallFunc_GetStreamingLevel_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_SetLevelVisibleFlag, CallFunc_EqualEqual_SoftObjectReference_ReturnValue) == 0x0000F0, "Member 'BP_LevelManager_C_SetLevelVisibleFlag::CallFunc_EqualEqual_SoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_SetLevelVisibleFlag, CallFunc_IsLevelVisible_ReturnValue) == 0x0000F1, "Member 'BP_LevelManager_C_SetLevelVisibleFlag::CallFunc_IsLevelVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_SetLevelVisibleFlag, K2Node_MakeStruct_S_LoadedLevelInfo) == 0x0000F8, "Member 'BP_LevelManager_C_SetLevelVisibleFlag::K2Node_MakeStruct_S_LoadedLevelInfo' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_SetLevelVisibleFlag, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000140, "Member 'BP_LevelManager_C_SetLevelVisibleFlag::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_SetLevelVisibleFlag, CallFunc_GetGameTimeInSeconds_ReturnValue_1) == 0x000144, "Member 'BP_LevelManager_C_SetLevelVisibleFlag::CallFunc_GetGameTimeInSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_SetLevelVisibleFlag, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000148, "Member 'BP_LevelManager_C_SetLevelVisibleFlag::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_SetLevelVisibleFlag, K2Node_MakeStruct_FormatArgumentData_1) == 0x000150, "Member 'BP_LevelManager_C_SetLevelVisibleFlag::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_SetLevelVisibleFlag, K2Node_MakeArray_Array) == 0x000190, "Member 'BP_LevelManager_C_SetLevelVisibleFlag::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_SetLevelVisibleFlag, CallFunc_Format_ReturnValue) == 0x0001A0, "Member 'BP_LevelManager_C_SetLevelVisibleFlag::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_SetLevelVisibleFlag, CallFunc_Conv_TextToString_ReturnValue) == 0x0001B8, "Member 'BP_LevelManager_C_SetLevelVisibleFlag::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_SetLevelVisibleFlag, CallFunc_IsValid_ReturnValue) == 0x0001C8, "Member 'BP_LevelManager_C_SetLevelVisibleFlag::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.RequestSetVisibleLevelsAndWait
// 0x0128 (0x0128 - 0x0000)
struct BP_LevelManager_C_RequestSetVisibleLevelsAndWait final
{
public:
	TArray<TSoftObjectPtr<class UObject>>         Levels;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	class FName                                   AreaName;                                          // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Visible;                                           // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DA2[0x3];                                      // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DA3[0x3];                                      // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UObject>                 CallFunc_Array_Get_Item;                           // 0x0040(0x0028)(HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddLevelCommand_CommandNum;               // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DA4[0x3];                                      // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DA5[0x4];                                      // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UObject>                 CallFunc_Array_Get_Item_1;                         // 0x0088(0x0028)(HasGetValueTypeHash)
	int32                                         CallFunc_AddLevelCommand_CommandNum_1;             // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DA6[0x4];                                      // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UObject>                 CallFunc_Array_Get_Item_2;                         // 0x00B8(0x0028)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddLevelCommand_CommandNum_2;             // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DA7[0x3];                                      // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DA8[0x3];                                      // 0x00F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UObject>                 CallFunc_Array_Get_Item_3;                         // 0x00F8(0x0028)(HasGetValueTypeHash)
	int32                                         CallFunc_AddLevelCommand_CommandNum_3;             // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LevelManager_C_RequestSetVisibleLevelsAndWait) == 0x000008, "Wrong alignment on BP_LevelManager_C_RequestSetVisibleLevelsAndWait");
static_assert(sizeof(BP_LevelManager_C_RequestSetVisibleLevelsAndWait) == 0x000128, "Wrong size on BP_LevelManager_C_RequestSetVisibleLevelsAndWait");
static_assert(offsetof(BP_LevelManager_C_RequestSetVisibleLevelsAndWait, Levels) == 0x000000, "Member 'BP_LevelManager_C_RequestSetVisibleLevelsAndWait::Levels' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetVisibleLevelsAndWait, AreaName) == 0x000010, "Member 'BP_LevelManager_C_RequestSetVisibleLevelsAndWait::AreaName' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetVisibleLevelsAndWait, Visible) == 0x000018, "Member 'BP_LevelManager_C_RequestSetVisibleLevelsAndWait::Visible' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetVisibleLevelsAndWait, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'BP_LevelManager_C_RequestSetVisibleLevelsAndWait::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetVisibleLevelsAndWait, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BP_LevelManager_C_RequestSetVisibleLevelsAndWait::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetVisibleLevelsAndWait, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'BP_LevelManager_C_RequestSetVisibleLevelsAndWait::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetVisibleLevelsAndWait, CallFunc_Array_Length_ReturnValue_1) == 0x000028, "Member 'BP_LevelManager_C_RequestSetVisibleLevelsAndWait::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetVisibleLevelsAndWait, Temp_int_Loop_Counter_Variable_1) == 0x00002C, "Member 'BP_LevelManager_C_RequestSetVisibleLevelsAndWait::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetVisibleLevelsAndWait, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'BP_LevelManager_C_RequestSetVisibleLevelsAndWait::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetVisibleLevelsAndWait, CallFunc_Add_IntInt_ReturnValue_1) == 0x000034, "Member 'BP_LevelManager_C_RequestSetVisibleLevelsAndWait::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetVisibleLevelsAndWait, Temp_int_Array_Index_Variable) == 0x000038, "Member 'BP_LevelManager_C_RequestSetVisibleLevelsAndWait::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetVisibleLevelsAndWait, Temp_int_Loop_Counter_Variable_2) == 0x00003C, "Member 'BP_LevelManager_C_RequestSetVisibleLevelsAndWait::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetVisibleLevelsAndWait, CallFunc_Array_Get_Item) == 0x000040, "Member 'BP_LevelManager_C_RequestSetVisibleLevelsAndWait::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetVisibleLevelsAndWait, CallFunc_Add_IntInt_ReturnValue_2) == 0x000068, "Member 'BP_LevelManager_C_RequestSetVisibleLevelsAndWait::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetVisibleLevelsAndWait, CallFunc_AddLevelCommand_CommandNum) == 0x00006C, "Member 'BP_LevelManager_C_RequestSetVisibleLevelsAndWait::CallFunc_AddLevelCommand_CommandNum' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetVisibleLevelsAndWait, Temp_int_Array_Index_Variable_1) == 0x000070, "Member 'BP_LevelManager_C_RequestSetVisibleLevelsAndWait::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetVisibleLevelsAndWait, Temp_int_Loop_Counter_Variable_3) == 0x000074, "Member 'BP_LevelManager_C_RequestSetVisibleLevelsAndWait::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetVisibleLevelsAndWait, CallFunc_Less_IntInt_ReturnValue_1) == 0x000078, "Member 'BP_LevelManager_C_RequestSetVisibleLevelsAndWait::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetVisibleLevelsAndWait, CallFunc_Add_IntInt_ReturnValue_3) == 0x00007C, "Member 'BP_LevelManager_C_RequestSetVisibleLevelsAndWait::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetVisibleLevelsAndWait, Temp_int_Array_Index_Variable_2) == 0x000080, "Member 'BP_LevelManager_C_RequestSetVisibleLevelsAndWait::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetVisibleLevelsAndWait, CallFunc_Array_Get_Item_1) == 0x000088, "Member 'BP_LevelManager_C_RequestSetVisibleLevelsAndWait::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetVisibleLevelsAndWait, CallFunc_AddLevelCommand_CommandNum_1) == 0x0000B0, "Member 'BP_LevelManager_C_RequestSetVisibleLevelsAndWait::CallFunc_AddLevelCommand_CommandNum_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetVisibleLevelsAndWait, CallFunc_Array_Get_Item_2) == 0x0000B8, "Member 'BP_LevelManager_C_RequestSetVisibleLevelsAndWait::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetVisibleLevelsAndWait, CallFunc_Array_Length_ReturnValue_2) == 0x0000E0, "Member 'BP_LevelManager_C_RequestSetVisibleLevelsAndWait::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetVisibleLevelsAndWait, CallFunc_AddLevelCommand_CommandNum_2) == 0x0000E4, "Member 'BP_LevelManager_C_RequestSetVisibleLevelsAndWait::CallFunc_AddLevelCommand_CommandNum_2' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetVisibleLevelsAndWait, CallFunc_Less_IntInt_ReturnValue_2) == 0x0000E8, "Member 'BP_LevelManager_C_RequestSetVisibleLevelsAndWait::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetVisibleLevelsAndWait, CallFunc_Array_Length_ReturnValue_3) == 0x0000EC, "Member 'BP_LevelManager_C_RequestSetVisibleLevelsAndWait::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetVisibleLevelsAndWait, CallFunc_Less_IntInt_ReturnValue_3) == 0x0000F0, "Member 'BP_LevelManager_C_RequestSetVisibleLevelsAndWait::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetVisibleLevelsAndWait, Temp_int_Array_Index_Variable_3) == 0x0000F4, "Member 'BP_LevelManager_C_RequestSetVisibleLevelsAndWait::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetVisibleLevelsAndWait, CallFunc_Array_Get_Item_3) == 0x0000F8, "Member 'BP_LevelManager_C_RequestSetVisibleLevelsAndWait::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetVisibleLevelsAndWait, CallFunc_AddLevelCommand_CommandNum_3) == 0x000120, "Member 'BP_LevelManager_C_RequestSetVisibleLevelsAndWait::CallFunc_AddLevelCommand_CommandNum_3' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.IsAreaReadyForStart
// 0x02B8 (0x02B8 - 0x0000)
struct BP_LevelManager_C_IsAreaReadyForStart final
{
public:
	class FName                                   AreaName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsReady;                                           // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DA9[0x7];                                      // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftObjectPtr<class UObject>>         NewAreaLevels;                                     // 0x0010(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UObject>>         CallFunc_GetAllLevelInArea_Levels;                 // 0x0020(0x0010)(ReferenceParm, HasGetValueTypeHash)
	struct FS_AreaInfo                            CallFunc_GetAllLevelInArea_AreaInfo;               // 0x0030(0x0068)(HasGetValueTypeHash)
	bool                                          CallFunc_GetAllLevelInArea_Error;                  // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DAA[0x3];                                      // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DAB[0x4];                                      // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_LoadedLevelInfo                     CallFunc_Array_Get_Item;                           // 0x00B0(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DAC[0x3];                                      // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_ObjectSoftRefToName_ReturnValue;          // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DAD[0x7];                                      // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0110(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0128(0x0040)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_NameToText_ReturnValue_1;            // 0x0168(0x0018)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0180(0x0010)(ReferenceParm, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0190(0x0040)(HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x01D0(0x0018)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x01E8(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x01F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0208(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x0220(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0230(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x0270(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class ULevelStreaming*                        CallFunc_GetStreamingLevel_ReturnValue;            // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x0288(0x0018)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DAE[0x7];                                      // 0x02A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_2;          // 0x02A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LevelManager_C_IsAreaReadyForStart) == 0x000008, "Wrong alignment on BP_LevelManager_C_IsAreaReadyForStart");
static_assert(sizeof(BP_LevelManager_C_IsAreaReadyForStart) == 0x0002B8, "Wrong size on BP_LevelManager_C_IsAreaReadyForStart");
static_assert(offsetof(BP_LevelManager_C_IsAreaReadyForStart, AreaName) == 0x000000, "Member 'BP_LevelManager_C_IsAreaReadyForStart::AreaName' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaReadyForStart, IsReady) == 0x000008, "Member 'BP_LevelManager_C_IsAreaReadyForStart::IsReady' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaReadyForStart, NewAreaLevels) == 0x000010, "Member 'BP_LevelManager_C_IsAreaReadyForStart::NewAreaLevels' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaReadyForStart, CallFunc_GetAllLevelInArea_Levels) == 0x000020, "Member 'BP_LevelManager_C_IsAreaReadyForStart::CallFunc_GetAllLevelInArea_Levels' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaReadyForStart, CallFunc_GetAllLevelInArea_AreaInfo) == 0x000030, "Member 'BP_LevelManager_C_IsAreaReadyForStart::CallFunc_GetAllLevelInArea_AreaInfo' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaReadyForStart, CallFunc_GetAllLevelInArea_Error) == 0x000098, "Member 'BP_LevelManager_C_IsAreaReadyForStart::CallFunc_GetAllLevelInArea_Error' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaReadyForStart, Temp_int_Array_Index_Variable) == 0x00009C, "Member 'BP_LevelManager_C_IsAreaReadyForStart::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaReadyForStart, Temp_int_Loop_Counter_Variable) == 0x0000A0, "Member 'BP_LevelManager_C_IsAreaReadyForStart::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaReadyForStart, CallFunc_Add_IntInt_ReturnValue) == 0x0000A4, "Member 'BP_LevelManager_C_IsAreaReadyForStart::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaReadyForStart, CallFunc_Array_Length_ReturnValue) == 0x0000A8, "Member 'BP_LevelManager_C_IsAreaReadyForStart::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaReadyForStart, CallFunc_Array_Get_Item) == 0x0000B0, "Member 'BP_LevelManager_C_IsAreaReadyForStart::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaReadyForStart, CallFunc_Less_IntInt_ReturnValue) == 0x0000F8, "Member 'BP_LevelManager_C_IsAreaReadyForStart::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaReadyForStart, CallFunc_Array_Find_ReturnValue) == 0x0000FC, "Member 'BP_LevelManager_C_IsAreaReadyForStart::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaReadyForStart, CallFunc_ObjectSoftRefToName_ReturnValue) == 0x000100, "Member 'BP_LevelManager_C_IsAreaReadyForStart::CallFunc_ObjectSoftRefToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaReadyForStart, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000108, "Member 'BP_LevelManager_C_IsAreaReadyForStart::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaReadyForStart, CallFunc_Conv_NameToText_ReturnValue) == 0x000110, "Member 'BP_LevelManager_C_IsAreaReadyForStart::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaReadyForStart, K2Node_MakeStruct_FormatArgumentData) == 0x000128, "Member 'BP_LevelManager_C_IsAreaReadyForStart::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaReadyForStart, CallFunc_Conv_NameToText_ReturnValue_1) == 0x000168, "Member 'BP_LevelManager_C_IsAreaReadyForStart::CallFunc_Conv_NameToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaReadyForStart, K2Node_MakeArray_Array) == 0x000180, "Member 'BP_LevelManager_C_IsAreaReadyForStart::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaReadyForStart, K2Node_MakeStruct_FormatArgumentData_1) == 0x000190, "Member 'BP_LevelManager_C_IsAreaReadyForStart::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaReadyForStart, CallFunc_Format_ReturnValue) == 0x0001D0, "Member 'BP_LevelManager_C_IsAreaReadyForStart::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaReadyForStart, K2Node_MakeArray_Array_1) == 0x0001E8, "Member 'BP_LevelManager_C_IsAreaReadyForStart::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaReadyForStart, CallFunc_Conv_TextToString_ReturnValue) == 0x0001F8, "Member 'BP_LevelManager_C_IsAreaReadyForStart::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaReadyForStart, CallFunc_Format_ReturnValue_1) == 0x000208, "Member 'BP_LevelManager_C_IsAreaReadyForStart::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaReadyForStart, CallFunc_Conv_TextToString_ReturnValue_1) == 0x000220, "Member 'BP_LevelManager_C_IsAreaReadyForStart::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaReadyForStart, K2Node_MakeStruct_FormatArgumentData_2) == 0x000230, "Member 'BP_LevelManager_C_IsAreaReadyForStart::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaReadyForStart, K2Node_MakeArray_Array_2) == 0x000270, "Member 'BP_LevelManager_C_IsAreaReadyForStart::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaReadyForStart, CallFunc_GetStreamingLevel_ReturnValue) == 0x000280, "Member 'BP_LevelManager_C_IsAreaReadyForStart::CallFunc_GetStreamingLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaReadyForStart, CallFunc_Format_ReturnValue_2) == 0x000288, "Member 'BP_LevelManager_C_IsAreaReadyForStart::CallFunc_Format_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaReadyForStart, CallFunc_IsValid_ReturnValue) == 0x0002A0, "Member 'BP_LevelManager_C_IsAreaReadyForStart::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaReadyForStart, CallFunc_Conv_TextToString_ReturnValue_2) == 0x0002A8, "Member 'BP_LevelManager_C_IsAreaReadyForStart::CallFunc_Conv_TextToString_ReturnValue_2' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.RequestWaitAreaPreloadVisible
// 0x000C (0x000C - 0x0000)
struct BP_LevelManager_C_RequestWaitAreaPreloadVisible final
{
public:
	class FName                                   AreaName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddLevelCommand_CommandNum;               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LevelManager_C_RequestWaitAreaPreloadVisible) == 0x000004, "Wrong alignment on BP_LevelManager_C_RequestWaitAreaPreloadVisible");
static_assert(sizeof(BP_LevelManager_C_RequestWaitAreaPreloadVisible) == 0x00000C, "Wrong size on BP_LevelManager_C_RequestWaitAreaPreloadVisible");
static_assert(offsetof(BP_LevelManager_C_RequestWaitAreaPreloadVisible, AreaName) == 0x000000, "Member 'BP_LevelManager_C_RequestWaitAreaPreloadVisible::AreaName' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestWaitAreaPreloadVisible, CallFunc_AddLevelCommand_CommandNum) == 0x000008, "Member 'BP_LevelManager_C_RequestWaitAreaPreloadVisible::CallFunc_AddLevelCommand_CommandNum' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.RequestSetAreaPreloadOnlyVisible
// 0x0188 (0x0188 - 0x0000)
struct BP_LevelManager_C_RequestSetAreaPreloadOnlyVisible final
{
public:
	class FName                                   AreaName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Async;                                             // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DAF[0x7];                                      // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftObjectPtr<class UObject>>         CallFunc_GetSceneSystemLevelsByArea_Levels;        // 0x0010(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UObject>>         CallFunc_GetPreloadLevelInArea_Levels;             // 0x0020(0x0010)(ReferenceParm, HasGetValueTypeHash)
	struct FS_AreaInfo                            CallFunc_GetPreloadLevelInArea_AreaInfo;           // 0x0030(0x0068)(HasGetValueTypeHash)
	bool                                          CallFunc_GetPreloadLevelInArea_Error;              // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DB0[0x7];                                      // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAreaInLoadedAreaInfos_IsLoaded;         // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAreaInLoadedAreaInfos_IsExist;          // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DB1[0x6];                                      // 0x00B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_AreaInfo                            CallFunc_IsAreaInLoadedAreaInfos_AreaInfo;         // 0x00B8(0x0068)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DB2[0x3];                                      // 0x012D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UObject>                 CallFunc_Array_Get_Item;                           // 0x0130(0x0028)(HasGetValueTypeHash)
	int32                                         CallFunc_AddLevelCommand_CommandNum;               // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddLevelCommand_CommandNum_1;             // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue_1;             // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DB3[0x2];                                      // 0x0162(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0168(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0178(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LevelManager_C_RequestSetAreaPreloadOnlyVisible) == 0x000008, "Wrong alignment on BP_LevelManager_C_RequestSetAreaPreloadOnlyVisible");
static_assert(sizeof(BP_LevelManager_C_RequestSetAreaPreloadOnlyVisible) == 0x000188, "Wrong size on BP_LevelManager_C_RequestSetAreaPreloadOnlyVisible");
static_assert(offsetof(BP_LevelManager_C_RequestSetAreaPreloadOnlyVisible, AreaName) == 0x000000, "Member 'BP_LevelManager_C_RequestSetAreaPreloadOnlyVisible::AreaName' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetAreaPreloadOnlyVisible, Async) == 0x000008, "Member 'BP_LevelManager_C_RequestSetAreaPreloadOnlyVisible::Async' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetAreaPreloadOnlyVisible, CallFunc_GetSceneSystemLevelsByArea_Levels) == 0x000010, "Member 'BP_LevelManager_C_RequestSetAreaPreloadOnlyVisible::CallFunc_GetSceneSystemLevelsByArea_Levels' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetAreaPreloadOnlyVisible, CallFunc_GetPreloadLevelInArea_Levels) == 0x000020, "Member 'BP_LevelManager_C_RequestSetAreaPreloadOnlyVisible::CallFunc_GetPreloadLevelInArea_Levels' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetAreaPreloadOnlyVisible, CallFunc_GetPreloadLevelInArea_AreaInfo) == 0x000030, "Member 'BP_LevelManager_C_RequestSetAreaPreloadOnlyVisible::CallFunc_GetPreloadLevelInArea_AreaInfo' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetAreaPreloadOnlyVisible, CallFunc_GetPreloadLevelInArea_Error) == 0x000098, "Member 'BP_LevelManager_C_RequestSetAreaPreloadOnlyVisible::CallFunc_GetPreloadLevelInArea_Error' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetAreaPreloadOnlyVisible, CallFunc_Conv_NameToString_ReturnValue) == 0x0000A0, "Member 'BP_LevelManager_C_RequestSetAreaPreloadOnlyVisible::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetAreaPreloadOnlyVisible, CallFunc_IsAreaInLoadedAreaInfos_IsLoaded) == 0x0000B0, "Member 'BP_LevelManager_C_RequestSetAreaPreloadOnlyVisible::CallFunc_IsAreaInLoadedAreaInfos_IsLoaded' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetAreaPreloadOnlyVisible, CallFunc_IsAreaInLoadedAreaInfos_IsExist) == 0x0000B1, "Member 'BP_LevelManager_C_RequestSetAreaPreloadOnlyVisible::CallFunc_IsAreaInLoadedAreaInfos_IsExist' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetAreaPreloadOnlyVisible, CallFunc_IsAreaInLoadedAreaInfos_AreaInfo) == 0x0000B8, "Member 'BP_LevelManager_C_RequestSetAreaPreloadOnlyVisible::CallFunc_IsAreaInLoadedAreaInfos_AreaInfo' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetAreaPreloadOnlyVisible, CallFunc_Array_Length_ReturnValue) == 0x000120, "Member 'BP_LevelManager_C_RequestSetAreaPreloadOnlyVisible::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetAreaPreloadOnlyVisible, Temp_int_Loop_Counter_Variable) == 0x000124, "Member 'BP_LevelManager_C_RequestSetAreaPreloadOnlyVisible::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetAreaPreloadOnlyVisible, Temp_int_Array_Index_Variable) == 0x000128, "Member 'BP_LevelManager_C_RequestSetAreaPreloadOnlyVisible::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetAreaPreloadOnlyVisible, CallFunc_Less_IntInt_ReturnValue) == 0x00012C, "Member 'BP_LevelManager_C_RequestSetAreaPreloadOnlyVisible::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetAreaPreloadOnlyVisible, CallFunc_Array_Get_Item) == 0x000130, "Member 'BP_LevelManager_C_RequestSetAreaPreloadOnlyVisible::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetAreaPreloadOnlyVisible, CallFunc_AddLevelCommand_CommandNum) == 0x000158, "Member 'BP_LevelManager_C_RequestSetAreaPreloadOnlyVisible::CallFunc_AddLevelCommand_CommandNum' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetAreaPreloadOnlyVisible, CallFunc_AddLevelCommand_CommandNum_1) == 0x00015C, "Member 'BP_LevelManager_C_RequestSetAreaPreloadOnlyVisible::CallFunc_AddLevelCommand_CommandNum_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetAreaPreloadOnlyVisible, CallFunc_Array_Contains_ReturnValue) == 0x000160, "Member 'BP_LevelManager_C_RequestSetAreaPreloadOnlyVisible::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetAreaPreloadOnlyVisible, CallFunc_Array_Contains_ReturnValue_1) == 0x000161, "Member 'BP_LevelManager_C_RequestSetAreaPreloadOnlyVisible::CallFunc_Array_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetAreaPreloadOnlyVisible, CallFunc_Add_IntInt_ReturnValue) == 0x000164, "Member 'BP_LevelManager_C_RequestSetAreaPreloadOnlyVisible::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetAreaPreloadOnlyVisible, CallFunc_Concat_StrStr_ReturnValue) == 0x000168, "Member 'BP_LevelManager_C_RequestSetAreaPreloadOnlyVisible::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetAreaPreloadOnlyVisible, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000178, "Member 'BP_LevelManager_C_RequestSetAreaPreloadOnlyVisible::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.GetPreloadLevelInArea
// 0x0138 (0x0138 - 0x0000)
struct BP_LevelManager_C_GetPreloadLevelInArea final
{
public:
	class FName                                   AreaName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UObject>>         Levels;                                            // 0x0008(0x0010)(Parm, OutParm, HasGetValueTypeHash)
	struct FS_AreaInfo                            AreaInfo;                                          // 0x0018(0x0068)(Parm, OutParm, HasGetValueTypeHash)
	bool                                          Error;                                             // 0x0080(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DB4[0x7];                                      // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftObjectPtr<class UObject>>         Tmp;                                               // 0x0088(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UObject>>         TmpLevels;                                         // 0x0098(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<class FName>                           TmpLevelNames;                                     // 0x00A8(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FS_AreaInfo                            CallFunc_GetAreaInfo_AreaInfo;                     // 0x00B8(0x0068)(HasGetValueTypeHash)
	bool                                          CallFunc_GetAreaInfo_Found;                        // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DB5[0x7];                                      // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftObjectPtr<class UObject>>         CallFunc_GetSceneSystemLevels_Levels;              // 0x0128(0x0010)(ReferenceParm, HasGetValueTypeHash)
};
static_assert(alignof(BP_LevelManager_C_GetPreloadLevelInArea) == 0x000008, "Wrong alignment on BP_LevelManager_C_GetPreloadLevelInArea");
static_assert(sizeof(BP_LevelManager_C_GetPreloadLevelInArea) == 0x000138, "Wrong size on BP_LevelManager_C_GetPreloadLevelInArea");
static_assert(offsetof(BP_LevelManager_C_GetPreloadLevelInArea, AreaName) == 0x000000, "Member 'BP_LevelManager_C_GetPreloadLevelInArea::AreaName' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetPreloadLevelInArea, Levels) == 0x000008, "Member 'BP_LevelManager_C_GetPreloadLevelInArea::Levels' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetPreloadLevelInArea, AreaInfo) == 0x000018, "Member 'BP_LevelManager_C_GetPreloadLevelInArea::AreaInfo' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetPreloadLevelInArea, Error) == 0x000080, "Member 'BP_LevelManager_C_GetPreloadLevelInArea::Error' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetPreloadLevelInArea, Tmp) == 0x000088, "Member 'BP_LevelManager_C_GetPreloadLevelInArea::Tmp' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetPreloadLevelInArea, TmpLevels) == 0x000098, "Member 'BP_LevelManager_C_GetPreloadLevelInArea::TmpLevels' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetPreloadLevelInArea, TmpLevelNames) == 0x0000A8, "Member 'BP_LevelManager_C_GetPreloadLevelInArea::TmpLevelNames' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetPreloadLevelInArea, CallFunc_GetAreaInfo_AreaInfo) == 0x0000B8, "Member 'BP_LevelManager_C_GetPreloadLevelInArea::CallFunc_GetAreaInfo_AreaInfo' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetPreloadLevelInArea, CallFunc_GetAreaInfo_Found) == 0x000120, "Member 'BP_LevelManager_C_GetPreloadLevelInArea::CallFunc_GetAreaInfo_Found' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetPreloadLevelInArea, CallFunc_GetSceneSystemLevels_Levels) == 0x000128, "Member 'BP_LevelManager_C_GetPreloadLevelInArea::CallFunc_GetSceneSystemLevels_Levels' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C._IsAreaPreloadVisible
// 0x00F8 (0x00F8 - 0x0000)
struct BP_LevelManager_C__IsAreaPreloadVisible final
{
public:
	class FName                                   AreaName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AllVisible;                                        // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DB6[0x7];                                      // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftObjectPtr<class UObject>>         PreloadLevels;                                     // 0x0010(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DB7[0x4];                                      // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftObjectPtr<class UObject>>         CallFunc_GetPreloadLevelInArea_Levels;             // 0x0028(0x0010)(ReferenceParm, HasGetValueTypeHash)
	struct FS_AreaInfo                            CallFunc_GetPreloadLevelInArea_AreaInfo;           // 0x0038(0x0068)(HasGetValueTypeHash)
	bool                                          CallFunc_GetPreloadLevelInArea_Error;              // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DB8[0x3];                                      // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DB9[0x4];                                      // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UObject>                 CallFunc_Array_Get_Item;                           // 0x00B0(0x0028)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_ObjectSoftRefToName_ReturnValue;          // 0x00DC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DBA[0x3];                                      // 0x00E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelStreaming*                        CallFunc_GetStreamingLevel_ReturnValue;            // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLevelVisible_ReturnValue;               // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LevelManager_C__IsAreaPreloadVisible) == 0x000008, "Wrong alignment on BP_LevelManager_C__IsAreaPreloadVisible");
static_assert(sizeof(BP_LevelManager_C__IsAreaPreloadVisible) == 0x0000F8, "Wrong size on BP_LevelManager_C__IsAreaPreloadVisible");
static_assert(offsetof(BP_LevelManager_C__IsAreaPreloadVisible, AreaName) == 0x000000, "Member 'BP_LevelManager_C__IsAreaPreloadVisible::AreaName' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C__IsAreaPreloadVisible, AllVisible) == 0x000008, "Member 'BP_LevelManager_C__IsAreaPreloadVisible::AllVisible' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C__IsAreaPreloadVisible, PreloadLevels) == 0x000010, "Member 'BP_LevelManager_C__IsAreaPreloadVisible::PreloadLevels' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C__IsAreaPreloadVisible, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'BP_LevelManager_C__IsAreaPreloadVisible::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C__IsAreaPreloadVisible, CallFunc_GetPreloadLevelInArea_Levels) == 0x000028, "Member 'BP_LevelManager_C__IsAreaPreloadVisible::CallFunc_GetPreloadLevelInArea_Levels' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C__IsAreaPreloadVisible, CallFunc_GetPreloadLevelInArea_AreaInfo) == 0x000038, "Member 'BP_LevelManager_C__IsAreaPreloadVisible::CallFunc_GetPreloadLevelInArea_AreaInfo' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C__IsAreaPreloadVisible, CallFunc_GetPreloadLevelInArea_Error) == 0x0000A0, "Member 'BP_LevelManager_C__IsAreaPreloadVisible::CallFunc_GetPreloadLevelInArea_Error' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C__IsAreaPreloadVisible, CallFunc_Add_IntInt_ReturnValue) == 0x0000A4, "Member 'BP_LevelManager_C__IsAreaPreloadVisible::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C__IsAreaPreloadVisible, Temp_int_Array_Index_Variable) == 0x0000A8, "Member 'BP_LevelManager_C__IsAreaPreloadVisible::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C__IsAreaPreloadVisible, CallFunc_Array_Get_Item) == 0x0000B0, "Member 'BP_LevelManager_C__IsAreaPreloadVisible::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C__IsAreaPreloadVisible, CallFunc_Array_Length_ReturnValue) == 0x0000D8, "Member 'BP_LevelManager_C__IsAreaPreloadVisible::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C__IsAreaPreloadVisible, CallFunc_ObjectSoftRefToName_ReturnValue) == 0x0000DC, "Member 'BP_LevelManager_C__IsAreaPreloadVisible::CallFunc_ObjectSoftRefToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C__IsAreaPreloadVisible, CallFunc_Less_IntInt_ReturnValue) == 0x0000E4, "Member 'BP_LevelManager_C__IsAreaPreloadVisible::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C__IsAreaPreloadVisible, CallFunc_GetStreamingLevel_ReturnValue) == 0x0000E8, "Member 'BP_LevelManager_C__IsAreaPreloadVisible::CallFunc_GetStreamingLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C__IsAreaPreloadVisible, CallFunc_IsValid_ReturnValue) == 0x0000F0, "Member 'BP_LevelManager_C__IsAreaPreloadVisible::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C__IsAreaPreloadVisible, CallFunc_IsLevelVisible_ReturnValue) == 0x0000F1, "Member 'BP_LevelManager_C__IsAreaPreloadVisible::CallFunc_IsLevelVisible_ReturnValue' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.RequestUnloadDynamicLevel
// 0x0088 (0x0088 - 0x0000)
struct BP_LevelManager_C_RequestUnloadDynamicLevel final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_LoadedLevelInfo                     CallFunc_Array_Get_Item;                           // 0x0010(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DBB[0x3];                                      // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_AddLevelCommand_CommandNum;               // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_ObjectSoftRefToName_ReturnValue;          // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddLevelCommand_CommandNum_1;             // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue;                     // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Contains_ReturnValue_1;                   // 0x007D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Contains_ReturnValue_2;                   // 0x007E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Contains_ReturnValue_3;                   // 0x007F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0082(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LevelManager_C_RequestUnloadDynamicLevel) == 0x000008, "Wrong alignment on BP_LevelManager_C_RequestUnloadDynamicLevel");
static_assert(sizeof(BP_LevelManager_C_RequestUnloadDynamicLevel) == 0x000088, "Wrong size on BP_LevelManager_C_RequestUnloadDynamicLevel");
static_assert(offsetof(BP_LevelManager_C_RequestUnloadDynamicLevel, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_LevelManager_C_RequestUnloadDynamicLevel::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestUnloadDynamicLevel, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_LevelManager_C_RequestUnloadDynamicLevel::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestUnloadDynamicLevel, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_LevelManager_C_RequestUnloadDynamicLevel::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestUnloadDynamicLevel, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'BP_LevelManager_C_RequestUnloadDynamicLevel::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestUnloadDynamicLevel, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_LevelManager_C_RequestUnloadDynamicLevel::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestUnloadDynamicLevel, CallFunc_Less_IntInt_ReturnValue) == 0x000058, "Member 'BP_LevelManager_C_RequestUnloadDynamicLevel::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestUnloadDynamicLevel, CallFunc_AddLevelCommand_CommandNum) == 0x00005C, "Member 'BP_LevelManager_C_RequestUnloadDynamicLevel::CallFunc_AddLevelCommand_CommandNum' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestUnloadDynamicLevel, CallFunc_ObjectSoftRefToName_ReturnValue) == 0x000060, "Member 'BP_LevelManager_C_RequestUnloadDynamicLevel::CallFunc_ObjectSoftRefToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestUnloadDynamicLevel, CallFunc_Conv_NameToString_ReturnValue) == 0x000068, "Member 'BP_LevelManager_C_RequestUnloadDynamicLevel::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestUnloadDynamicLevel, CallFunc_AddLevelCommand_CommandNum_1) == 0x000078, "Member 'BP_LevelManager_C_RequestUnloadDynamicLevel::CallFunc_AddLevelCommand_CommandNum_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestUnloadDynamicLevel, CallFunc_Contains_ReturnValue) == 0x00007C, "Member 'BP_LevelManager_C_RequestUnloadDynamicLevel::CallFunc_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestUnloadDynamicLevel, CallFunc_Contains_ReturnValue_1) == 0x00007D, "Member 'BP_LevelManager_C_RequestUnloadDynamicLevel::CallFunc_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestUnloadDynamicLevel, CallFunc_Contains_ReturnValue_2) == 0x00007E, "Member 'BP_LevelManager_C_RequestUnloadDynamicLevel::CallFunc_Contains_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestUnloadDynamicLevel, CallFunc_Contains_ReturnValue_3) == 0x00007F, "Member 'BP_LevelManager_C_RequestUnloadDynamicLevel::CallFunc_Contains_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestUnloadDynamicLevel, CallFunc_BooleanOR_ReturnValue) == 0x000080, "Member 'BP_LevelManager_C_RequestUnloadDynamicLevel::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestUnloadDynamicLevel, CallFunc_BooleanOR_ReturnValue_1) == 0x000081, "Member 'BP_LevelManager_C_RequestUnloadDynamicLevel::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestUnloadDynamicLevel, CallFunc_BooleanOR_ReturnValue_2) == 0x000082, "Member 'BP_LevelManager_C_RequestUnloadDynamicLevel::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.RequestSetAllLevelUnvisible
// 0x0068 (0x0068 - 0x0000)
struct BP_LevelManager_C_RequestSetAllLevelUnvisible final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DBC[0x3];                                      // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DBD[0x3];                                      // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_LoadedLevelInfo                     CallFunc_Array_Get_Item;                           // 0x0018(0x0048)(HasGetValueTypeHash)
	int32                                         CallFunc_AddLevelCommand_CommandNum;               // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LevelManager_C_RequestSetAllLevelUnvisible) == 0x000008, "Wrong alignment on BP_LevelManager_C_RequestSetAllLevelUnvisible");
static_assert(sizeof(BP_LevelManager_C_RequestSetAllLevelUnvisible) == 0x000068, "Wrong size on BP_LevelManager_C_RequestSetAllLevelUnvisible");
static_assert(offsetof(BP_LevelManager_C_RequestSetAllLevelUnvisible, Visible) == 0x000000, "Member 'BP_LevelManager_C_RequestSetAllLevelUnvisible::Visible' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetAllLevelUnvisible, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_LevelManager_C_RequestSetAllLevelUnvisible::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetAllLevelUnvisible, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_LevelManager_C_RequestSetAllLevelUnvisible::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetAllLevelUnvisible, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'BP_LevelManager_C_RequestSetAllLevelUnvisible::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetAllLevelUnvisible, CallFunc_Less_IntInt_ReturnValue) == 0x000010, "Member 'BP_LevelManager_C_RequestSetAllLevelUnvisible::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetAllLevelUnvisible, Temp_int_Array_Index_Variable) == 0x000014, "Member 'BP_LevelManager_C_RequestSetAllLevelUnvisible::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetAllLevelUnvisible, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_LevelManager_C_RequestSetAllLevelUnvisible::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetAllLevelUnvisible, CallFunc_AddLevelCommand_CommandNum) == 0x000060, "Member 'BP_LevelManager_C_RequestSetAllLevelUnvisible::CallFunc_AddLevelCommand_CommandNum' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.DebugFilterLevels
// 0x00C0 (0x00C0 - 0x0000)
struct BP_LevelManager_C_DebugFilterLevels final
{
public:
	TArray<TSoftObjectPtr<class UObject>>         Levels;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UObject>>         FilteredLevels;                                    // 0x0010(0x0010)(Parm, OutParm, HasGetValueTypeHash)
	bool                                          L_SkipAObjLevel;                                   // 0x0020(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          L_SkipNpcLevel;                                    // 0x0021(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          L_SkipNOBjLevel;                                   // 0x0022(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          L_SkipEnemyLevel;                                  // 0x0023(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DBE[0x4];                                      // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 TmpLevelName;                                      // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                DebuggingManager;                                  // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UObject>>         TmpLevels;                                         // 0x0040(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Contains_ReturnValue_1;                   // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Contains_ReturnValue_2;                   // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Contains_ReturnValue_3;                   // 0x0053(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_GetDebuggingManager_Manager;              // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DBF[0x3];                                      // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UObject>                 CallFunc_Array_Get_Item;                           // 0x0070(0x0028)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_ObjectSoftRefToName_ReturnValue;          // 0x009C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DC0[0x4];                                      // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LevelManager_C_DebugFilterLevels) == 0x000008, "Wrong alignment on BP_LevelManager_C_DebugFilterLevels");
static_assert(sizeof(BP_LevelManager_C_DebugFilterLevels) == 0x0000C0, "Wrong size on BP_LevelManager_C_DebugFilterLevels");
static_assert(offsetof(BP_LevelManager_C_DebugFilterLevels, Levels) == 0x000000, "Member 'BP_LevelManager_C_DebugFilterLevels::Levels' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_DebugFilterLevels, FilteredLevels) == 0x000010, "Member 'BP_LevelManager_C_DebugFilterLevels::FilteredLevels' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_DebugFilterLevels, L_SkipAObjLevel) == 0x000020, "Member 'BP_LevelManager_C_DebugFilterLevels::L_SkipAObjLevel' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_DebugFilterLevels, L_SkipNpcLevel) == 0x000021, "Member 'BP_LevelManager_C_DebugFilterLevels::L_SkipNpcLevel' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_DebugFilterLevels, L_SkipNOBjLevel) == 0x000022, "Member 'BP_LevelManager_C_DebugFilterLevels::L_SkipNOBjLevel' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_DebugFilterLevels, L_SkipEnemyLevel) == 0x000023, "Member 'BP_LevelManager_C_DebugFilterLevels::L_SkipEnemyLevel' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_DebugFilterLevels, TmpLevelName) == 0x000028, "Member 'BP_LevelManager_C_DebugFilterLevels::TmpLevelName' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_DebugFilterLevels, DebuggingManager) == 0x000038, "Member 'BP_LevelManager_C_DebugFilterLevels::DebuggingManager' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_DebugFilterLevels, TmpLevels) == 0x000040, "Member 'BP_LevelManager_C_DebugFilterLevels::TmpLevels' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_DebugFilterLevels, CallFunc_Contains_ReturnValue) == 0x000050, "Member 'BP_LevelManager_C_DebugFilterLevels::CallFunc_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_DebugFilterLevels, CallFunc_Contains_ReturnValue_1) == 0x000051, "Member 'BP_LevelManager_C_DebugFilterLevels::CallFunc_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_DebugFilterLevels, CallFunc_Contains_ReturnValue_2) == 0x000052, "Member 'BP_LevelManager_C_DebugFilterLevels::CallFunc_Contains_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_DebugFilterLevels, CallFunc_Contains_ReturnValue_3) == 0x000053, "Member 'BP_LevelManager_C_DebugFilterLevels::CallFunc_Contains_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_DebugFilterLevels, CallFunc_Array_Length_ReturnValue) == 0x000054, "Member 'BP_LevelManager_C_DebugFilterLevels::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_DebugFilterLevels, CallFunc_GetDebuggingManager_Manager) == 0x000058, "Member 'BP_LevelManager_C_DebugFilterLevels::CallFunc_GetDebuggingManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_DebugFilterLevels, Temp_int_Loop_Counter_Variable) == 0x000060, "Member 'BP_LevelManager_C_DebugFilterLevels::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_DebugFilterLevels, CallFunc_Less_IntInt_ReturnValue) == 0x000064, "Member 'BP_LevelManager_C_DebugFilterLevels::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_DebugFilterLevels, CallFunc_Add_IntInt_ReturnValue) == 0x000068, "Member 'BP_LevelManager_C_DebugFilterLevels::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_DebugFilterLevels, Temp_int_Array_Index_Variable) == 0x00006C, "Member 'BP_LevelManager_C_DebugFilterLevels::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_DebugFilterLevels, CallFunc_Array_Get_Item) == 0x000070, "Member 'BP_LevelManager_C_DebugFilterLevels::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_DebugFilterLevels, CallFunc_Array_Add_ReturnValue) == 0x000098, "Member 'BP_LevelManager_C_DebugFilterLevels::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_DebugFilterLevels, CallFunc_ObjectSoftRefToName_ReturnValue) == 0x00009C, "Member 'BP_LevelManager_C_DebugFilterLevels::CallFunc_ObjectSoftRefToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_DebugFilterLevels, CallFunc_Conv_NameToString_ReturnValue) == 0x0000A8, "Member 'BP_LevelManager_C_DebugFilterLevels::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_DebugFilterLevels, CallFunc_IsValid_ReturnValue) == 0x0000B8, "Member 'BP_LevelManager_C_DebugFilterLevels::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.DebugPrintLoadInfo
// 0x01B0 (0x01B0 - 0x0000)
struct BP_LevelManager_C_DebugPrintLoadInfo final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_LoadedLevelInfo                     CallFunc_Array_Get_Item;                           // 0x0010(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DC1[0x3];                                      // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetEnumeratorName_ReturnValue;            // 0x005C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DC2[0x4];                                      // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_BoolToText_ReturnValue;              // 0x0068(0x0018)()
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0080(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0098(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00D8(0x0040)(HasGetValueTypeHash)
	class FName                                   CallFunc_ObjectSoftRefToName_ReturnValue;          // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_NameToText_ReturnValue_1;            // 0x0120(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0138(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0178(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0188(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x01A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LevelManager_C_DebugPrintLoadInfo) == 0x000008, "Wrong alignment on BP_LevelManager_C_DebugPrintLoadInfo");
static_assert(sizeof(BP_LevelManager_C_DebugPrintLoadInfo) == 0x0001B0, "Wrong size on BP_LevelManager_C_DebugPrintLoadInfo");
static_assert(offsetof(BP_LevelManager_C_DebugPrintLoadInfo, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_LevelManager_C_DebugPrintLoadInfo::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_DebugPrintLoadInfo, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_LevelManager_C_DebugPrintLoadInfo::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_DebugPrintLoadInfo, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_LevelManager_C_DebugPrintLoadInfo::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_DebugPrintLoadInfo, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'BP_LevelManager_C_DebugPrintLoadInfo::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_DebugPrintLoadInfo, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_LevelManager_C_DebugPrintLoadInfo::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_DebugPrintLoadInfo, CallFunc_Less_IntInt_ReturnValue) == 0x000058, "Member 'BP_LevelManager_C_DebugPrintLoadInfo::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_DebugPrintLoadInfo, CallFunc_GetEnumeratorName_ReturnValue) == 0x00005C, "Member 'BP_LevelManager_C_DebugPrintLoadInfo::CallFunc_GetEnumeratorName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_DebugPrintLoadInfo, CallFunc_Conv_BoolToText_ReturnValue) == 0x000068, "Member 'BP_LevelManager_C_DebugPrintLoadInfo::CallFunc_Conv_BoolToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_DebugPrintLoadInfo, CallFunc_Conv_NameToText_ReturnValue) == 0x000080, "Member 'BP_LevelManager_C_DebugPrintLoadInfo::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_DebugPrintLoadInfo, K2Node_MakeStruct_FormatArgumentData) == 0x000098, "Member 'BP_LevelManager_C_DebugPrintLoadInfo::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_DebugPrintLoadInfo, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000D8, "Member 'BP_LevelManager_C_DebugPrintLoadInfo::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_DebugPrintLoadInfo, CallFunc_ObjectSoftRefToName_ReturnValue) == 0x000118, "Member 'BP_LevelManager_C_DebugPrintLoadInfo::CallFunc_ObjectSoftRefToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_DebugPrintLoadInfo, CallFunc_Conv_NameToText_ReturnValue_1) == 0x000120, "Member 'BP_LevelManager_C_DebugPrintLoadInfo::CallFunc_Conv_NameToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_DebugPrintLoadInfo, K2Node_MakeStruct_FormatArgumentData_2) == 0x000138, "Member 'BP_LevelManager_C_DebugPrintLoadInfo::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_DebugPrintLoadInfo, K2Node_MakeArray_Array) == 0x000178, "Member 'BP_LevelManager_C_DebugPrintLoadInfo::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_DebugPrintLoadInfo, CallFunc_Format_ReturnValue) == 0x000188, "Member 'BP_LevelManager_C_DebugPrintLoadInfo::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_DebugPrintLoadInfo, CallFunc_Conv_TextToString_ReturnValue) == 0x0001A0, "Member 'BP_LevelManager_C_DebugPrintLoadInfo::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.AreaNameToID_Internal
// 0x00A0 (0x00A0 - 0x0000)
struct BP_LevelManager_C_AreaNameToID_Internal final
{
public:
	class FName                                   AreaName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LocationId;                                        // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AreaId;                                            // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         VariationID;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         _VariationID;                                      // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         _areaID;                                           // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         _LocationID;                                       // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 AreaString;                                        // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_FindSubstring_ReturnValue;                // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetSubstring_ReturnValue;                 // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_StringToInt_ReturnValue;             // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FindSubstring_ReturnValue_1;              // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DC3[0x4];                                      // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetSubstring_ReturnValue_1;               // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_StringToInt_ReturnValue_1;           // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FindSubstring_ReturnValue_2;              // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DC4[0x4];                                      // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetSubstring_ReturnValue_2;               // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_StringToInt_ReturnValue_2;           // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LevelManager_C_AreaNameToID_Internal) == 0x000008, "Wrong alignment on BP_LevelManager_C_AreaNameToID_Internal");
static_assert(sizeof(BP_LevelManager_C_AreaNameToID_Internal) == 0x0000A0, "Wrong size on BP_LevelManager_C_AreaNameToID_Internal");
static_assert(offsetof(BP_LevelManager_C_AreaNameToID_Internal, AreaName) == 0x000000, "Member 'BP_LevelManager_C_AreaNameToID_Internal::AreaName' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_AreaNameToID_Internal, LocationId) == 0x000008, "Member 'BP_LevelManager_C_AreaNameToID_Internal::LocationId' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_AreaNameToID_Internal, AreaId) == 0x00000C, "Member 'BP_LevelManager_C_AreaNameToID_Internal::AreaId' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_AreaNameToID_Internal, VariationID) == 0x000010, "Member 'BP_LevelManager_C_AreaNameToID_Internal::VariationID' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_AreaNameToID_Internal, _VariationID) == 0x000014, "Member 'BP_LevelManager_C_AreaNameToID_Internal::_VariationID' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_AreaNameToID_Internal, _areaID) == 0x000018, "Member 'BP_LevelManager_C_AreaNameToID_Internal::_areaID' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_AreaNameToID_Internal, _LocationID) == 0x00001C, "Member 'BP_LevelManager_C_AreaNameToID_Internal::_LocationID' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_AreaNameToID_Internal, AreaString) == 0x000020, "Member 'BP_LevelManager_C_AreaNameToID_Internal::AreaString' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_AreaNameToID_Internal, CallFunc_Conv_NameToString_ReturnValue) == 0x000030, "Member 'BP_LevelManager_C_AreaNameToID_Internal::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_AreaNameToID_Internal, CallFunc_FindSubstring_ReturnValue) == 0x000040, "Member 'BP_LevelManager_C_AreaNameToID_Internal::CallFunc_FindSubstring_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_AreaNameToID_Internal, CallFunc_Add_IntInt_ReturnValue) == 0x000044, "Member 'BP_LevelManager_C_AreaNameToID_Internal::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_AreaNameToID_Internal, CallFunc_GetSubstring_ReturnValue) == 0x000048, "Member 'BP_LevelManager_C_AreaNameToID_Internal::CallFunc_GetSubstring_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_AreaNameToID_Internal, CallFunc_Conv_StringToInt_ReturnValue) == 0x000058, "Member 'BP_LevelManager_C_AreaNameToID_Internal::CallFunc_Conv_StringToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_AreaNameToID_Internal, CallFunc_FindSubstring_ReturnValue_1) == 0x00005C, "Member 'BP_LevelManager_C_AreaNameToID_Internal::CallFunc_FindSubstring_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_AreaNameToID_Internal, CallFunc_Add_IntInt_ReturnValue_1) == 0x000060, "Member 'BP_LevelManager_C_AreaNameToID_Internal::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_AreaNameToID_Internal, CallFunc_GetSubstring_ReturnValue_1) == 0x000068, "Member 'BP_LevelManager_C_AreaNameToID_Internal::CallFunc_GetSubstring_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_AreaNameToID_Internal, CallFunc_Conv_StringToInt_ReturnValue_1) == 0x000078, "Member 'BP_LevelManager_C_AreaNameToID_Internal::CallFunc_Conv_StringToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_AreaNameToID_Internal, CallFunc_FindSubstring_ReturnValue_2) == 0x00007C, "Member 'BP_LevelManager_C_AreaNameToID_Internal::CallFunc_FindSubstring_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_AreaNameToID_Internal, CallFunc_Add_IntInt_ReturnValue_2) == 0x000080, "Member 'BP_LevelManager_C_AreaNameToID_Internal::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_AreaNameToID_Internal, CallFunc_GetSubstring_ReturnValue_2) == 0x000088, "Member 'BP_LevelManager_C_AreaNameToID_Internal::CallFunc_GetSubstring_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_AreaNameToID_Internal, CallFunc_Conv_StringToInt_ReturnValue_2) == 0x000098, "Member 'BP_LevelManager_C_AreaNameToID_Internal::CallFunc_Conv_StringToInt_ReturnValue_2' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.RequestUnloadAssetAsync
// 0x0030 (0x0030 - 0x0000)
struct BP_LevelManager_C_RequestUnloadAssetAsync final
{
public:
	TSoftObjectPtr<class UObject>                 Asset;                                             // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	int32                                         CallFunc_AddLevelCommand_CommandNum;               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LevelManager_C_RequestUnloadAssetAsync) == 0x000008, "Wrong alignment on BP_LevelManager_C_RequestUnloadAssetAsync");
static_assert(sizeof(BP_LevelManager_C_RequestUnloadAssetAsync) == 0x000030, "Wrong size on BP_LevelManager_C_RequestUnloadAssetAsync");
static_assert(offsetof(BP_LevelManager_C_RequestUnloadAssetAsync, Asset) == 0x000000, "Member 'BP_LevelManager_C_RequestUnloadAssetAsync::Asset' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestUnloadAssetAsync, CallFunc_AddLevelCommand_CommandNum) == 0x000028, "Member 'BP_LevelManager_C_RequestUnloadAssetAsync::CallFunc_AddLevelCommand_CommandNum' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.RequestSetAreaPreloadVisible
// 0x0188 (0x0188 - 0x0000)
struct BP_LevelManager_C_RequestSetAreaPreloadVisible final
{
public:
	class FName                                   AreaName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Async;                                             // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DC5[0x7];                                      // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftObjectPtr<class UObject>>         CallFunc_GetSceneSystemLevelsByArea_Levels;        // 0x0010(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UObject>>         CallFunc_GetPreloadLevelInArea_Levels;             // 0x0020(0x0010)(ReferenceParm, HasGetValueTypeHash)
	struct FS_AreaInfo                            CallFunc_GetPreloadLevelInArea_AreaInfo;           // 0x0030(0x0068)(HasGetValueTypeHash)
	bool                                          CallFunc_GetPreloadLevelInArea_Error;              // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DC6[0x7];                                      // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAreaInLoadedAreaInfos_IsLoaded;         // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAreaInLoadedAreaInfos_IsExist;          // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DC7[0x6];                                      // 0x00B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_AreaInfo                            CallFunc_IsAreaInLoadedAreaInfos_AreaInfo;         // 0x00B8(0x0068)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DC8[0x3];                                      // 0x012D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UObject>                 CallFunc_Array_Get_Item;                           // 0x0130(0x0028)(HasGetValueTypeHash)
	int32                                         CallFunc_AddLevelCommand_CommandNum;               // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x015C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue_1;             // 0x015D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DC9[0x2];                                      // 0x015E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DCA[0x4];                                      // 0x0164(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0168(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0178(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LevelManager_C_RequestSetAreaPreloadVisible) == 0x000008, "Wrong alignment on BP_LevelManager_C_RequestSetAreaPreloadVisible");
static_assert(sizeof(BP_LevelManager_C_RequestSetAreaPreloadVisible) == 0x000188, "Wrong size on BP_LevelManager_C_RequestSetAreaPreloadVisible");
static_assert(offsetof(BP_LevelManager_C_RequestSetAreaPreloadVisible, AreaName) == 0x000000, "Member 'BP_LevelManager_C_RequestSetAreaPreloadVisible::AreaName' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetAreaPreloadVisible, Async) == 0x000008, "Member 'BP_LevelManager_C_RequestSetAreaPreloadVisible::Async' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetAreaPreloadVisible, CallFunc_GetSceneSystemLevelsByArea_Levels) == 0x000010, "Member 'BP_LevelManager_C_RequestSetAreaPreloadVisible::CallFunc_GetSceneSystemLevelsByArea_Levels' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetAreaPreloadVisible, CallFunc_GetPreloadLevelInArea_Levels) == 0x000020, "Member 'BP_LevelManager_C_RequestSetAreaPreloadVisible::CallFunc_GetPreloadLevelInArea_Levels' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetAreaPreloadVisible, CallFunc_GetPreloadLevelInArea_AreaInfo) == 0x000030, "Member 'BP_LevelManager_C_RequestSetAreaPreloadVisible::CallFunc_GetPreloadLevelInArea_AreaInfo' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetAreaPreloadVisible, CallFunc_GetPreloadLevelInArea_Error) == 0x000098, "Member 'BP_LevelManager_C_RequestSetAreaPreloadVisible::CallFunc_GetPreloadLevelInArea_Error' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetAreaPreloadVisible, CallFunc_Conv_NameToString_ReturnValue) == 0x0000A0, "Member 'BP_LevelManager_C_RequestSetAreaPreloadVisible::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetAreaPreloadVisible, CallFunc_IsAreaInLoadedAreaInfos_IsLoaded) == 0x0000B0, "Member 'BP_LevelManager_C_RequestSetAreaPreloadVisible::CallFunc_IsAreaInLoadedAreaInfos_IsLoaded' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetAreaPreloadVisible, CallFunc_IsAreaInLoadedAreaInfos_IsExist) == 0x0000B1, "Member 'BP_LevelManager_C_RequestSetAreaPreloadVisible::CallFunc_IsAreaInLoadedAreaInfos_IsExist' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetAreaPreloadVisible, CallFunc_IsAreaInLoadedAreaInfos_AreaInfo) == 0x0000B8, "Member 'BP_LevelManager_C_RequestSetAreaPreloadVisible::CallFunc_IsAreaInLoadedAreaInfos_AreaInfo' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetAreaPreloadVisible, CallFunc_Array_Length_ReturnValue) == 0x000120, "Member 'BP_LevelManager_C_RequestSetAreaPreloadVisible::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetAreaPreloadVisible, Temp_int_Loop_Counter_Variable) == 0x000124, "Member 'BP_LevelManager_C_RequestSetAreaPreloadVisible::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetAreaPreloadVisible, Temp_int_Array_Index_Variable) == 0x000128, "Member 'BP_LevelManager_C_RequestSetAreaPreloadVisible::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetAreaPreloadVisible, CallFunc_Less_IntInt_ReturnValue) == 0x00012C, "Member 'BP_LevelManager_C_RequestSetAreaPreloadVisible::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetAreaPreloadVisible, CallFunc_Array_Get_Item) == 0x000130, "Member 'BP_LevelManager_C_RequestSetAreaPreloadVisible::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetAreaPreloadVisible, CallFunc_AddLevelCommand_CommandNum) == 0x000158, "Member 'BP_LevelManager_C_RequestSetAreaPreloadVisible::CallFunc_AddLevelCommand_CommandNum' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetAreaPreloadVisible, CallFunc_Array_Contains_ReturnValue) == 0x00015C, "Member 'BP_LevelManager_C_RequestSetAreaPreloadVisible::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetAreaPreloadVisible, CallFunc_Array_Contains_ReturnValue_1) == 0x00015D, "Member 'BP_LevelManager_C_RequestSetAreaPreloadVisible::CallFunc_Array_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetAreaPreloadVisible, CallFunc_Add_IntInt_ReturnValue) == 0x000160, "Member 'BP_LevelManager_C_RequestSetAreaPreloadVisible::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetAreaPreloadVisible, CallFunc_Concat_StrStr_ReturnValue) == 0x000168, "Member 'BP_LevelManager_C_RequestSetAreaPreloadVisible::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetAreaPreloadVisible, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000178, "Member 'BP_LevelManager_C_RequestSetAreaPreloadVisible::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.SetStreamSettings
// 0x0038 (0x0038 - 0x0000)
struct BP_LevelManager_C_SetStreamSettings final
{
public:
	class FName                                   RowName;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRSStreamingSettings                   CallFunc_Map_Find_Value;                           // 0x0008(0x0028)()
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LevelManager_C_SetStreamSettings) == 0x000008, "Wrong alignment on BP_LevelManager_C_SetStreamSettings");
static_assert(sizeof(BP_LevelManager_C_SetStreamSettings) == 0x000038, "Wrong size on BP_LevelManager_C_SetStreamSettings");
static_assert(offsetof(BP_LevelManager_C_SetStreamSettings, RowName) == 0x000000, "Member 'BP_LevelManager_C_SetStreamSettings::RowName' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_SetStreamSettings, CallFunc_Map_Find_Value) == 0x000008, "Member 'BP_LevelManager_C_SetStreamSettings::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_SetStreamSettings, CallFunc_Map_Find_ReturnValue) == 0x000030, "Member 'BP_LevelManager_C_SetStreamSettings::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.SetStreamSettingsInGame
// 0x0028 (0x0028 - 0x0000)
struct BP_LevelManager_C_SetStreamSettingsInGame final
{
public:
	struct FRSStreamingSettings                   TmpSettings;                                       // 0x0000(0x0028)(Edit, BlueprintVisible)
};
static_assert(alignof(BP_LevelManager_C_SetStreamSettingsInGame) == 0x000008, "Wrong alignment on BP_LevelManager_C_SetStreamSettingsInGame");
static_assert(sizeof(BP_LevelManager_C_SetStreamSettingsInGame) == 0x000028, "Wrong size on BP_LevelManager_C_SetStreamSettingsInGame");
static_assert(offsetof(BP_LevelManager_C_SetStreamSettingsInGame, TmpSettings) == 0x000000, "Member 'BP_LevelManager_C_SetStreamSettingsInGame::TmpSettings' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.SetStreamSettingsInLoading
// 0x0028 (0x0028 - 0x0000)
struct BP_LevelManager_C_SetStreamSettingsInLoading final
{
public:
	struct FRSStreamingSettings                   TmpSettings;                                       // 0x0000(0x0028)(Edit, BlueprintVisible)
};
static_assert(alignof(BP_LevelManager_C_SetStreamSettingsInLoading) == 0x000008, "Wrong alignment on BP_LevelManager_C_SetStreamSettingsInLoading");
static_assert(sizeof(BP_LevelManager_C_SetStreamSettingsInLoading) == 0x000028, "Wrong size on BP_LevelManager_C_SetStreamSettingsInLoading");
static_assert(offsetof(BP_LevelManager_C_SetStreamSettingsInLoading, TmpSettings) == 0x000000, "Member 'BP_LevelManager_C_SetStreamSettingsInLoading::TmpSettings' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.InitStreamingSettings
// 0x0060 (0x0060 - 0x0000)
struct BP_LevelManager_C_InitStreamingSettings final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DCB[0x4];                                      // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0010(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DCC[0x4];                                      // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRSStreamingSettings                   CallFunc_GetDataTableRowFromName_OutRow;           // 0x0030(0x0028)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LevelManager_C_InitStreamingSettings) == 0x000008, "Wrong alignment on BP_LevelManager_C_InitStreamingSettings");
static_assert(sizeof(BP_LevelManager_C_InitStreamingSettings) == 0x000060, "Wrong size on BP_LevelManager_C_InitStreamingSettings");
static_assert(offsetof(BP_LevelManager_C_InitStreamingSettings, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_LevelManager_C_InitStreamingSettings::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_InitStreamingSettings, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_LevelManager_C_InitStreamingSettings::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_InitStreamingSettings, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_LevelManager_C_InitStreamingSettings::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_InitStreamingSettings, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000010, "Member 'BP_LevelManager_C_InitStreamingSettings::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_InitStreamingSettings, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_LevelManager_C_InitStreamingSettings::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_InitStreamingSettings, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_LevelManager_C_InitStreamingSettings::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_InitStreamingSettings, CallFunc_GetDataTableRowFromName_OutRow) == 0x000030, "Member 'BP_LevelManager_C_InitStreamingSettings::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_InitStreamingSettings, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000058, "Member 'BP_LevelManager_C_InitStreamingSettings::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_InitStreamingSettings, CallFunc_Less_IntInt_ReturnValue) == 0x000059, "Member 'BP_LevelManager_C_InitStreamingSettings::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.TweakStreamSettings
// 0x0058 (0x0058 - 0x0000)
struct BP_LevelManager_C_TweakStreamSettings final
{
public:
	class FName                                   Param_Name;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRSStreamingSettings                   Settings;                                          // 0x0008(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FRSStreamingSettings                   TmpSettings;                                       // 0x0030(0x0028)(Edit, BlueprintVisible)
};
static_assert(alignof(BP_LevelManager_C_TweakStreamSettings) == 0x000008, "Wrong alignment on BP_LevelManager_C_TweakStreamSettings");
static_assert(sizeof(BP_LevelManager_C_TweakStreamSettings) == 0x000058, "Wrong size on BP_LevelManager_C_TweakStreamSettings");
static_assert(offsetof(BP_LevelManager_C_TweakStreamSettings, Param_Name) == 0x000000, "Member 'BP_LevelManager_C_TweakStreamSettings::Param_Name' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_TweakStreamSettings, Settings) == 0x000008, "Member 'BP_LevelManager_C_TweakStreamSettings::Settings' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_TweakStreamSettings, TmpSettings) == 0x000030, "Member 'BP_LevelManager_C_TweakStreamSettings::TmpSettings' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.TweakStreamSettingsInLoading
// 0x0050 (0x0050 - 0x0000)
struct BP_LevelManager_C_TweakStreamSettingsInLoading final
{
public:
	struct FRSStreamingSettings                   Settings;                                          // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FRSStreamingSettings                   TmpSettings;                                       // 0x0028(0x0028)(Edit, BlueprintVisible)
};
static_assert(alignof(BP_LevelManager_C_TweakStreamSettingsInLoading) == 0x000008, "Wrong alignment on BP_LevelManager_C_TweakStreamSettingsInLoading");
static_assert(sizeof(BP_LevelManager_C_TweakStreamSettingsInLoading) == 0x000050, "Wrong size on BP_LevelManager_C_TweakStreamSettingsInLoading");
static_assert(offsetof(BP_LevelManager_C_TweakStreamSettingsInLoading, Settings) == 0x000000, "Member 'BP_LevelManager_C_TweakStreamSettingsInLoading::Settings' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_TweakStreamSettingsInLoading, TmpSettings) == 0x000028, "Member 'BP_LevelManager_C_TweakStreamSettingsInLoading::TmpSettings' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.GetStreamSettings
// 0x0060 (0x0060 - 0x0000)
struct BP_LevelManager_C_GetStreamSettings final
{
public:
	class FName                                   Param_Name;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRSStreamingSettings                   Settings;                                          // 0x0008(0x0028)(Parm, OutParm)
	struct FRSStreamingSettings                   CallFunc_Map_Find_Value;                           // 0x0030(0x0028)()
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LevelManager_C_GetStreamSettings) == 0x000008, "Wrong alignment on BP_LevelManager_C_GetStreamSettings");
static_assert(sizeof(BP_LevelManager_C_GetStreamSettings) == 0x000060, "Wrong size on BP_LevelManager_C_GetStreamSettings");
static_assert(offsetof(BP_LevelManager_C_GetStreamSettings, Param_Name) == 0x000000, "Member 'BP_LevelManager_C_GetStreamSettings::Param_Name' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetStreamSettings, Settings) == 0x000008, "Member 'BP_LevelManager_C_GetStreamSettings::Settings' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetStreamSettings, CallFunc_Map_Find_Value) == 0x000030, "Member 'BP_LevelManager_C_GetStreamSettings::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetStreamSettings, CallFunc_Map_Find_ReturnValue) == 0x000058, "Member 'BP_LevelManager_C_GetStreamSettings::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.SetTextureStreaming
// 0x0001 (0x0001 - 0x0000)
struct BP_LevelManager_C_SetTextureStreaming final
{
public:
	bool                                          On;                                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LevelManager_C_SetTextureStreaming) == 0x000001, "Wrong alignment on BP_LevelManager_C_SetTextureStreaming");
static_assert(sizeof(BP_LevelManager_C_SetTextureStreaming) == 0x000001, "Wrong size on BP_LevelManager_C_SetTextureStreaming");
static_assert(offsetof(BP_LevelManager_C_SetTextureStreaming, On) == 0x000000, "Member 'BP_LevelManager_C_SetTextureStreaming::On' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.MakeAreaInfo
// 0x04B0 (0x04B0 - 0x0000)
struct BP_LevelManager_C_MakeAreaInfo final
{
public:
	class FName                                   AreaName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_AreaInfo                            AreaInfo;                                          // 0x0008(0x0068)(Parm, OutParm, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UObject>>         _lbAndPortalLevels;                                // 0x0070(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FS_AreaSettingsInfo                    _tmpAreaSettings;                                  // 0x0080(0x00A8)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UObject>>         _levels;                                           // 0x0128(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UObject>>         _preloadLevels;                                    // 0x0138(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FS_AreaInfo                            _areaInfo;                                         // 0x0148(0x0068)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FS_AreaSettingsInfo                    CallFunc_GetDataTableRowFromName_OutRow;           // 0x01B0(0x00A8)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DCD[0x3];                                      // 0x0259(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x025C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DCE[0x4];                                      // 0x0264(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftObjectPtr<class UObject>>         CallFunc_GetLevelsFromArrangePointAreaInfo_0_Levels; // 0x0268(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DCF[0x4];                                      // 0x027C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftObjectPtr<class UObject>>         CallFunc_GetLevelsFromNPCAreaInfo_Levels;          // 0x0280(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UObject>>         CallFunc_GetLevelsFromEventAreaInfo_Levels;        // 0x0290(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UObject>>         CallFunc_GetLevelsFromEnemyAreaInfo_Levels;        // 0x02A0(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UObject>>         CallFunc_GetLevelsFromNObjAreaInfo_Levels;         // 0x02B0(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UObject>>         CallFunc_GetLevelsFromBGAreaInfo_PreloadLevels;    // 0x02C0(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UObject>>         CallFunc_GetLevelsFromBGAreaInfo_Levels;           // 0x02D0(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UObject>>         CallFunc_GetLevelsFromBGAreaInfo_LbaAndPortalLevels; // 0x02E0(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x02F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x02F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x02F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x02FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UObject>                 CallFunc_Array_Get_Item;                           // 0x0300(0x0028)(HasGetValueTypeHash)
	TSoftObjectPtr<class UObject>                 CallFunc_Array_Get_Item_1;                         // 0x0328(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0350(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue_1; // 0x0351(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DD0[0x2];                                      // 0x0352(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0354(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0358(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x035C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x035D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DD1[0x2];                                      // 0x035E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UObject>                 CallFunc_Array_Get_Item_2;                         // 0x0360(0x0028)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0388(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue_2; // 0x038C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DD2[0x3];                                      // 0x038D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<bool>                                  K2Node_MakeArray_Array;                            // 0x0390(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x03A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DD3[0x4];                                      // 0x03A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x03A8(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x03C0(0x0040)(HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0400(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DD4[0x7];                                      // 0x0401(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0408(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0418(0x0018)()
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0430(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DD5[0x4];                                      // 0x0434(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0438(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FS_AreaInfo                            K2Node_MakeStruct_S_AreaInfo;                      // 0x0448(0x0068)(HasGetValueTypeHash)
};
static_assert(alignof(BP_LevelManager_C_MakeAreaInfo) == 0x000008, "Wrong alignment on BP_LevelManager_C_MakeAreaInfo");
static_assert(sizeof(BP_LevelManager_C_MakeAreaInfo) == 0x0004B0, "Wrong size on BP_LevelManager_C_MakeAreaInfo");
static_assert(offsetof(BP_LevelManager_C_MakeAreaInfo, AreaName) == 0x000000, "Member 'BP_LevelManager_C_MakeAreaInfo::AreaName' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_MakeAreaInfo, AreaInfo) == 0x000008, "Member 'BP_LevelManager_C_MakeAreaInfo::AreaInfo' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_MakeAreaInfo, _lbAndPortalLevels) == 0x000070, "Member 'BP_LevelManager_C_MakeAreaInfo::_lbAndPortalLevels' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_MakeAreaInfo, _tmpAreaSettings) == 0x000080, "Member 'BP_LevelManager_C_MakeAreaInfo::_tmpAreaSettings' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_MakeAreaInfo, _levels) == 0x000128, "Member 'BP_LevelManager_C_MakeAreaInfo::_levels' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_MakeAreaInfo, _preloadLevels) == 0x000138, "Member 'BP_LevelManager_C_MakeAreaInfo::_preloadLevels' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_MakeAreaInfo, _areaInfo) == 0x000148, "Member 'BP_LevelManager_C_MakeAreaInfo::_areaInfo' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_MakeAreaInfo, CallFunc_GetDataTableRowFromName_OutRow) == 0x0001B0, "Member 'BP_LevelManager_C_MakeAreaInfo::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_MakeAreaInfo, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000258, "Member 'BP_LevelManager_C_MakeAreaInfo::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_MakeAreaInfo, Temp_int_Array_Index_Variable) == 0x00025C, "Member 'BP_LevelManager_C_MakeAreaInfo::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_MakeAreaInfo, Temp_int_Loop_Counter_Variable) == 0x000260, "Member 'BP_LevelManager_C_MakeAreaInfo::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_MakeAreaInfo, CallFunc_GetLevelsFromArrangePointAreaInfo_0_Levels) == 0x000268, "Member 'BP_LevelManager_C_MakeAreaInfo::CallFunc_GetLevelsFromArrangePointAreaInfo_0_Levels' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_MakeAreaInfo, CallFunc_Add_IntInt_ReturnValue) == 0x000278, "Member 'BP_LevelManager_C_MakeAreaInfo::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_MakeAreaInfo, CallFunc_GetLevelsFromNPCAreaInfo_Levels) == 0x000280, "Member 'BP_LevelManager_C_MakeAreaInfo::CallFunc_GetLevelsFromNPCAreaInfo_Levels' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_MakeAreaInfo, CallFunc_GetLevelsFromEventAreaInfo_Levels) == 0x000290, "Member 'BP_LevelManager_C_MakeAreaInfo::CallFunc_GetLevelsFromEventAreaInfo_Levels' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_MakeAreaInfo, CallFunc_GetLevelsFromEnemyAreaInfo_Levels) == 0x0002A0, "Member 'BP_LevelManager_C_MakeAreaInfo::CallFunc_GetLevelsFromEnemyAreaInfo_Levels' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_MakeAreaInfo, CallFunc_GetLevelsFromNObjAreaInfo_Levels) == 0x0002B0, "Member 'BP_LevelManager_C_MakeAreaInfo::CallFunc_GetLevelsFromNObjAreaInfo_Levels' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_MakeAreaInfo, CallFunc_GetLevelsFromBGAreaInfo_PreloadLevels) == 0x0002C0, "Member 'BP_LevelManager_C_MakeAreaInfo::CallFunc_GetLevelsFromBGAreaInfo_PreloadLevels' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_MakeAreaInfo, CallFunc_GetLevelsFromBGAreaInfo_Levels) == 0x0002D0, "Member 'BP_LevelManager_C_MakeAreaInfo::CallFunc_GetLevelsFromBGAreaInfo_Levels' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_MakeAreaInfo, CallFunc_GetLevelsFromBGAreaInfo_LbaAndPortalLevels) == 0x0002E0, "Member 'BP_LevelManager_C_MakeAreaInfo::CallFunc_GetLevelsFromBGAreaInfo_LbaAndPortalLevels' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_MakeAreaInfo, Temp_int_Array_Index_Variable_1) == 0x0002F0, "Member 'BP_LevelManager_C_MakeAreaInfo::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_MakeAreaInfo, Temp_int_Loop_Counter_Variable_1) == 0x0002F4, "Member 'BP_LevelManager_C_MakeAreaInfo::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_MakeAreaInfo, CallFunc_Add_IntInt_ReturnValue_1) == 0x0002F8, "Member 'BP_LevelManager_C_MakeAreaInfo::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_MakeAreaInfo, Temp_int_Array_Index_Variable_2) == 0x0002FC, "Member 'BP_LevelManager_C_MakeAreaInfo::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_MakeAreaInfo, CallFunc_Array_Get_Item) == 0x000300, "Member 'BP_LevelManager_C_MakeAreaInfo::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_MakeAreaInfo, CallFunc_Array_Get_Item_1) == 0x000328, "Member 'BP_LevelManager_C_MakeAreaInfo::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_MakeAreaInfo, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000350, "Member 'BP_LevelManager_C_MakeAreaInfo::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_MakeAreaInfo, CallFunc_IsValidSoftObjectReference_ReturnValue_1) == 0x000351, "Member 'BP_LevelManager_C_MakeAreaInfo::CallFunc_IsValidSoftObjectReference_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_MakeAreaInfo, CallFunc_Array_Length_ReturnValue) == 0x000354, "Member 'BP_LevelManager_C_MakeAreaInfo::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_MakeAreaInfo, CallFunc_Array_Length_ReturnValue_1) == 0x000358, "Member 'BP_LevelManager_C_MakeAreaInfo::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_MakeAreaInfo, CallFunc_Less_IntInt_ReturnValue) == 0x00035C, "Member 'BP_LevelManager_C_MakeAreaInfo::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_MakeAreaInfo, CallFunc_Less_IntInt_ReturnValue_1) == 0x00035D, "Member 'BP_LevelManager_C_MakeAreaInfo::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_MakeAreaInfo, CallFunc_Array_Get_Item_2) == 0x000360, "Member 'BP_LevelManager_C_MakeAreaInfo::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_MakeAreaInfo, CallFunc_Array_Length_ReturnValue_2) == 0x000388, "Member 'BP_LevelManager_C_MakeAreaInfo::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_MakeAreaInfo, CallFunc_IsValidSoftObjectReference_ReturnValue_2) == 0x00038C, "Member 'BP_LevelManager_C_MakeAreaInfo::CallFunc_IsValidSoftObjectReference_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_MakeAreaInfo, K2Node_MakeArray_Array) == 0x000390, "Member 'BP_LevelManager_C_MakeAreaInfo::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_MakeAreaInfo, Temp_int_Loop_Counter_Variable_2) == 0x0003A0, "Member 'BP_LevelManager_C_MakeAreaInfo::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_MakeAreaInfo, CallFunc_Conv_NameToText_ReturnValue) == 0x0003A8, "Member 'BP_LevelManager_C_MakeAreaInfo::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_MakeAreaInfo, K2Node_MakeStruct_FormatArgumentData) == 0x0003C0, "Member 'BP_LevelManager_C_MakeAreaInfo::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_MakeAreaInfo, CallFunc_Less_IntInt_ReturnValue_2) == 0x000400, "Member 'BP_LevelManager_C_MakeAreaInfo::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_MakeAreaInfo, K2Node_MakeArray_Array_1) == 0x000408, "Member 'BP_LevelManager_C_MakeAreaInfo::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_MakeAreaInfo, CallFunc_Format_ReturnValue) == 0x000418, "Member 'BP_LevelManager_C_MakeAreaInfo::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_MakeAreaInfo, CallFunc_Add_IntInt_ReturnValue_2) == 0x000430, "Member 'BP_LevelManager_C_MakeAreaInfo::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_MakeAreaInfo, CallFunc_Conv_TextToString_ReturnValue) == 0x000438, "Member 'BP_LevelManager_C_MakeAreaInfo::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_MakeAreaInfo, K2Node_MakeStruct_S_AreaInfo) == 0x000448, "Member 'BP_LevelManager_C_MakeAreaInfo::K2Node_MakeStruct_S_AreaInfo' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.GetLevelsFromBGAreaInfo
// 0x0160 (0x0160 - 0x0000)
struct BP_LevelManager_C_GetLevelsFromBGAreaInfo final
{
public:
	TArray<class FName>                           BGAreaInfoNames;                                   // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UObject>>         PreloadLevels;                                     // 0x0010(0x0010)(Parm, OutParm, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UObject>>         Levels;                                            // 0x0020(0x0010)(Parm, OutParm, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UObject>>         LbaAndPortalLevels;                                // 0x0030(0x0010)(Parm, OutParm, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UObject>>         _lbaAndPortalLevels;                               // 0x0040(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	class FName                                   _areaInfoName;                                     // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UObject>>         _levels;                                           // 0x0058(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UObject>>         _preloadLevels;                                    // 0x0068(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0088(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x00A0(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00E0(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00F0(0x0018)()
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DD6[0x4];                                      // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0110(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DD7[0x3];                                      // 0x0121(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_BGAreaInfo                          CallFunc_GetDataTableRowFromName_OutRow;           // 0x0128(0x0030)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LevelManager_C_GetLevelsFromBGAreaInfo) == 0x000008, "Wrong alignment on BP_LevelManager_C_GetLevelsFromBGAreaInfo");
static_assert(sizeof(BP_LevelManager_C_GetLevelsFromBGAreaInfo) == 0x000160, "Wrong size on BP_LevelManager_C_GetLevelsFromBGAreaInfo");
static_assert(offsetof(BP_LevelManager_C_GetLevelsFromBGAreaInfo, BGAreaInfoNames) == 0x000000, "Member 'BP_LevelManager_C_GetLevelsFromBGAreaInfo::BGAreaInfoNames' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetLevelsFromBGAreaInfo, PreloadLevels) == 0x000010, "Member 'BP_LevelManager_C_GetLevelsFromBGAreaInfo::PreloadLevels' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetLevelsFromBGAreaInfo, Levels) == 0x000020, "Member 'BP_LevelManager_C_GetLevelsFromBGAreaInfo::Levels' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetLevelsFromBGAreaInfo, LbaAndPortalLevels) == 0x000030, "Member 'BP_LevelManager_C_GetLevelsFromBGAreaInfo::LbaAndPortalLevels' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetLevelsFromBGAreaInfo, _lbaAndPortalLevels) == 0x000040, "Member 'BP_LevelManager_C_GetLevelsFromBGAreaInfo::_lbaAndPortalLevels' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetLevelsFromBGAreaInfo, _areaInfoName) == 0x000050, "Member 'BP_LevelManager_C_GetLevelsFromBGAreaInfo::_areaInfoName' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetLevelsFromBGAreaInfo, _levels) == 0x000058, "Member 'BP_LevelManager_C_GetLevelsFromBGAreaInfo::_levels' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetLevelsFromBGAreaInfo, _preloadLevels) == 0x000068, "Member 'BP_LevelManager_C_GetLevelsFromBGAreaInfo::_preloadLevels' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetLevelsFromBGAreaInfo, CallFunc_Array_Length_ReturnValue) == 0x000078, "Member 'BP_LevelManager_C_GetLevelsFromBGAreaInfo::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetLevelsFromBGAreaInfo, Temp_int_Array_Index_Variable) == 0x00007C, "Member 'BP_LevelManager_C_GetLevelsFromBGAreaInfo::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetLevelsFromBGAreaInfo, CallFunc_Array_Get_Item) == 0x000080, "Member 'BP_LevelManager_C_GetLevelsFromBGAreaInfo::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetLevelsFromBGAreaInfo, CallFunc_Conv_NameToText_ReturnValue) == 0x000088, "Member 'BP_LevelManager_C_GetLevelsFromBGAreaInfo::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetLevelsFromBGAreaInfo, K2Node_MakeStruct_FormatArgumentData) == 0x0000A0, "Member 'BP_LevelManager_C_GetLevelsFromBGAreaInfo::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetLevelsFromBGAreaInfo, K2Node_MakeArray_Array) == 0x0000E0, "Member 'BP_LevelManager_C_GetLevelsFromBGAreaInfo::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetLevelsFromBGAreaInfo, CallFunc_Format_ReturnValue) == 0x0000F0, "Member 'BP_LevelManager_C_GetLevelsFromBGAreaInfo::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetLevelsFromBGAreaInfo, Temp_int_Loop_Counter_Variable) == 0x000108, "Member 'BP_LevelManager_C_GetLevelsFromBGAreaInfo::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetLevelsFromBGAreaInfo, CallFunc_Conv_TextToString_ReturnValue) == 0x000110, "Member 'BP_LevelManager_C_GetLevelsFromBGAreaInfo::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetLevelsFromBGAreaInfo, CallFunc_Less_IntInt_ReturnValue) == 0x000120, "Member 'BP_LevelManager_C_GetLevelsFromBGAreaInfo::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetLevelsFromBGAreaInfo, CallFunc_Add_IntInt_ReturnValue) == 0x000124, "Member 'BP_LevelManager_C_GetLevelsFromBGAreaInfo::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetLevelsFromBGAreaInfo, CallFunc_GetDataTableRowFromName_OutRow) == 0x000128, "Member 'BP_LevelManager_C_GetLevelsFromBGAreaInfo::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetLevelsFromBGAreaInfo, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000158, "Member 'BP_LevelManager_C_GetLevelsFromBGAreaInfo::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.GetLevelsFromEnemyAreaInfo
// 0x0100 (0x0100 - 0x0000)
struct BP_LevelManager_C_GetLevelsFromEnemyAreaInfo final
{
public:
	TArray<class FName>                           InfoNames;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UObject>>         Levels;                                            // 0x0010(0x0010)(Parm, OutParm, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UObject>>         _levels;                                           // 0x0020(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x003C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DD8[0x4];                                      // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_EnemyAreaInfo                       CallFunc_GetDataTableRowFromName_OutRow;           // 0x0048(0x0010)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DD9[0x7];                                      // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0060(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0078(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00B8(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DDA[0x7];                                      // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00D0(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x00E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LevelManager_C_GetLevelsFromEnemyAreaInfo) == 0x000008, "Wrong alignment on BP_LevelManager_C_GetLevelsFromEnemyAreaInfo");
static_assert(sizeof(BP_LevelManager_C_GetLevelsFromEnemyAreaInfo) == 0x000100, "Wrong size on BP_LevelManager_C_GetLevelsFromEnemyAreaInfo");
static_assert(offsetof(BP_LevelManager_C_GetLevelsFromEnemyAreaInfo, InfoNames) == 0x000000, "Member 'BP_LevelManager_C_GetLevelsFromEnemyAreaInfo::InfoNames' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetLevelsFromEnemyAreaInfo, Levels) == 0x000010, "Member 'BP_LevelManager_C_GetLevelsFromEnemyAreaInfo::Levels' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetLevelsFromEnemyAreaInfo, _levels) == 0x000020, "Member 'BP_LevelManager_C_GetLevelsFromEnemyAreaInfo::_levels' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetLevelsFromEnemyAreaInfo, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BP_LevelManager_C_GetLevelsFromEnemyAreaInfo::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetLevelsFromEnemyAreaInfo, Temp_int_Array_Index_Variable) == 0x000034, "Member 'BP_LevelManager_C_GetLevelsFromEnemyAreaInfo::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetLevelsFromEnemyAreaInfo, Temp_int_Loop_Counter_Variable) == 0x000038, "Member 'BP_LevelManager_C_GetLevelsFromEnemyAreaInfo::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetLevelsFromEnemyAreaInfo, CallFunc_Array_Get_Item) == 0x00003C, "Member 'BP_LevelManager_C_GetLevelsFromEnemyAreaInfo::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetLevelsFromEnemyAreaInfo, CallFunc_GetDataTableRowFromName_OutRow) == 0x000048, "Member 'BP_LevelManager_C_GetLevelsFromEnemyAreaInfo::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetLevelsFromEnemyAreaInfo, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000058, "Member 'BP_LevelManager_C_GetLevelsFromEnemyAreaInfo::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetLevelsFromEnemyAreaInfo, CallFunc_Conv_NameToText_ReturnValue) == 0x000060, "Member 'BP_LevelManager_C_GetLevelsFromEnemyAreaInfo::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetLevelsFromEnemyAreaInfo, K2Node_MakeStruct_FormatArgumentData) == 0x000078, "Member 'BP_LevelManager_C_GetLevelsFromEnemyAreaInfo::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetLevelsFromEnemyAreaInfo, K2Node_MakeArray_Array) == 0x0000B8, "Member 'BP_LevelManager_C_GetLevelsFromEnemyAreaInfo::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetLevelsFromEnemyAreaInfo, CallFunc_Less_IntInt_ReturnValue) == 0x0000C8, "Member 'BP_LevelManager_C_GetLevelsFromEnemyAreaInfo::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetLevelsFromEnemyAreaInfo, CallFunc_Format_ReturnValue) == 0x0000D0, "Member 'BP_LevelManager_C_GetLevelsFromEnemyAreaInfo::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetLevelsFromEnemyAreaInfo, CallFunc_Conv_TextToString_ReturnValue) == 0x0000E8, "Member 'BP_LevelManager_C_GetLevelsFromEnemyAreaInfo::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetLevelsFromEnemyAreaInfo, CallFunc_Add_IntInt_ReturnValue) == 0x0000F8, "Member 'BP_LevelManager_C_GetLevelsFromEnemyAreaInfo::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.GetLevelsFromEventAreaInfo
// 0x0100 (0x0100 - 0x0000)
struct BP_LevelManager_C_GetLevelsFromEventAreaInfo final
{
public:
	TArray<class FName>                           InfoNames;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UObject>>         Levels;                                            // 0x0010(0x0010)(Parm, OutParm, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UObject>>         _levels;                                           // 0x0020(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x003C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DDB[0x4];                                      // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_EventAreaInfo                       CallFunc_GetDataTableRowFromName_OutRow;           // 0x0048(0x0010)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DDC[0x7];                                      // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0060(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0078(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00B8(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DDD[0x7];                                      // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00D0(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x00E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LevelManager_C_GetLevelsFromEventAreaInfo) == 0x000008, "Wrong alignment on BP_LevelManager_C_GetLevelsFromEventAreaInfo");
static_assert(sizeof(BP_LevelManager_C_GetLevelsFromEventAreaInfo) == 0x000100, "Wrong size on BP_LevelManager_C_GetLevelsFromEventAreaInfo");
static_assert(offsetof(BP_LevelManager_C_GetLevelsFromEventAreaInfo, InfoNames) == 0x000000, "Member 'BP_LevelManager_C_GetLevelsFromEventAreaInfo::InfoNames' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetLevelsFromEventAreaInfo, Levels) == 0x000010, "Member 'BP_LevelManager_C_GetLevelsFromEventAreaInfo::Levels' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetLevelsFromEventAreaInfo, _levels) == 0x000020, "Member 'BP_LevelManager_C_GetLevelsFromEventAreaInfo::_levels' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetLevelsFromEventAreaInfo, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BP_LevelManager_C_GetLevelsFromEventAreaInfo::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetLevelsFromEventAreaInfo, Temp_int_Array_Index_Variable) == 0x000034, "Member 'BP_LevelManager_C_GetLevelsFromEventAreaInfo::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetLevelsFromEventAreaInfo, Temp_int_Loop_Counter_Variable) == 0x000038, "Member 'BP_LevelManager_C_GetLevelsFromEventAreaInfo::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetLevelsFromEventAreaInfo, CallFunc_Array_Get_Item) == 0x00003C, "Member 'BP_LevelManager_C_GetLevelsFromEventAreaInfo::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetLevelsFromEventAreaInfo, CallFunc_GetDataTableRowFromName_OutRow) == 0x000048, "Member 'BP_LevelManager_C_GetLevelsFromEventAreaInfo::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetLevelsFromEventAreaInfo, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000058, "Member 'BP_LevelManager_C_GetLevelsFromEventAreaInfo::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetLevelsFromEventAreaInfo, CallFunc_Conv_NameToText_ReturnValue) == 0x000060, "Member 'BP_LevelManager_C_GetLevelsFromEventAreaInfo::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetLevelsFromEventAreaInfo, K2Node_MakeStruct_FormatArgumentData) == 0x000078, "Member 'BP_LevelManager_C_GetLevelsFromEventAreaInfo::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetLevelsFromEventAreaInfo, K2Node_MakeArray_Array) == 0x0000B8, "Member 'BP_LevelManager_C_GetLevelsFromEventAreaInfo::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetLevelsFromEventAreaInfo, CallFunc_Less_IntInt_ReturnValue) == 0x0000C8, "Member 'BP_LevelManager_C_GetLevelsFromEventAreaInfo::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetLevelsFromEventAreaInfo, CallFunc_Format_ReturnValue) == 0x0000D0, "Member 'BP_LevelManager_C_GetLevelsFromEventAreaInfo::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetLevelsFromEventAreaInfo, CallFunc_Conv_TextToString_ReturnValue) == 0x0000E8, "Member 'BP_LevelManager_C_GetLevelsFromEventAreaInfo::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetLevelsFromEventAreaInfo, CallFunc_Add_IntInt_ReturnValue) == 0x0000F8, "Member 'BP_LevelManager_C_GetLevelsFromEventAreaInfo::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.GetLevelsFromNObjAreaInfo
// 0x0100 (0x0100 - 0x0000)
struct BP_LevelManager_C_GetLevelsFromNObjAreaInfo final
{
public:
	TArray<class FName>                           InfoNames;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UObject>>         Levels;                                            // 0x0010(0x0010)(Parm, OutParm, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UObject>>         _levels;                                           // 0x0020(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x003C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DDE[0x4];                                      // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_NObjAreaInfo                        CallFunc_GetDataTableRowFromName_OutRow;           // 0x0048(0x0010)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DDF[0x7];                                      // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0060(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0078(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00B8(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DE0[0x7];                                      // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00D0(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x00E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LevelManager_C_GetLevelsFromNObjAreaInfo) == 0x000008, "Wrong alignment on BP_LevelManager_C_GetLevelsFromNObjAreaInfo");
static_assert(sizeof(BP_LevelManager_C_GetLevelsFromNObjAreaInfo) == 0x000100, "Wrong size on BP_LevelManager_C_GetLevelsFromNObjAreaInfo");
static_assert(offsetof(BP_LevelManager_C_GetLevelsFromNObjAreaInfo, InfoNames) == 0x000000, "Member 'BP_LevelManager_C_GetLevelsFromNObjAreaInfo::InfoNames' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetLevelsFromNObjAreaInfo, Levels) == 0x000010, "Member 'BP_LevelManager_C_GetLevelsFromNObjAreaInfo::Levels' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetLevelsFromNObjAreaInfo, _levels) == 0x000020, "Member 'BP_LevelManager_C_GetLevelsFromNObjAreaInfo::_levels' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetLevelsFromNObjAreaInfo, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BP_LevelManager_C_GetLevelsFromNObjAreaInfo::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetLevelsFromNObjAreaInfo, Temp_int_Array_Index_Variable) == 0x000034, "Member 'BP_LevelManager_C_GetLevelsFromNObjAreaInfo::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetLevelsFromNObjAreaInfo, Temp_int_Loop_Counter_Variable) == 0x000038, "Member 'BP_LevelManager_C_GetLevelsFromNObjAreaInfo::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetLevelsFromNObjAreaInfo, CallFunc_Array_Get_Item) == 0x00003C, "Member 'BP_LevelManager_C_GetLevelsFromNObjAreaInfo::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetLevelsFromNObjAreaInfo, CallFunc_GetDataTableRowFromName_OutRow) == 0x000048, "Member 'BP_LevelManager_C_GetLevelsFromNObjAreaInfo::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetLevelsFromNObjAreaInfo, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000058, "Member 'BP_LevelManager_C_GetLevelsFromNObjAreaInfo::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetLevelsFromNObjAreaInfo, CallFunc_Conv_NameToText_ReturnValue) == 0x000060, "Member 'BP_LevelManager_C_GetLevelsFromNObjAreaInfo::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetLevelsFromNObjAreaInfo, K2Node_MakeStruct_FormatArgumentData) == 0x000078, "Member 'BP_LevelManager_C_GetLevelsFromNObjAreaInfo::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetLevelsFromNObjAreaInfo, K2Node_MakeArray_Array) == 0x0000B8, "Member 'BP_LevelManager_C_GetLevelsFromNObjAreaInfo::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetLevelsFromNObjAreaInfo, CallFunc_Less_IntInt_ReturnValue) == 0x0000C8, "Member 'BP_LevelManager_C_GetLevelsFromNObjAreaInfo::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetLevelsFromNObjAreaInfo, CallFunc_Format_ReturnValue) == 0x0000D0, "Member 'BP_LevelManager_C_GetLevelsFromNObjAreaInfo::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetLevelsFromNObjAreaInfo, CallFunc_Conv_TextToString_ReturnValue) == 0x0000E8, "Member 'BP_LevelManager_C_GetLevelsFromNObjAreaInfo::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetLevelsFromNObjAreaInfo, CallFunc_Add_IntInt_ReturnValue) == 0x0000F8, "Member 'BP_LevelManager_C_GetLevelsFromNObjAreaInfo::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.GetLevelsFromNPCAreaInfo
// 0x0100 (0x0100 - 0x0000)
struct BP_LevelManager_C_GetLevelsFromNPCAreaInfo final
{
public:
	TArray<class FName>                           InfoNames;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UObject>>         Levels;                                            // 0x0010(0x0010)(Parm, OutParm, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UObject>>         _levels;                                           // 0x0020(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x003C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DE1[0x4];                                      // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_NPCAreaInfo                         CallFunc_GetDataTableRowFromName_OutRow;           // 0x0048(0x0010)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DE2[0x7];                                      // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0060(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0078(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00B8(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DE3[0x7];                                      // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00D0(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x00E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LevelManager_C_GetLevelsFromNPCAreaInfo) == 0x000008, "Wrong alignment on BP_LevelManager_C_GetLevelsFromNPCAreaInfo");
static_assert(sizeof(BP_LevelManager_C_GetLevelsFromNPCAreaInfo) == 0x000100, "Wrong size on BP_LevelManager_C_GetLevelsFromNPCAreaInfo");
static_assert(offsetof(BP_LevelManager_C_GetLevelsFromNPCAreaInfo, InfoNames) == 0x000000, "Member 'BP_LevelManager_C_GetLevelsFromNPCAreaInfo::InfoNames' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetLevelsFromNPCAreaInfo, Levels) == 0x000010, "Member 'BP_LevelManager_C_GetLevelsFromNPCAreaInfo::Levels' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetLevelsFromNPCAreaInfo, _levels) == 0x000020, "Member 'BP_LevelManager_C_GetLevelsFromNPCAreaInfo::_levels' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetLevelsFromNPCAreaInfo, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BP_LevelManager_C_GetLevelsFromNPCAreaInfo::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetLevelsFromNPCAreaInfo, Temp_int_Array_Index_Variable) == 0x000034, "Member 'BP_LevelManager_C_GetLevelsFromNPCAreaInfo::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetLevelsFromNPCAreaInfo, Temp_int_Loop_Counter_Variable) == 0x000038, "Member 'BP_LevelManager_C_GetLevelsFromNPCAreaInfo::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetLevelsFromNPCAreaInfo, CallFunc_Array_Get_Item) == 0x00003C, "Member 'BP_LevelManager_C_GetLevelsFromNPCAreaInfo::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetLevelsFromNPCAreaInfo, CallFunc_GetDataTableRowFromName_OutRow) == 0x000048, "Member 'BP_LevelManager_C_GetLevelsFromNPCAreaInfo::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetLevelsFromNPCAreaInfo, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000058, "Member 'BP_LevelManager_C_GetLevelsFromNPCAreaInfo::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetLevelsFromNPCAreaInfo, CallFunc_Conv_NameToText_ReturnValue) == 0x000060, "Member 'BP_LevelManager_C_GetLevelsFromNPCAreaInfo::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetLevelsFromNPCAreaInfo, K2Node_MakeStruct_FormatArgumentData) == 0x000078, "Member 'BP_LevelManager_C_GetLevelsFromNPCAreaInfo::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetLevelsFromNPCAreaInfo, K2Node_MakeArray_Array) == 0x0000B8, "Member 'BP_LevelManager_C_GetLevelsFromNPCAreaInfo::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetLevelsFromNPCAreaInfo, CallFunc_Less_IntInt_ReturnValue) == 0x0000C8, "Member 'BP_LevelManager_C_GetLevelsFromNPCAreaInfo::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetLevelsFromNPCAreaInfo, CallFunc_Format_ReturnValue) == 0x0000D0, "Member 'BP_LevelManager_C_GetLevelsFromNPCAreaInfo::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetLevelsFromNPCAreaInfo, CallFunc_Conv_TextToString_ReturnValue) == 0x0000E8, "Member 'BP_LevelManager_C_GetLevelsFromNPCAreaInfo::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetLevelsFromNPCAreaInfo, CallFunc_Add_IntInt_ReturnValue) == 0x0000F8, "Member 'BP_LevelManager_C_GetLevelsFromNPCAreaInfo::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.GetAreaInfo
// 0x00F0 (0x00F0 - 0x0000)
struct BP_LevelManager_C_GetAreaInfo final
{
public:
	class FName                                   AreaName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SkipEnemyLevel;                                    // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          SkipEventLevel;                                    // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DE4[0x6];                                      // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_AreaInfo                            AreaInfo;                                          // 0x0010(0x0068)(Parm, OutParm, HasGetValueTypeHash)
	bool                                          Found;                                             // 0x0078(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DE5[0x7];                                      // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_AreaInfo                            CallFunc_GetAreaInfoAfterTweak_AreaInfo;           // 0x0080(0x0068)(HasGetValueTypeHash)
	bool                                          CallFunc_GetAreaInfoAfterTweak_Found;              // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LevelManager_C_GetAreaInfo) == 0x000008, "Wrong alignment on BP_LevelManager_C_GetAreaInfo");
static_assert(sizeof(BP_LevelManager_C_GetAreaInfo) == 0x0000F0, "Wrong size on BP_LevelManager_C_GetAreaInfo");
static_assert(offsetof(BP_LevelManager_C_GetAreaInfo, AreaName) == 0x000000, "Member 'BP_LevelManager_C_GetAreaInfo::AreaName' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetAreaInfo, SkipEnemyLevel) == 0x000008, "Member 'BP_LevelManager_C_GetAreaInfo::SkipEnemyLevel' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetAreaInfo, SkipEventLevel) == 0x000009, "Member 'BP_LevelManager_C_GetAreaInfo::SkipEventLevel' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetAreaInfo, AreaInfo) == 0x000010, "Member 'BP_LevelManager_C_GetAreaInfo::AreaInfo' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetAreaInfo, Found) == 0x000078, "Member 'BP_LevelManager_C_GetAreaInfo::Found' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetAreaInfo, CallFunc_GetAreaInfoAfterTweak_AreaInfo) == 0x000080, "Member 'BP_LevelManager_C_GetAreaInfo::CallFunc_GetAreaInfoAfterTweak_AreaInfo' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetAreaInfo, CallFunc_GetAreaInfoAfterTweak_Found) == 0x0000E8, "Member 'BP_LevelManager_C_GetAreaInfo::CallFunc_GetAreaInfoAfterTweak_Found' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.GetAreaInfoNames
// 0x0030 (0x0030 - 0x0000)
struct BP_LevelManager_C_GetAreaInfoNames final
{
public:
	TArray<class FName>                           Names;                                             // 0x0000(0x0010)(Parm, OutParm, HasGetValueTypeHash)
	TArray<class FName>                           NewLocalVar_0;                                     // 0x0010(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0020(0x0010)(ReferenceParm, HasGetValueTypeHash)
};
static_assert(alignof(BP_LevelManager_C_GetAreaInfoNames) == 0x000008, "Wrong alignment on BP_LevelManager_C_GetAreaInfoNames");
static_assert(sizeof(BP_LevelManager_C_GetAreaInfoNames) == 0x000030, "Wrong size on BP_LevelManager_C_GetAreaInfoNames");
static_assert(offsetof(BP_LevelManager_C_GetAreaInfoNames, Names) == 0x000000, "Member 'BP_LevelManager_C_GetAreaInfoNames::Names' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetAreaInfoNames, NewLocalVar_0) == 0x000010, "Member 'BP_LevelManager_C_GetAreaInfoNames::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetAreaInfoNames, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000020, "Member 'BP_LevelManager_C_GetAreaInfoNames::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.InitAreaInfo
// 0x01A8 (0x01A8 - 0x0000)
struct BP_LevelManager_C_InitAreaInfo final
{
public:
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0018(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DE6[0x4];                                      // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_AreaInfo                            CallFunc_MakeAreaInfo_AreaInfo;                    // 0x0038(0x0068)(HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DE7[0x7];                                      // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames_1;       // 0x00A8(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item_1;                         // 0x00BC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DE8[0x3];                                      // 0x00C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_AreaInfo                            CallFunc_GetDataTableRowFromName_OutRow;           // 0x00C8(0x0068)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DE9[0x7];                                      // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_AreaInfo                            CallFunc_Map_Find_Value;                           // 0x0138(0x0068)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LevelManager_C_InitAreaInfo) == 0x000008, "Wrong alignment on BP_LevelManager_C_InitAreaInfo");
static_assert(sizeof(BP_LevelManager_C_InitAreaInfo) == 0x0001A8, "Wrong size on BP_LevelManager_C_InitAreaInfo");
static_assert(offsetof(BP_LevelManager_C_InitAreaInfo, Temp_int_Loop_Counter_Variable) == 0x000000, "Member 'BP_LevelManager_C_InitAreaInfo::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_InitAreaInfo, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'BP_LevelManager_C_InitAreaInfo::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_InitAreaInfo, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_LevelManager_C_InitAreaInfo::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_InitAreaInfo, Temp_int_Loop_Counter_Variable_1) == 0x00000C, "Member 'BP_LevelManager_C_InitAreaInfo::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_InitAreaInfo, Temp_int_Array_Index_Variable_1) == 0x000010, "Member 'BP_LevelManager_C_InitAreaInfo::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_InitAreaInfo, CallFunc_Add_IntInt_ReturnValue_1) == 0x000014, "Member 'BP_LevelManager_C_InitAreaInfo::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_InitAreaInfo, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000018, "Member 'BP_LevelManager_C_InitAreaInfo::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_InitAreaInfo, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_LevelManager_C_InitAreaInfo::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_InitAreaInfo, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BP_LevelManager_C_InitAreaInfo::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_InitAreaInfo, CallFunc_MakeAreaInfo_AreaInfo) == 0x000038, "Member 'BP_LevelManager_C_InitAreaInfo::CallFunc_MakeAreaInfo_AreaInfo' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_InitAreaInfo, CallFunc_Less_IntInt_ReturnValue) == 0x0000A0, "Member 'BP_LevelManager_C_InitAreaInfo::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_InitAreaInfo, CallFunc_GetDataTableRowNames_OutRowNames_1) == 0x0000A8, "Member 'BP_LevelManager_C_InitAreaInfo::CallFunc_GetDataTableRowNames_OutRowNames_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_InitAreaInfo, CallFunc_Array_Length_ReturnValue_1) == 0x0000B8, "Member 'BP_LevelManager_C_InitAreaInfo::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_InitAreaInfo, CallFunc_Array_Get_Item_1) == 0x0000BC, "Member 'BP_LevelManager_C_InitAreaInfo::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_InitAreaInfo, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000C4, "Member 'BP_LevelManager_C_InitAreaInfo::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_InitAreaInfo, CallFunc_GetDataTableRowFromName_OutRow) == 0x0000C8, "Member 'BP_LevelManager_C_InitAreaInfo::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_InitAreaInfo, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000130, "Member 'BP_LevelManager_C_InitAreaInfo::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_InitAreaInfo, CallFunc_Map_Find_Value) == 0x000138, "Member 'BP_LevelManager_C_InitAreaInfo::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_InitAreaInfo, CallFunc_Map_Find_ReturnValue) == 0x0001A0, "Member 'BP_LevelManager_C_InitAreaInfo::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.IsAreaLevelsLoaded
// 0x00F8 (0x00F8 - 0x0000)
struct BP_LevelManager_C_IsAreaLevelsLoaded final
{
public:
	int32                                         LocationId;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AreaId;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         VariationID;                                       // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RawCheck;                                          // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsLoaded;                                          // 0x000D(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsError;                                           // 0x000E(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DEA[0x1];                                      // 0x000F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_AreaInfo                            Area_Info;                                         // 0x0010(0x0068)(Parm, OutParm, HasGetValueTypeHash)
	class FName                                   CallFunc_GetAreaName_ReturnValue;                  // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAreaLevelsLoadedByInfo_IsLoaded;        // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DEB[0x7];                                      // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_AreaInfo                            CallFunc_GetAreaInfo_AreaInfo;                     // 0x0088(0x0068)(HasGetValueTypeHash)
	bool                                          CallFunc_GetAreaInfo_Found;                        // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LevelManager_C_IsAreaLevelsLoaded) == 0x000008, "Wrong alignment on BP_LevelManager_C_IsAreaLevelsLoaded");
static_assert(sizeof(BP_LevelManager_C_IsAreaLevelsLoaded) == 0x0000F8, "Wrong size on BP_LevelManager_C_IsAreaLevelsLoaded");
static_assert(offsetof(BP_LevelManager_C_IsAreaLevelsLoaded, LocationId) == 0x000000, "Member 'BP_LevelManager_C_IsAreaLevelsLoaded::LocationId' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaLevelsLoaded, AreaId) == 0x000004, "Member 'BP_LevelManager_C_IsAreaLevelsLoaded::AreaId' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaLevelsLoaded, VariationID) == 0x000008, "Member 'BP_LevelManager_C_IsAreaLevelsLoaded::VariationID' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaLevelsLoaded, RawCheck) == 0x00000C, "Member 'BP_LevelManager_C_IsAreaLevelsLoaded::RawCheck' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaLevelsLoaded, IsLoaded) == 0x00000D, "Member 'BP_LevelManager_C_IsAreaLevelsLoaded::IsLoaded' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaLevelsLoaded, IsError) == 0x00000E, "Member 'BP_LevelManager_C_IsAreaLevelsLoaded::IsError' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaLevelsLoaded, Area_Info) == 0x000010, "Member 'BP_LevelManager_C_IsAreaLevelsLoaded::Area_Info' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaLevelsLoaded, CallFunc_GetAreaName_ReturnValue) == 0x000078, "Member 'BP_LevelManager_C_IsAreaLevelsLoaded::CallFunc_GetAreaName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaLevelsLoaded, CallFunc_IsAreaLevelsLoadedByInfo_IsLoaded) == 0x000080, "Member 'BP_LevelManager_C_IsAreaLevelsLoaded::CallFunc_IsAreaLevelsLoadedByInfo_IsLoaded' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaLevelsLoaded, CallFunc_GetAreaInfo_AreaInfo) == 0x000088, "Member 'BP_LevelManager_C_IsAreaLevelsLoaded::CallFunc_GetAreaInfo_AreaInfo' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaLevelsLoaded, CallFunc_GetAreaInfo_Found) == 0x0000F0, "Member 'BP_LevelManager_C_IsAreaLevelsLoaded::CallFunc_GetAreaInfo_Found' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.GetAreaInfoAfterTweak
// 0x02D8 (0x02D8 - 0x0000)
struct BP_LevelManager_C_GetAreaInfoAfterTweak final
{
public:
	class FName                                   AreaName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SkipEnemyLevel;                                    // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          SkipEventLevel;                                    // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DEC[0x6];                                      // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_AreaInfo                            AreaInfo;                                          // 0x0010(0x0068)(Parm, OutParm, HasGetValueTypeHash)
	bool                                          Found;                                             // 0x0078(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DED[0x7];                                      // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_AreaSettingsInfo                    CallFunc_GetDataTableRowFromName_OutRow;           // 0x0080(0x00A8)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DEE[0x7];                                      // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetDebuggingManager_DebuggingManager;     // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                K2Node_DynamicCast_AsBP_Debugging_Manager;         // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DEF[0x7];                                      // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_AreaSettingsInfo                    CallFunc_TweakAreaSettings_OutSettings;            // 0x0148(0x00A8)(HasGetValueTypeHash)
	TArray<bool>                                  CallFunc_TweakAreaSettings_ConditionResults;       // 0x01F0(0x0010)(ReferenceParm, HasGetValueTypeHash)
	struct FS_AreaInfo                            CallFunc_MakeTweakedAreaInfo_AreaInfo;             // 0x0200(0x0068)(HasGetValueTypeHash)
	struct FS_AreaInfo                            CallFunc_Map_Find_Value;                           // 0x0268(0x0068)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LevelManager_C_GetAreaInfoAfterTweak) == 0x000008, "Wrong alignment on BP_LevelManager_C_GetAreaInfoAfterTweak");
static_assert(sizeof(BP_LevelManager_C_GetAreaInfoAfterTweak) == 0x0002D8, "Wrong size on BP_LevelManager_C_GetAreaInfoAfterTweak");
static_assert(offsetof(BP_LevelManager_C_GetAreaInfoAfterTweak, AreaName) == 0x000000, "Member 'BP_LevelManager_C_GetAreaInfoAfterTweak::AreaName' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetAreaInfoAfterTweak, SkipEnemyLevel) == 0x000008, "Member 'BP_LevelManager_C_GetAreaInfoAfterTweak::SkipEnemyLevel' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetAreaInfoAfterTweak, SkipEventLevel) == 0x000009, "Member 'BP_LevelManager_C_GetAreaInfoAfterTweak::SkipEventLevel' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetAreaInfoAfterTweak, AreaInfo) == 0x000010, "Member 'BP_LevelManager_C_GetAreaInfoAfterTweak::AreaInfo' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetAreaInfoAfterTweak, Found) == 0x000078, "Member 'BP_LevelManager_C_GetAreaInfoAfterTweak::Found' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetAreaInfoAfterTweak, CallFunc_GetDataTableRowFromName_OutRow) == 0x000080, "Member 'BP_LevelManager_C_GetAreaInfoAfterTweak::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetAreaInfoAfterTweak, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000128, "Member 'BP_LevelManager_C_GetAreaInfoAfterTweak::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetAreaInfoAfterTweak, CallFunc_GetDebuggingManager_DebuggingManager) == 0x000130, "Member 'BP_LevelManager_C_GetAreaInfoAfterTweak::CallFunc_GetDebuggingManager_DebuggingManager' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetAreaInfoAfterTweak, K2Node_DynamicCast_AsBP_Debugging_Manager) == 0x000138, "Member 'BP_LevelManager_C_GetAreaInfoAfterTweak::K2Node_DynamicCast_AsBP_Debugging_Manager' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetAreaInfoAfterTweak, K2Node_DynamicCast_bSuccess) == 0x000140, "Member 'BP_LevelManager_C_GetAreaInfoAfterTweak::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetAreaInfoAfterTweak, CallFunc_TweakAreaSettings_OutSettings) == 0x000148, "Member 'BP_LevelManager_C_GetAreaInfoAfterTweak::CallFunc_TweakAreaSettings_OutSettings' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetAreaInfoAfterTweak, CallFunc_TweakAreaSettings_ConditionResults) == 0x0001F0, "Member 'BP_LevelManager_C_GetAreaInfoAfterTweak::CallFunc_TweakAreaSettings_ConditionResults' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetAreaInfoAfterTweak, CallFunc_MakeTweakedAreaInfo_AreaInfo) == 0x000200, "Member 'BP_LevelManager_C_GetAreaInfoAfterTweak::CallFunc_MakeTweakedAreaInfo_AreaInfo' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetAreaInfoAfterTweak, CallFunc_Map_Find_Value) == 0x000268, "Member 'BP_LevelManager_C_GetAreaInfoAfterTweak::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetAreaInfoAfterTweak, CallFunc_Map_Find_ReturnValue) == 0x0002D0, "Member 'BP_LevelManager_C_GetAreaInfoAfterTweak::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.TweakAreaSettings
// 0x0360 (0x0360 - 0x0000)
struct BP_LevelManager_C_TweakAreaSettings final
{
public:
	struct FS_AreaSettingsInfo                    Settings;                                          // 0x0000(0x00A8)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	struct FS_AreaSettingsInfo                    OutSettings;                                       // 0x00A8(0x00A8)(Parm, OutParm, HasGetValueTypeHash)
	TArray<bool>                                  ConditionResults;                                  // 0x0150(0x0010)(Parm, OutParm, HasGetValueTypeHash)
	TArray<bool>                                  _conditionResults;                                 // 0x0160(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FS_AreaSettingsInfo                    _tmpSettings;                                      // 0x0170(0x00A8)(Edit, BlueprintVisible, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue;               // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             K2Node_DynamicCast_AsData_Table;                   // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DF0[0x7];                                      // 0x0229(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_BattleSimulatorLevelInfo            CallFunc_GetDataTableRowFromName_OutRow;           // 0x0230(0x0068)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DF1[0x3];                                      // 0x0299(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x029C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue_1;          // 0x02A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x02A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DF2[0x1];                                      // 0x02A3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x02A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x02A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x02AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckTweakAllConditions_AllOk;            // 0x02AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DF3[0x2];                                      // 0x02AE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x02B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x02B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_AreaSettingsInfo                    CallFunc_ExecAreaInfoTweaks_OutSettings;           // 0x02B8(0x00A8)(HasGetValueTypeHash)
};
static_assert(alignof(BP_LevelManager_C_TweakAreaSettings) == 0x000008, "Wrong alignment on BP_LevelManager_C_TweakAreaSettings");
static_assert(sizeof(BP_LevelManager_C_TweakAreaSettings) == 0x000360, "Wrong size on BP_LevelManager_C_TweakAreaSettings");
static_assert(offsetof(BP_LevelManager_C_TweakAreaSettings, Settings) == 0x000000, "Member 'BP_LevelManager_C_TweakAreaSettings::Settings' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_TweakAreaSettings, OutSettings) == 0x0000A8, "Member 'BP_LevelManager_C_TweakAreaSettings::OutSettings' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_TweakAreaSettings, ConditionResults) == 0x000150, "Member 'BP_LevelManager_C_TweakAreaSettings::ConditionResults' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_TweakAreaSettings, _conditionResults) == 0x000160, "Member 'BP_LevelManager_C_TweakAreaSettings::_conditionResults' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_TweakAreaSettings, _tmpSettings) == 0x000170, "Member 'BP_LevelManager_C_TweakAreaSettings::_tmpSettings' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_TweakAreaSettings, CallFunc_LoadSoftObject_ReturnValue) == 0x000218, "Member 'BP_LevelManager_C_TweakAreaSettings::CallFunc_LoadSoftObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_TweakAreaSettings, K2Node_DynamicCast_AsData_Table) == 0x000220, "Member 'BP_LevelManager_C_TweakAreaSettings::K2Node_DynamicCast_AsData_Table' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_TweakAreaSettings, K2Node_DynamicCast_bSuccess) == 0x000228, "Member 'BP_LevelManager_C_TweakAreaSettings::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_TweakAreaSettings, CallFunc_GetDataTableRowFromName_OutRow) == 0x000230, "Member 'BP_LevelManager_C_TweakAreaSettings::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_TweakAreaSettings, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000298, "Member 'BP_LevelManager_C_TweakAreaSettings::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_TweakAreaSettings, CallFunc_Array_Length_ReturnValue) == 0x00029C, "Member 'BP_LevelManager_C_TweakAreaSettings::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_TweakAreaSettings, CallFunc_NotEqual_NameName_ReturnValue) == 0x0002A0, "Member 'BP_LevelManager_C_TweakAreaSettings::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_TweakAreaSettings, CallFunc_NotEqual_NameName_ReturnValue_1) == 0x0002A1, "Member 'BP_LevelManager_C_TweakAreaSettings::CallFunc_NotEqual_NameName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_TweakAreaSettings, CallFunc_BooleanAND_ReturnValue) == 0x0002A2, "Member 'BP_LevelManager_C_TweakAreaSettings::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_TweakAreaSettings, Temp_int_Loop_Counter_Variable) == 0x0002A4, "Member 'BP_LevelManager_C_TweakAreaSettings::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_TweakAreaSettings, Temp_int_Array_Index_Variable) == 0x0002A8, "Member 'BP_LevelManager_C_TweakAreaSettings::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_TweakAreaSettings, CallFunc_Less_IntInt_ReturnValue) == 0x0002AC, "Member 'BP_LevelManager_C_TweakAreaSettings::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_TweakAreaSettings, CallFunc_CheckTweakAllConditions_AllOk) == 0x0002AD, "Member 'BP_LevelManager_C_TweakAreaSettings::CallFunc_CheckTweakAllConditions_AllOk' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_TweakAreaSettings, CallFunc_Add_IntInt_ReturnValue) == 0x0002B0, "Member 'BP_LevelManager_C_TweakAreaSettings::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_TweakAreaSettings, CallFunc_Array_Add_ReturnValue) == 0x0002B4, "Member 'BP_LevelManager_C_TweakAreaSettings::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_TweakAreaSettings, CallFunc_ExecAreaInfoTweaks_OutSettings) == 0x0002B8, "Member 'BP_LevelManager_C_TweakAreaSettings::CallFunc_ExecAreaInfoTweaks_OutSettings' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.CheckTweakAllConditions
// 0x0028 (0x0028 - 0x0000)
struct BP_LevelManager_C_CheckTweakAllConditions final
{
public:
	TArray<struct FS_AreaInfoTweakCondition>      Conditions;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	bool                                          AllOk;                                             // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DF4[0x3];                                      // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckTweakCondition_Result;               // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DF5[0x2];                                      // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LevelManager_C_CheckTweakAllConditions) == 0x000008, "Wrong alignment on BP_LevelManager_C_CheckTweakAllConditions");
static_assert(sizeof(BP_LevelManager_C_CheckTweakAllConditions) == 0x000028, "Wrong size on BP_LevelManager_C_CheckTweakAllConditions");
static_assert(offsetof(BP_LevelManager_C_CheckTweakAllConditions, Conditions) == 0x000000, "Member 'BP_LevelManager_C_CheckTweakAllConditions::Conditions' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_CheckTweakAllConditions, AllOk) == 0x000010, "Member 'BP_LevelManager_C_CheckTweakAllConditions::AllOk' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_CheckTweakAllConditions, CallFunc_Array_Length_ReturnValue) == 0x000014, "Member 'BP_LevelManager_C_CheckTweakAllConditions::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_CheckTweakAllConditions, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BP_LevelManager_C_CheckTweakAllConditions::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_CheckTweakAllConditions, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'BP_LevelManager_C_CheckTweakAllConditions::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_CheckTweakAllConditions, CallFunc_CheckTweakCondition_Result) == 0x000020, "Member 'BP_LevelManager_C_CheckTweakAllConditions::CallFunc_CheckTweakCondition_Result' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_CheckTweakAllConditions, CallFunc_Less_IntInt_ReturnValue) == 0x000021, "Member 'BP_LevelManager_C_CheckTweakAllConditions::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_CheckTweakAllConditions, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'BP_LevelManager_C_CheckTweakAllConditions::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.CheckTweakCondition
// 0x0028 (0x0028 - 0x0000)
struct BP_LevelManager_C_CheckTweakCondition final
{
public:
	struct FS_AreaInfoTweakCondition              Condition;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DF6[0x3];                                      // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAreaInfoTweakCondition                K2Node_MakeStruct_AreaInfoTweakCondition;          // 0x0014(0x0010)(NoDestructor)
	bool                                          CallFunc_CheckTweakConditionFunc_ReturnValue;      // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LevelManager_C_CheckTweakCondition) == 0x000004, "Wrong alignment on BP_LevelManager_C_CheckTweakCondition");
static_assert(sizeof(BP_LevelManager_C_CheckTweakCondition) == 0x000028, "Wrong size on BP_LevelManager_C_CheckTweakCondition");
static_assert(offsetof(BP_LevelManager_C_CheckTweakCondition, Condition) == 0x000000, "Member 'BP_LevelManager_C_CheckTweakCondition::Condition' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_CheckTweakCondition, Result) == 0x000010, "Member 'BP_LevelManager_C_CheckTweakCondition::Result' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_CheckTweakCondition, K2Node_MakeStruct_AreaInfoTweakCondition) == 0x000014, "Member 'BP_LevelManager_C_CheckTweakCondition::K2Node_MakeStruct_AreaInfoTweakCondition' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_CheckTweakCondition, CallFunc_CheckTweakConditionFunc_ReturnValue) == 0x000024, "Member 'BP_LevelManager_C_CheckTweakCondition::CallFunc_CheckTweakConditionFunc_ReturnValue' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.ExecAreaInfoTweaks
// 0x0418 (0x0418 - 0x0000)
struct BP_LevelManager_C_ExecAreaInfoTweaks final
{
public:
	struct FS_AreaSettingsInfo                    Settings;                                          // 0x0000(0x00A8)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	TArray<struct FS_AreaInfoTweakExec>           TweakExecs;                                        // 0x00A8(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	struct FS_AreaSettingsInfo                    OutSettings;                                       // 0x00B8(0x00A8)(Parm, OutParm, HasGetValueTypeHash)
	struct FS_AreaSettingsInfo                    _tmpSettings;                                      // 0x0160(0x00A8)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0214(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0215(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DF7[0x2];                                      // 0x0216(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DF8[0x4];                                      // 0x021C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_AreaSettingsInfo                    CallFunc_ExecAreaInfoTweakReplace_OutSettings;     // 0x0220(0x00A8)(HasGetValueTypeHash)
	struct FS_AreaSettingsInfo                    CallFunc_ExecAreaInfoTweakDelete_OutSettings;      // 0x02C8(0x00A8)(HasGetValueTypeHash)
	struct FS_AreaSettingsInfo                    CallFunc_ExecAreaInfoTweakAdd_OutSettings;         // 0x0370(0x00A8)(HasGetValueTypeHash)
};
static_assert(alignof(BP_LevelManager_C_ExecAreaInfoTweaks) == 0x000008, "Wrong alignment on BP_LevelManager_C_ExecAreaInfoTweaks");
static_assert(sizeof(BP_LevelManager_C_ExecAreaInfoTweaks) == 0x000418, "Wrong size on BP_LevelManager_C_ExecAreaInfoTweaks");
static_assert(offsetof(BP_LevelManager_C_ExecAreaInfoTweaks, Settings) == 0x000000, "Member 'BP_LevelManager_C_ExecAreaInfoTweaks::Settings' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecAreaInfoTweaks, TweakExecs) == 0x0000A8, "Member 'BP_LevelManager_C_ExecAreaInfoTweaks::TweakExecs' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecAreaInfoTweaks, OutSettings) == 0x0000B8, "Member 'BP_LevelManager_C_ExecAreaInfoTweaks::OutSettings' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecAreaInfoTweaks, _tmpSettings) == 0x000160, "Member 'BP_LevelManager_C_ExecAreaInfoTweaks::_tmpSettings' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecAreaInfoTweaks, CallFunc_Array_Length_ReturnValue) == 0x000208, "Member 'BP_LevelManager_C_ExecAreaInfoTweaks::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecAreaInfoTweaks, Temp_int_Array_Index_Variable) == 0x00020C, "Member 'BP_LevelManager_C_ExecAreaInfoTweaks::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecAreaInfoTweaks, Temp_int_Loop_Counter_Variable) == 0x000210, "Member 'BP_LevelManager_C_ExecAreaInfoTweaks::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecAreaInfoTweaks, CallFunc_Less_IntInt_ReturnValue) == 0x000214, "Member 'BP_LevelManager_C_ExecAreaInfoTweaks::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecAreaInfoTweaks, K2Node_SwitchEnum_CmpSuccess) == 0x000215, "Member 'BP_LevelManager_C_ExecAreaInfoTweaks::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecAreaInfoTweaks, CallFunc_Add_IntInt_ReturnValue) == 0x000218, "Member 'BP_LevelManager_C_ExecAreaInfoTweaks::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecAreaInfoTweaks, CallFunc_ExecAreaInfoTweakReplace_OutSettings) == 0x000220, "Member 'BP_LevelManager_C_ExecAreaInfoTweaks::CallFunc_ExecAreaInfoTweakReplace_OutSettings' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecAreaInfoTweaks, CallFunc_ExecAreaInfoTweakDelete_OutSettings) == 0x0002C8, "Member 'BP_LevelManager_C_ExecAreaInfoTweaks::CallFunc_ExecAreaInfoTweakDelete_OutSettings' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecAreaInfoTweaks, CallFunc_ExecAreaInfoTweakAdd_OutSettings) == 0x000370, "Member 'BP_LevelManager_C_ExecAreaInfoTweaks::CallFunc_ExecAreaInfoTweakAdd_OutSettings' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.ExecAreaInfoTweakAdd
// 0x0218 (0x0218 - 0x0000)
struct BP_LevelManager_C_ExecAreaInfoTweakAdd final
{
public:
	struct FS_AreaSettingsInfo                    Settings;                                          // 0x0000(0x00A8)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	EAreaInfoType                                 AreaInfoType;                                      // 0x00A8(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DF9[0x7];                                      // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           InfoNames;                                         // 0x00B0(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	struct FS_AreaSettingsInfo                    OutSettings;                                       // 0x00C0(0x00A8)(Parm, OutParm, HasGetValueTypeHash)
	struct FS_AreaSettingsInfo                    _tmpSettings;                                      // 0x0168(0x00A8)(Edit, BlueprintVisible, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LevelManager_C_ExecAreaInfoTweakAdd) == 0x000008, "Wrong alignment on BP_LevelManager_C_ExecAreaInfoTweakAdd");
static_assert(sizeof(BP_LevelManager_C_ExecAreaInfoTweakAdd) == 0x000218, "Wrong size on BP_LevelManager_C_ExecAreaInfoTweakAdd");
static_assert(offsetof(BP_LevelManager_C_ExecAreaInfoTweakAdd, Settings) == 0x000000, "Member 'BP_LevelManager_C_ExecAreaInfoTweakAdd::Settings' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecAreaInfoTweakAdd, AreaInfoType) == 0x0000A8, "Member 'BP_LevelManager_C_ExecAreaInfoTweakAdd::AreaInfoType' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecAreaInfoTweakAdd, InfoNames) == 0x0000B0, "Member 'BP_LevelManager_C_ExecAreaInfoTweakAdd::InfoNames' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecAreaInfoTweakAdd, OutSettings) == 0x0000C0, "Member 'BP_LevelManager_C_ExecAreaInfoTweakAdd::OutSettings' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecAreaInfoTweakAdd, _tmpSettings) == 0x000168, "Member 'BP_LevelManager_C_ExecAreaInfoTweakAdd::_tmpSettings' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecAreaInfoTweakAdd, K2Node_SwitchEnum_CmpSuccess) == 0x000210, "Member 'BP_LevelManager_C_ExecAreaInfoTweakAdd::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.ExecAreaInfoTweakDelete
// 0x02B8 (0x02B8 - 0x0000)
struct BP_LevelManager_C_ExecAreaInfoTweakDelete final
{
public:
	struct FS_AreaSettingsInfo                    Settings;                                          // 0x0000(0x00A8)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	EAreaInfoType                                 AreaInfoType;                                      // 0x00A8(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DFA[0x7];                                      // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           InfoNames;                                         // 0x00B0(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	struct FS_AreaSettingsInfo                    OutSettings;                                       // 0x00C0(0x00A8)(Parm, OutParm, HasGetValueTypeHash)
	struct FS_AreaSettingsInfo                    _tmpSettings;                                      // 0x0168(0x00A8)(Edit, BlueprintVisible, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DFB[0x3];                                      // 0x0211(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0214(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0224(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x022C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0234(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_4;                   // 0x023C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0244(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_5;                   // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_4;                  // 0x024C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_5;                  // 0x0254(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x025C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item_1;                         // 0x0264(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x026C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0274(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0275(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DFC[0x2];                                      // 0x0276(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Array_Get_Item_2;                         // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item_3;                         // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0288(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x028C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x0291(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DFD[0x2];                                      // 0x0292(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Array_Get_Item_4;                         // 0x0294(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item_5;                         // 0x029C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x02A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x02A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x02AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_5;                // 0x02AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x02AE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue_1;           // 0x02AF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue_2;           // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue_3;           // 0x02B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue_4;           // 0x02B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue_5;           // 0x02B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LevelManager_C_ExecAreaInfoTweakDelete) == 0x000008, "Wrong alignment on BP_LevelManager_C_ExecAreaInfoTweakDelete");
static_assert(sizeof(BP_LevelManager_C_ExecAreaInfoTweakDelete) == 0x0002B8, "Wrong size on BP_LevelManager_C_ExecAreaInfoTweakDelete");
static_assert(offsetof(BP_LevelManager_C_ExecAreaInfoTweakDelete, Settings) == 0x000000, "Member 'BP_LevelManager_C_ExecAreaInfoTweakDelete::Settings' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecAreaInfoTweakDelete, AreaInfoType) == 0x0000A8, "Member 'BP_LevelManager_C_ExecAreaInfoTweakDelete::AreaInfoType' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecAreaInfoTweakDelete, InfoNames) == 0x0000B0, "Member 'BP_LevelManager_C_ExecAreaInfoTweakDelete::InfoNames' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecAreaInfoTweakDelete, OutSettings) == 0x0000C0, "Member 'BP_LevelManager_C_ExecAreaInfoTweakDelete::OutSettings' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecAreaInfoTweakDelete, _tmpSettings) == 0x000168, "Member 'BP_LevelManager_C_ExecAreaInfoTweakDelete::_tmpSettings' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecAreaInfoTweakDelete, K2Node_SwitchEnum_CmpSuccess) == 0x000210, "Member 'BP_LevelManager_C_ExecAreaInfoTweakDelete::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecAreaInfoTweakDelete, Temp_int_Array_Index_Variable) == 0x000214, "Member 'BP_LevelManager_C_ExecAreaInfoTweakDelete::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecAreaInfoTweakDelete, Temp_int_Array_Index_Variable_1) == 0x000218, "Member 'BP_LevelManager_C_ExecAreaInfoTweakDelete::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecAreaInfoTweakDelete, Temp_int_Loop_Counter_Variable) == 0x00021C, "Member 'BP_LevelManager_C_ExecAreaInfoTweakDelete::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecAreaInfoTweakDelete, CallFunc_Add_IntInt_ReturnValue) == 0x000220, "Member 'BP_LevelManager_C_ExecAreaInfoTweakDelete::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecAreaInfoTweakDelete, Temp_int_Loop_Counter_Variable_1) == 0x000224, "Member 'BP_LevelManager_C_ExecAreaInfoTweakDelete::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecAreaInfoTweakDelete, CallFunc_Add_IntInt_ReturnValue_1) == 0x000228, "Member 'BP_LevelManager_C_ExecAreaInfoTweakDelete::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecAreaInfoTweakDelete, Temp_int_Array_Index_Variable_2) == 0x00022C, "Member 'BP_LevelManager_C_ExecAreaInfoTweakDelete::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecAreaInfoTweakDelete, Temp_int_Array_Index_Variable_3) == 0x000230, "Member 'BP_LevelManager_C_ExecAreaInfoTweakDelete::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecAreaInfoTweakDelete, Temp_int_Loop_Counter_Variable_2) == 0x000234, "Member 'BP_LevelManager_C_ExecAreaInfoTweakDelete::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecAreaInfoTweakDelete, CallFunc_Add_IntInt_ReturnValue_2) == 0x000238, "Member 'BP_LevelManager_C_ExecAreaInfoTweakDelete::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecAreaInfoTweakDelete, Temp_int_Array_Index_Variable_4) == 0x00023C, "Member 'BP_LevelManager_C_ExecAreaInfoTweakDelete::Temp_int_Array_Index_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecAreaInfoTweakDelete, Temp_int_Loop_Counter_Variable_3) == 0x000240, "Member 'BP_LevelManager_C_ExecAreaInfoTweakDelete::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecAreaInfoTweakDelete, CallFunc_Add_IntInt_ReturnValue_3) == 0x000244, "Member 'BP_LevelManager_C_ExecAreaInfoTweakDelete::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecAreaInfoTweakDelete, Temp_int_Array_Index_Variable_5) == 0x000248, "Member 'BP_LevelManager_C_ExecAreaInfoTweakDelete::Temp_int_Array_Index_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecAreaInfoTweakDelete, Temp_int_Loop_Counter_Variable_4) == 0x00024C, "Member 'BP_LevelManager_C_ExecAreaInfoTweakDelete::Temp_int_Loop_Counter_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecAreaInfoTweakDelete, CallFunc_Add_IntInt_ReturnValue_4) == 0x000250, "Member 'BP_LevelManager_C_ExecAreaInfoTweakDelete::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecAreaInfoTweakDelete, Temp_int_Loop_Counter_Variable_5) == 0x000254, "Member 'BP_LevelManager_C_ExecAreaInfoTweakDelete::Temp_int_Loop_Counter_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecAreaInfoTweakDelete, CallFunc_Add_IntInt_ReturnValue_5) == 0x000258, "Member 'BP_LevelManager_C_ExecAreaInfoTweakDelete::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecAreaInfoTweakDelete, CallFunc_Array_Get_Item) == 0x00025C, "Member 'BP_LevelManager_C_ExecAreaInfoTweakDelete::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecAreaInfoTweakDelete, CallFunc_Array_Get_Item_1) == 0x000264, "Member 'BP_LevelManager_C_ExecAreaInfoTweakDelete::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecAreaInfoTweakDelete, CallFunc_Array_Length_ReturnValue) == 0x00026C, "Member 'BP_LevelManager_C_ExecAreaInfoTweakDelete::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecAreaInfoTweakDelete, CallFunc_Array_Length_ReturnValue_1) == 0x000270, "Member 'BP_LevelManager_C_ExecAreaInfoTweakDelete::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecAreaInfoTweakDelete, CallFunc_Less_IntInt_ReturnValue) == 0x000274, "Member 'BP_LevelManager_C_ExecAreaInfoTweakDelete::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecAreaInfoTweakDelete, CallFunc_Less_IntInt_ReturnValue_1) == 0x000275, "Member 'BP_LevelManager_C_ExecAreaInfoTweakDelete::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecAreaInfoTweakDelete, CallFunc_Array_Get_Item_2) == 0x000278, "Member 'BP_LevelManager_C_ExecAreaInfoTweakDelete::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecAreaInfoTweakDelete, CallFunc_Array_Get_Item_3) == 0x000280, "Member 'BP_LevelManager_C_ExecAreaInfoTweakDelete::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecAreaInfoTweakDelete, CallFunc_Array_Length_ReturnValue_2) == 0x000288, "Member 'BP_LevelManager_C_ExecAreaInfoTweakDelete::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecAreaInfoTweakDelete, CallFunc_Array_Length_ReturnValue_3) == 0x00028C, "Member 'BP_LevelManager_C_ExecAreaInfoTweakDelete::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecAreaInfoTweakDelete, CallFunc_Less_IntInt_ReturnValue_2) == 0x000290, "Member 'BP_LevelManager_C_ExecAreaInfoTweakDelete::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecAreaInfoTweakDelete, CallFunc_Less_IntInt_ReturnValue_3) == 0x000291, "Member 'BP_LevelManager_C_ExecAreaInfoTweakDelete::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecAreaInfoTweakDelete, CallFunc_Array_Get_Item_4) == 0x000294, "Member 'BP_LevelManager_C_ExecAreaInfoTweakDelete::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecAreaInfoTweakDelete, CallFunc_Array_Get_Item_5) == 0x00029C, "Member 'BP_LevelManager_C_ExecAreaInfoTweakDelete::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecAreaInfoTweakDelete, CallFunc_Array_Length_ReturnValue_4) == 0x0002A4, "Member 'BP_LevelManager_C_ExecAreaInfoTweakDelete::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecAreaInfoTweakDelete, CallFunc_Array_Length_ReturnValue_5) == 0x0002A8, "Member 'BP_LevelManager_C_ExecAreaInfoTweakDelete::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecAreaInfoTweakDelete, CallFunc_Less_IntInt_ReturnValue_4) == 0x0002AC, "Member 'BP_LevelManager_C_ExecAreaInfoTweakDelete::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecAreaInfoTweakDelete, CallFunc_Less_IntInt_ReturnValue_5) == 0x0002AD, "Member 'BP_LevelManager_C_ExecAreaInfoTweakDelete::CallFunc_Less_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecAreaInfoTweakDelete, CallFunc_Array_RemoveItem_ReturnValue) == 0x0002AE, "Member 'BP_LevelManager_C_ExecAreaInfoTweakDelete::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecAreaInfoTweakDelete, CallFunc_Array_RemoveItem_ReturnValue_1) == 0x0002AF, "Member 'BP_LevelManager_C_ExecAreaInfoTweakDelete::CallFunc_Array_RemoveItem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecAreaInfoTweakDelete, CallFunc_Array_RemoveItem_ReturnValue_2) == 0x0002B0, "Member 'BP_LevelManager_C_ExecAreaInfoTweakDelete::CallFunc_Array_RemoveItem_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecAreaInfoTweakDelete, CallFunc_Array_RemoveItem_ReturnValue_3) == 0x0002B1, "Member 'BP_LevelManager_C_ExecAreaInfoTweakDelete::CallFunc_Array_RemoveItem_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecAreaInfoTweakDelete, CallFunc_Array_RemoveItem_ReturnValue_4) == 0x0002B2, "Member 'BP_LevelManager_C_ExecAreaInfoTweakDelete::CallFunc_Array_RemoveItem_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecAreaInfoTweakDelete, CallFunc_Array_RemoveItem_ReturnValue_5) == 0x0002B3, "Member 'BP_LevelManager_C_ExecAreaInfoTweakDelete::CallFunc_Array_RemoveItem_ReturnValue_5' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.ExecAreaInfoTweakReplace
// 0x02C0 (0x02C0 - 0x0000)
struct BP_LevelManager_C_ExecAreaInfoTweakReplace final
{
public:
	struct FS_AreaSettingsInfo                    Settings;                                          // 0x0000(0x00A8)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	EAreaInfoType                                 AreaInfoType;                                      // 0x00A8(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DFE[0x7];                                      // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           InfoNames;                                         // 0x00B0(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	E_SceneType                                   SceneType;                                         // 0x00C0(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DFF[0x7];                                      // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_AreaSettingsInfo                    OutSettings;                                       // 0x00C8(0x00A8)(Parm, OutParm, HasGetValueTypeHash)
	struct FS_AreaSettingsInfo                    _tmpSettings;                                      // 0x0170(0x00A8)(Edit, BlueprintVisible, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E00[0x3];                                      // 0x0219(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetEnumeratorName_ReturnValue;            // 0x021C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E01[0x4];                                      // 0x0224(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0228(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0240(0x0040)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E02[0x7];                                      // 0x0281(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0288(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0298(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x02B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LevelManager_C_ExecAreaInfoTweakReplace) == 0x000008, "Wrong alignment on BP_LevelManager_C_ExecAreaInfoTweakReplace");
static_assert(sizeof(BP_LevelManager_C_ExecAreaInfoTweakReplace) == 0x0002C0, "Wrong size on BP_LevelManager_C_ExecAreaInfoTweakReplace");
static_assert(offsetof(BP_LevelManager_C_ExecAreaInfoTweakReplace, Settings) == 0x000000, "Member 'BP_LevelManager_C_ExecAreaInfoTweakReplace::Settings' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecAreaInfoTweakReplace, AreaInfoType) == 0x0000A8, "Member 'BP_LevelManager_C_ExecAreaInfoTweakReplace::AreaInfoType' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecAreaInfoTweakReplace, InfoNames) == 0x0000B0, "Member 'BP_LevelManager_C_ExecAreaInfoTweakReplace::InfoNames' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecAreaInfoTweakReplace, SceneType) == 0x0000C0, "Member 'BP_LevelManager_C_ExecAreaInfoTweakReplace::SceneType' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecAreaInfoTweakReplace, OutSettings) == 0x0000C8, "Member 'BP_LevelManager_C_ExecAreaInfoTweakReplace::OutSettings' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecAreaInfoTweakReplace, _tmpSettings) == 0x000170, "Member 'BP_LevelManager_C_ExecAreaInfoTweakReplace::_tmpSettings' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecAreaInfoTweakReplace, K2Node_SwitchEnum_CmpSuccess) == 0x000218, "Member 'BP_LevelManager_C_ExecAreaInfoTweakReplace::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecAreaInfoTweakReplace, CallFunc_GetEnumeratorName_ReturnValue) == 0x00021C, "Member 'BP_LevelManager_C_ExecAreaInfoTweakReplace::CallFunc_GetEnumeratorName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecAreaInfoTweakReplace, CallFunc_Conv_NameToText_ReturnValue) == 0x000228, "Member 'BP_LevelManager_C_ExecAreaInfoTweakReplace::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecAreaInfoTweakReplace, K2Node_MakeStruct_FormatArgumentData) == 0x000240, "Member 'BP_LevelManager_C_ExecAreaInfoTweakReplace::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecAreaInfoTweakReplace, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000280, "Member 'BP_LevelManager_C_ExecAreaInfoTweakReplace::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecAreaInfoTweakReplace, K2Node_MakeArray_Array) == 0x000288, "Member 'BP_LevelManager_C_ExecAreaInfoTweakReplace::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecAreaInfoTweakReplace, CallFunc_Format_ReturnValue) == 0x000298, "Member 'BP_LevelManager_C_ExecAreaInfoTweakReplace::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ExecAreaInfoTweakReplace, CallFunc_Conv_TextToString_ReturnValue) == 0x0002B0, "Member 'BP_LevelManager_C_ExecAreaInfoTweakReplace::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.RequestSetLevelVisible
// 0x00C8 (0x00C8 - 0x0000)
struct BP_LevelManager_C_RequestSetLevelVisible final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E03[0x7];                                      // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UObject>                 Level;                                             // 0x0008(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_ObjectSoftRefToName_ReturnValue;          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_LoadedLevelInfo                     CallFunc_IsLevelInLoadedLevelInfo_LevelInfoRef;    // 0x0048(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_IsLevelInLoadedLevelInfo_Exist;           // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E04[0x7];                                      // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UObject>>         K2Node_MakeArray_Array;                            // 0x00B8(0x0010)(ReferenceParm, HasGetValueTypeHash)
};
static_assert(alignof(BP_LevelManager_C_RequestSetLevelVisible) == 0x000008, "Wrong alignment on BP_LevelManager_C_RequestSetLevelVisible");
static_assert(sizeof(BP_LevelManager_C_RequestSetLevelVisible) == 0x0000C8, "Wrong size on BP_LevelManager_C_RequestSetLevelVisible");
static_assert(offsetof(BP_LevelManager_C_RequestSetLevelVisible, Visible) == 0x000000, "Member 'BP_LevelManager_C_RequestSetLevelVisible::Visible' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetLevelVisible, Level) == 0x000008, "Member 'BP_LevelManager_C_RequestSetLevelVisible::Level' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetLevelVisible, CallFunc_Concat_StrStr_ReturnValue) == 0x000030, "Member 'BP_LevelManager_C_RequestSetLevelVisible::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetLevelVisible, CallFunc_ObjectSoftRefToName_ReturnValue) == 0x000040, "Member 'BP_LevelManager_C_RequestSetLevelVisible::CallFunc_ObjectSoftRefToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetLevelVisible, CallFunc_IsLevelInLoadedLevelInfo_LevelInfoRef) == 0x000048, "Member 'BP_LevelManager_C_RequestSetLevelVisible::CallFunc_IsLevelInLoadedLevelInfo_LevelInfoRef' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetLevelVisible, CallFunc_IsLevelInLoadedLevelInfo_Exist) == 0x000090, "Member 'BP_LevelManager_C_RequestSetLevelVisible::CallFunc_IsLevelInLoadedLevelInfo_Exist' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetLevelVisible, CallFunc_Conv_NameToString_ReturnValue) == 0x000098, "Member 'BP_LevelManager_C_RequestSetLevelVisible::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetLevelVisible, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0000A8, "Member 'BP_LevelManager_C_RequestSetLevelVisible::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetLevelVisible, K2Node_MakeArray_Array) == 0x0000B8, "Member 'BP_LevelManager_C_RequestSetLevelVisible::K2Node_MakeArray_Array' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.RequestLoadAreaImmediateAsync
// 0x001C (0x001C - 0x0000)
struct BP_LevelManager_C_RequestLoadAreaImmediateAsync final
{
public:
	bool                                          SetVisbleAfterLoad;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E05[0x3];                                      // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         LocationId;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AreaId;                                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         VariationID;                                       // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SkipEnemyLevels;                                   // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          SkipEventLevels;                                   // 0x0011(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E06[0x2];                                      // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetAreaName_ReturnValue;                  // 0x0014(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LevelManager_C_RequestLoadAreaImmediateAsync) == 0x000004, "Wrong alignment on BP_LevelManager_C_RequestLoadAreaImmediateAsync");
static_assert(sizeof(BP_LevelManager_C_RequestLoadAreaImmediateAsync) == 0x00001C, "Wrong size on BP_LevelManager_C_RequestLoadAreaImmediateAsync");
static_assert(offsetof(BP_LevelManager_C_RequestLoadAreaImmediateAsync, SetVisbleAfterLoad) == 0x000000, "Member 'BP_LevelManager_C_RequestLoadAreaImmediateAsync::SetVisbleAfterLoad' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestLoadAreaImmediateAsync, LocationId) == 0x000004, "Member 'BP_LevelManager_C_RequestLoadAreaImmediateAsync::LocationId' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestLoadAreaImmediateAsync, AreaId) == 0x000008, "Member 'BP_LevelManager_C_RequestLoadAreaImmediateAsync::AreaId' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestLoadAreaImmediateAsync, VariationID) == 0x00000C, "Member 'BP_LevelManager_C_RequestLoadAreaImmediateAsync::VariationID' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestLoadAreaImmediateAsync, SkipEnemyLevels) == 0x000010, "Member 'BP_LevelManager_C_RequestLoadAreaImmediateAsync::SkipEnemyLevels' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestLoadAreaImmediateAsync, SkipEventLevels) == 0x000011, "Member 'BP_LevelManager_C_RequestLoadAreaImmediateAsync::SkipEventLevels' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestLoadAreaImmediateAsync, CallFunc_GetAreaName_ReturnValue) == 0x000014, "Member 'BP_LevelManager_C_RequestLoadAreaImmediateAsync::CallFunc_GetAreaName_ReturnValue' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.Request Load Area Async
// 0x0128 (0x0128 - 0x0000)
struct BP_LevelManager_C_Request_Load_Area_Async final
{
public:
	bool                                          SetVisbleAfterLoad;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E07[0x3];                                      // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         LocationId;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AreaId;                                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SkipEnemyLevels;                                   // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          SkipEventLevels;                                   // 0x000D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E08[0x2];                                      // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         LoadLocationID;                                    // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LoadAreaID;                                        // 0x0014(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LoadVariationID;                                   // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_CallAreaSelectVariationFunction_OutLocationID; // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_CallAreaSelectVariationFunction_OutAreaID; // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_CallAreaSelectVariationFunction_OutVariationID; // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CallAreaSelectVariationFunction_ReturnValue; // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E09[0x7];                                      // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0030(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0070(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x00B0(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00F0(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0100(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0118(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LevelManager_C_Request_Load_Area_Async) == 0x000008, "Wrong alignment on BP_LevelManager_C_Request_Load_Area_Async");
static_assert(sizeof(BP_LevelManager_C_Request_Load_Area_Async) == 0x000128, "Wrong size on BP_LevelManager_C_Request_Load_Area_Async");
static_assert(offsetof(BP_LevelManager_C_Request_Load_Area_Async, SetVisbleAfterLoad) == 0x000000, "Member 'BP_LevelManager_C_Request_Load_Area_Async::SetVisbleAfterLoad' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_Request_Load_Area_Async, LocationId) == 0x000004, "Member 'BP_LevelManager_C_Request_Load_Area_Async::LocationId' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_Request_Load_Area_Async, AreaId) == 0x000008, "Member 'BP_LevelManager_C_Request_Load_Area_Async::AreaId' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_Request_Load_Area_Async, SkipEnemyLevels) == 0x00000C, "Member 'BP_LevelManager_C_Request_Load_Area_Async::SkipEnemyLevels' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_Request_Load_Area_Async, SkipEventLevels) == 0x00000D, "Member 'BP_LevelManager_C_Request_Load_Area_Async::SkipEventLevels' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_Request_Load_Area_Async, LoadLocationID) == 0x000010, "Member 'BP_LevelManager_C_Request_Load_Area_Async::LoadLocationID' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_Request_Load_Area_Async, LoadAreaID) == 0x000014, "Member 'BP_LevelManager_C_Request_Load_Area_Async::LoadAreaID' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_Request_Load_Area_Async, LoadVariationID) == 0x000018, "Member 'BP_LevelManager_C_Request_Load_Area_Async::LoadVariationID' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_Request_Load_Area_Async, CallFunc_CallAreaSelectVariationFunction_OutLocationID) == 0x00001C, "Member 'BP_LevelManager_C_Request_Load_Area_Async::CallFunc_CallAreaSelectVariationFunction_OutLocationID' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_Request_Load_Area_Async, CallFunc_CallAreaSelectVariationFunction_OutAreaID) == 0x000020, "Member 'BP_LevelManager_C_Request_Load_Area_Async::CallFunc_CallAreaSelectVariationFunction_OutAreaID' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_Request_Load_Area_Async, CallFunc_CallAreaSelectVariationFunction_OutVariationID) == 0x000024, "Member 'BP_LevelManager_C_Request_Load_Area_Async::CallFunc_CallAreaSelectVariationFunction_OutVariationID' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_Request_Load_Area_Async, CallFunc_CallAreaSelectVariationFunction_ReturnValue) == 0x000028, "Member 'BP_LevelManager_C_Request_Load_Area_Async::CallFunc_CallAreaSelectVariationFunction_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_Request_Load_Area_Async, K2Node_MakeStruct_FormatArgumentData) == 0x000030, "Member 'BP_LevelManager_C_Request_Load_Area_Async::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_Request_Load_Area_Async, K2Node_MakeStruct_FormatArgumentData_1) == 0x000070, "Member 'BP_LevelManager_C_Request_Load_Area_Async::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_Request_Load_Area_Async, K2Node_MakeStruct_FormatArgumentData_2) == 0x0000B0, "Member 'BP_LevelManager_C_Request_Load_Area_Async::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_Request_Load_Area_Async, K2Node_MakeArray_Array) == 0x0000F0, "Member 'BP_LevelManager_C_Request_Load_Area_Async::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_Request_Load_Area_Async, CallFunc_Format_ReturnValue) == 0x000100, "Member 'BP_LevelManager_C_Request_Load_Area_Async::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_Request_Load_Area_Async, CallFunc_Conv_TextToString_ReturnValue) == 0x000118, "Member 'BP_LevelManager_C_Request_Load_Area_Async::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.RequestLoadAreaAsyncByShortAreaName
// 0x0038 (0x0038 - 0x0000)
struct BP_LevelManager_C_RequestLoadAreaAsyncByShortAreaName final
{
public:
	bool                                          SetVisbleAfterLoad;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E0A[0x3];                                      // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   ShortAreaName;                                     // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SkipEnemyLevels;                                   // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E0B[0x3];                                      // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         LoadLocationID;                                    // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LoadAreaID;                                        // 0x0014(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LoadVariationID;                                   // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AreaNameToID_Internal_LocationID;         // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AreaNameToID_Internal_AreaID;             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AreaNameToID_Internal_VariationID;        // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_CallAreaSelectVariationFunction_OutLocationID; // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_CallAreaSelectVariationFunction_OutAreaID; // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_CallAreaSelectVariationFunction_OutVariationID; // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CallAreaSelectVariationFunction_ReturnValue; // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LevelManager_C_RequestLoadAreaAsyncByShortAreaName) == 0x000004, "Wrong alignment on BP_LevelManager_C_RequestLoadAreaAsyncByShortAreaName");
static_assert(sizeof(BP_LevelManager_C_RequestLoadAreaAsyncByShortAreaName) == 0x000038, "Wrong size on BP_LevelManager_C_RequestLoadAreaAsyncByShortAreaName");
static_assert(offsetof(BP_LevelManager_C_RequestLoadAreaAsyncByShortAreaName, SetVisbleAfterLoad) == 0x000000, "Member 'BP_LevelManager_C_RequestLoadAreaAsyncByShortAreaName::SetVisbleAfterLoad' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestLoadAreaAsyncByShortAreaName, ShortAreaName) == 0x000004, "Member 'BP_LevelManager_C_RequestLoadAreaAsyncByShortAreaName::ShortAreaName' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestLoadAreaAsyncByShortAreaName, SkipEnemyLevels) == 0x00000C, "Member 'BP_LevelManager_C_RequestLoadAreaAsyncByShortAreaName::SkipEnemyLevels' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestLoadAreaAsyncByShortAreaName, LoadLocationID) == 0x000010, "Member 'BP_LevelManager_C_RequestLoadAreaAsyncByShortAreaName::LoadLocationID' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestLoadAreaAsyncByShortAreaName, LoadAreaID) == 0x000014, "Member 'BP_LevelManager_C_RequestLoadAreaAsyncByShortAreaName::LoadAreaID' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestLoadAreaAsyncByShortAreaName, LoadVariationID) == 0x000018, "Member 'BP_LevelManager_C_RequestLoadAreaAsyncByShortAreaName::LoadVariationID' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestLoadAreaAsyncByShortAreaName, CallFunc_AreaNameToID_Internal_LocationID) == 0x00001C, "Member 'BP_LevelManager_C_RequestLoadAreaAsyncByShortAreaName::CallFunc_AreaNameToID_Internal_LocationID' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestLoadAreaAsyncByShortAreaName, CallFunc_AreaNameToID_Internal_AreaID) == 0x000020, "Member 'BP_LevelManager_C_RequestLoadAreaAsyncByShortAreaName::CallFunc_AreaNameToID_Internal_AreaID' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestLoadAreaAsyncByShortAreaName, CallFunc_AreaNameToID_Internal_VariationID) == 0x000024, "Member 'BP_LevelManager_C_RequestLoadAreaAsyncByShortAreaName::CallFunc_AreaNameToID_Internal_VariationID' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestLoadAreaAsyncByShortAreaName, CallFunc_CallAreaSelectVariationFunction_OutLocationID) == 0x000028, "Member 'BP_LevelManager_C_RequestLoadAreaAsyncByShortAreaName::CallFunc_CallAreaSelectVariationFunction_OutLocationID' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestLoadAreaAsyncByShortAreaName, CallFunc_CallAreaSelectVariationFunction_OutAreaID) == 0x00002C, "Member 'BP_LevelManager_C_RequestLoadAreaAsyncByShortAreaName::CallFunc_CallAreaSelectVariationFunction_OutAreaID' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestLoadAreaAsyncByShortAreaName, CallFunc_CallAreaSelectVariationFunction_OutVariationID) == 0x000030, "Member 'BP_LevelManager_C_RequestLoadAreaAsyncByShortAreaName::CallFunc_CallAreaSelectVariationFunction_OutVariationID' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestLoadAreaAsyncByShortAreaName, CallFunc_CallAreaSelectVariationFunction_ReturnValue) == 0x000034, "Member 'BP_LevelManager_C_RequestLoadAreaAsyncByShortAreaName::CallFunc_CallAreaSelectVariationFunction_ReturnValue' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.MakeTweakedAreaInfo
// 0x04E8 (0x04E8 - 0x0000)
struct BP_LevelManager_C_MakeTweakedAreaInfo final
{
public:
	struct FS_AreaSettingsInfo                    AreaSettings;                                      // 0x0000(0x00A8)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          SkipEnemyLevels;                                   // 0x00A8(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          SkipEventLevels;                                   // 0x00A9(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E0C[0x6];                                      // 0x00AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_AreaInfo                            AreaInfo;                                          // 0x00B0(0x0068)(Parm, OutParm, HasGetValueTypeHash)
	TArray<class FName>                           LocalArrangePointInfos;                            // 0x0118(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<class FName>                           LocalNPCInfos;                                     // 0x0128(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<class FName>                           LocalEventInfos;                                   // 0x0138(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<class FName>                           LocalEnemyInfos;                                   // 0x0148(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<class FName>                           LocalNObjInfos;                                    // 0x0158(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<class FName>                           LocalBGInfos;                                      // 0x0168(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UObject>>         _lbAndPortalLevels;                                // 0x0178(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FS_AreaSettingsInfo                    _tmpAreaSettings;                                  // 0x0188(0x00A8)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UObject>>         _levels;                                           // 0x0230(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UObject>>         _preloadLevels;                                    // 0x0240(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FS_AreaInfo                            _areaInfo;                                         // 0x0250(0x0068)(Edit, BlueprintVisible, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x02B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue_1;          // 0x02B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x02BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E0D[0x5];                                      // 0x02BB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftObjectPtr<class UObject>>         CallFunc_GetLevelsFromNPCAreaInfo_Levels;          // 0x02C0(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UObject>>         CallFunc_GetLevelsFromEventAreaInfo_Levels;        // 0x02D0(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UObject>>         CallFunc_GetLevelsFromEnemyAreaInfo_Levels;        // 0x02E0(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UObject>>         CallFunc_GetLevelsFromNObjAreaInfo_Levels;         // 0x02F0(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UObject>>         CallFunc_GetLevelsFromBGAreaInfo_PreloadLevels;    // 0x0300(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UObject>>         CallFunc_GetLevelsFromBGAreaInfo_Levels;           // 0x0310(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UObject>>         CallFunc_GetLevelsFromBGAreaInfo_LbaAndPortalLevels; // 0x0320(0x0010)(ReferenceParm, HasGetValueTypeHash)
	struct FS_AreaSettingsInfo                    CallFunc_TweakAreaSettings_OutSettings;            // 0x0330(0x00A8)(HasGetValueTypeHash)
	TArray<bool>                                  CallFunc_TweakAreaSettings_ConditionResults;       // 0x03D8(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UObject>>         CallFunc_GetLevelsFromArrangePointAreaInfo_0_Levels; // 0x03E8(0x0010)(ReferenceParm, HasGetValueTypeHash)
	struct FS_AreaInfo                            K2Node_MakeStruct_S_AreaInfo;                      // 0x03F8(0x0068)(HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue;               // 0x0460(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             K2Node_DynamicCast_AsData_Table;                   // 0x0468(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0470(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E0E[0x7];                                      // 0x0471(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_BattleSimulatorLevelInfo            CallFunc_GetDataTableRowFromName_OutRow;           // 0x0478(0x0068)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x04E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LevelManager_C_MakeTweakedAreaInfo) == 0x000008, "Wrong alignment on BP_LevelManager_C_MakeTweakedAreaInfo");
static_assert(sizeof(BP_LevelManager_C_MakeTweakedAreaInfo) == 0x0004E8, "Wrong size on BP_LevelManager_C_MakeTweakedAreaInfo");
static_assert(offsetof(BP_LevelManager_C_MakeTweakedAreaInfo, AreaSettings) == 0x000000, "Member 'BP_LevelManager_C_MakeTweakedAreaInfo::AreaSettings' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_MakeTweakedAreaInfo, SkipEnemyLevels) == 0x0000A8, "Member 'BP_LevelManager_C_MakeTweakedAreaInfo::SkipEnemyLevels' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_MakeTweakedAreaInfo, SkipEventLevels) == 0x0000A9, "Member 'BP_LevelManager_C_MakeTweakedAreaInfo::SkipEventLevels' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_MakeTweakedAreaInfo, AreaInfo) == 0x0000B0, "Member 'BP_LevelManager_C_MakeTweakedAreaInfo::AreaInfo' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_MakeTweakedAreaInfo, LocalArrangePointInfos) == 0x000118, "Member 'BP_LevelManager_C_MakeTweakedAreaInfo::LocalArrangePointInfos' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_MakeTweakedAreaInfo, LocalNPCInfos) == 0x000128, "Member 'BP_LevelManager_C_MakeTweakedAreaInfo::LocalNPCInfos' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_MakeTweakedAreaInfo, LocalEventInfos) == 0x000138, "Member 'BP_LevelManager_C_MakeTweakedAreaInfo::LocalEventInfos' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_MakeTweakedAreaInfo, LocalEnemyInfos) == 0x000148, "Member 'BP_LevelManager_C_MakeTweakedAreaInfo::LocalEnemyInfos' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_MakeTweakedAreaInfo, LocalNObjInfos) == 0x000158, "Member 'BP_LevelManager_C_MakeTweakedAreaInfo::LocalNObjInfos' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_MakeTweakedAreaInfo, LocalBGInfos) == 0x000168, "Member 'BP_LevelManager_C_MakeTweakedAreaInfo::LocalBGInfos' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_MakeTweakedAreaInfo, _lbAndPortalLevels) == 0x000178, "Member 'BP_LevelManager_C_MakeTweakedAreaInfo::_lbAndPortalLevels' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_MakeTweakedAreaInfo, _tmpAreaSettings) == 0x000188, "Member 'BP_LevelManager_C_MakeTweakedAreaInfo::_tmpAreaSettings' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_MakeTweakedAreaInfo, _levels) == 0x000230, "Member 'BP_LevelManager_C_MakeTweakedAreaInfo::_levels' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_MakeTweakedAreaInfo, _preloadLevels) == 0x000240, "Member 'BP_LevelManager_C_MakeTweakedAreaInfo::_preloadLevels' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_MakeTweakedAreaInfo, _areaInfo) == 0x000250, "Member 'BP_LevelManager_C_MakeTweakedAreaInfo::_areaInfo' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_MakeTweakedAreaInfo, CallFunc_NotEqual_NameName_ReturnValue) == 0x0002B8, "Member 'BP_LevelManager_C_MakeTweakedAreaInfo::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_MakeTweakedAreaInfo, CallFunc_NotEqual_NameName_ReturnValue_1) == 0x0002B9, "Member 'BP_LevelManager_C_MakeTweakedAreaInfo::CallFunc_NotEqual_NameName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_MakeTweakedAreaInfo, CallFunc_BooleanAND_ReturnValue) == 0x0002BA, "Member 'BP_LevelManager_C_MakeTweakedAreaInfo::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_MakeTweakedAreaInfo, CallFunc_GetLevelsFromNPCAreaInfo_Levels) == 0x0002C0, "Member 'BP_LevelManager_C_MakeTweakedAreaInfo::CallFunc_GetLevelsFromNPCAreaInfo_Levels' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_MakeTweakedAreaInfo, CallFunc_GetLevelsFromEventAreaInfo_Levels) == 0x0002D0, "Member 'BP_LevelManager_C_MakeTweakedAreaInfo::CallFunc_GetLevelsFromEventAreaInfo_Levels' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_MakeTweakedAreaInfo, CallFunc_GetLevelsFromEnemyAreaInfo_Levels) == 0x0002E0, "Member 'BP_LevelManager_C_MakeTweakedAreaInfo::CallFunc_GetLevelsFromEnemyAreaInfo_Levels' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_MakeTweakedAreaInfo, CallFunc_GetLevelsFromNObjAreaInfo_Levels) == 0x0002F0, "Member 'BP_LevelManager_C_MakeTweakedAreaInfo::CallFunc_GetLevelsFromNObjAreaInfo_Levels' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_MakeTweakedAreaInfo, CallFunc_GetLevelsFromBGAreaInfo_PreloadLevels) == 0x000300, "Member 'BP_LevelManager_C_MakeTweakedAreaInfo::CallFunc_GetLevelsFromBGAreaInfo_PreloadLevels' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_MakeTweakedAreaInfo, CallFunc_GetLevelsFromBGAreaInfo_Levels) == 0x000310, "Member 'BP_LevelManager_C_MakeTweakedAreaInfo::CallFunc_GetLevelsFromBGAreaInfo_Levels' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_MakeTweakedAreaInfo, CallFunc_GetLevelsFromBGAreaInfo_LbaAndPortalLevels) == 0x000320, "Member 'BP_LevelManager_C_MakeTweakedAreaInfo::CallFunc_GetLevelsFromBGAreaInfo_LbaAndPortalLevels' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_MakeTweakedAreaInfo, CallFunc_TweakAreaSettings_OutSettings) == 0x000330, "Member 'BP_LevelManager_C_MakeTweakedAreaInfo::CallFunc_TweakAreaSettings_OutSettings' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_MakeTweakedAreaInfo, CallFunc_TweakAreaSettings_ConditionResults) == 0x0003D8, "Member 'BP_LevelManager_C_MakeTweakedAreaInfo::CallFunc_TweakAreaSettings_ConditionResults' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_MakeTweakedAreaInfo, CallFunc_GetLevelsFromArrangePointAreaInfo_0_Levels) == 0x0003E8, "Member 'BP_LevelManager_C_MakeTweakedAreaInfo::CallFunc_GetLevelsFromArrangePointAreaInfo_0_Levels' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_MakeTweakedAreaInfo, K2Node_MakeStruct_S_AreaInfo) == 0x0003F8, "Member 'BP_LevelManager_C_MakeTweakedAreaInfo::K2Node_MakeStruct_S_AreaInfo' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_MakeTweakedAreaInfo, CallFunc_LoadSoftObject_ReturnValue) == 0x000460, "Member 'BP_LevelManager_C_MakeTweakedAreaInfo::CallFunc_LoadSoftObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_MakeTweakedAreaInfo, K2Node_DynamicCast_AsData_Table) == 0x000468, "Member 'BP_LevelManager_C_MakeTweakedAreaInfo::K2Node_DynamicCast_AsData_Table' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_MakeTweakedAreaInfo, K2Node_DynamicCast_bSuccess) == 0x000470, "Member 'BP_LevelManager_C_MakeTweakedAreaInfo::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_MakeTweakedAreaInfo, CallFunc_GetDataTableRowFromName_OutRow) == 0x000478, "Member 'BP_LevelManager_C_MakeTweakedAreaInfo::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_MakeTweakedAreaInfo, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0004E0, "Member 'BP_LevelManager_C_MakeTweakedAreaInfo::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.GetLevelsFromArrangePointAreaInfo_0
// 0x0100 (0x0100 - 0x0000)
struct BP_LevelManager_C_GetLevelsFromArrangePointAreaInfo_0 final
{
public:
	TArray<class FName>                           InfoNames;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UObject>>         Levels;                                            // 0x0010(0x0010)(Parm, OutParm, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UObject>>         _levels;                                           // 0x0020(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x003C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E0F[0x4];                                      // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ArrangePointAreaInfo                CallFunc_GetDataTableRowFromName_OutRow;           // 0x0048(0x0010)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E10[0x7];                                      // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0060(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0078(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00B8(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E11[0x7];                                      // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00D0(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x00E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LevelManager_C_GetLevelsFromArrangePointAreaInfo_0) == 0x000008, "Wrong alignment on BP_LevelManager_C_GetLevelsFromArrangePointAreaInfo_0");
static_assert(sizeof(BP_LevelManager_C_GetLevelsFromArrangePointAreaInfo_0) == 0x000100, "Wrong size on BP_LevelManager_C_GetLevelsFromArrangePointAreaInfo_0");
static_assert(offsetof(BP_LevelManager_C_GetLevelsFromArrangePointAreaInfo_0, InfoNames) == 0x000000, "Member 'BP_LevelManager_C_GetLevelsFromArrangePointAreaInfo_0::InfoNames' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetLevelsFromArrangePointAreaInfo_0, Levels) == 0x000010, "Member 'BP_LevelManager_C_GetLevelsFromArrangePointAreaInfo_0::Levels' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetLevelsFromArrangePointAreaInfo_0, _levels) == 0x000020, "Member 'BP_LevelManager_C_GetLevelsFromArrangePointAreaInfo_0::_levels' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetLevelsFromArrangePointAreaInfo_0, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BP_LevelManager_C_GetLevelsFromArrangePointAreaInfo_0::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetLevelsFromArrangePointAreaInfo_0, Temp_int_Array_Index_Variable) == 0x000034, "Member 'BP_LevelManager_C_GetLevelsFromArrangePointAreaInfo_0::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetLevelsFromArrangePointAreaInfo_0, Temp_int_Loop_Counter_Variable) == 0x000038, "Member 'BP_LevelManager_C_GetLevelsFromArrangePointAreaInfo_0::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetLevelsFromArrangePointAreaInfo_0, CallFunc_Array_Get_Item) == 0x00003C, "Member 'BP_LevelManager_C_GetLevelsFromArrangePointAreaInfo_0::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetLevelsFromArrangePointAreaInfo_0, CallFunc_GetDataTableRowFromName_OutRow) == 0x000048, "Member 'BP_LevelManager_C_GetLevelsFromArrangePointAreaInfo_0::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetLevelsFromArrangePointAreaInfo_0, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000058, "Member 'BP_LevelManager_C_GetLevelsFromArrangePointAreaInfo_0::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetLevelsFromArrangePointAreaInfo_0, CallFunc_Conv_NameToText_ReturnValue) == 0x000060, "Member 'BP_LevelManager_C_GetLevelsFromArrangePointAreaInfo_0::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetLevelsFromArrangePointAreaInfo_0, K2Node_MakeStruct_FormatArgumentData) == 0x000078, "Member 'BP_LevelManager_C_GetLevelsFromArrangePointAreaInfo_0::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetLevelsFromArrangePointAreaInfo_0, K2Node_MakeArray_Array) == 0x0000B8, "Member 'BP_LevelManager_C_GetLevelsFromArrangePointAreaInfo_0::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetLevelsFromArrangePointAreaInfo_0, CallFunc_Less_IntInt_ReturnValue) == 0x0000C8, "Member 'BP_LevelManager_C_GetLevelsFromArrangePointAreaInfo_0::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetLevelsFromArrangePointAreaInfo_0, CallFunc_Format_ReturnValue) == 0x0000D0, "Member 'BP_LevelManager_C_GetLevelsFromArrangePointAreaInfo_0::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetLevelsFromArrangePointAreaInfo_0, CallFunc_Conv_TextToString_ReturnValue) == 0x0000E8, "Member 'BP_LevelManager_C_GetLevelsFromArrangePointAreaInfo_0::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetLevelsFromArrangePointAreaInfo_0, CallFunc_Add_IntInt_ReturnValue) == 0x0000F8, "Member 'BP_LevelManager_C_GetLevelsFromArrangePointAreaInfo_0::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.GetAllLevelInLoadedAreaInfo
// 0x0148 (0x0148 - 0x0000)
struct BP_LevelManager_C_GetAllLevelInLoadedAreaInfo final
{
public:
	class FName                                   AreaName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UObject>>         Levels;                                            // 0x0008(0x0010)(Parm, OutParm, HasGetValueTypeHash)
	struct FS_AreaInfo                            AreaInfo;                                          // 0x0018(0x0068)(Parm, OutParm, HasGetValueTypeHash)
	bool                                          Error;                                             // 0x0080(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E12[0x7];                                      // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftObjectPtr<class UObject>>         Tmp;                                               // 0x0088(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UObject>>         TmpLevels;                                         // 0x0098(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<class FName>                           TmpLevelNames;                                     // 0x00A8(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UObject>>         CallFunc_DebugFilterLevels_FilteredLevels;         // 0x00B8(0x0010)(ReferenceParm, HasGetValueTypeHash)
	struct FS_AreaInfo                            CallFunc_Map_Find_Value;                           // 0x00C8(0x0068)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E13[0x7];                                      // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftObjectPtr<class UObject>>         CallFunc_GetSceneSystemLevels_Levels;              // 0x0138(0x0010)(ReferenceParm, HasGetValueTypeHash)
};
static_assert(alignof(BP_LevelManager_C_GetAllLevelInLoadedAreaInfo) == 0x000008, "Wrong alignment on BP_LevelManager_C_GetAllLevelInLoadedAreaInfo");
static_assert(sizeof(BP_LevelManager_C_GetAllLevelInLoadedAreaInfo) == 0x000148, "Wrong size on BP_LevelManager_C_GetAllLevelInLoadedAreaInfo");
static_assert(offsetof(BP_LevelManager_C_GetAllLevelInLoadedAreaInfo, AreaName) == 0x000000, "Member 'BP_LevelManager_C_GetAllLevelInLoadedAreaInfo::AreaName' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetAllLevelInLoadedAreaInfo, Levels) == 0x000008, "Member 'BP_LevelManager_C_GetAllLevelInLoadedAreaInfo::Levels' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetAllLevelInLoadedAreaInfo, AreaInfo) == 0x000018, "Member 'BP_LevelManager_C_GetAllLevelInLoadedAreaInfo::AreaInfo' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetAllLevelInLoadedAreaInfo, Error) == 0x000080, "Member 'BP_LevelManager_C_GetAllLevelInLoadedAreaInfo::Error' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetAllLevelInLoadedAreaInfo, Tmp) == 0x000088, "Member 'BP_LevelManager_C_GetAllLevelInLoadedAreaInfo::Tmp' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetAllLevelInLoadedAreaInfo, TmpLevels) == 0x000098, "Member 'BP_LevelManager_C_GetAllLevelInLoadedAreaInfo::TmpLevels' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetAllLevelInLoadedAreaInfo, TmpLevelNames) == 0x0000A8, "Member 'BP_LevelManager_C_GetAllLevelInLoadedAreaInfo::TmpLevelNames' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetAllLevelInLoadedAreaInfo, CallFunc_DebugFilterLevels_FilteredLevels) == 0x0000B8, "Member 'BP_LevelManager_C_GetAllLevelInLoadedAreaInfo::CallFunc_DebugFilterLevels_FilteredLevels' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetAllLevelInLoadedAreaInfo, CallFunc_Map_Find_Value) == 0x0000C8, "Member 'BP_LevelManager_C_GetAllLevelInLoadedAreaInfo::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetAllLevelInLoadedAreaInfo, CallFunc_Map_Find_ReturnValue) == 0x000130, "Member 'BP_LevelManager_C_GetAllLevelInLoadedAreaInfo::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetAllLevelInLoadedAreaInfo, CallFunc_GetSceneSystemLevels_Levels) == 0x000138, "Member 'BP_LevelManager_C_GetAllLevelInLoadedAreaInfo::CallFunc_GetSceneSystemLevels_Levels' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.DebugPrint_Levels
// 0x0178 (0x0178 - 0x0000)
struct BP_LevelManager_C_DebugPrint_Levels final
{
public:
	TArray<TSoftObjectPtr<class UObject>>         Objs;                                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	class FText                                   Header;                                            // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0028(0x0040)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E14[0x4];                                      // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0070(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E15[0x4];                                      // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0088(0x0018)()
	TSoftObjectPtr<class UObject>                 CallFunc_Array_Get_Item;                           // 0x00A0(0x0028)(HasGetValueTypeHash)
	class FName                                   CallFunc_ObjectSoftRefToName_ReturnValue;          // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x00D0(0x0018)()
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E16[0x4];                                      // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00F0(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0130(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E17[0x7];                                      // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0148(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0160(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LevelManager_C_DebugPrint_Levels) == 0x000008, "Wrong alignment on BP_LevelManager_C_DebugPrint_Levels");
static_assert(sizeof(BP_LevelManager_C_DebugPrint_Levels) == 0x000178, "Wrong size on BP_LevelManager_C_DebugPrint_Levels");
static_assert(offsetof(BP_LevelManager_C_DebugPrint_Levels, Objs) == 0x000000, "Member 'BP_LevelManager_C_DebugPrint_Levels::Objs' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_DebugPrint_Levels, Header) == 0x000010, "Member 'BP_LevelManager_C_DebugPrint_Levels::Header' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_DebugPrint_Levels, K2Node_MakeStruct_FormatArgumentData) == 0x000028, "Member 'BP_LevelManager_C_DebugPrint_Levels::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_DebugPrint_Levels, CallFunc_Array_Length_ReturnValue) == 0x000068, "Member 'BP_LevelManager_C_DebugPrint_Levels::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_DebugPrint_Levels, K2Node_MakeArray_Array) == 0x000070, "Member 'BP_LevelManager_C_DebugPrint_Levels::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_DebugPrint_Levels, Temp_int_Array_Index_Variable) == 0x000080, "Member 'BP_LevelManager_C_DebugPrint_Levels::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_DebugPrint_Levels, CallFunc_Format_ReturnValue) == 0x000088, "Member 'BP_LevelManager_C_DebugPrint_Levels::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_DebugPrint_Levels, CallFunc_Array_Get_Item) == 0x0000A0, "Member 'BP_LevelManager_C_DebugPrint_Levels::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_DebugPrint_Levels, CallFunc_ObjectSoftRefToName_ReturnValue) == 0x0000C8, "Member 'BP_LevelManager_C_DebugPrint_Levels::CallFunc_ObjectSoftRefToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_DebugPrint_Levels, CallFunc_Conv_NameToText_ReturnValue) == 0x0000D0, "Member 'BP_LevelManager_C_DebugPrint_Levels::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_DebugPrint_Levels, Temp_int_Loop_Counter_Variable) == 0x0000E8, "Member 'BP_LevelManager_C_DebugPrint_Levels::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_DebugPrint_Levels, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000F0, "Member 'BP_LevelManager_C_DebugPrint_Levels::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_DebugPrint_Levels, K2Node_MakeArray_Array_1) == 0x000130, "Member 'BP_LevelManager_C_DebugPrint_Levels::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_DebugPrint_Levels, CallFunc_Less_IntInt_ReturnValue) == 0x000140, "Member 'BP_LevelManager_C_DebugPrint_Levels::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_DebugPrint_Levels, CallFunc_Format_ReturnValue_1) == 0x000148, "Member 'BP_LevelManager_C_DebugPrint_Levels::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_DebugPrint_Levels, CallFunc_Conv_TextToString_ReturnValue) == 0x000160, "Member 'BP_LevelManager_C_DebugPrint_Levels::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_DebugPrint_Levels, CallFunc_Add_IntInt_ReturnValue) == 0x000170, "Member 'BP_LevelManager_C_DebugPrint_Levels::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.IsAreaInLoadedAreaInfos
// 0x0150 (0x0150 - 0x0000)
struct BP_LevelManager_C_IsAreaInLoadedAreaInfos final
{
public:
	class FName                                   AreaName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsLoaded;                                          // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsExist;                                           // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E18[0x6];                                      // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_AreaInfo                            AreaInfo;                                          // 0x0010(0x0068)(Parm, OutParm, HasGetValueTypeHash)
	struct FS_AreaInfo                            _tmpSettings;                                      // 0x0078(0x0068)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FS_AreaInfo                            CallFunc_Map_Find_Value;                           // 0x00E0(0x0068)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0149(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LevelManager_C_IsAreaInLoadedAreaInfos) == 0x000008, "Wrong alignment on BP_LevelManager_C_IsAreaInLoadedAreaInfos");
static_assert(sizeof(BP_LevelManager_C_IsAreaInLoadedAreaInfos) == 0x000150, "Wrong size on BP_LevelManager_C_IsAreaInLoadedAreaInfos");
static_assert(offsetof(BP_LevelManager_C_IsAreaInLoadedAreaInfos, AreaName) == 0x000000, "Member 'BP_LevelManager_C_IsAreaInLoadedAreaInfos::AreaName' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaInLoadedAreaInfos, IsLoaded) == 0x000008, "Member 'BP_LevelManager_C_IsAreaInLoadedAreaInfos::IsLoaded' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaInLoadedAreaInfos, IsExist) == 0x000009, "Member 'BP_LevelManager_C_IsAreaInLoadedAreaInfos::IsExist' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaInLoadedAreaInfos, AreaInfo) == 0x000010, "Member 'BP_LevelManager_C_IsAreaInLoadedAreaInfos::AreaInfo' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaInLoadedAreaInfos, _tmpSettings) == 0x000078, "Member 'BP_LevelManager_C_IsAreaInLoadedAreaInfos::_tmpSettings' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaInLoadedAreaInfos, CallFunc_Map_Find_Value) == 0x0000E0, "Member 'BP_LevelManager_C_IsAreaInLoadedAreaInfos::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaInLoadedAreaInfos, CallFunc_Map_Find_ReturnValue) == 0x000148, "Member 'BP_LevelManager_C_IsAreaInLoadedAreaInfos::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaInLoadedAreaInfos, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000149, "Member 'BP_LevelManager_C_IsAreaInLoadedAreaInfos::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.IsExistAreaInfo
// 0x00C0 (0x00C0 - 0x0000)
struct BP_LevelManager_C_IsExistAreaInfo final
{
public:
	class FName                                   AreaName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Found;                                             // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E19[0x7];                                      // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_AreaSettingsInfo                    CallFunc_GetDataTableRowFromName_OutRow;           // 0x0010(0x00A8)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LevelManager_C_IsExistAreaInfo) == 0x000008, "Wrong alignment on BP_LevelManager_C_IsExistAreaInfo");
static_assert(sizeof(BP_LevelManager_C_IsExistAreaInfo) == 0x0000C0, "Wrong size on BP_LevelManager_C_IsExistAreaInfo");
static_assert(offsetof(BP_LevelManager_C_IsExistAreaInfo, AreaName) == 0x000000, "Member 'BP_LevelManager_C_IsExistAreaInfo::AreaName' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsExistAreaInfo, Found) == 0x000008, "Member 'BP_LevelManager_C_IsExistAreaInfo::Found' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsExistAreaInfo, CallFunc_GetDataTableRowFromName_OutRow) == 0x000010, "Member 'BP_LevelManager_C_IsExistAreaInfo::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsExistAreaInfo, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0000B8, "Member 'BP_LevelManager_C_IsExistAreaInfo::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.LoadEventTriggerBoxAsset
// 0x0118 (0x0118 - 0x0000)
struct BP_LevelManager_C_LoadEventTriggerBoxAsset final
{
public:
	class FName                                   AreaName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UObject>>         NewAreaLevels;                                     // 0x0008(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1A[0x4];                                      // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftObjectPtr<class UObject>>         CallFunc_GetAllLevelInArea_Levels;                 // 0x0020(0x0010)(ReferenceParm, HasGetValueTypeHash)
	struct FS_AreaInfo                            CallFunc_GetAllLevelInArea_AreaInfo;               // 0x0030(0x0068)(HasGetValueTypeHash)
	bool                                          CallFunc_GetAllLevelInArea_Error;                  // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1B[0x3];                                      // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_LoadedLevelInfo                     CallFunc_Array_Get_Item;                           // 0x00A8(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1C[0x3];                                      // 0x00F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_ObjectSoftRefToName_ReturnValue;          // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1D[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelStreaming*                        CallFunc_GetStreamingLevel_ReturnValue;            // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LevelManager_C_LoadEventTriggerBoxAsset) == 0x000008, "Wrong alignment on BP_LevelManager_C_LoadEventTriggerBoxAsset");
static_assert(sizeof(BP_LevelManager_C_LoadEventTriggerBoxAsset) == 0x000118, "Wrong size on BP_LevelManager_C_LoadEventTriggerBoxAsset");
static_assert(offsetof(BP_LevelManager_C_LoadEventTriggerBoxAsset, AreaName) == 0x000000, "Member 'BP_LevelManager_C_LoadEventTriggerBoxAsset::AreaName' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_LoadEventTriggerBoxAsset, NewAreaLevels) == 0x000008, "Member 'BP_LevelManager_C_LoadEventTriggerBoxAsset::NewAreaLevels' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_LoadEventTriggerBoxAsset, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BP_LevelManager_C_LoadEventTriggerBoxAsset::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_LoadEventTriggerBoxAsset, CallFunc_GetAllLevelInArea_Levels) == 0x000020, "Member 'BP_LevelManager_C_LoadEventTriggerBoxAsset::CallFunc_GetAllLevelInArea_Levels' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_LoadEventTriggerBoxAsset, CallFunc_GetAllLevelInArea_AreaInfo) == 0x000030, "Member 'BP_LevelManager_C_LoadEventTriggerBoxAsset::CallFunc_GetAllLevelInArea_AreaInfo' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_LoadEventTriggerBoxAsset, CallFunc_GetAllLevelInArea_Error) == 0x000098, "Member 'BP_LevelManager_C_LoadEventTriggerBoxAsset::CallFunc_GetAllLevelInArea_Error' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_LoadEventTriggerBoxAsset, Temp_int_Loop_Counter_Variable) == 0x00009C, "Member 'BP_LevelManager_C_LoadEventTriggerBoxAsset::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_LoadEventTriggerBoxAsset, CallFunc_Add_IntInt_ReturnValue) == 0x0000A0, "Member 'BP_LevelManager_C_LoadEventTriggerBoxAsset::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_LoadEventTriggerBoxAsset, CallFunc_Array_Length_ReturnValue) == 0x0000A4, "Member 'BP_LevelManager_C_LoadEventTriggerBoxAsset::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_LoadEventTriggerBoxAsset, CallFunc_Array_Get_Item) == 0x0000A8, "Member 'BP_LevelManager_C_LoadEventTriggerBoxAsset::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_LoadEventTriggerBoxAsset, CallFunc_Less_IntInt_ReturnValue) == 0x0000F0, "Member 'BP_LevelManager_C_LoadEventTriggerBoxAsset::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_LoadEventTriggerBoxAsset, CallFunc_Array_Find_ReturnValue) == 0x0000F4, "Member 'BP_LevelManager_C_LoadEventTriggerBoxAsset::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_LoadEventTriggerBoxAsset, CallFunc_ObjectSoftRefToName_ReturnValue) == 0x0000F8, "Member 'BP_LevelManager_C_LoadEventTriggerBoxAsset::CallFunc_ObjectSoftRefToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_LoadEventTriggerBoxAsset, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000100, "Member 'BP_LevelManager_C_LoadEventTriggerBoxAsset::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_LoadEventTriggerBoxAsset, CallFunc_GetStreamingLevel_ReturnValue) == 0x000108, "Member 'BP_LevelManager_C_LoadEventTriggerBoxAsset::CallFunc_GetStreamingLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_LoadEventTriggerBoxAsset, CallFunc_IsValid_ReturnValue) == 0x000110, "Member 'BP_LevelManager_C_LoadEventTriggerBoxAsset::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.SetCurrentSceneType
// 0x01A0 (0x01A0 - 0x0000)
struct BP_LevelManager_C_SetCurrentSceneType final
{
public:
	E_SceneType                                   SceneType;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SceneType                                   OldSceneType;                                      // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SceneType                                   LocalSceneType;                                    // 0x0002(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SceneType                                   Old;                                               // 0x0003(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue_1;          // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1E[0x7];                                      // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUDMainGame_C*                         CallFunc_GetHUDMainGame_HUDMainGame;               // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ChangeTown_ReturnValue;                   // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1F[0x5];                                      // 0x001B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APsychicObjectManager_C*                CallFunc_GetPsychicObjectManager_PsyObjManager;    // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_SceneType                                   CallFunc_GetCurrentSceneType_SceneType;            // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E20[0x5];                                      // 0x0033(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0038(0x0018)()
	struct FS_AreaInfo                            CallFunc_Map_Find_Value;                           // 0x0050(0x0068)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E21[0x7];                                      // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x00C0(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0100(0x0010)(ReferenceParm, HasGetValueTypeHash)
	struct FS_AreaInfo                            K2Node_SetFieldsInStruct_StructOut;                // 0x0110(0x0068)(HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0178(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0190(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LevelManager_C_SetCurrentSceneType) == 0x000008, "Wrong alignment on BP_LevelManager_C_SetCurrentSceneType");
static_assert(sizeof(BP_LevelManager_C_SetCurrentSceneType) == 0x0001A0, "Wrong size on BP_LevelManager_C_SetCurrentSceneType");
static_assert(offsetof(BP_LevelManager_C_SetCurrentSceneType, SceneType) == 0x000000, "Member 'BP_LevelManager_C_SetCurrentSceneType::SceneType' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_SetCurrentSceneType, OldSceneType) == 0x000001, "Member 'BP_LevelManager_C_SetCurrentSceneType::OldSceneType' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_SetCurrentSceneType, LocalSceneType) == 0x000002, "Member 'BP_LevelManager_C_SetCurrentSceneType::LocalSceneType' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_SetCurrentSceneType, Old) == 0x000003, "Member 'BP_LevelManager_C_SetCurrentSceneType::Old' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_SetCurrentSceneType, CallFunc_NotEqual_NameName_ReturnValue) == 0x000004, "Member 'BP_LevelManager_C_SetCurrentSceneType::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_SetCurrentSceneType, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000005, "Member 'BP_LevelManager_C_SetCurrentSceneType::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_SetCurrentSceneType, CallFunc_NotEqual_NameName_ReturnValue_1) == 0x000006, "Member 'BP_LevelManager_C_SetCurrentSceneType::CallFunc_NotEqual_NameName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_SetCurrentSceneType, CallFunc_BooleanAND_ReturnValue) == 0x000007, "Member 'BP_LevelManager_C_SetCurrentSceneType::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_SetCurrentSceneType, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000008, "Member 'BP_LevelManager_C_SetCurrentSceneType::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_SetCurrentSceneType, CallFunc_GetHUDMainGame_HUDMainGame) == 0x000010, "Member 'BP_LevelManager_C_SetCurrentSceneType::CallFunc_GetHUDMainGame_HUDMainGame' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_SetCurrentSceneType, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_LevelManager_C_SetCurrentSceneType::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_SetCurrentSceneType, CallFunc_IsValid_ReturnValue_1) == 0x000019, "Member 'BP_LevelManager_C_SetCurrentSceneType::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_SetCurrentSceneType, CallFunc_ChangeTown_ReturnValue) == 0x00001A, "Member 'BP_LevelManager_C_SetCurrentSceneType::CallFunc_ChangeTown_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_SetCurrentSceneType, CallFunc_GetPsychicObjectManager_PsyObjManager) == 0x000020, "Member 'BP_LevelManager_C_SetCurrentSceneType::CallFunc_GetPsychicObjectManager_PsyObjManager' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_SetCurrentSceneType, CallFunc_GetPlayerManager_PlayerManager) == 0x000028, "Member 'BP_LevelManager_C_SetCurrentSceneType::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_SetCurrentSceneType, CallFunc_IsValid_ReturnValue_2) == 0x000030, "Member 'BP_LevelManager_C_SetCurrentSceneType::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_SetCurrentSceneType, CallFunc_IsValid_ReturnValue_3) == 0x000031, "Member 'BP_LevelManager_C_SetCurrentSceneType::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_SetCurrentSceneType, CallFunc_GetCurrentSceneType_SceneType) == 0x000032, "Member 'BP_LevelManager_C_SetCurrentSceneType::CallFunc_GetCurrentSceneType_SceneType' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_SetCurrentSceneType, CallFunc_Conv_NameToText_ReturnValue) == 0x000038, "Member 'BP_LevelManager_C_SetCurrentSceneType::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_SetCurrentSceneType, CallFunc_Map_Find_Value) == 0x000050, "Member 'BP_LevelManager_C_SetCurrentSceneType::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_SetCurrentSceneType, CallFunc_Map_Find_ReturnValue) == 0x0000B8, "Member 'BP_LevelManager_C_SetCurrentSceneType::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_SetCurrentSceneType, K2Node_MakeStruct_FormatArgumentData) == 0x0000C0, "Member 'BP_LevelManager_C_SetCurrentSceneType::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_SetCurrentSceneType, K2Node_MakeArray_Array) == 0x000100, "Member 'BP_LevelManager_C_SetCurrentSceneType::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_SetCurrentSceneType, K2Node_SetFieldsInStruct_StructOut) == 0x000110, "Member 'BP_LevelManager_C_SetCurrentSceneType::K2Node_SetFieldsInStruct_StructOut' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_SetCurrentSceneType, CallFunc_Format_ReturnValue) == 0x000178, "Member 'BP_LevelManager_C_SetCurrentSceneType::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_SetCurrentSceneType, CallFunc_Conv_TextToString_ReturnValue) == 0x000190, "Member 'BP_LevelManager_C_SetCurrentSceneType::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.GetCurrentSceneType
// 0x0108 (0x0108 - 0x0000)
struct BP_LevelManager_C_GetCurrentSceneType final
{
public:
	E_SceneType                                   SceneType;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue_1;          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E22[0x4];                                      // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0008(0x0018)()
	struct FS_AreaInfo                            CallFunc_Map_Find_Value;                           // 0x0020(0x0068)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E23[0x7];                                      // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0090(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00D0(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00E0(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x00F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LevelManager_C_GetCurrentSceneType) == 0x000008, "Wrong alignment on BP_LevelManager_C_GetCurrentSceneType");
static_assert(sizeof(BP_LevelManager_C_GetCurrentSceneType) == 0x000108, "Wrong size on BP_LevelManager_C_GetCurrentSceneType");
static_assert(offsetof(BP_LevelManager_C_GetCurrentSceneType, SceneType) == 0x000000, "Member 'BP_LevelManager_C_GetCurrentSceneType::SceneType' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetCurrentSceneType, CallFunc_NotEqual_NameName_ReturnValue) == 0x000001, "Member 'BP_LevelManager_C_GetCurrentSceneType::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetCurrentSceneType, CallFunc_NotEqual_NameName_ReturnValue_1) == 0x000002, "Member 'BP_LevelManager_C_GetCurrentSceneType::CallFunc_NotEqual_NameName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetCurrentSceneType, CallFunc_BooleanAND_ReturnValue) == 0x000003, "Member 'BP_LevelManager_C_GetCurrentSceneType::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetCurrentSceneType, CallFunc_Conv_NameToText_ReturnValue) == 0x000008, "Member 'BP_LevelManager_C_GetCurrentSceneType::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetCurrentSceneType, CallFunc_Map_Find_Value) == 0x000020, "Member 'BP_LevelManager_C_GetCurrentSceneType::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetCurrentSceneType, CallFunc_Map_Find_ReturnValue) == 0x000088, "Member 'BP_LevelManager_C_GetCurrentSceneType::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetCurrentSceneType, K2Node_MakeStruct_FormatArgumentData) == 0x000090, "Member 'BP_LevelManager_C_GetCurrentSceneType::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetCurrentSceneType, K2Node_MakeArray_Array) == 0x0000D0, "Member 'BP_LevelManager_C_GetCurrentSceneType::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetCurrentSceneType, CallFunc_Format_ReturnValue) == 0x0000E0, "Member 'BP_LevelManager_C_GetCurrentSceneType::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetCurrentSceneType, CallFunc_Conv_TextToString_ReturnValue) == 0x0000F8, "Member 'BP_LevelManager_C_GetCurrentSceneType::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.ResetCheckVisibleLevelAll
// 0x0018 (0x0018 - 0x0000)
struct BP_LevelManager_C_ResetCheckVisibleLevelAll final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E24[0x3];                                      // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LevelManager_C_ResetCheckVisibleLevelAll) == 0x000004, "Wrong alignment on BP_LevelManager_C_ResetCheckVisibleLevelAll");
static_assert(sizeof(BP_LevelManager_C_ResetCheckVisibleLevelAll) == 0x000018, "Wrong size on BP_LevelManager_C_ResetCheckVisibleLevelAll");
static_assert(offsetof(BP_LevelManager_C_ResetCheckVisibleLevelAll, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_LevelManager_C_ResetCheckVisibleLevelAll::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ResetCheckVisibleLevelAll, Temp_int_Loop_Num_Variable) == 0x000004, "Member 'BP_LevelManager_C_ResetCheckVisibleLevelAll::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ResetCheckVisibleLevelAll, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_LevelManager_C_ResetCheckVisibleLevelAll::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ResetCheckVisibleLevelAll, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'BP_LevelManager_C_ResetCheckVisibleLevelAll::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ResetCheckVisibleLevelAll, CallFunc_Less_IntInt_ReturnValue) == 0x000010, "Member 'BP_LevelManager_C_ResetCheckVisibleLevelAll::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_ResetCheckVisibleLevelAll, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_LevelManager_C_ResetCheckVisibleLevelAll::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.SetLevelInfoCheckVisible
// 0x0048 (0x0048 - 0x0000)
struct BP_LevelManager_C_SetLevelInfoCheckVisible final
{
public:
	TSoftObjectPtr<class UObject>                 Level;                                             // 0x0000(0x0028)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	bool                                          CheckVisible;                                      // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E25[0x3];                                      // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E26[0x3];                                      // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_SoftObjectReference_ReturnValue; // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LevelManager_C_SetLevelInfoCheckVisible) == 0x000008, "Wrong alignment on BP_LevelManager_C_SetLevelInfoCheckVisible");
static_assert(sizeof(BP_LevelManager_C_SetLevelInfoCheckVisible) == 0x000048, "Wrong size on BP_LevelManager_C_SetLevelInfoCheckVisible");
static_assert(offsetof(BP_LevelManager_C_SetLevelInfoCheckVisible, Level) == 0x000000, "Member 'BP_LevelManager_C_SetLevelInfoCheckVisible::Level' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_SetLevelInfoCheckVisible, CheckVisible) == 0x000028, "Member 'BP_LevelManager_C_SetLevelInfoCheckVisible::CheckVisible' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_SetLevelInfoCheckVisible, Temp_int_Array_Index_Variable) == 0x00002C, "Member 'BP_LevelManager_C_SetLevelInfoCheckVisible::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_SetLevelInfoCheckVisible, Temp_int_Loop_Num_Variable) == 0x000030, "Member 'BP_LevelManager_C_SetLevelInfoCheckVisible::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_SetLevelInfoCheckVisible, Temp_int_Loop_Counter_Variable) == 0x000034, "Member 'BP_LevelManager_C_SetLevelInfoCheckVisible::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_SetLevelInfoCheckVisible, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'BP_LevelManager_C_SetLevelInfoCheckVisible::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_SetLevelInfoCheckVisible, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'BP_LevelManager_C_SetLevelInfoCheckVisible::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_SetLevelInfoCheckVisible, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'BP_LevelManager_C_SetLevelInfoCheckVisible::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_SetLevelInfoCheckVisible, CallFunc_EqualEqual_SoftObjectReference_ReturnValue) == 0x000044, "Member 'BP_LevelManager_C_SetLevelInfoCheckVisible::CallFunc_EqualEqual_SoftObjectReference_ReturnValue' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.IsWaitingAnySetVisibility
// 0x002C (0x002C - 0x0000)
struct BP_LevelManager_C_IsWaitingAnySetVisibility final
{
public:
	bool                                          Waiting;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E27[0x3];                                      // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E28[0x3];                                      // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LevelManager_C_IsWaitingAnySetVisibility) == 0x000004, "Wrong alignment on BP_LevelManager_C_IsWaitingAnySetVisibility");
static_assert(sizeof(BP_LevelManager_C_IsWaitingAnySetVisibility) == 0x00002C, "Wrong size on BP_LevelManager_C_IsWaitingAnySetVisibility");
static_assert(offsetof(BP_LevelManager_C_IsWaitingAnySetVisibility, Waiting) == 0x000000, "Member 'BP_LevelManager_C_IsWaitingAnySetVisibility::Waiting' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsWaitingAnySetVisibility, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_LevelManager_C_IsWaitingAnySetVisibility::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsWaitingAnySetVisibility, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_LevelManager_C_IsWaitingAnySetVisibility::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsWaitingAnySetVisibility, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_LevelManager_C_IsWaitingAnySetVisibility::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsWaitingAnySetVisibility, Temp_int_Array_Index_Variable_1) == 0x000010, "Member 'BP_LevelManager_C_IsWaitingAnySetVisibility::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsWaitingAnySetVisibility, Temp_int_Loop_Counter_Variable_1) == 0x000014, "Member 'BP_LevelManager_C_IsWaitingAnySetVisibility::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsWaitingAnySetVisibility, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BP_LevelManager_C_IsWaitingAnySetVisibility::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsWaitingAnySetVisibility, CallFunc_Less_IntInt_ReturnValue) == 0x00001C, "Member 'BP_LevelManager_C_IsWaitingAnySetVisibility::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsWaitingAnySetVisibility, CallFunc_Add_IntInt_ReturnValue_1) == 0x000020, "Member 'BP_LevelManager_C_IsWaitingAnySetVisibility::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsWaitingAnySetVisibility, CallFunc_Array_Length_ReturnValue_1) == 0x000024, "Member 'BP_LevelManager_C_IsWaitingAnySetVisibility::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsWaitingAnySetVisibility, CallFunc_Less_IntInt_ReturnValue_1) == 0x000028, "Member 'BP_LevelManager_C_IsWaitingAnySetVisibility::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsWaitingAnySetVisibility, K2Node_SwitchEnum_CmpSuccess) == 0x000029, "Member 'BP_LevelManager_C_IsWaitingAnySetVisibility::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.IsWaitingLoadOrVisible
// 0x0004 (0x0004 - 0x0000)
struct BP_LevelManager_C_IsWaitingLoadOrVisible final
{
public:
	bool                                          IsWaiting;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckExistQueueLoadCommand_Exist;         // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsWaitingAnySetVisibility_Waiting;        // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLoadingAnyLevels_IsLoading;             // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LevelManager_C_IsWaitingLoadOrVisible) == 0x000001, "Wrong alignment on BP_LevelManager_C_IsWaitingLoadOrVisible");
static_assert(sizeof(BP_LevelManager_C_IsWaitingLoadOrVisible) == 0x000004, "Wrong size on BP_LevelManager_C_IsWaitingLoadOrVisible");
static_assert(offsetof(BP_LevelManager_C_IsWaitingLoadOrVisible, IsWaiting) == 0x000000, "Member 'BP_LevelManager_C_IsWaitingLoadOrVisible::IsWaiting' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsWaitingLoadOrVisible, CallFunc_CheckExistQueueLoadCommand_Exist) == 0x000001, "Member 'BP_LevelManager_C_IsWaitingLoadOrVisible::CallFunc_CheckExistQueueLoadCommand_Exist' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsWaitingLoadOrVisible, CallFunc_IsWaitingAnySetVisibility_Waiting) == 0x000002, "Member 'BP_LevelManager_C_IsWaitingLoadOrVisible::CallFunc_IsWaitingAnySetVisibility_Waiting' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsWaitingLoadOrVisible, CallFunc_IsLoadingAnyLevels_IsLoading) == 0x000003, "Member 'BP_LevelManager_C_IsWaitingLoadOrVisible::CallFunc_IsLoadingAnyLevels_IsLoading' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.GetLocationNameFromAreaName
// 0x0038 (0x0038 - 0x0000)
struct BP_LevelManager_C_GetLocationNameFromAreaName final
{
public:
	class FName                                   AreaName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 LocationString;                                    // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Left_ReturnValue;                         // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LevelManager_C_GetLocationNameFromAreaName) == 0x000008, "Wrong alignment on BP_LevelManager_C_GetLocationNameFromAreaName");
static_assert(sizeof(BP_LevelManager_C_GetLocationNameFromAreaName) == 0x000038, "Wrong size on BP_LevelManager_C_GetLocationNameFromAreaName");
static_assert(offsetof(BP_LevelManager_C_GetLocationNameFromAreaName, AreaName) == 0x000000, "Member 'BP_LevelManager_C_GetLocationNameFromAreaName::AreaName' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetLocationNameFromAreaName, LocationString) == 0x000008, "Member 'BP_LevelManager_C_GetLocationNameFromAreaName::LocationString' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetLocationNameFromAreaName, CallFunc_Conv_NameToString_ReturnValue) == 0x000018, "Member 'BP_LevelManager_C_GetLocationNameFromAreaName::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetLocationNameFromAreaName, CallFunc_Left_ReturnValue) == 0x000028, "Member 'BP_LevelManager_C_GetLocationNameFromAreaName::CallFunc_Left_ReturnValue' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C._UnloadAllAreas
// 0x0030 (0x0030 - 0x0000)
struct BP_LevelManager_C__UnloadAllAreas final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E29[0x4];                                      // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_Map_Keys_Keys;                            // 0x0008(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddLevelCommand_CommandNum;               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddLevelCommand_CommandNum_1;             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E2A[0x3];                                      // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LevelManager_C__UnloadAllAreas) == 0x000008, "Wrong alignment on BP_LevelManager_C__UnloadAllAreas");
static_assert(sizeof(BP_LevelManager_C__UnloadAllAreas) == 0x000030, "Wrong size on BP_LevelManager_C__UnloadAllAreas");
static_assert(offsetof(BP_LevelManager_C__UnloadAllAreas, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_LevelManager_C__UnloadAllAreas::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C__UnloadAllAreas, CallFunc_Map_Keys_Keys) == 0x000008, "Member 'BP_LevelManager_C__UnloadAllAreas::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C__UnloadAllAreas, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BP_LevelManager_C__UnloadAllAreas::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C__UnloadAllAreas, CallFunc_AddLevelCommand_CommandNum) == 0x00001C, "Member 'BP_LevelManager_C__UnloadAllAreas::CallFunc_AddLevelCommand_CommandNum' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C__UnloadAllAreas, CallFunc_AddLevelCommand_CommandNum_1) == 0x000020, "Member 'BP_LevelManager_C__UnloadAllAreas::CallFunc_AddLevelCommand_CommandNum_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C__UnloadAllAreas, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'BP_LevelManager_C__UnloadAllAreas::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C__UnloadAllAreas, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'BP_LevelManager_C__UnloadAllAreas::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C__UnloadAllAreas, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'BP_LevelManager_C__UnloadAllAreas::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.RequestUnloadAllLevel
// 0x0018 (0x0018 - 0x0000)
struct BP_LevelManager_C_RequestUnloadAllLevel final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E2B[0x3];                                      // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_AddLevelCommand_CommandNum;               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LevelManager_C_RequestUnloadAllLevel) == 0x000004, "Wrong alignment on BP_LevelManager_C_RequestUnloadAllLevel");
static_assert(sizeof(BP_LevelManager_C_RequestUnloadAllLevel) == 0x000018, "Wrong size on BP_LevelManager_C_RequestUnloadAllLevel");
static_assert(offsetof(BP_LevelManager_C_RequestUnloadAllLevel, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_LevelManager_C_RequestUnloadAllLevel::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestUnloadAllLevel, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_LevelManager_C_RequestUnloadAllLevel::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestUnloadAllLevel, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_LevelManager_C_RequestUnloadAllLevel::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestUnloadAllLevel, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'BP_LevelManager_C_RequestUnloadAllLevel::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestUnloadAllLevel, CallFunc_Less_IntInt_ReturnValue) == 0x000010, "Member 'BP_LevelManager_C_RequestUnloadAllLevel::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestUnloadAllLevel, CallFunc_AddLevelCommand_CommandNum) == 0x000014, "Member 'BP_LevelManager_C_RequestUnloadAllLevel::CallFunc_AddLevelCommand_CommandNum' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.RequestWaitAnyLoadEnd
// 0x0004 (0x0004 - 0x0000)
struct BP_LevelManager_C_RequestWaitAnyLoadEnd final
{
public:
	int32                                         CallFunc_AddLevelCommand_CommandNum;               // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LevelManager_C_RequestWaitAnyLoadEnd) == 0x000004, "Wrong alignment on BP_LevelManager_C_RequestWaitAnyLoadEnd");
static_assert(sizeof(BP_LevelManager_C_RequestWaitAnyLoadEnd) == 0x000004, "Wrong size on BP_LevelManager_C_RequestWaitAnyLoadEnd");
static_assert(offsetof(BP_LevelManager_C_RequestWaitAnyLoadEnd, CallFunc_AddLevelCommand_CommandNum) == 0x000000, "Member 'BP_LevelManager_C_RequestWaitAnyLoadEnd::CallFunc_AddLevelCommand_CommandNum' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.UnloadAllLevels
// 0x001C (0x001C - 0x0000)
struct BP_LevelManager_C_UnloadAllLevels final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddLevelCommand_CommandNum;               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E2C[0x3];                                      // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_AddLevelCommand_CommandNum_1;             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LevelManager_C_UnloadAllLevels) == 0x000004, "Wrong alignment on BP_LevelManager_C_UnloadAllLevels");
static_assert(sizeof(BP_LevelManager_C_UnloadAllLevels) == 0x00001C, "Wrong size on BP_LevelManager_C_UnloadAllLevels");
static_assert(offsetof(BP_LevelManager_C_UnloadAllLevels, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_LevelManager_C_UnloadAllLevels::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_UnloadAllLevels, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_LevelManager_C_UnloadAllLevels::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_UnloadAllLevels, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_LevelManager_C_UnloadAllLevels::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_UnloadAllLevels, CallFunc_AddLevelCommand_CommandNum) == 0x00000C, "Member 'BP_LevelManager_C_UnloadAllLevels::CallFunc_AddLevelCommand_CommandNum' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_UnloadAllLevels, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'BP_LevelManager_C_UnloadAllLevels::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_UnloadAllLevels, CallFunc_Less_IntInt_ReturnValue) == 0x000014, "Member 'BP_LevelManager_C_UnloadAllLevels::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_UnloadAllLevels, CallFunc_AddLevelCommand_CommandNum_1) == 0x000018, "Member 'BP_LevelManager_C_UnloadAllLevels::CallFunc_AddLevelCommand_CommandNum_1' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.UnloadAreaAllLevels
// 0x0068 (0x0068 - 0x0000)
struct BP_LevelManager_C_UnloadAreaAllLevels final
{
public:
	class FName                                   AreaName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UObject>>         UnloadLevels;                                      // 0x0008(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddLevelCommand_CommandNum;               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddLevelCommand_CommandNum_1;             // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E2D[0x3];                                      // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E2E[0x3];                                      // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E2F[0x2];                                      // 0x005A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E30[0x3];                                      // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LevelManager_C_UnloadAreaAllLevels) == 0x000008, "Wrong alignment on BP_LevelManager_C_UnloadAreaAllLevels");
static_assert(sizeof(BP_LevelManager_C_UnloadAreaAllLevels) == 0x000068, "Wrong size on BP_LevelManager_C_UnloadAreaAllLevels");
static_assert(offsetof(BP_LevelManager_C_UnloadAreaAllLevels, AreaName) == 0x000000, "Member 'BP_LevelManager_C_UnloadAreaAllLevels::AreaName' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_UnloadAreaAllLevels, UnloadLevels) == 0x000008, "Member 'BP_LevelManager_C_UnloadAreaAllLevels::UnloadLevels' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_UnloadAreaAllLevels, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BP_LevelManager_C_UnloadAreaAllLevels::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_UnloadAreaAllLevels, Temp_int_Array_Index_Variable_1) == 0x00001C, "Member 'BP_LevelManager_C_UnloadAreaAllLevels::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_UnloadAreaAllLevels, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'BP_LevelManager_C_UnloadAreaAllLevels::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_UnloadAreaAllLevels, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'BP_LevelManager_C_UnloadAreaAllLevels::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_UnloadAreaAllLevels, Temp_int_Array_Index_Variable_2) == 0x000028, "Member 'BP_LevelManager_C_UnloadAreaAllLevels::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_UnloadAreaAllLevels, CallFunc_Array_Length_ReturnValue) == 0x00002C, "Member 'BP_LevelManager_C_UnloadAreaAllLevels::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_UnloadAreaAllLevels, CallFunc_AddLevelCommand_CommandNum) == 0x000030, "Member 'BP_LevelManager_C_UnloadAreaAllLevels::CallFunc_AddLevelCommand_CommandNum' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_UnloadAreaAllLevels, Temp_int_Loop_Counter_Variable_1) == 0x000034, "Member 'BP_LevelManager_C_UnloadAreaAllLevels::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_UnloadAreaAllLevels, CallFunc_AddLevelCommand_CommandNum_1) == 0x000038, "Member 'BP_LevelManager_C_UnloadAreaAllLevels::CallFunc_AddLevelCommand_CommandNum_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_UnloadAreaAllLevels, CallFunc_Less_IntInt_ReturnValue) == 0x00003C, "Member 'BP_LevelManager_C_UnloadAreaAllLevels::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_UnloadAreaAllLevels, CallFunc_Add_IntInt_ReturnValue_1) == 0x000040, "Member 'BP_LevelManager_C_UnloadAreaAllLevels::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_UnloadAreaAllLevels, CallFunc_Array_Length_ReturnValue_1) == 0x000044, "Member 'BP_LevelManager_C_UnloadAreaAllLevels::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_UnloadAreaAllLevels, Temp_int_Loop_Counter_Variable_2) == 0x000048, "Member 'BP_LevelManager_C_UnloadAreaAllLevels::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_UnloadAreaAllLevels, CallFunc_Array_Length_ReturnValue_2) == 0x00004C, "Member 'BP_LevelManager_C_UnloadAreaAllLevels::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_UnloadAreaAllLevels, CallFunc_Less_IntInt_ReturnValue_1) == 0x000050, "Member 'BP_LevelManager_C_UnloadAreaAllLevels::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_UnloadAreaAllLevels, CallFunc_Array_Length_ReturnValue_3) == 0x000054, "Member 'BP_LevelManager_C_UnloadAreaAllLevels::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_UnloadAreaAllLevels, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000058, "Member 'BP_LevelManager_C_UnloadAreaAllLevels::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_UnloadAreaAllLevels, CallFunc_Array_Contains_ReturnValue) == 0x000059, "Member 'BP_LevelManager_C_UnloadAreaAllLevels::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_UnloadAreaAllLevels, CallFunc_Array_Add_ReturnValue) == 0x00005C, "Member 'BP_LevelManager_C_UnloadAreaAllLevels::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_UnloadAreaAllLevels, CallFunc_Less_IntInt_ReturnValue_2) == 0x000060, "Member 'BP_LevelManager_C_UnloadAreaAllLevels::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_UnloadAreaAllLevels, CallFunc_Add_IntInt_ReturnValue_2) == 0x000064, "Member 'BP_LevelManager_C_UnloadAreaAllLevels::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.CheckExistQueueLoadCommand
// 0x000C (0x000C - 0x0000)
struct BP_LevelManager_C_CheckExistQueueLoadCommand final
{
public:
	bool                                          Exist;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E31[0x3];                                      // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LevelManager_C_CheckExistQueueLoadCommand) == 0x000004, "Wrong alignment on BP_LevelManager_C_CheckExistQueueLoadCommand");
static_assert(sizeof(BP_LevelManager_C_CheckExistQueueLoadCommand) == 0x00000C, "Wrong size on BP_LevelManager_C_CheckExistQueueLoadCommand");
static_assert(offsetof(BP_LevelManager_C_CheckExistQueueLoadCommand, Exist) == 0x000000, "Member 'BP_LevelManager_C_CheckExistQueueLoadCommand::Exist' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_CheckExistQueueLoadCommand, CallFunc_Array_Length_ReturnValue) == 0x000004, "Member 'BP_LevelManager_C_CheckExistQueueLoadCommand::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_CheckExistQueueLoadCommand, CallFunc_Greater_IntInt_ReturnValue) == 0x000008, "Member 'BP_LevelManager_C_CheckExistQueueLoadCommand::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.CheckNeedLevelInLoadedLevels
// 0x01E8 (0x01E8 - 0x0000)
struct BP_LevelManager_C_CheckNeedLevelInLoadedLevels final
{
public:
	class FName                                   AreaName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsFound;                                           // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E32[0x7];                                      // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftObjectPtr<class UObject>>         NeedLevels;                                        // 0x0010(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E33[0x4];                                      // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftObjectPtr<class UObject>>         CallFunc_GetAllLevelInArea_Levels;                 // 0x0028(0x0010)(ReferenceParm, HasGetValueTypeHash)
	struct FS_AreaInfo                            CallFunc_GetAllLevelInArea_AreaInfo;               // 0x0038(0x0068)(HasGetValueTypeHash)
	bool                                          CallFunc_GetAllLevelInArea_Error;                  // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E34[0x1];                                      // 0x00A3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E35[0x4];                                      // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UObject>                 CallFunc_Array_Get_Item;                           // 0x00B8(0x0028)(HasGetValueTypeHash)
	class FName                                   CallFunc_ObjectSoftRefToName_ReturnValue;          // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E36[0x4];                                      // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x00F0(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0108(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0148(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E37[0x4];                                      // 0x015C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0160(0x0018)()
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E38[0x7];                                      // 0x0179(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0180(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E39[0x4];                                      // 0x0194(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_LoadedLevelInfo                     CallFunc_Array_Get_Item_1;                         // 0x0198(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x01E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_SoftObjectReference_ReturnValue; // 0x01E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LevelManager_C_CheckNeedLevelInLoadedLevels) == 0x000008, "Wrong alignment on BP_LevelManager_C_CheckNeedLevelInLoadedLevels");
static_assert(sizeof(BP_LevelManager_C_CheckNeedLevelInLoadedLevels) == 0x0001E8, "Wrong size on BP_LevelManager_C_CheckNeedLevelInLoadedLevels");
static_assert(offsetof(BP_LevelManager_C_CheckNeedLevelInLoadedLevels, AreaName) == 0x000000, "Member 'BP_LevelManager_C_CheckNeedLevelInLoadedLevels::AreaName' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_CheckNeedLevelInLoadedLevels, IsFound) == 0x000008, "Member 'BP_LevelManager_C_CheckNeedLevelInLoadedLevels::IsFound' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_CheckNeedLevelInLoadedLevels, NeedLevels) == 0x000010, "Member 'BP_LevelManager_C_CheckNeedLevelInLoadedLevels::NeedLevels' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_CheckNeedLevelInLoadedLevels, Temp_int_Array_Index_Variable) == 0x000020, "Member 'BP_LevelManager_C_CheckNeedLevelInLoadedLevels::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_CheckNeedLevelInLoadedLevels, CallFunc_GetAllLevelInArea_Levels) == 0x000028, "Member 'BP_LevelManager_C_CheckNeedLevelInLoadedLevels::CallFunc_GetAllLevelInArea_Levels' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_CheckNeedLevelInLoadedLevels, CallFunc_GetAllLevelInArea_AreaInfo) == 0x000038, "Member 'BP_LevelManager_C_CheckNeedLevelInLoadedLevels::CallFunc_GetAllLevelInArea_AreaInfo' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_CheckNeedLevelInLoadedLevels, CallFunc_GetAllLevelInArea_Error) == 0x0000A0, "Member 'BP_LevelManager_C_CheckNeedLevelInLoadedLevels::CallFunc_GetAllLevelInArea_Error' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_CheckNeedLevelInLoadedLevels, Temp_bool_True_if_break_was_hit_Variable) == 0x0000A1, "Member 'BP_LevelManager_C_CheckNeedLevelInLoadedLevels::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_CheckNeedLevelInLoadedLevels, CallFunc_Not_PreBool_ReturnValue) == 0x0000A2, "Member 'BP_LevelManager_C_CheckNeedLevelInLoadedLevels::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_CheckNeedLevelInLoadedLevels, Temp_int_Loop_Counter_Variable) == 0x0000A4, "Member 'BP_LevelManager_C_CheckNeedLevelInLoadedLevels::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_CheckNeedLevelInLoadedLevels, CallFunc_Add_IntInt_ReturnValue) == 0x0000A8, "Member 'BP_LevelManager_C_CheckNeedLevelInLoadedLevels::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_CheckNeedLevelInLoadedLevels, Temp_int_Array_Index_Variable_1) == 0x0000AC, "Member 'BP_LevelManager_C_CheckNeedLevelInLoadedLevels::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_CheckNeedLevelInLoadedLevels, Temp_int_Loop_Counter_Variable_1) == 0x0000B0, "Member 'BP_LevelManager_C_CheckNeedLevelInLoadedLevels::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_CheckNeedLevelInLoadedLevels, CallFunc_Array_Get_Item) == 0x0000B8, "Member 'BP_LevelManager_C_CheckNeedLevelInLoadedLevels::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_CheckNeedLevelInLoadedLevels, CallFunc_ObjectSoftRefToName_ReturnValue) == 0x0000E0, "Member 'BP_LevelManager_C_CheckNeedLevelInLoadedLevels::CallFunc_ObjectSoftRefToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_CheckNeedLevelInLoadedLevels, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000E8, "Member 'BP_LevelManager_C_CheckNeedLevelInLoadedLevels::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_CheckNeedLevelInLoadedLevels, CallFunc_Conv_NameToText_ReturnValue) == 0x0000F0, "Member 'BP_LevelManager_C_CheckNeedLevelInLoadedLevels::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_CheckNeedLevelInLoadedLevels, K2Node_MakeStruct_FormatArgumentData) == 0x000108, "Member 'BP_LevelManager_C_CheckNeedLevelInLoadedLevels::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_CheckNeedLevelInLoadedLevels, K2Node_MakeArray_Array) == 0x000148, "Member 'BP_LevelManager_C_CheckNeedLevelInLoadedLevels::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_CheckNeedLevelInLoadedLevels, CallFunc_Array_Length_ReturnValue) == 0x000158, "Member 'BP_LevelManager_C_CheckNeedLevelInLoadedLevels::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_CheckNeedLevelInLoadedLevels, CallFunc_Format_ReturnValue) == 0x000160, "Member 'BP_LevelManager_C_CheckNeedLevelInLoadedLevels::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_CheckNeedLevelInLoadedLevels, CallFunc_Less_IntInt_ReturnValue) == 0x000178, "Member 'BP_LevelManager_C_CheckNeedLevelInLoadedLevels::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_CheckNeedLevelInLoadedLevels, CallFunc_Conv_TextToString_ReturnValue) == 0x000180, "Member 'BP_LevelManager_C_CheckNeedLevelInLoadedLevels::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_CheckNeedLevelInLoadedLevels, CallFunc_Array_Length_ReturnValue_1) == 0x000190, "Member 'BP_LevelManager_C_CheckNeedLevelInLoadedLevels::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_CheckNeedLevelInLoadedLevels, CallFunc_Array_Get_Item_1) == 0x000198, "Member 'BP_LevelManager_C_CheckNeedLevelInLoadedLevels::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_CheckNeedLevelInLoadedLevels, CallFunc_Less_IntInt_ReturnValue_1) == 0x0001E0, "Member 'BP_LevelManager_C_CheckNeedLevelInLoadedLevels::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_CheckNeedLevelInLoadedLevels, CallFunc_BooleanAND_ReturnValue) == 0x0001E1, "Member 'BP_LevelManager_C_CheckNeedLevelInLoadedLevels::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_CheckNeedLevelInLoadedLevels, CallFunc_EqualEqual_SoftObjectReference_ReturnValue) == 0x0001E2, "Member 'BP_LevelManager_C_CheckNeedLevelInLoadedLevels::CallFunc_EqualEqual_SoftObjectReference_ReturnValue' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.AppendArrayUnique
// 0x0038 (0x0038 - 0x0000)
struct BP_LevelManager_C_AppendArrayUnique final
{
public:
	TArray<class FName>                           DistNames;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	TArray<class FName>                           AppendNames;                                       // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E3A[0x3];                                      // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LevelManager_C_AppendArrayUnique) == 0x000008, "Wrong alignment on BP_LevelManager_C_AppendArrayUnique");
static_assert(sizeof(BP_LevelManager_C_AppendArrayUnique) == 0x000038, "Wrong size on BP_LevelManager_C_AppendArrayUnique");
static_assert(offsetof(BP_LevelManager_C_AppendArrayUnique, DistNames) == 0x000000, "Member 'BP_LevelManager_C_AppendArrayUnique::DistNames' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_AppendArrayUnique, AppendNames) == 0x000010, "Member 'BP_LevelManager_C_AppendArrayUnique::AppendNames' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_AppendArrayUnique, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_LevelManager_C_AppendArrayUnique::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_AppendArrayUnique, Temp_int_Array_Index_Variable) == 0x000024, "Member 'BP_LevelManager_C_AppendArrayUnique::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_AppendArrayUnique, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'BP_LevelManager_C_AppendArrayUnique::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_AppendArrayUnique, CallFunc_Array_AddUnique_ReturnValue) == 0x00002C, "Member 'BP_LevelManager_C_AppendArrayUnique::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_AppendArrayUnique, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'BP_LevelManager_C_AppendArrayUnique::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_AppendArrayUnique, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'BP_LevelManager_C_AppendArrayUnique::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.DebugPrintLoadedLevels
// 0x00E8 (0x00E8 - 0x0000)
struct BP_LevelManager_C_DebugPrintLoadedLevels final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E3B[0x4];                                      // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UObject>                 CallFunc_Array_Get_Item;                           // 0x0008(0x0028)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_ObjectSoftRefToName_ReturnValue;          // 0x0034(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E3C[0x4];                                      // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0040(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0058(0x0040)(HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E3D[0x4];                                      // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00A0(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00B0(0x0018)()
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E3E[0x7];                                      // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LevelManager_C_DebugPrintLoadedLevels) == 0x000008, "Wrong alignment on BP_LevelManager_C_DebugPrintLoadedLevels");
static_assert(sizeof(BP_LevelManager_C_DebugPrintLoadedLevels) == 0x0000E8, "Wrong size on BP_LevelManager_C_DebugPrintLoadedLevels");
static_assert(offsetof(BP_LevelManager_C_DebugPrintLoadedLevels, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_LevelManager_C_DebugPrintLoadedLevels::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_DebugPrintLoadedLevels, CallFunc_Array_Get_Item) == 0x000008, "Member 'BP_LevelManager_C_DebugPrintLoadedLevels::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_DebugPrintLoadedLevels, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BP_LevelManager_C_DebugPrintLoadedLevels::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_DebugPrintLoadedLevels, CallFunc_ObjectSoftRefToName_ReturnValue) == 0x000034, "Member 'BP_LevelManager_C_DebugPrintLoadedLevels::CallFunc_ObjectSoftRefToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_DebugPrintLoadedLevels, CallFunc_Conv_NameToText_ReturnValue) == 0x000040, "Member 'BP_LevelManager_C_DebugPrintLoadedLevels::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_DebugPrintLoadedLevels, K2Node_MakeStruct_FormatArgumentData) == 0x000058, "Member 'BP_LevelManager_C_DebugPrintLoadedLevels::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_DebugPrintLoadedLevels, Temp_int_Loop_Counter_Variable) == 0x000098, "Member 'BP_LevelManager_C_DebugPrintLoadedLevels::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_DebugPrintLoadedLevels, K2Node_MakeArray_Array) == 0x0000A0, "Member 'BP_LevelManager_C_DebugPrintLoadedLevels::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_DebugPrintLoadedLevels, CallFunc_Format_ReturnValue) == 0x0000B0, "Member 'BP_LevelManager_C_DebugPrintLoadedLevels::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_DebugPrintLoadedLevels, CallFunc_Less_IntInt_ReturnValue) == 0x0000C8, "Member 'BP_LevelManager_C_DebugPrintLoadedLevels::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_DebugPrintLoadedLevels, CallFunc_Conv_TextToString_ReturnValue) == 0x0000D0, "Member 'BP_LevelManager_C_DebugPrintLoadedLevels::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_DebugPrintLoadedLevels, CallFunc_Add_IntInt_ReturnValue) == 0x0000E0, "Member 'BP_LevelManager_C_DebugPrintLoadedLevels::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.GetCurrentCameraType
// 0x000C (0x000C - 0x0000)
struct BP_LevelManager_C_GetCurrentCameraType final
{
public:
	class FName                                   Camera_type;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Return;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LevelManager_C_GetCurrentCameraType) == 0x000004, "Wrong alignment on BP_LevelManager_C_GetCurrentCameraType");
static_assert(sizeof(BP_LevelManager_C_GetCurrentCameraType) == 0x00000C, "Wrong size on BP_LevelManager_C_GetCurrentCameraType");
static_assert(offsetof(BP_LevelManager_C_GetCurrentCameraType, Camera_type) == 0x000000, "Member 'BP_LevelManager_C_GetCurrentCameraType::Camera_type' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetCurrentCameraType, Return) == 0x000008, "Member 'BP_LevelManager_C_GetCurrentCameraType::Return' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.DebugPrintAreaNames
// 0x0120 (0x0120 - 0x0000)
struct BP_LevelManager_C_DebugPrintAreaNames final
{
public:
	TArray<class FName>                           AreaNames;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	class FText                                   DoText;                                            // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0028(0x0040)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0074(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E3F[0x4];                                      // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0080(0x0018)()
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E40[0x7];                                      // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00A0(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00E0(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E41[0x4];                                      // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00F8(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0110(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LevelManager_C_DebugPrintAreaNames) == 0x000008, "Wrong alignment on BP_LevelManager_C_DebugPrintAreaNames");
static_assert(sizeof(BP_LevelManager_C_DebugPrintAreaNames) == 0x000120, "Wrong size on BP_LevelManager_C_DebugPrintAreaNames");
static_assert(offsetof(BP_LevelManager_C_DebugPrintAreaNames, AreaNames) == 0x000000, "Member 'BP_LevelManager_C_DebugPrintAreaNames::AreaNames' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_DebugPrintAreaNames, DoText) == 0x000010, "Member 'BP_LevelManager_C_DebugPrintAreaNames::DoText' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_DebugPrintAreaNames, K2Node_MakeStruct_FormatArgumentData) == 0x000028, "Member 'BP_LevelManager_C_DebugPrintAreaNames::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_DebugPrintAreaNames, CallFunc_Array_Length_ReturnValue) == 0x000068, "Member 'BP_LevelManager_C_DebugPrintAreaNames::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_DebugPrintAreaNames, Temp_int_Array_Index_Variable) == 0x00006C, "Member 'BP_LevelManager_C_DebugPrintAreaNames::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_DebugPrintAreaNames, Temp_int_Loop_Counter_Variable) == 0x000070, "Member 'BP_LevelManager_C_DebugPrintAreaNames::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_DebugPrintAreaNames, CallFunc_Array_Get_Item) == 0x000074, "Member 'BP_LevelManager_C_DebugPrintAreaNames::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_DebugPrintAreaNames, CallFunc_Conv_NameToText_ReturnValue) == 0x000080, "Member 'BP_LevelManager_C_DebugPrintAreaNames::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_DebugPrintAreaNames, CallFunc_Less_IntInt_ReturnValue) == 0x000098, "Member 'BP_LevelManager_C_DebugPrintAreaNames::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_DebugPrintAreaNames, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000A0, "Member 'BP_LevelManager_C_DebugPrintAreaNames::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_DebugPrintAreaNames, K2Node_MakeArray_Array) == 0x0000E0, "Member 'BP_LevelManager_C_DebugPrintAreaNames::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_DebugPrintAreaNames, CallFunc_Add_IntInt_ReturnValue) == 0x0000F0, "Member 'BP_LevelManager_C_DebugPrintAreaNames::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_DebugPrintAreaNames, CallFunc_Format_ReturnValue) == 0x0000F8, "Member 'BP_LevelManager_C_DebugPrintAreaNames::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_DebugPrintAreaNames, CallFunc_Conv_TextToString_ReturnValue) == 0x000110, "Member 'BP_LevelManager_C_DebugPrintAreaNames::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.SetAreaInfoCacheDirty
// 0x0001 (0x0001 - 0x0000)
struct BP_LevelManager_C_SetAreaInfoCacheDirty final
{
public:
	bool                                          Dirty;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LevelManager_C_SetAreaInfoCacheDirty) == 0x000001, "Wrong alignment on BP_LevelManager_C_SetAreaInfoCacheDirty");
static_assert(sizeof(BP_LevelManager_C_SetAreaInfoCacheDirty) == 0x000001, "Wrong size on BP_LevelManager_C_SetAreaInfoCacheDirty");
static_assert(offsetof(BP_LevelManager_C_SetAreaInfoCacheDirty, Dirty) == 0x000000, "Member 'BP_LevelManager_C_SetAreaInfoCacheDirty::Dirty' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.RequestLoadLevelAsync
// 0x00C0 (0x00C0 - 0x0000)
struct BP_LevelManager_C_RequestLoadLevelAsync final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E42[0x7];                                      // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UObject>                 Level;                                             // 0x0008(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddLevelCommand_CommandNum;               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_ObjectSoftRefToName_ReturnValue;          // 0x0044(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E43[0x4];                                      // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_LoadedLevelInfo                     CallFunc_IsLevelInLoadedLevelInfo_LevelInfoRef;    // 0x0050(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_IsLevelInLoadedLevelInfo_Exist;           // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E44[0x7];                                      // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LevelManager_C_RequestLoadLevelAsync) == 0x000008, "Wrong alignment on BP_LevelManager_C_RequestLoadLevelAsync");
static_assert(sizeof(BP_LevelManager_C_RequestLoadLevelAsync) == 0x0000C0, "Wrong size on BP_LevelManager_C_RequestLoadLevelAsync");
static_assert(offsetof(BP_LevelManager_C_RequestLoadLevelAsync, Visible) == 0x000000, "Member 'BP_LevelManager_C_RequestLoadLevelAsync::Visible' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestLoadLevelAsync, Level) == 0x000008, "Member 'BP_LevelManager_C_RequestLoadLevelAsync::Level' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestLoadLevelAsync, CallFunc_Concat_StrStr_ReturnValue) == 0x000030, "Member 'BP_LevelManager_C_RequestLoadLevelAsync::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestLoadLevelAsync, CallFunc_AddLevelCommand_CommandNum) == 0x000040, "Member 'BP_LevelManager_C_RequestLoadLevelAsync::CallFunc_AddLevelCommand_CommandNum' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestLoadLevelAsync, CallFunc_ObjectSoftRefToName_ReturnValue) == 0x000044, "Member 'BP_LevelManager_C_RequestLoadLevelAsync::CallFunc_ObjectSoftRefToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestLoadLevelAsync, CallFunc_IsLevelInLoadedLevelInfo_LevelInfoRef) == 0x000050, "Member 'BP_LevelManager_C_RequestLoadLevelAsync::CallFunc_IsLevelInLoadedLevelInfo_LevelInfoRef' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestLoadLevelAsync, CallFunc_IsLevelInLoadedLevelInfo_Exist) == 0x000098, "Member 'BP_LevelManager_C_RequestLoadLevelAsync::CallFunc_IsLevelInLoadedLevelInfo_Exist' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestLoadLevelAsync, CallFunc_Conv_NameToString_ReturnValue) == 0x0000A0, "Member 'BP_LevelManager_C_RequestLoadLevelAsync::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestLoadLevelAsync, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0000B0, "Member 'BP_LevelManager_C_RequestLoadLevelAsync::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.RequestUnloadLevelAsync
// 0x00B8 (0x00B8 - 0x0000)
struct BP_LevelManager_C_RequestUnloadLevelAsync final
{
public:
	TSoftObjectPtr<class UObject>                 Level;                                             // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddLevelCommand_CommandNum;               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_ObjectSoftRefToName_ReturnValue;          // 0x003C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E45[0x4];                                      // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_LoadedLevelInfo                     CallFunc_IsLevelInLoadedLevelInfo_LevelInfoRef;    // 0x0048(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_IsLevelInLoadedLevelInfo_Exist;           // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E46[0x7];                                      // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LevelManager_C_RequestUnloadLevelAsync) == 0x000008, "Wrong alignment on BP_LevelManager_C_RequestUnloadLevelAsync");
static_assert(sizeof(BP_LevelManager_C_RequestUnloadLevelAsync) == 0x0000B8, "Wrong size on BP_LevelManager_C_RequestUnloadLevelAsync");
static_assert(offsetof(BP_LevelManager_C_RequestUnloadLevelAsync, Level) == 0x000000, "Member 'BP_LevelManager_C_RequestUnloadLevelAsync::Level' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestUnloadLevelAsync, CallFunc_Concat_StrStr_ReturnValue) == 0x000028, "Member 'BP_LevelManager_C_RequestUnloadLevelAsync::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestUnloadLevelAsync, CallFunc_AddLevelCommand_CommandNum) == 0x000038, "Member 'BP_LevelManager_C_RequestUnloadLevelAsync::CallFunc_AddLevelCommand_CommandNum' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestUnloadLevelAsync, CallFunc_ObjectSoftRefToName_ReturnValue) == 0x00003C, "Member 'BP_LevelManager_C_RequestUnloadLevelAsync::CallFunc_ObjectSoftRefToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestUnloadLevelAsync, CallFunc_IsLevelInLoadedLevelInfo_LevelInfoRef) == 0x000048, "Member 'BP_LevelManager_C_RequestUnloadLevelAsync::CallFunc_IsLevelInLoadedLevelInfo_LevelInfoRef' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestUnloadLevelAsync, CallFunc_IsLevelInLoadedLevelInfo_Exist) == 0x000090, "Member 'BP_LevelManager_C_RequestUnloadLevelAsync::CallFunc_IsLevelInLoadedLevelInfo_Exist' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestUnloadLevelAsync, CallFunc_Conv_NameToString_ReturnValue) == 0x000098, "Member 'BP_LevelManager_C_RequestUnloadLevelAsync::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestUnloadLevelAsync, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0000A8, "Member 'BP_LevelManager_C_RequestUnloadLevelAsync::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.TweakStreamSettingsInGame
// 0x0050 (0x0050 - 0x0000)
struct BP_LevelManager_C_TweakStreamSettingsInGame final
{
public:
	struct FRSStreamingSettings                   Settings;                                          // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FRSStreamingSettings                   TmpSettings;                                       // 0x0028(0x0028)(Edit, BlueprintVisible)
};
static_assert(alignof(BP_LevelManager_C_TweakStreamSettingsInGame) == 0x000008, "Wrong alignment on BP_LevelManager_C_TweakStreamSettingsInGame");
static_assert(sizeof(BP_LevelManager_C_TweakStreamSettingsInGame) == 0x000050, "Wrong size on BP_LevelManager_C_TweakStreamSettingsInGame");
static_assert(offsetof(BP_LevelManager_C_TweakStreamSettingsInGame, Settings) == 0x000000, "Member 'BP_LevelManager_C_TweakStreamSettingsInGame::Settings' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_TweakStreamSettingsInGame, TmpSettings) == 0x000028, "Member 'BP_LevelManager_C_TweakStreamSettingsInGame::TmpSettings' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.GetLbAndPortalLevelInArea
// 0x0128 (0x0128 - 0x0000)
struct BP_LevelManager_C_GetLbAndPortalLevelInArea final
{
public:
	class FName                                   AreaName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UObject>>         Levels;                                            // 0x0008(0x0010)(Parm, OutParm, HasGetValueTypeHash)
	struct FS_AreaInfo                            AreaInfo;                                          // 0x0018(0x0068)(Parm, OutParm, HasGetValueTypeHash)
	bool                                          Error;                                             // 0x0080(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E47[0x7];                                      // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftObjectPtr<class UObject>>         Tmp;                                               // 0x0088(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UObject>>         TmpLevels;                                         // 0x0098(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<class FName>                           TmpLevelNames;                                     // 0x00A8(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FS_AreaInfo                            CallFunc_GetAreaInfo_AreaInfo;                     // 0x00B8(0x0068)(HasGetValueTypeHash)
	bool                                          CallFunc_GetAreaInfo_Found;                        // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LevelManager_C_GetLbAndPortalLevelInArea) == 0x000008, "Wrong alignment on BP_LevelManager_C_GetLbAndPortalLevelInArea");
static_assert(sizeof(BP_LevelManager_C_GetLbAndPortalLevelInArea) == 0x000128, "Wrong size on BP_LevelManager_C_GetLbAndPortalLevelInArea");
static_assert(offsetof(BP_LevelManager_C_GetLbAndPortalLevelInArea, AreaName) == 0x000000, "Member 'BP_LevelManager_C_GetLbAndPortalLevelInArea::AreaName' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetLbAndPortalLevelInArea, Levels) == 0x000008, "Member 'BP_LevelManager_C_GetLbAndPortalLevelInArea::Levels' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetLbAndPortalLevelInArea, AreaInfo) == 0x000018, "Member 'BP_LevelManager_C_GetLbAndPortalLevelInArea::AreaInfo' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetLbAndPortalLevelInArea, Error) == 0x000080, "Member 'BP_LevelManager_C_GetLbAndPortalLevelInArea::Error' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetLbAndPortalLevelInArea, Tmp) == 0x000088, "Member 'BP_LevelManager_C_GetLbAndPortalLevelInArea::Tmp' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetLbAndPortalLevelInArea, TmpLevels) == 0x000098, "Member 'BP_LevelManager_C_GetLbAndPortalLevelInArea::TmpLevels' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetLbAndPortalLevelInArea, TmpLevelNames) == 0x0000A8, "Member 'BP_LevelManager_C_GetLbAndPortalLevelInArea::TmpLevelNames' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetLbAndPortalLevelInArea, CallFunc_GetAreaInfo_AreaInfo) == 0x0000B8, "Member 'BP_LevelManager_C_GetLbAndPortalLevelInArea::CallFunc_GetAreaInfo_AreaInfo' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetLbAndPortalLevelInArea, CallFunc_GetAreaInfo_Found) == 0x000120, "Member 'BP_LevelManager_C_GetLbAndPortalLevelInArea::CallFunc_GetAreaInfo_Found' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.IsLBPortalLevelInLoadedAreaInfos
// 0x00D0 (0x00D0 - 0x0000)
struct BP_LevelManager_C_IsLBPortalLevelInLoadedAreaInfos final
{
public:
	TSoftObjectPtr<class UObject>                 Level;                                             // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          IsExist;                                           // 0x0028(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E48[0x3];                                      // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_Map_Keys_Keys;                            // 0x0038(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E49[0x3];                                      // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftObjectPtr<class UObject>>         CallFunc_GetLbAndPortalLevelInArea_Levels;         // 0x0050(0x0010)(ReferenceParm, HasGetValueTypeHash)
	struct FS_AreaInfo                            CallFunc_GetLbAndPortalLevelInArea_AreaInfo;       // 0x0060(0x0068)(HasGetValueTypeHash)
	bool                                          CallFunc_GetLbAndPortalLevelInArea_Error;          // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LevelManager_C_IsLBPortalLevelInLoadedAreaInfos) == 0x000008, "Wrong alignment on BP_LevelManager_C_IsLBPortalLevelInLoadedAreaInfos");
static_assert(sizeof(BP_LevelManager_C_IsLBPortalLevelInLoadedAreaInfos) == 0x0000D0, "Wrong size on BP_LevelManager_C_IsLBPortalLevelInLoadedAreaInfos");
static_assert(offsetof(BP_LevelManager_C_IsLBPortalLevelInLoadedAreaInfos, Level) == 0x000000, "Member 'BP_LevelManager_C_IsLBPortalLevelInLoadedAreaInfos::Level' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsLBPortalLevelInLoadedAreaInfos, IsExist) == 0x000028, "Member 'BP_LevelManager_C_IsLBPortalLevelInLoadedAreaInfos::IsExist' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsLBPortalLevelInLoadedAreaInfos, Temp_int_Array_Index_Variable) == 0x00002C, "Member 'BP_LevelManager_C_IsLBPortalLevelInLoadedAreaInfos::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsLBPortalLevelInLoadedAreaInfos, Temp_int_Loop_Counter_Variable) == 0x000030, "Member 'BP_LevelManager_C_IsLBPortalLevelInLoadedAreaInfos::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsLBPortalLevelInLoadedAreaInfos, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'BP_LevelManager_C_IsLBPortalLevelInLoadedAreaInfos::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsLBPortalLevelInLoadedAreaInfos, CallFunc_Map_Keys_Keys) == 0x000038, "Member 'BP_LevelManager_C_IsLBPortalLevelInLoadedAreaInfos::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsLBPortalLevelInLoadedAreaInfos, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'BP_LevelManager_C_IsLBPortalLevelInLoadedAreaInfos::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsLBPortalLevelInLoadedAreaInfos, CallFunc_Less_IntInt_ReturnValue) == 0x00004C, "Member 'BP_LevelManager_C_IsLBPortalLevelInLoadedAreaInfos::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsLBPortalLevelInLoadedAreaInfos, CallFunc_GetLbAndPortalLevelInArea_Levels) == 0x000050, "Member 'BP_LevelManager_C_IsLBPortalLevelInLoadedAreaInfos::CallFunc_GetLbAndPortalLevelInArea_Levels' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsLBPortalLevelInLoadedAreaInfos, CallFunc_GetLbAndPortalLevelInArea_AreaInfo) == 0x000060, "Member 'BP_LevelManager_C_IsLBPortalLevelInLoadedAreaInfos::CallFunc_GetLbAndPortalLevelInArea_AreaInfo' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsLBPortalLevelInLoadedAreaInfos, CallFunc_GetLbAndPortalLevelInArea_Error) == 0x0000C8, "Member 'BP_LevelManager_C_IsLBPortalLevelInLoadedAreaInfos::CallFunc_GetLbAndPortalLevelInArea_Error' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsLBPortalLevelInLoadedAreaInfos, CallFunc_Array_Contains_ReturnValue) == 0x0000C9, "Member 'BP_LevelManager_C_IsLBPortalLevelInLoadedAreaInfos::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.IsAreaLBPortalLevelsLoadedByAreaName
// 0x00E8 (0x00E8 - 0x0000)
struct BP_LevelManager_C_IsAreaLBPortalLevelsLoadedByAreaName final
{
public:
	class FName                                   AreaName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RawCheck;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsLoaded;                                          // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsError;                                           // 0x000A(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E4A[0x5];                                      // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_AreaInfo                            Area_Info;                                         // 0x0010(0x0068)(Parm, OutParm, HasGetValueTypeHash)
	struct FS_AreaInfo                            CallFunc_GetAreaInfo_AreaInfo;                     // 0x0078(0x0068)(HasGetValueTypeHash)
	bool                                          CallFunc_GetAreaInfo_Found;                        // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAreaLBPortalLevelsLoadedByInfo_IsLoaded; // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LevelManager_C_IsAreaLBPortalLevelsLoadedByAreaName) == 0x000008, "Wrong alignment on BP_LevelManager_C_IsAreaLBPortalLevelsLoadedByAreaName");
static_assert(sizeof(BP_LevelManager_C_IsAreaLBPortalLevelsLoadedByAreaName) == 0x0000E8, "Wrong size on BP_LevelManager_C_IsAreaLBPortalLevelsLoadedByAreaName");
static_assert(offsetof(BP_LevelManager_C_IsAreaLBPortalLevelsLoadedByAreaName, AreaName) == 0x000000, "Member 'BP_LevelManager_C_IsAreaLBPortalLevelsLoadedByAreaName::AreaName' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaLBPortalLevelsLoadedByAreaName, RawCheck) == 0x000008, "Member 'BP_LevelManager_C_IsAreaLBPortalLevelsLoadedByAreaName::RawCheck' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaLBPortalLevelsLoadedByAreaName, IsLoaded) == 0x000009, "Member 'BP_LevelManager_C_IsAreaLBPortalLevelsLoadedByAreaName::IsLoaded' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaLBPortalLevelsLoadedByAreaName, IsError) == 0x00000A, "Member 'BP_LevelManager_C_IsAreaLBPortalLevelsLoadedByAreaName::IsError' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaLBPortalLevelsLoadedByAreaName, Area_Info) == 0x000010, "Member 'BP_LevelManager_C_IsAreaLBPortalLevelsLoadedByAreaName::Area_Info' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaLBPortalLevelsLoadedByAreaName, CallFunc_GetAreaInfo_AreaInfo) == 0x000078, "Member 'BP_LevelManager_C_IsAreaLBPortalLevelsLoadedByAreaName::CallFunc_GetAreaInfo_AreaInfo' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaLBPortalLevelsLoadedByAreaName, CallFunc_GetAreaInfo_Found) == 0x0000E0, "Member 'BP_LevelManager_C_IsAreaLBPortalLevelsLoadedByAreaName::CallFunc_GetAreaInfo_Found' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaLBPortalLevelsLoadedByAreaName, CallFunc_IsAreaLBPortalLevelsLoadedByInfo_IsLoaded) == 0x0000E1, "Member 'BP_LevelManager_C_IsAreaLBPortalLevelsLoadedByAreaName::CallFunc_IsAreaLBPortalLevelsLoadedByInfo_IsLoaded' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.IsAreaLBPortalLevelsLoadedByInfo
// 0x0090 (0x0090 - 0x0000)
struct BP_LevelManager_C_IsAreaLBPortalLevelsLoadedByInfo final
{
public:
	class FName                                   AreaName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RawCheck;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsLoaded;                                          // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E4B[0x6];                                      // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftObjectPtr<class UObject>>         CallFunc_GetLbAndPortalLevelInArea_Levels;         // 0x0010(0x0010)(ReferenceParm, HasGetValueTypeHash)
	struct FS_AreaInfo                            CallFunc_GetLbAndPortalLevelInArea_AreaInfo;       // 0x0020(0x0068)(HasGetValueTypeHash)
	bool                                          CallFunc_GetLbAndPortalLevelInArea_Error;          // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLevelsLoaded_IsLoaded;                  // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LevelManager_C_IsAreaLBPortalLevelsLoadedByInfo) == 0x000008, "Wrong alignment on BP_LevelManager_C_IsAreaLBPortalLevelsLoadedByInfo");
static_assert(sizeof(BP_LevelManager_C_IsAreaLBPortalLevelsLoadedByInfo) == 0x000090, "Wrong size on BP_LevelManager_C_IsAreaLBPortalLevelsLoadedByInfo");
static_assert(offsetof(BP_LevelManager_C_IsAreaLBPortalLevelsLoadedByInfo, AreaName) == 0x000000, "Member 'BP_LevelManager_C_IsAreaLBPortalLevelsLoadedByInfo::AreaName' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaLBPortalLevelsLoadedByInfo, RawCheck) == 0x000008, "Member 'BP_LevelManager_C_IsAreaLBPortalLevelsLoadedByInfo::RawCheck' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaLBPortalLevelsLoadedByInfo, IsLoaded) == 0x000009, "Member 'BP_LevelManager_C_IsAreaLBPortalLevelsLoadedByInfo::IsLoaded' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaLBPortalLevelsLoadedByInfo, CallFunc_GetLbAndPortalLevelInArea_Levels) == 0x000010, "Member 'BP_LevelManager_C_IsAreaLBPortalLevelsLoadedByInfo::CallFunc_GetLbAndPortalLevelInArea_Levels' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaLBPortalLevelsLoadedByInfo, CallFunc_GetLbAndPortalLevelInArea_AreaInfo) == 0x000020, "Member 'BP_LevelManager_C_IsAreaLBPortalLevelsLoadedByInfo::CallFunc_GetLbAndPortalLevelInArea_AreaInfo' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaLBPortalLevelsLoadedByInfo, CallFunc_GetLbAndPortalLevelInArea_Error) == 0x000088, "Member 'BP_LevelManager_C_IsAreaLBPortalLevelsLoadedByInfo::CallFunc_GetLbAndPortalLevelInArea_Error' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaLBPortalLevelsLoadedByInfo, CallFunc_IsLevelsLoaded_IsLoaded) == 0x000089, "Member 'BP_LevelManager_C_IsAreaLBPortalLevelsLoadedByInfo::CallFunc_IsLevelsLoaded_IsLoaded' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.IsAreaLBPortalLevelsLoaded
// 0x00F8 (0x00F8 - 0x0000)
struct BP_LevelManager_C_IsAreaLBPortalLevelsLoaded final
{
public:
	int32                                         LocationId;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AreaId;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         VariationID;                                       // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RawCheck;                                          // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsLoaded;                                          // 0x000D(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsError;                                           // 0x000E(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E4C[0x1];                                      // 0x000F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_AreaInfo                            Area_Info;                                         // 0x0010(0x0068)(Parm, OutParm, HasGetValueTypeHash)
	class FName                                   CallFunc_GetAreaName_ReturnValue;                  // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAreaLBPortalLevelsLoadedByInfo_IsLoaded; // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E4D[0x7];                                      // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_AreaInfo                            CallFunc_GetAreaInfo_AreaInfo;                     // 0x0088(0x0068)(HasGetValueTypeHash)
	bool                                          CallFunc_GetAreaInfo_Found;                        // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LevelManager_C_IsAreaLBPortalLevelsLoaded) == 0x000008, "Wrong alignment on BP_LevelManager_C_IsAreaLBPortalLevelsLoaded");
static_assert(sizeof(BP_LevelManager_C_IsAreaLBPortalLevelsLoaded) == 0x0000F8, "Wrong size on BP_LevelManager_C_IsAreaLBPortalLevelsLoaded");
static_assert(offsetof(BP_LevelManager_C_IsAreaLBPortalLevelsLoaded, LocationId) == 0x000000, "Member 'BP_LevelManager_C_IsAreaLBPortalLevelsLoaded::LocationId' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaLBPortalLevelsLoaded, AreaId) == 0x000004, "Member 'BP_LevelManager_C_IsAreaLBPortalLevelsLoaded::AreaId' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaLBPortalLevelsLoaded, VariationID) == 0x000008, "Member 'BP_LevelManager_C_IsAreaLBPortalLevelsLoaded::VariationID' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaLBPortalLevelsLoaded, RawCheck) == 0x00000C, "Member 'BP_LevelManager_C_IsAreaLBPortalLevelsLoaded::RawCheck' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaLBPortalLevelsLoaded, IsLoaded) == 0x00000D, "Member 'BP_LevelManager_C_IsAreaLBPortalLevelsLoaded::IsLoaded' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaLBPortalLevelsLoaded, IsError) == 0x00000E, "Member 'BP_LevelManager_C_IsAreaLBPortalLevelsLoaded::IsError' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaLBPortalLevelsLoaded, Area_Info) == 0x000010, "Member 'BP_LevelManager_C_IsAreaLBPortalLevelsLoaded::Area_Info' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaLBPortalLevelsLoaded, CallFunc_GetAreaName_ReturnValue) == 0x000078, "Member 'BP_LevelManager_C_IsAreaLBPortalLevelsLoaded::CallFunc_GetAreaName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaLBPortalLevelsLoaded, CallFunc_IsAreaLBPortalLevelsLoadedByInfo_IsLoaded) == 0x000080, "Member 'BP_LevelManager_C_IsAreaLBPortalLevelsLoaded::CallFunc_IsAreaLBPortalLevelsLoadedByInfo_IsLoaded' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaLBPortalLevelsLoaded, CallFunc_GetAreaInfo_AreaInfo) == 0x000088, "Member 'BP_LevelManager_C_IsAreaLBPortalLevelsLoaded::CallFunc_GetAreaInfo_AreaInfo' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaLBPortalLevelsLoaded, CallFunc_GetAreaInfo_Found) == 0x0000F0, "Member 'BP_LevelManager_C_IsAreaLBPortalLevelsLoaded::CallFunc_GetAreaInfo_Found' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.RequestLoadAreaLBPortalAsync
// 0x0040 (0x0040 - 0x0000)
struct BP_LevelManager_C_RequestLoadAreaLBPortalAsync final
{
public:
	bool                                          SetVisbleAfterLoad;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E4E[0x3];                                      // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         LocationId;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AreaId;                                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SkipEnemyLevels;                                   // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E4F[0x3];                                      // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         LoadLocationID;                                    // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LoadAreaID;                                        // 0x0014(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LoadVariationID;                                   // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_CallAreaSelectVariationFunction_OutLocationID; // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_CallAreaSelectVariationFunction_OutAreaID; // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_CallAreaSelectVariationFunction_OutVariationID; // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CallAreaSelectVariationFunction_ReturnValue; // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E50[0x3];                                      // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_BoolToInt_ReturnValue;               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetAreaName_ReturnValue;                  // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddLevelCommand_CommandNum;               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddLevelCommand_CommandNum_1;             // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LevelManager_C_RequestLoadAreaLBPortalAsync) == 0x000004, "Wrong alignment on BP_LevelManager_C_RequestLoadAreaLBPortalAsync");
static_assert(sizeof(BP_LevelManager_C_RequestLoadAreaLBPortalAsync) == 0x000040, "Wrong size on BP_LevelManager_C_RequestLoadAreaLBPortalAsync");
static_assert(offsetof(BP_LevelManager_C_RequestLoadAreaLBPortalAsync, SetVisbleAfterLoad) == 0x000000, "Member 'BP_LevelManager_C_RequestLoadAreaLBPortalAsync::SetVisbleAfterLoad' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestLoadAreaLBPortalAsync, LocationId) == 0x000004, "Member 'BP_LevelManager_C_RequestLoadAreaLBPortalAsync::LocationId' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestLoadAreaLBPortalAsync, AreaId) == 0x000008, "Member 'BP_LevelManager_C_RequestLoadAreaLBPortalAsync::AreaId' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestLoadAreaLBPortalAsync, SkipEnemyLevels) == 0x00000C, "Member 'BP_LevelManager_C_RequestLoadAreaLBPortalAsync::SkipEnemyLevels' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestLoadAreaLBPortalAsync, LoadLocationID) == 0x000010, "Member 'BP_LevelManager_C_RequestLoadAreaLBPortalAsync::LoadLocationID' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestLoadAreaLBPortalAsync, LoadAreaID) == 0x000014, "Member 'BP_LevelManager_C_RequestLoadAreaLBPortalAsync::LoadAreaID' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestLoadAreaLBPortalAsync, LoadVariationID) == 0x000018, "Member 'BP_LevelManager_C_RequestLoadAreaLBPortalAsync::LoadVariationID' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestLoadAreaLBPortalAsync, CallFunc_CallAreaSelectVariationFunction_OutLocationID) == 0x00001C, "Member 'BP_LevelManager_C_RequestLoadAreaLBPortalAsync::CallFunc_CallAreaSelectVariationFunction_OutLocationID' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestLoadAreaLBPortalAsync, CallFunc_CallAreaSelectVariationFunction_OutAreaID) == 0x000020, "Member 'BP_LevelManager_C_RequestLoadAreaLBPortalAsync::CallFunc_CallAreaSelectVariationFunction_OutAreaID' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestLoadAreaLBPortalAsync, CallFunc_CallAreaSelectVariationFunction_OutVariationID) == 0x000024, "Member 'BP_LevelManager_C_RequestLoadAreaLBPortalAsync::CallFunc_CallAreaSelectVariationFunction_OutVariationID' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestLoadAreaLBPortalAsync, CallFunc_CallAreaSelectVariationFunction_ReturnValue) == 0x000028, "Member 'BP_LevelManager_C_RequestLoadAreaLBPortalAsync::CallFunc_CallAreaSelectVariationFunction_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestLoadAreaLBPortalAsync, CallFunc_Conv_BoolToInt_ReturnValue) == 0x00002C, "Member 'BP_LevelManager_C_RequestLoadAreaLBPortalAsync::CallFunc_Conv_BoolToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestLoadAreaLBPortalAsync, CallFunc_GetAreaName_ReturnValue) == 0x000030, "Member 'BP_LevelManager_C_RequestLoadAreaLBPortalAsync::CallFunc_GetAreaName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestLoadAreaLBPortalAsync, CallFunc_AddLevelCommand_CommandNum) == 0x000038, "Member 'BP_LevelManager_C_RequestLoadAreaLBPortalAsync::CallFunc_AddLevelCommand_CommandNum' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestLoadAreaLBPortalAsync, CallFunc_AddLevelCommand_CommandNum_1) == 0x00003C, "Member 'BP_LevelManager_C_RequestLoadAreaLBPortalAsync::CallFunc_AddLevelCommand_CommandNum_1' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.CheckUnloadLevels
// 0x0270 (0x0270 - 0x0000)
struct BP_LevelManager_C_CheckUnloadLevels final
{
public:
	class FName                                   AreaName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetLocationNameFromAreaName_LocationString; // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FS_AreaInfo                            CallFunc_GetAreaInfo_AreaInfo;                     // 0x0018(0x0068)(HasGetValueTypeHash)
	bool                                          CallFunc_GetAreaInfo_Found;                        // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E51[0x7];                                      // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetLocationNameFromAreaName_LocationString_1; // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FS_AreaInfo                            K2Node_Copy_ReturnValue;                           // 0x0098(0x0068)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E52[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_AreaInfo                            K2Node_SetFieldsInStruct_StructOut;                // 0x0108(0x0068)(HasGetValueTypeHash)
	int32                                         CallFunc_Map_Length_ReturnValue;                   // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAreaInLoadedAreaInfos_IsLoaded;         // 0x0174(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAreaInLoadedAreaInfos_IsExist;          // 0x0175(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E53[0x2];                                      // 0x0176(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_AreaInfo                            CallFunc_IsAreaInLoadedAreaInfos_AreaInfo;         // 0x0178(0x0068)(HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAreaInLoadedAreaInfosWithCondition_IsLoaded; // 0x01E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAreaInLoadedAreaInfosWithCondition_IsExist; // 0x01E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E54[0x5];                                      // 0x01E3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_AreaInfo                            CallFunc_IsAreaInLoadedAreaInfosWithCondition_AreaInfo; // 0x01E8(0x0068)(HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_GetNotCurrentAreaName_AreaNames;          // 0x0250(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddLevelCommand_CommandNum;               // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddLevelCommand_CommandNum_1;             // 0x026C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LevelManager_C_CheckUnloadLevels) == 0x000008, "Wrong alignment on BP_LevelManager_C_CheckUnloadLevels");
static_assert(sizeof(BP_LevelManager_C_CheckUnloadLevels) == 0x000270, "Wrong size on BP_LevelManager_C_CheckUnloadLevels");
static_assert(offsetof(BP_LevelManager_C_CheckUnloadLevels, AreaName) == 0x000000, "Member 'BP_LevelManager_C_CheckUnloadLevels::AreaName' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_CheckUnloadLevels, CallFunc_GetLocationNameFromAreaName_LocationString) == 0x000008, "Member 'BP_LevelManager_C_CheckUnloadLevels::CallFunc_GetLocationNameFromAreaName_LocationString' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_CheckUnloadLevels, CallFunc_GetAreaInfo_AreaInfo) == 0x000018, "Member 'BP_LevelManager_C_CheckUnloadLevels::CallFunc_GetAreaInfo_AreaInfo' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_CheckUnloadLevels, CallFunc_GetAreaInfo_Found) == 0x000080, "Member 'BP_LevelManager_C_CheckUnloadLevels::CallFunc_GetAreaInfo_Found' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_CheckUnloadLevels, CallFunc_GetLocationNameFromAreaName_LocationString_1) == 0x000088, "Member 'BP_LevelManager_C_CheckUnloadLevels::CallFunc_GetLocationNameFromAreaName_LocationString_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_CheckUnloadLevels, K2Node_Copy_ReturnValue) == 0x000098, "Member 'BP_LevelManager_C_CheckUnloadLevels::K2Node_Copy_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_CheckUnloadLevels, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000100, "Member 'BP_LevelManager_C_CheckUnloadLevels::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_CheckUnloadLevels, K2Node_SetFieldsInStruct_StructOut) == 0x000108, "Member 'BP_LevelManager_C_CheckUnloadLevels::K2Node_SetFieldsInStruct_StructOut' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_CheckUnloadLevels, CallFunc_Map_Length_ReturnValue) == 0x000170, "Member 'BP_LevelManager_C_CheckUnloadLevels::CallFunc_Map_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_CheckUnloadLevels, CallFunc_IsAreaInLoadedAreaInfos_IsLoaded) == 0x000174, "Member 'BP_LevelManager_C_CheckUnloadLevels::CallFunc_IsAreaInLoadedAreaInfos_IsLoaded' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_CheckUnloadLevels, CallFunc_IsAreaInLoadedAreaInfos_IsExist) == 0x000175, "Member 'BP_LevelManager_C_CheckUnloadLevels::CallFunc_IsAreaInLoadedAreaInfos_IsExist' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_CheckUnloadLevels, CallFunc_IsAreaInLoadedAreaInfos_AreaInfo) == 0x000178, "Member 'BP_LevelManager_C_CheckUnloadLevels::CallFunc_IsAreaInLoadedAreaInfos_AreaInfo' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_CheckUnloadLevels, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0001E0, "Member 'BP_LevelManager_C_CheckUnloadLevels::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_CheckUnloadLevels, CallFunc_IsAreaInLoadedAreaInfosWithCondition_IsLoaded) == 0x0001E1, "Member 'BP_LevelManager_C_CheckUnloadLevels::CallFunc_IsAreaInLoadedAreaInfosWithCondition_IsLoaded' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_CheckUnloadLevels, CallFunc_IsAreaInLoadedAreaInfosWithCondition_IsExist) == 0x0001E2, "Member 'BP_LevelManager_C_CheckUnloadLevels::CallFunc_IsAreaInLoadedAreaInfosWithCondition_IsExist' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_CheckUnloadLevels, CallFunc_IsAreaInLoadedAreaInfosWithCondition_AreaInfo) == 0x0001E8, "Member 'BP_LevelManager_C_CheckUnloadLevels::CallFunc_IsAreaInLoadedAreaInfosWithCondition_AreaInfo' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_CheckUnloadLevels, CallFunc_GetNotCurrentAreaName_AreaNames) == 0x000250, "Member 'BP_LevelManager_C_CheckUnloadLevels::CallFunc_GetNotCurrentAreaName_AreaNames' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_CheckUnloadLevels, CallFunc_Array_Get_Item) == 0x000260, "Member 'BP_LevelManager_C_CheckUnloadLevels::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_CheckUnloadLevels, CallFunc_AddLevelCommand_CommandNum) == 0x000268, "Member 'BP_LevelManager_C_CheckUnloadLevels::CallFunc_AddLevelCommand_CommandNum' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_CheckUnloadLevels, CallFunc_AddLevelCommand_CommandNum_1) == 0x00026C, "Member 'BP_LevelManager_C_CheckUnloadLevels::CallFunc_AddLevelCommand_CommandNum_1' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.StartPlayerAtTransform
// 0x01A0 (0x01A0 - 0x0000)
struct BP_LevelManager_C_StartPlayerAtTransform final
{
public:
	struct FTransform                             Transform;                                         // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0070(0x0040)(HasGetValueTypeHash)
	TScriptInterface<class IBPI_PlayerInterface_C> K2Node_DynamicCast_AsBPI_Player_Interface;         // 0x00B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E55[0x7];                                      // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00C8(0x0040)(HasGetValueTypeHash)
	bool                                          CallFunc_PlayerCameraReset_Dummy;                  // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E56[0x7];                                      // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0110(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0150(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue_1;         // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0168(0x0018)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E57[0x7];                                      // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0188(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LevelManager_C_StartPlayerAtTransform) == 0x000010, "Wrong alignment on BP_LevelManager_C_StartPlayerAtTransform");
static_assert(sizeof(BP_LevelManager_C_StartPlayerAtTransform) == 0x0001A0, "Wrong size on BP_LevelManager_C_StartPlayerAtTransform");
static_assert(offsetof(BP_LevelManager_C_StartPlayerAtTransform, Transform) == 0x000000, "Member 'BP_LevelManager_C_StartPlayerAtTransform::Transform' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_StartPlayerAtTransform, CallFunc_GetPlayerManager_PlayerManager) == 0x000030, "Member 'BP_LevelManager_C_StartPlayerAtTransform::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_StartPlayerAtTransform, CallFunc_BreakTransform_Location) == 0x000038, "Member 'BP_LevelManager_C_StartPlayerAtTransform::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_StartPlayerAtTransform, CallFunc_BreakTransform_Rotation) == 0x000044, "Member 'BP_LevelManager_C_StartPlayerAtTransform::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_StartPlayerAtTransform, CallFunc_BreakTransform_Scale) == 0x000050, "Member 'BP_LevelManager_C_StartPlayerAtTransform::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_StartPlayerAtTransform, CallFunc_BreakVector_X) == 0x00005C, "Member 'BP_LevelManager_C_StartPlayerAtTransform::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_StartPlayerAtTransform, CallFunc_BreakVector_Y) == 0x000060, "Member 'BP_LevelManager_C_StartPlayerAtTransform::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_StartPlayerAtTransform, CallFunc_BreakVector_Z) == 0x000064, "Member 'BP_LevelManager_C_StartPlayerAtTransform::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_StartPlayerAtTransform, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000068, "Member 'BP_LevelManager_C_StartPlayerAtTransform::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_StartPlayerAtTransform, K2Node_MakeStruct_FormatArgumentData) == 0x000070, "Member 'BP_LevelManager_C_StartPlayerAtTransform::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_StartPlayerAtTransform, K2Node_DynamicCast_AsBPI_Player_Interface) == 0x0000B0, "Member 'BP_LevelManager_C_StartPlayerAtTransform::K2Node_DynamicCast_AsBPI_Player_Interface' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_StartPlayerAtTransform, K2Node_DynamicCast_bSuccess) == 0x0000C0, "Member 'BP_LevelManager_C_StartPlayerAtTransform::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_StartPlayerAtTransform, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000C8, "Member 'BP_LevelManager_C_StartPlayerAtTransform::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_StartPlayerAtTransform, CallFunc_PlayerCameraReset_Dummy) == 0x000108, "Member 'BP_LevelManager_C_StartPlayerAtTransform::CallFunc_PlayerCameraReset_Dummy' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_StartPlayerAtTransform, K2Node_MakeStruct_FormatArgumentData_2) == 0x000110, "Member 'BP_LevelManager_C_StartPlayerAtTransform::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_StartPlayerAtTransform, K2Node_MakeArray_Array) == 0x000150, "Member 'BP_LevelManager_C_StartPlayerAtTransform::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_StartPlayerAtTransform, CallFunc_GetPlayerCharacter_ReturnValue_1) == 0x000160, "Member 'BP_LevelManager_C_StartPlayerAtTransform::CallFunc_GetPlayerCharacter_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_StartPlayerAtTransform, CallFunc_Format_ReturnValue) == 0x000168, "Member 'BP_LevelManager_C_StartPlayerAtTransform::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_StartPlayerAtTransform, CallFunc_IsValid_ReturnValue) == 0x000180, "Member 'BP_LevelManager_C_StartPlayerAtTransform::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_StartPlayerAtTransform, CallFunc_Conv_TextToString_ReturnValue) == 0x000188, "Member 'BP_LevelManager_C_StartPlayerAtTransform::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.RequestSetVisibleAndWaitAreaLBPortal
// 0x00A8 (0x00A8 - 0x0000)
struct BP_LevelManager_C_RequestSetVisibleAndWaitAreaLBPortal final
{
public:
	int32                                         LocationId;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AreaId;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         VariationID;                                       // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_CallAreaSelectVariationFunction_OutLocationID; // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_CallAreaSelectVariationFunction_OutAreaID; // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_CallAreaSelectVariationFunction_OutVariationID; // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CallAreaSelectVariationFunction_ReturnValue; // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E58[0x3];                                      // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetAreaName_ReturnValue;                  // 0x001C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E59[0x4];                                      // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftObjectPtr<class UObject>>         CallFunc_GetLbAndPortalLevelInArea_Levels;         // 0x0028(0x0010)(ReferenceParm, HasGetValueTypeHash)
	struct FS_AreaInfo                            CallFunc_GetLbAndPortalLevelInArea_AreaInfo;       // 0x0038(0x0068)(HasGetValueTypeHash)
	bool                                          CallFunc_GetLbAndPortalLevelInArea_Error;          // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LevelManager_C_RequestSetVisibleAndWaitAreaLBPortal) == 0x000008, "Wrong alignment on BP_LevelManager_C_RequestSetVisibleAndWaitAreaLBPortal");
static_assert(sizeof(BP_LevelManager_C_RequestSetVisibleAndWaitAreaLBPortal) == 0x0000A8, "Wrong size on BP_LevelManager_C_RequestSetVisibleAndWaitAreaLBPortal");
static_assert(offsetof(BP_LevelManager_C_RequestSetVisibleAndWaitAreaLBPortal, LocationId) == 0x000000, "Member 'BP_LevelManager_C_RequestSetVisibleAndWaitAreaLBPortal::LocationId' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetVisibleAndWaitAreaLBPortal, AreaId) == 0x000004, "Member 'BP_LevelManager_C_RequestSetVisibleAndWaitAreaLBPortal::AreaId' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetVisibleAndWaitAreaLBPortal, VariationID) == 0x000008, "Member 'BP_LevelManager_C_RequestSetVisibleAndWaitAreaLBPortal::VariationID' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetVisibleAndWaitAreaLBPortal, CallFunc_CallAreaSelectVariationFunction_OutLocationID) == 0x00000C, "Member 'BP_LevelManager_C_RequestSetVisibleAndWaitAreaLBPortal::CallFunc_CallAreaSelectVariationFunction_OutLocationID' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetVisibleAndWaitAreaLBPortal, CallFunc_CallAreaSelectVariationFunction_OutAreaID) == 0x000010, "Member 'BP_LevelManager_C_RequestSetVisibleAndWaitAreaLBPortal::CallFunc_CallAreaSelectVariationFunction_OutAreaID' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetVisibleAndWaitAreaLBPortal, CallFunc_CallAreaSelectVariationFunction_OutVariationID) == 0x000014, "Member 'BP_LevelManager_C_RequestSetVisibleAndWaitAreaLBPortal::CallFunc_CallAreaSelectVariationFunction_OutVariationID' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetVisibleAndWaitAreaLBPortal, CallFunc_CallAreaSelectVariationFunction_ReturnValue) == 0x000018, "Member 'BP_LevelManager_C_RequestSetVisibleAndWaitAreaLBPortal::CallFunc_CallAreaSelectVariationFunction_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetVisibleAndWaitAreaLBPortal, CallFunc_GetAreaName_ReturnValue) == 0x00001C, "Member 'BP_LevelManager_C_RequestSetVisibleAndWaitAreaLBPortal::CallFunc_GetAreaName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetVisibleAndWaitAreaLBPortal, CallFunc_GetLbAndPortalLevelInArea_Levels) == 0x000028, "Member 'BP_LevelManager_C_RequestSetVisibleAndWaitAreaLBPortal::CallFunc_GetLbAndPortalLevelInArea_Levels' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetVisibleAndWaitAreaLBPortal, CallFunc_GetLbAndPortalLevelInArea_AreaInfo) == 0x000038, "Member 'BP_LevelManager_C_RequestSetVisibleAndWaitAreaLBPortal::CallFunc_GetLbAndPortalLevelInArea_AreaInfo' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetVisibleAndWaitAreaLBPortal, CallFunc_GetLbAndPortalLevelInArea_Error) == 0x0000A0, "Member 'BP_LevelManager_C_RequestSetVisibleAndWaitAreaLBPortal::CallFunc_GetLbAndPortalLevelInArea_Error' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.IsAreaLBPortalLevelsVisible
// 0x00F0 (0x00F0 - 0x0000)
struct BP_LevelManager_C_IsAreaLBPortalLevelsVisible final
{
public:
	int32                                         LocationId;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AreaId;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         VariationID;                                       // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RawCheck;                                          // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsVisible;                                         // 0x000D(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsError;                                           // 0x000E(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E5A[0x1];                                      // 0x000F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_AreaInfo                            Area_Info;                                         // 0x0010(0x0068)(Parm, OutParm, HasGetValueTypeHash)
	class FName                                   CallFunc_GetAreaName_ReturnValue;                  // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_AreaInfo                            CallFunc_GetAreaInfo_AreaInfo;                     // 0x0080(0x0068)(HasGetValueTypeHash)
	bool                                          CallFunc_GetAreaInfo_Found;                        // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAreaLBPortalLevelsVisibleByAreaName_AllVisible; // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LevelManager_C_IsAreaLBPortalLevelsVisible) == 0x000008, "Wrong alignment on BP_LevelManager_C_IsAreaLBPortalLevelsVisible");
static_assert(sizeof(BP_LevelManager_C_IsAreaLBPortalLevelsVisible) == 0x0000F0, "Wrong size on BP_LevelManager_C_IsAreaLBPortalLevelsVisible");
static_assert(offsetof(BP_LevelManager_C_IsAreaLBPortalLevelsVisible, LocationId) == 0x000000, "Member 'BP_LevelManager_C_IsAreaLBPortalLevelsVisible::LocationId' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaLBPortalLevelsVisible, AreaId) == 0x000004, "Member 'BP_LevelManager_C_IsAreaLBPortalLevelsVisible::AreaId' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaLBPortalLevelsVisible, VariationID) == 0x000008, "Member 'BP_LevelManager_C_IsAreaLBPortalLevelsVisible::VariationID' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaLBPortalLevelsVisible, RawCheck) == 0x00000C, "Member 'BP_LevelManager_C_IsAreaLBPortalLevelsVisible::RawCheck' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaLBPortalLevelsVisible, IsVisible) == 0x00000D, "Member 'BP_LevelManager_C_IsAreaLBPortalLevelsVisible::IsVisible' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaLBPortalLevelsVisible, IsError) == 0x00000E, "Member 'BP_LevelManager_C_IsAreaLBPortalLevelsVisible::IsError' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaLBPortalLevelsVisible, Area_Info) == 0x000010, "Member 'BP_LevelManager_C_IsAreaLBPortalLevelsVisible::Area_Info' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaLBPortalLevelsVisible, CallFunc_GetAreaName_ReturnValue) == 0x000078, "Member 'BP_LevelManager_C_IsAreaLBPortalLevelsVisible::CallFunc_GetAreaName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaLBPortalLevelsVisible, CallFunc_GetAreaInfo_AreaInfo) == 0x000080, "Member 'BP_LevelManager_C_IsAreaLBPortalLevelsVisible::CallFunc_GetAreaInfo_AreaInfo' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaLBPortalLevelsVisible, CallFunc_GetAreaInfo_Found) == 0x0000E8, "Member 'BP_LevelManager_C_IsAreaLBPortalLevelsVisible::CallFunc_GetAreaInfo_Found' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaLBPortalLevelsVisible, CallFunc_IsAreaLBPortalLevelsVisibleByAreaName_AllVisible) == 0x0000E9, "Member 'BP_LevelManager_C_IsAreaLBPortalLevelsVisible::CallFunc_IsAreaLBPortalLevelsVisibleByAreaName_AllVisible' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.IsAreaLBPortalLevelsVisibleByAreaName
// 0x0090 (0x0090 - 0x0000)
struct BP_LevelManager_C_IsAreaLBPortalLevelsVisibleByAreaName final
{
public:
	class FName                                   AreaName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AllVisible;                                        // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E5B[0x7];                                      // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftObjectPtr<class UObject>>         CallFunc_GetLbAndPortalLevelInArea_Levels;         // 0x0010(0x0010)(ReferenceParm, HasGetValueTypeHash)
	struct FS_AreaInfo                            CallFunc_GetLbAndPortalLevelInArea_AreaInfo;       // 0x0020(0x0068)(HasGetValueTypeHash)
	bool                                          CallFunc_GetLbAndPortalLevelInArea_Error;          // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLevelsVisible_AllVisible;               // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LevelManager_C_IsAreaLBPortalLevelsVisibleByAreaName) == 0x000008, "Wrong alignment on BP_LevelManager_C_IsAreaLBPortalLevelsVisibleByAreaName");
static_assert(sizeof(BP_LevelManager_C_IsAreaLBPortalLevelsVisibleByAreaName) == 0x000090, "Wrong size on BP_LevelManager_C_IsAreaLBPortalLevelsVisibleByAreaName");
static_assert(offsetof(BP_LevelManager_C_IsAreaLBPortalLevelsVisibleByAreaName, AreaName) == 0x000000, "Member 'BP_LevelManager_C_IsAreaLBPortalLevelsVisibleByAreaName::AreaName' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaLBPortalLevelsVisibleByAreaName, AllVisible) == 0x000008, "Member 'BP_LevelManager_C_IsAreaLBPortalLevelsVisibleByAreaName::AllVisible' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaLBPortalLevelsVisibleByAreaName, CallFunc_GetLbAndPortalLevelInArea_Levels) == 0x000010, "Member 'BP_LevelManager_C_IsAreaLBPortalLevelsVisibleByAreaName::CallFunc_GetLbAndPortalLevelInArea_Levels' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaLBPortalLevelsVisibleByAreaName, CallFunc_GetLbAndPortalLevelInArea_AreaInfo) == 0x000020, "Member 'BP_LevelManager_C_IsAreaLBPortalLevelsVisibleByAreaName::CallFunc_GetLbAndPortalLevelInArea_AreaInfo' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaLBPortalLevelsVisibleByAreaName, CallFunc_GetLbAndPortalLevelInArea_Error) == 0x000088, "Member 'BP_LevelManager_C_IsAreaLBPortalLevelsVisibleByAreaName::CallFunc_GetLbAndPortalLevelInArea_Error' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsAreaLBPortalLevelsVisibleByAreaName, CallFunc_IsLevelsVisible_AllVisible) == 0x000089, "Member 'BP_LevelManager_C_IsAreaLBPortalLevelsVisibleByAreaName::CallFunc_IsLevelsVisible_AllVisible' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.IsLevelsVisible
// 0x0068 (0x0068 - 0x0000)
struct BP_LevelManager_C_IsLevelsVisible final
{
public:
	TArray<TSoftObjectPtr<class UObject>>         Levels;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	bool                                          AllVisible;                                        // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E5C[0x3];                                      // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UObject>                 CallFunc_Array_Get_Item;                           // 0x0020(0x0028)(HasGetValueTypeHash)
	class FName                                   CallFunc_ObjectSoftRefToName_ReturnValue;          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E5D[0x7];                                      // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelStreaming*                        CallFunc_GetStreamingLevel_ReturnValue;            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLevelVisible_ReturnValue;               // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E5E[0x2];                                      // 0x0062(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LevelManager_C_IsLevelsVisible) == 0x000008, "Wrong alignment on BP_LevelManager_C_IsLevelsVisible");
static_assert(sizeof(BP_LevelManager_C_IsLevelsVisible) == 0x000068, "Wrong size on BP_LevelManager_C_IsLevelsVisible");
static_assert(offsetof(BP_LevelManager_C_IsLevelsVisible, Levels) == 0x000000, "Member 'BP_LevelManager_C_IsLevelsVisible::Levels' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsLevelsVisible, AllVisible) == 0x000010, "Member 'BP_LevelManager_C_IsLevelsVisible::AllVisible' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsLevelsVisible, CallFunc_Array_Length_ReturnValue) == 0x000014, "Member 'BP_LevelManager_C_IsLevelsVisible::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsLevelsVisible, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BP_LevelManager_C_IsLevelsVisible::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsLevelsVisible, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'BP_LevelManager_C_IsLevelsVisible::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsLevelsVisible, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_LevelManager_C_IsLevelsVisible::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsLevelsVisible, CallFunc_ObjectSoftRefToName_ReturnValue) == 0x000048, "Member 'BP_LevelManager_C_IsLevelsVisible::CallFunc_ObjectSoftRefToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsLevelsVisible, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'BP_LevelManager_C_IsLevelsVisible::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsLevelsVisible, CallFunc_GetStreamingLevel_ReturnValue) == 0x000058, "Member 'BP_LevelManager_C_IsLevelsVisible::CallFunc_GetStreamingLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsLevelsVisible, CallFunc_IsValid_ReturnValue) == 0x000060, "Member 'BP_LevelManager_C_IsLevelsVisible::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsLevelsVisible, CallFunc_IsLevelVisible_ReturnValue) == 0x000061, "Member 'BP_LevelManager_C_IsLevelsVisible::CallFunc_IsLevelVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsLevelsVisible, CallFunc_Add_IntInt_ReturnValue) == 0x000064, "Member 'BP_LevelManager_C_IsLevelsVisible::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.SetAreaNaviLevelVisible
// 0x00C8 (0x00C8 - 0x0000)
struct BP_LevelManager_C_SetAreaNaviLevelVisible final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E5F[0x7];                                      // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftObjectPtr<class UObject>>         NavLevels;                                         // 0x0008(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E60[0x4];                                      // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftObjectPtr<class UObject>>         CallFunc_GetAllLevelInArea_Levels;                 // 0x0028(0x0010)(ReferenceParm, HasGetValueTypeHash)
	struct FS_AreaInfo                            CallFunc_GetAllLevelInArea_AreaInfo;               // 0x0038(0x0068)(HasGetValueTypeHash)
	bool                                          CallFunc_GetAllLevelInArea_Error;                  // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E61[0x3];                                      // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E62[0x3];                                      // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_ObjectSoftRefToString_ReturnValue;        // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_FindSubstring_ReturnValue;                // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LevelManager_C_SetAreaNaviLevelVisible) == 0x000008, "Wrong alignment on BP_LevelManager_C_SetAreaNaviLevelVisible");
static_assert(sizeof(BP_LevelManager_C_SetAreaNaviLevelVisible) == 0x0000C8, "Wrong size on BP_LevelManager_C_SetAreaNaviLevelVisible");
static_assert(offsetof(BP_LevelManager_C_SetAreaNaviLevelVisible, Visible) == 0x000000, "Member 'BP_LevelManager_C_SetAreaNaviLevelVisible::Visible' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_SetAreaNaviLevelVisible, NavLevels) == 0x000008, "Member 'BP_LevelManager_C_SetAreaNaviLevelVisible::NavLevels' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_SetAreaNaviLevelVisible, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BP_LevelManager_C_SetAreaNaviLevelVisible::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_SetAreaNaviLevelVisible, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'BP_LevelManager_C_SetAreaNaviLevelVisible::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_SetAreaNaviLevelVisible, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BP_LevelManager_C_SetAreaNaviLevelVisible::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_SetAreaNaviLevelVisible, CallFunc_GetAllLevelInArea_Levels) == 0x000028, "Member 'BP_LevelManager_C_SetAreaNaviLevelVisible::CallFunc_GetAllLevelInArea_Levels' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_SetAreaNaviLevelVisible, CallFunc_GetAllLevelInArea_AreaInfo) == 0x000038, "Member 'BP_LevelManager_C_SetAreaNaviLevelVisible::CallFunc_GetAllLevelInArea_AreaInfo' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_SetAreaNaviLevelVisible, CallFunc_GetAllLevelInArea_Error) == 0x0000A0, "Member 'BP_LevelManager_C_SetAreaNaviLevelVisible::CallFunc_GetAllLevelInArea_Error' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_SetAreaNaviLevelVisible, CallFunc_Array_Length_ReturnValue) == 0x0000A4, "Member 'BP_LevelManager_C_SetAreaNaviLevelVisible::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_SetAreaNaviLevelVisible, CallFunc_Less_IntInt_ReturnValue) == 0x0000A8, "Member 'BP_LevelManager_C_SetAreaNaviLevelVisible::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_SetAreaNaviLevelVisible, CallFunc_Array_Add_ReturnValue) == 0x0000AC, "Member 'BP_LevelManager_C_SetAreaNaviLevelVisible::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_SetAreaNaviLevelVisible, CallFunc_ObjectSoftRefToString_ReturnValue) == 0x0000B0, "Member 'BP_LevelManager_C_SetAreaNaviLevelVisible::CallFunc_ObjectSoftRefToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_SetAreaNaviLevelVisible, CallFunc_FindSubstring_ReturnValue) == 0x0000C0, "Member 'BP_LevelManager_C_SetAreaNaviLevelVisible::CallFunc_FindSubstring_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_SetAreaNaviLevelVisible, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0000C4, "Member 'BP_LevelManager_C_SetAreaNaviLevelVisible::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.GetCurrentAreaCameraPreset
// 0x0078 (0x0078 - 0x0000)
struct BP_LevelManager_C_GetCurrentAreaCameraPreset final
{
public:
	EPlayerCameraPreset                           Camera_preset;                                     // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Return;                                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E63[0x6];                                      // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_AreaInfo                            CallFunc_Map_Find_Value;                           // 0x0008(0x0068)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LevelManager_C_GetCurrentAreaCameraPreset) == 0x000008, "Wrong alignment on BP_LevelManager_C_GetCurrentAreaCameraPreset");
static_assert(sizeof(BP_LevelManager_C_GetCurrentAreaCameraPreset) == 0x000078, "Wrong size on BP_LevelManager_C_GetCurrentAreaCameraPreset");
static_assert(offsetof(BP_LevelManager_C_GetCurrentAreaCameraPreset, Camera_preset) == 0x000000, "Member 'BP_LevelManager_C_GetCurrentAreaCameraPreset::Camera_preset' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetCurrentAreaCameraPreset, Return) == 0x000001, "Member 'BP_LevelManager_C_GetCurrentAreaCameraPreset::Return' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetCurrentAreaCameraPreset, CallFunc_Map_Find_Value) == 0x000008, "Member 'BP_LevelManager_C_GetCurrentAreaCameraPreset::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetCurrentAreaCameraPreset, CallFunc_Map_Find_ReturnValue) == 0x000070, "Member 'BP_LevelManager_C_GetCurrentAreaCameraPreset::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.SetLastSpawnPlayerInfo
// 0x0060 (0x0060 - 0x0000)
struct BP_LevelManager_C_SetLastSpawnPlayerInfo final
{
public:
	class FName                                   PortalName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E64[0x8];                                      // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Transform;                                         // 0x0010(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_GetSceneManager_SceneManager;             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_SceneManager_C*                     K2Node_DynamicCast_AsBP_Scene_Manager;             // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LevelManager_C_SetLastSpawnPlayerInfo) == 0x000010, "Wrong alignment on BP_LevelManager_C_SetLastSpawnPlayerInfo");
static_assert(sizeof(BP_LevelManager_C_SetLastSpawnPlayerInfo) == 0x000060, "Wrong size on BP_LevelManager_C_SetLastSpawnPlayerInfo");
static_assert(offsetof(BP_LevelManager_C_SetLastSpawnPlayerInfo, PortalName) == 0x000000, "Member 'BP_LevelManager_C_SetLastSpawnPlayerInfo::PortalName' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_SetLastSpawnPlayerInfo, Transform) == 0x000010, "Member 'BP_LevelManager_C_SetLastSpawnPlayerInfo::Transform' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_SetLastSpawnPlayerInfo, CallFunc_GetSceneManager_SceneManager) == 0x000040, "Member 'BP_LevelManager_C_SetLastSpawnPlayerInfo::CallFunc_GetSceneManager_SceneManager' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_SetLastSpawnPlayerInfo, K2Node_DynamicCast_AsBP_Scene_Manager) == 0x000048, "Member 'BP_LevelManager_C_SetLastSpawnPlayerInfo::K2Node_DynamicCast_AsBP_Scene_Manager' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_SetLastSpawnPlayerInfo, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'BP_LevelManager_C_SetLastSpawnPlayerInfo::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.RequestSetBgAreaVisible
// 0x0078 (0x0078 - 0x0000)
struct BP_LevelManager_C_RequestSetBgAreaVisible final
{
public:
	class FName                                   BgAreaName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Visible;                                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E65[0x7];                                      // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftObjectPtr<class UObject>>         Levels;                                            // 0x0010(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FS_BGAreaInfo                          CallFunc_GetDataTableRowFromName_OutRow;           // 0x0020(0x0030)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E66[0x3];                                      // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddLevelCommand_CommandNum;               // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddLevelCommand_CommandNum_1;             // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E67[0x2];                                      // 0x006A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LevelManager_C_RequestSetBgAreaVisible) == 0x000008, "Wrong alignment on BP_LevelManager_C_RequestSetBgAreaVisible");
static_assert(sizeof(BP_LevelManager_C_RequestSetBgAreaVisible) == 0x000078, "Wrong size on BP_LevelManager_C_RequestSetBgAreaVisible");
static_assert(offsetof(BP_LevelManager_C_RequestSetBgAreaVisible, BgAreaName) == 0x000000, "Member 'BP_LevelManager_C_RequestSetBgAreaVisible::BgAreaName' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetBgAreaVisible, Visible) == 0x000008, "Member 'BP_LevelManager_C_RequestSetBgAreaVisible::Visible' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetBgAreaVisible, Levels) == 0x000010, "Member 'BP_LevelManager_C_RequestSetBgAreaVisible::Levels' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetBgAreaVisible, CallFunc_GetDataTableRowFromName_OutRow) == 0x000020, "Member 'BP_LevelManager_C_RequestSetBgAreaVisible::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetBgAreaVisible, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000050, "Member 'BP_LevelManager_C_RequestSetBgAreaVisible::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetBgAreaVisible, Temp_int_Array_Index_Variable) == 0x000054, "Member 'BP_LevelManager_C_RequestSetBgAreaVisible::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetBgAreaVisible, Temp_int_Loop_Num_Variable) == 0x000058, "Member 'BP_LevelManager_C_RequestSetBgAreaVisible::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetBgAreaVisible, Temp_int_Loop_Counter_Variable) == 0x00005C, "Member 'BP_LevelManager_C_RequestSetBgAreaVisible::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetBgAreaVisible, CallFunc_AddLevelCommand_CommandNum) == 0x000060, "Member 'BP_LevelManager_C_RequestSetBgAreaVisible::CallFunc_AddLevelCommand_CommandNum' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetBgAreaVisible, CallFunc_AddLevelCommand_CommandNum_1) == 0x000064, "Member 'BP_LevelManager_C_RequestSetBgAreaVisible::CallFunc_AddLevelCommand_CommandNum_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetBgAreaVisible, CallFunc_Array_Contains_ReturnValue) == 0x000068, "Member 'BP_LevelManager_C_RequestSetBgAreaVisible::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetBgAreaVisible, CallFunc_Less_IntInt_ReturnValue) == 0x000069, "Member 'BP_LevelManager_C_RequestSetBgAreaVisible::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetBgAreaVisible, CallFunc_Add_IntInt_ReturnValue) == 0x00006C, "Member 'BP_LevelManager_C_RequestSetBgAreaVisible::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestSetBgAreaVisible, CallFunc_Array_Length_ReturnValue) == 0x000070, "Member 'BP_LevelManager_C_RequestSetBgAreaVisible::CallFunc_Array_Length_ReturnValue' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.GetAreaInfoFromNative
// 0x0168 (0x0168 - 0x0000)
struct BP_LevelManager_C_GetAreaInfoFromNative final
{
public:
	class FName                                   AreName;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           OutLevenName;                                      // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetAreaInfoFromNative_ReturnValue;        // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E68[0x6];                                      // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_AreaInfo                            CallFunc_GetAreaInfo_AreaInfo;                     // 0x0020(0x0068)(HasGetValueTypeHash)
	bool                                          CallFunc_GetAreaInfo_Found;                        // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E69[0x3];                                      // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E6A[0x4];                                      // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UObject>                 CallFunc_Array_Get_Item;                           // 0x0098(0x0028)(HasGetValueTypeHash)
	class FName                                   CallFunc_ObjectSoftRefToName_ReturnValue;          // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UObject>                 CallFunc_Array_Get_Item_1;                         // 0x00D8(0x0028)(HasGetValueTypeHash)
	class FName                                   CallFunc_ObjectSoftRefToName_ReturnValue_1;        // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E6B[0x3];                                      // 0x0109(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E6C[0x3];                                      // 0x0115(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UObject>                 CallFunc_Array_Get_Item_2;                         // 0x0120(0x0028)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_ObjectSoftRefToName_ReturnValue_2;        // 0x014C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue_1;            // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue_2;            // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E6D[0x3];                                      // 0x0161(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LevelManager_C_GetAreaInfoFromNative) == 0x000008, "Wrong alignment on BP_LevelManager_C_GetAreaInfoFromNative");
static_assert(sizeof(BP_LevelManager_C_GetAreaInfoFromNative) == 0x000168, "Wrong size on BP_LevelManager_C_GetAreaInfoFromNative");
static_assert(offsetof(BP_LevelManager_C_GetAreaInfoFromNative, AreName) == 0x000000, "Member 'BP_LevelManager_C_GetAreaInfoFromNative::AreName' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetAreaInfoFromNative, OutLevenName) == 0x000008, "Member 'BP_LevelManager_C_GetAreaInfoFromNative::OutLevenName' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetAreaInfoFromNative, ReturnValue) == 0x000018, "Member 'BP_LevelManager_C_GetAreaInfoFromNative::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetAreaInfoFromNative, CallFunc_GetAreaInfoFromNative_ReturnValue) == 0x000019, "Member 'BP_LevelManager_C_GetAreaInfoFromNative::CallFunc_GetAreaInfoFromNative_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetAreaInfoFromNative, CallFunc_GetAreaInfo_AreaInfo) == 0x000020, "Member 'BP_LevelManager_C_GetAreaInfoFromNative::CallFunc_GetAreaInfo_AreaInfo' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetAreaInfoFromNative, CallFunc_GetAreaInfo_Found) == 0x000088, "Member 'BP_LevelManager_C_GetAreaInfoFromNative::CallFunc_GetAreaInfo_Found' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetAreaInfoFromNative, Temp_int_Array_Index_Variable) == 0x00008C, "Member 'BP_LevelManager_C_GetAreaInfoFromNative::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetAreaInfoFromNative, CallFunc_Array_Length_ReturnValue) == 0x000090, "Member 'BP_LevelManager_C_GetAreaInfoFromNative::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetAreaInfoFromNative, CallFunc_Array_Get_Item) == 0x000098, "Member 'BP_LevelManager_C_GetAreaInfoFromNative::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetAreaInfoFromNative, CallFunc_ObjectSoftRefToName_ReturnValue) == 0x0000C0, "Member 'BP_LevelManager_C_GetAreaInfoFromNative::CallFunc_ObjectSoftRefToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetAreaInfoFromNative, CallFunc_Array_Length_ReturnValue_1) == 0x0000C8, "Member 'BP_LevelManager_C_GetAreaInfoFromNative::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetAreaInfoFromNative, CallFunc_Array_Length_ReturnValue_2) == 0x0000CC, "Member 'BP_LevelManager_C_GetAreaInfoFromNative::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetAreaInfoFromNative, Temp_int_Loop_Counter_Variable) == 0x0000D0, "Member 'BP_LevelManager_C_GetAreaInfoFromNative::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetAreaInfoFromNative, Temp_int_Array_Index_Variable_1) == 0x0000D4, "Member 'BP_LevelManager_C_GetAreaInfoFromNative::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetAreaInfoFromNative, CallFunc_Array_Get_Item_1) == 0x0000D8, "Member 'BP_LevelManager_C_GetAreaInfoFromNative::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetAreaInfoFromNative, CallFunc_ObjectSoftRefToName_ReturnValue_1) == 0x000100, "Member 'BP_LevelManager_C_GetAreaInfoFromNative::CallFunc_ObjectSoftRefToName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetAreaInfoFromNative, CallFunc_Less_IntInt_ReturnValue) == 0x000108, "Member 'BP_LevelManager_C_GetAreaInfoFromNative::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetAreaInfoFromNative, CallFunc_Add_IntInt_ReturnValue) == 0x00010C, "Member 'BP_LevelManager_C_GetAreaInfoFromNative::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetAreaInfoFromNative, Temp_int_Loop_Counter_Variable_1) == 0x000110, "Member 'BP_LevelManager_C_GetAreaInfoFromNative::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetAreaInfoFromNative, CallFunc_Less_IntInt_ReturnValue_1) == 0x000114, "Member 'BP_LevelManager_C_GetAreaInfoFromNative::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetAreaInfoFromNative, CallFunc_Add_IntInt_ReturnValue_1) == 0x000118, "Member 'BP_LevelManager_C_GetAreaInfoFromNative::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetAreaInfoFromNative, Temp_int_Array_Index_Variable_2) == 0x00011C, "Member 'BP_LevelManager_C_GetAreaInfoFromNative::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetAreaInfoFromNative, CallFunc_Array_Get_Item_2) == 0x000120, "Member 'BP_LevelManager_C_GetAreaInfoFromNative::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetAreaInfoFromNative, CallFunc_Array_AddUnique_ReturnValue) == 0x000148, "Member 'BP_LevelManager_C_GetAreaInfoFromNative::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetAreaInfoFromNative, CallFunc_ObjectSoftRefToName_ReturnValue_2) == 0x00014C, "Member 'BP_LevelManager_C_GetAreaInfoFromNative::CallFunc_ObjectSoftRefToName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetAreaInfoFromNative, CallFunc_Array_AddUnique_ReturnValue_1) == 0x000154, "Member 'BP_LevelManager_C_GetAreaInfoFromNative::CallFunc_Array_AddUnique_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetAreaInfoFromNative, CallFunc_Array_AddUnique_ReturnValue_2) == 0x000158, "Member 'BP_LevelManager_C_GetAreaInfoFromNative::CallFunc_Array_AddUnique_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetAreaInfoFromNative, Temp_int_Loop_Counter_Variable_2) == 0x00015C, "Member 'BP_LevelManager_C_GetAreaInfoFromNative::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetAreaInfoFromNative, CallFunc_Less_IntInt_ReturnValue_2) == 0x000160, "Member 'BP_LevelManager_C_GetAreaInfoFromNative::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_GetAreaInfoFromNative, CallFunc_Add_IntInt_ReturnValue_2) == 0x000164, "Member 'BP_LevelManager_C_GetAreaInfoFromNative::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.UnvisibleEventSubQuestNPCLevel
// 0x00D0 (0x00D0 - 0x0000)
struct BP_LevelManager_C_UnvisibleEventSubQuestNPCLevel final
{
public:
	TArray<struct FS_LoadedLevelInfo>             LLoadedLevelInfoArray;                             // 0x0000(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E6E[0x3];                                      // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E6F[0x3];                                      // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E70[0x4];                                      // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_LoadedLevelInfo                     CallFunc_Array_Get_Item;                           // 0x0028(0x0048)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x007B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FName                                   CallFunc_ObjectSoftRefToName_ReturnValue;          // 0x007C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E71[0x4];                                      // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Split_PathPart;                           // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Split_FilenamePart;                       // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Split_ExtensionPart;                      // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue;                     // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Contains_ReturnValue_1;                   // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x00CB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LevelManager_C_UnvisibleEventSubQuestNPCLevel) == 0x000008, "Wrong alignment on BP_LevelManager_C_UnvisibleEventSubQuestNPCLevel");
static_assert(sizeof(BP_LevelManager_C_UnvisibleEventSubQuestNPCLevel) == 0x0000D0, "Wrong size on BP_LevelManager_C_UnvisibleEventSubQuestNPCLevel");
static_assert(offsetof(BP_LevelManager_C_UnvisibleEventSubQuestNPCLevel, LLoadedLevelInfoArray) == 0x000000, "Member 'BP_LevelManager_C_UnvisibleEventSubQuestNPCLevel::LLoadedLevelInfoArray' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_UnvisibleEventSubQuestNPCLevel, Temp_bool_True_if_break_was_hit_Variable) == 0x000010, "Member 'BP_LevelManager_C_UnvisibleEventSubQuestNPCLevel::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_UnvisibleEventSubQuestNPCLevel, Temp_int_Array_Index_Variable) == 0x000014, "Member 'BP_LevelManager_C_UnvisibleEventSubQuestNPCLevel::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_UnvisibleEventSubQuestNPCLevel, CallFunc_Not_PreBool_ReturnValue) == 0x000018, "Member 'BP_LevelManager_C_UnvisibleEventSubQuestNPCLevel::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_UnvisibleEventSubQuestNPCLevel, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'BP_LevelManager_C_UnvisibleEventSubQuestNPCLevel::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_UnvisibleEventSubQuestNPCLevel, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BP_LevelManager_C_UnvisibleEventSubQuestNPCLevel::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_UnvisibleEventSubQuestNPCLevel, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_LevelManager_C_UnvisibleEventSubQuestNPCLevel::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_UnvisibleEventSubQuestNPCLevel, CallFunc_Array_Length_ReturnValue) == 0x000070, "Member 'BP_LevelManager_C_UnvisibleEventSubQuestNPCLevel::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_UnvisibleEventSubQuestNPCLevel, CallFunc_Array_Add_ReturnValue) == 0x000074, "Member 'BP_LevelManager_C_UnvisibleEventSubQuestNPCLevel::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_UnvisibleEventSubQuestNPCLevel, CallFunc_Less_IntInt_ReturnValue) == 0x000078, "Member 'BP_LevelManager_C_UnvisibleEventSubQuestNPCLevel::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_UnvisibleEventSubQuestNPCLevel, CallFunc_BooleanAND_ReturnValue) == 0x000079, "Member 'BP_LevelManager_C_UnvisibleEventSubQuestNPCLevel::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_UnvisibleEventSubQuestNPCLevel, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00007A, "Member 'BP_LevelManager_C_UnvisibleEventSubQuestNPCLevel::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_UnvisibleEventSubQuestNPCLevel, CallFunc_BooleanAND_ReturnValue_1) == 0x00007B, "Member 'BP_LevelManager_C_UnvisibleEventSubQuestNPCLevel::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_UnvisibleEventSubQuestNPCLevel, CallFunc_ObjectSoftRefToName_ReturnValue) == 0x00007C, "Member 'BP_LevelManager_C_UnvisibleEventSubQuestNPCLevel::CallFunc_ObjectSoftRefToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_UnvisibleEventSubQuestNPCLevel, CallFunc_Conv_NameToString_ReturnValue) == 0x000088, "Member 'BP_LevelManager_C_UnvisibleEventSubQuestNPCLevel::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_UnvisibleEventSubQuestNPCLevel, CallFunc_Split_PathPart) == 0x000098, "Member 'BP_LevelManager_C_UnvisibleEventSubQuestNPCLevel::CallFunc_Split_PathPart' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_UnvisibleEventSubQuestNPCLevel, CallFunc_Split_FilenamePart) == 0x0000A8, "Member 'BP_LevelManager_C_UnvisibleEventSubQuestNPCLevel::CallFunc_Split_FilenamePart' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_UnvisibleEventSubQuestNPCLevel, CallFunc_Split_ExtensionPart) == 0x0000B8, "Member 'BP_LevelManager_C_UnvisibleEventSubQuestNPCLevel::CallFunc_Split_ExtensionPart' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_UnvisibleEventSubQuestNPCLevel, CallFunc_Contains_ReturnValue) == 0x0000C8, "Member 'BP_LevelManager_C_UnvisibleEventSubQuestNPCLevel::CallFunc_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_UnvisibleEventSubQuestNPCLevel, CallFunc_Contains_ReturnValue_1) == 0x0000C9, "Member 'BP_LevelManager_C_UnvisibleEventSubQuestNPCLevel::CallFunc_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_UnvisibleEventSubQuestNPCLevel, CallFunc_BooleanOR_ReturnValue) == 0x0000CA, "Member 'BP_LevelManager_C_UnvisibleEventSubQuestNPCLevel::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_UnvisibleEventSubQuestNPCLevel, CallFunc_BooleanAND_ReturnValue_2) == 0x0000CB, "Member 'BP_LevelManager_C_UnvisibleEventSubQuestNPCLevel::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.RestoreVisibleEventSubQuestNPCLevel
// 0x0078 (0x0078 - 0x0000)
struct BP_LevelManager_C_RestoreVisibleEventSubQuestNPCLevel final
{
public:
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E72[0x3];                                      // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E73[0x7];                                      // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_LoadedLevelInfo                     CallFunc_Array_Get_Item;                           // 0x0010(0x0048)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E74[0x3];                                      // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E75[0x3];                                      // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LevelManager_C_RestoreVisibleEventSubQuestNPCLevel) == 0x000008, "Wrong alignment on BP_LevelManager_C_RestoreVisibleEventSubQuestNPCLevel");
static_assert(sizeof(BP_LevelManager_C_RestoreVisibleEventSubQuestNPCLevel) == 0x000078, "Wrong size on BP_LevelManager_C_RestoreVisibleEventSubQuestNPCLevel");
static_assert(offsetof(BP_LevelManager_C_RestoreVisibleEventSubQuestNPCLevel, Temp_bool_True_if_break_was_hit_Variable) == 0x000000, "Member 'BP_LevelManager_C_RestoreVisibleEventSubQuestNPCLevel::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RestoreVisibleEventSubQuestNPCLevel, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_LevelManager_C_RestoreVisibleEventSubQuestNPCLevel::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RestoreVisibleEventSubQuestNPCLevel, CallFunc_Not_PreBool_ReturnValue) == 0x000008, "Member 'BP_LevelManager_C_RestoreVisibleEventSubQuestNPCLevel::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RestoreVisibleEventSubQuestNPCLevel, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_LevelManager_C_RestoreVisibleEventSubQuestNPCLevel::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RestoreVisibleEventSubQuestNPCLevel, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'BP_LevelManager_C_RestoreVisibleEventSubQuestNPCLevel::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RestoreVisibleEventSubQuestNPCLevel, CallFunc_Array_Length_ReturnValue_1) == 0x00005C, "Member 'BP_LevelManager_C_RestoreVisibleEventSubQuestNPCLevel::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RestoreVisibleEventSubQuestNPCLevel, CallFunc_Greater_IntInt_ReturnValue) == 0x000060, "Member 'BP_LevelManager_C_RestoreVisibleEventSubQuestNPCLevel::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RestoreVisibleEventSubQuestNPCLevel, Temp_int_Loop_Counter_Variable) == 0x000064, "Member 'BP_LevelManager_C_RestoreVisibleEventSubQuestNPCLevel::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RestoreVisibleEventSubQuestNPCLevel, CallFunc_Less_IntInt_ReturnValue) == 0x000068, "Member 'BP_LevelManager_C_RestoreVisibleEventSubQuestNPCLevel::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RestoreVisibleEventSubQuestNPCLevel, CallFunc_Add_IntInt_ReturnValue) == 0x00006C, "Member 'BP_LevelManager_C_RestoreVisibleEventSubQuestNPCLevel::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RestoreVisibleEventSubQuestNPCLevel, CallFunc_BooleanAND_ReturnValue) == 0x000070, "Member 'BP_LevelManager_C_RestoreVisibleEventSubQuestNPCLevel::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.IsNeedFrameWait
// 0x0001 (0x0001 - 0x0000)
struct BP_LevelManager_C_IsNeedFrameWait final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LevelManager_C_IsNeedFrameWait) == 0x000001, "Wrong alignment on BP_LevelManager_C_IsNeedFrameWait");
static_assert(sizeof(BP_LevelManager_C_IsNeedFrameWait) == 0x000001, "Wrong size on BP_LevelManager_C_IsNeedFrameWait");
static_assert(offsetof(BP_LevelManager_C_IsNeedFrameWait, ReturnValue) == 0x000000, "Member 'BP_LevelManager_C_IsNeedFrameWait::ReturnValue' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.RequestUnloadUnneedLevels
// 0x0038 (0x0038 - 0x0000)
struct BP_LevelManager_C_RequestUnloadUnneedLevels final
{
public:
	class FName                                   UnloadAreaName;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   NextAreaName;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UObject>>         CallFunc_GetUnusedLevelWhenUnloadArea_ShouldUnloadLevels; // 0x0010(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E76[0x3];                                      // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LevelManager_C_RequestUnloadUnneedLevels) == 0x000008, "Wrong alignment on BP_LevelManager_C_RequestUnloadUnneedLevels");
static_assert(sizeof(BP_LevelManager_C_RequestUnloadUnneedLevels) == 0x000038, "Wrong size on BP_LevelManager_C_RequestUnloadUnneedLevels");
static_assert(offsetof(BP_LevelManager_C_RequestUnloadUnneedLevels, UnloadAreaName) == 0x000000, "Member 'BP_LevelManager_C_RequestUnloadUnneedLevels::UnloadAreaName' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestUnloadUnneedLevels, NextAreaName) == 0x000008, "Member 'BP_LevelManager_C_RequestUnloadUnneedLevels::NextAreaName' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestUnloadUnneedLevels, CallFunc_GetUnusedLevelWhenUnloadArea_ShouldUnloadLevels) == 0x000010, "Member 'BP_LevelManager_C_RequestUnloadUnneedLevels::CallFunc_GetUnusedLevelWhenUnloadArea_ShouldUnloadLevels' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestUnloadUnneedLevels, Temp_int_Array_Index_Variable) == 0x000020, "Member 'BP_LevelManager_C_RequestUnloadUnneedLevels::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestUnloadUnneedLevels, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'BP_LevelManager_C_RequestUnloadUnneedLevels::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestUnloadUnneedLevels, Temp_int_Loop_Num_Variable) == 0x000028, "Member 'BP_LevelManager_C_RequestUnloadUnneedLevels::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestUnloadUnneedLevels, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'BP_LevelManager_C_RequestUnloadUnneedLevels::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestUnloadUnneedLevels, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'BP_LevelManager_C_RequestUnloadUnneedLevels::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_RequestUnloadUnneedLevels, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'BP_LevelManager_C_RequestUnloadUnneedLevels::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.IsValidCurrentSimulatorLevelInfosName
// 0x0004 (0x0004 - 0x0000)
struct BP_LevelManager_C_IsValidCurrentSimulatorLevelInfosName final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue_1;          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LevelManager_C_IsValidCurrentSimulatorLevelInfosName) == 0x000001, "Wrong alignment on BP_LevelManager_C_IsValidCurrentSimulatorLevelInfosName");
static_assert(sizeof(BP_LevelManager_C_IsValidCurrentSimulatorLevelInfosName) == 0x000004, "Wrong size on BP_LevelManager_C_IsValidCurrentSimulatorLevelInfosName");
static_assert(offsetof(BP_LevelManager_C_IsValidCurrentSimulatorLevelInfosName, ReturnValue) == 0x000000, "Member 'BP_LevelManager_C_IsValidCurrentSimulatorLevelInfosName::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsValidCurrentSimulatorLevelInfosName, CallFunc_NotEqual_NameName_ReturnValue) == 0x000001, "Member 'BP_LevelManager_C_IsValidCurrentSimulatorLevelInfosName::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsValidCurrentSimulatorLevelInfosName, CallFunc_NotEqual_NameName_ReturnValue_1) == 0x000002, "Member 'BP_LevelManager_C_IsValidCurrentSimulatorLevelInfosName::CallFunc_NotEqual_NameName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_IsValidCurrentSimulatorLevelInfosName, CallFunc_BooleanAND_ReturnValue) == 0x000003, "Member 'BP_LevelManager_C_IsValidCurrentSimulatorLevelInfosName::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_LevelManager.BP_LevelManager_C.AreaNameToID
// 0x0020 (0x0020 - 0x0000)
struct BP_LevelManager_C_AreaNameToID final
{
public:
	class FName                                   AreaName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LocationId;                                        // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AreaId;                                            // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         VariationID;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AreaNameToID_Internal_LocationID;         // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AreaNameToID_Internal_AreaID;             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AreaNameToID_Internal_VariationID;        // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LevelManager_C_AreaNameToID) == 0x000004, "Wrong alignment on BP_LevelManager_C_AreaNameToID");
static_assert(sizeof(BP_LevelManager_C_AreaNameToID) == 0x000020, "Wrong size on BP_LevelManager_C_AreaNameToID");
static_assert(offsetof(BP_LevelManager_C_AreaNameToID, AreaName) == 0x000000, "Member 'BP_LevelManager_C_AreaNameToID::AreaName' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_AreaNameToID, LocationId) == 0x000008, "Member 'BP_LevelManager_C_AreaNameToID::LocationId' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_AreaNameToID, AreaId) == 0x00000C, "Member 'BP_LevelManager_C_AreaNameToID::AreaId' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_AreaNameToID, VariationID) == 0x000010, "Member 'BP_LevelManager_C_AreaNameToID::VariationID' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_AreaNameToID, CallFunc_AreaNameToID_Internal_LocationID) == 0x000014, "Member 'BP_LevelManager_C_AreaNameToID::CallFunc_AreaNameToID_Internal_LocationID' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_AreaNameToID, CallFunc_AreaNameToID_Internal_AreaID) == 0x000018, "Member 'BP_LevelManager_C_AreaNameToID::CallFunc_AreaNameToID_Internal_AreaID' has a wrong offset!");
static_assert(offsetof(BP_LevelManager_C_AreaNameToID, CallFunc_AreaNameToID_Internal_VariationID) == 0x00001C, "Member 'BP_LevelManager_C_AreaNameToID::CallFunc_AreaNameToID_Internal_VariationID' has a wrong offset!");

}

