#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ENpcComponent

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "BattlePrototype_structs.hpp"
#include "E_SASKind_structs.hpp"
#include "Engine_structs.hpp"
#include "FPlayerAIBattleThinkData_structs.hpp"
#include "FSASFireParam_structs.hpp"
#include "FSASMetalParam_structs.hpp"
#include "FSASElectricParam_structs.hpp"
#include "EPlayerAIBattleThinkType_structs.hpp"
#include "FNotifyAttackData_structs.hpp"
#include "Enum_EnemySound_structs.hpp"


namespace SDK::Params
{

// Function BP_ENpcComponent.BP_ENpcComponent_C.EventDispatcherSASStart__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct BP_ENpcComponent_C_EventDispatcherSASStart__DelegateSignature final
{
public:
	EPlayerID                                     SAS_PlayerID;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ENpcComponent_C_EventDispatcherSASStart__DelegateSignature) == 0x000001, "Wrong alignment on BP_ENpcComponent_C_EventDispatcherSASStart__DelegateSignature");
static_assert(sizeof(BP_ENpcComponent_C_EventDispatcherSASStart__DelegateSignature) == 0x000001, "Wrong size on BP_ENpcComponent_C_EventDispatcherSASStart__DelegateSignature");
static_assert(offsetof(BP_ENpcComponent_C_EventDispatcherSASStart__DelegateSignature, SAS_PlayerID) == 0x000000, "Member 'BP_ENpcComponent_C_EventDispatcherSASStart__DelegateSignature::SAS_PlayerID' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.ExecuteUbergraph_BP_ENpcComponent
// 0x0190 (0x0190 - 0x0000)
struct BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EBrainFieldENPCType                           Temp_byte_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9421[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9422[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattlePlayer_C*                      K2Node_DynamicCast_AsRSBattle_Player;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_UpdateDiscoverIcon_bDummy;                // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBrainFieldENPCType                           Temp_byte_Variable_1;                              // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9423[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IPlayerInterface>      CallFunc_GetPlayerID_self_CastInput;               // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerID                                     CallFunc_GetPlayerID_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9424[0x5];                                     // 0x003B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_EnemyManager_C*                     CallFunc_GetEnemyManager_Manager;                  // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9425[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_EnemyManager_C*                     CallFunc_GetEnemyManager_Manager_1;                // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBrainFieldENPCType                           K2Node_Select_Default;                             // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9426[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BrainFieldManager_C*                CallFunc_GetBrainFieldManager_Manager;             // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BrainFieldManager_C*                CallFunc_GetBrainFieldManager_Manager_1;           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9427[0x3];                                     // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(float DeltaSeconds)>           K2Node_CreateDelegate_OutputDelegate;              // 0x0074(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_9428[0x4];                                     // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BrainCrashManager_C*                CallFunc_GetBrainCrashManager_Manager;             // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable_1;               // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9429[0x6];                                     // 0x0092(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BrainCrashManager_C*                CallFunc_GetBrainCrashManager_Manager_1;           // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_942A[0x7];                                     // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IPlayerInterface>      CallFunc_GetPlayerID_self_CastInput_1;             // 0x00A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerID                                     CallFunc_GetPlayerID_ReturnValue_1;                // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x00BB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_5;        // 0x00BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x00BE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_6;        // 0x00BF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_7;        // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_8;        // 0x00C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x00C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_9;        // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_5;                  // 0x00C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_6;                  // 0x00C6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_7;                  // 0x00C7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_8;                  // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_10;       // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_11;       // 0x00CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_9;                  // 0x00CB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_942B[0x3];                                     // 0x00CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APsychicObjectManager_C*                CallFunc_GetPsychicObjectManager_PsyObjManager;    // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APsychicObjectManager_C*                CallFunc_GetPsychicObjectManager_PsyObjManager_1;  // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable_1;                     // 0x00E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_942C[0x5];                                     // 0x00E3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_psy_obj_actor_in;               // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_target_actor_in;                // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IPlayerInterface>      CallFunc_GetPlayerID_self_CastInput_2;             // 0x0100(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerID                                     CallFunc_GetPlayerID_ReturnValue_2;                // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_942D[0x6];                                     // 0x0112(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BrainFieldManager_C*                CallFunc_GetBrainFieldManager_Manager_2;           // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BrainCrashManager_C*                CallFunc_GetBrainCrashManager_Manager_2;           // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_942E[0x3];                                     // 0x0129(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x012C(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AActor* Psy_obj_actor_in, class AActor* Target_actor_in)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0134(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0144(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_942F[0x3];                                     // 0x0145(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_10;                 // 0x014C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_11;                 // 0x014D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9430[0x2];                                     // 0x014E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0154(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x0155(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x0156(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0157(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_EnemyInterface_C> CallFunc_GetEnemySpawn_self_CastInput;             // 0x0158(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetEnemySpawn_return;                     // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0169(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9431[0x6];                                     // 0x016A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABattleSimulatorManager*                CallFunc_GetBattleSimulatorManager_BattleSimulatorManager; // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMissionActive_ReturnValue;              // 0x0179(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnableStartBattle_bBattleSimulator;     // 0x017A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnableStartBattle_bEnableStartBattle;   // 0x017B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9432[0x4];                                     // 0x017C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_LevelManager_C*                     CallFunc_GetLevelManager_LevelManager;             // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidCurrentSimulatorLevelInfosName_ReturnValue; // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent) == 0x000008, "Wrong alignment on BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent");
static_assert(sizeof(BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent) == 0x000190, "Wrong size on BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent");
static_assert(offsetof(BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent, EntryPoint) == 0x000000, "Member 'BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent, Temp_bool_Has_Been_Initd_Variable) == 0x000004, "Member 'BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent, Temp_byte_Variable) == 0x000005, "Member 'BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent, K2Node_Event_DeltaSeconds) == 0x000008, "Member 'BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent, K2Node_DynamicCast_AsRSBattle_Player) == 0x000018, "Member 'BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent::K2Node_DynamicCast_AsRSBattle_Player' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent, CallFunc_UpdateDiscoverIcon_bDummy) == 0x000021, "Member 'BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent::CallFunc_UpdateDiscoverIcon_bDummy' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent, Temp_bool_Variable) == 0x000022, "Member 'BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent, K2Node_Event_EndPlayReason) == 0x000023, "Member 'BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent, Temp_byte_Variable_1) == 0x000024, "Member 'BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent, CallFunc_GetPlayerID_self_CastInput) == 0x000028, "Member 'BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent::CallFunc_GetPlayerID_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent, CallFunc_GetPlayerID_ReturnValue) == 0x000038, "Member 'BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent::CallFunc_GetPlayerID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000039, "Member 'BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00003A, "Member 'BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent, CallFunc_GetEnemyManager_Manager) == 0x000040, "Member 'BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent::CallFunc_GetEnemyManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent, CallFunc_BooleanOR_ReturnValue) == 0x000048, "Member 'BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent, CallFunc_GetEnemyManager_Manager_1) == 0x000050, "Member 'BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent::CallFunc_GetEnemyManager_Manager_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent, K2Node_Select_Default) == 0x000058, "Member 'BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent, CallFunc_GetBrainFieldManager_Manager) == 0x000060, "Member 'BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent::CallFunc_GetBrainFieldManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent, CallFunc_GetBrainFieldManager_Manager_1) == 0x000068, "Member 'BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent::CallFunc_GetBrainFieldManager_Manager_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent, CallFunc_IsValid_ReturnValue) == 0x000070, "Member 'BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent, K2Node_CreateDelegate_OutputDelegate) == 0x000074, "Member 'BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent, CallFunc_GetBrainCrashManager_Manager) == 0x000088, "Member 'BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent::CallFunc_GetBrainCrashManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent, CallFunc_IsValid_ReturnValue_1) == 0x000090, "Member 'BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent, Temp_bool_Has_Been_Initd_Variable_1) == 0x000091, "Member 'BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent::Temp_bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent, CallFunc_GetBrainCrashManager_Manager_1) == 0x000098, "Member 'BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent::CallFunc_GetBrainCrashManager_Manager_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent, CallFunc_IsValid_ReturnValue_2) == 0x0000A0, "Member 'BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent, CallFunc_GetPlayerID_self_CastInput_1) == 0x0000A8, "Member 'BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent::CallFunc_GetPlayerID_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent, CallFunc_GetPlayerID_ReturnValue_1) == 0x0000B8, "Member 'BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent::CallFunc_GetPlayerID_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x0000B9, "Member 'BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x0000BA, "Member 'BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x0000BB, "Member 'BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent, CallFunc_BooleanOR_ReturnValue_1) == 0x0000BC, "Member 'BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent, CallFunc_EqualEqual_ByteByte_ReturnValue_5) == 0x0000BD, "Member 'BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent::CallFunc_EqualEqual_ByteByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent, CallFunc_BooleanOR_ReturnValue_2) == 0x0000BE, "Member 'BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent, CallFunc_EqualEqual_ByteByte_ReturnValue_6) == 0x0000BF, "Member 'BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent::CallFunc_EqualEqual_ByteByte_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent, CallFunc_EqualEqual_ByteByte_ReturnValue_7) == 0x0000C0, "Member 'BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent::CallFunc_EqualEqual_ByteByte_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent, CallFunc_BooleanOR_ReturnValue_3) == 0x0000C1, "Member 'BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent, CallFunc_EqualEqual_ByteByte_ReturnValue_8) == 0x0000C2, "Member 'BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent::CallFunc_EqualEqual_ByteByte_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent, CallFunc_BooleanOR_ReturnValue_4) == 0x0000C3, "Member 'BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent, CallFunc_EqualEqual_ByteByte_ReturnValue_9) == 0x0000C4, "Member 'BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent::CallFunc_EqualEqual_ByteByte_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent, CallFunc_BooleanOR_ReturnValue_5) == 0x0000C5, "Member 'BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent::CallFunc_BooleanOR_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent, CallFunc_BooleanOR_ReturnValue_6) == 0x0000C6, "Member 'BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent::CallFunc_BooleanOR_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent, CallFunc_BooleanOR_ReturnValue_7) == 0x0000C7, "Member 'BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent::CallFunc_BooleanOR_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent, CallFunc_BooleanOR_ReturnValue_8) == 0x0000C8, "Member 'BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent::CallFunc_BooleanOR_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent, CallFunc_EqualEqual_ByteByte_ReturnValue_10) == 0x0000C9, "Member 'BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent::CallFunc_EqualEqual_ByteByte_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent, CallFunc_EqualEqual_ByteByte_ReturnValue_11) == 0x0000CA, "Member 'BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent::CallFunc_EqualEqual_ByteByte_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent, CallFunc_BooleanOR_ReturnValue_9) == 0x0000CB, "Member 'BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent::CallFunc_BooleanOR_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent, Temp_bool_IsClosed_Variable) == 0x0000CC, "Member 'BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent, CallFunc_GetPsychicObjectManager_PsyObjManager) == 0x0000D0, "Member 'BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent::CallFunc_GetPsychicObjectManager_PsyObjManager' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent, CallFunc_GetPsychicObjectManager_PsyObjManager_1) == 0x0000D8, "Member 'BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent::CallFunc_GetPsychicObjectManager_PsyObjManager_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent, CallFunc_IsValid_ReturnValue_3) == 0x0000E0, "Member 'BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent, CallFunc_IsValid_ReturnValue_4) == 0x0000E1, "Member 'BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent, Temp_bool_IsClosed_Variable_1) == 0x0000E2, "Member 'BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent::Temp_bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent, K2Node_CustomEvent_psy_obj_actor_in) == 0x0000E8, "Member 'BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent::K2Node_CustomEvent_psy_obj_actor_in' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent, K2Node_CustomEvent_target_actor_in) == 0x0000F0, "Member 'BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent::K2Node_CustomEvent_target_actor_in' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent, Temp_int_Variable) == 0x0000F8, "Member 'BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent, CallFunc_Add_IntInt_ReturnValue) == 0x0000FC, "Member 'BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent, CallFunc_GetPlayerID_self_CastInput_2) == 0x000100, "Member 'BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent::CallFunc_GetPlayerID_self_CastInput_2' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent, CallFunc_GetPlayerID_ReturnValue_2) == 0x000110, "Member 'BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent::CallFunc_GetPlayerID_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent, K2Node_SwitchEnum_CmpSuccess) == 0x000111, "Member 'BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent, CallFunc_GetBrainFieldManager_Manager_2) == 0x000118, "Member 'BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent::CallFunc_GetBrainFieldManager_Manager_2' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent, CallFunc_GetBrainCrashManager_Manager_2) == 0x000120, "Member 'BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent::CallFunc_GetBrainCrashManager_Manager_2' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent, CallFunc_IsValid_ReturnValue_5) == 0x000128, "Member 'BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent, Temp_float_Variable) == 0x00012C, "Member 'BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent, CallFunc_Array_Add_ReturnValue) == 0x000130, "Member 'BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent, K2Node_CreateDelegate_OutputDelegate_1) == 0x000134, "Member 'BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent, Temp_bool_Variable_1) == 0x000144, "Member 'BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent, CallFunc_Array_Add_ReturnValue_1) == 0x000148, "Member 'BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent, CallFunc_BooleanOR_ReturnValue_10) == 0x00014C, "Member 'BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent::CallFunc_BooleanOR_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent, CallFunc_BooleanOR_ReturnValue_11) == 0x00014D, "Member 'BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent::CallFunc_BooleanOR_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent, CallFunc_MakeLiteralInt_ReturnValue) == 0x000150, "Member 'BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000154, "Member 'BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent, CallFunc_IsValid_ReturnValue_6) == 0x000155, "Member 'BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent, CallFunc_IsValid_ReturnValue_7) == 0x000156, "Member 'BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent, CallFunc_IsVisible_ReturnValue) == 0x000157, "Member 'BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent, CallFunc_GetEnemySpawn_self_CastInput) == 0x000158, "Member 'BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent::CallFunc_GetEnemySpawn_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent, CallFunc_GetEnemySpawn_return) == 0x000168, "Member 'BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent::CallFunc_GetEnemySpawn_return' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000169, "Member 'BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent, CallFunc_GetBattleSimulatorManager_BattleSimulatorManager) == 0x000170, "Member 'BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent::CallFunc_GetBattleSimulatorManager_BattleSimulatorManager' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent, CallFunc_IsValid_ReturnValue_8) == 0x000178, "Member 'BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent, CallFunc_IsMissionActive_ReturnValue) == 0x000179, "Member 'BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent::CallFunc_IsMissionActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent, CallFunc_IsEnableStartBattle_bBattleSimulator) == 0x00017A, "Member 'BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent::CallFunc_IsEnableStartBattle_bBattleSimulator' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent, CallFunc_IsEnableStartBattle_bEnableStartBattle) == 0x00017B, "Member 'BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent::CallFunc_IsEnableStartBattle_bEnableStartBattle' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent, CallFunc_GetLevelManager_LevelManager) == 0x000180, "Member 'BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent::CallFunc_GetLevelManager_LevelManager' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent, CallFunc_IsValidCurrentSimulatorLevelInfosName_ReturnValue) == 0x000188, "Member 'BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent::CallFunc_IsValidCurrentSimulatorLevelInfosName_ReturnValue' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.OnInterceptableThrow
// 0x0010 (0x0010 - 0x0000)
struct BP_ENpcComponent_C_OnInterceptableThrow final
{
public:
	class AActor*                                 Psy_obj_actor_in;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Target_actor_in;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ENpcComponent_C_OnInterceptableThrow) == 0x000008, "Wrong alignment on BP_ENpcComponent_C_OnInterceptableThrow");
static_assert(sizeof(BP_ENpcComponent_C_OnInterceptableThrow) == 0x000010, "Wrong size on BP_ENpcComponent_C_OnInterceptableThrow");
static_assert(offsetof(BP_ENpcComponent_C_OnInterceptableThrow, Psy_obj_actor_in) == 0x000000, "Member 'BP_ENpcComponent_C_OnInterceptableThrow::Psy_obj_actor_in' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_OnInterceptableThrow, Target_actor_in) == 0x000008, "Member 'BP_ENpcComponent_C_OnInterceptableThrow::Target_actor_in' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_ENpcComponent_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ENpcComponent_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BP_ENpcComponent_C_ReceiveEndPlay");
static_assert(sizeof(BP_ENpcComponent_C_ReceiveEndPlay) == 0x000001, "Wrong size on BP_ENpcComponent_C_ReceiveEndPlay");
static_assert(offsetof(BP_ENpcComponent_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BP_ENpcComponent_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_ENpcComponent_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ENpcComponent_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_ENpcComponent_C_ReceiveTick");
static_assert(sizeof(BP_ENpcComponent_C_ReceiveTick) == 0x000004, "Wrong size on BP_ENpcComponent_C_ReceiveTick");
static_assert(offsetof(BP_ENpcComponent_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_ENpcComponent_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.SetEnemyBrainCrashPerformance
// 0x0001 (0x0001 - 0x0000)
struct BP_ENpcComponent_C_SetEnemyBrainCrashPerformance final
{
public:
	bool                                          bReturn;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ENpcComponent_C_SetEnemyBrainCrashPerformance) == 0x000001, "Wrong alignment on BP_ENpcComponent_C_SetEnemyBrainCrashPerformance");
static_assert(sizeof(BP_ENpcComponent_C_SetEnemyBrainCrashPerformance) == 0x000001, "Wrong size on BP_ENpcComponent_C_SetEnemyBrainCrashPerformance");
static_assert(offsetof(BP_ENpcComponent_C_SetEnemyBrainCrashPerformance, bReturn) == 0x000000, "Member 'BP_ENpcComponent_C_SetEnemyBrainCrashPerformance::bReturn' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.SetEnemyBrainFieldEnd
// 0x0003 (0x0003 - 0x0000)
struct BP_ENpcComponent_C_SetEnemyBrainFieldEnd final
{
public:
	bool                                          bMoveBrainField;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bDummy;                                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Exec_Drive_bDummy;                        // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ENpcComponent_C_SetEnemyBrainFieldEnd) == 0x000001, "Wrong alignment on BP_ENpcComponent_C_SetEnemyBrainFieldEnd");
static_assert(sizeof(BP_ENpcComponent_C_SetEnemyBrainFieldEnd) == 0x000003, "Wrong size on BP_ENpcComponent_C_SetEnemyBrainFieldEnd");
static_assert(offsetof(BP_ENpcComponent_C_SetEnemyBrainFieldEnd, bMoveBrainField) == 0x000000, "Member 'BP_ENpcComponent_C_SetEnemyBrainFieldEnd::bMoveBrainField' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_SetEnemyBrainFieldEnd, bDummy) == 0x000001, "Member 'BP_ENpcComponent_C_SetEnemyBrainFieldEnd::bDummy' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_SetEnemyBrainFieldEnd, CallFunc_Exec_Drive_bDummy) == 0x000002, "Member 'BP_ENpcComponent_C_SetEnemyBrainFieldEnd::CallFunc_Exec_Drive_bDummy' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.OnSwitchVisibleBrainFieldLevel
// 0x0001 (0x0001 - 0x0000)
struct BP_ENpcComponent_C_OnSwitchVisibleBrainFieldLevel final
{
public:
	bool                                          bVisible;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ENpcComponent_C_OnSwitchVisibleBrainFieldLevel) == 0x000001, "Wrong alignment on BP_ENpcComponent_C_OnSwitchVisibleBrainFieldLevel");
static_assert(sizeof(BP_ENpcComponent_C_OnSwitchVisibleBrainFieldLevel) == 0x000001, "Wrong size on BP_ENpcComponent_C_OnSwitchVisibleBrainFieldLevel");
static_assert(offsetof(BP_ENpcComponent_C_OnSwitchVisibleBrainFieldLevel, bVisible) == 0x000000, "Member 'BP_ENpcComponent_C_OnSwitchVisibleBrainFieldLevel::bVisible' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.SetEnemyWait
// 0x0070 (0x0070 - 0x0000)
struct BP_ENpcComponent_C_SetEnemyWait final
{
public:
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9433[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IEventInterface>       K2Node_DynamicCast_AsEvent_Interface;              // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EventStart_ReturnValue;                   // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9434[0x6];                                     // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_EnemyInterface_C> K2Node_DynamicCast_AsBPI_Enemy_Interface;          // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OnEnemyBrainFieldFinishWeapon_Dummy;      // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9435[0x6];                                     // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_EnemyInterface_C> K2Node_DynamicCast_AsBPI_Enemy_Interface_1;        // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OnEnemyBrainFieldResetAction_bReset;      // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9436[0x6];                                     // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_EnemyInterface_C> K2Node_DynamicCast_AsBPI_Enemy_Interface_2;        // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OnEnemyBrainFieldResetStatus_Dummy;       // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ENpcComponent_C_SetEnemyWait) == 0x000008, "Wrong alignment on BP_ENpcComponent_C_SetEnemyWait");
static_assert(sizeof(BP_ENpcComponent_C_SetEnemyWait) == 0x000070, "Wrong size on BP_ENpcComponent_C_SetEnemyWait");
static_assert(offsetof(BP_ENpcComponent_C_SetEnemyWait, CallFunc_GetOwner_ReturnValue) == 0x000000, "Member 'BP_ENpcComponent_C_SetEnemyWait::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_SetEnemyWait, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_ENpcComponent_C_SetEnemyWait::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_SetEnemyWait, K2Node_DynamicCast_AsEvent_Interface) == 0x000010, "Member 'BP_ENpcComponent_C_SetEnemyWait::K2Node_DynamicCast_AsEvent_Interface' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_SetEnemyWait, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_ENpcComponent_C_SetEnemyWait::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_SetEnemyWait, CallFunc_EventStart_ReturnValue) == 0x000021, "Member 'BP_ENpcComponent_C_SetEnemyWait::CallFunc_EventStart_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_SetEnemyWait, K2Node_DynamicCast_AsBPI_Enemy_Interface) == 0x000028, "Member 'BP_ENpcComponent_C_SetEnemyWait::K2Node_DynamicCast_AsBPI_Enemy_Interface' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_SetEnemyWait, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'BP_ENpcComponent_C_SetEnemyWait::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_SetEnemyWait, CallFunc_OnEnemyBrainFieldFinishWeapon_Dummy) == 0x000039, "Member 'BP_ENpcComponent_C_SetEnemyWait::CallFunc_OnEnemyBrainFieldFinishWeapon_Dummy' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_SetEnemyWait, K2Node_DynamicCast_AsBPI_Enemy_Interface_1) == 0x000040, "Member 'BP_ENpcComponent_C_SetEnemyWait::K2Node_DynamicCast_AsBPI_Enemy_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_SetEnemyWait, K2Node_DynamicCast_bSuccess_2) == 0x000050, "Member 'BP_ENpcComponent_C_SetEnemyWait::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_SetEnemyWait, CallFunc_OnEnemyBrainFieldResetAction_bReset) == 0x000051, "Member 'BP_ENpcComponent_C_SetEnemyWait::CallFunc_OnEnemyBrainFieldResetAction_bReset' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_SetEnemyWait, K2Node_DynamicCast_AsBPI_Enemy_Interface_2) == 0x000058, "Member 'BP_ENpcComponent_C_SetEnemyWait::K2Node_DynamicCast_AsBPI_Enemy_Interface_2' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_SetEnemyWait, K2Node_DynamicCast_bSuccess_3) == 0x000068, "Member 'BP_ENpcComponent_C_SetEnemyWait::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_SetEnemyWait, CallFunc_OnEnemyBrainFieldResetStatus_Dummy) == 0x000069, "Member 'BP_ENpcComponent_C_SetEnemyWait::CallFunc_OnEnemyBrainFieldResetStatus_Dummy' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.ResetEnemyWait
// 0x0070 (0x0070 - 0x0000)
struct BP_ENpcComponent_C_ResetEnemyWait final
{
public:
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9437[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IEventInterface>       K2Node_DynamicCast_AsEvent_Interface;              // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EventEnd_ReturnValue;                     // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9438[0x6];                                     // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_EnemyInterface_C> K2Node_DynamicCast_AsBPI_Enemy_Interface;          // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OnEnemyBrainFieldFinishWeapon_Dummy;      // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9439[0x6];                                     // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_EnemyInterface_C> K2Node_DynamicCast_AsBPI_Enemy_Interface_1;        // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OnEnemyBrainFieldResetAction_bReset;      // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_943A[0x6];                                     // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_EnemyInterface_C> K2Node_DynamicCast_AsBPI_Enemy_Interface_2;        // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OnEnemyBrainFieldResetStatus_Dummy;       // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ENpcComponent_C_ResetEnemyWait) == 0x000008, "Wrong alignment on BP_ENpcComponent_C_ResetEnemyWait");
static_assert(sizeof(BP_ENpcComponent_C_ResetEnemyWait) == 0x000070, "Wrong size on BP_ENpcComponent_C_ResetEnemyWait");
static_assert(offsetof(BP_ENpcComponent_C_ResetEnemyWait, CallFunc_GetOwner_ReturnValue) == 0x000000, "Member 'BP_ENpcComponent_C_ResetEnemyWait::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_ResetEnemyWait, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_ENpcComponent_C_ResetEnemyWait::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_ResetEnemyWait, K2Node_DynamicCast_AsEvent_Interface) == 0x000010, "Member 'BP_ENpcComponent_C_ResetEnemyWait::K2Node_DynamicCast_AsEvent_Interface' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_ResetEnemyWait, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_ENpcComponent_C_ResetEnemyWait::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_ResetEnemyWait, CallFunc_EventEnd_ReturnValue) == 0x000021, "Member 'BP_ENpcComponent_C_ResetEnemyWait::CallFunc_EventEnd_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_ResetEnemyWait, K2Node_DynamicCast_AsBPI_Enemy_Interface) == 0x000028, "Member 'BP_ENpcComponent_C_ResetEnemyWait::K2Node_DynamicCast_AsBPI_Enemy_Interface' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_ResetEnemyWait, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'BP_ENpcComponent_C_ResetEnemyWait::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_ResetEnemyWait, CallFunc_OnEnemyBrainFieldFinishWeapon_Dummy) == 0x000039, "Member 'BP_ENpcComponent_C_ResetEnemyWait::CallFunc_OnEnemyBrainFieldFinishWeapon_Dummy' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_ResetEnemyWait, K2Node_DynamicCast_AsBPI_Enemy_Interface_1) == 0x000040, "Member 'BP_ENpcComponent_C_ResetEnemyWait::K2Node_DynamicCast_AsBPI_Enemy_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_ResetEnemyWait, K2Node_DynamicCast_bSuccess_2) == 0x000050, "Member 'BP_ENpcComponent_C_ResetEnemyWait::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_ResetEnemyWait, CallFunc_OnEnemyBrainFieldResetAction_bReset) == 0x000051, "Member 'BP_ENpcComponent_C_ResetEnemyWait::CallFunc_OnEnemyBrainFieldResetAction_bReset' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_ResetEnemyWait, K2Node_DynamicCast_AsBPI_Enemy_Interface_2) == 0x000058, "Member 'BP_ENpcComponent_C_ResetEnemyWait::K2Node_DynamicCast_AsBPI_Enemy_Interface_2' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_ResetEnemyWait, K2Node_DynamicCast_bSuccess_3) == 0x000068, "Member 'BP_ENpcComponent_C_ResetEnemyWait::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_ResetEnemyWait, CallFunc_OnEnemyBrainFieldResetStatus_Dummy) == 0x000069, "Member 'BP_ENpcComponent_C_ResetEnemyWait::CallFunc_OnEnemyBrainFieldResetStatus_Dummy' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.SetEnemyStealthSeeEnable
// 0x0020 (0x0020 - 0x0000)
struct BP_ENpcComponent_C_SetEnemyStealthSeeEnable final
{
public:
	bool                                          bON;                                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bReturn;                                           // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BadStateEffectDispSwitch_bSuccess;        // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_943B[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerInterface_C> K2Node_DynamicCast_AsBPI_Player_Interface;         // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnableSeeThrough_bEnable;               // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ENpcComponent_C_SetEnemyStealthSeeEnable) == 0x000008, "Wrong alignment on BP_ENpcComponent_C_SetEnemyStealthSeeEnable");
static_assert(sizeof(BP_ENpcComponent_C_SetEnemyStealthSeeEnable) == 0x000020, "Wrong size on BP_ENpcComponent_C_SetEnemyStealthSeeEnable");
static_assert(offsetof(BP_ENpcComponent_C_SetEnemyStealthSeeEnable, bON) == 0x000000, "Member 'BP_ENpcComponent_C_SetEnemyStealthSeeEnable::bON' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_SetEnemyStealthSeeEnable, bReturn) == 0x000001, "Member 'BP_ENpcComponent_C_SetEnemyStealthSeeEnable::bReturn' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_SetEnemyStealthSeeEnable, CallFunc_IsValid_ReturnValue) == 0x000002, "Member 'BP_ENpcComponent_C_SetEnemyStealthSeeEnable::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_SetEnemyStealthSeeEnable, CallFunc_BadStateEffectDispSwitch_bSuccess) == 0x000003, "Member 'BP_ENpcComponent_C_SetEnemyStealthSeeEnable::CallFunc_BadStateEffectDispSwitch_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_SetEnemyStealthSeeEnable, K2Node_DynamicCast_AsBPI_Player_Interface) == 0x000008, "Member 'BP_ENpcComponent_C_SetEnemyStealthSeeEnable::K2Node_DynamicCast_AsBPI_Player_Interface' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_SetEnemyStealthSeeEnable, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_ENpcComponent_C_SetEnemyStealthSeeEnable::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_SetEnemyStealthSeeEnable, CallFunc_IsValid_ReturnValue_1) == 0x000019, "Member 'BP_ENpcComponent_C_SetEnemyStealthSeeEnable::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_SetEnemyStealthSeeEnable, CallFunc_IsEnableSeeThrough_bEnable) == 0x00001A, "Member 'BP_ENpcComponent_C_SetEnemyStealthSeeEnable::CallFunc_IsEnableSeeThrough_bEnable' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.SetBoss
// 0x0001 (0x0001 - 0x0000)
struct BP_ENpcComponent_C_SetBoss final
{
public:
	bool                                          Param_bBoss;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ENpcComponent_C_SetBoss) == 0x000001, "Wrong alignment on BP_ENpcComponent_C_SetBoss");
static_assert(sizeof(BP_ENpcComponent_C_SetBoss) == 0x000001, "Wrong size on BP_ENpcComponent_C_SetBoss");
static_assert(offsetof(BP_ENpcComponent_C_SetBoss, Param_bBoss) == 0x000000, "Member 'BP_ENpcComponent_C_SetBoss::Param_bBoss' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.SetTickEnable
// 0x0018 (0x0018 - 0x0000)
struct BP_ENpcComponent_C_SetTickEnable final
{
public:
	bool                                          bEnable;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_943C[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   ClaimantName;                                      // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_943D[0x2];                                     // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ENpcComponent_C_SetTickEnable) == 0x000004, "Wrong alignment on BP_ENpcComponent_C_SetTickEnable");
static_assert(sizeof(BP_ENpcComponent_C_SetTickEnable) == 0x000018, "Wrong size on BP_ENpcComponent_C_SetTickEnable");
static_assert(offsetof(BP_ENpcComponent_C_SetTickEnable, bEnable) == 0x000000, "Member 'BP_ENpcComponent_C_SetTickEnable::bEnable' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_SetTickEnable, ClaimantName) == 0x000004, "Member 'BP_ENpcComponent_C_SetTickEnable::ClaimantName' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_SetTickEnable, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'BP_ENpcComponent_C_SetTickEnable::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_SetTickEnable, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000010, "Member 'BP_ENpcComponent_C_SetTickEnable::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_SetTickEnable, CallFunc_Array_RemoveItem_ReturnValue) == 0x000011, "Member 'BP_ENpcComponent_C_SetTickEnable::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_SetTickEnable, CallFunc_Array_AddUnique_ReturnValue) == 0x000014, "Member 'BP_ENpcComponent_C_SetTickEnable::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.On Owner Destroy
// 0x00A0 (0x00A0 - 0x0000)
struct BP_ENpcComponent_C_On_Owner_Destroy final
{
public:
	class AActor*                                 LBFTempUser;                                       // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         LBFUserList;                                       // 0x0008(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_943E[0x2];                                     // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BrainFieldManager_C*                CallFunc_GetBrainFieldManager_Manager;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_943F[0x5];                                     // 0x0033(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetBrainFieldUserList_User;               // 0x0038(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_IsInvokeBrainField_InvokeBrainField;      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEventStartup_IsEvent;                   // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9440[0x6];                                     // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABattleSimulatorManager*                CallFunc_GetBattleSimulatorManager_BattleSimulatorManager; // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_EnemyManager_C*                     CallFunc_GetEnemyManager_Manager;                  // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMissionActive_ReturnValue;              // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9441[0x2];                                     // 0x0062(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9442[0x3];                                     // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9443[0x7];                                     // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ENpcComponent_C_On_Owner_Destroy) == 0x000008, "Wrong alignment on BP_ENpcComponent_C_On_Owner_Destroy");
static_assert(sizeof(BP_ENpcComponent_C_On_Owner_Destroy) == 0x0000A0, "Wrong size on BP_ENpcComponent_C_On_Owner_Destroy");
static_assert(offsetof(BP_ENpcComponent_C_On_Owner_Destroy, LBFTempUser) == 0x000000, "Member 'BP_ENpcComponent_C_On_Owner_Destroy::LBFTempUser' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_On_Owner_Destroy, LBFUserList) == 0x000008, "Member 'BP_ENpcComponent_C_On_Owner_Destroy::LBFUserList' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_On_Owner_Destroy, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BP_ENpcComponent_C_On_Owner_Destroy::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_On_Owner_Destroy, Temp_int_Loop_Num_Variable) == 0x00001C, "Member 'BP_ENpcComponent_C_On_Owner_Destroy::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_On_Owner_Destroy, Temp_bool_True_if_break_was_hit_Variable) == 0x000020, "Member 'BP_ENpcComponent_C_On_Owner_Destroy::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_On_Owner_Destroy, CallFunc_Not_PreBool_ReturnValue) == 0x000021, "Member 'BP_ENpcComponent_C_On_Owner_Destroy::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_On_Owner_Destroy, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'BP_ENpcComponent_C_On_Owner_Destroy::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_On_Owner_Destroy, CallFunc_GetBrainFieldManager_Manager) == 0x000028, "Member 'BP_ENpcComponent_C_On_Owner_Destroy::CallFunc_GetBrainFieldManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_On_Owner_Destroy, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BP_ENpcComponent_C_On_Owner_Destroy::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_On_Owner_Destroy, CallFunc_IsValid_ReturnValue_1) == 0x000031, "Member 'BP_ENpcComponent_C_On_Owner_Destroy::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_On_Owner_Destroy, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000032, "Member 'BP_ENpcComponent_C_On_Owner_Destroy::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_On_Owner_Destroy, CallFunc_GetBrainFieldUserList_User) == 0x000038, "Member 'BP_ENpcComponent_C_On_Owner_Destroy::CallFunc_GetBrainFieldUserList_User' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_On_Owner_Destroy, CallFunc_IsInvokeBrainField_InvokeBrainField) == 0x000048, "Member 'BP_ENpcComponent_C_On_Owner_Destroy::CallFunc_IsInvokeBrainField_InvokeBrainField' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_On_Owner_Destroy, CallFunc_IsEventStartup_IsEvent) == 0x000049, "Member 'BP_ENpcComponent_C_On_Owner_Destroy::CallFunc_IsEventStartup_IsEvent' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_On_Owner_Destroy, CallFunc_GetBattleSimulatorManager_BattleSimulatorManager) == 0x000050, "Member 'BP_ENpcComponent_C_On_Owner_Destroy::CallFunc_GetBattleSimulatorManager_BattleSimulatorManager' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_On_Owner_Destroy, CallFunc_GetEnemyManager_Manager) == 0x000058, "Member 'BP_ENpcComponent_C_On_Owner_Destroy::CallFunc_GetEnemyManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_On_Owner_Destroy, CallFunc_IsValid_ReturnValue_2) == 0x000060, "Member 'BP_ENpcComponent_C_On_Owner_Destroy::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_On_Owner_Destroy, CallFunc_IsMissionActive_ReturnValue) == 0x000061, "Member 'BP_ENpcComponent_C_On_Owner_Destroy::CallFunc_IsMissionActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_On_Owner_Destroy, Temp_int_Loop_Counter_Variable) == 0x000064, "Member 'BP_ENpcComponent_C_On_Owner_Destroy::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_On_Owner_Destroy, CallFunc_Less_IntInt_ReturnValue) == 0x000068, "Member 'BP_ENpcComponent_C_On_Owner_Destroy::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_On_Owner_Destroy, CallFunc_Add_IntInt_ReturnValue) == 0x00006C, "Member 'BP_ENpcComponent_C_On_Owner_Destroy::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_On_Owner_Destroy, CallFunc_BooleanAND_ReturnValue) == 0x000070, "Member 'BP_ENpcComponent_C_On_Owner_Destroy::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_On_Owner_Destroy, CallFunc_Conv_IntToString_ReturnValue) == 0x000078, "Member 'BP_ENpcComponent_C_On_Owner_Destroy::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_On_Owner_Destroy, CallFunc_Concat_StrStr_ReturnValue) == 0x000088, "Member 'BP_ENpcComponent_C_On_Owner_Destroy::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_On_Owner_Destroy, CallFunc_Conv_StringToName_ReturnValue) == 0x000098, "Member 'BP_ENpcComponent_C_On_Owner_Destroy::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.NotifyStartBattle
// 0x00D8 (0x00D8 - 0x0000)
struct BP_ENpcComponent_C_NotifyStartBattle final
{
public:
	bool                                          bBrainFieldEnable;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9444[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABrainTalkManager*                      LBrainTalkManager;                                 // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   LUniqueName;                                       // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHATETYPE                                     LDownHateType;                                     // 0x0018(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHATETYPE                                     LHateType;                                         // 0x0019(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9445[0x6];                                     // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       LTargetPlayer;                                     // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ARSCharacterBase*>               LPlayerList;                                       // 0x0028(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9446[0x3];                                     // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9447[0x3];                                     // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9448[0x2];                                     // 0x004E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9449[0x3];                                     // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_ENpcInterface_C>  K2Node_DynamicCast_AsBPI_ENpc_Interface;           // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Em8010_IsMetamophosis_ChangeChara_bIsMetamorphosis; // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_944A[0x5];                                     // 0x006B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_EnemyInterface_C> K2Node_DynamicCast_AsBPI_Enemy_Interface;          // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetEnemySpawn_return;                     // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0082(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_944B[0x5];                                     // 0x0083(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_1;         // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_944C[0x1];                                     // 0x0093(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0094(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BattleManager_C*                    CallFunc_GetBattleManager_BattleManager;           // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ARSCharacterBase*>               CallFunc_GetPlayerList_ReturnValue;                // 0x00B0(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	TScriptInterface<class IBPI_PlayerInterface_C> CallFunc_SetPlayerBattle_self_CastInput;           // 0x00C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetPlayerBattle_bDummy;                   // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_944D[0x3];                                     // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ENpcComponent_C_NotifyStartBattle) == 0x000008, "Wrong alignment on BP_ENpcComponent_C_NotifyStartBattle");
static_assert(sizeof(BP_ENpcComponent_C_NotifyStartBattle) == 0x0000D8, "Wrong size on BP_ENpcComponent_C_NotifyStartBattle");
static_assert(offsetof(BP_ENpcComponent_C_NotifyStartBattle, bBrainFieldEnable) == 0x000000, "Member 'BP_ENpcComponent_C_NotifyStartBattle::bBrainFieldEnable' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_NotifyStartBattle, LBrainTalkManager) == 0x000008, "Member 'BP_ENpcComponent_C_NotifyStartBattle::LBrainTalkManager' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_NotifyStartBattle, LUniqueName) == 0x000010, "Member 'BP_ENpcComponent_C_NotifyStartBattle::LUniqueName' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_NotifyStartBattle, LDownHateType) == 0x000018, "Member 'BP_ENpcComponent_C_NotifyStartBattle::LDownHateType' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_NotifyStartBattle, LHateType) == 0x000019, "Member 'BP_ENpcComponent_C_NotifyStartBattle::LHateType' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_NotifyStartBattle, LTargetPlayer) == 0x000020, "Member 'BP_ENpcComponent_C_NotifyStartBattle::LTargetPlayer' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_NotifyStartBattle, LPlayerList) == 0x000028, "Member 'BP_ENpcComponent_C_NotifyStartBattle::LPlayerList' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_NotifyStartBattle, Temp_int_Array_Index_Variable) == 0x000038, "Member 'BP_ENpcComponent_C_NotifyStartBattle::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_NotifyStartBattle, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00003C, "Member 'BP_ENpcComponent_C_NotifyStartBattle::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_NotifyStartBattle, Temp_int_Loop_Num_Variable) == 0x000040, "Member 'BP_ENpcComponent_C_NotifyStartBattle::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_NotifyStartBattle, CallFunc_IsValid_ReturnValue) == 0x000044, "Member 'BP_ENpcComponent_C_NotifyStartBattle::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_NotifyStartBattle, Temp_int_Loop_Counter_Variable) == 0x000048, "Member 'BP_ENpcComponent_C_NotifyStartBattle::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_NotifyStartBattle, CallFunc_Array_IsValidIndex_ReturnValue) == 0x00004C, "Member 'BP_ENpcComponent_C_NotifyStartBattle::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_NotifyStartBattle, CallFunc_Less_IntInt_ReturnValue) == 0x00004D, "Member 'BP_ENpcComponent_C_NotifyStartBattle::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_NotifyStartBattle, CallFunc_Add_IntInt_ReturnValue) == 0x000050, "Member 'BP_ENpcComponent_C_NotifyStartBattle::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_NotifyStartBattle, CallFunc_IsValid_ReturnValue_1) == 0x000054, "Member 'BP_ENpcComponent_C_NotifyStartBattle::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_NotifyStartBattle, K2Node_DynamicCast_AsBPI_ENpc_Interface) == 0x000058, "Member 'BP_ENpcComponent_C_NotifyStartBattle::K2Node_DynamicCast_AsBPI_ENpc_Interface' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_NotifyStartBattle, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'BP_ENpcComponent_C_NotifyStartBattle::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_NotifyStartBattle, CallFunc_Em8010_IsMetamophosis_ChangeChara_bIsMetamorphosis) == 0x000069, "Member 'BP_ENpcComponent_C_NotifyStartBattle::CallFunc_Em8010_IsMetamophosis_ChangeChara_bIsMetamorphosis' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_NotifyStartBattle, CallFunc_IsValid_ReturnValue_2) == 0x00006A, "Member 'BP_ENpcComponent_C_NotifyStartBattle::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_NotifyStartBattle, K2Node_DynamicCast_AsBPI_Enemy_Interface) == 0x000070, "Member 'BP_ENpcComponent_C_NotifyStartBattle::K2Node_DynamicCast_AsBPI_Enemy_Interface' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_NotifyStartBattle, K2Node_DynamicCast_bSuccess_1) == 0x000080, "Member 'BP_ENpcComponent_C_NotifyStartBattle::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_NotifyStartBattle, CallFunc_GetEnemySpawn_return) == 0x000081, "Member 'BP_ENpcComponent_C_NotifyStartBattle::CallFunc_GetEnemySpawn_return' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_NotifyStartBattle, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000082, "Member 'BP_ENpcComponent_C_NotifyStartBattle::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_NotifyStartBattle, CallFunc_GetOwner_ReturnValue) == 0x000088, "Member 'BP_ENpcComponent_C_NotifyStartBattle::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_NotifyStartBattle, CallFunc_Array_IsValidIndex_ReturnValue_1) == 0x000090, "Member 'BP_ENpcComponent_C_NotifyStartBattle::CallFunc_Array_IsValidIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_NotifyStartBattle, CallFunc_IsValid_ReturnValue_3) == 0x000091, "Member 'BP_ENpcComponent_C_NotifyStartBattle::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_NotifyStartBattle, CallFunc_Not_PreBool_ReturnValue) == 0x000092, "Member 'BP_ENpcComponent_C_NotifyStartBattle::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_NotifyStartBattle, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000094, "Member 'BP_ENpcComponent_C_NotifyStartBattle::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_NotifyStartBattle, CallFunc_GetBattleManager_BattleManager) == 0x0000A0, "Member 'BP_ENpcComponent_C_NotifyStartBattle::CallFunc_GetBattleManager_BattleManager' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_NotifyStartBattle, CallFunc_GetPlayerManager_PlayerManager) == 0x0000A8, "Member 'BP_ENpcComponent_C_NotifyStartBattle::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_NotifyStartBattle, CallFunc_GetPlayerList_ReturnValue) == 0x0000B0, "Member 'BP_ENpcComponent_C_NotifyStartBattle::CallFunc_GetPlayerList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_NotifyStartBattle, CallFunc_SetPlayerBattle_self_CastInput) == 0x0000C0, "Member 'BP_ENpcComponent_C_NotifyStartBattle::CallFunc_SetPlayerBattle_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_NotifyStartBattle, CallFunc_SetPlayerBattle_bDummy) == 0x0000D0, "Member 'BP_ENpcComponent_C_NotifyStartBattle::CallFunc_SetPlayerBattle_bDummy' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_NotifyStartBattle, CallFunc_Array_Length_ReturnValue) == 0x0000D4, "Member 'BP_ENpcComponent_C_NotifyStartBattle::CallFunc_Array_Length_ReturnValue' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.NotifyEndBattle
// 0x0028 (0x0028 - 0x0000)
struct BP_ENpcComponent_C_NotifyEndBattle final
{
public:
	class AHUDMainGame_C*                         CallFunc_GetHUDMainGame_HUDMainGame;               // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_944E[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerInterface_C> CallFunc_SetPlayerBattle_self_CastInput;           // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetPlayerBattle_bDummy;                   // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ENpcComponent_C_NotifyEndBattle) == 0x000008, "Wrong alignment on BP_ENpcComponent_C_NotifyEndBattle");
static_assert(sizeof(BP_ENpcComponent_C_NotifyEndBattle) == 0x000028, "Wrong size on BP_ENpcComponent_C_NotifyEndBattle");
static_assert(offsetof(BP_ENpcComponent_C_NotifyEndBattle, CallFunc_GetHUDMainGame_HUDMainGame) == 0x000000, "Member 'BP_ENpcComponent_C_NotifyEndBattle::CallFunc_GetHUDMainGame_HUDMainGame' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_NotifyEndBattle, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_ENpcComponent_C_NotifyEndBattle::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_NotifyEndBattle, CallFunc_SetPlayerBattle_self_CastInput) == 0x000010, "Member 'BP_ENpcComponent_C_NotifyEndBattle::CallFunc_SetPlayerBattle_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_NotifyEndBattle, CallFunc_SetPlayerBattle_bDummy) == 0x000020, "Member 'BP_ENpcComponent_C_NotifyEndBattle::CallFunc_SetPlayerBattle_bDummy' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.Notify Dead
// 0x0018 (0x0018 - 0x0000)
struct BP_ENpcComponent_C_Notify_Dead final
{
public:
	bool                                          LbBrainField;                                      // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_944F[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_EnemyManager_C*                     CallFunc_GetEnemyManager_Manager;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ENpcComponent_C_Notify_Dead) == 0x000008, "Wrong alignment on BP_ENpcComponent_C_Notify_Dead");
static_assert(sizeof(BP_ENpcComponent_C_Notify_Dead) == 0x000018, "Wrong size on BP_ENpcComponent_C_Notify_Dead");
static_assert(offsetof(BP_ENpcComponent_C_Notify_Dead, LbBrainField) == 0x000000, "Member 'BP_ENpcComponent_C_Notify_Dead::LbBrainField' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Notify_Dead, CallFunc_GetEnemyManager_Manager) == 0x000008, "Member 'BP_ENpcComponent_C_Notify_Dead::CallFunc_GetEnemyManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Notify_Dead, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_ENpcComponent_C_Notify_Dead::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.UpdatePsychicObject
// 0x0078 (0x0078 - 0x0000)
struct BP_ENpcComponent_C_UpdatePsychicObject final
{
public:
	TArray<int32>                                 RemoveIndexList;                                   // 0x0000(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	class ABP_PsychicObjectBasic_C*               LObj;                                              // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9450[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9451[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9452[0x3];                                     // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IPsychicObjectInterface> K2Node_DynamicCast_AsPsychic_Object_Interface;     // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPsychicObjectActiveC_ReturnValue;       // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9453[0x1];                                     // 0x0063(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9454[0x3];                                     // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ENpcComponent_C_UpdatePsychicObject) == 0x000008, "Wrong alignment on BP_ENpcComponent_C_UpdatePsychicObject");
static_assert(sizeof(BP_ENpcComponent_C_UpdatePsychicObject) == 0x000078, "Wrong size on BP_ENpcComponent_C_UpdatePsychicObject");
static_assert(offsetof(BP_ENpcComponent_C_UpdatePsychicObject, RemoveIndexList) == 0x000000, "Member 'BP_ENpcComponent_C_UpdatePsychicObject::RemoveIndexList' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdatePsychicObject, LObj) == 0x000010, "Member 'BP_ENpcComponent_C_UpdatePsychicObject::LObj' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdatePsychicObject, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_ENpcComponent_C_UpdatePsychicObject::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdatePsychicObject, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'BP_ENpcComponent_C_UpdatePsychicObject::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdatePsychicObject, CallFunc_Subtract_IntInt_ReturnValue) == 0x000020, "Member 'BP_ENpcComponent_C_UpdatePsychicObject::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdatePsychicObject, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'BP_ENpcComponent_C_UpdatePsychicObject::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdatePsychicObject, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000028, "Member 'BP_ENpcComponent_C_UpdatePsychicObject::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdatePsychicObject, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00002C, "Member 'BP_ENpcComponent_C_UpdatePsychicObject::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdatePsychicObject, CallFunc_Max_ReturnValue) == 0x000030, "Member 'BP_ENpcComponent_C_UpdatePsychicObject::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdatePsychicObject, Temp_int_Loop_Num_Variable) == 0x000034, "Member 'BP_ENpcComponent_C_UpdatePsychicObject::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdatePsychicObject, CallFunc_Array_Length_ReturnValue_1) == 0x000038, "Member 'BP_ENpcComponent_C_UpdatePsychicObject::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdatePsychicObject, CallFunc_Greater_IntInt_ReturnValue) == 0x00003C, "Member 'BP_ENpcComponent_C_UpdatePsychicObject::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdatePsychicObject, Temp_int_Array_Index_Variable) == 0x000040, "Member 'BP_ENpcComponent_C_UpdatePsychicObject::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdatePsychicObject, CallFunc_Array_Add_ReturnValue) == 0x000044, "Member 'BP_ENpcComponent_C_UpdatePsychicObject::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdatePsychicObject, CallFunc_Array_Add_ReturnValue_1) == 0x000048, "Member 'BP_ENpcComponent_C_UpdatePsychicObject::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdatePsychicObject, Temp_int_Loop_Counter_Variable_1) == 0x00004C, "Member 'BP_ENpcComponent_C_UpdatePsychicObject::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdatePsychicObject, K2Node_DynamicCast_AsPsychic_Object_Interface) == 0x000050, "Member 'BP_ENpcComponent_C_UpdatePsychicObject::K2Node_DynamicCast_AsPsychic_Object_Interface' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdatePsychicObject, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'BP_ENpcComponent_C_UpdatePsychicObject::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdatePsychicObject, CallFunc_IsPsychicObjectActiveC_ReturnValue) == 0x000061, "Member 'BP_ENpcComponent_C_UpdatePsychicObject::CallFunc_IsPsychicObjectActiveC_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdatePsychicObject, CallFunc_Less_IntInt_ReturnValue) == 0x000062, "Member 'BP_ENpcComponent_C_UpdatePsychicObject::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdatePsychicObject, CallFunc_Add_IntInt_ReturnValue) == 0x000064, "Member 'BP_ENpcComponent_C_UpdatePsychicObject::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdatePsychicObject, CallFunc_Array_Length_ReturnValue_2) == 0x000068, "Member 'BP_ENpcComponent_C_UpdatePsychicObject::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdatePsychicObject, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00006C, "Member 'BP_ENpcComponent_C_UpdatePsychicObject::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdatePsychicObject, Temp_int_Array_Index_Variable_1) == 0x000070, "Member 'BP_ENpcComponent_C_UpdatePsychicObject::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdatePsychicObject, CallFunc_Array_Length_ReturnValue_3) == 0x000074, "Member 'BP_ENpcComponent_C_UpdatePsychicObject::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.AddPsychicObject
// 0x0028 (0x0028 - 0x0000)
struct BP_ENpcComponent_C_AddPsychicObject final
{
public:
	class ABP_PsychicObjectBasic_C*               AddObj;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9455[0x6];                                     // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBattleCharacterHudInterface> CallFunc_IsSpawnWait_self_CastInput;               // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSpawnWait_bSpawnWait;                   // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9456[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ENpcComponent_C_AddPsychicObject) == 0x000008, "Wrong alignment on BP_ENpcComponent_C_AddPsychicObject");
static_assert(sizeof(BP_ENpcComponent_C_AddPsychicObject) == 0x000028, "Wrong size on BP_ENpcComponent_C_AddPsychicObject");
static_assert(offsetof(BP_ENpcComponent_C_AddPsychicObject, AddObj) == 0x000000, "Member 'BP_ENpcComponent_C_AddPsychicObject::AddObj' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_AddPsychicObject, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_ENpcComponent_C_AddPsychicObject::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_AddPsychicObject, CallFunc_IsValid_ReturnValue_1) == 0x000009, "Member 'BP_ENpcComponent_C_AddPsychicObject::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_AddPsychicObject, CallFunc_IsSpawnWait_self_CastInput) == 0x000010, "Member 'BP_ENpcComponent_C_AddPsychicObject::CallFunc_IsSpawnWait_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_AddPsychicObject, CallFunc_IsSpawnWait_bSpawnWait) == 0x000020, "Member 'BP_ENpcComponent_C_AddPsychicObject::CallFunc_IsSpawnWait_bSpawnWait' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_AddPsychicObject, CallFunc_Array_AddUnique_ReturnValue) == 0x000024, "Member 'BP_ENpcComponent_C_AddPsychicObject::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.AddHitPsychicObject
// 0x0010 (0x0010 - 0x0000)
struct BP_ENpcComponent_C_AddHitPsychicObject final
{
public:
	class ABP_PsychicObjectBasic_C*               HitPsychicObj;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsAdd;                                             // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ENpcComponent_C_AddHitPsychicObject) == 0x000008, "Wrong alignment on BP_ENpcComponent_C_AddHitPsychicObject");
static_assert(sizeof(BP_ENpcComponent_C_AddHitPsychicObject) == 0x000010, "Wrong size on BP_ENpcComponent_C_AddHitPsychicObject");
static_assert(offsetof(BP_ENpcComponent_C_AddHitPsychicObject, HitPsychicObj) == 0x000000, "Member 'BP_ENpcComponent_C_AddHitPsychicObject::HitPsychicObj' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_AddHitPsychicObject, IsAdd) == 0x000008, "Member 'BP_ENpcComponent_C_AddHitPsychicObject::IsAdd' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.UpdateBrainField
// 0x0128 (0x0128 - 0x0000)
struct BP_ENpcComponent_C_UpdateBrainField final
{
public:
	float                                         DeltaSec;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9457[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IPlayerInterface>      CallFunc_GetPlayerID_self_CastInput;               // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerID                                     CallFunc_GetPlayerID_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9458[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IPlayerInterface>      CallFunc_GetPlayerID_self_CastInput_1;             // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerID                                     CallFunc_GetPlayerID_ReturnValue_1;                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanPlayCutScene_OK;                       // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9459[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_EventManager_C*                     CallFunc_GetEventManager_EventManager;             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsCutSceneEventNative_ReturnValue;        // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_945A[0x5];                                     // 0x0043(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CharacterParamater_C> CallFunc_IsDead_self_CastInput;                    // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDead_bDead;                             // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsBrainCrashAccess_ReturnValue;           // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayerStatus_Result;                    // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsCloseBrainField_bCloseBrainField;       // 0x005B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BattleManager_C*                    CallFunc_GetBattleManager_BattleManager;           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_945B[0x3];                                     // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager_1;         // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_945C[0x6];                                     // 0x0082(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_GetPlayer_ReturnValue;                    // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_CharacterParamater_C> K2Node_DynamicCast_AsBPI_Character_Paramater;      // 0x0090(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayingAny_IsPlaying;                   // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDead_bDead_1;                           // 0x00A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x00A3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x00A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x00A6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_945D[0x1];                                     // 0x00A7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IPlayerInterface>      CallFunc_GetPlayerID_self_CastInput_2;             // 0x00A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerID                                     CallFunc_GetPlayerID_ReturnValue_2;                // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_945E[0x5];                                     // 0x00BB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABrainTalkManager*                      CallFunc_GetBrainTalkManager_BrainTalkManager;     // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BrainTalkEm_ch0100_02_ReturnValue;        // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BrainTalkEm_ch0200_02_ReturnValue;        // 0x00CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_9;                    // 0x00CB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_945F[0x2];                                     // 0x00D2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Array_Get_Item;                           // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9460[0x4];                                     // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CharacterParamater_C> CallFunc_GetHPPercent_self_CastInput;              // 0x00E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetHPPercent_Percent;                     // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9461[0x3];                                     // 0x00F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BattleManager_C*                    CallFunc_GetBattleManager_BattleManager_1;         // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BrainFieldManager_C*                CallFunc_GetBrainFieldManager_Manager;             // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetENPCBrainFieldRate_Rate;               // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEventStartup_IsEvent;                   // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_1;       // 0x010D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_InBranField_InBrainDield;                 // 0x010E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9462[0x1];                                     // 0x010F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IPlayerInterface>      CallFunc_CloseBrainField_self_CastInput;           // 0x0110(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CloseBrainField_ReturnValue;              // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayerStatus_Result_1;                  // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ENpcComponent_C_UpdateBrainField) == 0x000008, "Wrong alignment on BP_ENpcComponent_C_UpdateBrainField");
static_assert(sizeof(BP_ENpcComponent_C_UpdateBrainField) == 0x000128, "Wrong size on BP_ENpcComponent_C_UpdateBrainField");
static_assert(offsetof(BP_ENpcComponent_C_UpdateBrainField, DeltaSec) == 0x000000, "Member 'BP_ENpcComponent_C_UpdateBrainField::DeltaSec' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateBrainField, CallFunc_GetPlayerID_self_CastInput) == 0x000008, "Member 'BP_ENpcComponent_C_UpdateBrainField::CallFunc_GetPlayerID_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateBrainField, CallFunc_GetPlayerID_ReturnValue) == 0x000018, "Member 'BP_ENpcComponent_C_UpdateBrainField::CallFunc_GetPlayerID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateBrainField, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000019, "Member 'BP_ENpcComponent_C_UpdateBrainField::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateBrainField, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00001A, "Member 'BP_ENpcComponent_C_UpdateBrainField::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateBrainField, CallFunc_BooleanOR_ReturnValue) == 0x00001B, "Member 'BP_ENpcComponent_C_UpdateBrainField::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateBrainField, CallFunc_GetPlayerID_self_CastInput_1) == 0x000020, "Member 'BP_ENpcComponent_C_UpdateBrainField::CallFunc_GetPlayerID_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateBrainField, CallFunc_GetPlayerID_ReturnValue_1) == 0x000030, "Member 'BP_ENpcComponent_C_UpdateBrainField::CallFunc_GetPlayerID_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateBrainField, CallFunc_CanPlayCutScene_OK) == 0x000031, "Member 'BP_ENpcComponent_C_UpdateBrainField::CallFunc_CanPlayCutScene_OK' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateBrainField, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000032, "Member 'BP_ENpcComponent_C_UpdateBrainField::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateBrainField, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x000033, "Member 'BP_ENpcComponent_C_UpdateBrainField::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateBrainField, CallFunc_GetEventManager_EventManager) == 0x000038, "Member 'BP_ENpcComponent_C_UpdateBrainField::CallFunc_GetEventManager_EventManager' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateBrainField, CallFunc_BooleanOR_ReturnValue_1) == 0x000040, "Member 'BP_ENpcComponent_C_UpdateBrainField::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateBrainField, CallFunc_IsValid_ReturnValue) == 0x000041, "Member 'BP_ENpcComponent_C_UpdateBrainField::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateBrainField, CallFunc_IsCutSceneEventNative_ReturnValue) == 0x000042, "Member 'BP_ENpcComponent_C_UpdateBrainField::CallFunc_IsCutSceneEventNative_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateBrainField, CallFunc_IsDead_self_CastInput) == 0x000048, "Member 'BP_ENpcComponent_C_UpdateBrainField::CallFunc_IsDead_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateBrainField, CallFunc_IsDead_bDead) == 0x000058, "Member 'BP_ENpcComponent_C_UpdateBrainField::CallFunc_IsDead_bDead' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateBrainField, CallFunc_IsBrainCrashAccess_ReturnValue) == 0x000059, "Member 'BP_ENpcComponent_C_UpdateBrainField::CallFunc_IsBrainCrashAccess_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateBrainField, CallFunc_IsPlayerStatus_Result) == 0x00005A, "Member 'BP_ENpcComponent_C_UpdateBrainField::CallFunc_IsPlayerStatus_Result' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateBrainField, CallFunc_IsCloseBrainField_bCloseBrainField) == 0x00005B, "Member 'BP_ENpcComponent_C_UpdateBrainField::CallFunc_IsCloseBrainField_bCloseBrainField' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateBrainField, CallFunc_Add_IntInt_ReturnValue) == 0x00005C, "Member 'BP_ENpcComponent_C_UpdateBrainField::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateBrainField, CallFunc_GetBattleManager_BattleManager) == 0x000060, "Member 'BP_ENpcComponent_C_UpdateBrainField::CallFunc_GetBattleManager_BattleManager' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateBrainField, CallFunc_IsValid_ReturnValue_1) == 0x000068, "Member 'BP_ENpcComponent_C_UpdateBrainField::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateBrainField, Temp_int_Variable) == 0x00006C, "Member 'BP_ENpcComponent_C_UpdateBrainField::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateBrainField, CallFunc_GetPlayerManager_PlayerManager) == 0x000070, "Member 'BP_ENpcComponent_C_UpdateBrainField::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateBrainField, CallFunc_GetPlayerManager_PlayerManager_1) == 0x000078, "Member 'BP_ENpcComponent_C_UpdateBrainField::CallFunc_GetPlayerManager_PlayerManager_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateBrainField, CallFunc_IsValid_ReturnValue_2) == 0x000080, "Member 'BP_ENpcComponent_C_UpdateBrainField::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateBrainField, CallFunc_IsValid_ReturnValue_3) == 0x000081, "Member 'BP_ENpcComponent_C_UpdateBrainField::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateBrainField, CallFunc_GetPlayer_ReturnValue) == 0x000088, "Member 'BP_ENpcComponent_C_UpdateBrainField::CallFunc_GetPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateBrainField, K2Node_DynamicCast_AsBPI_Character_Paramater) == 0x000090, "Member 'BP_ENpcComponent_C_UpdateBrainField::K2Node_DynamicCast_AsBPI_Character_Paramater' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateBrainField, K2Node_DynamicCast_bSuccess) == 0x0000A0, "Member 'BP_ENpcComponent_C_UpdateBrainField::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateBrainField, CallFunc_IsPlayingAny_IsPlaying) == 0x0000A1, "Member 'BP_ENpcComponent_C_UpdateBrainField::CallFunc_IsPlayingAny_IsPlaying' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateBrainField, CallFunc_IsDead_bDead_1) == 0x0000A2, "Member 'BP_ENpcComponent_C_UpdateBrainField::CallFunc_IsDead_bDead_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateBrainField, CallFunc_IsValid_ReturnValue_4) == 0x0000A3, "Member 'BP_ENpcComponent_C_UpdateBrainField::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateBrainField, CallFunc_IsValid_ReturnValue_5) == 0x0000A4, "Member 'BP_ENpcComponent_C_UpdateBrainField::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateBrainField, CallFunc_IsValid_ReturnValue_6) == 0x0000A5, "Member 'BP_ENpcComponent_C_UpdateBrainField::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateBrainField, CallFunc_IsValid_ReturnValue_7) == 0x0000A6, "Member 'BP_ENpcComponent_C_UpdateBrainField::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateBrainField, CallFunc_GetPlayerID_self_CastInput_2) == 0x0000A8, "Member 'BP_ENpcComponent_C_UpdateBrainField::CallFunc_GetPlayerID_self_CastInput_2' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateBrainField, CallFunc_GetPlayerID_ReturnValue_2) == 0x0000B8, "Member 'BP_ENpcComponent_C_UpdateBrainField::CallFunc_GetPlayerID_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateBrainField, CallFunc_NotEqual_IntInt_ReturnValue) == 0x0000B9, "Member 'BP_ENpcComponent_C_UpdateBrainField::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateBrainField, K2Node_SwitchEnum_CmpSuccess) == 0x0000BA, "Member 'BP_ENpcComponent_C_UpdateBrainField::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateBrainField, CallFunc_GetBrainTalkManager_BrainTalkManager) == 0x0000C0, "Member 'BP_ENpcComponent_C_UpdateBrainField::CallFunc_GetBrainTalkManager_BrainTalkManager' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateBrainField, CallFunc_IsValid_ReturnValue_8) == 0x0000C8, "Member 'BP_ENpcComponent_C_UpdateBrainField::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateBrainField, CallFunc_BrainTalkEm_ch0100_02_ReturnValue) == 0x0000C9, "Member 'BP_ENpcComponent_C_UpdateBrainField::CallFunc_BrainTalkEm_ch0100_02_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateBrainField, CallFunc_BrainTalkEm_ch0200_02_ReturnValue) == 0x0000CA, "Member 'BP_ENpcComponent_C_UpdateBrainField::CallFunc_BrainTalkEm_ch0200_02_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateBrainField, CallFunc_IsValid_ReturnValue_9) == 0x0000CB, "Member 'BP_ENpcComponent_C_UpdateBrainField::CallFunc_IsValid_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateBrainField, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000CC, "Member 'BP_ENpcComponent_C_UpdateBrainField::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateBrainField, CallFunc_Array_IsValidIndex_ReturnValue) == 0x0000D0, "Member 'BP_ENpcComponent_C_UpdateBrainField::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateBrainField, CallFunc_Not_PreBool_ReturnValue) == 0x0000D1, "Member 'BP_ENpcComponent_C_UpdateBrainField::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateBrainField, CallFunc_Array_Get_Item) == 0x0000D4, "Member 'BP_ENpcComponent_C_UpdateBrainField::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateBrainField, Temp_int_Variable_1) == 0x0000D8, "Member 'BP_ENpcComponent_C_UpdateBrainField::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateBrainField, CallFunc_GetHPPercent_self_CastInput) == 0x0000E0, "Member 'BP_ENpcComponent_C_UpdateBrainField::CallFunc_GetHPPercent_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateBrainField, CallFunc_GetHPPercent_Percent) == 0x0000F0, "Member 'BP_ENpcComponent_C_UpdateBrainField::CallFunc_GetHPPercent_Percent' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateBrainField, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x0000F4, "Member 'BP_ENpcComponent_C_UpdateBrainField::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateBrainField, CallFunc_GetBattleManager_BattleManager_1) == 0x0000F8, "Member 'BP_ENpcComponent_C_UpdateBrainField::CallFunc_GetBattleManager_BattleManager_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateBrainField, CallFunc_GetBrainFieldManager_Manager) == 0x000100, "Member 'BP_ENpcComponent_C_UpdateBrainField::CallFunc_GetBrainFieldManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateBrainField, CallFunc_GetENPCBrainFieldRate_Rate) == 0x000108, "Member 'BP_ENpcComponent_C_UpdateBrainField::CallFunc_GetENPCBrainFieldRate_Rate' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateBrainField, CallFunc_IsEventStartup_IsEvent) == 0x00010C, "Member 'BP_ENpcComponent_C_UpdateBrainField::CallFunc_IsEventStartup_IsEvent' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateBrainField, CallFunc_LessEqual_FloatFloat_ReturnValue_1) == 0x00010D, "Member 'BP_ENpcComponent_C_UpdateBrainField::CallFunc_LessEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateBrainField, CallFunc_InBranField_InBrainDield) == 0x00010E, "Member 'BP_ENpcComponent_C_UpdateBrainField::CallFunc_InBranField_InBrainDield' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateBrainField, CallFunc_CloseBrainField_self_CastInput) == 0x000110, "Member 'BP_ENpcComponent_C_UpdateBrainField::CallFunc_CloseBrainField_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateBrainField, CallFunc_CloseBrainField_ReturnValue) == 0x000120, "Member 'BP_ENpcComponent_C_UpdateBrainField::CallFunc_CloseBrainField_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateBrainField, CallFunc_IsPlayerStatus_Result_1) == 0x000121, "Member 'BP_ENpcComponent_C_UpdateBrainField::CallFunc_IsPlayerStatus_Result_1' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.HitPsychicObjAddImpulse
// 0x0020 (0x0020 - 0x0000)
struct BP_ENpcComponent_C_HitPsychicObjAddImpulse final
{
public:
	class ABP_PsychicObjectBasic_C*               HitPsychicObj;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ENpcComponent_C_HitPsychicObjAddImpulse) == 0x000008, "Wrong alignment on BP_ENpcComponent_C_HitPsychicObjAddImpulse");
static_assert(sizeof(BP_ENpcComponent_C_HitPsychicObjAddImpulse) == 0x000020, "Wrong size on BP_ENpcComponent_C_HitPsychicObjAddImpulse");
static_assert(offsetof(BP_ENpcComponent_C_HitPsychicObjAddImpulse, HitPsychicObj) == 0x000000, "Member 'BP_ENpcComponent_C_HitPsychicObjAddImpulse::HitPsychicObj' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_HitPsychicObjAddImpulse, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000008, "Member 'BP_ENpcComponent_C_HitPsychicObjAddImpulse::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_HitPsychicObjAddImpulse, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000014, "Member 'BP_ENpcComponent_C_HitPsychicObjAddImpulse::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.UpdateHpDisplay
// 0x0070 (0x0070 - 0x0000)
struct BP_ENpcComponent_C_UpdateHpDisplay final
{
public:
	float                                         DeltaSec;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9463[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattleCharacter_C*                   L_OwnerCharacter;                                  // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattlePlayer_C*                      K2Node_DynamicCast_AsRSBattle_Player;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9464[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BattleManager_C*                    CallFunc_GetBattleManager_BattleManager;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayerStatus_Result;                    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9465[0x6];                                     // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9466[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHUDMainGame_C*                         K2Node_DynamicCast_AsHUDMain_Game;                 // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9467[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattleCharacter_C*                   K2Node_DynamicCast_AsRSBattle_Character;           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9468[0x1];                                     // 0x006B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ENpcComponent_C_UpdateHpDisplay) == 0x000008, "Wrong alignment on BP_ENpcComponent_C_UpdateHpDisplay");
static_assert(sizeof(BP_ENpcComponent_C_UpdateHpDisplay) == 0x000070, "Wrong size on BP_ENpcComponent_C_UpdateHpDisplay");
static_assert(offsetof(BP_ENpcComponent_C_UpdateHpDisplay, DeltaSec) == 0x000000, "Member 'BP_ENpcComponent_C_UpdateHpDisplay::DeltaSec' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateHpDisplay, L_OwnerCharacter) == 0x000008, "Member 'BP_ENpcComponent_C_UpdateHpDisplay::L_OwnerCharacter' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateHpDisplay, K2Node_DynamicCast_AsRSBattle_Player) == 0x000010, "Member 'BP_ENpcComponent_C_UpdateHpDisplay::K2Node_DynamicCast_AsRSBattle_Player' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateHpDisplay, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_ENpcComponent_C_UpdateHpDisplay::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateHpDisplay, CallFunc_GetBattleManager_BattleManager) == 0x000020, "Member 'BP_ENpcComponent_C_UpdateHpDisplay::CallFunc_GetBattleManager_BattleManager' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateHpDisplay, CallFunc_IsPlayerStatus_Result) == 0x000028, "Member 'BP_ENpcComponent_C_UpdateHpDisplay::CallFunc_IsPlayerStatus_Result' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateHpDisplay, CallFunc_IsValid_ReturnValue) == 0x000029, "Member 'BP_ENpcComponent_C_UpdateHpDisplay::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateHpDisplay, CallFunc_GetOwner_ReturnValue) == 0x000030, "Member 'BP_ENpcComponent_C_UpdateHpDisplay::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateHpDisplay, CallFunc_GetPlayerController_ReturnValue) == 0x000038, "Member 'BP_ENpcComponent_C_UpdateHpDisplay::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateHpDisplay, CallFunc_IsValid_ReturnValue_1) == 0x000040, "Member 'BP_ENpcComponent_C_UpdateHpDisplay::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateHpDisplay, CallFunc_GetHUD_ReturnValue) == 0x000048, "Member 'BP_ENpcComponent_C_UpdateHpDisplay::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateHpDisplay, K2Node_DynamicCast_AsHUDMain_Game) == 0x000050, "Member 'BP_ENpcComponent_C_UpdateHpDisplay::K2Node_DynamicCast_AsHUDMain_Game' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateHpDisplay, K2Node_DynamicCast_bSuccess_1) == 0x000058, "Member 'BP_ENpcComponent_C_UpdateHpDisplay::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateHpDisplay, K2Node_DynamicCast_AsRSBattle_Character) == 0x000060, "Member 'BP_ENpcComponent_C_UpdateHpDisplay::K2Node_DynamicCast_AsRSBattle_Character' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateHpDisplay, K2Node_DynamicCast_bSuccess_2) == 0x000068, "Member 'BP_ENpcComponent_C_UpdateHpDisplay::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateHpDisplay, CallFunc_IsValid_ReturnValue_2) == 0x000069, "Member 'BP_ENpcComponent_C_UpdateHpDisplay::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateHpDisplay, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x00006A, "Member 'BP_ENpcComponent_C_UpdateHpDisplay::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateHpDisplay, CallFunc_Add_FloatFloat_ReturnValue) == 0x00006C, "Member 'BP_ENpcComponent_C_UpdateHpDisplay::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.IsPossibleDodgeNormalAttack
// 0x01E0 (0x01E0 - 0x0000)
struct BP_ENpcComponent_C_IsPossibleDodgeNormalAttack final
{
public:
	bool                                          bPossible;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bForceDodge;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          LbForceDodge;                                      // 0x0002(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9469[0x1];                                     // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFNotifyAttackData                     NewLocalVar_0;                                     // 0x0004(0x0010)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_946A[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 LTargetActor;                                      // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFNotifyAttackData                     LData;                                             // 0x0020(0x0010)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LUseIndex;                                         // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_946B[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<float>                                 LWorkProbability;                                  // 0x0038(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	float                                         DotCos45;                                          // 0x0048(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LForwardDot;                                       // 0x004C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LTargetRightVec;                                   // 0x0050(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LTargetForwardVec;                                 // 0x005C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LTargetDir;                                        // 0x0068(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LTargetLocation;                                   // 0x0074(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LOwnerLocation;                                    // 0x0080(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LbPossible;                                        // 0x008C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_946C[0x3];                                     // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ITargetableObjectInterface> K2Node_DynamicCast_AsTargetable_Object_Interface;  // 0x0090(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsControlPlayer_ReturnValue;              // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_946D[0x2];                                     // 0x00A2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorRightVector_ReturnValue;          // 0x00A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActiveEnpcSASAcceleTelepo_IsActive;     // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_946E[0x5];                                     // 0x00CB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IPlayerInterface>      CallFunc_GetPlayerID_self_CastInput;               // 0x00D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerID                                     CallFunc_GetPlayerID_ReturnValue;                  // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x00E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00E3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_946F[0x3];                                     // 0x00E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleCharacterInterface_C> K2Node_DynamicCast_AsBPI_Battle_Character_Interface; // 0x00E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnable_ReturnValue;                     // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetAccelerating_Accelerating;             // 0x00FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9470[0x1];                                     // 0x00FB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Array_Get_Item;                           // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0104(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0105(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9471[0x2];                                     // 0x0106(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9472[0x3];                                     // 0x010D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_1;    // 0x0115(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9473[0x2];                                     // 0x0116(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Dot_VectorVector_ReturnValue_1;           // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x011C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9474[0x4];                                     // 0x013C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerAIInterface_C> K2Node_DynamicCast_AsBPI_Player_AIInterface;       // 0x0140(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9475[0x3];                                     // 0x0151(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0154(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetBattleTargetActor_TargetActor;         // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0168(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0174(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9476[0x3];                                     // 0x0175(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerAIInterface_C> K2Node_DynamicCast_AsBPI_Player_AIInterface_1;     // 0x0178(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0189(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9477[0x6];                                     // 0x018A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetBattleTargetActor_TargetActor_1;       // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleCharacterInterface_C> K2Node_DynamicCast_AsBPI_Battle_Character_Interface_1; // 0x0198(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9478[0x3];                                     // 0x01A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFNotifyAttackData                     CallFunc_GetNotifyAttackData_Data;                 // 0x01AC(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x01BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x01BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9479[0x2];                                     // 0x01BE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattlePlayer_C*                      K2Node_DynamicCast_AsRSBattle_Player;              // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_947A[0x3];                                     // 0x01C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x01CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerAIBattleThinkType                      CallFunc_GetCurrentBattleThink_NewParam;           // 0x01D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x01DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ENpcComponent_C_IsPossibleDodgeNormalAttack) == 0x000008, "Wrong alignment on BP_ENpcComponent_C_IsPossibleDodgeNormalAttack");
static_assert(sizeof(BP_ENpcComponent_C_IsPossibleDodgeNormalAttack) == 0x0001E0, "Wrong size on BP_ENpcComponent_C_IsPossibleDodgeNormalAttack");
static_assert(offsetof(BP_ENpcComponent_C_IsPossibleDodgeNormalAttack, bPossible) == 0x000000, "Member 'BP_ENpcComponent_C_IsPossibleDodgeNormalAttack::bPossible' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsPossibleDodgeNormalAttack, bForceDodge) == 0x000001, "Member 'BP_ENpcComponent_C_IsPossibleDodgeNormalAttack::bForceDodge' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsPossibleDodgeNormalAttack, LbForceDodge) == 0x000002, "Member 'BP_ENpcComponent_C_IsPossibleDodgeNormalAttack::LbForceDodge' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsPossibleDodgeNormalAttack, NewLocalVar_0) == 0x000004, "Member 'BP_ENpcComponent_C_IsPossibleDodgeNormalAttack::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsPossibleDodgeNormalAttack, LTargetActor) == 0x000018, "Member 'BP_ENpcComponent_C_IsPossibleDodgeNormalAttack::LTargetActor' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsPossibleDodgeNormalAttack, LData) == 0x000020, "Member 'BP_ENpcComponent_C_IsPossibleDodgeNormalAttack::LData' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsPossibleDodgeNormalAttack, LUseIndex) == 0x000030, "Member 'BP_ENpcComponent_C_IsPossibleDodgeNormalAttack::LUseIndex' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsPossibleDodgeNormalAttack, LWorkProbability) == 0x000038, "Member 'BP_ENpcComponent_C_IsPossibleDodgeNormalAttack::LWorkProbability' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsPossibleDodgeNormalAttack, DotCos45) == 0x000048, "Member 'BP_ENpcComponent_C_IsPossibleDodgeNormalAttack::DotCos45' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsPossibleDodgeNormalAttack, LForwardDot) == 0x00004C, "Member 'BP_ENpcComponent_C_IsPossibleDodgeNormalAttack::LForwardDot' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsPossibleDodgeNormalAttack, LTargetRightVec) == 0x000050, "Member 'BP_ENpcComponent_C_IsPossibleDodgeNormalAttack::LTargetRightVec' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsPossibleDodgeNormalAttack, LTargetForwardVec) == 0x00005C, "Member 'BP_ENpcComponent_C_IsPossibleDodgeNormalAttack::LTargetForwardVec' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsPossibleDodgeNormalAttack, LTargetDir) == 0x000068, "Member 'BP_ENpcComponent_C_IsPossibleDodgeNormalAttack::LTargetDir' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsPossibleDodgeNormalAttack, LTargetLocation) == 0x000074, "Member 'BP_ENpcComponent_C_IsPossibleDodgeNormalAttack::LTargetLocation' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsPossibleDodgeNormalAttack, LOwnerLocation) == 0x000080, "Member 'BP_ENpcComponent_C_IsPossibleDodgeNormalAttack::LOwnerLocation' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsPossibleDodgeNormalAttack, LbPossible) == 0x00008C, "Member 'BP_ENpcComponent_C_IsPossibleDodgeNormalAttack::LbPossible' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsPossibleDodgeNormalAttack, K2Node_DynamicCast_AsTargetable_Object_Interface) == 0x000090, "Member 'BP_ENpcComponent_C_IsPossibleDodgeNormalAttack::K2Node_DynamicCast_AsTargetable_Object_Interface' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsPossibleDodgeNormalAttack, K2Node_DynamicCast_bSuccess) == 0x0000A0, "Member 'BP_ENpcComponent_C_IsPossibleDodgeNormalAttack::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsPossibleDodgeNormalAttack, CallFunc_IsControlPlayer_ReturnValue) == 0x0000A1, "Member 'BP_ENpcComponent_C_IsPossibleDodgeNormalAttack::CallFunc_IsControlPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsPossibleDodgeNormalAttack, CallFunc_GetActorRightVector_ReturnValue) == 0x0000A4, "Member 'BP_ENpcComponent_C_IsPossibleDodgeNormalAttack::CallFunc_GetActorRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsPossibleDodgeNormalAttack, CallFunc_GetActorForwardVector_ReturnValue) == 0x0000B0, "Member 'BP_ENpcComponent_C_IsPossibleDodgeNormalAttack::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsPossibleDodgeNormalAttack, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000BC, "Member 'BP_ENpcComponent_C_IsPossibleDodgeNormalAttack::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsPossibleDodgeNormalAttack, CallFunc_IsActiveEnpcSASAcceleTelepo_IsActive) == 0x0000C8, "Member 'BP_ENpcComponent_C_IsPossibleDodgeNormalAttack::CallFunc_IsActiveEnpcSASAcceleTelepo_IsActive' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsPossibleDodgeNormalAttack, CallFunc_Not_PreBool_ReturnValue) == 0x0000C9, "Member 'BP_ENpcComponent_C_IsPossibleDodgeNormalAttack::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsPossibleDodgeNormalAttack, CallFunc_IsValid_ReturnValue) == 0x0000CA, "Member 'BP_ENpcComponent_C_IsPossibleDodgeNormalAttack::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsPossibleDodgeNormalAttack, CallFunc_GetPlayerID_self_CastInput) == 0x0000D0, "Member 'BP_ENpcComponent_C_IsPossibleDodgeNormalAttack::CallFunc_GetPlayerID_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsPossibleDodgeNormalAttack, CallFunc_GetPlayerID_ReturnValue) == 0x0000E0, "Member 'BP_ENpcComponent_C_IsPossibleDodgeNormalAttack::CallFunc_GetPlayerID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsPossibleDodgeNormalAttack, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000E1, "Member 'BP_ENpcComponent_C_IsPossibleDodgeNormalAttack::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsPossibleDodgeNormalAttack, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0000E2, "Member 'BP_ENpcComponent_C_IsPossibleDodgeNormalAttack::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsPossibleDodgeNormalAttack, CallFunc_BooleanOR_ReturnValue) == 0x0000E3, "Member 'BP_ENpcComponent_C_IsPossibleDodgeNormalAttack::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsPossibleDodgeNormalAttack, Temp_bool_Variable) == 0x0000E4, "Member 'BP_ENpcComponent_C_IsPossibleDodgeNormalAttack::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsPossibleDodgeNormalAttack, K2Node_DynamicCast_AsBPI_Battle_Character_Interface) == 0x0000E8, "Member 'BP_ENpcComponent_C_IsPossibleDodgeNormalAttack::K2Node_DynamicCast_AsBPI_Battle_Character_Interface' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsPossibleDodgeNormalAttack, K2Node_DynamicCast_bSuccess_1) == 0x0000F8, "Member 'BP_ENpcComponent_C_IsPossibleDodgeNormalAttack::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsPossibleDodgeNormalAttack, CallFunc_IsEnable_ReturnValue) == 0x0000F9, "Member 'BP_ENpcComponent_C_IsPossibleDodgeNormalAttack::CallFunc_IsEnable_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsPossibleDodgeNormalAttack, CallFunc_GetAccelerating_Accelerating) == 0x0000FA, "Member 'BP_ENpcComponent_C_IsPossibleDodgeNormalAttack::CallFunc_GetAccelerating_Accelerating' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsPossibleDodgeNormalAttack, CallFunc_RandomFloatInRange_ReturnValue) == 0x0000FC, "Member 'BP_ENpcComponent_C_IsPossibleDodgeNormalAttack::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsPossibleDodgeNormalAttack, CallFunc_Array_Get_Item) == 0x000100, "Member 'BP_ENpcComponent_C_IsPossibleDodgeNormalAttack::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsPossibleDodgeNormalAttack, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000104, "Member 'BP_ENpcComponent_C_IsPossibleDodgeNormalAttack::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsPossibleDodgeNormalAttack, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000105, "Member 'BP_ENpcComponent_C_IsPossibleDodgeNormalAttack::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsPossibleDodgeNormalAttack, CallFunc_Dot_VectorVector_ReturnValue) == 0x000108, "Member 'BP_ENpcComponent_C_IsPossibleDodgeNormalAttack::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsPossibleDodgeNormalAttack, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00010C, "Member 'BP_ENpcComponent_C_IsPossibleDodgeNormalAttack::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsPossibleDodgeNormalAttack, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000110, "Member 'BP_ENpcComponent_C_IsPossibleDodgeNormalAttack::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsPossibleDodgeNormalAttack, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000114, "Member 'BP_ENpcComponent_C_IsPossibleDodgeNormalAttack::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsPossibleDodgeNormalAttack, CallFunc_GreaterEqual_FloatFloat_ReturnValue_1) == 0x000115, "Member 'BP_ENpcComponent_C_IsPossibleDodgeNormalAttack::CallFunc_GreaterEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsPossibleDodgeNormalAttack, CallFunc_Dot_VectorVector_ReturnValue_1) == 0x000118, "Member 'BP_ENpcComponent_C_IsPossibleDodgeNormalAttack::CallFunc_Dot_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsPossibleDodgeNormalAttack, CallFunc_Subtract_VectorVector_ReturnValue) == 0x00011C, "Member 'BP_ENpcComponent_C_IsPossibleDodgeNormalAttack::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsPossibleDodgeNormalAttack, CallFunc_GetOwner_ReturnValue) == 0x000128, "Member 'BP_ENpcComponent_C_IsPossibleDodgeNormalAttack::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsPossibleDodgeNormalAttack, CallFunc_BreakVector_X) == 0x000130, "Member 'BP_ENpcComponent_C_IsPossibleDodgeNormalAttack::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsPossibleDodgeNormalAttack, CallFunc_BreakVector_Y) == 0x000134, "Member 'BP_ENpcComponent_C_IsPossibleDodgeNormalAttack::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsPossibleDodgeNormalAttack, CallFunc_BreakVector_Z) == 0x000138, "Member 'BP_ENpcComponent_C_IsPossibleDodgeNormalAttack::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsPossibleDodgeNormalAttack, K2Node_DynamicCast_AsBPI_Player_AIInterface) == 0x000140, "Member 'BP_ENpcComponent_C_IsPossibleDodgeNormalAttack::K2Node_DynamicCast_AsBPI_Player_AIInterface' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsPossibleDodgeNormalAttack, K2Node_DynamicCast_bSuccess_2) == 0x000150, "Member 'BP_ENpcComponent_C_IsPossibleDodgeNormalAttack::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsPossibleDodgeNormalAttack, CallFunc_MakeVector_ReturnValue) == 0x000154, "Member 'BP_ENpcComponent_C_IsPossibleDodgeNormalAttack::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsPossibleDodgeNormalAttack, CallFunc_GetBattleTargetActor_TargetActor) == 0x000160, "Member 'BP_ENpcComponent_C_IsPossibleDodgeNormalAttack::CallFunc_GetBattleTargetActor_TargetActor' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsPossibleDodgeNormalAttack, CallFunc_Normal_ReturnValue) == 0x000168, "Member 'BP_ENpcComponent_C_IsPossibleDodgeNormalAttack::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsPossibleDodgeNormalAttack, CallFunc_IsValid_ReturnValue_1) == 0x000174, "Member 'BP_ENpcComponent_C_IsPossibleDodgeNormalAttack::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsPossibleDodgeNormalAttack, K2Node_DynamicCast_AsBPI_Player_AIInterface_1) == 0x000178, "Member 'BP_ENpcComponent_C_IsPossibleDodgeNormalAttack::K2Node_DynamicCast_AsBPI_Player_AIInterface_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsPossibleDodgeNormalAttack, K2Node_DynamicCast_bSuccess_3) == 0x000188, "Member 'BP_ENpcComponent_C_IsPossibleDodgeNormalAttack::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsPossibleDodgeNormalAttack, CallFunc_IsValid_ReturnValue_2) == 0x000189, "Member 'BP_ENpcComponent_C_IsPossibleDodgeNormalAttack::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsPossibleDodgeNormalAttack, CallFunc_GetBattleTargetActor_TargetActor_1) == 0x000190, "Member 'BP_ENpcComponent_C_IsPossibleDodgeNormalAttack::CallFunc_GetBattleTargetActor_TargetActor_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsPossibleDodgeNormalAttack, K2Node_DynamicCast_AsBPI_Battle_Character_Interface_1) == 0x000198, "Member 'BP_ENpcComponent_C_IsPossibleDodgeNormalAttack::K2Node_DynamicCast_AsBPI_Battle_Character_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsPossibleDodgeNormalAttack, K2Node_DynamicCast_bSuccess_4) == 0x0001A8, "Member 'BP_ENpcComponent_C_IsPossibleDodgeNormalAttack::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsPossibleDodgeNormalAttack, CallFunc_GetNotifyAttackData_Data) == 0x0001AC, "Member 'BP_ENpcComponent_C_IsPossibleDodgeNormalAttack::CallFunc_GetNotifyAttackData_Data' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsPossibleDodgeNormalAttack, CallFunc_IsValid_ReturnValue_3) == 0x0001BC, "Member 'BP_ENpcComponent_C_IsPossibleDodgeNormalAttack::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsPossibleDodgeNormalAttack, CallFunc_IsValid_ReturnValue_4) == 0x0001BD, "Member 'BP_ENpcComponent_C_IsPossibleDodgeNormalAttack::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsPossibleDodgeNormalAttack, K2Node_DynamicCast_AsRSBattle_Player) == 0x0001C0, "Member 'BP_ENpcComponent_C_IsPossibleDodgeNormalAttack::K2Node_DynamicCast_AsRSBattle_Player' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsPossibleDodgeNormalAttack, K2Node_DynamicCast_bSuccess_5) == 0x0001C8, "Member 'BP_ENpcComponent_C_IsPossibleDodgeNormalAttack::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsPossibleDodgeNormalAttack, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x0001CC, "Member 'BP_ENpcComponent_C_IsPossibleDodgeNormalAttack::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsPossibleDodgeNormalAttack, CallFunc_IsValid_ReturnValue_5) == 0x0001D8, "Member 'BP_ENpcComponent_C_IsPossibleDodgeNormalAttack::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsPossibleDodgeNormalAttack, CallFunc_GetCurrentBattleThink_NewParam) == 0x0001D9, "Member 'BP_ENpcComponent_C_IsPossibleDodgeNormalAttack::CallFunc_GetCurrentBattleThink_NewParam' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsPossibleDodgeNormalAttack, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x0001DA, "Member 'BP_ENpcComponent_C_IsPossibleDodgeNormalAttack::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.IsReactionChance
// 0x0001 (0x0001 - 0x0000)
struct BP_ENpcComponent_C_IsReactionChance final
{
public:
	bool                                          Param_bReactionChance;                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ENpcComponent_C_IsReactionChance) == 0x000001, "Wrong alignment on BP_ENpcComponent_C_IsReactionChance");
static_assert(sizeof(BP_ENpcComponent_C_IsReactionChance) == 0x000001, "Wrong size on BP_ENpcComponent_C_IsReactionChance");
static_assert(offsetof(BP_ENpcComponent_C_IsReactionChance, Param_bReactionChance) == 0x000000, "Member 'BP_ENpcComponent_C_IsReactionChance::Param_bReactionChance' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.UpdateReactionChance
// 0x0038 (0x0038 - 0x0000)
struct BP_ENpcComponent_C_UpdateReactionChance final
{
public:
	int32                                         LCurrentElapsedTime;                               // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetDirectDamageDataArrayNum_ReturnValue;  // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetDamageDataArrayNum_ReturnValue;        // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_947B[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_947C[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetElapsedTime_ReturnValue;               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_947D[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsReactionChance_bReactionChance;         // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_947E[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_1;    // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsOver_ReturnValue;                       // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ENpcComponent_C_UpdateReactionChance) == 0x000004, "Wrong alignment on BP_ENpcComponent_C_UpdateReactionChance");
static_assert(sizeof(BP_ENpcComponent_C_UpdateReactionChance) == 0x000038, "Wrong size on BP_ENpcComponent_C_UpdateReactionChance");
static_assert(offsetof(BP_ENpcComponent_C_UpdateReactionChance, LCurrentElapsedTime) == 0x000000, "Member 'BP_ENpcComponent_C_UpdateReactionChance::LCurrentElapsedTime' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateReactionChance, CallFunc_GetDirectDamageDataArrayNum_ReturnValue) == 0x000004, "Member 'BP_ENpcComponent_C_UpdateReactionChance::CallFunc_GetDirectDamageDataArrayNum_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateReactionChance, CallFunc_GetDamageDataArrayNum_ReturnValue) == 0x000008, "Member 'BP_ENpcComponent_C_UpdateReactionChance::CallFunc_GetDamageDataArrayNum_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateReactionChance, CallFunc_IsValid_ReturnValue) == 0x00000C, "Member 'BP_ENpcComponent_C_UpdateReactionChance::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateReactionChance, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000010, "Member 'BP_ENpcComponent_C_UpdateReactionChance::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateReactionChance, CallFunc_RandomFloatInRange_ReturnValue) == 0x000014, "Member 'BP_ENpcComponent_C_UpdateReactionChance::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateReactionChance, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000018, "Member 'BP_ENpcComponent_C_UpdateReactionChance::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateReactionChance, CallFunc_GetElapsedTime_ReturnValue) == 0x00001C, "Member 'BP_ENpcComponent_C_UpdateReactionChance::CallFunc_GetElapsedTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateReactionChance, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000020, "Member 'BP_ENpcComponent_C_UpdateReactionChance::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateReactionChance, CallFunc_FTrunc_ReturnValue) == 0x000024, "Member 'BP_ENpcComponent_C_UpdateReactionChance::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateReactionChance, CallFunc_IsReactionChance_bReactionChance) == 0x000028, "Member 'BP_ENpcComponent_C_UpdateReactionChance::CallFunc_IsReactionChance_bReactionChance' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateReactionChance, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00002C, "Member 'BP_ENpcComponent_C_UpdateReactionChance::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateReactionChance, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000030, "Member 'BP_ENpcComponent_C_UpdateReactionChance::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateReactionChance, CallFunc_GreaterEqual_FloatFloat_ReturnValue_1) == 0x000034, "Member 'BP_ENpcComponent_C_UpdateReactionChance::CallFunc_GreaterEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateReactionChance, CallFunc_IsOver_ReturnValue) == 0x000035, "Member 'BP_ENpcComponent_C_UpdateReactionChance::CallFunc_IsOver_ReturnValue' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.StartReactionChance
// 0x0020 (0x0020 - 0x0000)
struct BP_ENpcComponent_C_StartReactionChance final
{
public:
	TScriptInterface<class IBPI_PlayerInterface_C> K2Node_DynamicCast_AsBPI_Player_Interface;         // 0x0000(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OnStartReactionChance_Dummy;              // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsReactionChance_bReactionChance;         // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ENpcComponent_C_StartReactionChance) == 0x000008, "Wrong alignment on BP_ENpcComponent_C_StartReactionChance");
static_assert(sizeof(BP_ENpcComponent_C_StartReactionChance) == 0x000020, "Wrong size on BP_ENpcComponent_C_StartReactionChance");
static_assert(offsetof(BP_ENpcComponent_C_StartReactionChance, K2Node_DynamicCast_AsBPI_Player_Interface) == 0x000000, "Member 'BP_ENpcComponent_C_StartReactionChance::K2Node_DynamicCast_AsBPI_Player_Interface' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartReactionChance, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_ENpcComponent_C_StartReactionChance::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartReactionChance, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'BP_ENpcComponent_C_StartReactionChance::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartReactionChance, CallFunc_OnStartReactionChance_Dummy) == 0x000012, "Member 'BP_ENpcComponent_C_StartReactionChance::CallFunc_OnStartReactionChance_Dummy' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartReactionChance, CallFunc_IsReactionChance_bReactionChance) == 0x000013, "Member 'BP_ENpcComponent_C_StartReactionChance::CallFunc_IsReactionChance_bReactionChance' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartReactionChance, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000014, "Member 'BP_ENpcComponent_C_StartReactionChance::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartReactionChance, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000018, "Member 'BP_ENpcComponent_C_StartReactionChance::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.EndReactionChance
// 0x0178 (0x0178 - 0x0000)
struct BP_ENpcComponent_C_EndReactionChance final
{
public:
	bool                                          bDown;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bForce;                                            // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_947F[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         LCurrentDown;                                      // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LCurrentKnockBack;                                 // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LCurrentWince;                                     // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9480[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetDirectDamageDataArrayNum_ReturnValue;  // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetDamageDataArrayNum_ReturnValue;        // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9481[0x2];                                     // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsReactionChance_bReactionChance;         // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9482[0x6];                                     // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UCharactersParameterComponent*          CallFunc_GetCharactersParameterComponentFromActor_ReturnValue; // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9483[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCharactersParameterBasic              CallFunc_GetParameterBasic_ReturnValue;            // 0x0040(0x0068)()
	struct FCharactersParameterBasic              K2Node_SetFieldsInStruct_StructOut;                // 0x00A8(0x0068)()
	struct FCharactersParameterBasic              K2Node_SetFieldsInStruct_StructOut_1;              // 0x0110(0x0068)()
};
static_assert(alignof(BP_ENpcComponent_C_EndReactionChance) == 0x000008, "Wrong alignment on BP_ENpcComponent_C_EndReactionChance");
static_assert(sizeof(BP_ENpcComponent_C_EndReactionChance) == 0x000178, "Wrong size on BP_ENpcComponent_C_EndReactionChance");
static_assert(offsetof(BP_ENpcComponent_C_EndReactionChance, bDown) == 0x000000, "Member 'BP_ENpcComponent_C_EndReactionChance::bDown' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_EndReactionChance, bForce) == 0x000001, "Member 'BP_ENpcComponent_C_EndReactionChance::bForce' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_EndReactionChance, LCurrentDown) == 0x000004, "Member 'BP_ENpcComponent_C_EndReactionChance::LCurrentDown' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_EndReactionChance, LCurrentKnockBack) == 0x000008, "Member 'BP_ENpcComponent_C_EndReactionChance::LCurrentKnockBack' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_EndReactionChance, LCurrentWince) == 0x00000C, "Member 'BP_ENpcComponent_C_EndReactionChance::LCurrentWince' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_EndReactionChance, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_ENpcComponent_C_EndReactionChance::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_EndReactionChance, CallFunc_GetDirectDamageDataArrayNum_ReturnValue) == 0x000014, "Member 'BP_ENpcComponent_C_EndReactionChance::CallFunc_GetDirectDamageDataArrayNum_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_EndReactionChance, CallFunc_GetDamageDataArrayNum_ReturnValue) == 0x000018, "Member 'BP_ENpcComponent_C_EndReactionChance::CallFunc_GetDamageDataArrayNum_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_EndReactionChance, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00001C, "Member 'BP_ENpcComponent_C_EndReactionChance::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_EndReactionChance, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x00001D, "Member 'BP_ENpcComponent_C_EndReactionChance::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_EndReactionChance, CallFunc_GetOwner_ReturnValue) == 0x000020, "Member 'BP_ENpcComponent_C_EndReactionChance::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_EndReactionChance, CallFunc_IsReactionChance_bReactionChance) == 0x000028, "Member 'BP_ENpcComponent_C_EndReactionChance::CallFunc_IsReactionChance_bReactionChance' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_EndReactionChance, CallFunc_IsValid_ReturnValue_1) == 0x000029, "Member 'BP_ENpcComponent_C_EndReactionChance::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_EndReactionChance, CallFunc_GetCharactersParameterComponentFromActor_ReturnValue) == 0x000030, "Member 'BP_ENpcComponent_C_EndReactionChance::CallFunc_GetCharactersParameterComponentFromActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_EndReactionChance, CallFunc_IsValid_ReturnValue_2) == 0x000038, "Member 'BP_ENpcComponent_C_EndReactionChance::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_EndReactionChance, CallFunc_GetParameterBasic_ReturnValue) == 0x000040, "Member 'BP_ENpcComponent_C_EndReactionChance::CallFunc_GetParameterBasic_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_EndReactionChance, K2Node_SetFieldsInStruct_StructOut) == 0x0000A8, "Member 'BP_ENpcComponent_C_EndReactionChance::K2Node_SetFieldsInStruct_StructOut' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_EndReactionChance, K2Node_SetFieldsInStruct_StructOut_1) == 0x000110, "Member 'BP_ENpcComponent_C_EndReactionChance::K2Node_SetFieldsInStruct_StructOut_1' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.UpdateDodge
// 0x0088 (0x0088 - 0x0000)
struct BP_ENpcComponent_C_UpdateDodge final
{
public:
	class AActor*                                 LTargetActor;                                      // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFNotifyAttackData                     LData;                                             // 0x0008(0x0010)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LUseIndex;                                         // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9484[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<float>                                 LWorkProbability;                                  // 0x0020(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	float                                         DotCos45;                                          // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LForwardDot;                                       // 0x0034(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LTargetRightVec;                                   // 0x0038(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LTargetForwardVec;                                 // 0x0044(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LTargetDir;                                        // 0x0050(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LTargetLocation;                                   // 0x005C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LOwnerLocation;                                    // 0x0068(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LbPossible;                                        // 0x0074(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsOver_ReturnValue;                       // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9485[0x2];                                     // 0x0076(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnable_ReturnValue;                     // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ENpcComponent_C_UpdateDodge) == 0x000008, "Wrong alignment on BP_ENpcComponent_C_UpdateDodge");
static_assert(sizeof(BP_ENpcComponent_C_UpdateDodge) == 0x000088, "Wrong size on BP_ENpcComponent_C_UpdateDodge");
static_assert(offsetof(BP_ENpcComponent_C_UpdateDodge, LTargetActor) == 0x000000, "Member 'BP_ENpcComponent_C_UpdateDodge::LTargetActor' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateDodge, LData) == 0x000008, "Member 'BP_ENpcComponent_C_UpdateDodge::LData' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateDodge, LUseIndex) == 0x000018, "Member 'BP_ENpcComponent_C_UpdateDodge::LUseIndex' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateDodge, LWorkProbability) == 0x000020, "Member 'BP_ENpcComponent_C_UpdateDodge::LWorkProbability' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateDodge, DotCos45) == 0x000030, "Member 'BP_ENpcComponent_C_UpdateDodge::DotCos45' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateDodge, LForwardDot) == 0x000034, "Member 'BP_ENpcComponent_C_UpdateDodge::LForwardDot' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateDodge, LTargetRightVec) == 0x000038, "Member 'BP_ENpcComponent_C_UpdateDodge::LTargetRightVec' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateDodge, LTargetForwardVec) == 0x000044, "Member 'BP_ENpcComponent_C_UpdateDodge::LTargetForwardVec' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateDodge, LTargetDir) == 0x000050, "Member 'BP_ENpcComponent_C_UpdateDodge::LTargetDir' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateDodge, LTargetLocation) == 0x00005C, "Member 'BP_ENpcComponent_C_UpdateDodge::LTargetLocation' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateDodge, LOwnerLocation) == 0x000068, "Member 'BP_ENpcComponent_C_UpdateDodge::LOwnerLocation' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateDodge, LbPossible) == 0x000074, "Member 'BP_ENpcComponent_C_UpdateDodge::LbPossible' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateDodge, CallFunc_IsOver_ReturnValue) == 0x000075, "Member 'BP_ENpcComponent_C_UpdateDodge::CallFunc_IsOver_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateDodge, CallFunc_GetOwner_ReturnValue) == 0x000078, "Member 'BP_ENpcComponent_C_UpdateDodge::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateDodge, CallFunc_IsValid_ReturnValue) == 0x000080, "Member 'BP_ENpcComponent_C_UpdateDodge::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateDodge, CallFunc_IsEnable_ReturnValue) == 0x000081, "Member 'BP_ENpcComponent_C_UpdateDodge::CallFunc_IsEnable_ReturnValue' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.SetChanceEndAction
// 0x0060 (0x0060 - 0x0000)
struct BP_ENpcComponent_C_SetChanceEndAction final
{
public:
	class UBP_PlayerAIComponent_C*                LPlayerAiComp;                                     // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_PlayerInterface_C> K2Node_DynamicCast_AsBPI_Player_Interface;         // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerAIBattleThinkType                      CallFunc_SelectReactionChanceEndAction_OutEndAction; // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsIntence_bIntence;                       // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9486[0x1];                                     // 0x0023(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9487[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattlePlayer_C*                      K2Node_DynamicCast_AsRSBattle_Player;              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9488[0x6];                                     // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_EnemyInterface_C> K2Node_DynamicCast_AsBPI_Enemy_Interface;          // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnemyDamageDown_bool;                   // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnableActionDodge_bEnable;              // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x005B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ENpcComponent_C_SetChanceEndAction) == 0x000008, "Wrong alignment on BP_ENpcComponent_C_SetChanceEndAction");
static_assert(sizeof(BP_ENpcComponent_C_SetChanceEndAction) == 0x000060, "Wrong size on BP_ENpcComponent_C_SetChanceEndAction");
static_assert(offsetof(BP_ENpcComponent_C_SetChanceEndAction, LPlayerAiComp) == 0x000000, "Member 'BP_ENpcComponent_C_SetChanceEndAction::LPlayerAiComp' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_SetChanceEndAction, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_ENpcComponent_C_SetChanceEndAction::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_SetChanceEndAction, K2Node_DynamicCast_AsBPI_Player_Interface) == 0x000010, "Member 'BP_ENpcComponent_C_SetChanceEndAction::K2Node_DynamicCast_AsBPI_Player_Interface' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_SetChanceEndAction, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_ENpcComponent_C_SetChanceEndAction::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_SetChanceEndAction, CallFunc_SelectReactionChanceEndAction_OutEndAction) == 0x000021, "Member 'BP_ENpcComponent_C_SetChanceEndAction::CallFunc_SelectReactionChanceEndAction_OutEndAction' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_SetChanceEndAction, CallFunc_IsIntence_bIntence) == 0x000022, "Member 'BP_ENpcComponent_C_SetChanceEndAction::CallFunc_IsIntence_bIntence' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_SetChanceEndAction, CallFunc_SelectFloat_ReturnValue) == 0x000024, "Member 'BP_ENpcComponent_C_SetChanceEndAction::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_SetChanceEndAction, CallFunc_RandomFloatInRange_ReturnValue) == 0x000028, "Member 'BP_ENpcComponent_C_SetChanceEndAction::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_SetChanceEndAction, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x00002C, "Member 'BP_ENpcComponent_C_SetChanceEndAction::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_SetChanceEndAction, CallFunc_GetOwner_ReturnValue_1) == 0x000030, "Member 'BP_ENpcComponent_C_SetChanceEndAction::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_SetChanceEndAction, K2Node_DynamicCast_AsRSBattle_Player) == 0x000038, "Member 'BP_ENpcComponent_C_SetChanceEndAction::K2Node_DynamicCast_AsRSBattle_Player' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_SetChanceEndAction, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'BP_ENpcComponent_C_SetChanceEndAction::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_SetChanceEndAction, CallFunc_IsValid_ReturnValue) == 0x000041, "Member 'BP_ENpcComponent_C_SetChanceEndAction::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_SetChanceEndAction, K2Node_DynamicCast_AsBPI_Enemy_Interface) == 0x000048, "Member 'BP_ENpcComponent_C_SetChanceEndAction::K2Node_DynamicCast_AsBPI_Enemy_Interface' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_SetChanceEndAction, K2Node_DynamicCast_bSuccess_2) == 0x000058, "Member 'BP_ENpcComponent_C_SetChanceEndAction::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_SetChanceEndAction, CallFunc_IsEnemyDamageDown_bool) == 0x000059, "Member 'BP_ENpcComponent_C_SetChanceEndAction::CallFunc_IsEnemyDamageDown_bool' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_SetChanceEndAction, CallFunc_IsEnableActionDodge_bEnable) == 0x00005A, "Member 'BP_ENpcComponent_C_SetChanceEndAction::CallFunc_IsEnableActionDodge_bEnable' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_SetChanceEndAction, CallFunc_IsValid_ReturnValue_1) == 0x00005B, "Member 'BP_ENpcComponent_C_SetChanceEndAction::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.IsIntence
// 0x0001 (0x0001 - 0x0000)
struct BP_ENpcComponent_C_IsIntence final
{
public:
	bool                                          Param_bIntence;                                    // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ENpcComponent_C_IsIntence) == 0x000001, "Wrong alignment on BP_ENpcComponent_C_IsIntence");
static_assert(sizeof(BP_ENpcComponent_C_IsIntence) == 0x000001, "Wrong size on BP_ENpcComponent_C_IsIntence");
static_assert(offsetof(BP_ENpcComponent_C_IsIntence, Param_bIntence) == 0x000000, "Member 'BP_ENpcComponent_C_IsIntence::Param_bIntence' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.SetIntence
// 0x0001 (0x0001 - 0x0000)
struct BP_ENpcComponent_C_SetIntence final
{
public:
	bool                                          Param_bIntence;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ENpcComponent_C_SetIntence) == 0x000001, "Wrong alignment on BP_ENpcComponent_C_SetIntence");
static_assert(sizeof(BP_ENpcComponent_C_SetIntence) == 0x000001, "Wrong size on BP_ENpcComponent_C_SetIntence");
static_assert(offsetof(BP_ENpcComponent_C_SetIntence, Param_bIntence) == 0x000000, "Member 'BP_ENpcComponent_C_SetIntence::Param_bIntence' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.StartSeeThrough
// 0x0003 (0x0003 - 0x0000)
struct BP_ENpcComponent_C_StartSeeThrough final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ENpcComponent_C_StartSeeThrough) == 0x000001, "Wrong alignment on BP_ENpcComponent_C_StartSeeThrough");
static_assert(sizeof(BP_ENpcComponent_C_StartSeeThrough) == 0x000003, "Wrong size on BP_ENpcComponent_C_StartSeeThrough");
static_assert(offsetof(BP_ENpcComponent_C_StartSeeThrough, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_ENpcComponent_C_StartSeeThrough::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartSeeThrough, CallFunc_IsValid_ReturnValue_1) == 0x000001, "Member 'BP_ENpcComponent_C_StartSeeThrough::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartSeeThrough, CallFunc_IsValid_ReturnValue_2) == 0x000002, "Member 'BP_ENpcComponent_C_StartSeeThrough::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.EndSeeThrough
// 0x0003 (0x0003 - 0x0000)
struct BP_ENpcComponent_C_EndSeeThrough final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ENpcComponent_C_EndSeeThrough) == 0x000001, "Wrong alignment on BP_ENpcComponent_C_EndSeeThrough");
static_assert(sizeof(BP_ENpcComponent_C_EndSeeThrough) == 0x000003, "Wrong size on BP_ENpcComponent_C_EndSeeThrough");
static_assert(offsetof(BP_ENpcComponent_C_EndSeeThrough, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_ENpcComponent_C_EndSeeThrough::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_EndSeeThrough, CallFunc_IsValid_ReturnValue_1) == 0x000001, "Member 'BP_ENpcComponent_C_EndSeeThrough::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_EndSeeThrough, CallFunc_IsValid_ReturnValue_2) == 0x000002, "Member 'BP_ENpcComponent_C_EndSeeThrough::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.UpdateSeeThrough
// 0x0030 (0x0030 - 0x0000)
struct BP_ENpcComponent_C_UpdateSeeThrough final
{
public:
	bool                                          LEnableOwnerSeeThrough;                            // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9489[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerInterface_C> K2Node_DynamicCast_AsBPI_Player_Interface;         // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnableSeeThrough_bEnable;               // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_948A[0x5];                                     // 0x001B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_EnemyManager_C*                     CallFunc_GetEnemyManager_Manager;                  // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsStealthSeeEnable_Return;                // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ENpcComponent_C_UpdateSeeThrough) == 0x000008, "Wrong alignment on BP_ENpcComponent_C_UpdateSeeThrough");
static_assert(sizeof(BP_ENpcComponent_C_UpdateSeeThrough) == 0x000030, "Wrong size on BP_ENpcComponent_C_UpdateSeeThrough");
static_assert(offsetof(BP_ENpcComponent_C_UpdateSeeThrough, LEnableOwnerSeeThrough) == 0x000000, "Member 'BP_ENpcComponent_C_UpdateSeeThrough::LEnableOwnerSeeThrough' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateSeeThrough, K2Node_DynamicCast_AsBPI_Player_Interface) == 0x000008, "Member 'BP_ENpcComponent_C_UpdateSeeThrough::K2Node_DynamicCast_AsBPI_Player_Interface' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateSeeThrough, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_ENpcComponent_C_UpdateSeeThrough::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateSeeThrough, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'BP_ENpcComponent_C_UpdateSeeThrough::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateSeeThrough, CallFunc_IsEnableSeeThrough_bEnable) == 0x00001A, "Member 'BP_ENpcComponent_C_UpdateSeeThrough::CallFunc_IsEnableSeeThrough_bEnable' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateSeeThrough, CallFunc_GetEnemyManager_Manager) == 0x000020, "Member 'BP_ENpcComponent_C_UpdateSeeThrough::CallFunc_GetEnemyManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateSeeThrough, CallFunc_IsValid_ReturnValue_1) == 0x000028, "Member 'BP_ENpcComponent_C_UpdateSeeThrough::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateSeeThrough, CallFunc_IsStealthSeeEnable_Return) == 0x000029, "Member 'BP_ENpcComponent_C_UpdateSeeThrough::CallFunc_IsStealthSeeEnable_Return' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.SetEnpcKind
// 0x0002 (0x0002 - 0x0000)
struct BP_ENpcComponent_C_SetEnpcKind final
{
public:
	ENpcKind                                      NewKind;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ENpcComponent_C_SetEnpcKind) == 0x000001, "Wrong alignment on BP_ENpcComponent_C_SetEnpcKind");
static_assert(sizeof(BP_ENpcComponent_C_SetEnpcKind) == 0x000002, "Wrong size on BP_ENpcComponent_C_SetEnpcKind");
static_assert(offsetof(BP_ENpcComponent_C_SetEnpcKind, NewKind) == 0x000000, "Member 'BP_ENpcComponent_C_SetEnpcKind::NewKind' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_SetEnpcKind, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000001, "Member 'BP_ENpcComponent_C_SetEnpcKind::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.GetENpcKind
// 0x0001 (0x0001 - 0x0000)
struct BP_ENpcComponent_C_GetENpcKind final
{
public:
	ENpcKind                                      Param_ENpcKind;                                    // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ENpcComponent_C_GetENpcKind) == 0x000001, "Wrong alignment on BP_ENpcComponent_C_GetENpcKind");
static_assert(sizeof(BP_ENpcComponent_C_GetENpcKind) == 0x000001, "Wrong size on BP_ENpcComponent_C_GetENpcKind");
static_assert(offsetof(BP_ENpcComponent_C_GetENpcKind, Param_ENpcKind) == 0x000000, "Member 'BP_ENpcComponent_C_GetENpcKind::Param_ENpcKind' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.SetHitSpTrigger
// 0x0001 (0x0001 - 0x0000)
struct BP_ENpcComponent_C_SetHitSpTrigger final
{
public:
	bool                                          bHit;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ENpcComponent_C_SetHitSpTrigger) == 0x000001, "Wrong alignment on BP_ENpcComponent_C_SetHitSpTrigger");
static_assert(sizeof(BP_ENpcComponent_C_SetHitSpTrigger) == 0x000001, "Wrong size on BP_ENpcComponent_C_SetHitSpTrigger");
static_assert(offsetof(BP_ENpcComponent_C_SetHitSpTrigger, bHit) == 0x000000, "Member 'BP_ENpcComponent_C_SetHitSpTrigger::bHit' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.GetHitSpTrigger
// 0x0001 (0x0001 - 0x0000)
struct BP_ENpcComponent_C_GetHitSpTrigger final
{
public:
	bool                                          Param_bHitSpTrigger;                               // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ENpcComponent_C_GetHitSpTrigger) == 0x000001, "Wrong alignment on BP_ENpcComponent_C_GetHitSpTrigger");
static_assert(sizeof(BP_ENpcComponent_C_GetHitSpTrigger) == 0x000001, "Wrong size on BP_ENpcComponent_C_GetHitSpTrigger");
static_assert(offsetof(BP_ENpcComponent_C_GetHitSpTrigger, Param_bHitSpTrigger) == 0x000000, "Member 'BP_ENpcComponent_C_GetHitSpTrigger::Param_bHitSpTrigger' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.GetSpActiveHpRate
// 0x0004 (0x0004 - 0x0000)
struct BP_ENpcComponent_C_GetSpActiveHpRate final
{
public:
	float                                         ActiveHpRate;                                      // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ENpcComponent_C_GetSpActiveHpRate) == 0x000004, "Wrong alignment on BP_ENpcComponent_C_GetSpActiveHpRate");
static_assert(sizeof(BP_ENpcComponent_C_GetSpActiveHpRate) == 0x000004, "Wrong size on BP_ENpcComponent_C_GetSpActiveHpRate");
static_assert(offsetof(BP_ENpcComponent_C_GetSpActiveHpRate, ActiveHpRate) == 0x000000, "Member 'BP_ENpcComponent_C_GetSpActiveHpRate::ActiveHpRate' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.GetActiveSpTrigger
// 0x0001 (0x0001 - 0x0000)
struct BP_ENpcComponent_C_GetActiveSpTrigger final
{
public:
	bool                                          Param_bActiveSpTrigger;                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ENpcComponent_C_GetActiveSpTrigger) == 0x000001, "Wrong alignment on BP_ENpcComponent_C_GetActiveSpTrigger");
static_assert(sizeof(BP_ENpcComponent_C_GetActiveSpTrigger) == 0x000001, "Wrong size on BP_ENpcComponent_C_GetActiveSpTrigger");
static_assert(offsetof(BP_ENpcComponent_C_GetActiveSpTrigger, Param_bActiveSpTrigger) == 0x000000, "Member 'BP_ENpcComponent_C_GetActiveSpTrigger::Param_bActiveSpTrigger' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.SetActiveSpTrigger
// 0x0001 (0x0001 - 0x0000)
struct BP_ENpcComponent_C_SetActiveSpTrigger final
{
public:
	bool                                          Active;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ENpcComponent_C_SetActiveSpTrigger) == 0x000001, "Wrong alignment on BP_ENpcComponent_C_SetActiveSpTrigger");
static_assert(sizeof(BP_ENpcComponent_C_SetActiveSpTrigger) == 0x000001, "Wrong size on BP_ENpcComponent_C_SetActiveSpTrigger");
static_assert(offsetof(BP_ENpcComponent_C_SetActiveSpTrigger, Active) == 0x000000, "Member 'BP_ENpcComponent_C_SetActiveSpTrigger::Active' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.CanSpTrigger
// 0x0030 (0x0030 - 0x0000)
struct BP_ENpcComponent_C_CanSpTrigger final
{
public:
	bool                                          bCanSpTrigger;                                     // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          LCanSpTrigger;                                     // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetActiveSpTrigger_bActiveSpTrigger;      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_948B[0x5];                                     // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetSpActiveHpRate_ActiveHpRate;           // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_948C[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattleCharacter_C*                   K2Node_DynamicCast_AsRSBattle_Character;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_948D[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetHPPercent_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ENpcComponent_C_CanSpTrigger) == 0x000008, "Wrong alignment on BP_ENpcComponent_C_CanSpTrigger");
static_assert(sizeof(BP_ENpcComponent_C_CanSpTrigger) == 0x000030, "Wrong size on BP_ENpcComponent_C_CanSpTrigger");
static_assert(offsetof(BP_ENpcComponent_C_CanSpTrigger, bCanSpTrigger) == 0x000000, "Member 'BP_ENpcComponent_C_CanSpTrigger::bCanSpTrigger' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_CanSpTrigger, LCanSpTrigger) == 0x000001, "Member 'BP_ENpcComponent_C_CanSpTrigger::LCanSpTrigger' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_CanSpTrigger, CallFunc_GetActiveSpTrigger_bActiveSpTrigger) == 0x000002, "Member 'BP_ENpcComponent_C_CanSpTrigger::CallFunc_GetActiveSpTrigger_bActiveSpTrigger' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_CanSpTrigger, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_ENpcComponent_C_CanSpTrigger::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_CanSpTrigger, CallFunc_GetSpActiveHpRate_ActiveHpRate) == 0x000010, "Member 'BP_ENpcComponent_C_CanSpTrigger::CallFunc_GetSpActiveHpRate_ActiveHpRate' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_CanSpTrigger, K2Node_DynamicCast_AsRSBattle_Character) == 0x000018, "Member 'BP_ENpcComponent_C_CanSpTrigger::K2Node_DynamicCast_AsRSBattle_Character' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_CanSpTrigger, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_ENpcComponent_C_CanSpTrigger::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_CanSpTrigger, CallFunc_GetHPPercent_ReturnValue) == 0x000024, "Member 'BP_ENpcComponent_C_CanSpTrigger::CallFunc_GetHPPercent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_CanSpTrigger, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BP_ENpcComponent_C_CanSpTrigger::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_CanSpTrigger, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000029, "Member 'BP_ENpcComponent_C_CanSpTrigger::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.Check Brain Field Start Hp
// 0x00A0 (0x00A0 - 0x0000)
struct BP_ENpcComponent_C_Check_Brain_Field_Start_Hp final
{
public:
	class ARSBattlePlayer_C*                      LOwner;                                            // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_ENpcInterface_C>  CallFunc_IsUniqueCondition_OpenBrainField_self_CastInput; // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsUniqueCondition_OpenBrainField_bOk;     // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_948E[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_ENpcInterface_C>  CallFunc_PassedStartBrainFieldStartHp_self_CastInput; // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_PassedStartBrainFieldStartHp_bDummy;      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_948F[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BrainFieldManager_C*                CallFunc_GetBrainFieldManager_Manager;             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InBranField_InBrainDield;                 // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9490[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Array_Get_Item;                           // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9491[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CharacterParamater_C> K2Node_DynamicCast_AsBPI_Character_Paramater;      // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9492[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetHPPercent_Percent;                     // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsUseGuts_ReturnValue;                    // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9493[0x5];                                     // 0x006B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CharacterParamater_C> CallFunc_IsDead_self_CastInput;                    // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDead_bDead;                             // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayerStatus_Result;                    // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9494[0x6];                                     // 0x0082(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattlePlayer_C*                      K2Node_DynamicCast_AsRSBattle_Player;              // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ENpcComponent_C_Check_Brain_Field_Start_Hp) == 0x000008, "Wrong alignment on BP_ENpcComponent_C_Check_Brain_Field_Start_Hp");
static_assert(sizeof(BP_ENpcComponent_C_Check_Brain_Field_Start_Hp) == 0x0000A0, "Wrong size on BP_ENpcComponent_C_Check_Brain_Field_Start_Hp");
static_assert(offsetof(BP_ENpcComponent_C_Check_Brain_Field_Start_Hp, LOwner) == 0x000000, "Member 'BP_ENpcComponent_C_Check_Brain_Field_Start_Hp::LOwner' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Check_Brain_Field_Start_Hp, CallFunc_IsUniqueCondition_OpenBrainField_self_CastInput) == 0x000008, "Member 'BP_ENpcComponent_C_Check_Brain_Field_Start_Hp::CallFunc_IsUniqueCondition_OpenBrainField_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Check_Brain_Field_Start_Hp, CallFunc_IsUniqueCondition_OpenBrainField_bOk) == 0x000018, "Member 'BP_ENpcComponent_C_Check_Brain_Field_Start_Hp::CallFunc_IsUniqueCondition_OpenBrainField_bOk' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Check_Brain_Field_Start_Hp, CallFunc_PassedStartBrainFieldStartHp_self_CastInput) == 0x000020, "Member 'BP_ENpcComponent_C_Check_Brain_Field_Start_Hp::CallFunc_PassedStartBrainFieldStartHp_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Check_Brain_Field_Start_Hp, CallFunc_PassedStartBrainFieldStartHp_bDummy) == 0x000030, "Member 'BP_ENpcComponent_C_Check_Brain_Field_Start_Hp::CallFunc_PassedStartBrainFieldStartHp_bDummy' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Check_Brain_Field_Start_Hp, CallFunc_GetBrainFieldManager_Manager) == 0x000038, "Member 'BP_ENpcComponent_C_Check_Brain_Field_Start_Hp::CallFunc_GetBrainFieldManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Check_Brain_Field_Start_Hp, CallFunc_InBranField_InBrainDield) == 0x000040, "Member 'BP_ENpcComponent_C_Check_Brain_Field_Start_Hp::CallFunc_InBranField_InBrainDield' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Check_Brain_Field_Start_Hp, CallFunc_Array_Get_Item) == 0x000044, "Member 'BP_ENpcComponent_C_Check_Brain_Field_Start_Hp::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Check_Brain_Field_Start_Hp, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000048, "Member 'BP_ENpcComponent_C_Check_Brain_Field_Start_Hp::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Check_Brain_Field_Start_Hp, K2Node_DynamicCast_AsBPI_Character_Paramater) == 0x000050, "Member 'BP_ENpcComponent_C_Check_Brain_Field_Start_Hp::K2Node_DynamicCast_AsBPI_Character_Paramater' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Check_Brain_Field_Start_Hp, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'BP_ENpcComponent_C_Check_Brain_Field_Start_Hp::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Check_Brain_Field_Start_Hp, CallFunc_GetHPPercent_Percent) == 0x000064, "Member 'BP_ENpcComponent_C_Check_Brain_Field_Start_Hp::CallFunc_GetHPPercent_Percent' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Check_Brain_Field_Start_Hp, CallFunc_IsValid_ReturnValue) == 0x000068, "Member 'BP_ENpcComponent_C_Check_Brain_Field_Start_Hp::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Check_Brain_Field_Start_Hp, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000069, "Member 'BP_ENpcComponent_C_Check_Brain_Field_Start_Hp::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Check_Brain_Field_Start_Hp, CallFunc_IsUseGuts_ReturnValue) == 0x00006A, "Member 'BP_ENpcComponent_C_Check_Brain_Field_Start_Hp::CallFunc_IsUseGuts_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Check_Brain_Field_Start_Hp, CallFunc_IsDead_self_CastInput) == 0x000070, "Member 'BP_ENpcComponent_C_Check_Brain_Field_Start_Hp::CallFunc_IsDead_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Check_Brain_Field_Start_Hp, CallFunc_IsDead_bDead) == 0x000080, "Member 'BP_ENpcComponent_C_Check_Brain_Field_Start_Hp::CallFunc_IsDead_bDead' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Check_Brain_Field_Start_Hp, CallFunc_IsPlayerStatus_Result) == 0x000081, "Member 'BP_ENpcComponent_C_Check_Brain_Field_Start_Hp::CallFunc_IsPlayerStatus_Result' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Check_Brain_Field_Start_Hp, CallFunc_GetOwner_ReturnValue) == 0x000088, "Member 'BP_ENpcComponent_C_Check_Brain_Field_Start_Hp::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Check_Brain_Field_Start_Hp, K2Node_DynamicCast_AsRSBattle_Player) == 0x000090, "Member 'BP_ENpcComponent_C_Check_Brain_Field_Start_Hp::K2Node_DynamicCast_AsRSBattle_Player' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Check_Brain_Field_Start_Hp, K2Node_DynamicCast_bSuccess_1) == 0x000098, "Member 'BP_ENpcComponent_C_Check_Brain_Field_Start_Hp::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Check_Brain_Field_Start_Hp, CallFunc_IsValid_ReturnValue_1) == 0x000099, "Member 'BP_ENpcComponent_C_Check_Brain_Field_Start_Hp::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.IsSpStart
// 0x0002 (0x0002 - 0x0000)
struct BP_ENpcComponent_C_IsSpStart final
{
public:
	bool                                          Param_bSpStart;                                    // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          LCanSpTrigger;                                     // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ENpcComponent_C_IsSpStart) == 0x000001, "Wrong alignment on BP_ENpcComponent_C_IsSpStart");
static_assert(sizeof(BP_ENpcComponent_C_IsSpStart) == 0x000002, "Wrong size on BP_ENpcComponent_C_IsSpStart");
static_assert(offsetof(BP_ENpcComponent_C_IsSpStart, Param_bSpStart) == 0x000000, "Member 'BP_ENpcComponent_C_IsSpStart::Param_bSpStart' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsSpStart, LCanSpTrigger) == 0x000001, "Member 'BP_ENpcComponent_C_IsSpStart::LCanSpTrigger' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.SetSpStart
// 0x0002 (0x0002 - 0x0000)
struct BP_ENpcComponent_C_SetSpStart final
{
public:
	bool                                          Param_bSpStart;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          LCanSpTrigger;                                     // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ENpcComponent_C_SetSpStart) == 0x000001, "Wrong alignment on BP_ENpcComponent_C_SetSpStart");
static_assert(sizeof(BP_ENpcComponent_C_SetSpStart) == 0x000002, "Wrong size on BP_ENpcComponent_C_SetSpStart");
static_assert(offsetof(BP_ENpcComponent_C_SetSpStart, Param_bSpStart) == 0x000000, "Member 'BP_ENpcComponent_C_SetSpStart::Param_bSpStart' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_SetSpStart, LCanSpTrigger) == 0x000001, "Member 'BP_ENpcComponent_C_SetSpStart::LCanSpTrigger' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.UpdateEnpcSp
// 0x0140 (0x0140 - 0x0000)
struct BP_ENpcComponent_C_UpdateEnpcSp final
{
public:
	bool                                          LEnableOwnerSeeThrough;                            // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerID                                     Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerID                                     Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9495[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager_1;         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9496[0x6];                                     // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattlePlayer_C*                      CallFunc_GetMainPlayer_Player;                     // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattlePlayer_C*                      CallFunc_GetMainPlayer_Player_1;                   // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IPlayerInterface>      K2Node_DynamicCast_AsPlayer_Interface;             // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9497[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IPlayerInterface>      K2Node_DynamicCast_AsPlayer_Interface_1;           // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerID                                     CallFunc_GetPlayerID_ReturnValue;                  // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerID                                     CallFunc_GetPlayerID_ReturnValue_1;                // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x005B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9498[0x3];                                     // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_ENpcInterface_C>  K2Node_DynamicCast_AsBPI_ENpc_Interface;           // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9499[0x7];                                     // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IPlayerInterface>      CallFunc_GetPlayerID_self_CastInput;               // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerID                                     CallFunc_GetPlayerID_ReturnValue_2;                // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Em8200_SetMaskVisibility_Return;          // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_949A[0x5];                                     // 0x008B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IPlayerInterface>      CallFunc_GetPlayerID_self_CastInput_1;             // 0x0090(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerID                                     CallFunc_GetPlayerID_ReturnValue_3;                // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanPlayCutScene_OK;                       // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x00A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanPlayCutScene_OK_1;                     // 0x00A3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_1;       // 0x00A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_2;       // 0x00A6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x00A7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetWorldNormalDeltaSeconds_ReturnValue;   // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_949B[0x4];                                     // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_ENpcInterface_C>  K2Node_DynamicCast_AsBPI_ENpc_Interface_1;         // 0x00B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_949C[0x7];                                     // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_ENpcInterface_C>  K2Node_DynamicCast_AsBPI_ENpc_Interface_2;         // 0x00D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Em8200_SetMaskVisibility_Return_1;        // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_949D[0x6];                                     // 0x00E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_ENPCSequencerComponent_C*           CallFunc_GetEnpcSequencerComponent_Component;      // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_StartSequnecer_dummy;                     // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_StartSequnecer_dummy_1;                   // 0x00F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_StartSequnecer_dummy_2;                   // 0x00F3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_949E[0x3];                                     // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetWorldNormalDeltaSeconds_ReturnValue_1; // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0104(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x0105(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x0106(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_949F[0x1];                                     // 0x0107(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BattleManager_C*                    CallFunc_GetBattleManager_BattleManager;           // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_9;                    // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_10;                   // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetHitSpTrigger_bHitSpTrigger;            // 0x0112(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_94A0[0x5];                                     // 0x0113(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_ENpcInterface_C>  K2Node_DynamicCast_AsBPI_ENpc_Interface_3;         // 0x0118(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_94A1[0x7];                                     // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_ENPCSequencerComponent_C*           CallFunc_GetEnpcSequencerComponent_Component_1;    // 0x0130(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_11;                   // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_StartSequnecer_dummy_3;                   // 0x0139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_StartSequnecer_dummy_4;                   // 0x013A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_StartSequnecer_dummy_5;                   // 0x013B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ENpcComponent_C_UpdateEnpcSp) == 0x000008, "Wrong alignment on BP_ENpcComponent_C_UpdateEnpcSp");
static_assert(sizeof(BP_ENpcComponent_C_UpdateEnpcSp) == 0x000140, "Wrong size on BP_ENpcComponent_C_UpdateEnpcSp");
static_assert(offsetof(BP_ENpcComponent_C_UpdateEnpcSp, LEnableOwnerSeeThrough) == 0x000000, "Member 'BP_ENpcComponent_C_UpdateEnpcSp::LEnableOwnerSeeThrough' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateEnpcSp, Temp_byte_Variable) == 0x000001, "Member 'BP_ENpcComponent_C_UpdateEnpcSp::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateEnpcSp, Temp_byte_Variable_1) == 0x000002, "Member 'BP_ENpcComponent_C_UpdateEnpcSp::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateEnpcSp, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000003, "Member 'BP_ENpcComponent_C_UpdateEnpcSp::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateEnpcSp, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000004, "Member 'BP_ENpcComponent_C_UpdateEnpcSp::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateEnpcSp, CallFunc_GetPlayerManager_PlayerManager) == 0x000008, "Member 'BP_ENpcComponent_C_UpdateEnpcSp::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateEnpcSp, CallFunc_GetPlayerManager_PlayerManager_1) == 0x000010, "Member 'BP_ENpcComponent_C_UpdateEnpcSp::CallFunc_GetPlayerManager_PlayerManager_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateEnpcSp, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_ENpcComponent_C_UpdateEnpcSp::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateEnpcSp, CallFunc_IsValid_ReturnValue_1) == 0x000019, "Member 'BP_ENpcComponent_C_UpdateEnpcSp::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateEnpcSp, CallFunc_GetMainPlayer_Player) == 0x000020, "Member 'BP_ENpcComponent_C_UpdateEnpcSp::CallFunc_GetMainPlayer_Player' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateEnpcSp, CallFunc_GetMainPlayer_Player_1) == 0x000028, "Member 'BP_ENpcComponent_C_UpdateEnpcSp::CallFunc_GetMainPlayer_Player_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateEnpcSp, K2Node_DynamicCast_AsPlayer_Interface) == 0x000030, "Member 'BP_ENpcComponent_C_UpdateEnpcSp::K2Node_DynamicCast_AsPlayer_Interface' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateEnpcSp, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_ENpcComponent_C_UpdateEnpcSp::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateEnpcSp, K2Node_DynamicCast_AsPlayer_Interface_1) == 0x000048, "Member 'BP_ENpcComponent_C_UpdateEnpcSp::K2Node_DynamicCast_AsPlayer_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateEnpcSp, K2Node_DynamicCast_bSuccess_1) == 0x000058, "Member 'BP_ENpcComponent_C_UpdateEnpcSp::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateEnpcSp, CallFunc_GetPlayerID_ReturnValue) == 0x000059, "Member 'BP_ENpcComponent_C_UpdateEnpcSp::CallFunc_GetPlayerID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateEnpcSp, CallFunc_GetPlayerID_ReturnValue_1) == 0x00005A, "Member 'BP_ENpcComponent_C_UpdateEnpcSp::CallFunc_GetPlayerID_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateEnpcSp, CallFunc_IsValid_ReturnValue_2) == 0x00005B, "Member 'BP_ENpcComponent_C_UpdateEnpcSp::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateEnpcSp, CallFunc_IsValid_ReturnValue_3) == 0x00005C, "Member 'BP_ENpcComponent_C_UpdateEnpcSp::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateEnpcSp, K2Node_DynamicCast_AsBPI_ENpc_Interface) == 0x000060, "Member 'BP_ENpcComponent_C_UpdateEnpcSp::K2Node_DynamicCast_AsBPI_ENpc_Interface' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateEnpcSp, K2Node_DynamicCast_bSuccess_2) == 0x000070, "Member 'BP_ENpcComponent_C_UpdateEnpcSp::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateEnpcSp, CallFunc_GetPlayerID_self_CastInput) == 0x000078, "Member 'BP_ENpcComponent_C_UpdateEnpcSp::CallFunc_GetPlayerID_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateEnpcSp, CallFunc_GetPlayerID_ReturnValue_2) == 0x000088, "Member 'BP_ENpcComponent_C_UpdateEnpcSp::CallFunc_GetPlayerID_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateEnpcSp, CallFunc_Em8200_SetMaskVisibility_Return) == 0x000089, "Member 'BP_ENpcComponent_C_UpdateEnpcSp::CallFunc_Em8200_SetMaskVisibility_Return' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateEnpcSp, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x00008A, "Member 'BP_ENpcComponent_C_UpdateEnpcSp::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateEnpcSp, CallFunc_GetPlayerID_self_CastInput_1) == 0x000090, "Member 'BP_ENpcComponent_C_UpdateEnpcSp::CallFunc_GetPlayerID_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateEnpcSp, CallFunc_GetPlayerID_ReturnValue_3) == 0x0000A0, "Member 'BP_ENpcComponent_C_UpdateEnpcSp::CallFunc_GetPlayerID_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateEnpcSp, CallFunc_CanPlayCutScene_OK) == 0x0000A1, "Member 'BP_ENpcComponent_C_UpdateEnpcSp::CallFunc_CanPlayCutScene_OK' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateEnpcSp, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x0000A2, "Member 'BP_ENpcComponent_C_UpdateEnpcSp::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateEnpcSp, CallFunc_CanPlayCutScene_OK_1) == 0x0000A3, "Member 'BP_ENpcComponent_C_UpdateEnpcSp::CallFunc_CanPlayCutScene_OK_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateEnpcSp, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x0000A4, "Member 'BP_ENpcComponent_C_UpdateEnpcSp::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateEnpcSp, CallFunc_LessEqual_FloatFloat_ReturnValue_1) == 0x0000A5, "Member 'BP_ENpcComponent_C_UpdateEnpcSp::CallFunc_LessEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateEnpcSp, CallFunc_LessEqual_FloatFloat_ReturnValue_2) == 0x0000A6, "Member 'BP_ENpcComponent_C_UpdateEnpcSp::CallFunc_LessEqual_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateEnpcSp, CallFunc_IsValid_ReturnValue_4) == 0x0000A7, "Member 'BP_ENpcComponent_C_UpdateEnpcSp::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateEnpcSp, CallFunc_GetWorldNormalDeltaSeconds_ReturnValue) == 0x0000A8, "Member 'BP_ENpcComponent_C_UpdateEnpcSp::CallFunc_GetWorldNormalDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateEnpcSp, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0000AC, "Member 'BP_ENpcComponent_C_UpdateEnpcSp::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateEnpcSp, Temp_int_Variable) == 0x0000B0, "Member 'BP_ENpcComponent_C_UpdateEnpcSp::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateEnpcSp, K2Node_DynamicCast_AsBPI_ENpc_Interface_1) == 0x0000B8, "Member 'BP_ENpcComponent_C_UpdateEnpcSp::K2Node_DynamicCast_AsBPI_ENpc_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateEnpcSp, K2Node_DynamicCast_bSuccess_3) == 0x0000C8, "Member 'BP_ENpcComponent_C_UpdateEnpcSp::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateEnpcSp, K2Node_DynamicCast_AsBPI_ENpc_Interface_2) == 0x0000D0, "Member 'BP_ENpcComponent_C_UpdateEnpcSp::K2Node_DynamicCast_AsBPI_ENpc_Interface_2' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateEnpcSp, K2Node_DynamicCast_bSuccess_4) == 0x0000E0, "Member 'BP_ENpcComponent_C_UpdateEnpcSp::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateEnpcSp, CallFunc_Em8200_SetMaskVisibility_Return_1) == 0x0000E1, "Member 'BP_ENpcComponent_C_UpdateEnpcSp::CallFunc_Em8200_SetMaskVisibility_Return_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateEnpcSp, CallFunc_GetEnpcSequencerComponent_Component) == 0x0000E8, "Member 'BP_ENpcComponent_C_UpdateEnpcSp::CallFunc_GetEnpcSequencerComponent_Component' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateEnpcSp, CallFunc_IsValid_ReturnValue_5) == 0x0000F0, "Member 'BP_ENpcComponent_C_UpdateEnpcSp::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateEnpcSp, CallFunc_StartSequnecer_dummy) == 0x0000F1, "Member 'BP_ENpcComponent_C_UpdateEnpcSp::CallFunc_StartSequnecer_dummy' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateEnpcSp, CallFunc_StartSequnecer_dummy_1) == 0x0000F2, "Member 'BP_ENpcComponent_C_UpdateEnpcSp::CallFunc_StartSequnecer_dummy_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateEnpcSp, CallFunc_StartSequnecer_dummy_2) == 0x0000F3, "Member 'BP_ENpcComponent_C_UpdateEnpcSp::CallFunc_StartSequnecer_dummy_2' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateEnpcSp, CallFunc_Add_IntInt_ReturnValue) == 0x0000F4, "Member 'BP_ENpcComponent_C_UpdateEnpcSp::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateEnpcSp, CallFunc_IsValid_ReturnValue_6) == 0x0000F8, "Member 'BP_ENpcComponent_C_UpdateEnpcSp::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateEnpcSp, CallFunc_GetWorldNormalDeltaSeconds_ReturnValue_1) == 0x0000FC, "Member 'BP_ENpcComponent_C_UpdateEnpcSp::CallFunc_GetWorldNormalDeltaSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateEnpcSp, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000100, "Member 'BP_ENpcComponent_C_UpdateEnpcSp::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateEnpcSp, K2Node_SwitchInteger_CmpSuccess) == 0x000104, "Member 'BP_ENpcComponent_C_UpdateEnpcSp::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateEnpcSp, CallFunc_IsValid_ReturnValue_7) == 0x000105, "Member 'BP_ENpcComponent_C_UpdateEnpcSp::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateEnpcSp, CallFunc_IsValid_ReturnValue_8) == 0x000106, "Member 'BP_ENpcComponent_C_UpdateEnpcSp::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateEnpcSp, CallFunc_GetBattleManager_BattleManager) == 0x000108, "Member 'BP_ENpcComponent_C_UpdateEnpcSp::CallFunc_GetBattleManager_BattleManager' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateEnpcSp, CallFunc_IsValid_ReturnValue_9) == 0x000110, "Member 'BP_ENpcComponent_C_UpdateEnpcSp::CallFunc_IsValid_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateEnpcSp, CallFunc_IsValid_ReturnValue_10) == 0x000111, "Member 'BP_ENpcComponent_C_UpdateEnpcSp::CallFunc_IsValid_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateEnpcSp, CallFunc_GetHitSpTrigger_bHitSpTrigger) == 0x000112, "Member 'BP_ENpcComponent_C_UpdateEnpcSp::CallFunc_GetHitSpTrigger_bHitSpTrigger' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateEnpcSp, K2Node_DynamicCast_AsBPI_ENpc_Interface_3) == 0x000118, "Member 'BP_ENpcComponent_C_UpdateEnpcSp::K2Node_DynamicCast_AsBPI_ENpc_Interface_3' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateEnpcSp, K2Node_DynamicCast_bSuccess_5) == 0x000128, "Member 'BP_ENpcComponent_C_UpdateEnpcSp::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateEnpcSp, CallFunc_GetEnpcSequencerComponent_Component_1) == 0x000130, "Member 'BP_ENpcComponent_C_UpdateEnpcSp::CallFunc_GetEnpcSequencerComponent_Component_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateEnpcSp, CallFunc_IsValid_ReturnValue_11) == 0x000138, "Member 'BP_ENpcComponent_C_UpdateEnpcSp::CallFunc_IsValid_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateEnpcSp, CallFunc_StartSequnecer_dummy_3) == 0x000139, "Member 'BP_ENpcComponent_C_UpdateEnpcSp::CallFunc_StartSequnecer_dummy_3' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateEnpcSp, CallFunc_StartSequnecer_dummy_4) == 0x00013A, "Member 'BP_ENpcComponent_C_UpdateEnpcSp::CallFunc_StartSequnecer_dummy_4' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateEnpcSp, CallFunc_StartSequnecer_dummy_5) == 0x00013B, "Member 'BP_ENpcComponent_C_UpdateEnpcSp::CallFunc_StartSequnecer_dummy_5' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.StartEnpcSp
// 0x0018 (0x0018 - 0x0000)
struct BP_ENpcComponent_C_StartEnpcSp final
{
public:
	class AActor*                                 Attacker;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Enemy;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LEnableOwnerSeeThrough;                            // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ENpcComponent_C_StartEnpcSp) == 0x000008, "Wrong alignment on BP_ENpcComponent_C_StartEnpcSp");
static_assert(sizeof(BP_ENpcComponent_C_StartEnpcSp) == 0x000018, "Wrong size on BP_ENpcComponent_C_StartEnpcSp");
static_assert(offsetof(BP_ENpcComponent_C_StartEnpcSp, Attacker) == 0x000000, "Member 'BP_ENpcComponent_C_StartEnpcSp::Attacker' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartEnpcSp, Enemy) == 0x000008, "Member 'BP_ENpcComponent_C_StartEnpcSp::Enemy' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartEnpcSp, LEnableOwnerSeeThrough) == 0x000010, "Member 'BP_ENpcComponent_C_StartEnpcSp::LEnableOwnerSeeThrough' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.EndEnpcSp
// 0x0001 (0x0001 - 0x0000)
struct BP_ENpcComponent_C_EndEnpcSp final
{
public:
	bool                                          LEnableOwnerSeeThrough;                            // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ENpcComponent_C_EndEnpcSp) == 0x000001, "Wrong alignment on BP_ENpcComponent_C_EndEnpcSp");
static_assert(sizeof(BP_ENpcComponent_C_EndEnpcSp) == 0x000001, "Wrong size on BP_ENpcComponent_C_EndEnpcSp");
static_assert(offsetof(BP_ENpcComponent_C_EndEnpcSp, LEnableOwnerSeeThrough) == 0x000000, "Member 'BP_ENpcComponent_C_EndEnpcSp::LEnableOwnerSeeThrough' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.CheckDriveStartHp
// 0x0058 (0x0058 - 0x0000)
struct BP_ENpcComponent_C_CheckDriveStartHp final
{
public:
	class ARSBattlePlayer_C*                      LOwner;                                            // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_94A2[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CharacterParamater_C> CallFunc_GetHPPercent_self_CastInput;              // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetHPPercent_Percent;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_94A3[0x2];                                     // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CharacterParamater_C> CallFunc_IsDead_self_CastInput;                    // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDead_bDead;                             // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_94A4[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattlePlayer_C*                      K2Node_DynamicCast_AsRSBattle_Player;              // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ENpcComponent_C_CheckDriveStartHp) == 0x000008, "Wrong alignment on BP_ENpcComponent_C_CheckDriveStartHp");
static_assert(sizeof(BP_ENpcComponent_C_CheckDriveStartHp) == 0x000058, "Wrong size on BP_ENpcComponent_C_CheckDriveStartHp");
static_assert(offsetof(BP_ENpcComponent_C_CheckDriveStartHp, LOwner) == 0x000000, "Member 'BP_ENpcComponent_C_CheckDriveStartHp::LOwner' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_CheckDriveStartHp, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x000008, "Member 'BP_ENpcComponent_C_CheckDriveStartHp::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_CheckDriveStartHp, CallFunc_GetHPPercent_self_CastInput) == 0x000010, "Member 'BP_ENpcComponent_C_CheckDriveStartHp::CallFunc_GetHPPercent_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_CheckDriveStartHp, CallFunc_GetHPPercent_Percent) == 0x000020, "Member 'BP_ENpcComponent_C_CheckDriveStartHp::CallFunc_GetHPPercent_Percent' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_CheckDriveStartHp, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000024, "Member 'BP_ENpcComponent_C_CheckDriveStartHp::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_CheckDriveStartHp, CallFunc_IsValid_ReturnValue) == 0x000025, "Member 'BP_ENpcComponent_C_CheckDriveStartHp::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_CheckDriveStartHp, CallFunc_IsDead_self_CastInput) == 0x000028, "Member 'BP_ENpcComponent_C_CheckDriveStartHp::CallFunc_IsDead_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_CheckDriveStartHp, CallFunc_IsDead_bDead) == 0x000038, "Member 'BP_ENpcComponent_C_CheckDriveStartHp::CallFunc_IsDead_bDead' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_CheckDriveStartHp, CallFunc_GetOwner_ReturnValue) == 0x000040, "Member 'BP_ENpcComponent_C_CheckDriveStartHp::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_CheckDriveStartHp, K2Node_DynamicCast_AsRSBattle_Player) == 0x000048, "Member 'BP_ENpcComponent_C_CheckDriveStartHp::K2Node_DynamicCast_AsRSBattle_Player' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_CheckDriveStartHp, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'BP_ENpcComponent_C_CheckDriveStartHp::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_CheckDriveStartHp, CallFunc_IsValid_ReturnValue_1) == 0x000051, "Member 'BP_ENpcComponent_C_CheckDriveStartHp::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_CheckDriveStartHp, CallFunc_BooleanOR_ReturnValue) == 0x000052, "Member 'BP_ENpcComponent_C_CheckDriveStartHp::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.RegisterEnpcSAS
// 0x0008 (0x0008 - 0x0000)
struct BP_ENpcComponent_C_RegisterEnpcSAS final
{
public:
	E_SASKind                                     Kind;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActiveEnpcSAS_bActive;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_94A5[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ENpcComponent_C_RegisterEnpcSAS) == 0x000004, "Wrong alignment on BP_ENpcComponent_C_RegisterEnpcSAS");
static_assert(sizeof(BP_ENpcComponent_C_RegisterEnpcSAS) == 0x000008, "Wrong size on BP_ENpcComponent_C_RegisterEnpcSAS");
static_assert(offsetof(BP_ENpcComponent_C_RegisterEnpcSAS, Kind) == 0x000000, "Member 'BP_ENpcComponent_C_RegisterEnpcSAS::Kind' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_RegisterEnpcSAS, CallFunc_IsActiveEnpcSAS_bActive) == 0x000001, "Member 'BP_ENpcComponent_C_RegisterEnpcSAS::CallFunc_IsActiveEnpcSAS_bActive' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_RegisterEnpcSAS, CallFunc_Array_Add_ReturnValue) == 0x000004, "Member 'BP_ENpcComponent_C_RegisterEnpcSAS::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.UnregisterSAS
// 0x0014 (0x0014 - 0x0000)
struct BP_ENpcComponent_C_UnregisterSAS final
{
public:
	E_SASKind                                     Kind;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bNoEffect;                                         // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_94A6[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         LRemoveIndex;                                      // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_94A7[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ENpcComponent_C_UnregisterSAS) == 0x000004, "Wrong alignment on BP_ENpcComponent_C_UnregisterSAS");
static_assert(sizeof(BP_ENpcComponent_C_UnregisterSAS) == 0x000014, "Wrong size on BP_ENpcComponent_C_UnregisterSAS");
static_assert(offsetof(BP_ENpcComponent_C_UnregisterSAS, Kind) == 0x000000, "Member 'BP_ENpcComponent_C_UnregisterSAS::Kind' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UnregisterSAS, bNoEffect) == 0x000001, "Member 'BP_ENpcComponent_C_UnregisterSAS::bNoEffect' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UnregisterSAS, LRemoveIndex) == 0x000004, "Member 'BP_ENpcComponent_C_UnregisterSAS::LRemoveIndex' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UnregisterSAS, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000008, "Member 'BP_ENpcComponent_C_UnregisterSAS::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UnregisterSAS, CallFunc_Array_Find_ReturnValue) == 0x00000C, "Member 'BP_ENpcComponent_C_UnregisterSAS::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UnregisterSAS, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000010, "Member 'BP_ENpcComponent_C_UnregisterSAS::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.ForceEndEnpcSAS
// 0x0028 (0x0028 - 0x0000)
struct BP_ENpcComponent_C_ForceEndEnpcSAS final
{
public:
	TArray<E_SASKind>                             LList;                                             // 0x0000(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ENpcComponent_C_ForceEndEnpcSAS) == 0x000008, "Wrong alignment on BP_ENpcComponent_C_ForceEndEnpcSAS");
static_assert(sizeof(BP_ENpcComponent_C_ForceEndEnpcSAS) == 0x000028, "Wrong size on BP_ENpcComponent_C_ForceEndEnpcSAS");
static_assert(offsetof(BP_ENpcComponent_C_ForceEndEnpcSAS, LList) == 0x000000, "Member 'BP_ENpcComponent_C_ForceEndEnpcSAS::LList' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_ForceEndEnpcSAS, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_ENpcComponent_C_ForceEndEnpcSAS::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_ForceEndEnpcSAS, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'BP_ENpcComponent_C_ForceEndEnpcSAS::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_ForceEndEnpcSAS, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_ENpcComponent_C_ForceEndEnpcSAS::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_ForceEndEnpcSAS, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'BP_ENpcComponent_C_ForceEndEnpcSAS::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_ForceEndEnpcSAS, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'BP_ENpcComponent_C_ForceEndEnpcSAS::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.UpdateSAS
// 0x0120 (0x0120 - 0x0000)
struct BP_ENpcComponent_C_UpdateSAS final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94A8[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ARSBattlePlayer_C*>              LRemoveEnpcList;                                   // 0x0008(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	float                                         LTimeRate;                                         // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LCablePower;                                       // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<E_SASKind>                             LRemoveList;                                       // 0x0020(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_94A9[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Ease_ReturnValue;                         // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_PlayerInterface_C> CallFunc_SetSASCodeParam_self_CastInput;           // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetSASCodeParam_bDummy;                   // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_94AA[0x2];                                     // 0x0052(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_94AB[0x3];                                     // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Ease_ReturnValue_1;                       // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_PlayerInterface_C> CallFunc_SetSASCodeParam_self_CastInput_1;         // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetSASCodeParam_bDummy_1;                 // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_94AC[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerInterface_C> CallFunc_SetSASCodeParam_self_CastInput_2;         // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetSASCodeParam_bDummy_2;                 // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_94AD[0x3];                                     // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattlePlayer_C*                      CallFunc_Array_Get_Item;                           // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_94AE[0x3];                                     // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_94AF[0x3];                                     // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattlePlayer_C*                      CallFunc_Array_Get_Item_1;                         // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_94B0[0x3];                                     // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IPlayerInterface>      CallFunc_GetPlayerID_self_CastInput;               // 0x00C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerID                                     CallFunc_GetPlayerID_ReturnValue;                  // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94B1[0x7];                                     // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CharacterParamater_C> CallFunc_IsDead_self_CastInput;                    // 0x00E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDead_bDead;                             // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_SASKind                                     CallFunc_GetSASKindFromPlayerID_SAS;               // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94B2[0x2];                                     // 0x00F2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_94B3[0x3];                                     // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0104(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_94B4[0x3];                                     // 0x0105(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_94B5[0x3];                                     // 0x010D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ENpcComponent_C_UpdateSAS) == 0x000008, "Wrong alignment on BP_ENpcComponent_C_UpdateSAS");
static_assert(sizeof(BP_ENpcComponent_C_UpdateSAS) == 0x000120, "Wrong size on BP_ENpcComponent_C_UpdateSAS");
static_assert(offsetof(BP_ENpcComponent_C_UpdateSAS, DeltaSeconds) == 0x000000, "Member 'BP_ENpcComponent_C_UpdateSAS::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateSAS, LRemoveEnpcList) == 0x000008, "Member 'BP_ENpcComponent_C_UpdateSAS::LRemoveEnpcList' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateSAS, LTimeRate) == 0x000018, "Member 'BP_ENpcComponent_C_UpdateSAS::LTimeRate' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateSAS, LCablePower) == 0x00001C, "Member 'BP_ENpcComponent_C_UpdateSAS::LCablePower' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateSAS, LRemoveList) == 0x000020, "Member 'BP_ENpcComponent_C_UpdateSAS::LRemoveList' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateSAS, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x000030, "Member 'BP_ENpcComponent_C_UpdateSAS::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateSAS, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000034, "Member 'BP_ENpcComponent_C_UpdateSAS::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateSAS, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000038, "Member 'BP_ENpcComponent_C_UpdateSAS::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateSAS, CallFunc_Ease_ReturnValue) == 0x00003C, "Member 'BP_ENpcComponent_C_UpdateSAS::CallFunc_Ease_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateSAS, CallFunc_SetSASCodeParam_self_CastInput) == 0x000040, "Member 'BP_ENpcComponent_C_UpdateSAS::CallFunc_SetSASCodeParam_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateSAS, CallFunc_SetSASCodeParam_bDummy) == 0x000050, "Member 'BP_ENpcComponent_C_UpdateSAS::CallFunc_SetSASCodeParam_bDummy' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateSAS, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000051, "Member 'BP_ENpcComponent_C_UpdateSAS::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateSAS, CallFunc_Array_Length_ReturnValue) == 0x000054, "Member 'BP_ENpcComponent_C_UpdateSAS::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateSAS, CallFunc_Array_Length_ReturnValue_1) == 0x000058, "Member 'BP_ENpcComponent_C_UpdateSAS::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateSAS, CallFunc_NotEqual_IntInt_ReturnValue) == 0x00005C, "Member 'BP_ENpcComponent_C_UpdateSAS::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateSAS, CallFunc_Array_Length_ReturnValue_2) == 0x000060, "Member 'BP_ENpcComponent_C_UpdateSAS::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateSAS, CallFunc_Ease_ReturnValue_1) == 0x000064, "Member 'BP_ENpcComponent_C_UpdateSAS::CallFunc_Ease_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateSAS, CallFunc_SetSASCodeParam_self_CastInput_1) == 0x000068, "Member 'BP_ENpcComponent_C_UpdateSAS::CallFunc_SetSASCodeParam_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateSAS, CallFunc_SetSASCodeParam_bDummy_1) == 0x000078, "Member 'BP_ENpcComponent_C_UpdateSAS::CallFunc_SetSASCodeParam_bDummy_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateSAS, CallFunc_SetSASCodeParam_self_CastInput_2) == 0x000080, "Member 'BP_ENpcComponent_C_UpdateSAS::CallFunc_SetSASCodeParam_self_CastInput_2' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateSAS, CallFunc_SetSASCodeParam_bDummy_2) == 0x000090, "Member 'BP_ENpcComponent_C_UpdateSAS::CallFunc_SetSASCodeParam_bDummy_2' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateSAS, Temp_int_Array_Index_Variable) == 0x000094, "Member 'BP_ENpcComponent_C_UpdateSAS::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateSAS, CallFunc_Array_Get_Item) == 0x000098, "Member 'BP_ENpcComponent_C_UpdateSAS::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateSAS, CallFunc_Array_Length_ReturnValue_3) == 0x0000A0, "Member 'BP_ENpcComponent_C_UpdateSAS::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateSAS, CallFunc_Array_RemoveItem_ReturnValue) == 0x0000A4, "Member 'BP_ENpcComponent_C_UpdateSAS::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateSAS, Temp_int_Loop_Counter_Variable) == 0x0000A8, "Member 'BP_ENpcComponent_C_UpdateSAS::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateSAS, CallFunc_Less_IntInt_ReturnValue) == 0x0000AC, "Member 'BP_ENpcComponent_C_UpdateSAS::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateSAS, CallFunc_Add_IntInt_ReturnValue) == 0x0000B0, "Member 'BP_ENpcComponent_C_UpdateSAS::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateSAS, Temp_int_Array_Index_Variable_1) == 0x0000B4, "Member 'BP_ENpcComponent_C_UpdateSAS::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateSAS, CallFunc_Array_Get_Item_1) == 0x0000B8, "Member 'BP_ENpcComponent_C_UpdateSAS::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateSAS, CallFunc_IsValid_ReturnValue) == 0x0000C0, "Member 'BP_ENpcComponent_C_UpdateSAS::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateSAS, CallFunc_Array_AddUnique_ReturnValue) == 0x0000C4, "Member 'BP_ENpcComponent_C_UpdateSAS::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateSAS, CallFunc_GetPlayerID_self_CastInput) == 0x0000C8, "Member 'BP_ENpcComponent_C_UpdateSAS::CallFunc_GetPlayerID_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateSAS, CallFunc_GetPlayerID_ReturnValue) == 0x0000D8, "Member 'BP_ENpcComponent_C_UpdateSAS::CallFunc_GetPlayerID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateSAS, CallFunc_IsDead_self_CastInput) == 0x0000E0, "Member 'BP_ENpcComponent_C_UpdateSAS::CallFunc_IsDead_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateSAS, CallFunc_IsDead_bDead) == 0x0000F0, "Member 'BP_ENpcComponent_C_UpdateSAS::CallFunc_IsDead_bDead' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateSAS, CallFunc_GetSASKindFromPlayerID_SAS) == 0x0000F1, "Member 'BP_ENpcComponent_C_UpdateSAS::CallFunc_GetSASKindFromPlayerID_SAS' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateSAS, CallFunc_Array_Add_ReturnValue) == 0x0000F4, "Member 'BP_ENpcComponent_C_UpdateSAS::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateSAS, CallFunc_Array_IsValidIndex_ReturnValue) == 0x0000F8, "Member 'BP_ENpcComponent_C_UpdateSAS::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateSAS, Temp_int_Loop_Counter_Variable_1) == 0x0000FC, "Member 'BP_ENpcComponent_C_UpdateSAS::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateSAS, Temp_int_Loop_Counter_Variable_2) == 0x000100, "Member 'BP_ENpcComponent_C_UpdateSAS::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateSAS, CallFunc_Less_IntInt_ReturnValue_1) == 0x000104, "Member 'BP_ENpcComponent_C_UpdateSAS::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateSAS, CallFunc_Add_IntInt_ReturnValue_1) == 0x000108, "Member 'BP_ENpcComponent_C_UpdateSAS::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateSAS, CallFunc_Less_IntInt_ReturnValue_2) == 0x00010C, "Member 'BP_ENpcComponent_C_UpdateSAS::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateSAS, CallFunc_Add_IntInt_ReturnValue_2) == 0x000110, "Member 'BP_ENpcComponent_C_UpdateSAS::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateSAS, Temp_int_Array_Index_Variable_2) == 0x000114, "Member 'BP_ENpcComponent_C_UpdateSAS::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateSAS, CallFunc_Less_FloatFloat_ReturnValue) == 0x000118, "Member 'BP_ENpcComponent_C_UpdateSAS::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.SetTimerPause
// 0x0001 (0x0001 - 0x0000)
struct BP_ENpcComponent_C_SetTimerPause final
{
public:
	bool                                          bPause;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ENpcComponent_C_SetTimerPause) == 0x000001, "Wrong alignment on BP_ENpcComponent_C_SetTimerPause");
static_assert(sizeof(BP_ENpcComponent_C_SetTimerPause) == 0x000001, "Wrong size on BP_ENpcComponent_C_SetTimerPause");
static_assert(offsetof(BP_ENpcComponent_C_SetTimerPause, bPause) == 0x000000, "Member 'BP_ENpcComponent_C_SetTimerPause::bPause' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.ActiveEnpcSAS
// 0x0060 (0x0060 - 0x0000)
struct BP_ENpcComponent_C_ActiveEnpcSAS final
{
public:
	E_SASKind                                     Kind;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFSASElectricParam                     LDummyElectric;                                    // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFSASMetalParam                        LDummyMetal;                                       // 0x0002(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFSASFireParam                         LDummyFire;                                        // 0x0003(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_94B6[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerInterface_C> CallFunc_SetEnpcSasStealthStart_self_CastInput;    // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetEnpcSasStealthStart_dummy;             // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_94B7[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_94B8[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_SASInterface_C>   CallFunc_OnMetalStart_self_CastInput;              // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94B9[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_SASInterface_C>   CallFunc_OnElectricStart_self_CastInput;           // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_SASInterface_C>   CallFunc_OnFireStart_self_CastInput;               // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ENpcComponent_C_ActiveEnpcSAS) == 0x000008, "Wrong alignment on BP_ENpcComponent_C_ActiveEnpcSAS");
static_assert(sizeof(BP_ENpcComponent_C_ActiveEnpcSAS) == 0x000060, "Wrong size on BP_ENpcComponent_C_ActiveEnpcSAS");
static_assert(offsetof(BP_ENpcComponent_C_ActiveEnpcSAS, Kind) == 0x000000, "Member 'BP_ENpcComponent_C_ActiveEnpcSAS::Kind' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_ActiveEnpcSAS, LDummyElectric) == 0x000001, "Member 'BP_ENpcComponent_C_ActiveEnpcSAS::LDummyElectric' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_ActiveEnpcSAS, LDummyMetal) == 0x000002, "Member 'BP_ENpcComponent_C_ActiveEnpcSAS::LDummyMetal' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_ActiveEnpcSAS, LDummyFire) == 0x000003, "Member 'BP_ENpcComponent_C_ActiveEnpcSAS::LDummyFire' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_ActiveEnpcSAS, K2Node_SwitchEnum_CmpSuccess) == 0x000004, "Member 'BP_ENpcComponent_C_ActiveEnpcSAS::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_ActiveEnpcSAS, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000005, "Member 'BP_ENpcComponent_C_ActiveEnpcSAS::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_ActiveEnpcSAS, CallFunc_SetEnpcSasStealthStart_self_CastInput) == 0x000008, "Member 'BP_ENpcComponent_C_ActiveEnpcSAS::CallFunc_SetEnpcSasStealthStart_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_ActiveEnpcSAS, CallFunc_SetEnpcSasStealthStart_dummy) == 0x000018, "Member 'BP_ENpcComponent_C_ActiveEnpcSAS::CallFunc_SetEnpcSasStealthStart_dummy' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_ActiveEnpcSAS, Temp_int_Variable) == 0x00001C, "Member 'BP_ENpcComponent_C_ActiveEnpcSAS::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_ActiveEnpcSAS, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_ENpcComponent_C_ActiveEnpcSAS::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_ActiveEnpcSAS, CallFunc_OnMetalStart_self_CastInput) == 0x000028, "Member 'BP_ENpcComponent_C_ActiveEnpcSAS::CallFunc_OnMetalStart_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_ActiveEnpcSAS, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'BP_ENpcComponent_C_ActiveEnpcSAS::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_ActiveEnpcSAS, CallFunc_OnElectricStart_self_CastInput) == 0x000040, "Member 'BP_ENpcComponent_C_ActiveEnpcSAS::CallFunc_OnElectricStart_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_ActiveEnpcSAS, CallFunc_OnFireStart_self_CastInput) == 0x000050, "Member 'BP_ENpcComponent_C_ActiveEnpcSAS::CallFunc_OnFireStart_self_CastInput' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.AddHardenDamage
// 0x0028 (0x0028 - 0x0000)
struct BP_ENpcComponent_C_AddHardenDamage final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActiveEnpcSAS_bActive;                  // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_94BA[0x6];                                     // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_ch0400_C>         K2Node_DynamicCast_AsBPI_Ch_0400;                  // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetHardenOff_ch0400_bDummy;               // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_94BB[0x2];                                     // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ENpcComponent_C_AddHardenDamage) == 0x000008, "Wrong alignment on BP_ENpcComponent_C_AddHardenDamage");
static_assert(sizeof(BP_ENpcComponent_C_AddHardenDamage) == 0x000028, "Wrong size on BP_ENpcComponent_C_AddHardenDamage");
static_assert(offsetof(BP_ENpcComponent_C_AddHardenDamage, Damage) == 0x000000, "Member 'BP_ENpcComponent_C_AddHardenDamage::Damage' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_AddHardenDamage, CallFunc_FTrunc_ReturnValue) == 0x000004, "Member 'BP_ENpcComponent_C_AddHardenDamage::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_AddHardenDamage, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000008, "Member 'BP_ENpcComponent_C_AddHardenDamage::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_AddHardenDamage, CallFunc_IsActiveEnpcSAS_bActive) == 0x000009, "Member 'BP_ENpcComponent_C_AddHardenDamage::CallFunc_IsActiveEnpcSAS_bActive' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_AddHardenDamage, K2Node_DynamicCast_AsBPI_Ch_0400) == 0x000010, "Member 'BP_ENpcComponent_C_AddHardenDamage::K2Node_DynamicCast_AsBPI_Ch_0400' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_AddHardenDamage, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_ENpcComponent_C_AddHardenDamage::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_AddHardenDamage, CallFunc_SetHardenOff_ch0400_bDummy) == 0x000021, "Member 'BP_ENpcComponent_C_AddHardenDamage::CallFunc_SetHardenOff_ch0400_bDummy' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_AddHardenDamage, CallFunc_Subtract_IntInt_ReturnValue) == 0x000024, "Member 'BP_ENpcComponent_C_AddHardenDamage::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.EndEnpcSAS
// 0x0050 (0x0050 - 0x0000)
struct BP_ENpcComponent_C_EndEnpcSAS final
{
public:
	E_SASKind                                     Kind;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFSASElectricParam                     LDummyElectric;                                    // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFSASMetalParam                        LDummyMetal;                                       // 0x0002(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFSASFireParam                         LDummyFire;                                        // 0x0003(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_94BC[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_SASInterface_C>   CallFunc_OnMetalEnd_self_CastInput;                // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_PlayerInterface_C> CallFunc_SetEnpcSasStealthEnd_self_CastInput;      // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetEnpcSasStealthEnd_dummy;               // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_94BD[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_SASInterface_C>   CallFunc_OnElectricEnd_self_CastInput;             // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_SASInterface_C>   CallFunc_OnFireEnd_self_CastInput;                 // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ENpcComponent_C_EndEnpcSAS) == 0x000008, "Wrong alignment on BP_ENpcComponent_C_EndEnpcSAS");
static_assert(sizeof(BP_ENpcComponent_C_EndEnpcSAS) == 0x000050, "Wrong size on BP_ENpcComponent_C_EndEnpcSAS");
static_assert(offsetof(BP_ENpcComponent_C_EndEnpcSAS, Kind) == 0x000000, "Member 'BP_ENpcComponent_C_EndEnpcSAS::Kind' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_EndEnpcSAS, LDummyElectric) == 0x000001, "Member 'BP_ENpcComponent_C_EndEnpcSAS::LDummyElectric' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_EndEnpcSAS, LDummyMetal) == 0x000002, "Member 'BP_ENpcComponent_C_EndEnpcSAS::LDummyMetal' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_EndEnpcSAS, LDummyFire) == 0x000003, "Member 'BP_ENpcComponent_C_EndEnpcSAS::LDummyFire' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_EndEnpcSAS, K2Node_SwitchEnum_CmpSuccess) == 0x000004, "Member 'BP_ENpcComponent_C_EndEnpcSAS::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_EndEnpcSAS, CallFunc_OnMetalEnd_self_CastInput) == 0x000008, "Member 'BP_ENpcComponent_C_EndEnpcSAS::CallFunc_OnMetalEnd_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_EndEnpcSAS, CallFunc_SetEnpcSasStealthEnd_self_CastInput) == 0x000018, "Member 'BP_ENpcComponent_C_EndEnpcSAS::CallFunc_SetEnpcSasStealthEnd_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_EndEnpcSAS, CallFunc_SetEnpcSasStealthEnd_dummy) == 0x000028, "Member 'BP_ENpcComponent_C_EndEnpcSAS::CallFunc_SetEnpcSasStealthEnd_dummy' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_EndEnpcSAS, CallFunc_OnElectricEnd_self_CastInput) == 0x000030, "Member 'BP_ENpcComponent_C_EndEnpcSAS::CallFunc_OnElectricEnd_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_EndEnpcSAS, CallFunc_OnFireEnd_self_CastInput) == 0x000040, "Member 'BP_ENpcComponent_C_EndEnpcSAS::CallFunc_OnFireEnd_self_CastInput' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.IsUseBrainField
// 0x0010 (0x0010 - 0x0000)
struct BP_ENpcComponent_C_IsUseBrainField final
{
public:
	bool                                          Param_bUseBrainField;                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_94BE[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattlePlayer_C*                      LOwner;                                            // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ENpcComponent_C_IsUseBrainField) == 0x000008, "Wrong alignment on BP_ENpcComponent_C_IsUseBrainField");
static_assert(sizeof(BP_ENpcComponent_C_IsUseBrainField) == 0x000010, "Wrong size on BP_ENpcComponent_C_IsUseBrainField");
static_assert(offsetof(BP_ENpcComponent_C_IsUseBrainField, Param_bUseBrainField) == 0x000000, "Member 'BP_ENpcComponent_C_IsUseBrainField::Param_bUseBrainField' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsUseBrainField, LOwner) == 0x000008, "Member 'BP_ENpcComponent_C_IsUseBrainField::LOwner' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.Update Execute SAS
// 0x03A0 (0x03A0 - 0x0000)
struct BP_ENpcComponent_C_Update_Execute_SAS final
{
public:
	float                                         DeltaSec;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsAbleSASTime;                                    // 0x0004(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          LIsFoeceRegist;                                    // 0x0005(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	E_SASKind                                     LSASKind;                                          // 0x0006(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsBadState;                                       // 0x0007(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	class ARSBattlePlayer_C*                      LSASEnpc;                                          // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ARSBattlePlayer_C*>              LUsableSASEnpc;                                    // 0x0010(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayerStatus_Result;                    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_94BF[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AEnemyManager*                          CallFunc_GetEnemyManager_EnemyManager;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_94C0[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ARSCharacterBase*>               CallFunc_GetEnemyList_ReturnValue;                 // 0x0038(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94C1[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCharactersParameterTable              CallFunc_GetParameterTable_ReturnValue;            // 0x0050(0x01F8)()
	struct FCharactersParameterBasic              CallFunc_GetParameterBasic_ReturnValue;            // 0x0248(0x0068)()
	float                                         CallFunc_Array_Get_Item;                           // 0x02B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x02B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x02B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_94C2[0x2];                                     // 0x02B6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x02B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94C3[0x4];                                     // 0x02BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IPlayerInterface>      CallFunc_GetPlayerID_self_CastInput;               // 0x02C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerID                                     CallFunc_GetPlayerID_ReturnValue;                  // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x02D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_SASKind                                     CallFunc_GetSASKindFromPlayerID_SAS;               // 0x02D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94C4[0x5];                                     // 0x02D3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattlePlayer_C*                      CallFunc_Array_Get_Item_1;                         // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x02E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_94C5[0x3];                                     // 0x02E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x02E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x02E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_94C6[0x7];                                     // 0x02E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_Array_Get_Item_2;                         // 0x02F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_CharacterParamater_C> K2Node_DynamicCast_AsBPI_Character_Paramater;      // 0x02F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0308(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_94C7[0x7];                                     // 0x0309(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattlePlayer_C*                      K2Node_DynamicCast_AsRSBattle_Player;              // 0x0310(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0318(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDead_bDead;                             // 0x0319(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActionStatus_Result;                    // 0x031A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActionStatus_Result_1;                  // 0x031B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActionStatus_Result_2;                  // 0x031C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActionStatus_Result_3;                  // 0x031D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActionStatus_Result_4;                  // 0x031E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActionStatus_Result_5;                  // 0x031F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IPlayerInterface>      CallFunc_GetPlayerID_self_CastInput_1;             // 0x0320(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerID                                     CallFunc_GetPlayerID_ReturnValue_1;                // 0x0330(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0331(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_SASKind                                     CallFunc_GetSASKindFromPlayerID_SAS_1;             // 0x0332(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0333(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActiveEnpcSAS_bActive;                  // 0x0334(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0335(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x0336(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0337(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x0338(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_94C8[0x3];                                     // 0x0339(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x033C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IPlayerInterface>      CallFunc_GetPlayerID_self_CastInput_2;             // 0x0340(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerID                                     CallFunc_GetPlayerID_ReturnValue_2;                // 0x0350(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0351(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0352(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0353(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_5;                  // 0x0354(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x0355(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_6;                  // 0x0356(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x0357(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_7;                  // 0x0358(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_5;        // 0x0359(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_8;                  // 0x035A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_9;                  // 0x035B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_6;        // 0x035C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_94C9[0x3];                                     // 0x035D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0360(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0364(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayerStatus_Result_1;                  // 0x0368(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0369(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_94CA[0x2];                                     // 0x036A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x036C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0370(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Array_Get_Item_3;                         // 0x0374(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0378(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_94CB[0x3];                                     // 0x0379(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x037C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0380(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0384(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_94CC[0x3];                                     // 0x0385(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IPlayerInterface>      CallFunc_GetPlayerID_self_CastInput_3;             // 0x0388(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerID                                     CallFunc_GetPlayerID_ReturnValue_3;                // 0x0398(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_7;        // 0x0399(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_8;        // 0x039A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_10;                 // 0x039B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ENpcComponent_C_Update_Execute_SAS) == 0x000008, "Wrong alignment on BP_ENpcComponent_C_Update_Execute_SAS");
static_assert(sizeof(BP_ENpcComponent_C_Update_Execute_SAS) == 0x0003A0, "Wrong size on BP_ENpcComponent_C_Update_Execute_SAS");
static_assert(offsetof(BP_ENpcComponent_C_Update_Execute_SAS, DeltaSec) == 0x000000, "Member 'BP_ENpcComponent_C_Update_Execute_SAS::DeltaSec' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Update_Execute_SAS, bIsAbleSASTime) == 0x000004, "Member 'BP_ENpcComponent_C_Update_Execute_SAS::bIsAbleSASTime' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Update_Execute_SAS, LIsFoeceRegist) == 0x000005, "Member 'BP_ENpcComponent_C_Update_Execute_SAS::LIsFoeceRegist' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Update_Execute_SAS, LSASKind) == 0x000006, "Member 'BP_ENpcComponent_C_Update_Execute_SAS::LSASKind' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Update_Execute_SAS, bIsBadState) == 0x000007, "Member 'BP_ENpcComponent_C_Update_Execute_SAS::bIsBadState' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Update_Execute_SAS, LSASEnpc) == 0x000008, "Member 'BP_ENpcComponent_C_Update_Execute_SAS::LSASEnpc' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Update_Execute_SAS, LUsableSASEnpc) == 0x000010, "Member 'BP_ENpcComponent_C_Update_Execute_SAS::LUsableSASEnpc' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Update_Execute_SAS, CallFunc_IsPlayerStatus_Result) == 0x000020, "Member 'BP_ENpcComponent_C_Update_Execute_SAS::CallFunc_IsPlayerStatus_Result' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Update_Execute_SAS, CallFunc_Add_FloatFloat_ReturnValue) == 0x000024, "Member 'BP_ENpcComponent_C_Update_Execute_SAS::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Update_Execute_SAS, CallFunc_GetEnemyManager_EnemyManager) == 0x000028, "Member 'BP_ENpcComponent_C_Update_Execute_SAS::CallFunc_GetEnemyManager_EnemyManager' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Update_Execute_SAS, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BP_ENpcComponent_C_Update_Execute_SAS::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Update_Execute_SAS, CallFunc_GetEnemyList_ReturnValue) == 0x000038, "Member 'BP_ENpcComponent_C_Update_Execute_SAS::CallFunc_GetEnemyList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Update_Execute_SAS, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'BP_ENpcComponent_C_Update_Execute_SAS::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Update_Execute_SAS, CallFunc_GetParameterTable_ReturnValue) == 0x000050, "Member 'BP_ENpcComponent_C_Update_Execute_SAS::CallFunc_GetParameterTable_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Update_Execute_SAS, CallFunc_GetParameterBasic_ReturnValue) == 0x000248, "Member 'BP_ENpcComponent_C_Update_Execute_SAS::CallFunc_GetParameterBasic_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Update_Execute_SAS, CallFunc_Array_Get_Item) == 0x0002B0, "Member 'BP_ENpcComponent_C_Update_Execute_SAS::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Update_Execute_SAS, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x0002B4, "Member 'BP_ENpcComponent_C_Update_Execute_SAS::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Update_Execute_SAS, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x0002B5, "Member 'BP_ENpcComponent_C_Update_Execute_SAS::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Update_Execute_SAS, CallFunc_Array_Length_ReturnValue_1) == 0x0002B8, "Member 'BP_ENpcComponent_C_Update_Execute_SAS::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Update_Execute_SAS, CallFunc_GetPlayerID_self_CastInput) == 0x0002C0, "Member 'BP_ENpcComponent_C_Update_Execute_SAS::CallFunc_GetPlayerID_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Update_Execute_SAS, CallFunc_GetPlayerID_ReturnValue) == 0x0002D0, "Member 'BP_ENpcComponent_C_Update_Execute_SAS::CallFunc_GetPlayerID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Update_Execute_SAS, CallFunc_NotEqual_IntInt_ReturnValue) == 0x0002D1, "Member 'BP_ENpcComponent_C_Update_Execute_SAS::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Update_Execute_SAS, CallFunc_GetSASKindFromPlayerID_SAS) == 0x0002D2, "Member 'BP_ENpcComponent_C_Update_Execute_SAS::CallFunc_GetSASKindFromPlayerID_SAS' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Update_Execute_SAS, CallFunc_Array_Get_Item_1) == 0x0002D8, "Member 'BP_ENpcComponent_C_Update_Execute_SAS::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Update_Execute_SAS, K2Node_SwitchEnum_CmpSuccess) == 0x0002E0, "Member 'BP_ENpcComponent_C_Update_Execute_SAS::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Update_Execute_SAS, Temp_int_Array_Index_Variable) == 0x0002E4, "Member 'BP_ENpcComponent_C_Update_Execute_SAS::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Update_Execute_SAS, CallFunc_Less_FloatFloat_ReturnValue) == 0x0002E8, "Member 'BP_ENpcComponent_C_Update_Execute_SAS::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Update_Execute_SAS, CallFunc_Array_Get_Item_2) == 0x0002F0, "Member 'BP_ENpcComponent_C_Update_Execute_SAS::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Update_Execute_SAS, K2Node_DynamicCast_AsBPI_Character_Paramater) == 0x0002F8, "Member 'BP_ENpcComponent_C_Update_Execute_SAS::K2Node_DynamicCast_AsBPI_Character_Paramater' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Update_Execute_SAS, K2Node_DynamicCast_bSuccess) == 0x000308, "Member 'BP_ENpcComponent_C_Update_Execute_SAS::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Update_Execute_SAS, K2Node_DynamicCast_AsRSBattle_Player) == 0x000310, "Member 'BP_ENpcComponent_C_Update_Execute_SAS::K2Node_DynamicCast_AsRSBattle_Player' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Update_Execute_SAS, K2Node_DynamicCast_bSuccess_1) == 0x000318, "Member 'BP_ENpcComponent_C_Update_Execute_SAS::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Update_Execute_SAS, CallFunc_IsDead_bDead) == 0x000319, "Member 'BP_ENpcComponent_C_Update_Execute_SAS::CallFunc_IsDead_bDead' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Update_Execute_SAS, CallFunc_IsActionStatus_Result) == 0x00031A, "Member 'BP_ENpcComponent_C_Update_Execute_SAS::CallFunc_IsActionStatus_Result' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Update_Execute_SAS, CallFunc_IsActionStatus_Result_1) == 0x00031B, "Member 'BP_ENpcComponent_C_Update_Execute_SAS::CallFunc_IsActionStatus_Result_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Update_Execute_SAS, CallFunc_IsActionStatus_Result_2) == 0x00031C, "Member 'BP_ENpcComponent_C_Update_Execute_SAS::CallFunc_IsActionStatus_Result_2' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Update_Execute_SAS, CallFunc_IsActionStatus_Result_3) == 0x00031D, "Member 'BP_ENpcComponent_C_Update_Execute_SAS::CallFunc_IsActionStatus_Result_3' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Update_Execute_SAS, CallFunc_IsActionStatus_Result_4) == 0x00031E, "Member 'BP_ENpcComponent_C_Update_Execute_SAS::CallFunc_IsActionStatus_Result_4' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Update_Execute_SAS, CallFunc_IsActionStatus_Result_5) == 0x00031F, "Member 'BP_ENpcComponent_C_Update_Execute_SAS::CallFunc_IsActionStatus_Result_5' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Update_Execute_SAS, CallFunc_GetPlayerID_self_CastInput_1) == 0x000320, "Member 'BP_ENpcComponent_C_Update_Execute_SAS::CallFunc_GetPlayerID_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Update_Execute_SAS, CallFunc_GetPlayerID_ReturnValue_1) == 0x000330, "Member 'BP_ENpcComponent_C_Update_Execute_SAS::CallFunc_GetPlayerID_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Update_Execute_SAS, CallFunc_BooleanOR_ReturnValue) == 0x000331, "Member 'BP_ENpcComponent_C_Update_Execute_SAS::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Update_Execute_SAS, CallFunc_GetSASKindFromPlayerID_SAS_1) == 0x000332, "Member 'BP_ENpcComponent_C_Update_Execute_SAS::CallFunc_GetSASKindFromPlayerID_SAS_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Update_Execute_SAS, CallFunc_BooleanOR_ReturnValue_1) == 0x000333, "Member 'BP_ENpcComponent_C_Update_Execute_SAS::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Update_Execute_SAS, CallFunc_IsActiveEnpcSAS_bActive) == 0x000334, "Member 'BP_ENpcComponent_C_Update_Execute_SAS::CallFunc_IsActiveEnpcSAS_bActive' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Update_Execute_SAS, CallFunc_BooleanOR_ReturnValue_2) == 0x000335, "Member 'BP_ENpcComponent_C_Update_Execute_SAS::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Update_Execute_SAS, CallFunc_BooleanOR_ReturnValue_3) == 0x000336, "Member 'BP_ENpcComponent_C_Update_Execute_SAS::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Update_Execute_SAS, CallFunc_IsValid_ReturnValue_1) == 0x000337, "Member 'BP_ENpcComponent_C_Update_Execute_SAS::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Update_Execute_SAS, CallFunc_BooleanOR_ReturnValue_4) == 0x000338, "Member 'BP_ENpcComponent_C_Update_Execute_SAS::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Update_Execute_SAS, CallFunc_Array_Add_ReturnValue) == 0x00033C, "Member 'BP_ENpcComponent_C_Update_Execute_SAS::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Update_Execute_SAS, CallFunc_GetPlayerID_self_CastInput_2) == 0x000340, "Member 'BP_ENpcComponent_C_Update_Execute_SAS::CallFunc_GetPlayerID_self_CastInput_2' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Update_Execute_SAS, CallFunc_GetPlayerID_ReturnValue_2) == 0x000350, "Member 'BP_ENpcComponent_C_Update_Execute_SAS::CallFunc_GetPlayerID_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Update_Execute_SAS, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000351, "Member 'BP_ENpcComponent_C_Update_Execute_SAS::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Update_Execute_SAS, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000352, "Member 'BP_ENpcComponent_C_Update_Execute_SAS::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Update_Execute_SAS, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000353, "Member 'BP_ENpcComponent_C_Update_Execute_SAS::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Update_Execute_SAS, CallFunc_BooleanOR_ReturnValue_5) == 0x000354, "Member 'BP_ENpcComponent_C_Update_Execute_SAS::CallFunc_BooleanOR_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Update_Execute_SAS, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x000355, "Member 'BP_ENpcComponent_C_Update_Execute_SAS::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Update_Execute_SAS, CallFunc_BooleanOR_ReturnValue_6) == 0x000356, "Member 'BP_ENpcComponent_C_Update_Execute_SAS::CallFunc_BooleanOR_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Update_Execute_SAS, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x000357, "Member 'BP_ENpcComponent_C_Update_Execute_SAS::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Update_Execute_SAS, CallFunc_BooleanOR_ReturnValue_7) == 0x000358, "Member 'BP_ENpcComponent_C_Update_Execute_SAS::CallFunc_BooleanOR_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Update_Execute_SAS, CallFunc_EqualEqual_ByteByte_ReturnValue_5) == 0x000359, "Member 'BP_ENpcComponent_C_Update_Execute_SAS::CallFunc_EqualEqual_ByteByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Update_Execute_SAS, CallFunc_BooleanOR_ReturnValue_8) == 0x00035A, "Member 'BP_ENpcComponent_C_Update_Execute_SAS::CallFunc_BooleanOR_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Update_Execute_SAS, CallFunc_BooleanOR_ReturnValue_9) == 0x00035B, "Member 'BP_ENpcComponent_C_Update_Execute_SAS::CallFunc_BooleanOR_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Update_Execute_SAS, CallFunc_EqualEqual_ByteByte_ReturnValue_6) == 0x00035C, "Member 'BP_ENpcComponent_C_Update_Execute_SAS::CallFunc_EqualEqual_ByteByte_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Update_Execute_SAS, CallFunc_Array_AddUnique_ReturnValue) == 0x000360, "Member 'BP_ENpcComponent_C_Update_Execute_SAS::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Update_Execute_SAS, Temp_int_Loop_Counter_Variable) == 0x000364, "Member 'BP_ENpcComponent_C_Update_Execute_SAS::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Update_Execute_SAS, CallFunc_IsPlayerStatus_Result_1) == 0x000368, "Member 'BP_ENpcComponent_C_Update_Execute_SAS::CallFunc_IsPlayerStatus_Result_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Update_Execute_SAS, CallFunc_Less_IntInt_ReturnValue) == 0x000369, "Member 'BP_ENpcComponent_C_Update_Execute_SAS::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Update_Execute_SAS, CallFunc_Add_IntInt_ReturnValue) == 0x00036C, "Member 'BP_ENpcComponent_C_Update_Execute_SAS::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Update_Execute_SAS, CallFunc_Add_IntInt_ReturnValue_1) == 0x000370, "Member 'BP_ENpcComponent_C_Update_Execute_SAS::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Update_Execute_SAS, CallFunc_Array_Get_Item_3) == 0x000374, "Member 'BP_ENpcComponent_C_Update_Execute_SAS::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Update_Execute_SAS, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000378, "Member 'BP_ENpcComponent_C_Update_Execute_SAS::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Update_Execute_SAS, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00037C, "Member 'BP_ENpcComponent_C_Update_Execute_SAS::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Update_Execute_SAS, Temp_int_Variable) == 0x000380, "Member 'BP_ENpcComponent_C_Update_Execute_SAS::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Update_Execute_SAS, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000384, "Member 'BP_ENpcComponent_C_Update_Execute_SAS::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Update_Execute_SAS, CallFunc_GetPlayerID_self_CastInput_3) == 0x000388, "Member 'BP_ENpcComponent_C_Update_Execute_SAS::CallFunc_GetPlayerID_self_CastInput_3' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Update_Execute_SAS, CallFunc_GetPlayerID_ReturnValue_3) == 0x000398, "Member 'BP_ENpcComponent_C_Update_Execute_SAS::CallFunc_GetPlayerID_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Update_Execute_SAS, CallFunc_EqualEqual_ByteByte_ReturnValue_7) == 0x000399, "Member 'BP_ENpcComponent_C_Update_Execute_SAS::CallFunc_EqualEqual_ByteByte_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Update_Execute_SAS, CallFunc_EqualEqual_ByteByte_ReturnValue_8) == 0x00039A, "Member 'BP_ENpcComponent_C_Update_Execute_SAS::CallFunc_EqualEqual_ByteByte_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Update_Execute_SAS, CallFunc_BooleanOR_ReturnValue_10) == 0x00039B, "Member 'BP_ENpcComponent_C_Update_Execute_SAS::CallFunc_BooleanOR_ReturnValue_10' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.SetSASStartingFlag
// 0x0018 (0x0018 - 0x0000)
struct BP_ENpcComponent_C_SetSASStartingFlag final
{
public:
	E_SASKind                                     SasKind;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Flag;                                              // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_94CD[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         LSASKind;                                          // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x000C(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ENpcComponent_C_SetSASStartingFlag) == 0x000004, "Wrong alignment on BP_ENpcComponent_C_SetSASStartingFlag");
static_assert(sizeof(BP_ENpcComponent_C_SetSASStartingFlag) == 0x000018, "Wrong size on BP_ENpcComponent_C_SetSASStartingFlag");
static_assert(offsetof(BP_ENpcComponent_C_SetSASStartingFlag, SasKind) == 0x000000, "Member 'BP_ENpcComponent_C_SetSASStartingFlag::SasKind' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_SetSASStartingFlag, Flag) == 0x000001, "Member 'BP_ENpcComponent_C_SetSASStartingFlag::Flag' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_SetSASStartingFlag, LSASKind) == 0x000004, "Member 'BP_ENpcComponent_C_SetSASStartingFlag::LSASKind' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_SetSASStartingFlag, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000008, "Member 'BP_ENpcComponent_C_SetSASStartingFlag::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_SetSASStartingFlag, Temp_float_Variable) == 0x00000C, "Member 'BP_ENpcComponent_C_SetSASStartingFlag::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_SetSASStartingFlag, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'BP_ENpcComponent_C_SetSASStartingFlag::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_SetSASStartingFlag, CallFunc_Less_IntInt_ReturnValue) == 0x000014, "Member 'BP_ENpcComponent_C_SetSASStartingFlag::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.GetSASStartingFlag
// 0x0018 (0x0018 - 0x0000)
struct BP_ENpcComponent_C_GetSASStartingFlag final
{
public:
	E_SASKind                                     SasKind;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Flag;                                              // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_94CE[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         LSASKind;                                          // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LFlag;                                             // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_94CF[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Get_Item;                           // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ENpcComponent_C_GetSASStartingFlag) == 0x000004, "Wrong alignment on BP_ENpcComponent_C_GetSASStartingFlag");
static_assert(sizeof(BP_ENpcComponent_C_GetSASStartingFlag) == 0x000018, "Wrong size on BP_ENpcComponent_C_GetSASStartingFlag");
static_assert(offsetof(BP_ENpcComponent_C_GetSASStartingFlag, SasKind) == 0x000000, "Member 'BP_ENpcComponent_C_GetSASStartingFlag::SasKind' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_GetSASStartingFlag, Flag) == 0x000001, "Member 'BP_ENpcComponent_C_GetSASStartingFlag::Flag' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_GetSASStartingFlag, LSASKind) == 0x000004, "Member 'BP_ENpcComponent_C_GetSASStartingFlag::LSASKind' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_GetSASStartingFlag, LFlag) == 0x000008, "Member 'BP_ENpcComponent_C_GetSASStartingFlag::LFlag' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_GetSASStartingFlag, CallFunc_Conv_ByteToInt_ReturnValue) == 0x00000C, "Member 'BP_ENpcComponent_C_GetSASStartingFlag::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_GetSASStartingFlag, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'BP_ENpcComponent_C_GetSASStartingFlag::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_GetSASStartingFlag, CallFunc_Array_Get_Item) == 0x000014, "Member 'BP_ENpcComponent_C_GetSASStartingFlag::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_GetSASStartingFlag, CallFunc_Less_IntInt_ReturnValue) == 0x000015, "Member 'BP_ENpcComponent_C_GetSASStartingFlag::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.SetInterceptCheckObj
// 0x0018 (0x0018 - 0x0000)
struct BP_ENpcComponent_C_SetInterceptCheckObj final
{
public:
	class AActor*                                 InObj;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ENpcComponent_C_SetInterceptCheckObj) == 0x000008, "Wrong alignment on BP_ENpcComponent_C_SetInterceptCheckObj");
static_assert(sizeof(BP_ENpcComponent_C_SetInterceptCheckObj) == 0x000018, "Wrong size on BP_ENpcComponent_C_SetInterceptCheckObj");
static_assert(offsetof(BP_ENpcComponent_C_SetInterceptCheckObj, InObj) == 0x000000, "Member 'BP_ENpcComponent_C_SetInterceptCheckObj::InObj' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_SetInterceptCheckObj, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_ENpcComponent_C_SetInterceptCheckObj::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_SetInterceptCheckObj, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_ENpcComponent_C_SetInterceptCheckObj::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_SetInterceptCheckObj, CallFunc_IsValid_ReturnValue_1) == 0x000011, "Member 'BP_ENpcComponent_C_SetInterceptCheckObj::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.GetInterceptCheckObj
// 0x0008 (0x0008 - 0x0000)
struct BP_ENpcComponent_C_GetInterceptCheckObj final
{
public:
	class AActor*                                 OutObj;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ENpcComponent_C_GetInterceptCheckObj) == 0x000008, "Wrong alignment on BP_ENpcComponent_C_GetInterceptCheckObj");
static_assert(sizeof(BP_ENpcComponent_C_GetInterceptCheckObj) == 0x000008, "Wrong size on BP_ENpcComponent_C_GetInterceptCheckObj");
static_assert(offsetof(BP_ENpcComponent_C_GetInterceptCheckObj, OutObj) == 0x000000, "Member 'BP_ENpcComponent_C_GetInterceptCheckObj::OutObj' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.ClearInterceptCheckObj
// 0x0001 (0x0001 - 0x0000)
struct BP_ENpcComponent_C_ClearInterceptCheckObj final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ENpcComponent_C_ClearInterceptCheckObj) == 0x000001, "Wrong alignment on BP_ENpcComponent_C_ClearInterceptCheckObj");
static_assert(sizeof(BP_ENpcComponent_C_ClearInterceptCheckObj) == 0x000001, "Wrong size on BP_ENpcComponent_C_ClearInterceptCheckObj");
static_assert(offsetof(BP_ENpcComponent_C_ClearInterceptCheckObj, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_ENpcComponent_C_ClearInterceptCheckObj::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.StartInterceptAction
// 0x01D0 (0x01D0 - 0x0000)
struct BP_ENpcComponent_C_StartInterceptAction final
{
public:
	class AActor*                                 InObj;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 InTarget;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LIsInvolePlayerBrainField;                         // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_94D0[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         LTimer;                                            // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LDistance;                                         // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   SubThink_Intercept;                                // 0x001C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94D1[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UDataTable*                             LTable;                                            // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LSuccess;                                          // 0x0030(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_94D2[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattlePlayer_C*                      LOwnerPlayer;                                      // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_PlayerAIComponent_C*                LPlayerAiComp;                                     // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BrainFieldManager_C*                CallFunc_GetBrainFieldManager_Manager;             // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_94D3[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_ENpcInterface_C>  CallFunc_CheckAbleInterceptInReactionChance_self_CastInput; // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckAbleInterceptInReactionChance_bAbleIntercept; // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_94D4[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetBrainFieldUser_User;                   // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInvokeBrainField_InvokeBrainField;      // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_94D5[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattlePlayer_C*                      K2Node_DynamicCast_AsRSBattle_Player;              // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_94D6[0x7];                                     // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerInterface_C> CallFunc_IsEnemyPlayer_self_CastInput;             // 0x0090(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnemyPlayer_bEnemyPlayer;               // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_94D7[0x7];                                     // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             CallFunc_GetCurrentThinkTable_Table;               // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleCharacterInterface_C> K2Node_DynamicCast_AsBPI_Battle_Character_Interface; // 0x00B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetAccelerating_Accelerating;             // 0x00CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00CB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_94D8[0x4];                                     // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerInterface_C> K2Node_DynamicCast_AsBPI_Player_Interface;         // 0x00D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_94D9[0x7];                                     // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerAIInterface_C> K2Node_DynamicCast_AsBPI_Player_AIInterface;       // 0x00E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_94DA[0x3];                                     // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetBattleTargetActor_TargetActor;         // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IPsychicObjectSearchInterface> K2Node_DynamicCast_AsPsychic_Object_Search_Interface; // 0x0110(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_94DB[0x2];                                     // 0x0122(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetSearchPos_ReturnValue;                 // 0x0124(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0130(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94DC[0x4];                                     // 0x013C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       K2Node_DynamicCast_AsRSCharacter_Base;             // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_94DD[0x3];                                     // 0x0149(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_VSize_ReturnValue;                        // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckTargetableCharacterENPC_ReturnValue; // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0151(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_94DE[0x2];                                     // 0x0152(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_1;    // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_94DF[0x7];                                     // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_EnemyInterface_C> K2Node_DynamicCast_AsBPI_Enemy_Interface;          // 0x0160(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0171(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnemyStateDamage_Return;                // 0x0172(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsNotifyEnableAttack_ReturnValue;         // 0x0173(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnableActionCommon_bEnable;             // 0x0174(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDisableAction_bEnable;                  // 0x0175(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_94E0[0x2];                                     // 0x0176(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_EnemyInterface_C> K2Node_DynamicCast_AsBPI_Enemy_Interface_1;        // 0x0178(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnemyDamageDown_bool;                   // 0x0189(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x018A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x018B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x018C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_94E1[0x3];                                     // 0x018D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFPlayerAIBattleThinkData              CallFunc_GetDataTableRowFromName_OutRow;           // 0x0190(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_94E2[0x7];                                     // 0x01A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x01B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_94E3[0x6];                                     // 0x01BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattlePlayer_C*                      K2Node_DynamicCast_AsRSBattle_Player_1;            // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ENpcComponent_C_StartInterceptAction) == 0x000008, "Wrong alignment on BP_ENpcComponent_C_StartInterceptAction");
static_assert(sizeof(BP_ENpcComponent_C_StartInterceptAction) == 0x0001D0, "Wrong size on BP_ENpcComponent_C_StartInterceptAction");
static_assert(offsetof(BP_ENpcComponent_C_StartInterceptAction, InObj) == 0x000000, "Member 'BP_ENpcComponent_C_StartInterceptAction::InObj' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartInterceptAction, InTarget) == 0x000008, "Member 'BP_ENpcComponent_C_StartInterceptAction::InTarget' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartInterceptAction, LIsInvolePlayerBrainField) == 0x000010, "Member 'BP_ENpcComponent_C_StartInterceptAction::LIsInvolePlayerBrainField' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartInterceptAction, LTimer) == 0x000014, "Member 'BP_ENpcComponent_C_StartInterceptAction::LTimer' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartInterceptAction, LDistance) == 0x000018, "Member 'BP_ENpcComponent_C_StartInterceptAction::LDistance' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartInterceptAction, SubThink_Intercept) == 0x00001C, "Member 'BP_ENpcComponent_C_StartInterceptAction::SubThink_Intercept' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartInterceptAction, LTable) == 0x000028, "Member 'BP_ENpcComponent_C_StartInterceptAction::LTable' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartInterceptAction, LSuccess) == 0x000030, "Member 'BP_ENpcComponent_C_StartInterceptAction::LSuccess' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartInterceptAction, LOwnerPlayer) == 0x000038, "Member 'BP_ENpcComponent_C_StartInterceptAction::LOwnerPlayer' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartInterceptAction, LPlayerAiComp) == 0x000040, "Member 'BP_ENpcComponent_C_StartInterceptAction::LPlayerAiComp' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartInterceptAction, CallFunc_GetBrainFieldManager_Manager) == 0x000048, "Member 'BP_ENpcComponent_C_StartInterceptAction::CallFunc_GetBrainFieldManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartInterceptAction, CallFunc_IsValid_ReturnValue) == 0x000050, "Member 'BP_ENpcComponent_C_StartInterceptAction::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartInterceptAction, CallFunc_CheckAbleInterceptInReactionChance_self_CastInput) == 0x000058, "Member 'BP_ENpcComponent_C_StartInterceptAction::CallFunc_CheckAbleInterceptInReactionChance_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartInterceptAction, CallFunc_CheckAbleInterceptInReactionChance_bAbleIntercept) == 0x000068, "Member 'BP_ENpcComponent_C_StartInterceptAction::CallFunc_CheckAbleInterceptInReactionChance_bAbleIntercept' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartInterceptAction, CallFunc_GetBrainFieldUser_User) == 0x000070, "Member 'BP_ENpcComponent_C_StartInterceptAction::CallFunc_GetBrainFieldUser_User' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartInterceptAction, CallFunc_IsInvokeBrainField_InvokeBrainField) == 0x000078, "Member 'BP_ENpcComponent_C_StartInterceptAction::CallFunc_IsInvokeBrainField_InvokeBrainField' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartInterceptAction, K2Node_DynamicCast_AsRSBattle_Player) == 0x000080, "Member 'BP_ENpcComponent_C_StartInterceptAction::K2Node_DynamicCast_AsRSBattle_Player' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartInterceptAction, K2Node_DynamicCast_bSuccess) == 0x000088, "Member 'BP_ENpcComponent_C_StartInterceptAction::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartInterceptAction, CallFunc_IsEnemyPlayer_self_CastInput) == 0x000090, "Member 'BP_ENpcComponent_C_StartInterceptAction::CallFunc_IsEnemyPlayer_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartInterceptAction, CallFunc_IsEnemyPlayer_bEnemyPlayer) == 0x0000A0, "Member 'BP_ENpcComponent_C_StartInterceptAction::CallFunc_IsEnemyPlayer_bEnemyPlayer' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartInterceptAction, CallFunc_GetPlayerPawn_ReturnValue) == 0x0000A8, "Member 'BP_ENpcComponent_C_StartInterceptAction::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartInterceptAction, CallFunc_GetCurrentThinkTable_Table) == 0x0000B0, "Member 'BP_ENpcComponent_C_StartInterceptAction::CallFunc_GetCurrentThinkTable_Table' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartInterceptAction, K2Node_DynamicCast_AsBPI_Battle_Character_Interface) == 0x0000B8, "Member 'BP_ENpcComponent_C_StartInterceptAction::K2Node_DynamicCast_AsBPI_Battle_Character_Interface' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartInterceptAction, K2Node_DynamicCast_bSuccess_1) == 0x0000C8, "Member 'BP_ENpcComponent_C_StartInterceptAction::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartInterceptAction, CallFunc_IsValid_ReturnValue_1) == 0x0000C9, "Member 'BP_ENpcComponent_C_StartInterceptAction::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartInterceptAction, CallFunc_GetAccelerating_Accelerating) == 0x0000CA, "Member 'BP_ENpcComponent_C_StartInterceptAction::CallFunc_GetAccelerating_Accelerating' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartInterceptAction, CallFunc_IsValid_ReturnValue_2) == 0x0000CB, "Member 'BP_ENpcComponent_C_StartInterceptAction::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartInterceptAction, K2Node_DynamicCast_AsBPI_Player_Interface) == 0x0000D0, "Member 'BP_ENpcComponent_C_StartInterceptAction::K2Node_DynamicCast_AsBPI_Player_Interface' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartInterceptAction, K2Node_DynamicCast_bSuccess_2) == 0x0000E0, "Member 'BP_ENpcComponent_C_StartInterceptAction::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartInterceptAction, K2Node_DynamicCast_AsBPI_Player_AIInterface) == 0x0000E8, "Member 'BP_ENpcComponent_C_StartInterceptAction::K2Node_DynamicCast_AsBPI_Player_AIInterface' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartInterceptAction, K2Node_DynamicCast_bSuccess_3) == 0x0000F8, "Member 'BP_ENpcComponent_C_StartInterceptAction::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartInterceptAction, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000FC, "Member 'BP_ENpcComponent_C_StartInterceptAction::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartInterceptAction, CallFunc_GetBattleTargetActor_TargetActor) == 0x000108, "Member 'BP_ENpcComponent_C_StartInterceptAction::CallFunc_GetBattleTargetActor_TargetActor' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartInterceptAction, K2Node_DynamicCast_AsPsychic_Object_Search_Interface) == 0x000110, "Member 'BP_ENpcComponent_C_StartInterceptAction::K2Node_DynamicCast_AsPsychic_Object_Search_Interface' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartInterceptAction, K2Node_DynamicCast_bSuccess_4) == 0x000120, "Member 'BP_ENpcComponent_C_StartInterceptAction::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartInterceptAction, CallFunc_IsValid_ReturnValue_3) == 0x000121, "Member 'BP_ENpcComponent_C_StartInterceptAction::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartInterceptAction, CallFunc_GetSearchPos_ReturnValue) == 0x000124, "Member 'BP_ENpcComponent_C_StartInterceptAction::CallFunc_GetSearchPos_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartInterceptAction, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000130, "Member 'BP_ENpcComponent_C_StartInterceptAction::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartInterceptAction, K2Node_DynamicCast_AsRSCharacter_Base) == 0x000140, "Member 'BP_ENpcComponent_C_StartInterceptAction::K2Node_DynamicCast_AsRSCharacter_Base' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartInterceptAction, K2Node_DynamicCast_bSuccess_5) == 0x000148, "Member 'BP_ENpcComponent_C_StartInterceptAction::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartInterceptAction, CallFunc_VSize_ReturnValue) == 0x00014C, "Member 'BP_ENpcComponent_C_StartInterceptAction::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartInterceptAction, CallFunc_CheckTargetableCharacterENPC_ReturnValue) == 0x000150, "Member 'BP_ENpcComponent_C_StartInterceptAction::CallFunc_CheckTargetableCharacterENPC_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartInterceptAction, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000151, "Member 'BP_ENpcComponent_C_StartInterceptAction::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartInterceptAction, CallFunc_RandomFloatInRange_ReturnValue) == 0x000154, "Member 'BP_ENpcComponent_C_StartInterceptAction::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartInterceptAction, CallFunc_GreaterEqual_FloatFloat_ReturnValue_1) == 0x000158, "Member 'BP_ENpcComponent_C_StartInterceptAction::CallFunc_GreaterEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartInterceptAction, K2Node_DynamicCast_AsBPI_Enemy_Interface) == 0x000160, "Member 'BP_ENpcComponent_C_StartInterceptAction::K2Node_DynamicCast_AsBPI_Enemy_Interface' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartInterceptAction, K2Node_DynamicCast_bSuccess_6) == 0x000170, "Member 'BP_ENpcComponent_C_StartInterceptAction::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartInterceptAction, CallFunc_IsValid_ReturnValue_4) == 0x000171, "Member 'BP_ENpcComponent_C_StartInterceptAction::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartInterceptAction, CallFunc_IsEnemyStateDamage_Return) == 0x000172, "Member 'BP_ENpcComponent_C_StartInterceptAction::CallFunc_IsEnemyStateDamage_Return' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartInterceptAction, CallFunc_IsNotifyEnableAttack_ReturnValue) == 0x000173, "Member 'BP_ENpcComponent_C_StartInterceptAction::CallFunc_IsNotifyEnableAttack_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartInterceptAction, CallFunc_IsEnableActionCommon_bEnable) == 0x000174, "Member 'BP_ENpcComponent_C_StartInterceptAction::CallFunc_IsEnableActionCommon_bEnable' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartInterceptAction, CallFunc_IsDisableAction_bEnable) == 0x000175, "Member 'BP_ENpcComponent_C_StartInterceptAction::CallFunc_IsDisableAction_bEnable' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartInterceptAction, K2Node_DynamicCast_AsBPI_Enemy_Interface_1) == 0x000178, "Member 'BP_ENpcComponent_C_StartInterceptAction::K2Node_DynamicCast_AsBPI_Enemy_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartInterceptAction, K2Node_DynamicCast_bSuccess_7) == 0x000188, "Member 'BP_ENpcComponent_C_StartInterceptAction::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartInterceptAction, CallFunc_IsEnemyDamageDown_bool) == 0x000189, "Member 'BP_ENpcComponent_C_StartInterceptAction::CallFunc_IsEnemyDamageDown_bool' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartInterceptAction, CallFunc_IsValid_ReturnValue_5) == 0x00018A, "Member 'BP_ENpcComponent_C_StartInterceptAction::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartInterceptAction, CallFunc_IsValid_ReturnValue_6) == 0x00018B, "Member 'BP_ENpcComponent_C_StartInterceptAction::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartInterceptAction, CallFunc_IsValid_ReturnValue_7) == 0x00018C, "Member 'BP_ENpcComponent_C_StartInterceptAction::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartInterceptAction, CallFunc_GetDataTableRowFromName_OutRow) == 0x000190, "Member 'BP_ENpcComponent_C_StartInterceptAction::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartInterceptAction, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0001A8, "Member 'BP_ENpcComponent_C_StartInterceptAction::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartInterceptAction, CallFunc_GetOwner_ReturnValue) == 0x0001B0, "Member 'BP_ENpcComponent_C_StartInterceptAction::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartInterceptAction, CallFunc_IsValid_ReturnValue_8) == 0x0001B8, "Member 'BP_ENpcComponent_C_StartInterceptAction::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartInterceptAction, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0001B9, "Member 'BP_ENpcComponent_C_StartInterceptAction::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartInterceptAction, K2Node_DynamicCast_AsRSBattle_Player_1) == 0x0001C0, "Member 'BP_ENpcComponent_C_StartInterceptAction::K2Node_DynamicCast_AsRSBattle_Player_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartInterceptAction, K2Node_DynamicCast_bSuccess_8) == 0x0001C8, "Member 'BP_ENpcComponent_C_StartInterceptAction::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.EndInterceptAction
// 0x0008 (0x0008 - 0x0000)
struct BP_ENpcComponent_C_EndInterceptAction final
{
public:
	class UBP_PlayerAIComponent_C*                LPlayerAiComp;                                     // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ENpcComponent_C_EndInterceptAction) == 0x000008, "Wrong alignment on BP_ENpcComponent_C_EndInterceptAction");
static_assert(sizeof(BP_ENpcComponent_C_EndInterceptAction) == 0x000008, "Wrong size on BP_ENpcComponent_C_EndInterceptAction");
static_assert(offsetof(BP_ENpcComponent_C_EndInterceptAction, LPlayerAiComp) == 0x000000, "Member 'BP_ENpcComponent_C_EndInterceptAction::LPlayerAiComp' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.UpdateInterceptInterval
// 0x0020 (0x0020 - 0x0000)
struct BP_ENpcComponent_C_UpdateInterceptInterval final
{
public:
	float                                         DeltaSec;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94E4[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_PlayerAIComponent_C*                LPlayerAiComp;                                     // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsOver_ReturnValue;                       // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnable_ReturnValue;                     // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ENpcComponent_C_UpdateInterceptInterval) == 0x000008, "Wrong alignment on BP_ENpcComponent_C_UpdateInterceptInterval");
static_assert(sizeof(BP_ENpcComponent_C_UpdateInterceptInterval) == 0x000020, "Wrong size on BP_ENpcComponent_C_UpdateInterceptInterval");
static_assert(offsetof(BP_ENpcComponent_C_UpdateInterceptInterval, DeltaSec) == 0x000000, "Member 'BP_ENpcComponent_C_UpdateInterceptInterval::DeltaSec' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateInterceptInterval, LPlayerAiComp) == 0x000008, "Member 'BP_ENpcComponent_C_UpdateInterceptInterval::LPlayerAiComp' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateInterceptInterval, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'BP_ENpcComponent_C_UpdateInterceptInterval::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateInterceptInterval, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_ENpcComponent_C_UpdateInterceptInterval::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateInterceptInterval, CallFunc_IsOver_ReturnValue) == 0x000019, "Member 'BP_ENpcComponent_C_UpdateInterceptInterval::CallFunc_IsOver_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateInterceptInterval, CallFunc_IsEnable_ReturnValue) == 0x00001A, "Member 'BP_ENpcComponent_C_UpdateInterceptInterval::CallFunc_IsEnable_ReturnValue' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.IsDispStealthEffect
// 0x0028 (0x0028 - 0x0000)
struct BP_ENpcComponent_C_IsDispStealthEffect final
{
public:
	bool                                          bOutDisp;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_94E5[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_EnemyManager_C*                     LEnemyManager;                                     // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LbOutDisp;                                         // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsStealthMode_ReturnValue;                // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_94E6[0x5];                                     // 0x0013(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_EnemyManager_C*                     CallFunc_GetEnemyManager_Manager;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsStealthSeeEnable_Return;                // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ENpcComponent_C_IsDispStealthEffect) == 0x000008, "Wrong alignment on BP_ENpcComponent_C_IsDispStealthEffect");
static_assert(sizeof(BP_ENpcComponent_C_IsDispStealthEffect) == 0x000028, "Wrong size on BP_ENpcComponent_C_IsDispStealthEffect");
static_assert(offsetof(BP_ENpcComponent_C_IsDispStealthEffect, bOutDisp) == 0x000000, "Member 'BP_ENpcComponent_C_IsDispStealthEffect::bOutDisp' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsDispStealthEffect, LEnemyManager) == 0x000008, "Member 'BP_ENpcComponent_C_IsDispStealthEffect::LEnemyManager' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsDispStealthEffect, LbOutDisp) == 0x000010, "Member 'BP_ENpcComponent_C_IsDispStealthEffect::LbOutDisp' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsDispStealthEffect, CallFunc_IsStealthMode_ReturnValue) == 0x000011, "Member 'BP_ENpcComponent_C_IsDispStealthEffect::CallFunc_IsStealthMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsDispStealthEffect, CallFunc_IsValid_ReturnValue) == 0x000012, "Member 'BP_ENpcComponent_C_IsDispStealthEffect::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsDispStealthEffect, CallFunc_GetEnemyManager_Manager) == 0x000018, "Member 'BP_ENpcComponent_C_IsDispStealthEffect::CallFunc_GetEnemyManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsDispStealthEffect, CallFunc_IsValid_ReturnValue_1) == 0x000020, "Member 'BP_ENpcComponent_C_IsDispStealthEffect::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsDispStealthEffect, CallFunc_IsValid_ReturnValue_2) == 0x000021, "Member 'BP_ENpcComponent_C_IsDispStealthEffect::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsDispStealthEffect, CallFunc_IsStealthSeeEnable_Return) == 0x000022, "Member 'BP_ENpcComponent_C_IsDispStealthEffect::CallFunc_IsStealthSeeEnable_Return' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.IsActiveEnpcSASAll
// 0x0008 (0x0008 - 0x0000)
struct BP_ENpcComponent_C_IsActiveEnpcSASAll final
{
public:
	bool                                          Active;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          LIsActive;                                         // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActiveEnpcSAS_bActive;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActiveEnpcSAS_bActive_1;                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActiveEnpcSAS_bActive_2;                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActiveEnpcSAS_bActive_3;                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActiveEnpcSAS_bActive_4;                // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActiveEnpcSAS_bActive_5;                // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ENpcComponent_C_IsActiveEnpcSASAll) == 0x000001, "Wrong alignment on BP_ENpcComponent_C_IsActiveEnpcSASAll");
static_assert(sizeof(BP_ENpcComponent_C_IsActiveEnpcSASAll) == 0x000008, "Wrong size on BP_ENpcComponent_C_IsActiveEnpcSASAll");
static_assert(offsetof(BP_ENpcComponent_C_IsActiveEnpcSASAll, Active) == 0x000000, "Member 'BP_ENpcComponent_C_IsActiveEnpcSASAll::Active' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsActiveEnpcSASAll, LIsActive) == 0x000001, "Member 'BP_ENpcComponent_C_IsActiveEnpcSASAll::LIsActive' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsActiveEnpcSASAll, CallFunc_IsActiveEnpcSAS_bActive) == 0x000002, "Member 'BP_ENpcComponent_C_IsActiveEnpcSASAll::CallFunc_IsActiveEnpcSAS_bActive' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsActiveEnpcSASAll, CallFunc_IsActiveEnpcSAS_bActive_1) == 0x000003, "Member 'BP_ENpcComponent_C_IsActiveEnpcSASAll::CallFunc_IsActiveEnpcSAS_bActive_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsActiveEnpcSASAll, CallFunc_IsActiveEnpcSAS_bActive_2) == 0x000004, "Member 'BP_ENpcComponent_C_IsActiveEnpcSASAll::CallFunc_IsActiveEnpcSAS_bActive_2' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsActiveEnpcSASAll, CallFunc_IsActiveEnpcSAS_bActive_3) == 0x000005, "Member 'BP_ENpcComponent_C_IsActiveEnpcSASAll::CallFunc_IsActiveEnpcSAS_bActive_3' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsActiveEnpcSASAll, CallFunc_IsActiveEnpcSAS_bActive_4) == 0x000006, "Member 'BP_ENpcComponent_C_IsActiveEnpcSASAll::CallFunc_IsActiveEnpcSAS_bActive_4' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsActiveEnpcSASAll, CallFunc_IsActiveEnpcSAS_bActive_5) == 0x000007, "Member 'BP_ENpcComponent_C_IsActiveEnpcSASAll::CallFunc_IsActiveEnpcSAS_bActive_5' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.SetHitTrigger
// 0x0001 (0x0001 - 0x0000)
struct BP_ENpcComponent_C_SetHitTrigger final
{
public:
	bool                                          Param_IsHitTrigger;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ENpcComponent_C_SetHitTrigger) == 0x000001, "Wrong alignment on BP_ENpcComponent_C_SetHitTrigger");
static_assert(sizeof(BP_ENpcComponent_C_SetHitTrigger) == 0x000001, "Wrong size on BP_ENpcComponent_C_SetHitTrigger");
static_assert(offsetof(BP_ENpcComponent_C_SetHitTrigger, Param_IsHitTrigger) == 0x000000, "Member 'BP_ENpcComponent_C_SetHitTrigger::Param_IsHitTrigger' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.UpdateSASStartingTimer
// 0x001C (0x001C - 0x0000)
struct BP_ENpcComponent_C_UpdateSASStartingTimer final
{
public:
	E_SASKind                                     SasKind;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94E7[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DeltaSec;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsReset;                                           // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          LIsReset;                                          // 0x0009(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_94E8[0x2];                                     // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Array_Get_Item;                           // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ENpcComponent_C_UpdateSASStartingTimer) == 0x000004, "Wrong alignment on BP_ENpcComponent_C_UpdateSASStartingTimer");
static_assert(sizeof(BP_ENpcComponent_C_UpdateSASStartingTimer) == 0x00001C, "Wrong size on BP_ENpcComponent_C_UpdateSASStartingTimer");
static_assert(offsetof(BP_ENpcComponent_C_UpdateSASStartingTimer, SasKind) == 0x000000, "Member 'BP_ENpcComponent_C_UpdateSASStartingTimer::SasKind' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateSASStartingTimer, DeltaSec) == 0x000004, "Member 'BP_ENpcComponent_C_UpdateSASStartingTimer::DeltaSec' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateSASStartingTimer, IsReset) == 0x000008, "Member 'BP_ENpcComponent_C_UpdateSASStartingTimer::IsReset' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateSASStartingTimer, LIsReset) == 0x000009, "Member 'BP_ENpcComponent_C_UpdateSASStartingTimer::LIsReset' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateSASStartingTimer, CallFunc_Conv_ByteToInt_ReturnValue) == 0x00000C, "Member 'BP_ENpcComponent_C_UpdateSASStartingTimer::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateSASStartingTimer, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_ENpcComponent_C_UpdateSASStartingTimer::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateSASStartingTimer, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000014, "Member 'BP_ENpcComponent_C_UpdateSASStartingTimer::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateSASStartingTimer, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000018, "Member 'BP_ENpcComponent_C_UpdateSASStartingTimer::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.CheckDriveStartBrainField
// 0x0058 (0x0058 - 0x0000)
struct BP_ENpcComponent_C_CheckDriveStartBrainField final
{
public:
	bool                                          IsReady;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_94E9[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattlePlayer_C*                      LOwner;                                            // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_94EA[0x5];                                     // 0x0013(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BrainFieldManager_C*                CallFunc_GetBrainFieldManager_Manager;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsUserIsPlayer_IsPlayer;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_InBranField_InBrainDield;                 // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_94EB[0x5];                                     // 0x0023(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CharacterParamater_C> CallFunc_IsDead_self_CastInput;                    // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDead_bDead;                             // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_94EC[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattlePlayer_C*                      K2Node_DynamicCast_AsRSBattle_Player;              // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ENpcComponent_C_CheckDriveStartBrainField) == 0x000008, "Wrong alignment on BP_ENpcComponent_C_CheckDriveStartBrainField");
static_assert(sizeof(BP_ENpcComponent_C_CheckDriveStartBrainField) == 0x000058, "Wrong size on BP_ENpcComponent_C_CheckDriveStartBrainField");
static_assert(offsetof(BP_ENpcComponent_C_CheckDriveStartBrainField, IsReady) == 0x000000, "Member 'BP_ENpcComponent_C_CheckDriveStartBrainField::IsReady' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_CheckDriveStartBrainField, LOwner) == 0x000008, "Member 'BP_ENpcComponent_C_CheckDriveStartBrainField::LOwner' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_CheckDriveStartBrainField, CallFunc_BooleanOR_ReturnValue) == 0x000010, "Member 'BP_ENpcComponent_C_CheckDriveStartBrainField::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_CheckDriveStartBrainField, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x000011, "Member 'BP_ENpcComponent_C_CheckDriveStartBrainField::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_CheckDriveStartBrainField, CallFunc_IsValid_ReturnValue) == 0x000012, "Member 'BP_ENpcComponent_C_CheckDriveStartBrainField::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_CheckDriveStartBrainField, CallFunc_GetBrainFieldManager_Manager) == 0x000018, "Member 'BP_ENpcComponent_C_CheckDriveStartBrainField::CallFunc_GetBrainFieldManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_CheckDriveStartBrainField, CallFunc_IsUserIsPlayer_IsPlayer) == 0x000020, "Member 'BP_ENpcComponent_C_CheckDriveStartBrainField::CallFunc_IsUserIsPlayer_IsPlayer' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_CheckDriveStartBrainField, CallFunc_InBranField_InBrainDield) == 0x000021, "Member 'BP_ENpcComponent_C_CheckDriveStartBrainField::CallFunc_InBranField_InBrainDield' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_CheckDriveStartBrainField, CallFunc_IsValid_ReturnValue_1) == 0x000022, "Member 'BP_ENpcComponent_C_CheckDriveStartBrainField::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_CheckDriveStartBrainField, CallFunc_IsDead_self_CastInput) == 0x000028, "Member 'BP_ENpcComponent_C_CheckDriveStartBrainField::CallFunc_IsDead_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_CheckDriveStartBrainField, CallFunc_IsDead_bDead) == 0x000038, "Member 'BP_ENpcComponent_C_CheckDriveStartBrainField::CallFunc_IsDead_bDead' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_CheckDriveStartBrainField, CallFunc_GetOwner_ReturnValue) == 0x000040, "Member 'BP_ENpcComponent_C_CheckDriveStartBrainField::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_CheckDriveStartBrainField, K2Node_DynamicCast_AsRSBattle_Player) == 0x000048, "Member 'BP_ENpcComponent_C_CheckDriveStartBrainField::K2Node_DynamicCast_AsRSBattle_Player' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_CheckDriveStartBrainField, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'BP_ENpcComponent_C_CheckDriveStartBrainField::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_CheckDriveStartBrainField, CallFunc_IsValid_ReturnValue_2) == 0x000051, "Member 'BP_ENpcComponent_C_CheckDriveStartBrainField::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.SetDuelPoleType
// 0x0018 (0x0018 - 0x0000)
struct BP_ENpcComponent_C_SetDuelPoleType final
{
public:
	bool                                          bDuelType;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bCheckState;                                       // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bIsCompleted;                                      // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          LbIsCompleted;                                     // 0x0003(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_94ED[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APsychicObjectManager_C*                CallFunc_GetPsychicObjectManager_PsyObjManager;    // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetDuelPoleType_ReturnValue;              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ENpcComponent_C_SetDuelPoleType) == 0x000008, "Wrong alignment on BP_ENpcComponent_C_SetDuelPoleType");
static_assert(sizeof(BP_ENpcComponent_C_SetDuelPoleType) == 0x000018, "Wrong size on BP_ENpcComponent_C_SetDuelPoleType");
static_assert(offsetof(BP_ENpcComponent_C_SetDuelPoleType, bDuelType) == 0x000000, "Member 'BP_ENpcComponent_C_SetDuelPoleType::bDuelType' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_SetDuelPoleType, bCheckState) == 0x000001, "Member 'BP_ENpcComponent_C_SetDuelPoleType::bCheckState' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_SetDuelPoleType, bIsCompleted) == 0x000002, "Member 'BP_ENpcComponent_C_SetDuelPoleType::bIsCompleted' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_SetDuelPoleType, LbIsCompleted) == 0x000003, "Member 'BP_ENpcComponent_C_SetDuelPoleType::LbIsCompleted' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_SetDuelPoleType, CallFunc_GetPsychicObjectManager_PsyObjManager) == 0x000008, "Member 'BP_ENpcComponent_C_SetDuelPoleType::CallFunc_GetPsychicObjectManager_PsyObjManager' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_SetDuelPoleType, CallFunc_SetDuelPoleType_ReturnValue) == 0x000010, "Member 'BP_ENpcComponent_C_SetDuelPoleType::CallFunc_SetDuelPoleType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_SetDuelPoleType, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'BP_ENpcComponent_C_SetDuelPoleType::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.CheckDuelPoleStartHp
// 0x0060 (0x0060 - 0x0000)
struct BP_ENpcComponent_C_CheckDuelPoleStartHp final
{
public:
	class ARSBattlePlayer_C*                      LOwner;                                            // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_CharacterParamater_C> CallFunc_IsDead_self_CastInput;                    // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDead_bDead;                             // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_94EE[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CharacterParamater_C> CallFunc_GetHPPercent_self_CastInput;              // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetHPPercent_Percent;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_94EF[0x2];                                     // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ARsBattleHero_C*                        K2Node_DynamicCast_AsRs_Battle_Hero;               // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_94F0[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattlePlayer_C*                      K2Node_DynamicCast_AsRSBattle_Player;              // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ENpcComponent_C_CheckDuelPoleStartHp) == 0x000008, "Wrong alignment on BP_ENpcComponent_C_CheckDuelPoleStartHp");
static_assert(sizeof(BP_ENpcComponent_C_CheckDuelPoleStartHp) == 0x000060, "Wrong size on BP_ENpcComponent_C_CheckDuelPoleStartHp");
static_assert(offsetof(BP_ENpcComponent_C_CheckDuelPoleStartHp, LOwner) == 0x000000, "Member 'BP_ENpcComponent_C_CheckDuelPoleStartHp::LOwner' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_CheckDuelPoleStartHp, CallFunc_IsDead_self_CastInput) == 0x000008, "Member 'BP_ENpcComponent_C_CheckDuelPoleStartHp::CallFunc_IsDead_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_CheckDuelPoleStartHp, CallFunc_IsDead_bDead) == 0x000018, "Member 'BP_ENpcComponent_C_CheckDuelPoleStartHp::CallFunc_IsDead_bDead' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_CheckDuelPoleStartHp, CallFunc_GetHPPercent_self_CastInput) == 0x000020, "Member 'BP_ENpcComponent_C_CheckDuelPoleStartHp::CallFunc_GetHPPercent_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_CheckDuelPoleStartHp, CallFunc_GetHPPercent_Percent) == 0x000030, "Member 'BP_ENpcComponent_C_CheckDuelPoleStartHp::CallFunc_GetHPPercent_Percent' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_CheckDuelPoleStartHp, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000034, "Member 'BP_ENpcComponent_C_CheckDuelPoleStartHp::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_CheckDuelPoleStartHp, CallFunc_IsValid_ReturnValue) == 0x000035, "Member 'BP_ENpcComponent_C_CheckDuelPoleStartHp::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_CheckDuelPoleStartHp, K2Node_DynamicCast_AsRs_Battle_Hero) == 0x000038, "Member 'BP_ENpcComponent_C_CheckDuelPoleStartHp::K2Node_DynamicCast_AsRs_Battle_Hero' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_CheckDuelPoleStartHp, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_ENpcComponent_C_CheckDuelPoleStartHp::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_CheckDuelPoleStartHp, CallFunc_GetOwner_ReturnValue) == 0x000048, "Member 'BP_ENpcComponent_C_CheckDuelPoleStartHp::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_CheckDuelPoleStartHp, K2Node_DynamicCast_AsRSBattle_Player) == 0x000050, "Member 'BP_ENpcComponent_C_CheckDuelPoleStartHp::K2Node_DynamicCast_AsRSBattle_Player' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_CheckDuelPoleStartHp, K2Node_DynamicCast_bSuccess_1) == 0x000058, "Member 'BP_ENpcComponent_C_CheckDuelPoleStartHp::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_CheckDuelPoleStartHp, CallFunc_IsValid_ReturnValue_1) == 0x000059, "Member 'BP_ENpcComponent_C_CheckDuelPoleStartHp::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.UpdateStartInitDuelPole
// 0x0001 (0x0001 - 0x0000)
struct BP_ENpcComponent_C_UpdateStartInitDuelPole final
{
public:
	bool                                          CallFunc_SetDuelPoleType_bIsCompleted;             // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ENpcComponent_C_UpdateStartInitDuelPole) == 0x000001, "Wrong alignment on BP_ENpcComponent_C_UpdateStartInitDuelPole");
static_assert(sizeof(BP_ENpcComponent_C_UpdateStartInitDuelPole) == 0x000001, "Wrong size on BP_ENpcComponent_C_UpdateStartInitDuelPole");
static_assert(offsetof(BP_ENpcComponent_C_UpdateStartInitDuelPole, CallFunc_SetDuelPoleType_bIsCompleted) == 0x000000, "Member 'BP_ENpcComponent_C_UpdateStartInitDuelPole::CallFunc_SetDuelPoleType_bIsCompleted' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.ChangeDuelPoleType
// 0x0002 (0x0002 - 0x0000)
struct BP_ENpcComponent_C_ChangeDuelPoleType final
{
public:
	bool                                          bDuelType;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bDuelPoleCheckState;                               // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ENpcComponent_C_ChangeDuelPoleType) == 0x000001, "Wrong alignment on BP_ENpcComponent_C_ChangeDuelPoleType");
static_assert(sizeof(BP_ENpcComponent_C_ChangeDuelPoleType) == 0x000002, "Wrong size on BP_ENpcComponent_C_ChangeDuelPoleType");
static_assert(offsetof(BP_ENpcComponent_C_ChangeDuelPoleType, bDuelType) == 0x000000, "Member 'BP_ENpcComponent_C_ChangeDuelPoleType::bDuelType' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_ChangeDuelPoleType, bDuelPoleCheckState) == 0x000001, "Member 'BP_ENpcComponent_C_ChangeDuelPoleType::bDuelPoleCheckState' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.SetRandomDuelPole
// 0x0008 (0x0008 - 0x0000)
struct BP_ENpcComponent_C_SetRandomDuelPole final
{
public:
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ENpcComponent_C_SetRandomDuelPole) == 0x000004, "Wrong alignment on BP_ENpcComponent_C_SetRandomDuelPole");
static_assert(sizeof(BP_ENpcComponent_C_SetRandomDuelPole) == 0x000008, "Wrong size on BP_ENpcComponent_C_SetRandomDuelPole");
static_assert(offsetof(BP_ENpcComponent_C_SetRandomDuelPole, CallFunc_RandomIntegerInRange_ReturnValue) == 0x000000, "Member 'BP_ENpcComponent_C_SetRandomDuelPole::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_SetRandomDuelPole, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000004, "Member 'BP_ENpcComponent_C_SetRandomDuelPole::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.StartStealthCriticalHitSlow
// 0x0240 (0x0240 - 0x0000)
struct BP_ENpcComponent_C_StartStealthCriticalHitSlow final
{
public:
	struct FHCHitResult                           HitResult;                                         // 0x0000(0x01C0)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
	EPlayerHitStopType                            LSlowType;                                         // 0x01C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94F1[0x7];                                     // 0x01C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 LAttacker;                                         // 0x01C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattleCharacter_C*                   LOwner;                                            // 0x01D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_PlayerInterface_C> K2Node_DynamicCast_AsBPI_Player_Interface;         // 0x01D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnemyPlayer_bEnemyPlayer;               // 0x01EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x01EB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x01EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EHCSkillExtraType                             Temp_byte_Variable;                                // 0x01ED(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerHitStopType                            Temp_byte_Variable_1;                              // 0x01EE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94F2[0x1];                                     // 0x01EF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x01F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerHitStopType                            Temp_byte_Variable_2;                              // 0x01F5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x01F6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckReceiveStealthCritical_Return;       // 0x01F7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class ITargetableObjectInterface> K2Node_DynamicCast_AsTargetable_Object_Interface;  // 0x01F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_94F3[0x7];                                     // 0x0209(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsControlPlayer_ReturnValue;              // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0219(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_94F4[0x6];                                     // 0x021A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattleCharacter_C*                   K2Node_DynamicCast_AsRSBattle_Character;           // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0229(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_94F5[0x6];                                     // 0x022A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BattleManager_C*                    CallFunc_GetBattleManager_BattleManager;           // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerHitStopType                            K2Node_Select_Default;                             // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0239(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x023A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ENpcComponent_C_StartStealthCriticalHitSlow) == 0x000008, "Wrong alignment on BP_ENpcComponent_C_StartStealthCriticalHitSlow");
static_assert(sizeof(BP_ENpcComponent_C_StartStealthCriticalHitSlow) == 0x000240, "Wrong size on BP_ENpcComponent_C_StartStealthCriticalHitSlow");
static_assert(offsetof(BP_ENpcComponent_C_StartStealthCriticalHitSlow, HitResult) == 0x000000, "Member 'BP_ENpcComponent_C_StartStealthCriticalHitSlow::HitResult' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartStealthCriticalHitSlow, LSlowType) == 0x0001C0, "Member 'BP_ENpcComponent_C_StartStealthCriticalHitSlow::LSlowType' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartStealthCriticalHitSlow, LAttacker) == 0x0001C8, "Member 'BP_ENpcComponent_C_StartStealthCriticalHitSlow::LAttacker' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartStealthCriticalHitSlow, LOwner) == 0x0001D0, "Member 'BP_ENpcComponent_C_StartStealthCriticalHitSlow::LOwner' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartStealthCriticalHitSlow, K2Node_DynamicCast_AsBPI_Player_Interface) == 0x0001D8, "Member 'BP_ENpcComponent_C_StartStealthCriticalHitSlow::K2Node_DynamicCast_AsBPI_Player_Interface' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartStealthCriticalHitSlow, K2Node_DynamicCast_bSuccess) == 0x0001E8, "Member 'BP_ENpcComponent_C_StartStealthCriticalHitSlow::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartStealthCriticalHitSlow, CallFunc_IsValid_ReturnValue) == 0x0001E9, "Member 'BP_ENpcComponent_C_StartStealthCriticalHitSlow::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartStealthCriticalHitSlow, CallFunc_IsEnemyPlayer_bEnemyPlayer) == 0x0001EA, "Member 'BP_ENpcComponent_C_StartStealthCriticalHitSlow::CallFunc_IsEnemyPlayer_bEnemyPlayer' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartStealthCriticalHitSlow, CallFunc_IsValid_ReturnValue_1) == 0x0001EB, "Member 'BP_ENpcComponent_C_StartStealthCriticalHitSlow::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartStealthCriticalHitSlow, CallFunc_IsValid_ReturnValue_2) == 0x0001EC, "Member 'BP_ENpcComponent_C_StartStealthCriticalHitSlow::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartStealthCriticalHitSlow, Temp_byte_Variable) == 0x0001ED, "Member 'BP_ENpcComponent_C_StartStealthCriticalHitSlow::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartStealthCriticalHitSlow, Temp_byte_Variable_1) == 0x0001EE, "Member 'BP_ENpcComponent_C_StartStealthCriticalHitSlow::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartStealthCriticalHitSlow, CallFunc_Array_Find_ReturnValue) == 0x0001F0, "Member 'BP_ENpcComponent_C_StartStealthCriticalHitSlow::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartStealthCriticalHitSlow, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0001F4, "Member 'BP_ENpcComponent_C_StartStealthCriticalHitSlow::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartStealthCriticalHitSlow, Temp_byte_Variable_2) == 0x0001F5, "Member 'BP_ENpcComponent_C_StartStealthCriticalHitSlow::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartStealthCriticalHitSlow, Temp_bool_Variable) == 0x0001F6, "Member 'BP_ENpcComponent_C_StartStealthCriticalHitSlow::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartStealthCriticalHitSlow, CallFunc_CheckReceiveStealthCritical_Return) == 0x0001F7, "Member 'BP_ENpcComponent_C_StartStealthCriticalHitSlow::CallFunc_CheckReceiveStealthCritical_Return' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartStealthCriticalHitSlow, K2Node_DynamicCast_AsTargetable_Object_Interface) == 0x0001F8, "Member 'BP_ENpcComponent_C_StartStealthCriticalHitSlow::K2Node_DynamicCast_AsTargetable_Object_Interface' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartStealthCriticalHitSlow, K2Node_DynamicCast_bSuccess_1) == 0x000208, "Member 'BP_ENpcComponent_C_StartStealthCriticalHitSlow::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartStealthCriticalHitSlow, CallFunc_GetOwner_ReturnValue) == 0x000210, "Member 'BP_ENpcComponent_C_StartStealthCriticalHitSlow::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartStealthCriticalHitSlow, CallFunc_IsControlPlayer_ReturnValue) == 0x000218, "Member 'BP_ENpcComponent_C_StartStealthCriticalHitSlow::CallFunc_IsControlPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartStealthCriticalHitSlow, CallFunc_IsValid_ReturnValue_3) == 0x000219, "Member 'BP_ENpcComponent_C_StartStealthCriticalHitSlow::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartStealthCriticalHitSlow, K2Node_DynamicCast_AsRSBattle_Character) == 0x000220, "Member 'BP_ENpcComponent_C_StartStealthCriticalHitSlow::K2Node_DynamicCast_AsRSBattle_Character' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartStealthCriticalHitSlow, K2Node_DynamicCast_bSuccess_2) == 0x000228, "Member 'BP_ENpcComponent_C_StartStealthCriticalHitSlow::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartStealthCriticalHitSlow, Temp_bool_Variable_1) == 0x000229, "Member 'BP_ENpcComponent_C_StartStealthCriticalHitSlow::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartStealthCriticalHitSlow, CallFunc_GetBattleManager_BattleManager) == 0x000230, "Member 'BP_ENpcComponent_C_StartStealthCriticalHitSlow::CallFunc_GetBattleManager_BattleManager' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartStealthCriticalHitSlow, K2Node_Select_Default) == 0x000238, "Member 'BP_ENpcComponent_C_StartStealthCriticalHitSlow::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartStealthCriticalHitSlow, CallFunc_IsValid_ReturnValue_4) == 0x000239, "Member 'BP_ENpcComponent_C_StartStealthCriticalHitSlow::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartStealthCriticalHitSlow, CallFunc_IsValid_ReturnValue_5) == 0x00023A, "Member 'BP_ENpcComponent_C_StartStealthCriticalHitSlow::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.IsSpTriggerAll
// 0x0002 (0x0002 - 0x0000)
struct BP_ENpcComponent_C_IsSpTriggerAll final
{
public:
	bool                                          IsSpTrigger;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          LCanSpTrigger;                                     // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ENpcComponent_C_IsSpTriggerAll) == 0x000001, "Wrong alignment on BP_ENpcComponent_C_IsSpTriggerAll");
static_assert(sizeof(BP_ENpcComponent_C_IsSpTriggerAll) == 0x000002, "Wrong size on BP_ENpcComponent_C_IsSpTriggerAll");
static_assert(offsetof(BP_ENpcComponent_C_IsSpTriggerAll, IsSpTrigger) == 0x000000, "Member 'BP_ENpcComponent_C_IsSpTriggerAll::IsSpTrigger' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsSpTriggerAll, LCanSpTrigger) == 0x000001, "Member 'BP_ENpcComponent_C_IsSpTriggerAll::LCanSpTrigger' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.SetSpTriggerAll
// 0x0004 (0x0004 - 0x0000)
struct BP_ENpcComponent_C_SetSpTriggerAll final
{
public:
	bool                                          bSpTriggerAll;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          LCanSpTrigger;                                     // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ENpcComponent_C_SetSpTriggerAll) == 0x000001, "Wrong alignment on BP_ENpcComponent_C_SetSpTriggerAll");
static_assert(sizeof(BP_ENpcComponent_C_SetSpTriggerAll) == 0x000004, "Wrong size on BP_ENpcComponent_C_SetSpTriggerAll");
static_assert(offsetof(BP_ENpcComponent_C_SetSpTriggerAll, bSpTriggerAll) == 0x000000, "Member 'BP_ENpcComponent_C_SetSpTriggerAll::bSpTriggerAll' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_SetSpTriggerAll, LCanSpTrigger) == 0x000001, "Member 'BP_ENpcComponent_C_SetSpTriggerAll::LCanSpTrigger' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_SetSpTriggerAll, CallFunc_IsValid_ReturnValue) == 0x000002, "Member 'BP_ENpcComponent_C_SetSpTriggerAll::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_SetSpTriggerAll, CallFunc_IsValid_ReturnValue_1) == 0x000003, "Member 'BP_ENpcComponent_C_SetSpTriggerAll::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.ShowUnDiscoverIcon
// 0x0018 (0x0018 - 0x0000)
struct BP_ENpcComponent_C_ShowUnDiscoverIcon final
{
public:
	bool                                          IsForceDispIcon;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bDummy;                                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_94F6[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_Discover_Component_C*               CallFunc_GetDiscoverComponent_DiscoverComponent;   // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ENpcComponent_C_ShowUnDiscoverIcon) == 0x000008, "Wrong alignment on BP_ENpcComponent_C_ShowUnDiscoverIcon");
static_assert(sizeof(BP_ENpcComponent_C_ShowUnDiscoverIcon) == 0x000018, "Wrong size on BP_ENpcComponent_C_ShowUnDiscoverIcon");
static_assert(offsetof(BP_ENpcComponent_C_ShowUnDiscoverIcon, IsForceDispIcon) == 0x000000, "Member 'BP_ENpcComponent_C_ShowUnDiscoverIcon::IsForceDispIcon' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_ShowUnDiscoverIcon, bDummy) == 0x000001, "Member 'BP_ENpcComponent_C_ShowUnDiscoverIcon::bDummy' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_ShowUnDiscoverIcon, CallFunc_GetDiscoverComponent_DiscoverComponent) == 0x000008, "Member 'BP_ENpcComponent_C_ShowUnDiscoverIcon::CallFunc_GetDiscoverComponent_DiscoverComponent' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_ShowUnDiscoverIcon, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_ENpcComponent_C_ShowUnDiscoverIcon::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.ShowDiscoverIcon
// 0x0018 (0x0018 - 0x0000)
struct BP_ENpcComponent_C_ShowDiscoverIcon final
{
public:
	bool                                          bDummy;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_94F7[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_Discover_Component_C*               CallFunc_GetDiscoverComponent_DiscoverComponent;   // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ENpcComponent_C_ShowDiscoverIcon) == 0x000008, "Wrong alignment on BP_ENpcComponent_C_ShowDiscoverIcon");
static_assert(sizeof(BP_ENpcComponent_C_ShowDiscoverIcon) == 0x000018, "Wrong size on BP_ENpcComponent_C_ShowDiscoverIcon");
static_assert(offsetof(BP_ENpcComponent_C_ShowDiscoverIcon, bDummy) == 0x000000, "Member 'BP_ENpcComponent_C_ShowDiscoverIcon::bDummy' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_ShowDiscoverIcon, CallFunc_GetDiscoverComponent_DiscoverComponent) == 0x000008, "Member 'BP_ENpcComponent_C_ShowDiscoverIcon::CallFunc_GetDiscoverComponent_DiscoverComponent' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_ShowDiscoverIcon, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_ENpcComponent_C_ShowDiscoverIcon::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.UpdateDiscoverIcon
// 0x0038 (0x0038 - 0x0000)
struct BP_ENpcComponent_C_UpdateDiscoverIcon final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDummy;                                            // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ShowDiscoverIcon_bDummy;                  // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_94F8[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerAIInterface_C> CallFunc_GetBattleTargetActor_self_CastInput;      // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_GetBattleTargetActor_TargetActor;         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_94F9[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_Discover_Component_C*               CallFunc_GetDiscoverComponent_DiscoverComponent;   // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsOver_ReturnValue;                       // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnable_ReturnValue;                     // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ENpcComponent_C_UpdateDiscoverIcon) == 0x000008, "Wrong alignment on BP_ENpcComponent_C_UpdateDiscoverIcon");
static_assert(sizeof(BP_ENpcComponent_C_UpdateDiscoverIcon) == 0x000038, "Wrong size on BP_ENpcComponent_C_UpdateDiscoverIcon");
static_assert(offsetof(BP_ENpcComponent_C_UpdateDiscoverIcon, DeltaSeconds) == 0x000000, "Member 'BP_ENpcComponent_C_UpdateDiscoverIcon::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateDiscoverIcon, bDummy) == 0x000004, "Member 'BP_ENpcComponent_C_UpdateDiscoverIcon::bDummy' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateDiscoverIcon, CallFunc_ShowDiscoverIcon_bDummy) == 0x000005, "Member 'BP_ENpcComponent_C_UpdateDiscoverIcon::CallFunc_ShowDiscoverIcon_bDummy' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateDiscoverIcon, CallFunc_GetBattleTargetActor_self_CastInput) == 0x000008, "Member 'BP_ENpcComponent_C_UpdateDiscoverIcon::CallFunc_GetBattleTargetActor_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateDiscoverIcon, CallFunc_GetBattleTargetActor_TargetActor) == 0x000018, "Member 'BP_ENpcComponent_C_UpdateDiscoverIcon::CallFunc_GetBattleTargetActor_TargetActor' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateDiscoverIcon, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_ENpcComponent_C_UpdateDiscoverIcon::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateDiscoverIcon, CallFunc_GetDiscoverComponent_DiscoverComponent) == 0x000028, "Member 'BP_ENpcComponent_C_UpdateDiscoverIcon::CallFunc_GetDiscoverComponent_DiscoverComponent' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateDiscoverIcon, CallFunc_IsValid_ReturnValue_1) == 0x000030, "Member 'BP_ENpcComponent_C_UpdateDiscoverIcon::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateDiscoverIcon, CallFunc_IsOver_ReturnValue) == 0x000031, "Member 'BP_ENpcComponent_C_UpdateDiscoverIcon::CallFunc_IsOver_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateDiscoverIcon, CallFunc_IsEnable_ReturnValue) == 0x000032, "Member 'BP_ENpcComponent_C_UpdateDiscoverIcon::CallFunc_IsEnable_ReturnValue' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.GetDiscoverComponent
// 0x00C8 (0x00C8 - 0x0000)
struct BP_ENpcComponent_C_GetDiscoverComponent final
{
public:
	class UBP_Discover_Component_C*               DiscoverComponent;                                 // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_94FA[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0020(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0038(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0078(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<class UActorComponent*>                CallFunc_K2_GetComponentsByClass_ReturnValue;      // 0x0088(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0098(0x0018)()
	class UActorComponent*                        CallFunc_Array_Get_Item;                           // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_Discover_Component_C*               K2Node_DynamicCast_AsBP_Discover_Component;        // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ENpcComponent_C_GetDiscoverComponent) == 0x000008, "Wrong alignment on BP_ENpcComponent_C_GetDiscoverComponent");
static_assert(sizeof(BP_ENpcComponent_C_GetDiscoverComponent) == 0x0000C8, "Wrong size on BP_ENpcComponent_C_GetDiscoverComponent");
static_assert(offsetof(BP_ENpcComponent_C_GetDiscoverComponent, DiscoverComponent) == 0x000000, "Member 'BP_ENpcComponent_C_GetDiscoverComponent::DiscoverComponent' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_GetDiscoverComponent, CallFunc_GetDisplayName_ReturnValue) == 0x000008, "Member 'BP_ENpcComponent_C_GetDiscoverComponent::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_GetDiscoverComponent, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_ENpcComponent_C_GetDiscoverComponent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_GetDiscoverComponent, CallFunc_Conv_StringToText_ReturnValue) == 0x000020, "Member 'BP_ENpcComponent_C_GetDiscoverComponent::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_GetDiscoverComponent, K2Node_MakeStruct_FormatArgumentData) == 0x000038, "Member 'BP_ENpcComponent_C_GetDiscoverComponent::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_GetDiscoverComponent, K2Node_MakeArray_Array) == 0x000078, "Member 'BP_ENpcComponent_C_GetDiscoverComponent::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_GetDiscoverComponent, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x000088, "Member 'BP_ENpcComponent_C_GetDiscoverComponent::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_GetDiscoverComponent, CallFunc_Format_ReturnValue) == 0x000098, "Member 'BP_ENpcComponent_C_GetDiscoverComponent::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_GetDiscoverComponent, CallFunc_Array_Get_Item) == 0x0000B0, "Member 'BP_ENpcComponent_C_GetDiscoverComponent::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_GetDiscoverComponent, K2Node_DynamicCast_AsBP_Discover_Component) == 0x0000B8, "Member 'BP_ENpcComponent_C_GetDiscoverComponent::K2Node_DynamicCast_AsBP_Discover_Component' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_GetDiscoverComponent, K2Node_DynamicCast_bSuccess) == 0x0000C0, "Member 'BP_ENpcComponent_C_GetDiscoverComponent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_GetDiscoverComponent, CallFunc_IsValid_ReturnValue_1) == 0x0000C1, "Member 'BP_ENpcComponent_C_GetDiscoverComponent::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.Exec Drive
// 0x0058 (0x0058 - 0x0000)
struct BP_ENpcComponent_C_Exec_Drive final
{
public:
	bool                                          bForceExec;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bDummy;                                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_94FB[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattlePlayer_C*                      LOwner;                                            // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_ENpcInterface_C>  CallFunc_IsUniqueCondition_Drive_self_CastInput;   // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsUniqueCondition_Drive_bOk;              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_94FC[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattlePlayer_C*                      K2Node_DynamicCast_AsRSBattle_Player;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_94FD[0x5];                                     // 0x003B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerInterface_C> K2Node_DynamicCast_AsBPI_Player_Interface;         // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OnStartEnpcDrive_Dummy;                   // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ENpcComponent_C_Exec_Drive) == 0x000008, "Wrong alignment on BP_ENpcComponent_C_Exec_Drive");
static_assert(sizeof(BP_ENpcComponent_C_Exec_Drive) == 0x000058, "Wrong size on BP_ENpcComponent_C_Exec_Drive");
static_assert(offsetof(BP_ENpcComponent_C_Exec_Drive, bForceExec) == 0x000000, "Member 'BP_ENpcComponent_C_Exec_Drive::bForceExec' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Exec_Drive, bDummy) == 0x000001, "Member 'BP_ENpcComponent_C_Exec_Drive::bDummy' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Exec_Drive, LOwner) == 0x000008, "Member 'BP_ENpcComponent_C_Exec_Drive::LOwner' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Exec_Drive, CallFunc_IsUniqueCondition_Drive_self_CastInput) == 0x000010, "Member 'BP_ENpcComponent_C_Exec_Drive::CallFunc_IsUniqueCondition_Drive_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Exec_Drive, CallFunc_IsUniqueCondition_Drive_bOk) == 0x000020, "Member 'BP_ENpcComponent_C_Exec_Drive::CallFunc_IsUniqueCondition_Drive_bOk' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Exec_Drive, CallFunc_GetOwner_ReturnValue) == 0x000028, "Member 'BP_ENpcComponent_C_Exec_Drive::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Exec_Drive, K2Node_DynamicCast_AsRSBattle_Player) == 0x000030, "Member 'BP_ENpcComponent_C_Exec_Drive::K2Node_DynamicCast_AsRSBattle_Player' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Exec_Drive, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_ENpcComponent_C_Exec_Drive::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Exec_Drive, CallFunc_IsValid_ReturnValue) == 0x000039, "Member 'BP_ENpcComponent_C_Exec_Drive::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Exec_Drive, CallFunc_BooleanAND_ReturnValue) == 0x00003A, "Member 'BP_ENpcComponent_C_Exec_Drive::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Exec_Drive, K2Node_DynamicCast_AsBPI_Player_Interface) == 0x000040, "Member 'BP_ENpcComponent_C_Exec_Drive::K2Node_DynamicCast_AsBPI_Player_Interface' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Exec_Drive, K2Node_DynamicCast_bSuccess_1) == 0x000050, "Member 'BP_ENpcComponent_C_Exec_Drive::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Exec_Drive, CallFunc_OnStartEnpcDrive_Dummy) == 0x000051, "Member 'BP_ENpcComponent_C_Exec_Drive::CallFunc_OnStartEnpcDrive_Dummy' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.EnableTriggerSequencerReception
// 0x0001 (0x0001 - 0x0000)
struct BP_ENpcComponent_C_EnableTriggerSequencerReception final
{
public:
	bool                                          Enable;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ENpcComponent_C_EnableTriggerSequencerReception) == 0x000001, "Wrong alignment on BP_ENpcComponent_C_EnableTriggerSequencerReception");
static_assert(sizeof(BP_ENpcComponent_C_EnableTriggerSequencerReception) == 0x000001, "Wrong size on BP_ENpcComponent_C_EnableTriggerSequencerReception");
static_assert(offsetof(BP_ENpcComponent_C_EnableTriggerSequencerReception, Enable) == 0x000000, "Member 'BP_ENpcComponent_C_EnableTriggerSequencerReception::Enable' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.IsEnableTriggerSequencerReception
// 0x0001 (0x0001 - 0x0000)
struct BP_ENpcComponent_C_IsEnableTriggerSequencerReception final
{
public:
	bool                                          Enable;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ENpcComponent_C_IsEnableTriggerSequencerReception) == 0x000001, "Wrong alignment on BP_ENpcComponent_C_IsEnableTriggerSequencerReception");
static_assert(sizeof(BP_ENpcComponent_C_IsEnableTriggerSequencerReception) == 0x000001, "Wrong size on BP_ENpcComponent_C_IsEnableTriggerSequencerReception");
static_assert(offsetof(BP_ENpcComponent_C_IsEnableTriggerSequencerReception, Enable) == 0x000000, "Member 'BP_ENpcComponent_C_IsEnableTriggerSequencerReception::Enable' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.SetENPCOutline
// 0x0058 (0x0058 - 0x0000)
struct BP_ENpcComponent_C_SetENPCOutline final
{
public:
	bool                                          Enable;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_94FE[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshComponent*                         MeshComp;                                          // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_94FF[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9500[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_ENpcInterface_C>  K2Node_DynamicCast_AsBPI_ENpc_Interface;           // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9501[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMeshComponent*>                 CallFunc_GetEnpcOutlineAppendMesh_MeshComps;       // 0x0040(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ENpcComponent_C_SetENPCOutline) == 0x000008, "Wrong alignment on BP_ENpcComponent_C_SetENPCOutline");
static_assert(sizeof(BP_ENpcComponent_C_SetENPCOutline) == 0x000058, "Wrong size on BP_ENpcComponent_C_SetENPCOutline");
static_assert(offsetof(BP_ENpcComponent_C_SetENPCOutline, Enable) == 0x000000, "Member 'BP_ENpcComponent_C_SetENPCOutline::Enable' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_SetENPCOutline, MeshComp) == 0x000008, "Member 'BP_ENpcComponent_C_SetENPCOutline::MeshComp' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_SetENPCOutline, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_ENpcComponent_C_SetENPCOutline::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_SetENPCOutline, Temp_int_Loop_Num_Variable) == 0x000014, "Member 'BP_ENpcComponent_C_SetENPCOutline::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_SetENPCOutline, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'BP_ENpcComponent_C_SetENPCOutline::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_SetENPCOutline, CallFunc_Less_IntInt_ReturnValue) == 0x00001C, "Member 'BP_ENpcComponent_C_SetENPCOutline::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_SetENPCOutline, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BP_ENpcComponent_C_SetENPCOutline::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_SetENPCOutline, K2Node_DynamicCast_AsBPI_ENpc_Interface) == 0x000028, "Member 'BP_ENpcComponent_C_SetENPCOutline::K2Node_DynamicCast_AsBPI_ENpc_Interface' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_SetENPCOutline, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_ENpcComponent_C_SetENPCOutline::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_SetENPCOutline, CallFunc_GetEnpcOutlineAppendMesh_MeshComps) == 0x000040, "Member 'BP_ENpcComponent_C_SetENPCOutline::CallFunc_GetEnpcOutlineAppendMesh_MeshComps' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_SetENPCOutline, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'BP_ENpcComponent_C_SetENPCOutline::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_SetENPCOutline, CallFunc_IsValid_ReturnValue) == 0x000054, "Member 'BP_ENpcComponent_C_SetENPCOutline::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_SetENPCOutline, CallFunc_IsValid_ReturnValue_1) == 0x000055, "Member 'BP_ENpcComponent_C_SetENPCOutline::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.SetENPCOutlineColor
// 0x0018 (0x0018 - 0x0000)
struct BP_ENpcComponent_C_SetENPCOutlineColor final
{
public:
	bool                                          Enable;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9502[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PostProcessManager_C*               CallFunc_GetPostProcessManager_Manager;            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue;             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ENpcComponent_C_SetENPCOutlineColor) == 0x000008, "Wrong alignment on BP_ENpcComponent_C_SetENPCOutlineColor");
static_assert(sizeof(BP_ENpcComponent_C_SetENPCOutlineColor) == 0x000018, "Wrong size on BP_ENpcComponent_C_SetENPCOutlineColor");
static_assert(offsetof(BP_ENpcComponent_C_SetENPCOutlineColor, Enable) == 0x000000, "Member 'BP_ENpcComponent_C_SetENPCOutlineColor::Enable' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_SetENPCOutlineColor, CallFunc_GetPostProcessManager_Manager) == 0x000008, "Member 'BP_ENpcComponent_C_SetENPCOutlineColor::CallFunc_GetPostProcessManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_SetENPCOutlineColor, CallFunc_Conv_BoolToFloat_ReturnValue) == 0x000010, "Member 'BP_ENpcComponent_C_SetENPCOutlineColor::CallFunc_Conv_BoolToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_SetENPCOutlineColor, CallFunc_IsValid_ReturnValue) == 0x000014, "Member 'BP_ENpcComponent_C_SetENPCOutlineColor::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.IsActiveEnpcSASAcceleTelepo
// 0x0004 (0x0004 - 0x0000)
struct BP_ENpcComponent_C_IsActiveEnpcSASAcceleTelepo final
{
public:
	bool                                          Param_IsActive;                                    // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          LIsActive;                                         // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActiveEnpcSAS_bActive;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActiveEnpcSAS_bActive_1;                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ENpcComponent_C_IsActiveEnpcSASAcceleTelepo) == 0x000001, "Wrong alignment on BP_ENpcComponent_C_IsActiveEnpcSASAcceleTelepo");
static_assert(sizeof(BP_ENpcComponent_C_IsActiveEnpcSASAcceleTelepo) == 0x000004, "Wrong size on BP_ENpcComponent_C_IsActiveEnpcSASAcceleTelepo");
static_assert(offsetof(BP_ENpcComponent_C_IsActiveEnpcSASAcceleTelepo, Param_IsActive) == 0x000000, "Member 'BP_ENpcComponent_C_IsActiveEnpcSASAcceleTelepo::Param_IsActive' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsActiveEnpcSASAcceleTelepo, LIsActive) == 0x000001, "Member 'BP_ENpcComponent_C_IsActiveEnpcSASAcceleTelepo::LIsActive' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsActiveEnpcSASAcceleTelepo, CallFunc_IsActiveEnpcSAS_bActive) == 0x000002, "Member 'BP_ENpcComponent_C_IsActiveEnpcSASAcceleTelepo::CallFunc_IsActiveEnpcSAS_bActive' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsActiveEnpcSASAcceleTelepo, CallFunc_IsActiveEnpcSAS_bActive_1) == 0x000003, "Member 'BP_ENpcComponent_C_IsActiveEnpcSASAcceleTelepo::CallFunc_IsActiveEnpcSAS_bActive_1' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.GetDyingHpRate
// 0x0004 (0x0004 - 0x0000)
struct BP_ENpcComponent_C_GetDyingHpRate final
{
public:
	float                                         DyingHpRate;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ENpcComponent_C_GetDyingHpRate) == 0x000004, "Wrong alignment on BP_ENpcComponent_C_GetDyingHpRate");
static_assert(sizeof(BP_ENpcComponent_C_GetDyingHpRate) == 0x000004, "Wrong size on BP_ENpcComponent_C_GetDyingHpRate");
static_assert(offsetof(BP_ENpcComponent_C_GetDyingHpRate, DyingHpRate) == 0x000000, "Member 'BP_ENpcComponent_C_GetDyingHpRate::DyingHpRate' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.GetENPCBrainFieldTime
// 0x0010 (0x0010 - 0x0000)
struct BP_ENpcComponent_C_GetENPCBrainFieldTime final
{
public:
	float                                         Param_ENPCBrainFieldTime;                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9503[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattlePlayer_C*                      LOwner;                                            // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ENpcComponent_C_GetENPCBrainFieldTime) == 0x000008, "Wrong alignment on BP_ENpcComponent_C_GetENPCBrainFieldTime");
static_assert(sizeof(BP_ENpcComponent_C_GetENPCBrainFieldTime) == 0x000010, "Wrong size on BP_ENpcComponent_C_GetENPCBrainFieldTime");
static_assert(offsetof(BP_ENpcComponent_C_GetENPCBrainFieldTime, Param_ENPCBrainFieldTime) == 0x000000, "Member 'BP_ENpcComponent_C_GetENPCBrainFieldTime::Param_ENPCBrainFieldTime' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_GetENPCBrainFieldTime, LOwner) == 0x000008, "Member 'BP_ENpcComponent_C_GetENPCBrainFieldTime::LOwner' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.SetHitTrigger_CallFromCPP
// 0x0002 (0x0002 - 0x0000)
struct BP_ENpcComponent_C_SetHitTrigger_CallFromCPP final
{
public:
	bool                                          bIsHitTrigger;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ENpcComponent_C_SetHitTrigger_CallFromCPP) == 0x000001, "Wrong alignment on BP_ENpcComponent_C_SetHitTrigger_CallFromCPP");
static_assert(sizeof(BP_ENpcComponent_C_SetHitTrigger_CallFromCPP) == 0x000002, "Wrong size on BP_ENpcComponent_C_SetHitTrigger_CallFromCPP");
static_assert(offsetof(BP_ENpcComponent_C_SetHitTrigger_CallFromCPP, bIsHitTrigger) == 0x000000, "Member 'BP_ENpcComponent_C_SetHitTrigger_CallFromCPP::bIsHitTrigger' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_SetHitTrigger_CallFromCPP, ReturnValue) == 0x000001, "Member 'BP_ENpcComponent_C_SetHitTrigger_CallFromCPP::ReturnValue' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.StartReactionChance_CallFromCPP
// 0x0001 (0x0001 - 0x0000)
struct BP_ENpcComponent_C_StartReactionChance_CallFromCPP final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ENpcComponent_C_StartReactionChance_CallFromCPP) == 0x000001, "Wrong alignment on BP_ENpcComponent_C_StartReactionChance_CallFromCPP");
static_assert(sizeof(BP_ENpcComponent_C_StartReactionChance_CallFromCPP) == 0x000001, "Wrong size on BP_ENpcComponent_C_StartReactionChance_CallFromCPP");
static_assert(offsetof(BP_ENpcComponent_C_StartReactionChance_CallFromCPP, ReturnValue) == 0x000000, "Member 'BP_ENpcComponent_C_StartReactionChance_CallFromCPP::ReturnValue' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.IsStartBattleTimer
// 0x0003 (0x0003 - 0x0000)
struct BP_ENpcComponent_C_IsStartBattleTimer final
{
public:
	bool                                          IsEffective;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ENpcComponent_C_IsStartBattleTimer) == 0x000001, "Wrong alignment on BP_ENpcComponent_C_IsStartBattleTimer");
static_assert(sizeof(BP_ENpcComponent_C_IsStartBattleTimer) == 0x000003, "Wrong size on BP_ENpcComponent_C_IsStartBattleTimer");
static_assert(offsetof(BP_ENpcComponent_C_IsStartBattleTimer, IsEffective) == 0x000000, "Member 'BP_ENpcComponent_C_IsStartBattleTimer::IsEffective' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsStartBattleTimer, CallFunc_Less_FloatFloat_ReturnValue) == 0x000001, "Member 'BP_ENpcComponent_C_IsStartBattleTimer::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsStartBattleTimer, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000002, "Member 'BP_ENpcComponent_C_IsStartBattleTimer::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.UpdateStartBattleTimer
// 0x0010 (0x0010 - 0x0000)
struct BP_ENpcComponent_C_UpdateStartBattleTimer final
{
public:
	float                                         DeltaSec;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayerStatus_Result;                    // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayerStatus_Result_1;                  // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9504[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ENpcComponent_C_UpdateStartBattleTimer) == 0x000004, "Wrong alignment on BP_ENpcComponent_C_UpdateStartBattleTimer");
static_assert(sizeof(BP_ENpcComponent_C_UpdateStartBattleTimer) == 0x000010, "Wrong size on BP_ENpcComponent_C_UpdateStartBattleTimer");
static_assert(offsetof(BP_ENpcComponent_C_UpdateStartBattleTimer, DeltaSec) == 0x000000, "Member 'BP_ENpcComponent_C_UpdateStartBattleTimer::DeltaSec' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateStartBattleTimer, CallFunc_IsPlayerStatus_Result) == 0x000004, "Member 'BP_ENpcComponent_C_UpdateStartBattleTimer::CallFunc_IsPlayerStatus_Result' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateStartBattleTimer, CallFunc_IsPlayerStatus_Result_1) == 0x000005, "Member 'BP_ENpcComponent_C_UpdateStartBattleTimer::CallFunc_IsPlayerStatus_Result_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateStartBattleTimer, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x000006, "Member 'BP_ENpcComponent_C_UpdateStartBattleTimer::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateStartBattleTimer, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000007, "Member 'BP_ENpcComponent_C_UpdateStartBattleTimer::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateStartBattleTimer, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000008, "Member 'BP_ENpcComponent_C_UpdateStartBattleTimer::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateStartBattleTimer, CallFunc_Add_FloatFloat_ReturnValue) == 0x00000C, "Member 'BP_ENpcComponent_C_UpdateStartBattleTimer::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.FinishStartBattleTimer
// 0x0001 (0x0001 - 0x0000)
struct BP_ENpcComponent_C_FinishStartBattleTimer final
{
public:
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ENpcComponent_C_FinishStartBattleTimer) == 0x000001, "Wrong alignment on BP_ENpcComponent_C_FinishStartBattleTimer");
static_assert(sizeof(BP_ENpcComponent_C_FinishStartBattleTimer) == 0x000001, "Wrong size on BP_ENpcComponent_C_FinishStartBattleTimer");
static_assert(offsetof(BP_ENpcComponent_C_FinishStartBattleTimer, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x000000, "Member 'BP_ENpcComponent_C_FinishStartBattleTimer::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.CancelDrive
// 0x0001 (0x0001 - 0x0000)
struct BP_ENpcComponent_C_CancelDrive final
{
public:
	bool                                          bDummy;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ENpcComponent_C_CancelDrive) == 0x000001, "Wrong alignment on BP_ENpcComponent_C_CancelDrive");
static_assert(sizeof(BP_ENpcComponent_C_CancelDrive) == 0x000001, "Wrong size on BP_ENpcComponent_C_CancelDrive");
static_assert(offsetof(BP_ENpcComponent_C_CancelDrive, bDummy) == 0x000000, "Member 'BP_ENpcComponent_C_CancelDrive::bDummy' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.SetReadyDrive
// 0x0002 (0x0002 - 0x0000)
struct BP_ENpcComponent_C_SetReadyDrive final
{
public:
	bool                                          bReady;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bDummy;                                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ENpcComponent_C_SetReadyDrive) == 0x000001, "Wrong alignment on BP_ENpcComponent_C_SetReadyDrive");
static_assert(sizeof(BP_ENpcComponent_C_SetReadyDrive) == 0x000002, "Wrong size on BP_ENpcComponent_C_SetReadyDrive");
static_assert(offsetof(BP_ENpcComponent_C_SetReadyDrive, bReady) == 0x000000, "Member 'BP_ENpcComponent_C_SetReadyDrive::bReady' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_SetReadyDrive, bDummy) == 0x000001, "Member 'BP_ENpcComponent_C_SetReadyDrive::bDummy' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.UpdateTriggerHit
// 0x0008 (0x0008 - 0x0000)
struct BP_ENpcComponent_C_UpdateTriggerHit final
{
public:
	float                                         DeltaSec;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOver_ReturnValue;                       // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnable_ReturnValue;                     // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ENpcComponent_C_UpdateTriggerHit) == 0x000004, "Wrong alignment on BP_ENpcComponent_C_UpdateTriggerHit");
static_assert(sizeof(BP_ENpcComponent_C_UpdateTriggerHit) == 0x000008, "Wrong size on BP_ENpcComponent_C_UpdateTriggerHit");
static_assert(offsetof(BP_ENpcComponent_C_UpdateTriggerHit, DeltaSec) == 0x000000, "Member 'BP_ENpcComponent_C_UpdateTriggerHit::DeltaSec' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateTriggerHit, CallFunc_IsOver_ReturnValue) == 0x000004, "Member 'BP_ENpcComponent_C_UpdateTriggerHit::CallFunc_IsOver_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateTriggerHit, CallFunc_IsEnable_ReturnValue) == 0x000005, "Member 'BP_ENpcComponent_C_UpdateTriggerHit::CallFunc_IsEnable_ReturnValue' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.EnableUpdateTriggerHit
// 0x0040 (0x0040 - 0x0000)
struct BP_ENpcComponent_C_EnableUpdateTriggerHit final
{
public:
	bool                                          bEnable;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9505[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_PlayerInterface_C> K2Node_DynamicCast_AsBPI_Player_Interface;         // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9506[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerInterface_C> K2Node_DynamicCast_AsBPI_Player_Interface_1;       // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetPlayerInputRestriction_bDummy;         // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetPlayerInputRestriction_bDummy_1;       // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ENpcComponent_C_EnableUpdateTriggerHit) == 0x000008, "Wrong alignment on BP_ENpcComponent_C_EnableUpdateTriggerHit");
static_assert(sizeof(BP_ENpcComponent_C_EnableUpdateTriggerHit) == 0x000040, "Wrong size on BP_ENpcComponent_C_EnableUpdateTriggerHit");
static_assert(offsetof(BP_ENpcComponent_C_EnableUpdateTriggerHit, bEnable) == 0x000000, "Member 'BP_ENpcComponent_C_EnableUpdateTriggerHit::bEnable' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_EnableUpdateTriggerHit, CallFunc_GetPlayerPawn_ReturnValue) == 0x000008, "Member 'BP_ENpcComponent_C_EnableUpdateTriggerHit::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_EnableUpdateTriggerHit, K2Node_DynamicCast_AsBPI_Player_Interface) == 0x000010, "Member 'BP_ENpcComponent_C_EnableUpdateTriggerHit::K2Node_DynamicCast_AsBPI_Player_Interface' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_EnableUpdateTriggerHit, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_ENpcComponent_C_EnableUpdateTriggerHit::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_EnableUpdateTriggerHit, K2Node_DynamicCast_AsBPI_Player_Interface_1) == 0x000028, "Member 'BP_ENpcComponent_C_EnableUpdateTriggerHit::K2Node_DynamicCast_AsBPI_Player_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_EnableUpdateTriggerHit, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'BP_ENpcComponent_C_EnableUpdateTriggerHit::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_EnableUpdateTriggerHit, CallFunc_SetPlayerInputRestriction_bDummy) == 0x000039, "Member 'BP_ENpcComponent_C_EnableUpdateTriggerHit::CallFunc_SetPlayerInputRestriction_bDummy' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_EnableUpdateTriggerHit, CallFunc_SetPlayerInputRestriction_bDummy_1) == 0x00003A, "Member 'BP_ENpcComponent_C_EnableUpdateTriggerHit::CallFunc_SetPlayerInputRestriction_bDummy_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_EnableUpdateTriggerHit, CallFunc_IsValid_ReturnValue) == 0x00003B, "Member 'BP_ENpcComponent_C_EnableUpdateTriggerHit::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.IsDriveAttacked
// 0x0020 (0x0020 - 0x0000)
struct BP_ENpcComponent_C_IsDriveAttacked final
{
public:
	bool                                          IsAttacked;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9507[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_ENpcInterface_C>  CallFunc_Em8010_IsMetamophosis_ChangeChara_self_CastInput; // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Em8010_IsMetamophosis_ChangeChara_bIsMetamorphosis; // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ENpcComponent_C_IsDriveAttacked) == 0x000008, "Wrong alignment on BP_ENpcComponent_C_IsDriveAttacked");
static_assert(sizeof(BP_ENpcComponent_C_IsDriveAttacked) == 0x000020, "Wrong size on BP_ENpcComponent_C_IsDriveAttacked");
static_assert(offsetof(BP_ENpcComponent_C_IsDriveAttacked, IsAttacked) == 0x000000, "Member 'BP_ENpcComponent_C_IsDriveAttacked::IsAttacked' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsDriveAttacked, CallFunc_Em8010_IsMetamophosis_ChangeChara_self_CastInput) == 0x000008, "Member 'BP_ENpcComponent_C_IsDriveAttacked::CallFunc_Em8010_IsMetamophosis_ChangeChara_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsDriveAttacked, CallFunc_Em8010_IsMetamophosis_ChangeChara_bIsMetamorphosis) == 0x000018, "Member 'BP_ENpcComponent_C_IsDriveAttacked::CallFunc_Em8010_IsMetamophosis_ChangeChara_bIsMetamorphosis' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.IsReadyDriveWithCancel
// 0x0002 (0x0002 - 0x0000)
struct BP_ENpcComponent_C_IsReadyDriveWithCancel final
{
public:
	bool                                          IsReadyDrive;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ENpcComponent_C_IsReadyDriveWithCancel) == 0x000001, "Wrong alignment on BP_ENpcComponent_C_IsReadyDriveWithCancel");
static_assert(sizeof(BP_ENpcComponent_C_IsReadyDriveWithCancel) == 0x000002, "Wrong size on BP_ENpcComponent_C_IsReadyDriveWithCancel");
static_assert(offsetof(BP_ENpcComponent_C_IsReadyDriveWithCancel, IsReadyDrive) == 0x000000, "Member 'BP_ENpcComponent_C_IsReadyDriveWithCancel::IsReadyDrive' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsReadyDriveWithCancel, CallFunc_BooleanAND_ReturnValue) == 0x000001, "Member 'BP_ENpcComponent_C_IsReadyDriveWithCancel::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.StartDriveDirect
// 0x0028 (0x0028 - 0x0000)
struct BP_ENpcComponent_C_StartDriveDirect final
{
public:
	class ARSBattlePlayer_C*                      LOwner;                                            // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9508[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattlePlayer_C*                      K2Node_DynamicCast_AsRSBattle_Player;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ENpcComponent_C_StartDriveDirect) == 0x000008, "Wrong alignment on BP_ENpcComponent_C_StartDriveDirect");
static_assert(sizeof(BP_ENpcComponent_C_StartDriveDirect) == 0x000028, "Wrong size on BP_ENpcComponent_C_StartDriveDirect");
static_assert(offsetof(BP_ENpcComponent_C_StartDriveDirect, LOwner) == 0x000000, "Member 'BP_ENpcComponent_C_StartDriveDirect::LOwner' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartDriveDirect, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_ENpcComponent_C_StartDriveDirect::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartDriveDirect, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'BP_ENpcComponent_C_StartDriveDirect::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartDriveDirect, K2Node_DynamicCast_AsRSBattle_Player) == 0x000018, "Member 'BP_ENpcComponent_C_StartDriveDirect::K2Node_DynamicCast_AsRSBattle_Player' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartDriveDirect, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_ENpcComponent_C_StartDriveDirect::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartDriveDirect, CallFunc_IsValid_ReturnValue_1) == 0x000021, "Member 'BP_ENpcComponent_C_StartDriveDirect::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.IsForceWait
// 0x0001 (0x0001 - 0x0000)
struct BP_ENpcComponent_C_IsForceWait final
{
public:
	bool                                          Param_bIsForceWait;                                // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ENpcComponent_C_IsForceWait) == 0x000001, "Wrong alignment on BP_ENpcComponent_C_IsForceWait");
static_assert(sizeof(BP_ENpcComponent_C_IsForceWait) == 0x000001, "Wrong size on BP_ENpcComponent_C_IsForceWait");
static_assert(offsetof(BP_ENpcComponent_C_IsForceWait, Param_bIsForceWait) == 0x000000, "Member 'BP_ENpcComponent_C_IsForceWait::Param_bIsForceWait' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.GetEnpcPsychicObjectThrowParameter
// 0x0024 (0x0024 - 0x0000)
struct BP_ENpcComponent_C_GetEnpcPsychicObjectThrowParameter final
{
public:
	bool                                          IsApply;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9509[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Param_DirectshotThrowSpeed;                        // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Param_DirectshotHomingSpeed;                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Param_ComboThrowSpeed;                             // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Param_ComboHomingSpeed;                            // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Param_BrainfieldThrowSpeed;                        // 0x0014(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Param_BrainfieldHomingSpeed;                       // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Param_InterceptThrowSpeed;                         // 0x001C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Param_InterceptHomingSpeed;                        // 0x0020(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ENpcComponent_C_GetEnpcPsychicObjectThrowParameter) == 0x000004, "Wrong alignment on BP_ENpcComponent_C_GetEnpcPsychicObjectThrowParameter");
static_assert(sizeof(BP_ENpcComponent_C_GetEnpcPsychicObjectThrowParameter) == 0x000024, "Wrong size on BP_ENpcComponent_C_GetEnpcPsychicObjectThrowParameter");
static_assert(offsetof(BP_ENpcComponent_C_GetEnpcPsychicObjectThrowParameter, IsApply) == 0x000000, "Member 'BP_ENpcComponent_C_GetEnpcPsychicObjectThrowParameter::IsApply' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_GetEnpcPsychicObjectThrowParameter, Param_DirectshotThrowSpeed) == 0x000004, "Member 'BP_ENpcComponent_C_GetEnpcPsychicObjectThrowParameter::Param_DirectshotThrowSpeed' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_GetEnpcPsychicObjectThrowParameter, Param_DirectshotHomingSpeed) == 0x000008, "Member 'BP_ENpcComponent_C_GetEnpcPsychicObjectThrowParameter::Param_DirectshotHomingSpeed' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_GetEnpcPsychicObjectThrowParameter, Param_ComboThrowSpeed) == 0x00000C, "Member 'BP_ENpcComponent_C_GetEnpcPsychicObjectThrowParameter::Param_ComboThrowSpeed' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_GetEnpcPsychicObjectThrowParameter, Param_ComboHomingSpeed) == 0x000010, "Member 'BP_ENpcComponent_C_GetEnpcPsychicObjectThrowParameter::Param_ComboHomingSpeed' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_GetEnpcPsychicObjectThrowParameter, Param_BrainfieldThrowSpeed) == 0x000014, "Member 'BP_ENpcComponent_C_GetEnpcPsychicObjectThrowParameter::Param_BrainfieldThrowSpeed' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_GetEnpcPsychicObjectThrowParameter, Param_BrainfieldHomingSpeed) == 0x000018, "Member 'BP_ENpcComponent_C_GetEnpcPsychicObjectThrowParameter::Param_BrainfieldHomingSpeed' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_GetEnpcPsychicObjectThrowParameter, Param_InterceptThrowSpeed) == 0x00001C, "Member 'BP_ENpcComponent_C_GetEnpcPsychicObjectThrowParameter::Param_InterceptThrowSpeed' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_GetEnpcPsychicObjectThrowParameter, Param_InterceptHomingSpeed) == 0x000020, "Member 'BP_ENpcComponent_C_GetEnpcPsychicObjectThrowParameter::Param_InterceptHomingSpeed' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.IsResetBattleThink
// 0x0001 (0x0001 - 0x0000)
struct BP_ENpcComponent_C_IsResetBattleThink final
{
public:
	bool                                          IsReset;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ENpcComponent_C_IsResetBattleThink) == 0x000001, "Wrong alignment on BP_ENpcComponent_C_IsResetBattleThink");
static_assert(sizeof(BP_ENpcComponent_C_IsResetBattleThink) == 0x000001, "Wrong size on BP_ENpcComponent_C_IsResetBattleThink");
static_assert(offsetof(BP_ENpcComponent_C_IsResetBattleThink, IsReset) == 0x000000, "Member 'BP_ENpcComponent_C_IsResetBattleThink::IsReset' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.UpdateSpawn
// 0x0008 (0x0008 - 0x0000)
struct BP_ENpcComponent_C_UpdateSpawn final
{
public:
	float                                         DeltaSec;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ENpcComponent_C_UpdateSpawn) == 0x000004, "Wrong alignment on BP_ENpcComponent_C_UpdateSpawn");
static_assert(sizeof(BP_ENpcComponent_C_UpdateSpawn) == 0x000008, "Wrong size on BP_ENpcComponent_C_UpdateSpawn");
static_assert(offsetof(BP_ENpcComponent_C_UpdateSpawn, DeltaSec) == 0x000000, "Member 'BP_ENpcComponent_C_UpdateSpawn::DeltaSec' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateSpawn, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'BP_ENpcComponent_C_UpdateSpawn::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.InitSpawn
// 0x0001 (0x0001 - 0x0000)
struct BP_ENpcComponent_C_InitSpawn final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ENpcComponent_C_InitSpawn) == 0x000001, "Wrong alignment on BP_ENpcComponent_C_InitSpawn");
static_assert(sizeof(BP_ENpcComponent_C_InitSpawn) == 0x000001, "Wrong size on BP_ENpcComponent_C_InitSpawn");
static_assert(offsetof(BP_ENpcComponent_C_InitSpawn, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_ENpcComponent_C_InitSpawn::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.SetDeadBeforeHitResult
// 0x01E0 (0x01E0 - 0x0000)
struct BP_ENpcComponent_C_SetDeadBeforeHitResult final
{
public:
	struct FHCHitResult                           HitResult;                                         // 0x0000(0x01C0)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x01C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_950A[0x2];                                     // 0x01C2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHCSkillExtraType                             CallFunc_Array_Get_Item;                           // 0x01CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x01CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_950B[0x2];                                     // 0x01CE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_950C[0x3];                                     // 0x01D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x01DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsUseGuts_ReturnValue;                    // 0x01DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ENpcComponent_C_SetDeadBeforeHitResult) == 0x000008, "Wrong alignment on BP_ENpcComponent_C_SetDeadBeforeHitResult");
static_assert(sizeof(BP_ENpcComponent_C_SetDeadBeforeHitResult) == 0x0001E0, "Wrong size on BP_ENpcComponent_C_SetDeadBeforeHitResult");
static_assert(offsetof(BP_ENpcComponent_C_SetDeadBeforeHitResult, HitResult) == 0x000000, "Member 'BP_ENpcComponent_C_SetDeadBeforeHitResult::HitResult' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_SetDeadBeforeHitResult, Temp_bool_True_if_break_was_hit_Variable) == 0x0001C0, "Member 'BP_ENpcComponent_C_SetDeadBeforeHitResult::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_SetDeadBeforeHitResult, CallFunc_Not_PreBool_ReturnValue) == 0x0001C1, "Member 'BP_ENpcComponent_C_SetDeadBeforeHitResult::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_SetDeadBeforeHitResult, Temp_int_Array_Index_Variable) == 0x0001C4, "Member 'BP_ENpcComponent_C_SetDeadBeforeHitResult::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_SetDeadBeforeHitResult, CallFunc_Array_Length_ReturnValue) == 0x0001C8, "Member 'BP_ENpcComponent_C_SetDeadBeforeHitResult::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_SetDeadBeforeHitResult, CallFunc_Array_Get_Item) == 0x0001CC, "Member 'BP_ENpcComponent_C_SetDeadBeforeHitResult::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_SetDeadBeforeHitResult, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0001CD, "Member 'BP_ENpcComponent_C_SetDeadBeforeHitResult::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_SetDeadBeforeHitResult, Temp_int_Loop_Counter_Variable) == 0x0001D0, "Member 'BP_ENpcComponent_C_SetDeadBeforeHitResult::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_SetDeadBeforeHitResult, CallFunc_Less_IntInt_ReturnValue) == 0x0001D4, "Member 'BP_ENpcComponent_C_SetDeadBeforeHitResult::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_SetDeadBeforeHitResult, CallFunc_Add_IntInt_ReturnValue) == 0x0001D8, "Member 'BP_ENpcComponent_C_SetDeadBeforeHitResult::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_SetDeadBeforeHitResult, CallFunc_BooleanAND_ReturnValue) == 0x0001DC, "Member 'BP_ENpcComponent_C_SetDeadBeforeHitResult::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_SetDeadBeforeHitResult, CallFunc_IsUseGuts_ReturnValue) == 0x0001DD, "Member 'BP_ENpcComponent_C_SetDeadBeforeHitResult::CallFunc_IsUseGuts_ReturnValue' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.GetDeadBeforeHitResult
// 0x01C0 (0x01C0 - 0x0000)
struct BP_ENpcComponent_C_GetDeadBeforeHitResult final
{
public:
	struct FHCHitResult                           HitResult;                                         // 0x0000(0x01C0)(Parm, OutParm, ContainsInstancedReference)
};
static_assert(alignof(BP_ENpcComponent_C_GetDeadBeforeHitResult) == 0x000008, "Wrong alignment on BP_ENpcComponent_C_GetDeadBeforeHitResult");
static_assert(sizeof(BP_ENpcComponent_C_GetDeadBeforeHitResult) == 0x0001C0, "Wrong size on BP_ENpcComponent_C_GetDeadBeforeHitResult");
static_assert(offsetof(BP_ENpcComponent_C_GetDeadBeforeHitResult, HitResult) == 0x000000, "Member 'BP_ENpcComponent_C_GetDeadBeforeHitResult::HitResult' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.CheckHitUniqueObject
// 0x0208 (0x0208 - 0x0000)
struct BP_ENpcComponent_C_CheckHitUniqueObject final
{
public:
	struct FHCHitResult                           HitResult;                                         // 0x0000(0x01C0)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
	bool                                          LIsHit;                                            // 0x01C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_950D[0x7];                                     // 0x01C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PsychicObjectBasic_C*               LPsychicObj;                                       // 0x01C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x01D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x01D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_950E[0x5];                                     // 0x01D3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PsychicObjectBasic_C*               K2Node_DynamicCast_AsBP_Psychic_Object_Basic;      // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_950F[0x3];                                     // 0x01E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHCSkillExtraType                             CallFunc_Array_Get_Item;                           // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x01F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x01F3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABattleSimulatorManager*                CallFunc_GetBattleSimulatorManager_BattleSimulatorManager; // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ENpcComponent_C_CheckHitUniqueObject) == 0x000008, "Wrong alignment on BP_ENpcComponent_C_CheckHitUniqueObject");
static_assert(sizeof(BP_ENpcComponent_C_CheckHitUniqueObject) == 0x000208, "Wrong size on BP_ENpcComponent_C_CheckHitUniqueObject");
static_assert(offsetof(BP_ENpcComponent_C_CheckHitUniqueObject, HitResult) == 0x000000, "Member 'BP_ENpcComponent_C_CheckHitUniqueObject::HitResult' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_CheckHitUniqueObject, LIsHit) == 0x0001C0, "Member 'BP_ENpcComponent_C_CheckHitUniqueObject::LIsHit' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_CheckHitUniqueObject, LPsychicObj) == 0x0001C8, "Member 'BP_ENpcComponent_C_CheckHitUniqueObject::LPsychicObj' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_CheckHitUniqueObject, Temp_bool_True_if_break_was_hit_Variable) == 0x0001D0, "Member 'BP_ENpcComponent_C_CheckHitUniqueObject::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_CheckHitUniqueObject, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0001D1, "Member 'BP_ENpcComponent_C_CheckHitUniqueObject::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_CheckHitUniqueObject, CallFunc_Not_PreBool_ReturnValue) == 0x0001D2, "Member 'BP_ENpcComponent_C_CheckHitUniqueObject::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_CheckHitUniqueObject, K2Node_DynamicCast_AsBP_Psychic_Object_Basic) == 0x0001D8, "Member 'BP_ENpcComponent_C_CheckHitUniqueObject::K2Node_DynamicCast_AsBP_Psychic_Object_Basic' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_CheckHitUniqueObject, K2Node_DynamicCast_bSuccess) == 0x0001E0, "Member 'BP_ENpcComponent_C_CheckHitUniqueObject::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_CheckHitUniqueObject, CallFunc_Array_Length_ReturnValue) == 0x0001E4, "Member 'BP_ENpcComponent_C_CheckHitUniqueObject::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_CheckHitUniqueObject, Temp_int_Array_Index_Variable) == 0x0001E8, "Member 'BP_ENpcComponent_C_CheckHitUniqueObject::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_CheckHitUniqueObject, Temp_int_Loop_Counter_Variable) == 0x0001EC, "Member 'BP_ENpcComponent_C_CheckHitUniqueObject::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_CheckHitUniqueObject, CallFunc_Array_Get_Item) == 0x0001F0, "Member 'BP_ENpcComponent_C_CheckHitUniqueObject::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_CheckHitUniqueObject, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0001F1, "Member 'BP_ENpcComponent_C_CheckHitUniqueObject::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_CheckHitUniqueObject, CallFunc_Less_IntInt_ReturnValue) == 0x0001F2, "Member 'BP_ENpcComponent_C_CheckHitUniqueObject::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_CheckHitUniqueObject, CallFunc_BooleanAND_ReturnValue) == 0x0001F3, "Member 'BP_ENpcComponent_C_CheckHitUniqueObject::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_CheckHitUniqueObject, CallFunc_Add_IntInt_ReturnValue) == 0x0001F4, "Member 'BP_ENpcComponent_C_CheckHitUniqueObject::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_CheckHitUniqueObject, CallFunc_GetBattleSimulatorManager_BattleSimulatorManager) == 0x0001F8, "Member 'BP_ENpcComponent_C_CheckHitUniqueObject::CallFunc_GetBattleSimulatorManager_BattleSimulatorManager' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_CheckHitUniqueObject, CallFunc_IsValid_ReturnValue) == 0x000200, "Member 'BP_ENpcComponent_C_CheckHitUniqueObject::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.UpdateHitUniqueObject
// 0x0040 (0x0040 - 0x0000)
struct BP_ENpcComponent_C_UpdateHitUniqueObject final
{
public:
	bool                                          LbSafetyObjState;                                  // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPsychicObjectState                           CallFunc_GetPsychicObjectState_return;             // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9510[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9511[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattlePlayer_C*                      CallFunc_GetMainPlayer_Player;                     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9512[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerAIInterface_C> CallFunc_IsActionStatusAI_self_CastInput;          // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActionStatusAI_bResult;                 // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ENpcComponent_C_UpdateHitUniqueObject) == 0x000008, "Wrong alignment on BP_ENpcComponent_C_UpdateHitUniqueObject");
static_assert(sizeof(BP_ENpcComponent_C_UpdateHitUniqueObject) == 0x000040, "Wrong size on BP_ENpcComponent_C_UpdateHitUniqueObject");
static_assert(offsetof(BP_ENpcComponent_C_UpdateHitUniqueObject, LbSafetyObjState) == 0x000000, "Member 'BP_ENpcComponent_C_UpdateHitUniqueObject::LbSafetyObjState' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateHitUniqueObject, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'BP_ENpcComponent_C_UpdateHitUniqueObject::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateHitUniqueObject, CallFunc_GetPsychicObjectState_return) == 0x000002, "Member 'BP_ENpcComponent_C_UpdateHitUniqueObject::CallFunc_GetPsychicObjectState_return' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateHitUniqueObject, K2Node_SwitchEnum_CmpSuccess) == 0x000003, "Member 'BP_ENpcComponent_C_UpdateHitUniqueObject::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateHitUniqueObject, CallFunc_GetPlayerManager_PlayerManager) == 0x000008, "Member 'BP_ENpcComponent_C_UpdateHitUniqueObject::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateHitUniqueObject, CallFunc_IsValid_ReturnValue_1) == 0x000010, "Member 'BP_ENpcComponent_C_UpdateHitUniqueObject::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateHitUniqueObject, CallFunc_GetMainPlayer_Player) == 0x000018, "Member 'BP_ENpcComponent_C_UpdateHitUniqueObject::CallFunc_GetMainPlayer_Player' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateHitUniqueObject, CallFunc_IsValid_ReturnValue_2) == 0x000020, "Member 'BP_ENpcComponent_C_UpdateHitUniqueObject::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateHitUniqueObject, CallFunc_IsActionStatusAI_self_CastInput) == 0x000028, "Member 'BP_ENpcComponent_C_UpdateHitUniqueObject::CallFunc_IsActionStatusAI_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateHitUniqueObject, CallFunc_IsActionStatusAI_bResult) == 0x000038, "Member 'BP_ENpcComponent_C_UpdateHitUniqueObject::CallFunc_IsActionStatusAI_bResult' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.Update Dead Staging
// 0x00C0 (0x00C0 - 0x0000)
struct BP_ENpcComponent_C_Update_Dead_Staging final
{
public:
	float                                         DeltaSec;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LbBFUser;                                          // 0x0004(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          LbUpdate;                                          // 0x0005(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9513[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 LTempUser;                                         // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         LBFUserList;                                       // 0x0010(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	bool                                          LbDestroy;                                         // 0x0020(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9514[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         LEvDitherRate;                                     // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9515[0x6];                                     // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_EnemyManager_C*                     CallFunc_GetEnemyManager_Manager;                  // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9516[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9517[0x3];                                     // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9518[0x1];                                     // 0x007B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9519[0x4];                                     // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BrainFieldManager_C*                CallFunc_GetBrainFieldManager_Manager;             // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInvokeBrainField_InvokeBrainField;      // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_951A[0x6];                                     // 0x0092(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetBrainFieldUserList_User;               // 0x0098(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRate_ReturnValue;                      // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOver_ReturnValue;                       // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnable_ReturnValue;                     // 0x00B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00B6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x00B7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOver_ReturnValue_1;                     // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnable_ReturnValue_1;                   // 0x00BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x00BE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ENpcComponent_C_Update_Dead_Staging) == 0x000008, "Wrong alignment on BP_ENpcComponent_C_Update_Dead_Staging");
static_assert(sizeof(BP_ENpcComponent_C_Update_Dead_Staging) == 0x0000C0, "Wrong size on BP_ENpcComponent_C_Update_Dead_Staging");
static_assert(offsetof(BP_ENpcComponent_C_Update_Dead_Staging, DeltaSec) == 0x000000, "Member 'BP_ENpcComponent_C_Update_Dead_Staging::DeltaSec' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Update_Dead_Staging, LbBFUser) == 0x000004, "Member 'BP_ENpcComponent_C_Update_Dead_Staging::LbBFUser' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Update_Dead_Staging, LbUpdate) == 0x000005, "Member 'BP_ENpcComponent_C_Update_Dead_Staging::LbUpdate' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Update_Dead_Staging, LTempUser) == 0x000008, "Member 'BP_ENpcComponent_C_Update_Dead_Staging::LTempUser' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Update_Dead_Staging, LBFUserList) == 0x000010, "Member 'BP_ENpcComponent_C_Update_Dead_Staging::LBFUserList' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Update_Dead_Staging, LbDestroy) == 0x000020, "Member 'BP_ENpcComponent_C_Update_Dead_Staging::LbDestroy' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Update_Dead_Staging, LEvDitherRate) == 0x000024, "Member 'BP_ENpcComponent_C_Update_Dead_Staging::LEvDitherRate' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Update_Dead_Staging, Temp_int_Array_Index_Variable) == 0x000028, "Member 'BP_ENpcComponent_C_Update_Dead_Staging::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Update_Dead_Staging, Temp_int_Loop_Num_Variable) == 0x00002C, "Member 'BP_ENpcComponent_C_Update_Dead_Staging::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Update_Dead_Staging, Temp_bool_True_if_break_was_hit_Variable) == 0x000030, "Member 'BP_ENpcComponent_C_Update_Dead_Staging::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Update_Dead_Staging, CallFunc_Not_PreBool_ReturnValue) == 0x000031, "Member 'BP_ENpcComponent_C_Update_Dead_Staging::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Update_Dead_Staging, CallFunc_GetEnemyManager_Manager) == 0x000038, "Member 'BP_ENpcComponent_C_Update_Dead_Staging::CallFunc_GetEnemyManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Update_Dead_Staging, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'BP_ENpcComponent_C_Update_Dead_Staging::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Update_Dead_Staging, CallFunc_Array_Length_ReturnValue) == 0x000044, "Member 'BP_ENpcComponent_C_Update_Dead_Staging::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Update_Dead_Staging, CallFunc_Conv_IntToString_ReturnValue) == 0x000048, "Member 'BP_ENpcComponent_C_Update_Dead_Staging::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Update_Dead_Staging, CallFunc_Concat_StrStr_ReturnValue) == 0x000058, "Member 'BP_ENpcComponent_C_Update_Dead_Staging::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Update_Dead_Staging, CallFunc_Conv_StringToName_ReturnValue) == 0x000068, "Member 'BP_ENpcComponent_C_Update_Dead_Staging::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Update_Dead_Staging, CallFunc_Not_PreBool_ReturnValue_1) == 0x000070, "Member 'BP_ENpcComponent_C_Update_Dead_Staging::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Update_Dead_Staging, Temp_int_Loop_Counter_Variable) == 0x000074, "Member 'BP_ENpcComponent_C_Update_Dead_Staging::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Update_Dead_Staging, CallFunc_IsValid_ReturnValue_1) == 0x000078, "Member 'BP_ENpcComponent_C_Update_Dead_Staging::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Update_Dead_Staging, CallFunc_Less_IntInt_ReturnValue) == 0x000079, "Member 'BP_ENpcComponent_C_Update_Dead_Staging::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Update_Dead_Staging, CallFunc_BooleanAND_ReturnValue) == 0x00007A, "Member 'BP_ENpcComponent_C_Update_Dead_Staging::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Update_Dead_Staging, CallFunc_Add_IntInt_ReturnValue) == 0x00007C, "Member 'BP_ENpcComponent_C_Update_Dead_Staging::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Update_Dead_Staging, Temp_int_Variable) == 0x000080, "Member 'BP_ENpcComponent_C_Update_Dead_Staging::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Update_Dead_Staging, CallFunc_GetBrainFieldManager_Manager) == 0x000088, "Member 'BP_ENpcComponent_C_Update_Dead_Staging::CallFunc_GetBrainFieldManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Update_Dead_Staging, CallFunc_IsValid_ReturnValue_2) == 0x000090, "Member 'BP_ENpcComponent_C_Update_Dead_Staging::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Update_Dead_Staging, CallFunc_IsInvokeBrainField_InvokeBrainField) == 0x000091, "Member 'BP_ENpcComponent_C_Update_Dead_Staging::CallFunc_IsInvokeBrainField_InvokeBrainField' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Update_Dead_Staging, CallFunc_GetBrainFieldUserList_User) == 0x000098, "Member 'BP_ENpcComponent_C_Update_Dead_Staging::CallFunc_GetBrainFieldUserList_User' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Update_Dead_Staging, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000A8, "Member 'BP_ENpcComponent_C_Update_Dead_Staging::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Update_Dead_Staging, Temp_int_Variable_1) == 0x0000AC, "Member 'BP_ENpcComponent_C_Update_Dead_Staging::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Update_Dead_Staging, CallFunc_GetRate_ReturnValue) == 0x0000B0, "Member 'BP_ENpcComponent_C_Update_Dead_Staging::CallFunc_GetRate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Update_Dead_Staging, CallFunc_IsOver_ReturnValue) == 0x0000B4, "Member 'BP_ENpcComponent_C_Update_Dead_Staging::CallFunc_IsOver_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Update_Dead_Staging, CallFunc_IsEnable_ReturnValue) == 0x0000B5, "Member 'BP_ENpcComponent_C_Update_Dead_Staging::CallFunc_IsEnable_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Update_Dead_Staging, CallFunc_IsValid_ReturnValue_3) == 0x0000B6, "Member 'BP_ENpcComponent_C_Update_Dead_Staging::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Update_Dead_Staging, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0000B7, "Member 'BP_ENpcComponent_C_Update_Dead_Staging::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Update_Dead_Staging, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000B8, "Member 'BP_ENpcComponent_C_Update_Dead_Staging::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Update_Dead_Staging, CallFunc_IsOver_ReturnValue_1) == 0x0000BC, "Member 'BP_ENpcComponent_C_Update_Dead_Staging::CallFunc_IsOver_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Update_Dead_Staging, CallFunc_IsEnable_ReturnValue_1) == 0x0000BD, "Member 'BP_ENpcComponent_C_Update_Dead_Staging::CallFunc_IsEnable_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_Update_Dead_Staging, K2Node_SwitchInteger_CmpSuccess) == 0x0000BE, "Member 'BP_ENpcComponent_C_Update_Dead_Staging::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.StartDeadStaging
// 0x0108 (0x0108 - 0x0000)
struct BP_ENpcComponent_C_StartDeadStaging final
{
public:
	bool                                          LbNoResetBFRate;                                   // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_951B[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattlePlayer_C*                      LEnpc;                                             // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ARSCharacterBase*>               LEnemyList;                                        // 0x0010(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_PlayerInterface_C> K2Node_DynamicCast_AsBPI_Player_Interface;         // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_951C[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattlePlayer_C*                      K2Node_DynamicCast_AsRSBattle_Player;              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_951D[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_ENpcComponent_C*                    CallFunc_GetEnpcComp_ReturnComp;                   // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAcceptBrainField_bAccept;               // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_951E[0x6];                                     // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CharacterParamater_C> K2Node_DynamicCast_AsBPI_Character_Paramater;      // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_951F[0x3];                                     // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDead_bDead;                             // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9520[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BattleManager_C*                    CallFunc_GetBattleManager_BattleManager;           // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x008D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9521[0x2];                                     // 0x008E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0095(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9522[0x2];                                     // 0x0096(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BattleManager_C*                    CallFunc_GetBattleManager_BattleManager_1;         // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9523[0x3];                                     // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetENPCBrainFieldRate_Rate;               // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9524[0x5];                                     // 0x00AB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BrainFieldManager_C*                CallFunc_GetBrainFieldManager_Manager;             // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_EnemyManager_C*                     CallFunc_GetEnemyManager_Manager;                  // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9525[0x6];                                     // 0x00C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ARSCharacterBase*>               CallFunc_GetEnemyList_ReturnValue;                 // 0x00C8(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_IsUserIsPlayer_IsPlayer;                  // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_InBranField_InBrainDield;                 // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9526[0x6];                                     // 0x00DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IRSUniqueIdInterface>  CallFunc_GetUniqueName_self_CastInput;             // 0x00E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FName                                   CallFunc_GetUniqueName_ReturnValue;                // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABattleSimulatorManager*                CallFunc_GetBattleSimulatorManager_BattleSimulatorManager; // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMissionActive_ReturnValue;              // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ENpcComponent_C_StartDeadStaging) == 0x000008, "Wrong alignment on BP_ENpcComponent_C_StartDeadStaging");
static_assert(sizeof(BP_ENpcComponent_C_StartDeadStaging) == 0x000108, "Wrong size on BP_ENpcComponent_C_StartDeadStaging");
static_assert(offsetof(BP_ENpcComponent_C_StartDeadStaging, LbNoResetBFRate) == 0x000000, "Member 'BP_ENpcComponent_C_StartDeadStaging::LbNoResetBFRate' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartDeadStaging, LEnpc) == 0x000008, "Member 'BP_ENpcComponent_C_StartDeadStaging::LEnpc' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartDeadStaging, LEnemyList) == 0x000010, "Member 'BP_ENpcComponent_C_StartDeadStaging::LEnemyList' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartDeadStaging, Temp_int_Array_Index_Variable) == 0x000020, "Member 'BP_ENpcComponent_C_StartDeadStaging::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartDeadStaging, Temp_int_Loop_Num_Variable) == 0x000024, "Member 'BP_ENpcComponent_C_StartDeadStaging::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartDeadStaging, K2Node_DynamicCast_AsBPI_Player_Interface) == 0x000028, "Member 'BP_ENpcComponent_C_StartDeadStaging::K2Node_DynamicCast_AsBPI_Player_Interface' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartDeadStaging, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_ENpcComponent_C_StartDeadStaging::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartDeadStaging, K2Node_DynamicCast_AsRSBattle_Player) == 0x000040, "Member 'BP_ENpcComponent_C_StartDeadStaging::K2Node_DynamicCast_AsRSBattle_Player' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartDeadStaging, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'BP_ENpcComponent_C_StartDeadStaging::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartDeadStaging, CallFunc_GetEnpcComp_ReturnComp) == 0x000050, "Member 'BP_ENpcComponent_C_StartDeadStaging::CallFunc_GetEnpcComp_ReturnComp' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartDeadStaging, CallFunc_IsValid_ReturnValue) == 0x000058, "Member 'BP_ENpcComponent_C_StartDeadStaging::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartDeadStaging, CallFunc_IsAcceptBrainField_bAccept) == 0x000059, "Member 'BP_ENpcComponent_C_StartDeadStaging::CallFunc_IsAcceptBrainField_bAccept' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartDeadStaging, K2Node_DynamicCast_AsBPI_Character_Paramater) == 0x000060, "Member 'BP_ENpcComponent_C_StartDeadStaging::K2Node_DynamicCast_AsBPI_Character_Paramater' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartDeadStaging, K2Node_DynamicCast_bSuccess_2) == 0x000070, "Member 'BP_ENpcComponent_C_StartDeadStaging::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartDeadStaging, CallFunc_Array_Length_ReturnValue) == 0x000074, "Member 'BP_ENpcComponent_C_StartDeadStaging::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartDeadStaging, CallFunc_IsDead_bDead) == 0x000078, "Member 'BP_ENpcComponent_C_StartDeadStaging::CallFunc_IsDead_bDead' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartDeadStaging, CallFunc_GetBattleManager_BattleManager) == 0x000080, "Member 'BP_ENpcComponent_C_StartDeadStaging::CallFunc_GetBattleManager_BattleManager' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartDeadStaging, Temp_int_Loop_Counter_Variable) == 0x000088, "Member 'BP_ENpcComponent_C_StartDeadStaging::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartDeadStaging, CallFunc_IsValid_ReturnValue_1) == 0x00008C, "Member 'BP_ENpcComponent_C_StartDeadStaging::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartDeadStaging, CallFunc_Less_IntInt_ReturnValue) == 0x00008D, "Member 'BP_ENpcComponent_C_StartDeadStaging::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartDeadStaging, CallFunc_Add_IntInt_ReturnValue) == 0x000090, "Member 'BP_ENpcComponent_C_StartDeadStaging::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartDeadStaging, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000094, "Member 'BP_ENpcComponent_C_StartDeadStaging::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartDeadStaging, Temp_bool_True_if_break_was_hit_Variable) == 0x000095, "Member 'BP_ENpcComponent_C_StartDeadStaging::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartDeadStaging, CallFunc_GetBattleManager_BattleManager_1) == 0x000098, "Member 'BP_ENpcComponent_C_StartDeadStaging::CallFunc_GetBattleManager_BattleManager_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartDeadStaging, CallFunc_IsValid_ReturnValue_2) == 0x0000A0, "Member 'BP_ENpcComponent_C_StartDeadStaging::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartDeadStaging, CallFunc_GetENPCBrainFieldRate_Rate) == 0x0000A4, "Member 'BP_ENpcComponent_C_StartDeadStaging::CallFunc_GetENPCBrainFieldRate_Rate' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartDeadStaging, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x0000A8, "Member 'BP_ENpcComponent_C_StartDeadStaging::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartDeadStaging, CallFunc_Not_PreBool_ReturnValue) == 0x0000A9, "Member 'BP_ENpcComponent_C_StartDeadStaging::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartDeadStaging, CallFunc_BooleanAND_ReturnValue) == 0x0000AA, "Member 'BP_ENpcComponent_C_StartDeadStaging::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartDeadStaging, CallFunc_GetBrainFieldManager_Manager) == 0x0000B0, "Member 'BP_ENpcComponent_C_StartDeadStaging::CallFunc_GetBrainFieldManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartDeadStaging, CallFunc_GetEnemyManager_Manager) == 0x0000B8, "Member 'BP_ENpcComponent_C_StartDeadStaging::CallFunc_GetEnemyManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartDeadStaging, CallFunc_IsValid_ReturnValue_3) == 0x0000C0, "Member 'BP_ENpcComponent_C_StartDeadStaging::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartDeadStaging, CallFunc_IsValid_ReturnValue_4) == 0x0000C1, "Member 'BP_ENpcComponent_C_StartDeadStaging::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartDeadStaging, CallFunc_GetEnemyList_ReturnValue) == 0x0000C8, "Member 'BP_ENpcComponent_C_StartDeadStaging::CallFunc_GetEnemyList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartDeadStaging, CallFunc_IsUserIsPlayer_IsPlayer) == 0x0000D8, "Member 'BP_ENpcComponent_C_StartDeadStaging::CallFunc_IsUserIsPlayer_IsPlayer' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartDeadStaging, CallFunc_InBranField_InBrainDield) == 0x0000D9, "Member 'BP_ENpcComponent_C_StartDeadStaging::CallFunc_InBranField_InBrainDield' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartDeadStaging, CallFunc_GetUniqueName_self_CastInput) == 0x0000E0, "Member 'BP_ENpcComponent_C_StartDeadStaging::CallFunc_GetUniqueName_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartDeadStaging, CallFunc_GetUniqueName_ReturnValue) == 0x0000F0, "Member 'BP_ENpcComponent_C_StartDeadStaging::CallFunc_GetUniqueName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartDeadStaging, CallFunc_GetBattleSimulatorManager_BattleSimulatorManager) == 0x0000F8, "Member 'BP_ENpcComponent_C_StartDeadStaging::CallFunc_GetBattleSimulatorManager_BattleSimulatorManager' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartDeadStaging, CallFunc_IsValid_ReturnValue_5) == 0x000100, "Member 'BP_ENpcComponent_C_StartDeadStaging::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_StartDeadStaging, CallFunc_IsMissionActive_ReturnValue) == 0x000101, "Member 'BP_ENpcComponent_C_StartDeadStaging::CallFunc_IsMissionActive_ReturnValue' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.IsCloseBrainField
// 0x0080 (0x0080 - 0x0000)
struct BP_ENpcComponent_C_IsCloseBrainField final
{
public:
	bool                                          bCloseBrainField;                                  // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9527[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 LBFTempUser;                                       // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         LBFUserList;                                       // 0x0010(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	class ARSBattlePlayer_C*                      LOwner;                                            // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_CharacterParamater_C> K2Node_DynamicCast_AsBPI_Character_Paramater;      // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDead_bDead;                             // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9528[0x1];                                     // 0x0043(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x004E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9529[0x1];                                     // 0x004F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_952A[0x3];                                     // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BrainFieldManager_C*                CallFunc_GetBrainFieldManager_Manager;             // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABattleSimulatorManager*                CallFunc_GetBattleSimulatorManager_BattleSimulatorManager; // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMissionActive_ReturnValue;              // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_952B[0x5];                                     // 0x006B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetBrainFieldUserList_User;               // 0x0070(0x0010)(ReferenceParm, HasGetValueTypeHash)
};
static_assert(alignof(BP_ENpcComponent_C_IsCloseBrainField) == 0x000008, "Wrong alignment on BP_ENpcComponent_C_IsCloseBrainField");
static_assert(sizeof(BP_ENpcComponent_C_IsCloseBrainField) == 0x000080, "Wrong size on BP_ENpcComponent_C_IsCloseBrainField");
static_assert(offsetof(BP_ENpcComponent_C_IsCloseBrainField, bCloseBrainField) == 0x000000, "Member 'BP_ENpcComponent_C_IsCloseBrainField::bCloseBrainField' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsCloseBrainField, LBFTempUser) == 0x000008, "Member 'BP_ENpcComponent_C_IsCloseBrainField::LBFTempUser' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsCloseBrainField, LBFUserList) == 0x000010, "Member 'BP_ENpcComponent_C_IsCloseBrainField::LBFUserList' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsCloseBrainField, LOwner) == 0x000020, "Member 'BP_ENpcComponent_C_IsCloseBrainField::LOwner' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsCloseBrainField, Temp_int_Array_Index_Variable) == 0x000028, "Member 'BP_ENpcComponent_C_IsCloseBrainField::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsCloseBrainField, Temp_int_Loop_Num_Variable) == 0x00002C, "Member 'BP_ENpcComponent_C_IsCloseBrainField::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsCloseBrainField, K2Node_DynamicCast_AsBPI_Character_Paramater) == 0x000030, "Member 'BP_ENpcComponent_C_IsCloseBrainField::K2Node_DynamicCast_AsBPI_Character_Paramater' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsCloseBrainField, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_ENpcComponent_C_IsCloseBrainField::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsCloseBrainField, CallFunc_IsDead_bDead) == 0x000041, "Member 'BP_ENpcComponent_C_IsCloseBrainField::CallFunc_IsDead_bDead' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsCloseBrainField, CallFunc_IsValid_ReturnValue) == 0x000042, "Member 'BP_ENpcComponent_C_IsCloseBrainField::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsCloseBrainField, CallFunc_Array_Length_ReturnValue) == 0x000044, "Member 'BP_ENpcComponent_C_IsCloseBrainField::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsCloseBrainField, Temp_int_Loop_Counter_Variable) == 0x000048, "Member 'BP_ENpcComponent_C_IsCloseBrainField::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsCloseBrainField, Temp_bool_True_if_break_was_hit_Variable) == 0x00004C, "Member 'BP_ENpcComponent_C_IsCloseBrainField::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsCloseBrainField, CallFunc_Not_PreBool_ReturnValue) == 0x00004D, "Member 'BP_ENpcComponent_C_IsCloseBrainField::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsCloseBrainField, CallFunc_Less_IntInt_ReturnValue) == 0x00004E, "Member 'BP_ENpcComponent_C_IsCloseBrainField::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsCloseBrainField, CallFunc_Add_IntInt_ReturnValue) == 0x000050, "Member 'BP_ENpcComponent_C_IsCloseBrainField::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsCloseBrainField, CallFunc_BooleanAND_ReturnValue) == 0x000054, "Member 'BP_ENpcComponent_C_IsCloseBrainField::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsCloseBrainField, CallFunc_GetBrainFieldManager_Manager) == 0x000058, "Member 'BP_ENpcComponent_C_IsCloseBrainField::CallFunc_GetBrainFieldManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsCloseBrainField, CallFunc_GetBattleSimulatorManager_BattleSimulatorManager) == 0x000060, "Member 'BP_ENpcComponent_C_IsCloseBrainField::CallFunc_GetBattleSimulatorManager_BattleSimulatorManager' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsCloseBrainField, CallFunc_IsValid_ReturnValue_1) == 0x000068, "Member 'BP_ENpcComponent_C_IsCloseBrainField::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsCloseBrainField, CallFunc_IsValid_ReturnValue_2) == 0x000069, "Member 'BP_ENpcComponent_C_IsCloseBrainField::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsCloseBrainField, CallFunc_IsMissionActive_ReturnValue) == 0x00006A, "Member 'BP_ENpcComponent_C_IsCloseBrainField::CallFunc_IsMissionActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsCloseBrainField, CallFunc_GetBrainFieldUserList_User) == 0x000070, "Member 'BP_ENpcComponent_C_IsCloseBrainField::CallFunc_GetBrainFieldUserList_User' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.UpdateOwnerDestroy
// 0x00A0 (0x00A0 - 0x0000)
struct BP_ENpcComponent_C_UpdateOwnerDestroy final
{
public:
	class AActor*                                 LBFTempUser;                                       // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         LBFUserList;                                       // 0x0008(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_952C[0x2];                                     // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_952D[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_EnemyManager_C*                     CallFunc_GetEnemyManager_Manager;                  // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_952E[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_952F[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9530[0x5];                                     // 0x004B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ABP_BrainFieldManager_C*                CallFunc_GetBrainFieldManager_Manager;             // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9531[0x3];                                     // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x007C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9532[0x4];                                     // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetBrainFieldUserList_User;               // 0x0088(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_IsInvokeBrainField_InvokeBrainField;      // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ENpcComponent_C_UpdateOwnerDestroy) == 0x000008, "Wrong alignment on BP_ENpcComponent_C_UpdateOwnerDestroy");
static_assert(sizeof(BP_ENpcComponent_C_UpdateOwnerDestroy) == 0x0000A0, "Wrong size on BP_ENpcComponent_C_UpdateOwnerDestroy");
static_assert(offsetof(BP_ENpcComponent_C_UpdateOwnerDestroy, LBFTempUser) == 0x000000, "Member 'BP_ENpcComponent_C_UpdateOwnerDestroy::LBFTempUser' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateOwnerDestroy, LBFUserList) == 0x000008, "Member 'BP_ENpcComponent_C_UpdateOwnerDestroy::LBFUserList' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateOwnerDestroy, Temp_int_Loop_Num_Variable) == 0x000018, "Member 'BP_ENpcComponent_C_UpdateOwnerDestroy::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateOwnerDestroy, Temp_bool_True_if_break_was_hit_Variable) == 0x00001C, "Member 'BP_ENpcComponent_C_UpdateOwnerDestroy::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateOwnerDestroy, CallFunc_Not_PreBool_ReturnValue) == 0x00001D, "Member 'BP_ENpcComponent_C_UpdateOwnerDestroy::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateOwnerDestroy, Temp_int_Array_Index_Variable) == 0x000020, "Member 'BP_ENpcComponent_C_UpdateOwnerDestroy::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateOwnerDestroy, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'BP_ENpcComponent_C_UpdateOwnerDestroy::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateOwnerDestroy, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BP_ENpcComponent_C_UpdateOwnerDestroy::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateOwnerDestroy, CallFunc_GetEnemyManager_Manager) == 0x000030, "Member 'BP_ENpcComponent_C_UpdateOwnerDestroy::CallFunc_GetEnemyManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateOwnerDestroy, CallFunc_IsValid_ReturnValue_1) == 0x000038, "Member 'BP_ENpcComponent_C_UpdateOwnerDestroy::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateOwnerDestroy, Temp_int_Loop_Counter_Variable) == 0x00003C, "Member 'BP_ENpcComponent_C_UpdateOwnerDestroy::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateOwnerDestroy, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'BP_ENpcComponent_C_UpdateOwnerDestroy::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateOwnerDestroy, CallFunc_Add_IntInt_ReturnValue) == 0x000044, "Member 'BP_ENpcComponent_C_UpdateOwnerDestroy::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateOwnerDestroy, CallFunc_BooleanAND_ReturnValue) == 0x000048, "Member 'BP_ENpcComponent_C_UpdateOwnerDestroy::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateOwnerDestroy, CallFunc_IsValid_ReturnValue_2) == 0x000049, "Member 'BP_ENpcComponent_C_UpdateOwnerDestroy::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateOwnerDestroy, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x00004A, "Member 'BP_ENpcComponent_C_UpdateOwnerDestroy::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateOwnerDestroy, CallFunc_Conv_IntToString_ReturnValue) == 0x000050, "Member 'BP_ENpcComponent_C_UpdateOwnerDestroy::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateOwnerDestroy, CallFunc_GetBrainFieldManager_Manager) == 0x000060, "Member 'BP_ENpcComponent_C_UpdateOwnerDestroy::CallFunc_GetBrainFieldManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateOwnerDestroy, CallFunc_Concat_StrStr_ReturnValue) == 0x000068, "Member 'BP_ENpcComponent_C_UpdateOwnerDestroy::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateOwnerDestroy, CallFunc_IsValid_ReturnValue_3) == 0x000078, "Member 'BP_ENpcComponent_C_UpdateOwnerDestroy::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateOwnerDestroy, CallFunc_Conv_StringToName_ReturnValue) == 0x00007C, "Member 'BP_ENpcComponent_C_UpdateOwnerDestroy::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateOwnerDestroy, CallFunc_GetBrainFieldUserList_User) == 0x000088, "Member 'BP_ENpcComponent_C_UpdateOwnerDestroy::CallFunc_GetBrainFieldUserList_User' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_UpdateOwnerDestroy, CallFunc_IsInvokeBrainField_InvokeBrainField) == 0x000098, "Member 'BP_ENpcComponent_C_UpdateOwnerDestroy::CallFunc_IsInvokeBrainField_InvokeBrainField' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.PlayBattleStartBT
// 0x0080 (0x0080 - 0x0000)
struct BP_ENpcComponent_C_PlayBattleStartBT final
{
public:
	class FName                                   LUniqueName;                                       // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABrainTalkManager*                      CallFunc_GetBrainTalkManager_BrainTalkManager;     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable;                                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BrainTalkEm_em8220_01_ReturnValue;        // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_1;        // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9533[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABrainTalkManager*                      CallFunc_GetBrainTalkManager_BrainTalkManager_1;   // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BrainTalkBt_BattleSim_BattleStart_RevivalBoss_ReturnValue; // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BrainTalkBt_BattleSim_BattleStart_ENPC_ReturnValue; // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_2;        // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9534[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_ENpcInterface_C>  K2Node_DynamicCast_AsBPI_ENpc_Interface;           // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9535[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Em8000_GetPartner_PartnerActor;           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IRSUniqueIdInterface>  K2Node_DynamicCast_AsRSUnique_Id_Interface;        // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9536[0x3];                                     // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetUniqueName_ReturnValue;                // 0x0074(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x007D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_3;        // 0x007E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ENpcComponent_C_PlayBattleStartBT) == 0x000008, "Wrong alignment on BP_ENpcComponent_C_PlayBattleStartBT");
static_assert(sizeof(BP_ENpcComponent_C_PlayBattleStartBT) == 0x000080, "Wrong size on BP_ENpcComponent_C_PlayBattleStartBT");
static_assert(offsetof(BP_ENpcComponent_C_PlayBattleStartBT, LUniqueName) == 0x000000, "Member 'BP_ENpcComponent_C_PlayBattleStartBT::LUniqueName' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_PlayBattleStartBT, CallFunc_GetBrainTalkManager_BrainTalkManager) == 0x000008, "Member 'BP_ENpcComponent_C_PlayBattleStartBT::CallFunc_GetBrainTalkManager_BrainTalkManager' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_PlayBattleStartBT, Temp_name_Variable) == 0x000010, "Member 'BP_ENpcComponent_C_PlayBattleStartBT::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_PlayBattleStartBT, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_ENpcComponent_C_PlayBattleStartBT::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_PlayBattleStartBT, CallFunc_BrainTalkEm_em8220_01_ReturnValue) == 0x000019, "Member 'BP_ENpcComponent_C_PlayBattleStartBT::CallFunc_BrainTalkEm_em8220_01_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_PlayBattleStartBT, CallFunc_EqualEqual_NameName_ReturnValue) == 0x00001A, "Member 'BP_ENpcComponent_C_PlayBattleStartBT::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_PlayBattleStartBT, CallFunc_EqualEqual_NameName_ReturnValue_1) == 0x00001B, "Member 'BP_ENpcComponent_C_PlayBattleStartBT::CallFunc_EqualEqual_NameName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_PlayBattleStartBT, CallFunc_GetBrainTalkManager_BrainTalkManager_1) == 0x000020, "Member 'BP_ENpcComponent_C_PlayBattleStartBT::CallFunc_GetBrainTalkManager_BrainTalkManager_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_PlayBattleStartBT, CallFunc_Conv_NameToString_ReturnValue) == 0x000028, "Member 'BP_ENpcComponent_C_PlayBattleStartBT::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_PlayBattleStartBT, CallFunc_IsValid_ReturnValue_1) == 0x000038, "Member 'BP_ENpcComponent_C_PlayBattleStartBT::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_PlayBattleStartBT, CallFunc_BrainTalkBt_BattleSim_BattleStart_RevivalBoss_ReturnValue) == 0x000039, "Member 'BP_ENpcComponent_C_PlayBattleStartBT::CallFunc_BrainTalkBt_BattleSim_BattleStart_RevivalBoss_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_PlayBattleStartBT, CallFunc_BrainTalkBt_BattleSim_BattleStart_ENPC_ReturnValue) == 0x00003A, "Member 'BP_ENpcComponent_C_PlayBattleStartBT::CallFunc_BrainTalkBt_BattleSim_BattleStart_ENPC_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_PlayBattleStartBT, CallFunc_EqualEqual_NameName_ReturnValue_2) == 0x00003B, "Member 'BP_ENpcComponent_C_PlayBattleStartBT::CallFunc_EqualEqual_NameName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_PlayBattleStartBT, K2Node_DynamicCast_AsBPI_ENpc_Interface) == 0x000040, "Member 'BP_ENpcComponent_C_PlayBattleStartBT::K2Node_DynamicCast_AsBPI_ENpc_Interface' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_PlayBattleStartBT, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'BP_ENpcComponent_C_PlayBattleStartBT::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_PlayBattleStartBT, CallFunc_Em8000_GetPartner_PartnerActor) == 0x000058, "Member 'BP_ENpcComponent_C_PlayBattleStartBT::CallFunc_Em8000_GetPartner_PartnerActor' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_PlayBattleStartBT, K2Node_DynamicCast_AsRSUnique_Id_Interface) == 0x000060, "Member 'BP_ENpcComponent_C_PlayBattleStartBT::K2Node_DynamicCast_AsRSUnique_Id_Interface' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_PlayBattleStartBT, K2Node_DynamicCast_bSuccess_1) == 0x000070, "Member 'BP_ENpcComponent_C_PlayBattleStartBT::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_PlayBattleStartBT, CallFunc_GetUniqueName_ReturnValue) == 0x000074, "Member 'BP_ENpcComponent_C_PlayBattleStartBT::CallFunc_GetUniqueName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_PlayBattleStartBT, CallFunc_IsValid_ReturnValue_2) == 0x00007C, "Member 'BP_ENpcComponent_C_PlayBattleStartBT::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_PlayBattleStartBT, CallFunc_IsValid_ReturnValue_3) == 0x00007D, "Member 'BP_ENpcComponent_C_PlayBattleStartBT::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_PlayBattleStartBT, CallFunc_EqualEqual_NameName_ReturnValue_3) == 0x00007E, "Member 'BP_ENpcComponent_C_PlayBattleStartBT::CallFunc_EqualEqual_NameName_ReturnValue_3' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.SetSimulatorWait
// 0x0001 (0x0001 - 0x0000)
struct BP_ENpcComponent_C_SetSimulatorWait final
{
public:
	bool                                          NewWait;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ENpcComponent_C_SetSimulatorWait) == 0x000001, "Wrong alignment on BP_ENpcComponent_C_SetSimulatorWait");
static_assert(sizeof(BP_ENpcComponent_C_SetSimulatorWait) == 0x000001, "Wrong size on BP_ENpcComponent_C_SetSimulatorWait");
static_assert(offsetof(BP_ENpcComponent_C_SetSimulatorWait, NewWait) == 0x000000, "Member 'BP_ENpcComponent_C_SetSimulatorWait::NewWait' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.IsAcceptBrainField
// 0x0028 (0x0028 - 0x0000)
struct BP_ENpcComponent_C_IsAcceptBrainField final
{
public:
	bool                                          bAccept;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9537[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 LBFTempUser;                                       // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         LBFUserList;                                       // 0x0010(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	class ARSBattlePlayer_C*                      LOwner;                                            // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ENpcComponent_C_IsAcceptBrainField) == 0x000008, "Wrong alignment on BP_ENpcComponent_C_IsAcceptBrainField");
static_assert(sizeof(BP_ENpcComponent_C_IsAcceptBrainField) == 0x000028, "Wrong size on BP_ENpcComponent_C_IsAcceptBrainField");
static_assert(offsetof(BP_ENpcComponent_C_IsAcceptBrainField, bAccept) == 0x000000, "Member 'BP_ENpcComponent_C_IsAcceptBrainField::bAccept' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsAcceptBrainField, LBFTempUser) == 0x000008, "Member 'BP_ENpcComponent_C_IsAcceptBrainField::LBFTempUser' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsAcceptBrainField, LBFUserList) == 0x000010, "Member 'BP_ENpcComponent_C_IsAcceptBrainField::LBFUserList' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsAcceptBrainField, LOwner) == 0x000020, "Member 'BP_ENpcComponent_C_IsAcceptBrainField::LOwner' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.IsEnableStartBattle
// 0x0020 (0x0020 - 0x0000)
struct BP_ENpcComponent_C_IsEnableStartBattle final
{
public:
	bool                                          bBattleSimulator;                                  // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bEnableStartBattle;                                // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          LbEnableStartBattle;                               // 0x0002(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          LbBattleSimulator;                                 // 0x0003(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayerStatus_Result;                    // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9538[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_LevelManager_C*                     CallFunc_GetLevelManager_LevelManager;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABattleSimulatorManager*                CallFunc_GetBattleSimulatorManager_BattleSimulatorManager; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMissionActive_ReturnValue;              // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidCurrentSimulatorLevelInfosName_ReturnValue; // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ENpcComponent_C_IsEnableStartBattle) == 0x000008, "Wrong alignment on BP_ENpcComponent_C_IsEnableStartBattle");
static_assert(sizeof(BP_ENpcComponent_C_IsEnableStartBattle) == 0x000020, "Wrong size on BP_ENpcComponent_C_IsEnableStartBattle");
static_assert(offsetof(BP_ENpcComponent_C_IsEnableStartBattle, bBattleSimulator) == 0x000000, "Member 'BP_ENpcComponent_C_IsEnableStartBattle::bBattleSimulator' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsEnableStartBattle, bEnableStartBattle) == 0x000001, "Member 'BP_ENpcComponent_C_IsEnableStartBattle::bEnableStartBattle' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsEnableStartBattle, LbEnableStartBattle) == 0x000002, "Member 'BP_ENpcComponent_C_IsEnableStartBattle::LbEnableStartBattle' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsEnableStartBattle, LbBattleSimulator) == 0x000003, "Member 'BP_ENpcComponent_C_IsEnableStartBattle::LbBattleSimulator' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsEnableStartBattle, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'BP_ENpcComponent_C_IsEnableStartBattle::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsEnableStartBattle, CallFunc_IsPlayerStatus_Result) == 0x000005, "Member 'BP_ENpcComponent_C_IsEnableStartBattle::CallFunc_IsPlayerStatus_Result' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsEnableStartBattle, CallFunc_GetLevelManager_LevelManager) == 0x000008, "Member 'BP_ENpcComponent_C_IsEnableStartBattle::CallFunc_GetLevelManager_LevelManager' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsEnableStartBattle, CallFunc_GetBattleSimulatorManager_BattleSimulatorManager) == 0x000010, "Member 'BP_ENpcComponent_C_IsEnableStartBattle::CallFunc_GetBattleSimulatorManager_BattleSimulatorManager' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsEnableStartBattle, CallFunc_IsValid_ReturnValue_1) == 0x000018, "Member 'BP_ENpcComponent_C_IsEnableStartBattle::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsEnableStartBattle, CallFunc_IsValid_ReturnValue_2) == 0x000019, "Member 'BP_ENpcComponent_C_IsEnableStartBattle::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsEnableStartBattle, CallFunc_IsMissionActive_ReturnValue) == 0x00001A, "Member 'BP_ENpcComponent_C_IsEnableStartBattle::CallFunc_IsMissionActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsEnableStartBattle, CallFunc_IsValidCurrentSimulatorLevelInfosName_ReturnValue) == 0x00001B, "Member 'BP_ENpcComponent_C_IsEnableStartBattle::CallFunc_IsValidCurrentSimulatorLevelInfosName_ReturnValue' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.LoadEnpcBrainFieldAsset
// 0x0030 (0x0030 - 0x0000)
struct BP_ENpcComponent_C_LoadEnpcBrainFieldAsset final
{
public:
	EBrainFieldENPCType                           Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9539[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IPlayerInterface>      CallFunc_GetPlayerID_self_CastInput;               // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerID                                     CallFunc_GetPlayerID_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EBrainFieldENPCType                           Temp_byte_Variable_1;                              // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBrainFieldENPCType                           K2Node_Select_Default;                             // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_953A[0x1];                                     // 0x001F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BrainFieldManager_C*                CallFunc_GetBrainFieldManager_Manager;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ENpcComponent_C_LoadEnpcBrainFieldAsset) == 0x000008, "Wrong alignment on BP_ENpcComponent_C_LoadEnpcBrainFieldAsset");
static_assert(sizeof(BP_ENpcComponent_C_LoadEnpcBrainFieldAsset) == 0x000030, "Wrong size on BP_ENpcComponent_C_LoadEnpcBrainFieldAsset");
static_assert(offsetof(BP_ENpcComponent_C_LoadEnpcBrainFieldAsset, Temp_byte_Variable) == 0x000000, "Member 'BP_ENpcComponent_C_LoadEnpcBrainFieldAsset::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_LoadEnpcBrainFieldAsset, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'BP_ENpcComponent_C_LoadEnpcBrainFieldAsset::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_LoadEnpcBrainFieldAsset, CallFunc_GetPlayerID_self_CastInput) == 0x000008, "Member 'BP_ENpcComponent_C_LoadEnpcBrainFieldAsset::CallFunc_GetPlayerID_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_LoadEnpcBrainFieldAsset, CallFunc_GetPlayerID_ReturnValue) == 0x000018, "Member 'BP_ENpcComponent_C_LoadEnpcBrainFieldAsset::CallFunc_GetPlayerID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_LoadEnpcBrainFieldAsset, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000019, "Member 'BP_ENpcComponent_C_LoadEnpcBrainFieldAsset::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_LoadEnpcBrainFieldAsset, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00001A, "Member 'BP_ENpcComponent_C_LoadEnpcBrainFieldAsset::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_LoadEnpcBrainFieldAsset, Temp_bool_Variable) == 0x00001B, "Member 'BP_ENpcComponent_C_LoadEnpcBrainFieldAsset::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_LoadEnpcBrainFieldAsset, CallFunc_BooleanOR_ReturnValue) == 0x00001C, "Member 'BP_ENpcComponent_C_LoadEnpcBrainFieldAsset::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_LoadEnpcBrainFieldAsset, Temp_byte_Variable_1) == 0x00001D, "Member 'BP_ENpcComponent_C_LoadEnpcBrainFieldAsset::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_LoadEnpcBrainFieldAsset, K2Node_Select_Default) == 0x00001E, "Member 'BP_ENpcComponent_C_LoadEnpcBrainFieldAsset::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_LoadEnpcBrainFieldAsset, CallFunc_GetBrainFieldManager_Manager) == 0x000020, "Member 'BP_ENpcComponent_C_LoadEnpcBrainFieldAsset::CallFunc_GetBrainFieldManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_LoadEnpcBrainFieldAsset, CallFunc_IsValid_ReturnValue_1) == 0x000028, "Member 'BP_ENpcComponent_C_LoadEnpcBrainFieldAsset::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.GetEnemyInterfaceSound
// 0x0001 (0x0001 - 0x0000)
struct BP_ENpcComponent_C_GetEnemyInterfaceSound final
{
public:
	Enum_EnemySound                               Sound;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ENpcComponent_C_GetEnemyInterfaceSound) == 0x000001, "Wrong alignment on BP_ENpcComponent_C_GetEnemyInterfaceSound");
static_assert(sizeof(BP_ENpcComponent_C_GetEnemyInterfaceSound) == 0x000001, "Wrong size on BP_ENpcComponent_C_GetEnemyInterfaceSound");
static_assert(offsetof(BP_ENpcComponent_C_GetEnemyInterfaceSound, Sound) == 0x000000, "Member 'BP_ENpcComponent_C_GetEnemyInterfaceSound::Sound' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.IsEnemyInterfaceBrainAccess
// 0x0002 (0x0002 - 0x0000)
struct BP_ENpcComponent_C_IsEnemyInterfaceBrainAccess final
{
public:
	bool                                          bResult;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsBrainCrashAccess_ReturnValue;           // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ENpcComponent_C_IsEnemyInterfaceBrainAccess) == 0x000001, "Wrong alignment on BP_ENpcComponent_C_IsEnemyInterfaceBrainAccess");
static_assert(sizeof(BP_ENpcComponent_C_IsEnemyInterfaceBrainAccess) == 0x000002, "Wrong size on BP_ENpcComponent_C_IsEnemyInterfaceBrainAccess");
static_assert(offsetof(BP_ENpcComponent_C_IsEnemyInterfaceBrainAccess, bResult) == 0x000000, "Member 'BP_ENpcComponent_C_IsEnemyInterfaceBrainAccess::bResult' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsEnemyInterfaceBrainAccess, CallFunc_IsBrainCrashAccess_ReturnValue) == 0x000001, "Member 'BP_ENpcComponent_C_IsEnemyInterfaceBrainAccess::CallFunc_IsBrainCrashAccess_ReturnValue' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.IsEnemyBossActive
// 0x0003 (0x0003 - 0x0000)
struct BP_ENpcComponent_C_IsEnemyBossActive final
{
public:
	bool                                          bResult;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnemyActive_bResult;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ENpcComponent_C_IsEnemyBossActive) == 0x000001, "Wrong alignment on BP_ENpcComponent_C_IsEnemyBossActive");
static_assert(sizeof(BP_ENpcComponent_C_IsEnemyBossActive) == 0x000003, "Wrong size on BP_ENpcComponent_C_IsEnemyBossActive");
static_assert(offsetof(BP_ENpcComponent_C_IsEnemyBossActive, bResult) == 0x000000, "Member 'BP_ENpcComponent_C_IsEnemyBossActive::bResult' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsEnemyBossActive, CallFunc_IsEnemyActive_bResult) == 0x000001, "Member 'BP_ENpcComponent_C_IsEnemyBossActive::CallFunc_IsEnemyActive_bResult' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsEnemyBossActive, CallFunc_BooleanAND_ReturnValue) == 0x000002, "Member 'BP_ENpcComponent_C_IsEnemyBossActive::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.IsEnemyActive
// 0x0002 (0x0002 - 0x0000)
struct BP_ENpcComponent_C_IsEnemyActive final
{
public:
	bool                                          bResult;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayerStatus_Result;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ENpcComponent_C_IsEnemyActive) == 0x000001, "Wrong alignment on BP_ENpcComponent_C_IsEnemyActive");
static_assert(sizeof(BP_ENpcComponent_C_IsEnemyActive) == 0x000002, "Wrong size on BP_ENpcComponent_C_IsEnemyActive");
static_assert(offsetof(BP_ENpcComponent_C_IsEnemyActive, bResult) == 0x000000, "Member 'BP_ENpcComponent_C_IsEnemyActive::bResult' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsEnemyActive, CallFunc_IsPlayerStatus_Result) == 0x000001, "Member 'BP_ENpcComponent_C_IsEnemyActive::CallFunc_IsPlayerStatus_Result' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.IsEnemyStateAttack
// 0x0002 (0x0002 - 0x0000)
struct BP_ENpcComponent_C_IsEnemyStateAttack final
{
public:
	bool                                          bReturn;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActionStatus_Result;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ENpcComponent_C_IsEnemyStateAttack) == 0x000001, "Wrong alignment on BP_ENpcComponent_C_IsEnemyStateAttack");
static_assert(sizeof(BP_ENpcComponent_C_IsEnemyStateAttack) == 0x000002, "Wrong size on BP_ENpcComponent_C_IsEnemyStateAttack");
static_assert(offsetof(BP_ENpcComponent_C_IsEnemyStateAttack, bReturn) == 0x000000, "Member 'BP_ENpcComponent_C_IsEnemyStateAttack::bReturn' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsEnemyStateAttack, CallFunc_IsActionStatus_Result) == 0x000001, "Member 'BP_ENpcComponent_C_IsEnemyStateAttack::CallFunc_IsActionStatus_Result' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.IsEnemyStateDamage
// 0x0002 (0x0002 - 0x0000)
struct BP_ENpcComponent_C_IsEnemyStateDamage final
{
public:
	bool                                          bReturn;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActionStatus_Result;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ENpcComponent_C_IsEnemyStateDamage) == 0x000001, "Wrong alignment on BP_ENpcComponent_C_IsEnemyStateDamage");
static_assert(sizeof(BP_ENpcComponent_C_IsEnemyStateDamage) == 0x000002, "Wrong size on BP_ENpcComponent_C_IsEnemyStateDamage");
static_assert(offsetof(BP_ENpcComponent_C_IsEnemyStateDamage, bReturn) == 0x000000, "Member 'BP_ENpcComponent_C_IsEnemyStateDamage::bReturn' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsEnemyStateDamage, CallFunc_IsActionStatus_Result) == 0x000001, "Member 'BP_ENpcComponent_C_IsEnemyStateDamage::CallFunc_IsActionStatus_Result' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.IsEnemyStateDamageDown
// 0x0002 (0x0002 - 0x0000)
struct BP_ENpcComponent_C_IsEnemyStateDamageDown final
{
public:
	bool                                          bReturn;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActionStatus_Result;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ENpcComponent_C_IsEnemyStateDamageDown) == 0x000001, "Wrong alignment on BP_ENpcComponent_C_IsEnemyStateDamageDown");
static_assert(sizeof(BP_ENpcComponent_C_IsEnemyStateDamageDown) == 0x000002, "Wrong size on BP_ENpcComponent_C_IsEnemyStateDamageDown");
static_assert(offsetof(BP_ENpcComponent_C_IsEnemyStateDamageDown, bReturn) == 0x000000, "Member 'BP_ENpcComponent_C_IsEnemyStateDamageDown::bReturn' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsEnemyStateDamageDown, CallFunc_IsActionStatus_Result) == 0x000001, "Member 'BP_ENpcComponent_C_IsEnemyStateDamageDown::CallFunc_IsActionStatus_Result' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.GetEnemyGroundTransform
// 0x0290 (0x0290 - 0x0000)
struct BP_ENpcComponent_C_GetEnemyGroundTransform final
{
public:
	struct FTransform                             Transform;                                         // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FTransform                             Return;                                            // 0x0030(0x0030)(Parm, OutParm, IsPlainOldData, NoDestructor)
	struct FVector                                LLocation;                                         // 0x0060(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_953B[0x4];                                     // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             LTransform;                                        // 0x0070(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x00A0(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x00B0(0x0010)(ReferenceParm, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x00F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetScaledCapsuleHalfHeight_ReturnValue;   // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0100(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0130(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x013C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0148(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit;         // 0x0154(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue;    // 0x01DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_953C[0x3];                                     // 0x01DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x01E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x01EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x01F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0204(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0205(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_953D[0x2];                                     // 0x0206(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0210(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x021C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0228(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0234(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0250(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0264(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0268(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0274(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x0280(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ENpcComponent_C_GetEnemyGroundTransform) == 0x000010, "Wrong alignment on BP_ENpcComponent_C_GetEnemyGroundTransform");
static_assert(sizeof(BP_ENpcComponent_C_GetEnemyGroundTransform) == 0x000290, "Wrong size on BP_ENpcComponent_C_GetEnemyGroundTransform");
static_assert(offsetof(BP_ENpcComponent_C_GetEnemyGroundTransform, Transform) == 0x000000, "Member 'BP_ENpcComponent_C_GetEnemyGroundTransform::Transform' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_GetEnemyGroundTransform, Return) == 0x000030, "Member 'BP_ENpcComponent_C_GetEnemyGroundTransform::Return' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_GetEnemyGroundTransform, LLocation) == 0x000060, "Member 'BP_ENpcComponent_C_GetEnemyGroundTransform::LLocation' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_GetEnemyGroundTransform, LTransform) == 0x000070, "Member 'BP_ENpcComponent_C_GetEnemyGroundTransform::LTransform' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_GetEnemyGroundTransform, Temp_object_Variable) == 0x0000A0, "Member 'BP_ENpcComponent_C_GetEnemyGroundTransform::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_GetEnemyGroundTransform, K2Node_MakeArray_Array) == 0x0000B0, "Member 'BP_ENpcComponent_C_GetEnemyGroundTransform::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_GetEnemyGroundTransform, CallFunc_BreakTransform_Location) == 0x0000C0, "Member 'BP_ENpcComponent_C_GetEnemyGroundTransform::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_GetEnemyGroundTransform, CallFunc_BreakTransform_Rotation) == 0x0000CC, "Member 'BP_ENpcComponent_C_GetEnemyGroundTransform::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_GetEnemyGroundTransform, CallFunc_BreakTransform_Scale) == 0x0000D8, "Member 'BP_ENpcComponent_C_GetEnemyGroundTransform::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_GetEnemyGroundTransform, CallFunc_BreakRotator_Roll) == 0x0000E4, "Member 'BP_ENpcComponent_C_GetEnemyGroundTransform::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_GetEnemyGroundTransform, CallFunc_BreakRotator_Pitch) == 0x0000E8, "Member 'BP_ENpcComponent_C_GetEnemyGroundTransform::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_GetEnemyGroundTransform, CallFunc_BreakRotator_Yaw) == 0x0000EC, "Member 'BP_ENpcComponent_C_GetEnemyGroundTransform::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_GetEnemyGroundTransform, CallFunc_MakeRotator_ReturnValue) == 0x0000F0, "Member 'BP_ENpcComponent_C_GetEnemyGroundTransform::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_GetEnemyGroundTransform, CallFunc_GetScaledCapsuleHalfHeight_ReturnValue) == 0x0000FC, "Member 'BP_ENpcComponent_C_GetEnemyGroundTransform::CallFunc_GetScaledCapsuleHalfHeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_GetEnemyGroundTransform, CallFunc_MakeTransform_ReturnValue) == 0x000100, "Member 'BP_ENpcComponent_C_GetEnemyGroundTransform::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_GetEnemyGroundTransform, CallFunc_MakeVector_ReturnValue) == 0x000130, "Member 'BP_ENpcComponent_C_GetEnemyGroundTransform::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_GetEnemyGroundTransform, CallFunc_Add_VectorVector_ReturnValue) == 0x00013C, "Member 'BP_ENpcComponent_C_GetEnemyGroundTransform::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_GetEnemyGroundTransform, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000148, "Member 'BP_ENpcComponent_C_GetEnemyGroundTransform::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_GetEnemyGroundTransform, CallFunc_LineTraceSingleForObjects_OutHit) == 0x000154, "Member 'BP_ENpcComponent_C_GetEnemyGroundTransform::CallFunc_LineTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_GetEnemyGroundTransform, CallFunc_LineTraceSingleForObjects_ReturnValue) == 0x0001DC, "Member 'BP_ENpcComponent_C_GetEnemyGroundTransform::CallFunc_LineTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_GetEnemyGroundTransform, CallFunc_BreakTransform_Location_1) == 0x0001E0, "Member 'BP_ENpcComponent_C_GetEnemyGroundTransform::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_GetEnemyGroundTransform, CallFunc_BreakTransform_Rotation_1) == 0x0001EC, "Member 'BP_ENpcComponent_C_GetEnemyGroundTransform::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_GetEnemyGroundTransform, CallFunc_BreakTransform_Scale_1) == 0x0001F8, "Member 'BP_ENpcComponent_C_GetEnemyGroundTransform::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_GetEnemyGroundTransform, CallFunc_BreakHitResult_bBlockingHit) == 0x000204, "Member 'BP_ENpcComponent_C_GetEnemyGroundTransform::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_GetEnemyGroundTransform, CallFunc_BreakHitResult_bInitialOverlap) == 0x000205, "Member 'BP_ENpcComponent_C_GetEnemyGroundTransform::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_GetEnemyGroundTransform, CallFunc_BreakHitResult_Time) == 0x000208, "Member 'BP_ENpcComponent_C_GetEnemyGroundTransform::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_GetEnemyGroundTransform, CallFunc_BreakHitResult_Distance) == 0x00020C, "Member 'BP_ENpcComponent_C_GetEnemyGroundTransform::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_GetEnemyGroundTransform, CallFunc_BreakHitResult_Location) == 0x000210, "Member 'BP_ENpcComponent_C_GetEnemyGroundTransform::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_GetEnemyGroundTransform, CallFunc_BreakHitResult_ImpactPoint) == 0x00021C, "Member 'BP_ENpcComponent_C_GetEnemyGroundTransform::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_GetEnemyGroundTransform, CallFunc_BreakHitResult_Normal) == 0x000228, "Member 'BP_ENpcComponent_C_GetEnemyGroundTransform::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_GetEnemyGroundTransform, CallFunc_BreakHitResult_ImpactNormal) == 0x000234, "Member 'BP_ENpcComponent_C_GetEnemyGroundTransform::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_GetEnemyGroundTransform, CallFunc_BreakHitResult_PhysMat) == 0x000240, "Member 'BP_ENpcComponent_C_GetEnemyGroundTransform::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_GetEnemyGroundTransform, CallFunc_BreakHitResult_HitActor) == 0x000248, "Member 'BP_ENpcComponent_C_GetEnemyGroundTransform::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_GetEnemyGroundTransform, CallFunc_BreakHitResult_HitComponent) == 0x000250, "Member 'BP_ENpcComponent_C_GetEnemyGroundTransform::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_GetEnemyGroundTransform, CallFunc_BreakHitResult_HitBoneName) == 0x000258, "Member 'BP_ENpcComponent_C_GetEnemyGroundTransform::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_GetEnemyGroundTransform, CallFunc_BreakHitResult_HitItem) == 0x000260, "Member 'BP_ENpcComponent_C_GetEnemyGroundTransform::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_GetEnemyGroundTransform, CallFunc_BreakHitResult_FaceIndex) == 0x000264, "Member 'BP_ENpcComponent_C_GetEnemyGroundTransform::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_GetEnemyGroundTransform, CallFunc_BreakHitResult_TraceStart) == 0x000268, "Member 'BP_ENpcComponent_C_GetEnemyGroundTransform::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_GetEnemyGroundTransform, CallFunc_BreakHitResult_TraceEnd) == 0x000274, "Member 'BP_ENpcComponent_C_GetEnemyGroundTransform::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_GetEnemyGroundTransform, CallFunc_Add_VectorVector_ReturnValue_2) == 0x000280, "Member 'BP_ENpcComponent_C_GetEnemyGroundTransform::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.IsBossEnemy
// 0x0001 (0x0001 - 0x0000)
struct BP_ENpcComponent_C_IsBossEnemy final
{
public:
	bool                                          Param_bBoss;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ENpcComponent_C_IsBossEnemy) == 0x000001, "Wrong alignment on BP_ENpcComponent_C_IsBossEnemy");
static_assert(sizeof(BP_ENpcComponent_C_IsBossEnemy) == 0x000001, "Wrong size on BP_ENpcComponent_C_IsBossEnemy");
static_assert(offsetof(BP_ENpcComponent_C_IsBossEnemy, Param_bBoss) == 0x000000, "Member 'BP_ENpcComponent_C_IsBossEnemy::Param_bBoss' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.IsEnableEnemyMoveRange
// 0x0001 (0x0001 - 0x0000)
struct BP_ENpcComponent_C_IsEnableEnemyMoveRange final
{
public:
	bool                                          bReturn;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ENpcComponent_C_IsEnableEnemyMoveRange) == 0x000001, "Wrong alignment on BP_ENpcComponent_C_IsEnableEnemyMoveRange");
static_assert(sizeof(BP_ENpcComponent_C_IsEnableEnemyMoveRange) == 0x000001, "Wrong size on BP_ENpcComponent_C_IsEnableEnemyMoveRange");
static_assert(offsetof(BP_ENpcComponent_C_IsEnableEnemyMoveRange, bReturn) == 0x000000, "Member 'BP_ENpcComponent_C_IsEnableEnemyMoveRange::bReturn' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.GetDistanceToPlayer
// 0x0050 (0x0050 - 0x0000)
struct BP_ENpcComponent_C_GetDistanceToPlayer final
{
public:
	float                                         Distance;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LDistance;                                         // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSCharacterBase*                       LPlayer;                                           // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSCharacterBase*                       CallFunc_GetPlayer_ReturnValue;                    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_953E[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ENpcComponent_C_GetDistanceToPlayer) == 0x000008, "Wrong alignment on BP_ENpcComponent_C_GetDistanceToPlayer");
static_assert(sizeof(BP_ENpcComponent_C_GetDistanceToPlayer) == 0x000050, "Wrong size on BP_ENpcComponent_C_GetDistanceToPlayer");
static_assert(offsetof(BP_ENpcComponent_C_GetDistanceToPlayer, Distance) == 0x000000, "Member 'BP_ENpcComponent_C_GetDistanceToPlayer::Distance' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_GetDistanceToPlayer, LDistance) == 0x000004, "Member 'BP_ENpcComponent_C_GetDistanceToPlayer::LDistance' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_GetDistanceToPlayer, LPlayer) == 0x000008, "Member 'BP_ENpcComponent_C_GetDistanceToPlayer::LPlayer' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_GetDistanceToPlayer, CallFunc_GetPlayerManager_PlayerManager) == 0x000010, "Member 'BP_ENpcComponent_C_GetDistanceToPlayer::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_GetDistanceToPlayer, CallFunc_GetPlayer_ReturnValue) == 0x000018, "Member 'BP_ENpcComponent_C_GetDistanceToPlayer::CallFunc_GetPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_GetDistanceToPlayer, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000020, "Member 'BP_ENpcComponent_C_GetDistanceToPlayer::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_GetDistanceToPlayer, CallFunc_IsValid_ReturnValue) == 0x00002C, "Member 'BP_ENpcComponent_C_GetDistanceToPlayer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_GetDistanceToPlayer, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000030, "Member 'BP_ENpcComponent_C_GetDistanceToPlayer::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_GetDistanceToPlayer, CallFunc_Subtract_VectorVector_ReturnValue) == 0x00003C, "Member 'BP_ENpcComponent_C_GetDistanceToPlayer::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_GetDistanceToPlayer, CallFunc_VSize_ReturnValue) == 0x000048, "Member 'BP_ENpcComponent_C_GetDistanceToPlayer::CallFunc_VSize_ReturnValue' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.IsInvisibleHPGauge
// 0x0002 (0x0002 - 0x0000)
struct BP_ENpcComponent_C_IsInvisibleHPGauge final
{
public:
	bool                                          bInvisible;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsStealthMode_ReturnValue;                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ENpcComponent_C_IsInvisibleHPGauge) == 0x000001, "Wrong alignment on BP_ENpcComponent_C_IsInvisibleHPGauge");
static_assert(sizeof(BP_ENpcComponent_C_IsInvisibleHPGauge) == 0x000002, "Wrong size on BP_ENpcComponent_C_IsInvisibleHPGauge");
static_assert(offsetof(BP_ENpcComponent_C_IsInvisibleHPGauge, bInvisible) == 0x000000, "Member 'BP_ENpcComponent_C_IsInvisibleHPGauge::bInvisible' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsInvisibleHPGauge, CallFunc_IsStealthMode_ReturnValue) == 0x000001, "Member 'BP_ENpcComponent_C_IsInvisibleHPGauge::CallFunc_IsStealthMode_ReturnValue' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.IsActiveEnpcSAS
// 0x000C (0x000C - 0x0000)
struct BP_ENpcComponent_C_IsActiveEnpcSAS final
{
public:
	E_SASKind                                     Kind;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bActive;                                           // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_953F[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ENpcComponent_C_IsActiveEnpcSAS) == 0x000004, "Wrong alignment on BP_ENpcComponent_C_IsActiveEnpcSAS");
static_assert(sizeof(BP_ENpcComponent_C_IsActiveEnpcSAS) == 0x00000C, "Wrong size on BP_ENpcComponent_C_IsActiveEnpcSAS");
static_assert(offsetof(BP_ENpcComponent_C_IsActiveEnpcSAS, Kind) == 0x000000, "Member 'BP_ENpcComponent_C_IsActiveEnpcSAS::Kind' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsActiveEnpcSAS, bActive) == 0x000001, "Member 'BP_ENpcComponent_C_IsActiveEnpcSAS::bActive' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsActiveEnpcSAS, CallFunc_Array_Find_ReturnValue) == 0x000004, "Member 'BP_ENpcComponent_C_IsActiveEnpcSAS::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsActiveEnpcSAS, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000008, "Member 'BP_ENpcComponent_C_IsActiveEnpcSAS::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.GetSASMaxTime
// 0x003C (0x003C - 0x0000)
struct BP_ENpcComponent_C_GetSASMaxTime final
{
public:
	E_SASKind                                     Kind;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9540[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Time;                                              // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SASKind                                     Temp_byte_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9541[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_2;                             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_3;                             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_4;                             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_5;                             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_6;                             // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_7;                             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_8;                             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_9;                             // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_10;                            // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ENpcComponent_C_GetSASMaxTime) == 0x000004, "Wrong alignment on BP_ENpcComponent_C_GetSASMaxTime");
static_assert(sizeof(BP_ENpcComponent_C_GetSASMaxTime) == 0x00003C, "Wrong size on BP_ENpcComponent_C_GetSASMaxTime");
static_assert(offsetof(BP_ENpcComponent_C_GetSASMaxTime, Kind) == 0x000000, "Member 'BP_ENpcComponent_C_GetSASMaxTime::Kind' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_GetSASMaxTime, Time) == 0x000004, "Member 'BP_ENpcComponent_C_GetSASMaxTime::Time' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_GetSASMaxTime, Temp_byte_Variable) == 0x000008, "Member 'BP_ENpcComponent_C_GetSASMaxTime::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_GetSASMaxTime, Temp_float_Variable) == 0x00000C, "Member 'BP_ENpcComponent_C_GetSASMaxTime::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_GetSASMaxTime, Temp_float_Variable_1) == 0x000010, "Member 'BP_ENpcComponent_C_GetSASMaxTime::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_GetSASMaxTime, Temp_float_Variable_2) == 0x000014, "Member 'BP_ENpcComponent_C_GetSASMaxTime::Temp_float_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_GetSASMaxTime, Temp_float_Variable_3) == 0x000018, "Member 'BP_ENpcComponent_C_GetSASMaxTime::Temp_float_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_GetSASMaxTime, Temp_float_Variable_4) == 0x00001C, "Member 'BP_ENpcComponent_C_GetSASMaxTime::Temp_float_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_GetSASMaxTime, Temp_float_Variable_5) == 0x000020, "Member 'BP_ENpcComponent_C_GetSASMaxTime::Temp_float_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_GetSASMaxTime, Temp_float_Variable_6) == 0x000024, "Member 'BP_ENpcComponent_C_GetSASMaxTime::Temp_float_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_GetSASMaxTime, Temp_float_Variable_7) == 0x000028, "Member 'BP_ENpcComponent_C_GetSASMaxTime::Temp_float_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_GetSASMaxTime, Temp_float_Variable_8) == 0x00002C, "Member 'BP_ENpcComponent_C_GetSASMaxTime::Temp_float_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_GetSASMaxTime, Temp_float_Variable_9) == 0x000030, "Member 'BP_ENpcComponent_C_GetSASMaxTime::Temp_float_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_GetSASMaxTime, Temp_float_Variable_10) == 0x000034, "Member 'BP_ENpcComponent_C_GetSASMaxTime::Temp_float_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_GetSASMaxTime, K2Node_Select_Default) == 0x000038, "Member 'BP_ENpcComponent_C_GetSASMaxTime::K2Node_Select_Default' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.IsEnableDodgeRangeAttack
// 0x0001 (0x0001 - 0x0000)
struct BP_ENpcComponent_C_IsEnableDodgeRangeAttack final
{
public:
	bool                                          bEnable;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ENpcComponent_C_IsEnableDodgeRangeAttack) == 0x000001, "Wrong alignment on BP_ENpcComponent_C_IsEnableDodgeRangeAttack");
static_assert(sizeof(BP_ENpcComponent_C_IsEnableDodgeRangeAttack) == 0x000001, "Wrong size on BP_ENpcComponent_C_IsEnableDodgeRangeAttack");
static_assert(offsetof(BP_ENpcComponent_C_IsEnableDodgeRangeAttack, bEnable) == 0x000000, "Member 'BP_ENpcComponent_C_IsEnableDodgeRangeAttack::bEnable' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.IsReadyDrive
// 0x0020 (0x0020 - 0x0000)
struct BP_ENpcComponent_C_IsReadyDrive final
{
public:
	bool                                          bReady;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActionStatus_Result;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActionStatus_Result_1;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActionStatus_Result_2;                  // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActionStatus_Result_3;                  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9542[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_ENpcInterface_C>  K2Node_DynamicCast_AsBPI_ENpc_Interface;           // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsUniqueCondition_Drive_bOk;              // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ENpcComponent_C_IsReadyDrive) == 0x000008, "Wrong alignment on BP_ENpcComponent_C_IsReadyDrive");
static_assert(sizeof(BP_ENpcComponent_C_IsReadyDrive) == 0x000020, "Wrong size on BP_ENpcComponent_C_IsReadyDrive");
static_assert(offsetof(BP_ENpcComponent_C_IsReadyDrive, bReady) == 0x000000, "Member 'BP_ENpcComponent_C_IsReadyDrive::bReady' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsReadyDrive, CallFunc_IsActionStatus_Result) == 0x000001, "Member 'BP_ENpcComponent_C_IsReadyDrive::CallFunc_IsActionStatus_Result' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsReadyDrive, CallFunc_IsActionStatus_Result_1) == 0x000002, "Member 'BP_ENpcComponent_C_IsReadyDrive::CallFunc_IsActionStatus_Result_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsReadyDrive, CallFunc_IsActionStatus_Result_2) == 0x000003, "Member 'BP_ENpcComponent_C_IsReadyDrive::CallFunc_IsActionStatus_Result_2' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsReadyDrive, CallFunc_IsActionStatus_Result_3) == 0x000004, "Member 'BP_ENpcComponent_C_IsReadyDrive::CallFunc_IsActionStatus_Result_3' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsReadyDrive, CallFunc_BooleanOR_ReturnValue) == 0x000005, "Member 'BP_ENpcComponent_C_IsReadyDrive::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsReadyDrive, K2Node_DynamicCast_AsBPI_ENpc_Interface) == 0x000008, "Member 'BP_ENpcComponent_C_IsReadyDrive::K2Node_DynamicCast_AsBPI_ENpc_Interface' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsReadyDrive, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_ENpcComponent_C_IsReadyDrive::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsReadyDrive, CallFunc_BooleanOR_ReturnValue_1) == 0x000019, "Member 'BP_ENpcComponent_C_IsReadyDrive::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsReadyDrive, CallFunc_IsUniqueCondition_Drive_bOk) == 0x00001A, "Member 'BP_ENpcComponent_C_IsReadyDrive::CallFunc_IsUniqueCondition_Drive_bOk' has a wrong offset!");
static_assert(offsetof(BP_ENpcComponent_C_IsReadyDrive, CallFunc_BooleanOR_ReturnValue_2) == 0x00001B, "Member 'BP_ENpcComponent_C_IsReadyDrive::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");

// Function BP_ENpcComponent.BP_ENpcComponent_C.GetSimulatorWait
// 0x0001 (0x0001 - 0x0000)
struct BP_ENpcComponent_C_GetSimulatorWait final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ENpcComponent_C_GetSimulatorWait) == 0x000001, "Wrong alignment on BP_ENpcComponent_C_GetSimulatorWait");
static_assert(sizeof(BP_ENpcComponent_C_GetSimulatorWait) == 0x000001, "Wrong size on BP_ENpcComponent_C_GetSimulatorWait");
static_assert(offsetof(BP_ENpcComponent_C_GetSimulatorWait, Result) == 0x000000, "Member 'BP_ENpcComponent_C_GetSimulatorWait::Result' has a wrong offset!");

}

