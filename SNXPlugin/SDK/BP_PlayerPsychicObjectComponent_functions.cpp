#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PlayerPsychicObjectComponent

#include "Basic.hpp"

#include "BP_PlayerPsychicObjectComponent_classes.hpp"
#include "BP_PlayerPsychicObjectComponent_parameters.hpp"


namespace SDK
{

// Function BP_PlayerPsychicObjectComponent.BP_PlayerPsychicObjectComponent_C.CaptureSuccess__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAnimMontage*                     Unique_montage                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerPsychicObjectComponent_C::CaptureSuccess__DelegateSignature(class UAnimMontage* Unique_montage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerPsychicObjectComponent_C", "CaptureSuccess__DelegateSignature");

	Params::BP_PlayerPsychicObjectComponent_C_CaptureSuccess__DelegateSignature Parms{};

	Parms.Unique_montage = Unique_montage;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerPsychicObjectComponent.BP_PlayerPsychicObjectComponent_C.UniqueAttackSuccess__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAnimMontage*                     Unique_montage                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerPsychicObjectComponent_C::UniqueAttackSuccess__DelegateSignature(class UAnimMontage* Unique_montage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerPsychicObjectComponent_C", "UniqueAttackSuccess__DelegateSignature");

	Params::BP_PlayerPsychicObjectComponent_C_UniqueAttackSuccess__DelegateSignature Parms{};

	Parms.Unique_montage = Unique_montage;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerPsychicObjectComponent.BP_PlayerPsychicObjectComponent_C.AttractSuccess__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UBP_PlayerPsychicObjectComponent_C::AttractSuccess__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerPsychicObjectComponent_C", "AttractSuccess__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerPsychicObjectComponent.BP_PlayerPsychicObjectComponent_C.ComboAttackStart__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UBP_PlayerPsychicObjectComponent_C::ComboAttackStart__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerPsychicObjectComponent_C", "ComboAttackStart__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerPsychicObjectComponent.BP_PlayerPsychicObjectComponent_C.UniqueInputStart__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UBP_PlayerPsychicObjectComponent_C::UniqueInputStart__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerPsychicObjectComponent_C", "UniqueInputStart__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerPsychicObjectComponent.BP_PlayerPsychicObjectComponent_C.UniqueObjectEnd__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Input_success_in                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PlayerPsychicObjectComponent_C::UniqueObjectEnd__DelegateSignature(bool Input_success_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerPsychicObjectComponent_C", "UniqueObjectEnd__DelegateSignature");

	Params::BP_PlayerPsychicObjectComponent_C_UniqueObjectEnd__DelegateSignature Parms{};

	Parms.Input_success_in = Input_success_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerPsychicObjectComponent.BP_PlayerPsychicObjectComponent_C.UniqueObjectAddGauge__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UBP_PlayerPsychicObjectComponent_C::UniqueObjectAddGauge__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerPsychicObjectComponent_C", "UniqueObjectAddGauge__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerPsychicObjectComponent.BP_PlayerPsychicObjectComponent_C.UniqueObjectControlStart__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_PsychicObjectBasic_C*         Psy_obj_in                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerPsychicObjectComponent_C::UniqueObjectControlStart__DelegateSignature(class ABP_PsychicObjectBasic_C* Psy_obj_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerPsychicObjectComponent_C", "UniqueObjectControlStart__DelegateSignature");

	Params::BP_PlayerPsychicObjectComponent_C_UniqueObjectControlStart__DelegateSignature Parms{};

	Parms.Psy_obj_in = Psy_obj_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerPsychicObjectComponent.BP_PlayerPsychicObjectComponent_C.ExecuteUbergraph_BP_PlayerPsychicObjectComponent
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerPsychicObjectComponent_C::ExecuteUbergraph_BP_PlayerPsychicObjectComponent(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerPsychicObjectComponent_C", "ExecuteUbergraph_BP_PlayerPsychicObjectComponent");

	Params::BP_PlayerPsychicObjectComponent_C_ExecuteUbergraph_BP_PlayerPsychicObjectComponent Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerPsychicObjectComponent.BP_PlayerPsychicObjectComponent_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerPsychicObjectComponent_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerPsychicObjectComponent_C", "ReceiveTick");

	Params::BP_PlayerPsychicObjectComponent_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerPsychicObjectComponent.BP_PlayerPsychicObjectComponent_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UBP_PlayerPsychicObjectComponent_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerPsychicObjectComponent_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerPsychicObjectComponent.BP_PlayerPsychicObjectComponent_C.Initialize
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_PlayerPsychicObjectComponent_C::Initialize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerPsychicObjectComponent_C", "Initialize");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerPsychicObjectComponent.BP_PlayerPsychicObjectComponent_C.Update
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PlayerPsychicObjectComponent_C::Update()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerPsychicObjectComponent_C", "Update");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerPsychicObjectComponent.BP_PlayerPsychicObjectComponent_C.Finalize
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PlayerPsychicObjectComponent_C::Finalize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerPsychicObjectComponent_C", "Finalize");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerPsychicObjectComponent.BP_PlayerPsychicObjectComponent_C.InitOwnerType
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PlayerPsychicObjectComponent_C::InitOwnerType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerPsychicObjectComponent_C", "InitOwnerType");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerPsychicObjectComponent.BP_PlayerPsychicObjectComponent_C.CaptureFocusObject
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Unique_obj_in                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Combo_in                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Air_in                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PlayerPsychicObjectComponent_C::CaptureFocusObject(bool Unique_obj_in, bool Combo_in, bool Air_in, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerPsychicObjectComponent_C", "CaptureFocusObject");

	Params::BP_PlayerPsychicObjectComponent_C_CaptureFocusObject Parms{};

	Parms.Unique_obj_in = Unique_obj_in;
	Parms.Combo_in = Combo_in;
	Parms.Air_in = Air_in;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_PlayerPsychicObjectComponent.BP_PlayerPsychicObjectComponent_C.AttackCaptureObject
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Target_actor_in                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Direct_drop_in                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PlayerPsychicObjectComponent_C::AttackCaptureObject(class AActor* Target_actor_in, bool Direct_drop_in, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerPsychicObjectComponent_C", "AttackCaptureObject");

	Params::BP_PlayerPsychicObjectComponent_C_AttackCaptureObject Parms{};

	Parms.Target_actor_in = Target_actor_in;
	Parms.Direct_drop_in = Direct_drop_in;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_PlayerPsychicObjectComponent.BP_PlayerPsychicObjectComponent_C.AttackComboCaptureObject
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Target_actor_in                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Attack_level_in                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Attack_index_in                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Attract_time_in                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UAnimSequence*                    Anim_seq_in                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Air_combo_in                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Enemy_direct_shot_in                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PlayerPsychicObjectComponent_C::AttackComboCaptureObject(class AActor* Target_actor_in, int32 Attack_level_in, int32 Attack_index_in, float Attract_time_in, class UAnimSequence* Anim_seq_in, bool Air_combo_in, bool Enemy_direct_shot_in, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerPsychicObjectComponent_C", "AttackComboCaptureObject");

	Params::BP_PlayerPsychicObjectComponent_C_AttackComboCaptureObject Parms{};

	Parms.Target_actor_in = Target_actor_in;
	Parms.Attack_level_in = Attack_level_in;
	Parms.Attack_index_in = Attack_index_in;
	Parms.Attract_time_in = Attract_time_in;
	Parms.Anim_seq_in = Anim_seq_in;
	Parms.Air_combo_in = Air_combo_in;
	Parms.Enemy_direct_shot_in = Enemy_direct_shot_in;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_PlayerPsychicObjectComponent.BP_PlayerPsychicObjectComponent_C.DetachAttackComboObject
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PlayerPsychicObjectComponent_C::DetachAttackComboObject()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerPsychicObjectComponent_C", "DetachAttackComboObject");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerPsychicObjectComponent.BP_PlayerPsychicObjectComponent_C.GetCurrentPsychicAnimObject
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APsychicAnimObject_C*             Psy_anim_obj                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerPsychicObjectComponent_C::GetCurrentPsychicAnimObject(class APsychicAnimObject_C** Psy_anim_obj)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerPsychicObjectComponent_C", "GetCurrentPsychicAnimObject");

	Params::BP_PlayerPsychicObjectComponent_C_GetCurrentPsychicAnimObject Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Psy_anim_obj != nullptr)
		*Psy_anim_obj = Parms.Psy_anim_obj;
}


// Function BP_PlayerPsychicObjectComponent.BP_PlayerPsychicObjectComponent_C.CancelCaptureObject
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PlayerPsychicObjectComponent_C::CancelCaptureObject()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerPsychicObjectComponent_C", "CancelCaptureObject");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerPsychicObjectComponent.BP_PlayerPsychicObjectComponent_C.AttackBrainFieldObject
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPsychicObjectBrainFieldAttackType      Attack_type_in                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Skill_level_in                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Swing_lerp_in                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   Swing_lerp_time_in                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Swing_update_time_in                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerPsychicObjectComponent_C::AttackBrainFieldObject(EPsychicObjectBrainFieldAttackType Attack_type_in, int32 Skill_level_in, bool Swing_lerp_in, float Swing_lerp_time_in, float Swing_update_time_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerPsychicObjectComponent_C", "AttackBrainFieldObject");

	Params::BP_PlayerPsychicObjectComponent_C_AttackBrainFieldObject Parms{};

	Parms.Attack_type_in = Attack_type_in;
	Parms.Skill_level_in = Skill_level_in;
	Parms.Swing_lerp_in = Swing_lerp_in;
	Parms.Swing_lerp_time_in = Swing_lerp_time_in;
	Parms.Swing_update_time_in = Swing_update_time_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerPsychicObjectComponent.BP_PlayerPsychicObjectComponent_C.CancelUniqueObjectInput
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PlayerPsychicObjectComponent_C::CancelUniqueObjectInput()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerPsychicObjectComponent_C", "CancelUniqueObjectInput");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerPsychicObjectComponent.BP_PlayerPsychicObjectComponent_C.CancelPsychicObjectAction
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Event_in                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Psychic_battle_in                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PlayerPsychicObjectComponent_C::CancelPsychicObjectAction(bool Event_in, bool Psychic_battle_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerPsychicObjectComponent_C", "CancelPsychicObjectAction");

	Params::BP_PlayerPsychicObjectComponent_C_CancelPsychicObjectAction Parms{};

	Parms.Event_in = Event_in;
	Parms.Psychic_battle_in = Psychic_battle_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerPsychicObjectComponent.BP_PlayerPsychicObjectComponent_C.GetPsychicObject
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Unq_obj_in                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Focus_in                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Capture_in                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Attack_in                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class ABP_PsychicObjectBasic_C*         Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerPsychicObjectComponent_C::GetPsychicObject(bool Unq_obj_in, bool Focus_in, bool Capture_in, bool Attack_in, class ABP_PsychicObjectBasic_C** Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerPsychicObjectComponent_C", "GetPsychicObject");

	Params::BP_PlayerPsychicObjectComponent_C_GetPsychicObject Parms{};

	Parms.Unq_obj_in = Unq_obj_in;
	Parms.Focus_in = Focus_in;
	Parms.Capture_in = Capture_in;
	Parms.Attack_in = Attack_in;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_PlayerPsychicObjectComponent.BP_PlayerPsychicObjectComponent_C.GetPsychicObjectState
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Unq_obj_in                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Focus_in                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Capture_in                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Attack_in                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// EPsychicObjectState                     State                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerPsychicObjectComponent_C::GetPsychicObjectState(bool Unq_obj_in, bool Focus_in, bool Capture_in, bool Attack_in, EPsychicObjectState* State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerPsychicObjectComponent_C", "GetPsychicObjectState");

	Params::BP_PlayerPsychicObjectComponent_C_GetPsychicObjectState Parms{};

	Parms.Unq_obj_in = Unq_obj_in;
	Parms.Focus_in = Focus_in;
	Parms.Capture_in = Capture_in;
	Parms.Attack_in = Attack_in;

	UObject::ProcessEvent(Func, &Parms);

	if (State != nullptr)
		*State = Parms.State;
}


// Function BP_PlayerPsychicObjectComponent.BP_PlayerPsychicObjectComponent_C.GetCapturePsychicObject
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_PsychicObjectBasic_C*         Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerPsychicObjectComponent_C::GetCapturePsychicObject(class ABP_PsychicObjectBasic_C** Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerPsychicObjectComponent_C", "GetCapturePsychicObject");

	Params::BP_PlayerPsychicObjectComponent_C_GetCapturePsychicObject Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_PlayerPsychicObjectComponent.BP_PlayerPsychicObjectComponent_C.GetCapturePsychicObjectState
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Unq_obj_in                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// EPsychicObjectState                     State                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerPsychicObjectComponent_C::GetCapturePsychicObjectState(bool Unq_obj_in, EPsychicObjectState* State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerPsychicObjectComponent_C", "GetCapturePsychicObjectState");

	Params::BP_PlayerPsychicObjectComponent_C_GetCapturePsychicObjectState Parms{};

	Parms.Unq_obj_in = Unq_obj_in;

	UObject::ProcessEvent(Func, &Parms);

	if (State != nullptr)
		*State = Parms.State;
}


// Function BP_PlayerPsychicObjectComponent.BP_PlayerPsychicObjectComponent_C.IsNormalObjectFocus
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PlayerPsychicObjectComponent_C::IsNormalObjectFocus(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerPsychicObjectComponent_C", "IsNormalObjectFocus");

	Params::BP_PlayerPsychicObjectComponent_C_IsNormalObjectFocus Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_PlayerPsychicObjectComponent.BP_PlayerPsychicObjectComponent_C.IsUniqueObjectFocus
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PlayerPsychicObjectComponent_C::IsUniqueObjectFocus(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerPsychicObjectComponent_C", "IsUniqueObjectFocus");

	Params::BP_PlayerPsychicObjectComponent_C_IsUniqueObjectFocus Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_PlayerPsychicObjectComponent.BP_PlayerPsychicObjectComponent_C.IsMapGimmickFocus
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PlayerPsychicObjectComponent_C::IsMapGimmickFocus(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerPsychicObjectComponent_C", "IsMapGimmickFocus");

	Params::BP_PlayerPsychicObjectComponent_C_IsMapGimmickFocus Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_PlayerPsychicObjectComponent.BP_PlayerPsychicObjectComponent_C.IsFocusPsychicObjectUnique
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PlayerPsychicObjectComponent_C::IsFocusPsychicObjectUnique(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerPsychicObjectComponent_C", "IsFocusPsychicObjectUnique");

	Params::BP_PlayerPsychicObjectComponent_C_IsFocusPsychicObjectUnique Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_PlayerPsychicObjectComponent.BP_PlayerPsychicObjectComponent_C.CanCapture
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Unq_obj_in                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PlayerPsychicObjectComponent_C::CanCapture(bool Unq_obj_in, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerPsychicObjectComponent_C", "CanCapture");

	Params::BP_PlayerPsychicObjectComponent_C_CanCapture Parms{};

	Parms.Unq_obj_in = Unq_obj_in;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_PlayerPsychicObjectComponent.BP_PlayerPsychicObjectComponent_C.IsNormalObjectCapture
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PlayerPsychicObjectComponent_C::IsNormalObjectCapture(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerPsychicObjectComponent_C", "IsNormalObjectCapture");

	Params::BP_PlayerPsychicObjectComponent_C_IsNormalObjectCapture Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_PlayerPsychicObjectComponent.BP_PlayerPsychicObjectComponent_C.IsUniqueObjectCapture
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PlayerPsychicObjectComponent_C::IsUniqueObjectCapture(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerPsychicObjectComponent_C", "IsUniqueObjectCapture");

	Params::BP_PlayerPsychicObjectComponent_C_IsUniqueObjectCapture Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_PlayerPsychicObjectComponent.BP_PlayerPsychicObjectComponent_C.SetBrainField
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PlayerPsychicObjectComponent_C::SetBrainField(bool Flag_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerPsychicObjectComponent_C", "SetBrainField");

	Params::BP_PlayerPsychicObjectComponent_C_SetBrainField Parms{};

	Parms.Flag_in = Flag_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerPsychicObjectComponent.BP_PlayerPsychicObjectComponent_C.UpdateBrainField
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PlayerPsychicObjectComponent_C::UpdateBrainField()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerPsychicObjectComponent_C", "UpdateBrainField");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerPsychicObjectComponent.BP_PlayerPsychicObjectComponent_C.GetBrainFieldOffsetPos
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Index_in                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ABP_PsychicObjectBasic_C*         Psy_obj_in                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Offset_pos                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerPsychicObjectComponent_C::GetBrainFieldOffsetPos(int32 Index_in, class ABP_PsychicObjectBasic_C* Psy_obj_in, struct FVector* Offset_pos)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerPsychicObjectComponent_C", "GetBrainFieldOffsetPos");

	Params::BP_PlayerPsychicObjectComponent_C_GetBrainFieldOffsetPos Parms{};

	Parms.Index_in = Index_in;
	Parms.Psy_obj_in = Psy_obj_in;

	UObject::ProcessEvent(Func, &Parms);

	if (Offset_pos != nullptr)
		*Offset_pos = std::move(Parms.Offset_pos);
}


// Function BP_PlayerPsychicObjectComponent.BP_PlayerPsychicObjectComponent_C.InitBrainFieldObjList
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_PlayerPsychicObjectComponent_C::InitBrainFieldObjList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerPsychicObjectComponent_C", "InitBrainFieldObjList");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerPsychicObjectComponent.BP_PlayerPsychicObjectComponent_C.ReplenishBrainFieldObj
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Index_in                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Replenish_time_in                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerPsychicObjectComponent_C::ReplenishBrainFieldObj(int32 Index_in, float Replenish_time_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerPsychicObjectComponent_C", "ReplenishBrainFieldObj");

	Params::BP_PlayerPsychicObjectComponent_C_ReplenishBrainFieldObj Parms{};

	Parms.Index_in = Index_in;
	Parms.Replenish_time_in = Replenish_time_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerPsychicObjectComponent.BP_PlayerPsychicObjectComponent_C.SetAttackBrainFieldObj
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_PsychicObjectBasic_C*         Psy_obj_in                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Index_in                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Skill_level_in                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EPsychicObjectBrainFieldAttackType      Attack_type_in                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Attack_collision_in                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   Attack_index_in                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Attract_time_in                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerPsychicObjectComponent_C::SetAttackBrainFieldObj(class ABP_PsychicObjectBasic_C* Psy_obj_in, int32 Index_in, int32 Skill_level_in, EPsychicObjectBrainFieldAttackType Attack_type_in, bool Attack_collision_in, int32 Attack_index_in, float Attract_time_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerPsychicObjectComponent_C", "SetAttackBrainFieldObj");

	Params::BP_PlayerPsychicObjectComponent_C_SetAttackBrainFieldObj Parms{};

	Parms.Psy_obj_in = Psy_obj_in;
	Parms.Index_in = Index_in;
	Parms.Skill_level_in = Skill_level_in;
	Parms.Attack_type_in = Attack_type_in;
	Parms.Attack_collision_in = Attack_collision_in;
	Parms.Attack_index_in = Attack_index_in;
	Parms.Attract_time_in = Attract_time_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerPsychicObjectComponent.BP_PlayerPsychicObjectComponent_C.SetBrainFieldDropLevel
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Level                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerPsychicObjectComponent_C::SetBrainFieldDropLevel(int32 Level)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerPsychicObjectComponent_C", "SetBrainFieldDropLevel");

	Params::BP_PlayerPsychicObjectComponent_C_SetBrainFieldDropLevel Parms{};

	Parms.Level = Level;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerPsychicObjectComponent.BP_PlayerPsychicObjectComponent_C.AttackBrainFieldDrop
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PlayerPsychicObjectComponent_C::AttackBrainFieldDrop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerPsychicObjectComponent_C", "AttackBrainFieldDrop");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerPsychicObjectComponent.BP_PlayerPsychicObjectComponent_C.CancelBrainFieldDrop
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PlayerPsychicObjectComponent_C::CancelBrainFieldDrop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerPsychicObjectComponent_C", "CancelBrainFieldDrop");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerPsychicObjectComponent.BP_PlayerPsychicObjectComponent_C.ReportDropObjWait
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_PsychicObjectBasic_C*         Psy_obj_in                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerPsychicObjectComponent_C::ReportDropObjWait(class ABP_PsychicObjectBasic_C* Psy_obj_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerPsychicObjectComponent_C", "ReportDropObjWait");

	Params::BP_PlayerPsychicObjectComponent_C_ReportDropObjWait Parms{};

	Parms.Psy_obj_in = Psy_obj_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerPsychicObjectComponent.BP_PlayerPsychicObjectComponent_C.ReportDropObjHit
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_PsychicObjectBasic_C*         Psy_obj_in                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerPsychicObjectComponent_C::ReportDropObjHit(class ABP_PsychicObjectBasic_C* Psy_obj_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerPsychicObjectComponent_C", "ReportDropObjHit");

	Params::BP_PlayerPsychicObjectComponent_C_ReportDropObjHit Parms{};

	Parms.Psy_obj_in = Psy_obj_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerPsychicObjectComponent.BP_PlayerPsychicObjectComponent_C.SetEnpcOld
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PlayerPsychicObjectComponent_C::SetEnpcOld(bool Flag_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerPsychicObjectComponent_C", "SetEnpcOld");

	Params::BP_PlayerPsychicObjectComponent_C_SetEnpcOld Parms{};

	Parms.Flag_in = Flag_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerPsychicObjectComponent.BP_PlayerPsychicObjectComponent_C.SearchNpcObject
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Unq_obj                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PlayerPsychicObjectComponent_C::SearchNpcObject(bool Unq_obj, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerPsychicObjectComponent_C", "SearchNpcObject");

	Params::BP_PlayerPsychicObjectComponent_C_SearchNpcObject Parms{};

	Parms.Unq_obj = Unq_obj;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_PlayerPsychicObjectComponent.BP_PlayerPsychicObjectComponent_C.CheckNpcObject
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Unq_obj_in                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Chk_capture_in                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Chk_attack_in                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PlayerPsychicObjectComponent_C::CheckNpcObject(bool Unq_obj_in, bool Chk_capture_in, bool Chk_attack_in, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerPsychicObjectComponent_C", "CheckNpcObject");

	Params::BP_PlayerPsychicObjectComponent_C_CheckNpcObject Parms{};

	Parms.Unq_obj_in = Unq_obj_in;
	Parms.Chk_capture_in = Chk_capture_in;
	Parms.Chk_attack_in = Chk_attack_in;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_PlayerPsychicObjectComponent.BP_PlayerPsychicObjectComponent_C.SetSasKind
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_SASKind                               Sas_kind_in                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PlayerPsychicObjectComponent_C::SetSasKind(E_SASKind Sas_kind_in, bool Flag_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerPsychicObjectComponent_C", "SetSasKind");

	Params::BP_PlayerPsychicObjectComponent_C_SetSasKind Parms{};

	Parms.Sas_kind_in = Sas_kind_in;
	Parms.Flag_in = Flag_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerPsychicObjectComponent.BP_PlayerPsychicObjectComponent_C.GetSasKind
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// E_SASKind                               Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerPsychicObjectComponent_C::GetSasKind(E_SASKind* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerPsychicObjectComponent_C", "GetSasKind");

	Params::BP_PlayerPsychicObjectComponent_C_GetSasKind Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_PlayerPsychicObjectComponent.BP_PlayerPsychicObjectComponent_C.CheckSasCopyParameter
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   Copy_count                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerPsychicObjectComponent_C::CheckSasCopyParameter(bool* Return, int32* Copy_count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerPsychicObjectComponent_C", "CheckSasCopyParameter");

	Params::BP_PlayerPsychicObjectComponent_C_CheckSasCopyParameter Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;

	if (Copy_count != nullptr)
		*Copy_count = Parms.Copy_count;
}


// Function BP_PlayerPsychicObjectComponent.BP_PlayerPsychicObjectComponent_C.SetBrainFieldReplenishTimer
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PlayerPsychicObjectComponent_C::SetBrainFieldReplenishTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerPsychicObjectComponent_C", "SetBrainFieldReplenishTimer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerPsychicObjectComponent.BP_PlayerPsychicObjectComponent_C.DebugDrawBrainFieldInfo
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PlayerPsychicObjectComponent_C::DebugDrawBrainFieldInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerPsychicObjectComponent_C", "DebugDrawBrainFieldInfo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerPsychicObjectComponent.BP_PlayerPsychicObjectComponent_C.AnimNotifyFirstAttack
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PlayerPsychicObjectComponent_C::AnimNotifyFirstAttack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerPsychicObjectComponent_C", "AnimNotifyFirstAttack");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerPsychicObjectComponent.BP_PlayerPsychicObjectComponent_C.AnimNotifyAttackInterpolate
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Interpolate_time_in                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerPsychicObjectComponent_C::AnimNotifyAttackInterpolate(float Interpolate_time_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerPsychicObjectComponent_C", "AnimNotifyAttackInterpolate");

	Params::BP_PlayerPsychicObjectComponent_C_AnimNotifyAttackInterpolate Parms{};

	Parms.Interpolate_time_in = Interpolate_time_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerPsychicObjectComponent.BP_PlayerPsychicObjectComponent_C.AttackBrainFieldThrow
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPsychicObjectBrainFieldAttackType      Attack_type_in                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Skill_level_in                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerPsychicObjectComponent_C::AttackBrainFieldThrow(EPsychicObjectBrainFieldAttackType Attack_type_in, int32 Skill_level_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerPsychicObjectComponent_C", "AttackBrainFieldThrow");

	Params::BP_PlayerPsychicObjectComponent_C_AttackBrainFieldThrow Parms{};

	Parms.Attack_type_in = Attack_type_in;
	Parms.Skill_level_in = Skill_level_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerPsychicObjectComponent.BP_PlayerPsychicObjectComponent_C.AttackBrainFieldSwing
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPsychicObjectBrainFieldAttackType      Attack_type_in                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Skill_level_in                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Swing_lerp_in                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   Swing_lerp_time_in                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Swing_update_time_in                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerPsychicObjectComponent_C::AttackBrainFieldSwing(EPsychicObjectBrainFieldAttackType Attack_type_in, int32 Skill_level_in, bool Swing_lerp_in, float Swing_lerp_time_in, float Swing_update_time_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerPsychicObjectComponent_C", "AttackBrainFieldSwing");

	Params::BP_PlayerPsychicObjectComponent_C_AttackBrainFieldSwing Parms{};

	Parms.Attack_type_in = Attack_type_in;
	Parms.Skill_level_in = Skill_level_in;
	Parms.Swing_lerp_in = Swing_lerp_in;
	Parms.Swing_lerp_time_in = Swing_lerp_time_in;
	Parms.Swing_update_time_in = Swing_update_time_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerPsychicObjectComponent.BP_PlayerPsychicObjectComponent_C.SetBrainFieldFirstSwing
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class ABP_PsychicObjectBasic_C*         Psy_obj_in                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           Animation_name_in                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    Force_off_in                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PlayerPsychicObjectComponent_C::SetBrainFieldFirstSwing(bool Flag_in, class ABP_PsychicObjectBasic_C* Psy_obj_in, const class FString& Animation_name_in, bool Force_off_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerPsychicObjectComponent_C", "SetBrainFieldFirstSwing");

	Params::BP_PlayerPsychicObjectComponent_C_SetBrainFieldFirstSwing Parms{};

	Parms.Flag_in = Flag_in;
	Parms.Psy_obj_in = Psy_obj_in;
	Parms.Animation_name_in = std::move(Animation_name_in);
	Parms.Force_off_in = Force_off_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerPsychicObjectComponent.BP_PlayerPsychicObjectComponent_C.SetPsychicFieldCapture
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Capture_num_in                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerPsychicObjectComponent_C::SetPsychicFieldCapture(int32 Capture_num_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerPsychicObjectComponent_C", "SetPsychicFieldCapture");

	Params::BP_PlayerPsychicObjectComponent_C_SetPsychicFieldCapture Parms{};

	Parms.Capture_num_in = Capture_num_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerPsychicObjectComponent.BP_PlayerPsychicObjectComponent_C.IsPsychicFieldCaptureFinish
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Finish                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PlayerPsychicObjectComponent_C::IsPsychicFieldCaptureFinish(bool* Finish)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerPsychicObjectComponent_C", "IsPsychicFieldCaptureFinish");

	Params::BP_PlayerPsychicObjectComponent_C_IsPsychicFieldCaptureFinish Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Finish != nullptr)
		*Finish = Parms.Finish;
}


// Function BP_PlayerPsychicObjectComponent.BP_PlayerPsychicObjectComponent_C.SetPsychicFieldAttract
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PlayerPsychicObjectComponent_C::SetPsychicFieldAttract()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerPsychicObjectComponent_C", "SetPsychicFieldAttract");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerPsychicObjectComponent.BP_PlayerPsychicObjectComponent_C.SetPsychicFieldThrow
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PlayerPsychicObjectComponent_C::SetPsychicFieldThrow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerPsychicObjectComponent_C", "SetPsychicFieldThrow");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerPsychicObjectComponent.BP_PlayerPsychicObjectComponent_C.CancelPsychicField
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PlayerPsychicObjectComponent_C::CancelPsychicField()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerPsychicObjectComponent_C", "CancelPsychicField");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerPsychicObjectComponent.BP_PlayerPsychicObjectComponent_C.GetFocusUniqueObjectMontageOld
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPsychicObjectUniqueMontageIndex        Montage_index_in                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Left_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UAnimMontage*                     Unique_montage                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerPsychicObjectComponent_C::GetFocusUniqueObjectMontageOld(EPsychicObjectUniqueMontageIndex Montage_index_in, bool Left_in, class UAnimMontage** Unique_montage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerPsychicObjectComponent_C", "GetFocusUniqueObjectMontageOld");

	Params::BP_PlayerPsychicObjectComponent_C_GetFocusUniqueObjectMontageOld Parms{};

	Parms.Montage_index_in = Montage_index_in;
	Parms.Left_in = Left_in;

	UObject::ProcessEvent(Func, &Parms);

	if (Unique_montage != nullptr)
		*Unique_montage = Parms.Unique_montage;
}


// Function BP_PlayerPsychicObjectComponent.BP_PlayerPsychicObjectComponent_C.IsNewObjectSystem
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PlayerPsychicObjectComponent_C::IsNewObjectSystem(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerPsychicObjectComponent_C", "IsNewObjectSystem");

	Params::BP_PlayerPsychicObjectComponent_C_IsNewObjectSystem Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_PlayerPsychicObjectComponent.BP_PlayerPsychicObjectComponent_C.isUnqObjTemp
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Unq_obj_in                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PlayerPsychicObjectComponent_C::IsUnqObjTemp(bool Unq_obj_in, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerPsychicObjectComponent_C", "isUnqObjTemp");

	Params::BP_PlayerPsychicObjectComponent_C_IsUnqObjTemp Parms{};

	Parms.Unq_obj_in = Unq_obj_in;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_PlayerPsychicObjectComponent.BP_PlayerPsychicObjectComponent_C.SetUniqueObjectCamera
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class AActor*                           Obj_actor_in                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Socket_type_in                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Control_type_in                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Remote_type_in                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    brain_field_drop_type_in                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PlayerPsychicObjectComponent_C::SetUniqueObjectCamera(bool Flag_in, class AActor* Obj_actor_in, bool Socket_type_in, bool Control_type_in, bool Remote_type_in, bool brain_field_drop_type_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerPsychicObjectComponent_C", "SetUniqueObjectCamera");

	Params::BP_PlayerPsychicObjectComponent_C_SetUniqueObjectCamera Parms{};

	Parms.Flag_in = Flag_in;
	Parms.Obj_actor_in = Obj_actor_in;
	Parms.Socket_type_in = Socket_type_in;
	Parms.Control_type_in = Control_type_in;
	Parms.Remote_type_in = Remote_type_in;
	Parms.brain_field_drop_type_in = brain_field_drop_type_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerPsychicObjectComponent.BP_PlayerPsychicObjectComponent_C.GetBrainFieldDropTypeCameraParameter
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FCameraUniqueObjectParameter     Camera_parameter                                       (Parm, OutParm)

void UBP_PlayerPsychicObjectComponent_C::GetBrainFieldDropTypeCameraParameter(struct FCameraUniqueObjectParameter* Camera_parameter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerPsychicObjectComponent_C", "GetBrainFieldDropTypeCameraParameter");

	Params::BP_PlayerPsychicObjectComponent_C_GetBrainFieldDropTypeCameraParameter Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Camera_parameter != nullptr)
		*Camera_parameter = std::move(Parms.Camera_parameter);
}


// Function BP_PlayerPsychicObjectComponent.BP_PlayerPsychicObjectComponent_C.CalcBrainFieldSwingPos
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_PlayerPsychicObjectComponent_C::CalcBrainFieldSwingPos()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerPsychicObjectComponent_C", "CalcBrainFieldSwingPos");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerPsychicObjectComponent.BP_PlayerPsychicObjectComponent_C.SetBrainFieldSwingEnd
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PlayerPsychicObjectComponent_C::SetBrainFieldSwingEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerPsychicObjectComponent_C", "SetBrainFieldSwingEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerPsychicObjectComponent.BP_PlayerPsychicObjectComponent_C.GetNearestBrainFieldObj
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPsychicObjectBrainFieldAttackType      Attack_type_in                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Skill_level_in                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Obj_num_in                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<int32>                           Tgt_index_list                                         (Parm, OutParm, HasGetValueTypeHash)

void UBP_PlayerPsychicObjectComponent_C::GetNearestBrainFieldObj(EPsychicObjectBrainFieldAttackType Attack_type_in, int32 Skill_level_in, int32 Obj_num_in, TArray<int32>* Tgt_index_list)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerPsychicObjectComponent_C", "GetNearestBrainFieldObj");

	Params::BP_PlayerPsychicObjectComponent_C_GetNearestBrainFieldObj Parms{};

	Parms.Attack_type_in = Attack_type_in;
	Parms.Skill_level_in = Skill_level_in;
	Parms.Obj_num_in = Obj_num_in;

	UObject::ProcessEvent(Func, &Parms);

	if (Tgt_index_list != nullptr)
		*Tgt_index_list = std::move(Parms.Tgt_index_list);
}


// Function BP_PlayerPsychicObjectComponent.BP_PlayerPsychicObjectComponent_C.GetFocusMapGimmick
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_MapGimmickObjectBase_C*       MapGimmick                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerPsychicObjectComponent_C::GetFocusMapGimmick(class ABP_MapGimmickObjectBase_C** MapGimmick)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerPsychicObjectComponent_C", "GetFocusMapGimmick");

	Params::BP_PlayerPsychicObjectComponent_C_GetFocusMapGimmick Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (MapGimmick != nullptr)
		*MapGimmick = Parms.MapGimmick;
}


// Function BP_PlayerPsychicObjectComponent.BP_PlayerPsychicObjectComponent_C.PrevEventCancel
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PlayerPsychicObjectComponent_C::PrevEventCancel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerPsychicObjectComponent_C", "PrevEventCancel");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerPsychicObjectComponent.BP_PlayerPsychicObjectComponent_C.PostEventCancel
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PlayerPsychicObjectComponent_C::PostEventCancel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerPsychicObjectComponent_C", "PostEventCancel");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerPsychicObjectComponent.BP_PlayerPsychicObjectComponent_C.StartEventCancel
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PlayerPsychicObjectComponent_C::StartEventCancel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerPsychicObjectComponent_C", "StartEventCancel");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerPsychicObjectComponent.BP_PlayerPsychicObjectComponent_C.EndEventCancel
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PlayerPsychicObjectComponent_C::EndEventCancel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerPsychicObjectComponent_C", "EndEventCancel");

	UObject::ProcessEvent(Func, nullptr);
}

}

