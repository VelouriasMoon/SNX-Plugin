#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_EnemyVisionFogComponent

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "BattlePrototype_structs.hpp"


namespace SDK::Params
{

// Function BP_EnemyVisionFogComponent.BP_EnemyVisionFogComponent_C.ExecuteUbergraph_BP_EnemyVisionFogComponent
// 0x0078 (0x0078 - 0x0000)
struct BP_EnemyVisionFogComponent_C_ExecuteUbergraph_BP_EnemyVisionFogComponent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_92EA[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftObjectPtr<class UParticleSystem>> K2Node_MakeArray_Array;                            // 0x0008(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_92EB[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UParticleSystem>         CallFunc_Array_Get_Item;                           // 0x0028(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_92EC[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue;               // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        K2Node_DynamicCast_AsParticle_System;              // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_92ED[0x2];                                     // 0x006A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_92EE[0x3];                                     // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EnemyVisionFogComponent_C_ExecuteUbergraph_BP_EnemyVisionFogComponent) == 0x000008, "Wrong alignment on BP_EnemyVisionFogComponent_C_ExecuteUbergraph_BP_EnemyVisionFogComponent");
static_assert(sizeof(BP_EnemyVisionFogComponent_C_ExecuteUbergraph_BP_EnemyVisionFogComponent) == 0x000078, "Wrong size on BP_EnemyVisionFogComponent_C_ExecuteUbergraph_BP_EnemyVisionFogComponent");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_ExecuteUbergraph_BP_EnemyVisionFogComponent, EntryPoint) == 0x000000, "Member 'BP_EnemyVisionFogComponent_C_ExecuteUbergraph_BP_EnemyVisionFogComponent::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_ExecuteUbergraph_BP_EnemyVisionFogComponent, K2Node_MakeArray_Array) == 0x000008, "Member 'BP_EnemyVisionFogComponent_C_ExecuteUbergraph_BP_EnemyVisionFogComponent::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_ExecuteUbergraph_BP_EnemyVisionFogComponent, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BP_EnemyVisionFogComponent_C_ExecuteUbergraph_BP_EnemyVisionFogComponent::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_ExecuteUbergraph_BP_EnemyVisionFogComponent, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'BP_EnemyVisionFogComponent_C_ExecuteUbergraph_BP_EnemyVisionFogComponent::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_ExecuteUbergraph_BP_EnemyVisionFogComponent, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'BP_EnemyVisionFogComponent_C_ExecuteUbergraph_BP_EnemyVisionFogComponent::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_ExecuteUbergraph_BP_EnemyVisionFogComponent, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_EnemyVisionFogComponent_C_ExecuteUbergraph_BP_EnemyVisionFogComponent::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_ExecuteUbergraph_BP_EnemyVisionFogComponent, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000050, "Member 'BP_EnemyVisionFogComponent_C_ExecuteUbergraph_BP_EnemyVisionFogComponent::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_ExecuteUbergraph_BP_EnemyVisionFogComponent, CallFunc_LoadSoftObject_ReturnValue) == 0x000058, "Member 'BP_EnemyVisionFogComponent_C_ExecuteUbergraph_BP_EnemyVisionFogComponent::CallFunc_LoadSoftObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_ExecuteUbergraph_BP_EnemyVisionFogComponent, K2Node_DynamicCast_AsParticle_System) == 0x000060, "Member 'BP_EnemyVisionFogComponent_C_ExecuteUbergraph_BP_EnemyVisionFogComponent::K2Node_DynamicCast_AsParticle_System' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_ExecuteUbergraph_BP_EnemyVisionFogComponent, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'BP_EnemyVisionFogComponent_C_ExecuteUbergraph_BP_EnemyVisionFogComponent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_ExecuteUbergraph_BP_EnemyVisionFogComponent, CallFunc_Less_IntInt_ReturnValue) == 0x000069, "Member 'BP_EnemyVisionFogComponent_C_ExecuteUbergraph_BP_EnemyVisionFogComponent::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_ExecuteUbergraph_BP_EnemyVisionFogComponent, CallFunc_Add_IntInt_ReturnValue) == 0x00006C, "Member 'BP_EnemyVisionFogComponent_C_ExecuteUbergraph_BP_EnemyVisionFogComponent::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_ExecuteUbergraph_BP_EnemyVisionFogComponent, K2Node_SwitchInteger_CmpSuccess) == 0x000070, "Member 'BP_EnemyVisionFogComponent_C_ExecuteUbergraph_BP_EnemyVisionFogComponent::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_ExecuteUbergraph_BP_EnemyVisionFogComponent, K2Node_Event_DeltaSeconds) == 0x000074, "Member 'BP_EnemyVisionFogComponent_C_ExecuteUbergraph_BP_EnemyVisionFogComponent::K2Node_Event_DeltaSeconds' has a wrong offset!");

// Function BP_EnemyVisionFogComponent.BP_EnemyVisionFogComponent_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_EnemyVisionFogComponent_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EnemyVisionFogComponent_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_EnemyVisionFogComponent_C_ReceiveTick");
static_assert(sizeof(BP_EnemyVisionFogComponent_C_ReceiveTick) == 0x000004, "Wrong size on BP_EnemyVisionFogComponent_C_ReceiveTick");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_EnemyVisionFogComponent_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_EnemyVisionFogComponent.BP_EnemyVisionFogComponent_C.Start
// 0x00A8 (0x00A8 - 0x0000)
struct BP_EnemyVisionFogComponent_C_Start final
{
public:
	float                                         FogStartSeconds;                                   // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FogLoopSeconds;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FogEndSeconds;                                     // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SpawnLocation;                                     // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ArgIsAllArea;                                      // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_92EF[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Param_ForceEnableTime;                             // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_92F0[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_92F1[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ABP_EnemyManager_C*                     CallFunc_GetEnemyManager_Manager;                  // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_92F2[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_92F3[0x6];                                     // 0x0062(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_GetSkeletalMeshFromActor_ReturnValue;     // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_92F4[0x7];                                     // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URSAtomComponentBase*                   CallFunc_PlaySoundAttachedRS_ReturnValue;          // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisionFog_IsVisionFog;                  // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_92F5[0x7];                                     // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PostProcessManager_C*               CallFunc_GetPostProcessManager_Manager;            // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyVisionFogComponent_C_Start) == 0x000008, "Wrong alignment on BP_EnemyVisionFogComponent_C_Start");
static_assert(sizeof(BP_EnemyVisionFogComponent_C_Start) == 0x0000A8, "Wrong size on BP_EnemyVisionFogComponent_C_Start");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Start, FogStartSeconds) == 0x000000, "Member 'BP_EnemyVisionFogComponent_C_Start::FogStartSeconds' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Start, FogLoopSeconds) == 0x000004, "Member 'BP_EnemyVisionFogComponent_C_Start::FogLoopSeconds' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Start, FogEndSeconds) == 0x000008, "Member 'BP_EnemyVisionFogComponent_C_Start::FogEndSeconds' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Start, SpawnLocation) == 0x00000C, "Member 'BP_EnemyVisionFogComponent_C_Start::SpawnLocation' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Start, ArgIsAllArea) == 0x000018, "Member 'BP_EnemyVisionFogComponent_C_Start::ArgIsAllArea' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Start, Param_ForceEnableTime) == 0x00001C, "Member 'BP_EnemyVisionFogComponent_C_Start::Param_ForceEnableTime' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Start, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000020, "Member 'BP_EnemyVisionFogComponent_C_Start::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Start, CallFunc_GetOwner_ReturnValue) == 0x000028, "Member 'BP_EnemyVisionFogComponent_C_Start::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Start, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BP_EnemyVisionFogComponent_C_Start::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Start, CallFunc_GetDisplayName_ReturnValue) == 0x000038, "Member 'BP_EnemyVisionFogComponent_C_Start::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Start, CallFunc_GetEnemyManager_Manager) == 0x000048, "Member 'BP_EnemyVisionFogComponent_C_Start::CallFunc_GetEnemyManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Start, CallFunc_IsValid_ReturnValue_1) == 0x000050, "Member 'BP_EnemyVisionFogComponent_C_Start::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Start, CallFunc_GetOwner_ReturnValue_1) == 0x000058, "Member 'BP_EnemyVisionFogComponent_C_Start::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Start, CallFunc_IsValid_ReturnValue_2) == 0x000060, "Member 'BP_EnemyVisionFogComponent_C_Start::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Start, CallFunc_IsValid_ReturnValue_3) == 0x000061, "Member 'BP_EnemyVisionFogComponent_C_Start::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Start, CallFunc_GetSkeletalMeshFromActor_ReturnValue) == 0x000068, "Member 'BP_EnemyVisionFogComponent_C_Start::CallFunc_GetSkeletalMeshFromActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Start, CallFunc_IsValid_ReturnValue_4) == 0x000070, "Member 'BP_EnemyVisionFogComponent_C_Start::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Start, CallFunc_PlaySoundAttachedRS_ReturnValue) == 0x000078, "Member 'BP_EnemyVisionFogComponent_C_Start::CallFunc_PlaySoundAttachedRS_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Start, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x000080, "Member 'BP_EnemyVisionFogComponent_C_Start::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Start, CallFunc_IsVisionFog_IsVisionFog) == 0x000090, "Member 'BP_EnemyVisionFogComponent_C_Start::CallFunc_IsVisionFog_IsVisionFog' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Start, CallFunc_GetPostProcessManager_Manager) == 0x000098, "Member 'BP_EnemyVisionFogComponent_C_Start::CallFunc_GetPostProcessManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Start, CallFunc_IsValid_ReturnValue_5) == 0x0000A0, "Member 'BP_EnemyVisionFogComponent_C_Start::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");

// Function BP_EnemyVisionFogComponent.BP_EnemyVisionFogComponent_C.Update
// 0x0248 (0x0248 - 0x0000)
struct BP_EnemyVisionFogComponent_C_Update final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_92F6[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ARSBattlePlayer_C*>              LPlayerList;                                       // 0x0008(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	class FName                                   LClaimantName;                                     // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LIsFog;                                            // 0x0020(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_92F7[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ARSCharacterBase*>               LList;                                             // 0x0028(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	class ARSBattlePlayer_C*                      LPlayer;                                           // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LIsApply;                                          // 0x0040(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_92F8[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_1;                      // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_92F9[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattleEnemy_C*                       K2Node_DynamicCast_AsRSBattle_Enemy;               // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_92FA[0x3];                                     // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_92FB[0x3];                                     // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetAlpha_Alpha;                           // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAlpha_Alpha_1;                         // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAlpha_Alpha_2;                         // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVisionFogID                                  CallFunc_GetUseVisionFogID_ID;                     // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x008D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EVisionFogID                                  CallFunc_GetUseVisionFogID_ID_1;                   // 0x008E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVisionFogID                                  CallFunc_GetUseVisionFogID_ID_2;                   // 0x008F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_2;            // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_92FC[0x1];                                     // 0x0093(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInVisionFog_ReturnValue;                // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_92FD[0x2];                                     // 0x009A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x009C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_EnemyManager_C*                     CallFunc_GetEnemyManager_Manager;                  // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_92FE[0x3];                                     // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x00DC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue_1;              // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue_2;              // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_92FF[0x3];                                     // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_1;                     // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9300[0x4];                                     // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_EnemyManager_C*                     CallFunc_GetEnemyManager_Manager_1;                // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9301[0x7];                                     // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ARSCharacterBase*>               CallFunc_GetEnemyList_ReturnValue;                 // 0x0128(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9302[0x3];                                     // 0x0139(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager_1;         // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9303[0x7];                                     // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattlePlayer_C*                      CallFunc_GetMainPlayer_Player;                     // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ARSBattlePlayer_C*>              CallFunc_GetPlayersAll_Player;                     // 0x0160(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0171(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0172(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0173(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Loop_Num_Variable_2;                      // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0178(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0184(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x0190(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_1;      // 0x01A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_1;       // 0x01AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9304[0x3];                                     // 0x01AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_VSize_ReturnValue_1;                      // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue_2;                      // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_2;       // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_3;       // 0x01B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9305[0x2];                                     // 0x01BA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_VSize_ReturnValue_3;                      // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_4;       // 0x01C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default;                             // 0x01C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x01C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x01C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9306[0x3];                                     // 0x01C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x01CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9307[0x3];                                     // 0x01CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattleEnemy_C*                       K2Node_DynamicCast_AsRSBattle_Enemy_1;             // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9308[0x3];                                     // 0x01D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x01DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x01EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9309[0x3];                                     // 0x01ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_5;       // 0x01F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_930A[0x3];                                     // 0x01F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_2;      // 0x01F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_2;      // 0x0204(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSizeXY_ReturnValue;                      // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue_4;                      // 0x0214(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_6;       // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_7;       // 0x0219(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x021A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_8;       // 0x021B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x021C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_930B[0x3];                                     // 0x021D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x0224(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_930C[0x3];                                     // 0x0229(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x022C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default_1;                           // 0x0231(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_9;       // 0x0232(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_930D[0x1];                                     // 0x0233(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue_3;             // 0x0234(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_930E[0x3];                                     // 0x0239(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue_4;             // 0x023C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyVisionFogComponent_C_Update) == 0x000008, "Wrong alignment on BP_EnemyVisionFogComponent_C_Update");
static_assert(sizeof(BP_EnemyVisionFogComponent_C_Update) == 0x000248, "Wrong size on BP_EnemyVisionFogComponent_C_Update");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Update, DeltaSeconds) == 0x000000, "Member 'BP_EnemyVisionFogComponent_C_Update::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Update, LPlayerList) == 0x000008, "Member 'BP_EnemyVisionFogComponent_C_Update::LPlayerList' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Update, LClaimantName) == 0x000018, "Member 'BP_EnemyVisionFogComponent_C_Update::LClaimantName' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Update, LIsFog) == 0x000020, "Member 'BP_EnemyVisionFogComponent_C_Update::LIsFog' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Update, LList) == 0x000028, "Member 'BP_EnemyVisionFogComponent_C_Update::LList' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Update, LPlayer) == 0x000038, "Member 'BP_EnemyVisionFogComponent_C_Update::LPlayer' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Update, LIsApply) == 0x000040, "Member 'BP_EnemyVisionFogComponent_C_Update::LIsApply' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Update, Temp_int_Array_Index_Variable) == 0x000044, "Member 'BP_EnemyVisionFogComponent_C_Update::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Update, Temp_int_Loop_Num_Variable) == 0x000048, "Member 'BP_EnemyVisionFogComponent_C_Update::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Update, Temp_int_Loop_Num_Variable_1) == 0x00004C, "Member 'BP_EnemyVisionFogComponent_C_Update::Temp_int_Loop_Num_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Update, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'BP_EnemyVisionFogComponent_C_Update::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Update, CallFunc_Array_Length_ReturnValue_1) == 0x000054, "Member 'BP_EnemyVisionFogComponent_C_Update::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Update, CallFunc_IsValid_ReturnValue) == 0x000058, "Member 'BP_EnemyVisionFogComponent_C_Update::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Update, K2Node_DynamicCast_AsRSBattle_Enemy) == 0x000060, "Member 'BP_EnemyVisionFogComponent_C_Update::K2Node_DynamicCast_AsRSBattle_Enemy' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Update, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'BP_EnemyVisionFogComponent_C_Update::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Update, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00006C, "Member 'BP_EnemyVisionFogComponent_C_Update::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Update, CallFunc_Array_Length_ReturnValue_2) == 0x000078, "Member 'BP_EnemyVisionFogComponent_C_Update::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Update, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x00007C, "Member 'BP_EnemyVisionFogComponent_C_Update::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Update, CallFunc_GetAlpha_Alpha) == 0x000080, "Member 'BP_EnemyVisionFogComponent_C_Update::CallFunc_GetAlpha_Alpha' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Update, CallFunc_GetAlpha_Alpha_1) == 0x000084, "Member 'BP_EnemyVisionFogComponent_C_Update::CallFunc_GetAlpha_Alpha_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Update, CallFunc_GetAlpha_Alpha_2) == 0x000088, "Member 'BP_EnemyVisionFogComponent_C_Update::CallFunc_GetAlpha_Alpha_2' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Update, CallFunc_GetUseVisionFogID_ID) == 0x00008C, "Member 'BP_EnemyVisionFogComponent_C_Update::CallFunc_GetUseVisionFogID_ID' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Update, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x00008D, "Member 'BP_EnemyVisionFogComponent_C_Update::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Update, CallFunc_GetUseVisionFogID_ID_1) == 0x00008E, "Member 'BP_EnemyVisionFogComponent_C_Update::CallFunc_GetUseVisionFogID_ID_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Update, CallFunc_GetUseVisionFogID_ID_2) == 0x00008F, "Member 'BP_EnemyVisionFogComponent_C_Update::CallFunc_GetUseVisionFogID_ID_2' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Update, CallFunc_Less_FloatFloat_ReturnValue) == 0x000090, "Member 'BP_EnemyVisionFogComponent_C_Update::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Update, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x000091, "Member 'BP_EnemyVisionFogComponent_C_Update::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Update, CallFunc_Less_FloatFloat_ReturnValue_2) == 0x000092, "Member 'BP_EnemyVisionFogComponent_C_Update::CallFunc_Less_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Update, Temp_int_Array_Index_Variable_1) == 0x000094, "Member 'BP_EnemyVisionFogComponent_C_Update::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Update, CallFunc_IsValid_ReturnValue_1) == 0x000098, "Member 'BP_EnemyVisionFogComponent_C_Update::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Update, CallFunc_IsInVisionFog_ReturnValue) == 0x000099, "Member 'BP_EnemyVisionFogComponent_C_Update::CallFunc_IsInVisionFog_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Update, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x00009C, "Member 'BP_EnemyVisionFogComponent_C_Update::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Update, CallFunc_Add_FloatFloat_ReturnValue) == 0x0000A8, "Member 'BP_EnemyVisionFogComponent_C_Update::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Update, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x0000AC, "Member 'BP_EnemyVisionFogComponent_C_Update::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Update, CallFunc_GetOwner_ReturnValue) == 0x0000B0, "Member 'BP_EnemyVisionFogComponent_C_Update::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Update, CallFunc_GetObjectName_ReturnValue) == 0x0000B8, "Member 'BP_EnemyVisionFogComponent_C_Update::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Update, CallFunc_Conv_StringToName_ReturnValue) == 0x0000C8, "Member 'BP_EnemyVisionFogComponent_C_Update::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Update, CallFunc_GetEnemyManager_Manager) == 0x0000D0, "Member 'BP_EnemyVisionFogComponent_C_Update::CallFunc_GetEnemyManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Update, CallFunc_IsValid_ReturnValue_2) == 0x0000D8, "Member 'BP_EnemyVisionFogComponent_C_Update::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Update, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x0000DC, "Member 'BP_EnemyVisionFogComponent_C_Update::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Update, CallFunc_GetFloatValue_ReturnValue) == 0x0000EC, "Member 'BP_EnemyVisionFogComponent_C_Update::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Update, CallFunc_GetFloatValue_ReturnValue_1) == 0x0000F0, "Member 'BP_EnemyVisionFogComponent_C_Update::CallFunc_GetFloatValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Update, CallFunc_GetFloatValue_ReturnValue_2) == 0x0000F4, "Member 'BP_EnemyVisionFogComponent_C_Update::CallFunc_GetFloatValue_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Update, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x0000F8, "Member 'BP_EnemyVisionFogComponent_C_Update::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Update, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0000FC, "Member 'BP_EnemyVisionFogComponent_C_Update::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Update, CallFunc_FClamp_ReturnValue) == 0x000100, "Member 'BP_EnemyVisionFogComponent_C_Update::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Update, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000104, "Member 'BP_EnemyVisionFogComponent_C_Update::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Update, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000108, "Member 'BP_EnemyVisionFogComponent_C_Update::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Update, CallFunc_FClamp_ReturnValue_1) == 0x00010C, "Member 'BP_EnemyVisionFogComponent_C_Update::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Update, Temp_int_Loop_Counter_Variable) == 0x000110, "Member 'BP_EnemyVisionFogComponent_C_Update::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Update, CallFunc_GetEnemyManager_Manager_1) == 0x000118, "Member 'BP_EnemyVisionFogComponent_C_Update::CallFunc_GetEnemyManager_Manager_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Update, CallFunc_IsValid_ReturnValue_3) == 0x000120, "Member 'BP_EnemyVisionFogComponent_C_Update::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Update, CallFunc_GetEnemyList_ReturnValue) == 0x000128, "Member 'BP_EnemyVisionFogComponent_C_Update::CallFunc_GetEnemyList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Update, CallFunc_Less_IntInt_ReturnValue) == 0x000138, "Member 'BP_EnemyVisionFogComponent_C_Update::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Update, CallFunc_Add_IntInt_ReturnValue) == 0x00013C, "Member 'BP_EnemyVisionFogComponent_C_Update::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Update, CallFunc_GetPlayerManager_PlayerManager) == 0x000140, "Member 'BP_EnemyVisionFogComponent_C_Update::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Update, CallFunc_GetPlayerManager_PlayerManager_1) == 0x000148, "Member 'BP_EnemyVisionFogComponent_C_Update::CallFunc_GetPlayerManager_PlayerManager_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Update, CallFunc_IsValid_ReturnValue_4) == 0x000150, "Member 'BP_EnemyVisionFogComponent_C_Update::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Update, CallFunc_GetMainPlayer_Player) == 0x000158, "Member 'BP_EnemyVisionFogComponent_C_Update::CallFunc_GetMainPlayer_Player' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Update, CallFunc_GetPlayersAll_Player) == 0x000160, "Member 'BP_EnemyVisionFogComponent_C_Update::CallFunc_GetPlayersAll_Player' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Update, Temp_bool_Variable) == 0x000170, "Member 'BP_EnemyVisionFogComponent_C_Update::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Update, Temp_bool_Variable_1) == 0x000171, "Member 'BP_EnemyVisionFogComponent_C_Update::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Update, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000172, "Member 'BP_EnemyVisionFogComponent_C_Update::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Update, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000173, "Member 'BP_EnemyVisionFogComponent_C_Update::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Update, Temp_int_Loop_Num_Variable_2) == 0x000174, "Member 'BP_EnemyVisionFogComponent_C_Update::Temp_int_Loop_Num_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Update, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000178, "Member 'BP_EnemyVisionFogComponent_C_Update::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Update, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000184, "Member 'BP_EnemyVisionFogComponent_C_Update::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Update, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x000190, "Member 'BP_EnemyVisionFogComponent_C_Update::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Update, CallFunc_VSize_ReturnValue) == 0x00019C, "Member 'BP_EnemyVisionFogComponent_C_Update::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Update, CallFunc_Multiply_VectorVector_ReturnValue_1) == 0x0001A0, "Member 'BP_EnemyVisionFogComponent_C_Update::CallFunc_Multiply_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Update, CallFunc_LessEqual_FloatFloat_ReturnValue_1) == 0x0001AC, "Member 'BP_EnemyVisionFogComponent_C_Update::CallFunc_LessEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Update, CallFunc_VSize_ReturnValue_1) == 0x0001B0, "Member 'BP_EnemyVisionFogComponent_C_Update::CallFunc_VSize_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Update, CallFunc_VSize_ReturnValue_2) == 0x0001B4, "Member 'BP_EnemyVisionFogComponent_C_Update::CallFunc_VSize_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Update, CallFunc_LessEqual_FloatFloat_ReturnValue_2) == 0x0001B8, "Member 'BP_EnemyVisionFogComponent_C_Update::CallFunc_LessEqual_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Update, CallFunc_LessEqual_FloatFloat_ReturnValue_3) == 0x0001B9, "Member 'BP_EnemyVisionFogComponent_C_Update::CallFunc_LessEqual_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Update, CallFunc_VSize_ReturnValue_3) == 0x0001BC, "Member 'BP_EnemyVisionFogComponent_C_Update::CallFunc_VSize_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Update, CallFunc_BooleanAND_ReturnValue) == 0x0001C0, "Member 'BP_EnemyVisionFogComponent_C_Update::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Update, CallFunc_LessEqual_FloatFloat_ReturnValue_4) == 0x0001C1, "Member 'BP_EnemyVisionFogComponent_C_Update::CallFunc_LessEqual_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Update, K2Node_Select_Default) == 0x0001C2, "Member 'BP_EnemyVisionFogComponent_C_Update::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Update, CallFunc_BooleanAND_ReturnValue_1) == 0x0001C3, "Member 'BP_EnemyVisionFogComponent_C_Update::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Update, Temp_bool_Variable_2) == 0x0001C4, "Member 'BP_EnemyVisionFogComponent_C_Update::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Update, Temp_int_Array_Index_Variable_2) == 0x0001C8, "Member 'BP_EnemyVisionFogComponent_C_Update::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Update, CallFunc_IsValid_ReturnValue_5) == 0x0001CC, "Member 'BP_EnemyVisionFogComponent_C_Update::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Update, K2Node_DynamicCast_AsRSBattle_Enemy_1) == 0x0001D0, "Member 'BP_EnemyVisionFogComponent_C_Update::K2Node_DynamicCast_AsRSBattle_Enemy_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Update, K2Node_DynamicCast_bSuccess_1) == 0x0001D8, "Member 'BP_EnemyVisionFogComponent_C_Update::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Update, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x0001DC, "Member 'BP_EnemyVisionFogComponent_C_Update::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Update, Temp_int_Loop_Counter_Variable_1) == 0x0001E8, "Member 'BP_EnemyVisionFogComponent_C_Update::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Update, CallFunc_Less_IntInt_ReturnValue_1) == 0x0001EC, "Member 'BP_EnemyVisionFogComponent_C_Update::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Update, CallFunc_Add_IntInt_ReturnValue_1) == 0x0001F0, "Member 'BP_EnemyVisionFogComponent_C_Update::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Update, CallFunc_LessEqual_FloatFloat_ReturnValue_5) == 0x0001F4, "Member 'BP_EnemyVisionFogComponent_C_Update::CallFunc_LessEqual_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Update, CallFunc_Subtract_VectorVector_ReturnValue_2) == 0x0001F8, "Member 'BP_EnemyVisionFogComponent_C_Update::CallFunc_Subtract_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Update, CallFunc_Multiply_VectorVector_ReturnValue_2) == 0x000204, "Member 'BP_EnemyVisionFogComponent_C_Update::CallFunc_Multiply_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Update, CallFunc_VSizeXY_ReturnValue) == 0x000210, "Member 'BP_EnemyVisionFogComponent_C_Update::CallFunc_VSizeXY_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Update, CallFunc_VSize_ReturnValue_4) == 0x000214, "Member 'BP_EnemyVisionFogComponent_C_Update::CallFunc_VSize_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Update, CallFunc_LessEqual_FloatFloat_ReturnValue_6) == 0x000218, "Member 'BP_EnemyVisionFogComponent_C_Update::CallFunc_LessEqual_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Update, CallFunc_LessEqual_FloatFloat_ReturnValue_7) == 0x000219, "Member 'BP_EnemyVisionFogComponent_C_Update::CallFunc_LessEqual_FloatFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Update, CallFunc_BooleanAND_ReturnValue_2) == 0x00021A, "Member 'BP_EnemyVisionFogComponent_C_Update::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Update, CallFunc_LessEqual_FloatFloat_ReturnValue_8) == 0x00021B, "Member 'BP_EnemyVisionFogComponent_C_Update::CallFunc_LessEqual_FloatFloat_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Update, CallFunc_IsValid_ReturnValue_6) == 0x00021C, "Member 'BP_EnemyVisionFogComponent_C_Update::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Update, Temp_int_Loop_Counter_Variable_2) == 0x000220, "Member 'BP_EnemyVisionFogComponent_C_Update::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Update, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x000224, "Member 'BP_EnemyVisionFogComponent_C_Update::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Update, CallFunc_Less_IntInt_ReturnValue_2) == 0x000228, "Member 'BP_EnemyVisionFogComponent_C_Update::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Update, CallFunc_Add_IntInt_ReturnValue_2) == 0x00022C, "Member 'BP_EnemyVisionFogComponent_C_Update::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Update, Temp_bool_Variable_3) == 0x000230, "Member 'BP_EnemyVisionFogComponent_C_Update::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Update, K2Node_Select_Default_1) == 0x000231, "Member 'BP_EnemyVisionFogComponent_C_Update::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Update, CallFunc_LessEqual_FloatFloat_ReturnValue_9) == 0x000232, "Member 'BP_EnemyVisionFogComponent_C_Update::CallFunc_LessEqual_FloatFloat_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Update, CallFunc_Add_FloatFloat_ReturnValue_3) == 0x000234, "Member 'BP_EnemyVisionFogComponent_C_Update::CallFunc_Add_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Update, CallFunc_IsValid_ReturnValue_7) == 0x000238, "Member 'BP_EnemyVisionFogComponent_C_Update::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Update, CallFunc_Add_FloatFloat_ReturnValue_4) == 0x00023C, "Member 'BP_EnemyVisionFogComponent_C_Update::CallFunc_Add_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Update, K2Node_SwitchInteger_CmpSuccess) == 0x000240, "Member 'BP_EnemyVisionFogComponent_C_Update::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

// Function BP_EnemyVisionFogComponent.BP_EnemyVisionFogComponent_C.InitNext
// 0x000C (0x000C - 0x0000)
struct BP_EnemyVisionFogComponent_C_InitNext final
{
public:
	bool                                          bForce;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_930F[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         NextState;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyVisionFogComponent_C_InitNext) == 0x000004, "Wrong alignment on BP_EnemyVisionFogComponent_C_InitNext");
static_assert(sizeof(BP_EnemyVisionFogComponent_C_InitNext) == 0x00000C, "Wrong size on BP_EnemyVisionFogComponent_C_InitNext");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_InitNext, bForce) == 0x000000, "Member 'BP_EnemyVisionFogComponent_C_InitNext::bForce' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_InitNext, NextState) == 0x000004, "Member 'BP_EnemyVisionFogComponent_C_InitNext::NextState' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_InitNext, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000008, "Member 'BP_EnemyVisionFogComponent_C_InitNext::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_InitNext, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'BP_EnemyVisionFogComponent_C_InitNext::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_EnemyVisionFogComponent.BP_EnemyVisionFogComponent_C.Exit
// 0x0018 (0x0018 - 0x0000)
struct BP_EnemyVisionFogComponent_C_Exit final
{
public:
	EVisionFogID                                  CallFunc_GetUseVisionFogID_ID;                     // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9310[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_EnemyManager_C*                     CallFunc_GetEnemyManager_Manager;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_StrStr_ReturnValue;              // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyVisionFogComponent_C_Exit) == 0x000008, "Wrong alignment on BP_EnemyVisionFogComponent_C_Exit");
static_assert(sizeof(BP_EnemyVisionFogComponent_C_Exit) == 0x000018, "Wrong size on BP_EnemyVisionFogComponent_C_Exit");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Exit, CallFunc_GetUseVisionFogID_ID) == 0x000000, "Member 'BP_EnemyVisionFogComponent_C_Exit::CallFunc_GetUseVisionFogID_ID' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Exit, CallFunc_GetEnemyManager_Manager) == 0x000008, "Member 'BP_EnemyVisionFogComponent_C_Exit::CallFunc_GetEnemyManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Exit, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_EnemyVisionFogComponent_C_Exit::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Exit, CallFunc_NotEqual_StrStr_ReturnValue) == 0x000011, "Member 'BP_EnemyVisionFogComponent_C_Exit::CallFunc_NotEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Exit, CallFunc_IsValid_ReturnValue_1) == 0x000012, "Member 'BP_EnemyVisionFogComponent_C_Exit::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_Exit, CallFunc_IsValid_ReturnValue_2) == 0x000013, "Member 'BP_EnemyVisionFogComponent_C_Exit::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

// Function BP_EnemyVisionFogComponent.BP_EnemyVisionFogComponent_C.StartAnother
// 0x00A8 (0x00A8 - 0x0000)
struct BP_EnemyVisionFogComponent_C_StartAnother final
{
public:
	float                                         FogStartSeconds;                                   // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FogLoopSeconds;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FogEndSeconds;                                     // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SpawnLocation;                                     // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ArgIsAllArea;                                      // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9311[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Param_ForceEnableTime;                             // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9312[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9313[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ABP_EnemyManager_C*                     CallFunc_GetEnemyManager_Manager;                  // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9314[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9315[0x6];                                     // 0x0062(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_GetSkeletalMeshFromActor_ReturnValue;     // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9316[0x7];                                     // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URSAtomComponentBase*                   CallFunc_PlaySoundAttachedRS_ReturnValue;          // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisionFog_IsVisionFog;                  // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9317[0x7];                                     // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PostProcessManager_C*               CallFunc_GetPostProcessManager_Manager;            // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyVisionFogComponent_C_StartAnother) == 0x000008, "Wrong alignment on BP_EnemyVisionFogComponent_C_StartAnother");
static_assert(sizeof(BP_EnemyVisionFogComponent_C_StartAnother) == 0x0000A8, "Wrong size on BP_EnemyVisionFogComponent_C_StartAnother");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_StartAnother, FogStartSeconds) == 0x000000, "Member 'BP_EnemyVisionFogComponent_C_StartAnother::FogStartSeconds' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_StartAnother, FogLoopSeconds) == 0x000004, "Member 'BP_EnemyVisionFogComponent_C_StartAnother::FogLoopSeconds' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_StartAnother, FogEndSeconds) == 0x000008, "Member 'BP_EnemyVisionFogComponent_C_StartAnother::FogEndSeconds' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_StartAnother, SpawnLocation) == 0x00000C, "Member 'BP_EnemyVisionFogComponent_C_StartAnother::SpawnLocation' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_StartAnother, ArgIsAllArea) == 0x000018, "Member 'BP_EnemyVisionFogComponent_C_StartAnother::ArgIsAllArea' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_StartAnother, Param_ForceEnableTime) == 0x00001C, "Member 'BP_EnemyVisionFogComponent_C_StartAnother::Param_ForceEnableTime' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_StartAnother, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000020, "Member 'BP_EnemyVisionFogComponent_C_StartAnother::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_StartAnother, CallFunc_GetOwner_ReturnValue) == 0x000028, "Member 'BP_EnemyVisionFogComponent_C_StartAnother::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_StartAnother, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BP_EnemyVisionFogComponent_C_StartAnother::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_StartAnother, CallFunc_GetDisplayName_ReturnValue) == 0x000038, "Member 'BP_EnemyVisionFogComponent_C_StartAnother::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_StartAnother, CallFunc_GetEnemyManager_Manager) == 0x000048, "Member 'BP_EnemyVisionFogComponent_C_StartAnother::CallFunc_GetEnemyManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_StartAnother, CallFunc_IsValid_ReturnValue_1) == 0x000050, "Member 'BP_EnemyVisionFogComponent_C_StartAnother::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_StartAnother, CallFunc_GetOwner_ReturnValue_1) == 0x000058, "Member 'BP_EnemyVisionFogComponent_C_StartAnother::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_StartAnother, CallFunc_IsValid_ReturnValue_2) == 0x000060, "Member 'BP_EnemyVisionFogComponent_C_StartAnother::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_StartAnother, CallFunc_IsValid_ReturnValue_3) == 0x000061, "Member 'BP_EnemyVisionFogComponent_C_StartAnother::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_StartAnother, CallFunc_GetSkeletalMeshFromActor_ReturnValue) == 0x000068, "Member 'BP_EnemyVisionFogComponent_C_StartAnother::CallFunc_GetSkeletalMeshFromActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_StartAnother, CallFunc_IsValid_ReturnValue_4) == 0x000070, "Member 'BP_EnemyVisionFogComponent_C_StartAnother::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_StartAnother, CallFunc_PlaySoundAttachedRS_ReturnValue) == 0x000078, "Member 'BP_EnemyVisionFogComponent_C_StartAnother::CallFunc_PlaySoundAttachedRS_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_StartAnother, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x000080, "Member 'BP_EnemyVisionFogComponent_C_StartAnother::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_StartAnother, CallFunc_IsVisionFog_IsVisionFog) == 0x000090, "Member 'BP_EnemyVisionFogComponent_C_StartAnother::CallFunc_IsVisionFog_IsVisionFog' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_StartAnother, CallFunc_GetPostProcessManager_Manager) == 0x000098, "Member 'BP_EnemyVisionFogComponent_C_StartAnother::CallFunc_GetPostProcessManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_StartAnother, CallFunc_IsValid_ReturnValue_5) == 0x0000A0, "Member 'BP_EnemyVisionFogComponent_C_StartAnother::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");

// Function BP_EnemyVisionFogComponent.BP_EnemyVisionFogComponent_C.IsVisionFog
// 0x0002 (0x0002 - 0x0000)
struct BP_EnemyVisionFogComponent_C_IsVisionFog final
{
public:
	bool                                          Param_IsVisionFog;                                 // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyVisionFogComponent_C_IsVisionFog) == 0x000001, "Wrong alignment on BP_EnemyVisionFogComponent_C_IsVisionFog");
static_assert(sizeof(BP_EnemyVisionFogComponent_C_IsVisionFog) == 0x000002, "Wrong size on BP_EnemyVisionFogComponent_C_IsVisionFog");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_IsVisionFog, Param_IsVisionFog) == 0x000000, "Member 'BP_EnemyVisionFogComponent_C_IsVisionFog::Param_IsVisionFog' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_IsVisionFog, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000001, "Member 'BP_EnemyVisionFogComponent_C_IsVisionFog::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_EnemyVisionFogComponent.BP_EnemyVisionFogComponent_C.CalcAlpha
// 0x00A0 (0x00A0 - 0x0000)
struct BP_EnemyVisionFogComponent_C_CalcAlpha final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsApply;                                           // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsStart;                                           // 0x0005(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsEnd;                                             // 0x0006(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9318[0x1];                                     // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         L_LengthDiff;                                      // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9319[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattlePlayer_C*                      L_player;                                          // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_931A[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_1;       // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_931B[0x1];                                     // 0x0037(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_2;          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_2;        // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_931C[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_931D[0x3];                                     // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_931E[0x4];                                     // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattlePlayer_C*                      CallFunc_GetMainPlayer_Player;                     // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_931F[0x3];                                     // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_3;        // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_1;                     // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_4;        // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_2;                     // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_3;          // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_5;        // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_4;          // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EnemyVisionFogComponent_C_CalcAlpha) == 0x000008, "Wrong alignment on BP_EnemyVisionFogComponent_C_CalcAlpha");
static_assert(sizeof(BP_EnemyVisionFogComponent_C_CalcAlpha) == 0x0000A0, "Wrong size on BP_EnemyVisionFogComponent_C_CalcAlpha");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_CalcAlpha, DeltaSeconds) == 0x000000, "Member 'BP_EnemyVisionFogComponent_C_CalcAlpha::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_CalcAlpha, IsApply) == 0x000004, "Member 'BP_EnemyVisionFogComponent_C_CalcAlpha::IsApply' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_CalcAlpha, IsStart) == 0x000005, "Member 'BP_EnemyVisionFogComponent_C_CalcAlpha::IsStart' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_CalcAlpha, IsEnd) == 0x000006, "Member 'BP_EnemyVisionFogComponent_C_CalcAlpha::IsEnd' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_CalcAlpha, L_LengthDiff) == 0x000008, "Member 'BP_EnemyVisionFogComponent_C_CalcAlpha::L_LengthDiff' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_CalcAlpha, L_player) == 0x000010, "Member 'BP_EnemyVisionFogComponent_C_CalcAlpha::L_player' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_CalcAlpha, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000018, "Member 'BP_EnemyVisionFogComponent_C_CalcAlpha::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_CalcAlpha, CallFunc_FClamp_ReturnValue) == 0x00001C, "Member 'BP_EnemyVisionFogComponent_C_CalcAlpha::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_CalcAlpha, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000020, "Member 'BP_EnemyVisionFogComponent_C_CalcAlpha::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_CalcAlpha, CallFunc_Add_FloatFloat_ReturnValue) == 0x000024, "Member 'BP_EnemyVisionFogComponent_C_CalcAlpha::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_CalcAlpha, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000028, "Member 'BP_EnemyVisionFogComponent_C_CalcAlpha::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_CalcAlpha, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00002C, "Member 'BP_EnemyVisionFogComponent_C_CalcAlpha::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_CalcAlpha, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000030, "Member 'BP_EnemyVisionFogComponent_C_CalcAlpha::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_CalcAlpha, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000034, "Member 'BP_EnemyVisionFogComponent_C_CalcAlpha::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_CalcAlpha, CallFunc_Less_FloatFloat_ReturnValue) == 0x000035, "Member 'BP_EnemyVisionFogComponent_C_CalcAlpha::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_CalcAlpha, CallFunc_LessEqual_FloatFloat_ReturnValue_1) == 0x000036, "Member 'BP_EnemyVisionFogComponent_C_CalcAlpha::CallFunc_LessEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_CalcAlpha, CallFunc_Divide_FloatFloat_ReturnValue_2) == 0x000038, "Member 'BP_EnemyVisionFogComponent_C_CalcAlpha::CallFunc_Divide_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_CalcAlpha, CallFunc_Subtract_FloatFloat_ReturnValue_2) == 0x00003C, "Member 'BP_EnemyVisionFogComponent_C_CalcAlpha::CallFunc_Subtract_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_CalcAlpha, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000040, "Member 'BP_EnemyVisionFogComponent_C_CalcAlpha::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_CalcAlpha, CallFunc_GetPlayerManager_PlayerManager) == 0x000050, "Member 'BP_EnemyVisionFogComponent_C_CalcAlpha::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_CalcAlpha, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000058, "Member 'BP_EnemyVisionFogComponent_C_CalcAlpha::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_CalcAlpha, CallFunc_IsValid_ReturnValue) == 0x000064, "Member 'BP_EnemyVisionFogComponent_C_CalcAlpha::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_CalcAlpha, CallFunc_VSize_ReturnValue) == 0x000068, "Member 'BP_EnemyVisionFogComponent_C_CalcAlpha::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_CalcAlpha, CallFunc_GetMainPlayer_Player) == 0x000070, "Member 'BP_EnemyVisionFogComponent_C_CalcAlpha::CallFunc_GetMainPlayer_Player' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_CalcAlpha, CallFunc_IsValid_ReturnValue_1) == 0x000078, "Member 'BP_EnemyVisionFogComponent_C_CalcAlpha::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_CalcAlpha, CallFunc_Subtract_FloatFloat_ReturnValue_3) == 0x00007C, "Member 'BP_EnemyVisionFogComponent_C_CalcAlpha::CallFunc_Subtract_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_CalcAlpha, CallFunc_FClamp_ReturnValue_1) == 0x000080, "Member 'BP_EnemyVisionFogComponent_C_CalcAlpha::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_CalcAlpha, CallFunc_Subtract_FloatFloat_ReturnValue_4) == 0x000084, "Member 'BP_EnemyVisionFogComponent_C_CalcAlpha::CallFunc_Subtract_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_CalcAlpha, CallFunc_FClamp_ReturnValue_2) == 0x000088, "Member 'BP_EnemyVisionFogComponent_C_CalcAlpha::CallFunc_FClamp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_CalcAlpha, CallFunc_Divide_FloatFloat_ReturnValue_3) == 0x00008C, "Member 'BP_EnemyVisionFogComponent_C_CalcAlpha::CallFunc_Divide_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_CalcAlpha, CallFunc_Subtract_FloatFloat_ReturnValue_5) == 0x000090, "Member 'BP_EnemyVisionFogComponent_C_CalcAlpha::CallFunc_Subtract_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_CalcAlpha, CallFunc_Divide_FloatFloat_ReturnValue_4) == 0x000094, "Member 'BP_EnemyVisionFogComponent_C_CalcAlpha::CallFunc_Divide_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_CalcAlpha, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000098, "Member 'BP_EnemyVisionFogComponent_C_CalcAlpha::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");

// Function BP_EnemyVisionFogComponent.BP_EnemyVisionFogComponent_C.SetAllActorFog
// 0x0090 (0x0090 - 0x0000)
struct BP_EnemyVisionFogComponent_C_SetAllActorFog final
{
public:
	bool                                          IsVisionFog;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9320[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_1;                      // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9321[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9322[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9323[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0044(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_EnemyManager_C*                     CallFunc_GetEnemyManager_Manager;                  // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ARSCharacterBase*>               CallFunc_GetEnemyListRef_ReturnValue;              // 0x0060(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<class ARSBattlePlayer_C*>              CallFunc_GetPlayersAll_Player;                     // 0x0070(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9324[0x2];                                     // 0x0082(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EnemyVisionFogComponent_C_SetAllActorFog) == 0x000008, "Wrong alignment on BP_EnemyVisionFogComponent_C_SetAllActorFog");
static_assert(sizeof(BP_EnemyVisionFogComponent_C_SetAllActorFog) == 0x000090, "Wrong size on BP_EnemyVisionFogComponent_C_SetAllActorFog");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_SetAllActorFog, IsVisionFog) == 0x000000, "Member 'BP_EnemyVisionFogComponent_C_SetAllActorFog::IsVisionFog' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_SetAllActorFog, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_EnemyVisionFogComponent_C_SetAllActorFog::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_SetAllActorFog, Temp_int_Loop_Num_Variable) == 0x000008, "Member 'BP_EnemyVisionFogComponent_C_SetAllActorFog::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_SetAllActorFog, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BP_EnemyVisionFogComponent_C_SetAllActorFog::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_SetAllActorFog, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_EnemyVisionFogComponent_C_SetAllActorFog::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_SetAllActorFog, Temp_int_Array_Index_Variable_1) == 0x000014, "Member 'BP_EnemyVisionFogComponent_C_SetAllActorFog::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_SetAllActorFog, Temp_int_Loop_Num_Variable_1) == 0x000018, "Member 'BP_EnemyVisionFogComponent_C_SetAllActorFog::Temp_int_Loop_Num_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_SetAllActorFog, CallFunc_Less_IntInt_ReturnValue) == 0x00001C, "Member 'BP_EnemyVisionFogComponent_C_SetAllActorFog::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_SetAllActorFog, Temp_int_Loop_Counter_Variable_1) == 0x000020, "Member 'BP_EnemyVisionFogComponent_C_SetAllActorFog::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_SetAllActorFog, CallFunc_GetOwner_ReturnValue) == 0x000028, "Member 'BP_EnemyVisionFogComponent_C_SetAllActorFog::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_SetAllActorFog, CallFunc_GetObjectName_ReturnValue) == 0x000030, "Member 'BP_EnemyVisionFogComponent_C_SetAllActorFog::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_SetAllActorFog, CallFunc_Less_IntInt_ReturnValue_1) == 0x000040, "Member 'BP_EnemyVisionFogComponent_C_SetAllActorFog::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_SetAllActorFog, CallFunc_Conv_StringToName_ReturnValue) == 0x000044, "Member 'BP_EnemyVisionFogComponent_C_SetAllActorFog::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_SetAllActorFog, CallFunc_Add_IntInt_ReturnValue_1) == 0x00004C, "Member 'BP_EnemyVisionFogComponent_C_SetAllActorFog::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_SetAllActorFog, CallFunc_GetEnemyManager_Manager) == 0x000050, "Member 'BP_EnemyVisionFogComponent_C_SetAllActorFog::CallFunc_GetEnemyManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_SetAllActorFog, CallFunc_GetPlayerManager_PlayerManager) == 0x000058, "Member 'BP_EnemyVisionFogComponent_C_SetAllActorFog::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_SetAllActorFog, CallFunc_GetEnemyListRef_ReturnValue) == 0x000060, "Member 'BP_EnemyVisionFogComponent_C_SetAllActorFog::CallFunc_GetEnemyListRef_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_SetAllActorFog, CallFunc_GetPlayersAll_Player) == 0x000070, "Member 'BP_EnemyVisionFogComponent_C_SetAllActorFog::CallFunc_GetPlayersAll_Player' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_SetAllActorFog, CallFunc_IsValid_ReturnValue) == 0x000080, "Member 'BP_EnemyVisionFogComponent_C_SetAllActorFog::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_SetAllActorFog, CallFunc_IsValid_ReturnValue_1) == 0x000081, "Member 'BP_EnemyVisionFogComponent_C_SetAllActorFog::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_SetAllActorFog, CallFunc_Array_Length_ReturnValue) == 0x000084, "Member 'BP_EnemyVisionFogComponent_C_SetAllActorFog::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_SetAllActorFog, CallFunc_Array_Length_ReturnValue_1) == 0x000088, "Member 'BP_EnemyVisionFogComponent_C_SetAllActorFog::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");

// Function BP_EnemyVisionFogComponent.BP_EnemyVisionFogComponent_C.ClearActorFog
// 0x00C0 (0x00C0 - 0x0000)
struct BP_EnemyVisionFogComponent_C_ClearActorFog final
{
public:
	class FName                                   LClaimantName;                                     // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ARSCharacterBase*>               LList;                                             // 0x0008(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9325[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_1;                      // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9326[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9327[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9328[0x6];                                     // 0x0072(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattleEnemy_C*                       K2Node_DynamicCast_AsRSBattle_Enemy;               // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9329[0x3];                                     // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ARSBattlePlayer_C*>              CallFunc_GetPlayersAll_Player;                     // 0x0088(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class ABP_EnemyManager_C*                     CallFunc_GetEnemyManager_Manager;                  // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_932A[0x6];                                     // 0x00A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ARSCharacterBase*>               CallFunc_GetEnemyList_ReturnValue;                 // 0x00A8(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EnemyVisionFogComponent_C_ClearActorFog) == 0x000008, "Wrong alignment on BP_EnemyVisionFogComponent_C_ClearActorFog");
static_assert(sizeof(BP_EnemyVisionFogComponent_C_ClearActorFog) == 0x0000C0, "Wrong size on BP_EnemyVisionFogComponent_C_ClearActorFog");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_ClearActorFog, LClaimantName) == 0x000000, "Member 'BP_EnemyVisionFogComponent_C_ClearActorFog::LClaimantName' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_ClearActorFog, LList) == 0x000008, "Member 'BP_EnemyVisionFogComponent_C_ClearActorFog::LList' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_ClearActorFog, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'BP_EnemyVisionFogComponent_C_ClearActorFog::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_ClearActorFog, Temp_int_Loop_Num_Variable) == 0x00001C, "Member 'BP_EnemyVisionFogComponent_C_ClearActorFog::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_ClearActorFog, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BP_EnemyVisionFogComponent_C_ClearActorFog::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_ClearActorFog, CallFunc_Less_IntInt_ReturnValue) == 0x000024, "Member 'BP_EnemyVisionFogComponent_C_ClearActorFog::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_ClearActorFog, Temp_int_Loop_Counter_Variable_1) == 0x000028, "Member 'BP_EnemyVisionFogComponent_C_ClearActorFog::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_ClearActorFog, CallFunc_Add_IntInt_ReturnValue_1) == 0x00002C, "Member 'BP_EnemyVisionFogComponent_C_ClearActorFog::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_ClearActorFog, Temp_int_Array_Index_Variable) == 0x000030, "Member 'BP_EnemyVisionFogComponent_C_ClearActorFog::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_ClearActorFog, Temp_int_Loop_Num_Variable_1) == 0x000034, "Member 'BP_EnemyVisionFogComponent_C_ClearActorFog::Temp_int_Loop_Num_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_ClearActorFog, CallFunc_Less_IntInt_ReturnValue_1) == 0x000038, "Member 'BP_EnemyVisionFogComponent_C_ClearActorFog::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_ClearActorFog, Temp_int_Array_Index_Variable_1) == 0x00003C, "Member 'BP_EnemyVisionFogComponent_C_ClearActorFog::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_ClearActorFog, CallFunc_GetOwner_ReturnValue) == 0x000040, "Member 'BP_EnemyVisionFogComponent_C_ClearActorFog::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_ClearActorFog, CallFunc_GetObjectName_ReturnValue) == 0x000048, "Member 'BP_EnemyVisionFogComponent_C_ClearActorFog::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_ClearActorFog, CallFunc_Conv_StringToName_ReturnValue) == 0x000058, "Member 'BP_EnemyVisionFogComponent_C_ClearActorFog::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_ClearActorFog, CallFunc_IsValid_ReturnValue) == 0x000060, "Member 'BP_EnemyVisionFogComponent_C_ClearActorFog::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_ClearActorFog, CallFunc_GetPlayerManager_PlayerManager) == 0x000068, "Member 'BP_EnemyVisionFogComponent_C_ClearActorFog::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_ClearActorFog, CallFunc_IsValid_ReturnValue_1) == 0x000070, "Member 'BP_EnemyVisionFogComponent_C_ClearActorFog::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_ClearActorFog, CallFunc_IsValid_ReturnValue_2) == 0x000071, "Member 'BP_EnemyVisionFogComponent_C_ClearActorFog::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_ClearActorFog, K2Node_DynamicCast_AsRSBattle_Enemy) == 0x000078, "Member 'BP_EnemyVisionFogComponent_C_ClearActorFog::K2Node_DynamicCast_AsRSBattle_Enemy' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_ClearActorFog, K2Node_DynamicCast_bSuccess) == 0x000080, "Member 'BP_EnemyVisionFogComponent_C_ClearActorFog::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_ClearActorFog, CallFunc_Array_Length_ReturnValue) == 0x000084, "Member 'BP_EnemyVisionFogComponent_C_ClearActorFog::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_ClearActorFog, CallFunc_GetPlayersAll_Player) == 0x000088, "Member 'BP_EnemyVisionFogComponent_C_ClearActorFog::CallFunc_GetPlayersAll_Player' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_ClearActorFog, CallFunc_GetEnemyManager_Manager) == 0x000098, "Member 'BP_EnemyVisionFogComponent_C_ClearActorFog::CallFunc_GetEnemyManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_ClearActorFog, CallFunc_IsValid_ReturnValue_3) == 0x0000A0, "Member 'BP_EnemyVisionFogComponent_C_ClearActorFog::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_ClearActorFog, CallFunc_IsValid_ReturnValue_4) == 0x0000A1, "Member 'BP_EnemyVisionFogComponent_C_ClearActorFog::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_ClearActorFog, CallFunc_GetEnemyList_ReturnValue) == 0x0000A8, "Member 'BP_EnemyVisionFogComponent_C_ClearActorFog::CallFunc_GetEnemyList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_ClearActorFog, CallFunc_Array_Length_ReturnValue_1) == 0x0000B8, "Member 'BP_EnemyVisionFogComponent_C_ClearActorFog::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");

// Function BP_EnemyVisionFogComponent.BP_EnemyVisionFogComponent_C.SetVisibleActor
// 0x0020 (0x0020 - 0x0000)
struct BP_EnemyVisionFogComponent_C_SetVisibleActor final
{
public:
	class ARSBattleEnemy_C*                       Enemy;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Visible;                                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_932B[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_GetDebuggingManager_Manager;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyVisionFogComponent_C_SetVisibleActor) == 0x000008, "Wrong alignment on BP_EnemyVisionFogComponent_C_SetVisibleActor");
static_assert(sizeof(BP_EnemyVisionFogComponent_C_SetVisibleActor) == 0x000020, "Wrong size on BP_EnemyVisionFogComponent_C_SetVisibleActor");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_SetVisibleActor, Enemy) == 0x000000, "Member 'BP_EnemyVisionFogComponent_C_SetVisibleActor::Enemy' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_SetVisibleActor, Visible) == 0x000008, "Member 'BP_EnemyVisionFogComponent_C_SetVisibleActor::Visible' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_SetVisibleActor, CallFunc_GetDebuggingManager_Manager) == 0x000010, "Member 'BP_EnemyVisionFogComponent_C_SetVisibleActor::CallFunc_GetDebuggingManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_SetVisibleActor, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_EnemyVisionFogComponent_C_SetVisibleActor::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_SetVisibleActor, CallFunc_IsVisible_ReturnValue) == 0x000019, "Member 'BP_EnemyVisionFogComponent_C_SetVisibleActor::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_SetVisibleActor, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x00001A, "Member 'BP_EnemyVisionFogComponent_C_SetVisibleActor::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function BP_EnemyVisionFogComponent.BP_EnemyVisionFogComponent_C.SetFogParam
// 0x000C (0x000C - 0x0000)
struct BP_EnemyVisionFogComponent_C_SetFogParam final
{
public:
	float                                         InAppearLengthDiff;                                // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InSmokeApplyR;                                     // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InSmokeApplyH;                                     // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EnemyVisionFogComponent_C_SetFogParam) == 0x000004, "Wrong alignment on BP_EnemyVisionFogComponent_C_SetFogParam");
static_assert(sizeof(BP_EnemyVisionFogComponent_C_SetFogParam) == 0x00000C, "Wrong size on BP_EnemyVisionFogComponent_C_SetFogParam");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_SetFogParam, InAppearLengthDiff) == 0x000000, "Member 'BP_EnemyVisionFogComponent_C_SetFogParam::InAppearLengthDiff' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_SetFogParam, InSmokeApplyR) == 0x000004, "Member 'BP_EnemyVisionFogComponent_C_SetFogParam::InSmokeApplyR' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_SetFogParam, InSmokeApplyH) == 0x000008, "Member 'BP_EnemyVisionFogComponent_C_SetFogParam::InSmokeApplyH' has a wrong offset!");

// Function BP_EnemyVisionFogComponent.BP_EnemyVisionFogComponent_C.GetUseVisionFogID
// 0x0004 (0x0004 - 0x0000)
struct BP_EnemyVisionFogComponent_C_GetUseVisionFogID final
{
public:
	EVisionFogID                                  ID;                                                // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EVisionFogID                                  K2Node_Select_Default;                             // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EnemyVisionFogComponent_C_GetUseVisionFogID) == 0x000001, "Wrong alignment on BP_EnemyVisionFogComponent_C_GetUseVisionFogID");
static_assert(sizeof(BP_EnemyVisionFogComponent_C_GetUseVisionFogID) == 0x000004, "Wrong size on BP_EnemyVisionFogComponent_C_GetUseVisionFogID");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_GetUseVisionFogID, ID) == 0x000000, "Member 'BP_EnemyVisionFogComponent_C_GetUseVisionFogID::ID' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_GetUseVisionFogID, Temp_bool_Variable) == 0x000001, "Member 'BP_EnemyVisionFogComponent_C_GetUseVisionFogID::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_GetUseVisionFogID, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000002, "Member 'BP_EnemyVisionFogComponent_C_GetUseVisionFogID::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_GetUseVisionFogID, K2Node_Select_Default) == 0x000003, "Member 'BP_EnemyVisionFogComponent_C_GetUseVisionFogID::K2Node_Select_Default' has a wrong offset!");

// Function BP_EnemyVisionFogComponent.BP_EnemyVisionFogComponent_C.StoreChangeFogParameter
// 0x0018 (0x0018 - 0x0000)
struct BP_EnemyVisionFogComponent_C_StoreChangeFogParameter final
{
public:
	bool                                          InForce;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          LIsApply;                                          // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_932C[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattlePlayer_C*                      LPlayer;                                           // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LChangeFogRate;                                    // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LbChange;                                          // 0x0014(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	EVisionFogID                                  LBeforeID;                                         // 0x0015(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisionFog_IsVisionFog;                  // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyVisionFogComponent_C_StoreChangeFogParameter) == 0x000008, "Wrong alignment on BP_EnemyVisionFogComponent_C_StoreChangeFogParameter");
static_assert(sizeof(BP_EnemyVisionFogComponent_C_StoreChangeFogParameter) == 0x000018, "Wrong size on BP_EnemyVisionFogComponent_C_StoreChangeFogParameter");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_StoreChangeFogParameter, InForce) == 0x000000, "Member 'BP_EnemyVisionFogComponent_C_StoreChangeFogParameter::InForce' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_StoreChangeFogParameter, LIsApply) == 0x000001, "Member 'BP_EnemyVisionFogComponent_C_StoreChangeFogParameter::LIsApply' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_StoreChangeFogParameter, LPlayer) == 0x000008, "Member 'BP_EnemyVisionFogComponent_C_StoreChangeFogParameter::LPlayer' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_StoreChangeFogParameter, LChangeFogRate) == 0x000010, "Member 'BP_EnemyVisionFogComponent_C_StoreChangeFogParameter::LChangeFogRate' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_StoreChangeFogParameter, LbChange) == 0x000014, "Member 'BP_EnemyVisionFogComponent_C_StoreChangeFogParameter::LbChange' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_StoreChangeFogParameter, LBeforeID) == 0x000015, "Member 'BP_EnemyVisionFogComponent_C_StoreChangeFogParameter::LBeforeID' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_StoreChangeFogParameter, CallFunc_IsVisionFog_IsVisionFog) == 0x000016, "Member 'BP_EnemyVisionFogComponent_C_StoreChangeFogParameter::CallFunc_IsVisionFog_IsVisionFog' has a wrong offset!");

// Function BP_EnemyVisionFogComponent.BP_EnemyVisionFogComponent_C.RestoreChangeFogParameter
// 0x0018 (0x0018 - 0x0000)
struct BP_EnemyVisionFogComponent_C_RestoreChangeFogParameter final
{
public:
	bool                                          InForce;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          LIsApply;                                          // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_932D[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattlePlayer_C*                      LPlayer;                                           // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LChangeFogRate;                                    // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LbChange;                                          // 0x0014(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	EVisionFogID                                  LBeforeID;                                         // 0x0015(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisionFog_IsVisionFog;                  // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyVisionFogComponent_C_RestoreChangeFogParameter) == 0x000008, "Wrong alignment on BP_EnemyVisionFogComponent_C_RestoreChangeFogParameter");
static_assert(sizeof(BP_EnemyVisionFogComponent_C_RestoreChangeFogParameter) == 0x000018, "Wrong size on BP_EnemyVisionFogComponent_C_RestoreChangeFogParameter");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_RestoreChangeFogParameter, InForce) == 0x000000, "Member 'BP_EnemyVisionFogComponent_C_RestoreChangeFogParameter::InForce' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_RestoreChangeFogParameter, LIsApply) == 0x000001, "Member 'BP_EnemyVisionFogComponent_C_RestoreChangeFogParameter::LIsApply' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_RestoreChangeFogParameter, LPlayer) == 0x000008, "Member 'BP_EnemyVisionFogComponent_C_RestoreChangeFogParameter::LPlayer' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_RestoreChangeFogParameter, LChangeFogRate) == 0x000010, "Member 'BP_EnemyVisionFogComponent_C_RestoreChangeFogParameter::LChangeFogRate' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_RestoreChangeFogParameter, LbChange) == 0x000014, "Member 'BP_EnemyVisionFogComponent_C_RestoreChangeFogParameter::LbChange' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_RestoreChangeFogParameter, LBeforeID) == 0x000015, "Member 'BP_EnemyVisionFogComponent_C_RestoreChangeFogParameter::LBeforeID' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_RestoreChangeFogParameter, CallFunc_IsVisionFog_IsVisionFog) == 0x000016, "Member 'BP_EnemyVisionFogComponent_C_RestoreChangeFogParameter::CallFunc_IsVisionFog_IsVisionFog' has a wrong offset!");

// Function BP_EnemyVisionFogComponent.BP_EnemyVisionFogComponent_C.UpdateChangeFogParameter
// 0x0060 (0x0060 - 0x0000)
struct BP_EnemyVisionFogComponent_C_UpdateChangeFogParameter final
{
public:
	float                                         DeltaSec;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LChangeAlphaLerpEnd;                               // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LChangeAlphaLerpStart;                             // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LChangeFogInNearEnd;                               // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LChangeFogInNearStart;                             // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LChangeFogFarLerpEnd;                              // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LChangeFogFarLerpStart;                            // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_932E[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PostProcessManager_C*               LPostProcessM;                                     // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LIsApply;                                          // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_932F[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattlePlayer_C*                      LPlayer;                                           // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LChangeFogRate;                                    // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LbChange;                                          // 0x003C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	EVisionFogID                                  LBeforeID;                                         // 0x003D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9330[0x2];                                     // 0x003E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRate_ReturnValue;                      // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOver_ReturnValue;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9331[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PostProcessManager_C*               CallFunc_GetPostProcessManager_Manager;            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyVisionFogComponent_C_UpdateChangeFogParameter) == 0x000008, "Wrong alignment on BP_EnemyVisionFogComponent_C_UpdateChangeFogParameter");
static_assert(sizeof(BP_EnemyVisionFogComponent_C_UpdateChangeFogParameter) == 0x000060, "Wrong size on BP_EnemyVisionFogComponent_C_UpdateChangeFogParameter");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_UpdateChangeFogParameter, DeltaSec) == 0x000000, "Member 'BP_EnemyVisionFogComponent_C_UpdateChangeFogParameter::DeltaSec' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_UpdateChangeFogParameter, LChangeAlphaLerpEnd) == 0x000004, "Member 'BP_EnemyVisionFogComponent_C_UpdateChangeFogParameter::LChangeAlphaLerpEnd' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_UpdateChangeFogParameter, LChangeAlphaLerpStart) == 0x000008, "Member 'BP_EnemyVisionFogComponent_C_UpdateChangeFogParameter::LChangeAlphaLerpStart' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_UpdateChangeFogParameter, LChangeFogInNearEnd) == 0x00000C, "Member 'BP_EnemyVisionFogComponent_C_UpdateChangeFogParameter::LChangeFogInNearEnd' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_UpdateChangeFogParameter, LChangeFogInNearStart) == 0x000010, "Member 'BP_EnemyVisionFogComponent_C_UpdateChangeFogParameter::LChangeFogInNearStart' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_UpdateChangeFogParameter, LChangeFogFarLerpEnd) == 0x000014, "Member 'BP_EnemyVisionFogComponent_C_UpdateChangeFogParameter::LChangeFogFarLerpEnd' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_UpdateChangeFogParameter, LChangeFogFarLerpStart) == 0x000018, "Member 'BP_EnemyVisionFogComponent_C_UpdateChangeFogParameter::LChangeFogFarLerpStart' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_UpdateChangeFogParameter, LPostProcessM) == 0x000020, "Member 'BP_EnemyVisionFogComponent_C_UpdateChangeFogParameter::LPostProcessM' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_UpdateChangeFogParameter, LIsApply) == 0x000028, "Member 'BP_EnemyVisionFogComponent_C_UpdateChangeFogParameter::LIsApply' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_UpdateChangeFogParameter, LPlayer) == 0x000030, "Member 'BP_EnemyVisionFogComponent_C_UpdateChangeFogParameter::LPlayer' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_UpdateChangeFogParameter, LChangeFogRate) == 0x000038, "Member 'BP_EnemyVisionFogComponent_C_UpdateChangeFogParameter::LChangeFogRate' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_UpdateChangeFogParameter, LbChange) == 0x00003C, "Member 'BP_EnemyVisionFogComponent_C_UpdateChangeFogParameter::LbChange' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_UpdateChangeFogParameter, LBeforeID) == 0x00003D, "Member 'BP_EnemyVisionFogComponent_C_UpdateChangeFogParameter::LBeforeID' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_UpdateChangeFogParameter, CallFunc_GetRate_ReturnValue) == 0x000040, "Member 'BP_EnemyVisionFogComponent_C_UpdateChangeFogParameter::CallFunc_GetRate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_UpdateChangeFogParameter, CallFunc_Lerp_ReturnValue) == 0x000044, "Member 'BP_EnemyVisionFogComponent_C_UpdateChangeFogParameter::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_UpdateChangeFogParameter, CallFunc_IsOver_ReturnValue) == 0x000048, "Member 'BP_EnemyVisionFogComponent_C_UpdateChangeFogParameter::CallFunc_IsOver_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_UpdateChangeFogParameter, CallFunc_GetPostProcessManager_Manager) == 0x000050, "Member 'BP_EnemyVisionFogComponent_C_UpdateChangeFogParameter::CallFunc_GetPostProcessManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_UpdateChangeFogParameter, CallFunc_IsValid_ReturnValue) == 0x000058, "Member 'BP_EnemyVisionFogComponent_C_UpdateChangeFogParameter::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_EnemyVisionFogComponent.BP_EnemyVisionFogComponent_C.SetChangeFogParameter
// 0x001C (0x001C - 0x0000)
struct BP_EnemyVisionFogComponent_C_SetChangeFogParameter final
{
public:
	float                                         InDefaultFogFar;                                   // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InChangeFogFar;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InDefaultFogInNear;                                // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InChangeFogInNear;                                 // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InDefaultAlpha;                                    // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InChangeAlpha;                                     // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InChangeParamTime;                                 // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EnemyVisionFogComponent_C_SetChangeFogParameter) == 0x000004, "Wrong alignment on BP_EnemyVisionFogComponent_C_SetChangeFogParameter");
static_assert(sizeof(BP_EnemyVisionFogComponent_C_SetChangeFogParameter) == 0x00001C, "Wrong size on BP_EnemyVisionFogComponent_C_SetChangeFogParameter");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_SetChangeFogParameter, InDefaultFogFar) == 0x000000, "Member 'BP_EnemyVisionFogComponent_C_SetChangeFogParameter::InDefaultFogFar' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_SetChangeFogParameter, InChangeFogFar) == 0x000004, "Member 'BP_EnemyVisionFogComponent_C_SetChangeFogParameter::InChangeFogFar' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_SetChangeFogParameter, InDefaultFogInNear) == 0x000008, "Member 'BP_EnemyVisionFogComponent_C_SetChangeFogParameter::InDefaultFogInNear' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_SetChangeFogParameter, InChangeFogInNear) == 0x00000C, "Member 'BP_EnemyVisionFogComponent_C_SetChangeFogParameter::InChangeFogInNear' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_SetChangeFogParameter, InDefaultAlpha) == 0x000010, "Member 'BP_EnemyVisionFogComponent_C_SetChangeFogParameter::InDefaultAlpha' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_SetChangeFogParameter, InChangeAlpha) == 0x000014, "Member 'BP_EnemyVisionFogComponent_C_SetChangeFogParameter::InChangeAlpha' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_SetChangeFogParameter, InChangeParamTime) == 0x000018, "Member 'BP_EnemyVisionFogComponent_C_SetChangeFogParameter::InChangeParamTime' has a wrong offset!");

// Function BP_EnemyVisionFogComponent.BP_EnemyVisionFogComponent_C.GetAlpha
// 0x000C (0x000C - 0x0000)
struct BP_EnemyVisionFogComponent_C_GetAlpha final
{
public:
	float                                         Param_Alpha;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EnemyVisionFogComponent_C_GetAlpha) == 0x000004, "Wrong alignment on BP_EnemyVisionFogComponent_C_GetAlpha");
static_assert(sizeof(BP_EnemyVisionFogComponent_C_GetAlpha) == 0x00000C, "Wrong size on BP_EnemyVisionFogComponent_C_GetAlpha");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_GetAlpha, Param_Alpha) == 0x000000, "Member 'BP_EnemyVisionFogComponent_C_GetAlpha::Param_Alpha' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_GetAlpha, CallFunc_FClamp_ReturnValue) == 0x000004, "Member 'BP_EnemyVisionFogComponent_C_GetAlpha::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyVisionFogComponent_C_GetAlpha, CallFunc_SelectFloat_ReturnValue) == 0x000008, "Member 'BP_EnemyVisionFogComponent_C_GetAlpha::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");

}

