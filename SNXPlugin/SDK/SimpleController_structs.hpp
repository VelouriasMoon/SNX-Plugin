#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SimpleController

#include "Basic.hpp"


namespace SDK
{

// Enum SimpleController.ESimpleControllerButtons
// NumValues: 0x0016
enum class ESimpleControllerButtons : uint8
{
	Button_0                                 = 0,
	Button_1                                 = 1,
	Button_2                                 = 2,
	Button_3                                 = 3,
	Button_4                                 = 4,
	Button_5                                 = 5,
	Button_6                                 = 6,
	Button_7                                 = 7,
	Button_8                                 = 8,
	Button_9                                 = 9,
	Button_10                                = 10,
	Button_11                                = 11,
	Button_12                                = 12,
	Button_13                                = 13,
	Button_14                                = 14,
	Button_15                                = 15,
	Button_16                                = 16,
	Button_17                                = 17,
	Button_18                                = 18,
	Button_19                                = 19,
	Button_20                                = 20,
	Button_MAX                               = 21,
};

// Enum SimpleController.ESimpleControllerForceFeedbackEffectConditionType
// NumValues: 0x0005
enum class ESimpleControllerForceFeedbackEffectConditionType : uint8
{
	SPRING                                   = 0,
	DAMPER                                   = 1,
	INERTIA                                  = 2,
	FRICTION                                 = 3,
	ESimpleControllerForceFeedbackEffectConditionType_MAX = 4,
};

// Enum SimpleController.ESimpleControllerForceFeedbackDirectionType
// NumValues: 0x0004
enum class ESimpleControllerForceFeedbackDirectionType : uint8
{
	CARTESIAN                                = 0,
	POLAR                                    = 1,
	SPHERICAL                                = 2,
	ESimpleControllerForceFeedbackDirectionType_MAX = 3,
};

// Enum SimpleController.ESimpleControllerForceFeedbackEffectPeriodicType
// NumValues: 0x0005
enum class ESimpleControllerForceFeedbackEffectPeriodicType : uint8
{
	SINE                                     = 0,
	TRIANGLE                                 = 1,
	SAWTOOTHUP                               = 2,
	SAWTOOTHDOWN                             = 3,
	ESimpleControllerForceFeedbackEffectPeriodicType_MAX = 4,
};

// Enum SimpleController.ESimpleControllerDirectionalPad
// NumValues: 0x000A
enum class ESimpleControllerDirectionalPad : uint8
{
	CENTERED                                 = 0,
	UP                                       = 1,
	RIGHT                                    = 2,
	DOWN                                     = 3,
	LEFT                                     = 4,
	RIGHTUP                                  = 5,
	RIGHTDOWN                                = 6,
	LEFTUP                                   = 7,
	LEFTDOWN                                 = 8,
	ESimpleControllerDirectionalPad_MAX      = 9,
};

// Enum SimpleController.ESimpleControllerDirectoryType
// NumValues: 0x0003
enum class ESimpleControllerDirectoryType : uint8
{
	GameDir                                  = 0,
	AbsoluteDir                              = 1,
	ESimpleControllerDirectoryType_MAX       = 2,
};

// Enum SimpleController.ESimpleControllerForceFeedbackEffectType
// NumValues: 0x0003
enum class ESimpleControllerForceFeedbackEffectType : uint8
{
	CONSTANT                                 = 0,
	LEFTRIGHT                                = 1,
	ESimpleControllerForceFeedbackEffectType_MAX = 2,
};

// ScriptStruct SimpleController.SimpleControllerDevice
// 0x0180 (0x0180 - 0x0000)
struct alignas(0x08) FSimpleControllerDevice final
{
public:
	uint8                                         Pad_1409[0x180];                                   // 0x0000(0x0180)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FSimpleControllerDevice) == 0x000008, "Wrong alignment on FSimpleControllerDevice");
static_assert(sizeof(FSimpleControllerDevice) == 0x000180, "Wrong size on FSimpleControllerDevice");

// ScriptStruct SimpleController.SimpleControllerForceFeedbackEffect
// 0x0018 (0x0018 - 0x0000)
struct alignas(0x08) FSimpleControllerForceFeedbackEffect final
{
public:
	uint8                                         Pad_140A[0x18];                                    // 0x0000(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FSimpleControllerForceFeedbackEffect) == 0x000008, "Wrong alignment on FSimpleControllerForceFeedbackEffect");
static_assert(sizeof(FSimpleControllerForceFeedbackEffect) == 0x000018, "Wrong size on FSimpleControllerForceFeedbackEffect");

}

