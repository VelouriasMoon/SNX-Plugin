#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CaptureCineCameraActor

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "ERenderTargetType_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_CaptureCineCameraActor.BP_CaptureCineCameraActor_C.ExecuteUbergraph_BP_CaptureCineCameraActor
// 0x0090 (0x0090 - 0x0000)
struct BP_CaptureCineCameraActor_C_ExecuteUbergraph_BP_CaptureCineCameraActor final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6335[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCineCameraComponent*                   K2Node_DynamicCast_AsCine_Camera_Component;        // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6336[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetHorizontalFieldOfView_ReturnValue;     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_index;                                // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Enable;                               // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_UseBloom;                             // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6337[0x2];                                     // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               K2Node_Event_MID;                                  // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBlendableInterface>   CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput; // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ABP_RenderTargetManager_C*              CallFunc_GetRenderTargetManager_Manager;           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 CallFunc_GetRenderTarget_RenderTarget;             // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_RenderTargetManager_C*              CallFunc_GetRenderTargetManager_Manager_1;         // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ERenderTargetType                             K2Node_CustomEvent_RenderTargetType;               // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6338[0x5];                                     // 0x005B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextureRenderTarget2D*                 K2Node_CustomEvent_NewTarget;                      // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(ERenderTargetType RenderTargetType, class UTextureRenderTarget2D* NewTarget)> K2Node_CreateDelegate_OutputDelegate;              // 0x0068(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6339[0x6];                                     // 0x007A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_RenderTargetManager_C*              CallFunc_GetRenderTargetManager_Manager_2;         // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CaptureCineCameraActor_C_ExecuteUbergraph_BP_CaptureCineCameraActor) == 0x000008, "Wrong alignment on BP_CaptureCineCameraActor_C_ExecuteUbergraph_BP_CaptureCineCameraActor");
static_assert(sizeof(BP_CaptureCineCameraActor_C_ExecuteUbergraph_BP_CaptureCineCameraActor) == 0x000090, "Wrong size on BP_CaptureCineCameraActor_C_ExecuteUbergraph_BP_CaptureCineCameraActor");
static_assert(offsetof(BP_CaptureCineCameraActor_C_ExecuteUbergraph_BP_CaptureCineCameraActor, EntryPoint) == 0x000000, "Member 'BP_CaptureCineCameraActor_C_ExecuteUbergraph_BP_CaptureCineCameraActor::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_CaptureCineCameraActor_C_ExecuteUbergraph_BP_CaptureCineCameraActor, K2Node_Event_DeltaSeconds) == 0x000004, "Member 'BP_CaptureCineCameraActor_C_ExecuteUbergraph_BP_CaptureCineCameraActor::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_CaptureCineCameraActor_C_ExecuteUbergraph_BP_CaptureCineCameraActor, Temp_bool_Has_Been_Initd_Variable) == 0x000008, "Member 'BP_CaptureCineCameraActor_C_ExecuteUbergraph_BP_CaptureCineCameraActor::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_CaptureCineCameraActor_C_ExecuteUbergraph_BP_CaptureCineCameraActor, K2Node_DynamicCast_AsCine_Camera_Component) == 0x000010, "Member 'BP_CaptureCineCameraActor_C_ExecuteUbergraph_BP_CaptureCineCameraActor::K2Node_DynamicCast_AsCine_Camera_Component' has a wrong offset!");
static_assert(offsetof(BP_CaptureCineCameraActor_C_ExecuteUbergraph_BP_CaptureCineCameraActor, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_CaptureCineCameraActor_C_ExecuteUbergraph_BP_CaptureCineCameraActor::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_CaptureCineCameraActor_C_ExecuteUbergraph_BP_CaptureCineCameraActor, CallFunc_GetHorizontalFieldOfView_ReturnValue) == 0x00001C, "Member 'BP_CaptureCineCameraActor_C_ExecuteUbergraph_BP_CaptureCineCameraActor::CallFunc_GetHorizontalFieldOfView_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CaptureCineCameraActor_C_ExecuteUbergraph_BP_CaptureCineCameraActor, K2Node_Event_index) == 0x000020, "Member 'BP_CaptureCineCameraActor_C_ExecuteUbergraph_BP_CaptureCineCameraActor::K2Node_Event_index' has a wrong offset!");
static_assert(offsetof(BP_CaptureCineCameraActor_C_ExecuteUbergraph_BP_CaptureCineCameraActor, K2Node_Event_Enable) == 0x000024, "Member 'BP_CaptureCineCameraActor_C_ExecuteUbergraph_BP_CaptureCineCameraActor::K2Node_Event_Enable' has a wrong offset!");
static_assert(offsetof(BP_CaptureCineCameraActor_C_ExecuteUbergraph_BP_CaptureCineCameraActor, K2Node_Event_UseBloom) == 0x000025, "Member 'BP_CaptureCineCameraActor_C_ExecuteUbergraph_BP_CaptureCineCameraActor::K2Node_Event_UseBloom' has a wrong offset!");
static_assert(offsetof(BP_CaptureCineCameraActor_C_ExecuteUbergraph_BP_CaptureCineCameraActor, K2Node_Event_MID) == 0x000028, "Member 'BP_CaptureCineCameraActor_C_ExecuteUbergraph_BP_CaptureCineCameraActor::K2Node_Event_MID' has a wrong offset!");
static_assert(offsetof(BP_CaptureCineCameraActor_C_ExecuteUbergraph_BP_CaptureCineCameraActor, CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput) == 0x000030, "Member 'BP_CaptureCineCameraActor_C_ExecuteUbergraph_BP_CaptureCineCameraActor::CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput' has a wrong offset!");
static_assert(offsetof(BP_CaptureCineCameraActor_C_ExecuteUbergraph_BP_CaptureCineCameraActor, CallFunc_GetRenderTargetManager_Manager) == 0x000040, "Member 'BP_CaptureCineCameraActor_C_ExecuteUbergraph_BP_CaptureCineCameraActor::CallFunc_GetRenderTargetManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_CaptureCineCameraActor_C_ExecuteUbergraph_BP_CaptureCineCameraActor, CallFunc_GetRenderTarget_RenderTarget) == 0x000048, "Member 'BP_CaptureCineCameraActor_C_ExecuteUbergraph_BP_CaptureCineCameraActor::CallFunc_GetRenderTarget_RenderTarget' has a wrong offset!");
static_assert(offsetof(BP_CaptureCineCameraActor_C_ExecuteUbergraph_BP_CaptureCineCameraActor, CallFunc_GetRenderTargetManager_Manager_1) == 0x000050, "Member 'BP_CaptureCineCameraActor_C_ExecuteUbergraph_BP_CaptureCineCameraActor::CallFunc_GetRenderTargetManager_Manager_1' has a wrong offset!");
static_assert(offsetof(BP_CaptureCineCameraActor_C_ExecuteUbergraph_BP_CaptureCineCameraActor, CallFunc_IsValid_ReturnValue) == 0x000058, "Member 'BP_CaptureCineCameraActor_C_ExecuteUbergraph_BP_CaptureCineCameraActor::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CaptureCineCameraActor_C_ExecuteUbergraph_BP_CaptureCineCameraActor, Temp_bool_IsClosed_Variable) == 0x000059, "Member 'BP_CaptureCineCameraActor_C_ExecuteUbergraph_BP_CaptureCineCameraActor::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_CaptureCineCameraActor_C_ExecuteUbergraph_BP_CaptureCineCameraActor, K2Node_CustomEvent_RenderTargetType) == 0x00005A, "Member 'BP_CaptureCineCameraActor_C_ExecuteUbergraph_BP_CaptureCineCameraActor::K2Node_CustomEvent_RenderTargetType' has a wrong offset!");
static_assert(offsetof(BP_CaptureCineCameraActor_C_ExecuteUbergraph_BP_CaptureCineCameraActor, K2Node_CustomEvent_NewTarget) == 0x000060, "Member 'BP_CaptureCineCameraActor_C_ExecuteUbergraph_BP_CaptureCineCameraActor::K2Node_CustomEvent_NewTarget' has a wrong offset!");
static_assert(offsetof(BP_CaptureCineCameraActor_C_ExecuteUbergraph_BP_CaptureCineCameraActor, K2Node_CreateDelegate_OutputDelegate) == 0x000068, "Member 'BP_CaptureCineCameraActor_C_ExecuteUbergraph_BP_CaptureCineCameraActor::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_CaptureCineCameraActor_C_ExecuteUbergraph_BP_CaptureCineCameraActor, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000078, "Member 'BP_CaptureCineCameraActor_C_ExecuteUbergraph_BP_CaptureCineCameraActor::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CaptureCineCameraActor_C_ExecuteUbergraph_BP_CaptureCineCameraActor, K2Node_Event_EndPlayReason) == 0x000079, "Member 'BP_CaptureCineCameraActor_C_ExecuteUbergraph_BP_CaptureCineCameraActor::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(BP_CaptureCineCameraActor_C_ExecuteUbergraph_BP_CaptureCineCameraActor, CallFunc_GetRenderTargetManager_Manager_2) == 0x000080, "Member 'BP_CaptureCineCameraActor_C_ExecuteUbergraph_BP_CaptureCineCameraActor::CallFunc_GetRenderTargetManager_Manager_2' has a wrong offset!");
static_assert(offsetof(BP_CaptureCineCameraActor_C_ExecuteUbergraph_BP_CaptureCineCameraActor, CallFunc_IsValid_ReturnValue_1) == 0x000088, "Member 'BP_CaptureCineCameraActor_C_ExecuteUbergraph_BP_CaptureCineCameraActor::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_CaptureCineCameraActor.BP_CaptureCineCameraActor_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_CaptureCineCameraActor_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CaptureCineCameraActor_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BP_CaptureCineCameraActor_C_ReceiveEndPlay");
static_assert(sizeof(BP_CaptureCineCameraActor_C_ReceiveEndPlay) == 0x000001, "Wrong size on BP_CaptureCineCameraActor_C_ReceiveEndPlay");
static_assert(offsetof(BP_CaptureCineCameraActor_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BP_CaptureCineCameraActor_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BP_CaptureCineCameraActor.BP_CaptureCineCameraActor_C.ResetRenderTarget
// 0x0010 (0x0010 - 0x0000)
struct BP_CaptureCineCameraActor_C_ResetRenderTarget final
{
public:
	ERenderTargetType                             RenderTargetType;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_633A[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextureRenderTarget2D*                 NewTarget;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CaptureCineCameraActor_C_ResetRenderTarget) == 0x000008, "Wrong alignment on BP_CaptureCineCameraActor_C_ResetRenderTarget");
static_assert(sizeof(BP_CaptureCineCameraActor_C_ResetRenderTarget) == 0x000010, "Wrong size on BP_CaptureCineCameraActor_C_ResetRenderTarget");
static_assert(offsetof(BP_CaptureCineCameraActor_C_ResetRenderTarget, RenderTargetType) == 0x000000, "Member 'BP_CaptureCineCameraActor_C_ResetRenderTarget::RenderTargetType' has a wrong offset!");
static_assert(offsetof(BP_CaptureCineCameraActor_C_ResetRenderTarget, NewTarget) == 0x000008, "Member 'BP_CaptureCineCameraActor_C_ResetRenderTarget::NewTarget' has a wrong offset!");

// Function BP_CaptureCineCameraActor.BP_CaptureCineCameraActor_C.AddPostProcessMaterial
// 0x0008 (0x0008 - 0x0000)
struct BP_CaptureCineCameraActor_C_AddPostProcessMaterial final
{
public:
	class UMaterialInstanceDynamic*               Mid;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CaptureCineCameraActor_C_AddPostProcessMaterial) == 0x000008, "Wrong alignment on BP_CaptureCineCameraActor_C_AddPostProcessMaterial");
static_assert(sizeof(BP_CaptureCineCameraActor_C_AddPostProcessMaterial) == 0x000008, "Wrong size on BP_CaptureCineCameraActor_C_AddPostProcessMaterial");
static_assert(offsetof(BP_CaptureCineCameraActor_C_AddPostProcessMaterial, Mid) == 0x000000, "Member 'BP_CaptureCineCameraActor_C_AddPostProcessMaterial::Mid' has a wrong offset!");

// Function BP_CaptureCineCameraActor.BP_CaptureCineCameraActor_C.SetUseBloom
// 0x0001 (0x0001 - 0x0000)
struct BP_CaptureCineCameraActor_C_SetUseBloom final
{
public:
	bool                                          UseBloom;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CaptureCineCameraActor_C_SetUseBloom) == 0x000001, "Wrong alignment on BP_CaptureCineCameraActor_C_SetUseBloom");
static_assert(sizeof(BP_CaptureCineCameraActor_C_SetUseBloom) == 0x000001, "Wrong size on BP_CaptureCineCameraActor_C_SetUseBloom");
static_assert(offsetof(BP_CaptureCineCameraActor_C_SetUseBloom, UseBloom) == 0x000000, "Member 'BP_CaptureCineCameraActor_C_SetUseBloom::UseBloom' has a wrong offset!");

// Function BP_CaptureCineCameraActor.BP_CaptureCineCameraActor_C.SetTickFlags
// 0x0001 (0x0001 - 0x0000)
struct BP_CaptureCineCameraActor_C_SetTickFlags final
{
public:
	bool                                          Enable;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CaptureCineCameraActor_C_SetTickFlags) == 0x000001, "Wrong alignment on BP_CaptureCineCameraActor_C_SetTickFlags");
static_assert(sizeof(BP_CaptureCineCameraActor_C_SetTickFlags) == 0x000001, "Wrong size on BP_CaptureCineCameraActor_C_SetTickFlags");
static_assert(offsetof(BP_CaptureCineCameraActor_C_SetTickFlags, Enable) == 0x000000, "Member 'BP_CaptureCineCameraActor_C_SetTickFlags::Enable' has a wrong offset!");

// Function BP_CaptureCineCameraActor.BP_CaptureCineCameraActor_C.SetCutinBufferIndex
// 0x0004 (0x0004 - 0x0000)
struct BP_CaptureCineCameraActor_C_SetCutinBufferIndex final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CaptureCineCameraActor_C_SetCutinBufferIndex) == 0x000004, "Wrong alignment on BP_CaptureCineCameraActor_C_SetCutinBufferIndex");
static_assert(sizeof(BP_CaptureCineCameraActor_C_SetCutinBufferIndex) == 0x000004, "Wrong size on BP_CaptureCineCameraActor_C_SetCutinBufferIndex");
static_assert(offsetof(BP_CaptureCineCameraActor_C_SetCutinBufferIndex, Param_Index) == 0x000000, "Member 'BP_CaptureCineCameraActor_C_SetCutinBufferIndex::Param_Index' has a wrong offset!");

// Function BP_CaptureCineCameraActor.BP_CaptureCineCameraActor_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_CaptureCineCameraActor_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CaptureCineCameraActor_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_CaptureCineCameraActor_C_ReceiveTick");
static_assert(sizeof(BP_CaptureCineCameraActor_C_ReceiveTick) == 0x000004, "Wrong size on BP_CaptureCineCameraActor_C_ReceiveTick");
static_assert(offsetof(BP_CaptureCineCameraActor_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_CaptureCineCameraActor_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_CaptureCineCameraActor.BP_CaptureCineCameraActor_C.CameraSetup
// 0x0030 (0x0030 - 0x0000)
struct BP_CaptureCineCameraActor_C_CameraSetup final
{
public:
	bool                                          Success;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_633B[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SASManager_C*                       CallFunc_GetSASManager_SAS_Manager;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_633C[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_CutinManager_C*                     CallFunc_GetCutinManager_CutinManager;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACineCameraActor*                       CallFunc_GetCaptureCameraBP_CaptureCameraBP;       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CaptureCineCameraActor_C_CameraSetup) == 0x000008, "Wrong alignment on BP_CaptureCineCameraActor_C_CameraSetup");
static_assert(sizeof(BP_CaptureCineCameraActor_C_CameraSetup) == 0x000030, "Wrong size on BP_CaptureCineCameraActor_C_CameraSetup");
static_assert(offsetof(BP_CaptureCineCameraActor_C_CameraSetup, Success) == 0x000000, "Member 'BP_CaptureCineCameraActor_C_CameraSetup::Success' has a wrong offset!");
static_assert(offsetof(BP_CaptureCineCameraActor_C_CameraSetup, CallFunc_GetSASManager_SAS_Manager) == 0x000008, "Member 'BP_CaptureCineCameraActor_C_CameraSetup::CallFunc_GetSASManager_SAS_Manager' has a wrong offset!");
static_assert(offsetof(BP_CaptureCineCameraActor_C_CameraSetup, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_CaptureCineCameraActor_C_CameraSetup::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CaptureCineCameraActor_C_CameraSetup, CallFunc_GetCutinManager_CutinManager) == 0x000018, "Member 'BP_CaptureCineCameraActor_C_CameraSetup::CallFunc_GetCutinManager_CutinManager' has a wrong offset!");
static_assert(offsetof(BP_CaptureCineCameraActor_C_CameraSetup, CallFunc_GetCaptureCameraBP_CaptureCameraBP) == 0x000020, "Member 'BP_CaptureCineCameraActor_C_CameraSetup::CallFunc_GetCaptureCameraBP_CaptureCameraBP' has a wrong offset!");
static_assert(offsetof(BP_CaptureCineCameraActor_C_CameraSetup, CallFunc_IsValid_ReturnValue_1) == 0x000028, "Member 'BP_CaptureCineCameraActor_C_CameraSetup::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_CaptureCineCameraActor.BP_CaptureCineCameraActor_C.PrivateSetTickFlags
// 0x0048 (0x0048 - 0x0000)
struct BP_CaptureCineCameraActor_C_PrivateSetTickFlags final
{
public:
	bool                                          Enable;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_633D[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UActorComponent*>                L_Temp;                                            // 0x0008(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_633E[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UActorComponent*                        CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_633F[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UActorComponent*>                CallFunc_K2_GetComponentsByClass_ReturnValue;      // 0x0038(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(BP_CaptureCineCameraActor_C_PrivateSetTickFlags) == 0x000008, "Wrong alignment on BP_CaptureCineCameraActor_C_PrivateSetTickFlags");
static_assert(sizeof(BP_CaptureCineCameraActor_C_PrivateSetTickFlags) == 0x000048, "Wrong size on BP_CaptureCineCameraActor_C_PrivateSetTickFlags");
static_assert(offsetof(BP_CaptureCineCameraActor_C_PrivateSetTickFlags, Enable) == 0x000000, "Member 'BP_CaptureCineCameraActor_C_PrivateSetTickFlags::Enable' has a wrong offset!");
static_assert(offsetof(BP_CaptureCineCameraActor_C_PrivateSetTickFlags, L_Temp) == 0x000008, "Member 'BP_CaptureCineCameraActor_C_PrivateSetTickFlags::L_Temp' has a wrong offset!");
static_assert(offsetof(BP_CaptureCineCameraActor_C_PrivateSetTickFlags, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BP_CaptureCineCameraActor_C_PrivateSetTickFlags::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_CaptureCineCameraActor_C_PrivateSetTickFlags, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'BP_CaptureCineCameraActor_C_PrivateSetTickFlags::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_CaptureCineCameraActor_C_PrivateSetTickFlags, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BP_CaptureCineCameraActor_C_PrivateSetTickFlags::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CaptureCineCameraActor_C_PrivateSetTickFlags, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_CaptureCineCameraActor_C_PrivateSetTickFlags::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_CaptureCineCameraActor_C_PrivateSetTickFlags, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BP_CaptureCineCameraActor_C_PrivateSetTickFlags::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CaptureCineCameraActor_C_PrivateSetTickFlags, CallFunc_Less_IntInt_ReturnValue) == 0x000034, "Member 'BP_CaptureCineCameraActor_C_PrivateSetTickFlags::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CaptureCineCameraActor_C_PrivateSetTickFlags, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x000038, "Member 'BP_CaptureCineCameraActor_C_PrivateSetTickFlags::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");

// Function BP_CaptureCineCameraActor.BP_CaptureCineCameraActor_C.PrivateSetCutinBufferIndex
// 0x0004 (0x0004 - 0x0000)
struct BP_CaptureCineCameraActor_C_PrivateSetCutinBufferIndex final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CaptureCineCameraActor_C_PrivateSetCutinBufferIndex) == 0x000004, "Wrong alignment on BP_CaptureCineCameraActor_C_PrivateSetCutinBufferIndex");
static_assert(sizeof(BP_CaptureCineCameraActor_C_PrivateSetCutinBufferIndex) == 0x000004, "Wrong size on BP_CaptureCineCameraActor_C_PrivateSetCutinBufferIndex");
static_assert(offsetof(BP_CaptureCineCameraActor_C_PrivateSetCutinBufferIndex, Param_Index) == 0x000000, "Member 'BP_CaptureCineCameraActor_C_PrivateSetCutinBufferIndex::Param_Index' has a wrong offset!");

// Function BP_CaptureCineCameraActor.BP_CaptureCineCameraActor_C.UpdateCelLookLight
// 0x003C (0x003C - 0x0000)
struct BP_CaptureCineCameraActor_C_UpdateCelLookLight final
{
public:
	float                                         Yaw;                                               // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Pitch;                                             // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue_1; // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CaptureCineCameraActor_C_UpdateCelLookLight) == 0x000004, "Wrong alignment on BP_CaptureCineCameraActor_C_UpdateCelLookLight");
static_assert(sizeof(BP_CaptureCineCameraActor_C_UpdateCelLookLight) == 0x00003C, "Wrong size on BP_CaptureCineCameraActor_C_UpdateCelLookLight");
static_assert(offsetof(BP_CaptureCineCameraActor_C_UpdateCelLookLight, Yaw) == 0x000000, "Member 'BP_CaptureCineCameraActor_C_UpdateCelLookLight::Yaw' has a wrong offset!");
static_assert(offsetof(BP_CaptureCineCameraActor_C_UpdateCelLookLight, Pitch) == 0x000004, "Member 'BP_CaptureCineCameraActor_C_UpdateCelLookLight::Pitch' has a wrong offset!");
static_assert(offsetof(BP_CaptureCineCameraActor_C_UpdateCelLookLight, CallFunc_MakeRotator_ReturnValue) == 0x000008, "Member 'BP_CaptureCineCameraActor_C_UpdateCelLookLight::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CaptureCineCameraActor_C_UpdateCelLookLight, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000014, "Member 'BP_CaptureCineCameraActor_C_UpdateCelLookLight::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CaptureCineCameraActor_C_UpdateCelLookLight, CallFunc_MakeRotator_ReturnValue_1) == 0x000018, "Member 'BP_CaptureCineCameraActor_C_UpdateCelLookLight::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CaptureCineCameraActor_C_UpdateCelLookLight, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x000024, "Member 'BP_CaptureCineCameraActor_C_UpdateCelLookLight::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CaptureCineCameraActor_C_UpdateCelLookLight, CallFunc_GreaterGreater_VectorRotator_ReturnValue_1) == 0x000030, "Member 'BP_CaptureCineCameraActor_C_UpdateCelLookLight::CallFunc_GreaterGreater_VectorRotator_ReturnValue_1' has a wrong offset!");

// Function BP_CaptureCineCameraActor.BP_CaptureCineCameraActor_C.GetSceneCaptureComponent2D
// 0x0008 (0x0008 - 0x0000)
struct BP_CaptureCineCameraActor_C_GetSceneCaptureComponent2D final
{
public:
	class USceneCaptureComponent2D*               SceneCaptureComponent2D;                           // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CaptureCineCameraActor_C_GetSceneCaptureComponent2D) == 0x000008, "Wrong alignment on BP_CaptureCineCameraActor_C_GetSceneCaptureComponent2D");
static_assert(sizeof(BP_CaptureCineCameraActor_C_GetSceneCaptureComponent2D) == 0x000008, "Wrong size on BP_CaptureCineCameraActor_C_GetSceneCaptureComponent2D");
static_assert(offsetof(BP_CaptureCineCameraActor_C_GetSceneCaptureComponent2D, SceneCaptureComponent2D) == 0x000000, "Member 'BP_CaptureCineCameraActor_C_GetSceneCaptureComponent2D::SceneCaptureComponent2D' has a wrong offset!");

}

