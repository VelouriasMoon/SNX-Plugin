#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PsychicObjectBasic

#include "Basic.hpp"

#include "BP_PsychicObjectBasic_classes.hpp"
#include "BP_PsychicObjectBasic_parameters.hpp"


namespace SDK
{

// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.ExecuteUbergraph_BP_PsychicObjectBasic
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PsychicObjectBasic_C::ExecuteUbergraph_BP_PsychicObjectBasic(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "ExecuteUbergraph_BP_PsychicObjectBasic");

	Params::BP_PsychicObjectBasic_C_ExecuteUbergraph_BP_PsychicObjectBasic Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.SetPsychicObjectVisibility
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Is_mesh_only                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_PsychicObjectBasic_C::SetPsychicObjectVisibility(bool Flag_in, bool Is_mesh_only)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "SetPsychicObjectVisibility");

	Params::BP_PsychicObjectBasic_C_SetPsychicObjectVisibility Parms{};

	Parms.Flag_in = Flag_in;
	Parms.Is_mesh_only = Is_mesh_only;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.ReceiveHit
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              MyComp                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Other                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bSelfMoved                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector                          HitLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          HitNormal                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          NormalImpulse                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       Hit                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_PsychicObjectBasic_C::ReceiveHit(class UPrimitiveComponent* MyComp, class AActor* Other, class UPrimitiveComponent* OtherComp, bool bSelfMoved, const struct FVector& HitLocation, const struct FVector& HitNormal, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "ReceiveHit");

	Params::BP_PsychicObjectBasic_C_ReceiveHit Parms{};

	Parms.MyComp = MyComp;
	Parms.Other = Other;
	Parms.OtherComp = OtherComp;
	Parms.bSelfMoved = bSelfMoved;
	Parms.HitLocation = std::move(HitLocation);
	Parms.HitNormal = std::move(HitNormal);
	Parms.NormalImpulse = std::move(NormalImpulse);
	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.ReceiveEndPlay
// (Event, Protected, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PsychicObjectBasic_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "ReceiveEndPlay");

	Params::BP_PsychicObjectBasic_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.SetPsychicObjectActive
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsActive                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_PsychicObjectBasic_C::SetPsychicObjectActive(bool IsActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "SetPsychicObjectActive");

	Params::BP_PsychicObjectBasic_C_SetPsychicObjectActive Parms{};

	Parms.IsActive = IsActive;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.BndEvt__HitCheckReceiver_K2Node_ComponentBoundEvent_0_HitResultDelegate__DelegateSignature
// (BlueprintEvent)
// Parameters:
// struct FHCHitResult                     Result                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)

void ABP_PsychicObjectBasic_C::BndEvt__HitCheckReceiver_K2Node_ComponentBoundEvent_0_HitResultDelegate__DelegateSignature(const struct FHCHitResult& Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "BndEvt__HitCheckReceiver_K2Node_ComponentBoundEvent_0_HitResultDelegate__DelegateSignature");

	Params::BP_PsychicObjectBasic_C_BndEvt__HitCheckReceiver_K2Node_ComponentBoundEvent_0_HitResultDelegate__DelegateSignature Parms{};

	Parms.Result = std::move(Result);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PsychicObjectBasic_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "ReceiveTick");

	Params::BP_PsychicObjectBasic_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_PsychicObjectBasic_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.OnCutInEnd
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_PsychicObjectBasic_C::OnCutInEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "OnCutInEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.OnCutInStart
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_PsychicObjectBasic_C::OnCutInStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "OnCutInStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.OnStealthEnd
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFSASStealthParam                Param                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Param_Owner                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RemainTime                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PsychicObjectBasic_C::OnStealthEnd(const struct FFSASStealthParam& Param, class AActor* Param_Owner, float RemainTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "OnStealthEnd");

	Params::BP_PsychicObjectBasic_C_OnStealthEnd Parms{};

	Parms.Param = std::move(Param);
	Parms.Param_Owner = Param_Owner;
	Parms.RemainTime = RemainTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.OnStealthStart
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFSASStealthParam                Param                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Param_Owner                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PsychicObjectBasic_C::OnStealthStart(const struct FFSASStealthParam& Param, class AActor* Param_Owner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "OnStealthStart");

	Params::BP_PsychicObjectBasic_C_OnStealthStart Parms{};

	Parms.Param = std::move(Param);
	Parms.Param_Owner = Param_Owner;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.OnTelepoEnd
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFSASTelepoParam                 Param                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Param_Owner                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RemainTime                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PsychicObjectBasic_C::OnTelepoEnd(const struct FFSASTelepoParam& Param, class AActor* Param_Owner, float RemainTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "OnTelepoEnd");

	Params::BP_PsychicObjectBasic_C_OnTelepoEnd Parms{};

	Parms.Param = std::move(Param);
	Parms.Param_Owner = Param_Owner;
	Parms.RemainTime = RemainTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.OnTelepoStart
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFSASTelepoParam                 Param                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Param_Owner                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PsychicObjectBasic_C::OnTelepoStart(const struct FFSASTelepoParam& Param, class AActor* Param_Owner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "OnTelepoStart");

	Params::BP_PsychicObjectBasic_C_OnTelepoStart Parms{};

	Parms.Param = std::move(Param);
	Parms.Param_Owner = Param_Owner;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.OnSeeThroughEnd
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFSASSeeThroughParam             Param                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Param_Owner                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RemainTime                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PsychicObjectBasic_C::OnSeeThroughEnd(const struct FFSASSeeThroughParam& Param, class AActor* Param_Owner, float RemainTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "OnSeeThroughEnd");

	Params::BP_PsychicObjectBasic_C_OnSeeThroughEnd Parms{};

	Parms.Param = std::move(Param);
	Parms.Param_Owner = Param_Owner;
	Parms.RemainTime = RemainTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.OnSeeThroughStart
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFSASSeeThroughParam             Param                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Param_Owner                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PsychicObjectBasic_C::OnSeeThroughStart(const struct FFSASSeeThroughParam& Param, class AActor* Param_Owner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "OnSeeThroughStart");

	Params::BP_PsychicObjectBasic_C_OnSeeThroughStart Parms{};

	Parms.Param = std::move(Param);
	Parms.Param_Owner = Param_Owner;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.OnMetalEnd
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFSASMetalParam                  Param                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Param_Owner                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RemainTime                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PsychicObjectBasic_C::OnMetalEnd(const struct FFSASMetalParam& Param, class AActor* Param_Owner, float RemainTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "OnMetalEnd");

	Params::BP_PsychicObjectBasic_C_OnMetalEnd Parms{};

	Parms.Param = std::move(Param);
	Parms.Param_Owner = Param_Owner;
	Parms.RemainTime = RemainTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.OnMetalStart
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFSASMetalParam                  Param                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Param_Owner                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PsychicObjectBasic_C::OnMetalStart(const struct FFSASMetalParam& Param, class AActor* Param_Owner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "OnMetalStart");

	Params::BP_PsychicObjectBasic_C_OnMetalStart Parms{};

	Parms.Param = std::move(Param);
	Parms.Param_Owner = Param_Owner;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.OnAcceleratorEnd
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FAcceleratorParam                Parameter                                              (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Param_Owner                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RemainTime                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bHologram                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_PsychicObjectBasic_C::OnAcceleratorEnd(const struct FAcceleratorParam& Parameter, class AActor* Param_Owner, float RemainTime, bool bHologram)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "OnAcceleratorEnd");

	Params::BP_PsychicObjectBasic_C_OnAcceleratorEnd Parms{};

	Parms.Parameter = std::move(Parameter);
	Parms.Param_Owner = Param_Owner;
	Parms.RemainTime = RemainTime;
	Parms.bHologram = bHologram;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.OnAcceleratorStart
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FAcceleratorParam                Parameter                                              (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Param_Owner                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bHologram                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_PsychicObjectBasic_C::OnAcceleratorStart(const struct FAcceleratorParam& Parameter, class AActor* Param_Owner, bool bHologram)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "OnAcceleratorStart");

	Params::BP_PsychicObjectBasic_C_OnAcceleratorStart Parms{};

	Parms.Parameter = std::move(Parameter);
	Parms.Param_Owner = Param_Owner;
	Parms.bHologram = bHologram;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.OnCopyEnd
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFSASCopyParam                   Param                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Param_Owner                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RemainTime                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PsychicObjectBasic_C::OnCopyEnd(const struct FFSASCopyParam& Param, class AActor* Param_Owner, float RemainTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "OnCopyEnd");

	Params::BP_PsychicObjectBasic_C_OnCopyEnd Parms{};

	Parms.Param = std::move(Param);
	Parms.Param_Owner = Param_Owner;
	Parms.RemainTime = RemainTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.OnElectricEnd
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFSASElectricParam               Param                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Param_Owner                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RemainTime                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PsychicObjectBasic_C::OnElectricEnd(const struct FFSASElectricParam& Param, class AActor* Param_Owner, float RemainTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "OnElectricEnd");

	Params::BP_PsychicObjectBasic_C_OnElectricEnd Parms{};

	Parms.Param = std::move(Param);
	Parms.Param_Owner = Param_Owner;
	Parms.RemainTime = RemainTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.OnFireEnd
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFSASFireParam                   Param                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Param_Owner                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RemainTime                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PsychicObjectBasic_C::OnFireEnd(const struct FFSASFireParam& Param, class AActor* Param_Owner, float RemainTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "OnFireEnd");

	Params::BP_PsychicObjectBasic_C_OnFireEnd Parms{};

	Parms.Param = std::move(Param);
	Parms.Param_Owner = Param_Owner;
	Parms.RemainTime = RemainTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.OnCopyStart
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFSASCopyParam                   Param                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Param_Owner                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PsychicObjectBasic_C::OnCopyStart(const struct FFSASCopyParam& Param, class AActor* Param_Owner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "OnCopyStart");

	Params::BP_PsychicObjectBasic_C_OnCopyStart Parms{};

	Parms.Param = std::move(Param);
	Parms.Param_Owner = Param_Owner;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.OnFireStart
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFSASFireParam                   Param                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Param_Owner                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PsychicObjectBasic_C::OnFireStart(const struct FFSASFireParam& Param, class AActor* Param_Owner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "OnFireStart");

	Params::BP_PsychicObjectBasic_C_OnFireStart Parms{};

	Parms.Param = std::move(Param);
	Parms.Param_Owner = Param_Owner;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.OnElectricStart
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFSASElectricParam               Param                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Param_Owner                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PsychicObjectBasic_C::OnElectricStart(const struct FFSASElectricParam& Param, class AActor* Param_Owner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "OnElectricStart");

	Params::BP_PsychicObjectBasic_C_OnElectricStart Parms{};

	Parms.Param = std::move(Param);
	Parms.Param_Owner = Param_Owner;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.OnPsychicEnd
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFSASPsychicParam                Param                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Param_Owner                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RemainTime                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PsychicObjectBasic_C::OnPsychicEnd(const struct FFSASPsychicParam& Param, class AActor* Param_Owner, float RemainTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "OnPsychicEnd");

	Params::BP_PsychicObjectBasic_C_OnPsychicEnd Parms{};

	Parms.Param = std::move(Param);
	Parms.Param_Owner = Param_Owner;
	Parms.RemainTime = RemainTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.OnPsychicStart
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFSASPsychicParam                Param                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Param_Owner                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PsychicObjectBasic_C::OnPsychicStart(const struct FFSASPsychicParam& Param, class AActor* Param_Owner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "OnPsychicStart");

	Params::BP_PsychicObjectBasic_C_OnPsychicStart Parms{};

	Parms.Param = std::move(Param);
	Parms.Param_Owner = Param_Owner;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.UserConstructionScript
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_PsychicObjectBasic_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.Initialize
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_PsychicObjectBasic_C::Initialize(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "Initialize");

	Params::BP_PsychicObjectBasic_C_Initialize Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.Update
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Delta_second_in                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_PsychicObjectBasic_C::Update(float Delta_second_in, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "Update");

	Params::BP_PsychicObjectBasic_C_Update Parms{};

	Parms.Delta_second_in = Delta_second_in;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.DebugDisplay
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_PsychicObjectBasic_C::DebugDisplay(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "DebugDisplay");

	Params::BP_PsychicObjectBasic_C_DebugDisplay Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.On Hit Attack
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FHCHitResult                     Hit_result_in                                          (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_PsychicObjectBasic_C::On_Hit_Attack(const struct FHCHitResult& Hit_result_in, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "On Hit Attack");

	Params::BP_PsychicObjectBasic_C_On_Hit_Attack Parms{};

	Parms.Hit_result_in = std::move(Hit_result_in);

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.SetActivePsyObjOld
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bActive_in                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_PsychicObjectBasic_C::SetActivePsyObjOld(bool bActive_in, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "SetActivePsyObjOld");

	Params::BP_PsychicObjectBasic_C_SetActivePsyObjOld Parms{};

	Parms.bActive_in = bActive_in;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.SetThrow
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Target_in                                              (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Force_throw_in                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Psychic_combo_in                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_PsychicObjectBasic_C::SetThrow(class AActor*& Target_in, bool Force_throw_in, bool Psychic_combo_in, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "SetThrow");

	Params::BP_PsychicObjectBasic_C_SetThrow Parms{};

	Parms.Target_in = Target_in;
	Parms.Force_throw_in = Force_throw_in;
	Parms.Psychic_combo_in = Psychic_combo_in;

	UObject::ProcessEvent(Func, &Parms);

	Target_in = Parms.Target_in;

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.CanPsychicAction
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_PsychicObjectBasic_C::CanPsychicAction(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "CanPsychicAction");

	Params::BP_PsychicObjectBasic_C_CanPsychicAction Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.SetPsychicAction
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Target_actor_in                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Psychic_combo_in                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_PsychicObjectBasic_C::SetPsychicAction(class AActor* Target_actor_in, bool Psychic_combo_in, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "SetPsychicAction");

	Params::BP_PsychicObjectBasic_C_SetPsychicAction Parms{};

	Parms.Target_actor_in = Target_actor_in;
	Parms.Psychic_combo_in = Psychic_combo_in;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.RequestPsychicCombo
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_PsychicObjectBasic_C::RequestPsychicCombo(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "RequestPsychicCombo");

	Params::BP_PsychicObjectBasic_C_RequestPsychicCombo Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.SetGrab
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class ARsBattleHero_C*                  Grab_owner_in                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Grab_index_in                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PsychicObjectBasic_C::SetGrab(bool Flag_in, class ARsBattleHero_C* Grab_owner_in, int32 Grab_index_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "SetGrab");

	Params::BP_PsychicObjectBasic_C_SetGrab Parms{};

	Parms.Flag_in = Flag_in;
	Parms.Grab_owner_in = Grab_owner_in;
	Parms.Grab_index_in = Grab_index_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.CheckGrabIndex
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Grab_index_in                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_PsychicObjectBasic_C::CheckGrabIndex(int32 Grab_index_in, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "CheckGrabIndex");

	Params::BP_PsychicObjectBasic_C_CheckGrabIndex Parms{};

	Parms.Grab_index_in = Grab_index_in;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.ReloadGrab
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Grab_index_in                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bCombo                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_PsychicObjectBasic_C::ReloadGrab(int32 Grab_index_in, bool bCombo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "ReloadGrab");

	Params::BP_PsychicObjectBasic_C_ReloadGrab Parms{};

	Parms.Grab_index_in = Grab_index_in;
	Parms.bCombo = bCombo;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.SetDestroy
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Force_in                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_PsychicObjectBasic_C::SetDestroy(bool Force_in, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "SetDestroy");

	Params::BP_PsychicObjectBasic_C_SetDestroy Parms{};

	Parms.Force_in = Force_in;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.DestroyPsyObj
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_PsychicObjectBasic_C::DestroyPsyObj()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "DestroyPsyObj");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.SetGrabStart
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_PsychicObjectBasic_C::SetGrabStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "SetGrabStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.GetAnimationLength
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Length                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PsychicObjectBasic_C::GetAnimationLength(float* Length)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "GetAnimationLength");

	Params::BP_PsychicObjectBasic_C_GetAnimationLength Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Length != nullptr)
		*Length = Parms.Length;
}


// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.isGrab
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_PsychicObjectBasic_C::IsGrab(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "isGrab");

	Params::BP_PsychicObjectBasic_C_IsGrab Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.CheckAttackType
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// PsychicObjectAttackType::EPsychicObjectAttackTypeAttack_type_in                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_PsychicObjectBasic_C::CheckAttackType(PsychicObjectAttackType::EPsychicObjectAttackType Attack_type_in, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "CheckAttackType");

	Params::BP_PsychicObjectBasic_C_CheckAttackType Parms{};

	Parms.Attack_type_in = Attack_type_in;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.GetAttackCollision
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Throw_in                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UPrimitiveComponent*              Attack_collision                                       (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PsychicObjectBasic_C::GetAttackCollision(bool Throw_in, class UPrimitiveComponent** Attack_collision)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "GetAttackCollision");

	Params::BP_PsychicObjectBasic_C_GetAttackCollision Parms{};

	Parms.Throw_in = Throw_in;

	UObject::ProcessEvent(Func, &Parms);

	if (Attack_collision != nullptr)
		*Attack_collision = Parms.Attack_collision;
}


// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.SetVisibilityPsyObj
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Mesh_only                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_PsychicObjectBasic_C::SetVisibilityPsyObj(bool Flag_in, bool Mesh_only, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "SetVisibilityPsyObj");

	Params::BP_PsychicObjectBasic_C_SetVisibilityPsyObj Parms{};

	Parms.Flag_in = Flag_in;
	Parms.Mesh_only = Mesh_only;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.SetCollisionPsyObj
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Is_capsule_in                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_PsychicObjectBasic_C::SetCollisionPsyObj(bool Flag_in, bool Is_capsule_in, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "SetCollisionPsyObj");

	Params::BP_PsychicObjectBasic_C_SetCollisionPsyObj Parms{};

	Parms.Flag_in = Flag_in;
	Parms.Is_capsule_in = Is_capsule_in;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.isBrainCapture
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_PsychicObjectBasic_C::IsBrainCapture(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "isBrainCapture");

	Params::BP_PsychicObjectBasic_C_IsBrainCapture Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.IsUnique
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_PsychicObjectBasic_C::IsUnique(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "IsUnique");

	Params::BP_PsychicObjectBasic_C_IsUnique Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.CallbackHitEnemy
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_PsychicObjectBasic_C::CallbackHitEnemy(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "CallbackHitEnemy");

	Params::BP_PsychicObjectBasic_C_CallbackHitEnemy Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.isPsychicActiveOld
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_PsychicObjectBasic_C::IsPsychicActiveOld(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "isPsychicActiveOld");

	Params::BP_PsychicObjectBasic_C_IsPsychicActiveOld Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.SetTickEnable
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_PsychicObjectBasic_C::SetTickEnable(bool Flag_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "SetTickEnable");

	Params::BP_PsychicObjectBasic_C_SetTickEnable Parms{};

	Parms.Flag_in = Flag_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.GetCameraShakeData
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UClass*                           Camera_shake_class                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Scale                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PsychicObjectBasic_C::GetCameraShakeData(class UClass** Camera_shake_class, float* Scale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "GetCameraShakeData");

	Params::BP_PsychicObjectBasic_C_GetCameraShakeData Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Camera_shake_class != nullptr)
		*Camera_shake_class = Parms.Camera_shake_class;

	if (Scale != nullptr)
		*Scale = Parms.Scale;
}


// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.GetAttackDirection
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Is_swing_direction                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector                          Attack_direction                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PsychicObjectBasic_C::GetAttackDirection(bool Is_swing_direction, bool* Return, struct FVector* Attack_direction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "GetAttackDirection");

	Params::BP_PsychicObjectBasic_C_GetAttackDirection Parms{};

	Parms.Is_swing_direction = Is_swing_direction;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;

	if (Attack_direction != nullptr)
		*Attack_direction = std::move(Parms.Attack_direction);
}


// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.CheckPsychicObjectType
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EPsyObjType                             Psychic_object_type_in                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_PsychicObjectBasic_C::CheckPsychicObjectType(EPsyObjType Psychic_object_type_in, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "CheckPsychicObjectType");

	Params::BP_PsychicObjectBasic_C_CheckPsychicObjectType Parms{};

	Parms.Psychic_object_type_in = Psychic_object_type_in;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.GetGrabIndex
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Grab_index                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PsychicObjectBasic_C::GetGrabIndex(int32* Grab_index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "GetGrabIndex");

	Params::BP_PsychicObjectBasic_C_GetGrabIndex Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Grab_index != nullptr)
		*Grab_index = Parms.Grab_index;
}


// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.GetBrainIndex
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   brain_index                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PsychicObjectBasic_C::GetBrainIndex(int32* brain_index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "GetBrainIndex");

	Params::BP_PsychicObjectBasic_C_GetBrainIndex Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (brain_index != nullptr)
		*brain_index = Parms.brain_index;
}


// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.GetRequestIndex
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Request_index                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PsychicObjectBasic_C::GetRequestIndex(int32* Request_index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "GetRequestIndex");

	Params::BP_PsychicObjectBasic_C_GetRequestIndex Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Request_index != nullptr)
		*Request_index = Parms.Request_index;
}


// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.isBrainFieldSpawn
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_PsychicObjectBasic_C::IsBrainFieldSpawn(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "isBrainFieldSpawn");

	Params::BP_PsychicObjectBasic_C_IsBrainFieldSpawn Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.GetBrainSwingIndex
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Param_Index                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PsychicObjectBasic_C::GetBrainSwingIndex(int32* Param_Index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "GetBrainSwingIndex");

	Params::BP_PsychicObjectBasic_C_GetBrainSwingIndex Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_Index != nullptr)
		*Param_Index = Parms.Param_Index;
}


// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.Finalize
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_PsychicObjectBasic_C::Finalize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "Finalize");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.CheckRepeatHitAttackActor
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FHCHitResult                     HitResult                                              (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
// bool                                    bOK                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_PsychicObjectBasic_C::CheckRepeatHitAttackActor(const struct FHCHitResult& HitResult, bool* bOK)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "CheckRepeatHitAttackActor");

	Params::BP_PsychicObjectBasic_C_CheckRepeatHitAttackActor Parms{};

	Parms.HitResult = std::move(HitResult);

	UObject::ProcessEvent(Func, &Parms);

	if (bOK != nullptr)
		*bOK = Parms.bOK;
}


// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.IsTickOn
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_PsychicObjectBasic_C::IsTickOn(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "IsTickOn");

	Params::BP_PsychicObjectBasic_C_IsTickOn Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.SetEnemyPsychicObjectActive
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Active_in                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector                          Obj_pos_in                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PsychicObjectBasic_C::SetEnemyPsychicObjectActive(bool Active_in, const struct FVector& Obj_pos_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "SetEnemyPsychicObjectActive");

	Params::BP_PsychicObjectBasic_C_SetEnemyPsychicObjectActive Parms{};

	Parms.Active_in = Active_in;
	Parms.Obj_pos_in = std::move(Obj_pos_in);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.SetEnemyPsychicObjectThrow
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Target_actor_in                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Throw_speed_in                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Homing_speed_in                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PsychicObjectBasic_C::SetEnemyPsychicObjectThrow(class AActor* Target_actor_in, float Throw_speed_in, float Homing_speed_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "SetEnemyPsychicObjectThrow");

	Params::BP_PsychicObjectBasic_C_SetEnemyPsychicObjectThrow Parms{};

	Parms.Target_actor_in = Target_actor_in;
	Parms.Throw_speed_in = Throw_speed_in;
	Parms.Homing_speed_in = Homing_speed_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.CheckPsychicObjectID
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<BattlePrototype::EPsychicObjectID>Check_list_in                                          (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_PsychicObjectBasic_C::CheckPsychicObjectID(TArray<BattlePrototype::EPsychicObjectID>& Check_list_in, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "CheckPsychicObjectID");

	Params::BP_PsychicObjectBasic_C_CheckPsychicObjectID Parms{};

	Parms.Check_list_in = std::move(Check_list_in);

	UObject::ProcessEvent(Func, &Parms);

	Check_list_in = std::move(Parms.Check_list_in);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.GetPsychicObjectID
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// BattlePrototype::EPsychicObjectID       Psychic_object_id                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PsychicObjectBasic_C::GetPsychicObjectID(BattlePrototype::EPsychicObjectID* Psychic_object_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "GetPsychicObjectID");

	Params::BP_PsychicObjectBasic_C_GetPsychicObjectID Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Psychic_object_id != nullptr)
		*Psychic_object_id = Parms.Psychic_object_id;
}


// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.SetPsychicActiveOld
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_PsychicObjectBasic_C::SetPsychicActiveOld(bool Flag_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "SetPsychicActiveOld");

	Params::BP_PsychicObjectBasic_C_SetPsychicActiveOld Parms{};

	Parms.Flag_in = Flag_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.GetPsychicObjectState
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EPsychicObjectState                     Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PsychicObjectBasic_C::GetPsychicObjectState(EPsychicObjectState* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "GetPsychicObjectState");

	Params::BP_PsychicObjectBasic_C_GetPsychicObjectState Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.GetDebrisEffectBase
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMeshComponent*                   TargetMesh                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UParticleSystem*                  Particle                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UMaterialInterface*               OverrideMaterial                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_PsychicObjectBasic_C::GetDebrisEffectBase(class UMeshComponent* TargetMesh, class UParticleSystem** Particle, class UMaterialInterface** OverrideMaterial)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "GetDebrisEffectBase");

	Params::BP_PsychicObjectBasic_C_GetDebrisEffectBase Parms{};

	Parms.TargetMesh = TargetMesh;

	UObject::ProcessEvent(Func, &Parms);

	if (Particle != nullptr)
		*Particle = Parms.Particle;

	if (OverrideMaterial != nullptr)
		*OverrideMaterial = Parms.OverrideMaterial;

	return Parms.ReturnValue;
}


// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.SetDebrisEffectParameter
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InUseDebris                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// TSoftObjectPtr<class UParticleSystem>   InDebrisParticle                                       (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// bool                                    InUseDebrisOverrideMaterial                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   InDebrisOverideMaterialIndex                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PsychicObjectBasic_C::SetDebrisEffectParameter(bool InUseDebris, TSoftObjectPtr<class UParticleSystem> InDebrisParticle, bool InUseDebrisOverrideMaterial, int32 InDebrisOverideMaterialIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "SetDebrisEffectParameter");

	Params::BP_PsychicObjectBasic_C_SetDebrisEffectParameter Parms{};

	Parms.InUseDebris = InUseDebris;
	Parms.InDebrisParticle = InDebrisParticle;
	Parms.InUseDebrisOverrideMaterial = InUseDebrisOverrideMaterial;
	Parms.InDebrisOverideMaterialIndex = InDebrisOverideMaterialIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.GetDebrisEffect
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EEffectObjectDebrisType                 Type                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UMaterialInterface*               OverrideMaterial                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_PsychicObjectBasic_C::GetDebrisEffect(EEffectObjectDebrisType* Type, class UMaterialInterface** OverrideMaterial)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "GetDebrisEffect");

	Params::BP_PsychicObjectBasic_C_GetDebrisEffect Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Type != nullptr)
		*Type = Parms.Type;

	if (OverrideMaterial != nullptr)
		*OverrideMaterial = Parms.OverrideMaterial;

	return Parms.ReturnValue;
}


// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.GetDebrisEffectData
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UParticleSystem*                  ParticleTemplate                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UMaterialInterface*               OverrideMaterial                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_PsychicObjectBasic_C::GetDebrisEffectData(class UParticleSystem** ParticleTemplate, class UMaterialInterface** OverrideMaterial)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "GetDebrisEffectData");

	Params::BP_PsychicObjectBasic_C_GetDebrisEffectData Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ParticleTemplate != nullptr)
		*ParticleTemplate = Parms.ParticleTemplate;

	if (OverrideMaterial != nullptr)
		*OverrideMaterial = Parms.OverrideMaterial;

	return Parms.ReturnValue;
}


// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.GetUniqueObjectPlayerMontage
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPsychicObjectUniqueMontageIndex        MontageIndex                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bLeft                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bMaleHero                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UAnimMontage*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class UAnimMontage* ABP_PsychicObjectBasic_C::GetUniqueObjectPlayerMontage(EPsychicObjectUniqueMontageIndex MontageIndex, bool bLeft, bool bMaleHero)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "GetUniqueObjectPlayerMontage");

	Params::BP_PsychicObjectBasic_C_GetUniqueObjectPlayerMontage Parms{};

	Parms.MontageIndex = MontageIndex;
	Parms.bLeft = bLeft;
	Parms.bMaleHero = bMaleHero;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.GetUniqueObjectAttackParameter
// (Event, Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FHCCollisionCommonInfo           OutCommonInto                                          (Parm, OutParm)
// struct FHCSkillCommonInfo               OutSkillInfo                                           (Parm, OutParm)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_PsychicObjectBasic_C::GetUniqueObjectAttackParameter(struct FHCCollisionCommonInfo* OutCommonInto, struct FHCSkillCommonInfo* OutSkillInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "GetUniqueObjectAttackParameter");

	Params::BP_PsychicObjectBasic_C_GetUniqueObjectAttackParameter Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutCommonInto != nullptr)
		*OutCommonInto = std::move(Parms.OutCommonInto);

	if (OutSkillInfo != nullptr)
		*OutSkillInfo = std::move(Parms.OutSkillInfo);

	return Parms.ReturnValue;
}


// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.SetEnemyPsychicObjectInfo
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FHCCollisionCommonInfo           In_common_info                                         (BlueprintVisible, BlueprintReadOnly, Parm)
// struct FHCSkillCommonInfo               In_skill_info                                          (BlueprintVisible, BlueprintReadOnly, Parm)

void ABP_PsychicObjectBasic_C::SetEnemyPsychicObjectInfo(const struct FHCCollisionCommonInfo& In_common_info, const struct FHCSkillCommonInfo& In_skill_info)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "SetEnemyPsychicObjectInfo");

	Params::BP_PsychicObjectBasic_C_SetEnemyPsychicObjectInfo Parms{};

	Parms.In_common_info = std::move(In_common_info);
	Parms.In_skill_info = std::move(In_skill_info);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.IsCopyPsychicObject
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_PsychicObjectBasic_C::IsCopyPsychicObject()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "IsCopyPsychicObject");

	Params::BP_PsychicObjectBasic_C_IsCopyPsychicObject Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.InitializeCopyPsychicObject
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_PsychicObjectBasic_C::InitializeCopyPsychicObject()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "InitializeCopyPsychicObject");

	Params::BP_PsychicObjectBasic_C_InitializeCopyPsychicObject Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.RequestEndUniqueObjectState
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           PActor                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_PsychicObjectBasic_C::RequestEndUniqueObjectState(class AActor* PActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "RequestEndUniqueObjectState");

	Params::BP_PsychicObjectBasic_C_RequestEndUniqueObjectState Parms{};

	Parms.PActor = PActor;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.GetUnqObjCamTargetPos
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FVector ABP_PsychicObjectBasic_C::GetUnqObjCamTargetPos()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "GetUnqObjCamTargetPos");

	Params::BP_PsychicObjectBasic_C_GetUnqObjCamTargetPos Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.SetEffectFocus
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_PsychicObjectBasic_C::SetEffectFocus(bool Flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "SetEffectFocus");

	Params::BP_PsychicObjectBasic_C_SetEffectFocus Parms{};

	Parms.Flag = Flag;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.GetUniqueObjectCameraLookAtPos
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   LookAtRate                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FVector ABP_PsychicObjectBasic_C::GetUniqueObjectCameraLookAtPos(float LookAtRate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "GetUniqueObjectCameraLookAtPos");

	Params::BP_PsychicObjectBasic_C_GetUniqueObjectCameraLookAtPos Parms{};

	Parms.LookAtRate = LookAtRate;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.GetUnqObjMoveVelocity
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FVector ABP_PsychicObjectBasic_C::GetUnqObjMoveVelocity()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "GetUnqObjMoveVelocity");

	Params::BP_PsychicObjectBasic_C_GetUnqObjMoveVelocity Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.GetUniqueObjectCameraOwnerRotation
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FRotator                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

struct FRotator ABP_PsychicObjectBasic_C::GetUniqueObjectCameraOwnerRotation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "GetUniqueObjectCameraOwnerRotation");

	Params::BP_PsychicObjectBasic_C_GetUniqueObjectCameraOwnerRotation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.SetNoRespawn
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_PsychicObjectBasic_C::SetNoRespawn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "SetNoRespawn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.GetPsychicObjectSize
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPsychicObjectSizeType                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

EPsychicObjectSizeType ABP_PsychicObjectBasic_C::GetPsychicObjectSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "GetPsychicObjectSize");

	Params::BP_PsychicObjectBasic_C_GetPsychicObjectSize Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.PrevInitialize
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_PsychicObjectBasic_C::PrevInitialize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "PrevInitialize");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.SetPsychicObjectTickC
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             RefName                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Flag                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_PsychicObjectBasic_C::SetPsychicObjectTickC(class FName RefName, bool Flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "SetPsychicObjectTickC");

	Params::BP_PsychicObjectBasic_C_SetPsychicObjectTickC Parms{};

	Parms.RefName = RefName;
	Parms.Flag = Flag;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.SetPsychicObjectActiveC
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_PsychicObjectBasic_C::SetPsychicObjectActiveC(bool Flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "SetPsychicObjectActiveC");

	Params::BP_PsychicObjectBasic_C_SetPsychicObjectActiveC Parms{};

	Parms.Flag = Flag;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.IsEnemyPsychicObjectOccupied
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Occupied                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_PsychicObjectBasic_C::IsEnemyPsychicObjectOccupied(bool* Occupied)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "IsEnemyPsychicObjectOccupied");

	Params::BP_PsychicObjectBasic_C_IsEnemyPsychicObjectOccupied Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Occupied != nullptr)
		*Occupied = Parms.Occupied;
}


// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.SetDestroyExplosion
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_PsychicObjectBasic_C::SetDestroyExplosion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "SetDestroyExplosion");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.GetCameraLookAtPos
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FVector ABP_PsychicObjectBasic_C::GetCameraLookAtPos()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "GetCameraLookAtPos");

	Params::BP_PsychicObjectBasic_C_GetCameraLookAtPos Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.SetPlayerCameraViewTarget
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   BlendTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EViewTargetBlendFunction                BlendFunc                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   BlendExp                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_PsychicObjectBasic_C::SetPlayerCameraViewTarget(float BlendTime, EViewTargetBlendFunction BlendFunc, float BlendExp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "SetPlayerCameraViewTarget");

	Params::BP_PsychicObjectBasic_C_SetPlayerCameraViewTarget Parms{};

	Parms.BlendTime = BlendTime;
	Parms.BlendFunc = BlendFunc;
	Parms.BlendExp = BlendExp;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.SetPlayerCameraRotation
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FRotator                         Rot                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_PsychicObjectBasic_C::SetPlayerCameraRotation(const struct FRotator& Rot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "SetPlayerCameraRotation");

	Params::BP_PsychicObjectBasic_C_SetPlayerCameraRotation Parms{};

	Parms.Rot = std::move(Rot);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.SetPlayerCameraMode
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPlayerCameraMode                       Mode                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_PsychicObjectBasic_C::SetPlayerCameraMode(EPlayerCameraMode Mode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "SetPlayerCameraMode");

	Params::BP_PsychicObjectBasic_C_SetPlayerCameraMode Parms{};

	Parms.Mode = Mode;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.SetPlayerCameraLocation
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Pos                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_PsychicObjectBasic_C::SetPlayerCameraLocation(const struct FVector& Pos)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "SetPlayerCameraLocation");

	Params::BP_PsychicObjectBasic_C_SetPlayerCameraLocation Parms{};

	Parms.Pos = std::move(Pos);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.SetPlayerCameraFieldOfView
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   FOV                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_PsychicObjectBasic_C::SetPlayerCameraFieldOfView(float FOV)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "SetPlayerCameraFieldOfView");

	Params::BP_PsychicObjectBasic_C_SetPlayerCameraFieldOfView Parms{};

	Parms.FOV = FOV;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.SetPlayerCameraDirection
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Pos                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_PsychicObjectBasic_C::SetPlayerCameraDirection(const struct FVector& Pos)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "SetPlayerCameraDirection");

	Params::BP_PsychicObjectBasic_C_SetPlayerCameraDirection Parms{};

	Parms.Pos = std::move(Pos);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.GetPlayerCameraRotation
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FRotator                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

struct FRotator ABP_PsychicObjectBasic_C::GetPlayerCameraRotation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "GetPlayerCameraRotation");

	Params::BP_PsychicObjectBasic_C_GetPlayerCameraRotation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.GetPlayerCameraMode
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPlayerCameraMode                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

EPlayerCameraMode ABP_PsychicObjectBasic_C::GetPlayerCameraMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "GetPlayerCameraMode");

	Params::BP_PsychicObjectBasic_C_GetPlayerCameraMode Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.GetPlayerCameraLocation
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FVector ABP_PsychicObjectBasic_C::GetPlayerCameraLocation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "GetPlayerCameraLocation");

	Params::BP_PsychicObjectBasic_C_GetPlayerCameraLocation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.GetPlayerCameraFieldOfView
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float ABP_PsychicObjectBasic_C::GetPlayerCameraFieldOfView()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "GetPlayerCameraFieldOfView");

	Params::BP_PsychicObjectBasic_C_GetPlayerCameraFieldOfView Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.GetPlayerCameraDirection
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FVector ABP_PsychicObjectBasic_C::GetPlayerCameraDirection()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "GetPlayerCameraDirection");

	Params::BP_PsychicObjectBasic_C_GetPlayerCameraDirection Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.SetPsychicObjectFellOutOfWorld
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UDamageType*                      PDmgType                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_PsychicObjectBasic_C::SetPsychicObjectFellOutOfWorld(const class UDamageType* PDmgType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "SetPsychicObjectFellOutOfWorld");

	Params::BP_PsychicObjectBasic_C_SetPsychicObjectFellOutOfWorld Parms{};

	Parms.PDmgType = PDmgType;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.CheckPsychicObjectStillInWorld
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   KillZ                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_PsychicObjectBasic_C::CheckPsychicObjectStillInWorld(float KillZ)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "CheckPsychicObjectStillInWorld");

	Params::BP_PsychicObjectBasic_C_CheckPsychicObjectStillInWorld Parms{};

	Parms.KillZ = KillZ;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.SetDuelPoleType
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bDuelType                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_PsychicObjectBasic_C::SetDuelPoleType(bool bDuelType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "SetDuelPoleType");

	Params::BP_PsychicObjectBasic_C_SetDuelPoleType Parms{};

	Parms.bDuelType = bDuelType;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.ResetRepeatHitAttackActor
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_PsychicObjectBasic_C::ResetRepeatHitAttackActor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "ResetRepeatHitAttackActor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.IsFloatObjectC
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_PsychicObjectBasic_C::IsFloatObjectC()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "IsFloatObjectC");

	Params::BP_PsychicObjectBasic_C_IsFloatObjectC Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.SetDistanceDestroyC
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_PsychicObjectBasic_C::SetDistanceDestroyC()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "SetDistanceDestroyC");

	Params::BP_PsychicObjectBasic_C_SetDistanceDestroyC Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.SetPsychicObjectEventC
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bStart                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bTick                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bVisibility                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_PsychicObjectBasic_C::SetPsychicObjectEventC(bool bStart, bool bTick, bool bVisibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "SetPsychicObjectEventC");

	Params::BP_PsychicObjectBasic_C_SetPsychicObjectEventC Parms{};

	Parms.bStart = bStart;
	Parms.bTick = bTick;
	Parms.bVisibility = bVisibility;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.IsPsychicObject
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bResult                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_PsychicObjectBasic_C::IsPsychicObject(bool* bResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "IsPsychicObject");

	Params::BP_PsychicObjectBasic_C_IsPsychicObject Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bResult != nullptr)
		*bResult = Parms.bResult;
}


// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.IsPsychicObjectActive
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsActive                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_PsychicObjectBasic_C::IsPsychicObjectActive(bool* IsActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "IsPsychicObjectActive");

	Params::BP_PsychicObjectBasic_C_IsPsychicObjectActive Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsActive != nullptr)
		*IsActive = Parms.IsActive;
}


// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.GetPsychicObjectType
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPsyObjType                             Psychic_object_type                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PsychicObjectBasic_C::GetPsychicObjectType(EPsyObjType* Psychic_object_type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "GetPsychicObjectType");

	Params::BP_PsychicObjectBasic_C_GetPsychicObjectType Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Psychic_object_type != nullptr)
		*Psychic_object_type = Parms.Psychic_object_type;
}


// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.GetPsychicObjectWeightGaugePos
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Weight_gauge_pos                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PsychicObjectBasic_C::GetPsychicObjectWeightGaugePos(struct FVector* Weight_gauge_pos)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "GetPsychicObjectWeightGaugePos");

	Params::BP_PsychicObjectBasic_C_GetPsychicObjectWeightGaugePos Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Weight_gauge_pos != nullptr)
		*Weight_gauge_pos = std::move(Parms.Weight_gauge_pos);
}


// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.GetPsychicObjectCentrePos
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Centre_pos                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PsychicObjectBasic_C::GetPsychicObjectCentrePos(struct FVector* Centre_pos)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "GetPsychicObjectCentrePos");

	Params::BP_PsychicObjectBasic_C_GetPsychicObjectCentrePos Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Centre_pos != nullptr)
		*Centre_pos = std::move(Parms.Centre_pos);
}


// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.GetPsychicObjectVhsParam
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UCurveVector*                     ParamCurve                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UCurveVector*                     ColorCurve                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   VhsSeconds                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PsychicObjectBasic_C::GetPsychicObjectVhsParam(class UCurveVector** ParamCurve, class UCurveVector** ColorCurve, float* VhsSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "GetPsychicObjectVhsParam");

	Params::BP_PsychicObjectBasic_C_GetPsychicObjectVhsParam Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ParamCurve != nullptr)
		*ParamCurve = Parms.ParamCurve;

	if (ColorCurve != nullptr)
		*ColorCurve = Parms.ColorCurve;

	if (VhsSeconds != nullptr)
		*VhsSeconds = Parms.VhsSeconds;
}


// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.SAS_CommonEnd
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_SASKind                               SAS_Kind                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bCancelSASCost                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   RemainTime                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PsychicObjectBasic_C::SAS_CommonEnd(E_SASKind SAS_Kind, bool bCancelSASCost, bool* bDummy, float* RemainTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "SAS_CommonEnd");

	Params::BP_PsychicObjectBasic_C_SAS_CommonEnd Parms{};

	Parms.SAS_Kind = SAS_Kind;
	Parms.bCancelSASCost = bCancelSASCost;

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;

	if (RemainTime != nullptr)
		*RemainTime = Parms.RemainTime;
}


// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.SAS_CommonStart
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFSASCommand                     SAS_Command                                            (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_PsychicObjectBasic_C::SAS_CommonStart(const struct FFSASCommand& SAS_Command, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "SAS_CommonStart");

	Params::BP_PsychicObjectBasic_C_SAS_CommonStart Parms{};

	Parms.SAS_Command = std::move(SAS_Command);

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.InterceptAttack
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ARSBattleCharacter_C*             Intercepter                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ARSBattleCharacter_C*             NewTarget                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_PsychicObjectBasic_C::InterceptAttack(class ARSBattleCharacter_C* Intercepter, class ARSBattleCharacter_C* NewTarget, bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "InterceptAttack");

	Params::BP_PsychicObjectBasic_C_InterceptAttack Parms{};

	Parms.Intercepter = Intercepter;
	Parms.NewTarget = NewTarget;

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.InterceptReserve
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_PsychicObjectBasic_C::InterceptReserve(bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "InterceptReserve");

	Params::BP_PsychicObjectBasic_C_InterceptReserve Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.InterceptCancel
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_PsychicObjectBasic_C::InterceptCancel(bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "InterceptCancel");

	Params::BP_PsychicObjectBasic_C_InterceptCancel Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.IsInterceptFail
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bFail                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_PsychicObjectBasic_C::IsInterceptFail(bool* bFail)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "IsInterceptFail");

	Params::BP_PsychicObjectBasic_C_IsInterceptFail Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bFail != nullptr)
		*bFail = Parms.bFail;
}


// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.GetDamageCameraShakeData
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bEnable                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UClass*                           CameraShakeClass                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Scale                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PsychicObjectBasic_C::GetDamageCameraShakeData(bool* bEnable, class UClass** CameraShakeClass, float* Scale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "GetDamageCameraShakeData");

	Params::BP_PsychicObjectBasic_C_GetDamageCameraShakeData Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bEnable != nullptr)
		*bEnable = Parms.bEnable;

	if (CameraShakeClass != nullptr)
		*CameraShakeClass = Parms.CameraShakeClass;

	if (Scale != nullptr)
		*Scale = Parms.Scale;
}


// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.GetHitEffectPriorityInterface
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EFHitEffectPriority                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

EFHitEffectPriority ABP_PsychicObjectBasic_C::GetHitEffectPriorityInterface()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "GetHitEffectPriorityInterface");

	Params::BP_PsychicObjectBasic_C_GetHitEffectPriorityInterface Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.isPsychicCombo
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_PsychicObjectBasic_C::IsPsychicCombo(bool* Return) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "isPsychicCombo");

	Params::BP_PsychicObjectBasic_C_IsPsychicCombo Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.GetTriangleData
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FMeshTriangleData                Triangle_data                                          (Parm, OutParm)

void ABP_PsychicObjectBasic_C::GetTriangleData(struct FMeshTriangleData* Triangle_data) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "GetTriangleData");

	Params::BP_PsychicObjectBasic_C_GetTriangleData Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Triangle_data != nullptr)
		*Triangle_data = std::move(Parms.Triangle_data);
}


// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.IsPsychicComboAttack
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// bool                                    bComboAttack                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_PsychicObjectBasic_C::IsPsychicComboAttack(bool* bComboAttack) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "IsPsychicComboAttack");

	Params::BP_PsychicObjectBasic_C_IsPsychicComboAttack Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bComboAttack != nullptr)
		*bComboAttack = Parms.bComboAttack;
}


// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.GetUniqueObjectCaptureMontage
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// EPlayerID                               PlayerId                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bBack                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bLeft                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bUseBlend                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UAnimMontage*                     StartMontage                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UAnimMontage*                     CancelMontage                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PsychicObjectBasic_C::GetUniqueObjectCaptureMontage(EPlayerID PlayerId, bool bBack, bool bLeft, bool* bUseBlend, class UAnimMontage** StartMontage, class UAnimMontage** CancelMontage) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "GetUniqueObjectCaptureMontage");

	Params::BP_PsychicObjectBasic_C_GetUniqueObjectCaptureMontage Parms{};

	Parms.PlayerId = PlayerId;
	Parms.bBack = bBack;
	Parms.bLeft = bLeft;

	UObject::ProcessEvent(Func, &Parms);

	if (bUseBlend != nullptr)
		*bUseBlend = Parms.bUseBlend;

	if (StartMontage != nullptr)
		*StartMontage = Parms.StartMontage;

	if (CancelMontage != nullptr)
		*CancelMontage = Parms.CancelMontage;
}


// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.IsKarenUniqueObject
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// bool                                    bKaren                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_PsychicObjectBasic_C::IsKarenUniqueObject(bool* bKaren) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "IsKarenUniqueObject");

	Params::BP_PsychicObjectBasic_C_IsKarenUniqueObject Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bKaren != nullptr)
		*bKaren = Parms.bKaren;
}


// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.IsAccelerating
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// bool                                    Accelerating                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_PsychicObjectBasic_C::IsAccelerating(bool* Accelerating) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "IsAccelerating");

	Params::BP_PsychicObjectBasic_C_IsAccelerating Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Accelerating != nullptr)
		*Accelerating = Parms.Accelerating;
}


// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.IsAcceleratorValid
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// bool                                    Valid                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_PsychicObjectBasic_C::IsAcceleratorValid(bool* Valid) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "IsAcceleratorValid");

	Params::BP_PsychicObjectBasic_C_IsAcceleratorValid Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Valid != nullptr)
		*Valid = Parms.Valid;
}


// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.GetMeshTriangleData
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// struct FMeshTriangleData                ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FMeshTriangleData ABP_PsychicObjectBasic_C::GetMeshTriangleData() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "GetMeshTriangleData");

	Params::BP_PsychicObjectBasic_C_GetMeshTriangleData Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_PsychicObjectBasic.BP_PsychicObjectBasic_C.GetDataRevision
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

int32 ABP_PsychicObjectBasic_C::GetDataRevision() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectBasic_C", "GetDataRevision");

	Params::BP_PsychicObjectBasic_C_GetDataRevision Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

