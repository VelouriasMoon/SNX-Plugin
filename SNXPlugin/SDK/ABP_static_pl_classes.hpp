#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_static_pl

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "AnimGraphRuntime_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_static_pl.ABP_static_pl_C
// 0x0370 (0x05E0 - 0x0270)
class UABP_static_pl_C final : public UAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0270(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_RefPose                      AnimGraphNode_LocalRefPose;                        // 0x0278(0x0018)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_2;                              // 0x0290(0x0048)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x02D8(0x0030)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_1;                              // 0x0308(0x0048)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x0350(0x00B8)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_2;                     // 0x0408(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x0430(0x0028)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend;                    // 0x0458(0x00C0)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x0518(0x0028)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x0540(0x0048)()
	class UAnimMontage*                           beforeAnimMontage;                                 // 0x0588(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           CurrentAnimMontage;                                // 0x0590(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsLoop;                                            // 0x0598(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69C1[0x3];                                     // 0x0599(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         PlayRate;                                          // 0x059C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StartPosition;                                     // 0x05A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsPlay;                                            // 0x05A4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          PlayToggle;                                        // 0x05A5(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsPlayBefore;                                      // 0x05A6(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69C2[0x1];                                     // 0x05A7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           LoopMotionTimer;                                   // 0x05A8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          IsPlayBeforeAnimation;                             // 0x05B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69C3[0x7];                                     // 0x05B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_static_pl_C*                        BP_static_pl;                                      // 0x05B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsGeneralStatic;                                   // 0x05C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69C4[0x3];                                     // 0x05C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         AddMotionBlendWeight;                              // 0x05C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           LoopAnimMontage;                                   // 0x05C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ShaderAnimeMotionWeight;                           // 0x05D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_ABP_static_pl(int32 EntryPoint);
	void AnimNotify_PlayShot();
	void OnMontageEnd(class UAnimMontage* Montage, bool bInterrupted);
	void BlueprintBeginPlay();
	void SettingGenneralBoard();
	void AnimNotify_FinishMotion();
	void AnimNotify_FinishBeforePlay();
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void AnimNotify_StartPlayAnimation();
	void StartBoardAnimation();
	void EventPlayMontage();
	void AnimGraph(struct FPoseLink* Param_AnimGraph);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_static_pl_C">();
	}
	static class UABP_static_pl_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_static_pl_C>();
	}
};
static_assert(alignof(UABP_static_pl_C) == 0x000010, "Wrong alignment on UABP_static_pl_C");
static_assert(sizeof(UABP_static_pl_C) == 0x0005E0, "Wrong size on UABP_static_pl_C");
static_assert(offsetof(UABP_static_pl_C, UberGraphFrame) == 0x000270, "Member 'UABP_static_pl_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_static_pl_C, AnimGraphNode_LocalRefPose) == 0x000278, "Member 'UABP_static_pl_C::AnimGraphNode_LocalRefPose' has a wrong offset!");
static_assert(offsetof(UABP_static_pl_C, AnimGraphNode_Slot_2) == 0x000290, "Member 'UABP_static_pl_C::AnimGraphNode_Slot_2' has a wrong offset!");
static_assert(offsetof(UABP_static_pl_C, AnimGraphNode_Root) == 0x0002D8, "Member 'UABP_static_pl_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_static_pl_C, AnimGraphNode_Slot_1) == 0x000308, "Member 'UABP_static_pl_C::AnimGraphNode_Slot_1' has a wrong offset!");
static_assert(offsetof(UABP_static_pl_C, AnimGraphNode_SaveCachedPose) == 0x000350, "Member 'UABP_static_pl_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_static_pl_C, AnimGraphNode_UseCachedPose_2) == 0x000408, "Member 'UABP_static_pl_C::AnimGraphNode_UseCachedPose_2' has a wrong offset!");
static_assert(offsetof(UABP_static_pl_C, AnimGraphNode_UseCachedPose_1) == 0x000430, "Member 'UABP_static_pl_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(UABP_static_pl_C, AnimGraphNode_LayeredBoneBlend) == 0x000458, "Member 'UABP_static_pl_C::AnimGraphNode_LayeredBoneBlend' has a wrong offset!");
static_assert(offsetof(UABP_static_pl_C, AnimGraphNode_UseCachedPose) == 0x000518, "Member 'UABP_static_pl_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_static_pl_C, AnimGraphNode_Slot) == 0x000540, "Member 'UABP_static_pl_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UABP_static_pl_C, beforeAnimMontage) == 0x000588, "Member 'UABP_static_pl_C::beforeAnimMontage' has a wrong offset!");
static_assert(offsetof(UABP_static_pl_C, CurrentAnimMontage) == 0x000590, "Member 'UABP_static_pl_C::CurrentAnimMontage' has a wrong offset!");
static_assert(offsetof(UABP_static_pl_C, IsLoop) == 0x000598, "Member 'UABP_static_pl_C::IsLoop' has a wrong offset!");
static_assert(offsetof(UABP_static_pl_C, PlayRate) == 0x00059C, "Member 'UABP_static_pl_C::PlayRate' has a wrong offset!");
static_assert(offsetof(UABP_static_pl_C, StartPosition) == 0x0005A0, "Member 'UABP_static_pl_C::StartPosition' has a wrong offset!");
static_assert(offsetof(UABP_static_pl_C, IsPlay) == 0x0005A4, "Member 'UABP_static_pl_C::IsPlay' has a wrong offset!");
static_assert(offsetof(UABP_static_pl_C, PlayToggle) == 0x0005A5, "Member 'UABP_static_pl_C::PlayToggle' has a wrong offset!");
static_assert(offsetof(UABP_static_pl_C, IsPlayBefore) == 0x0005A6, "Member 'UABP_static_pl_C::IsPlayBefore' has a wrong offset!");
static_assert(offsetof(UABP_static_pl_C, LoopMotionTimer) == 0x0005A8, "Member 'UABP_static_pl_C::LoopMotionTimer' has a wrong offset!");
static_assert(offsetof(UABP_static_pl_C, IsPlayBeforeAnimation) == 0x0005B0, "Member 'UABP_static_pl_C::IsPlayBeforeAnimation' has a wrong offset!");
static_assert(offsetof(UABP_static_pl_C, BP_static_pl) == 0x0005B8, "Member 'UABP_static_pl_C::BP_static_pl' has a wrong offset!");
static_assert(offsetof(UABP_static_pl_C, IsGeneralStatic) == 0x0005C0, "Member 'UABP_static_pl_C::IsGeneralStatic' has a wrong offset!");
static_assert(offsetof(UABP_static_pl_C, AddMotionBlendWeight) == 0x0005C4, "Member 'UABP_static_pl_C::AddMotionBlendWeight' has a wrong offset!");
static_assert(offsetof(UABP_static_pl_C, LoopAnimMontage) == 0x0005C8, "Member 'UABP_static_pl_C::LoopAnimMontage' has a wrong offset!");
static_assert(offsetof(UABP_static_pl_C, ShaderAnimeMotionWeight) == 0x0005D0, "Member 'UABP_static_pl_C::ShaderAnimeMotionWeight' has a wrong offset!");

}

