#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_GhostTrail

#include "Basic.hpp"

#include "BPI_GhostTrail_classes.hpp"
#include "BPI_GhostTrail_parameters.hpp"


namespace SDK
{

// Function BPI_GhostTrail.BPI_GhostTrail_C.SetGhostActive
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Active                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_GhostTrail_C::SetGhostActive(bool Active)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_GhostTrail_C", "SetGhostActive");

	Params::BPI_GhostTrail_C_SetGhostActive Parms{};

	Parms.Active = Active;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_GhostTrail.BPI_GhostTrail_C.OnBonusGhost
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_GhostTrail_C::OnBonusGhost(float Time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_GhostTrail_C", "OnBonusGhost");

	Params::BPI_GhostTrail_C_OnBonusGhost Parms{};

	Parms.Time = Time;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_GhostTrail.BPI_GhostTrail_C.OnBonusGhostFromDT
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EBonusGhostType                         Type                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_GhostTrail_C::OnBonusGhostFromDT(EBonusGhostType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_GhostTrail_C", "OnBonusGhostFromDT");

	Params::BPI_GhostTrail_C_OnBonusGhostFromDT Parms{};

	Parms.Type = Type;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_GhostTrail.BPI_GhostTrail_C.OnGhostOneShot
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   AliveTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_GhostTrail_C::OnGhostOneShot(float AliveTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_GhostTrail_C", "OnGhostOneShot");

	Params::BPI_GhostTrail_C_OnGhostOneShot Parms{};

	Parms.AliveTime = AliveTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_GhostTrail.BPI_GhostTrail_C.OnBonusGhostOneShot
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   AliveTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_GhostTrail_C::OnBonusGhostOneShot(float AliveTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_GhostTrail_C", "OnBonusGhostOneShot");

	Params::BPI_GhostTrail_C_OnBonusGhostOneShot Parms{};

	Parms.AliveTime = AliveTime;

	UObject::ProcessEvent(Func, &Parms);
}

}

