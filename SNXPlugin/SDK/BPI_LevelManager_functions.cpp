#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_LevelManager

#include "Basic.hpp"

#include "BPI_LevelManager_classes.hpp"
#include "BPI_LevelManager_parameters.hpp"


namespace SDK
{

// Function BPI_LevelManager.BPI_LevelManager_C.AreaNameToID
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             AreaName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   LocationId                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   AreaId                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   VariationID                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_LevelManager_C::AreaNameToID(class FName AreaName, int32* LocationId, int32* AreaId, int32* VariationID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_LevelManager_C", "AreaNameToID");

	Params::BPI_LevelManager_C_AreaNameToID Parms{};

	Parms.AreaName = AreaName;

	UObject::ProcessEvent(Func, &Parms);

	if (LocationId != nullptr)
		*LocationId = Parms.LocationId;

	if (AreaId != nullptr)
		*AreaId = Parms.AreaId;

	if (VariationID != nullptr)
		*VariationID = Parms.VariationID;
}

}

