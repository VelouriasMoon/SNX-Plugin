#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_WeaponBase_ch0400

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_WeaponBase_ch0400.BP_WeaponBase_ch0400_C.Attach
// 0x0030 (0x0030 - 0x0000)
struct BP_WeaponBase_ch0400_C_Attach final
{
public:
	class ARSBattlePlayer_C*                      Param_Owner;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Component;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   SocketName;                                        // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UABP_wp0400_C*                          K2Node_DynamicCast_AsABP_Wp_0400;                  // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_WeaponBase_ch0400_C_Attach) == 0x000008, "Wrong alignment on BP_WeaponBase_ch0400_C_Attach");
static_assert(sizeof(BP_WeaponBase_ch0400_C_Attach) == 0x000030, "Wrong size on BP_WeaponBase_ch0400_C_Attach");
static_assert(offsetof(BP_WeaponBase_ch0400_C_Attach, Param_Owner) == 0x000000, "Member 'BP_WeaponBase_ch0400_C_Attach::Param_Owner' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_ch0400_C_Attach, Component) == 0x000008, "Member 'BP_WeaponBase_ch0400_C_Attach::Component' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_ch0400_C_Attach, SocketName) == 0x000010, "Member 'BP_WeaponBase_ch0400_C_Attach::SocketName' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_ch0400_C_Attach, CallFunc_GetAnimInstance_ReturnValue) == 0x000018, "Member 'BP_WeaponBase_ch0400_C_Attach::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_ch0400_C_Attach, K2Node_DynamicCast_AsABP_Wp_0400) == 0x000020, "Member 'BP_WeaponBase_ch0400_C_Attach::K2Node_DynamicCast_AsABP_Wp_0400' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_ch0400_C_Attach, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_WeaponBase_ch0400_C_Attach::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_WeaponBase_ch0400.BP_WeaponBase_ch0400_C.SetWeaponVisibility
// 0x0003 (0x0003 - 0x0000)
struct BP_WeaponBase_ch0400_C_SetWeaponVisibility final
{
public:
	bool                                          bVisible;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsExistGenmaWeaponMesh_bExist;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_WeaponBase_ch0400_C_SetWeaponVisibility) == 0x000001, "Wrong alignment on BP_WeaponBase_ch0400_C_SetWeaponVisibility");
static_assert(sizeof(BP_WeaponBase_ch0400_C_SetWeaponVisibility) == 0x000003, "Wrong size on BP_WeaponBase_ch0400_C_SetWeaponVisibility");
static_assert(offsetof(BP_WeaponBase_ch0400_C_SetWeaponVisibility, bVisible) == 0x000000, "Member 'BP_WeaponBase_ch0400_C_SetWeaponVisibility::bVisible' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_ch0400_C_SetWeaponVisibility, CallFunc_IsExistGenmaWeaponMesh_bExist) == 0x000001, "Member 'BP_WeaponBase_ch0400_C_SetWeaponVisibility::CallFunc_IsExistGenmaWeaponMesh_bExist' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_ch0400_C_SetWeaponVisibility, CallFunc_BooleanAND_ReturnValue) == 0x000002, "Member 'BP_WeaponBase_ch0400_C_SetWeaponVisibility::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_WeaponBase_ch0400.BP_WeaponBase_ch0400_C.LoadMesh
// 0x0008 (0x0008 - 0x0000)
struct BP_WeaponBase_ch0400_C_LoadMesh final
{
public:
	int32                                         InWeaponID;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ResetMaterial;                                     // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_WeaponBase_ch0400_C_LoadMesh) == 0x000004, "Wrong alignment on BP_WeaponBase_ch0400_C_LoadMesh");
static_assert(sizeof(BP_WeaponBase_ch0400_C_LoadMesh) == 0x000008, "Wrong size on BP_WeaponBase_ch0400_C_LoadMesh");
static_assert(offsetof(BP_WeaponBase_ch0400_C_LoadMesh, InWeaponID) == 0x000000, "Member 'BP_WeaponBase_ch0400_C_LoadMesh::InWeaponID' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_ch0400_C_LoadMesh, ResetMaterial) == 0x000004, "Member 'BP_WeaponBase_ch0400_C_LoadMesh::ResetMaterial' has a wrong offset!");

}

