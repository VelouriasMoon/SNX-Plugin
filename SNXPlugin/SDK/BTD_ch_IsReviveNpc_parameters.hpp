#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTD_ch_IsReviveNpc

#include "Basic.hpp"

#include "BattlePrototype_structs.hpp"


namespace SDK::Params
{

// Function BTD_ch_IsReviveNpc.BTD_ch_IsReviveNpc_C.PerformConditionCheckAI
// 0x0058 (0x0058 - 0x0000)
struct BTD_ch_IsReviveNpc_C_PerformConditionCheckAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          bReviveAble;                                       // 0x0011(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45EC[0x6];                                     // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattlePlayer_C*                      LReviveTarget;                                     // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IPlayerInterface>      K2Node_DynamicCast_AsPlayer_Interface;             // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ERSPartyPlayerKind                            CallFunc_GetPartyPlayerKind_ReturnValue;           // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCharacterDead_ReturnValue;              // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ERSPartyPlayerKind                            Temp_byte_Variable;                                // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45ED[0x2];                                     // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsExecResurrect_bExec;                    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45EE[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattlePlayer_C*                      CallFunc_GetRightPlayer_Player;                    // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattlePlayer_C*                      CallFunc_GetLeftPlayer_Player;                     // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTD_ch_IsReviveNpc_C_PerformConditionCheckAI) == 0x000008, "Wrong alignment on BTD_ch_IsReviveNpc_C_PerformConditionCheckAI");
static_assert(sizeof(BTD_ch_IsReviveNpc_C_PerformConditionCheckAI) == 0x000058, "Wrong size on BTD_ch_IsReviveNpc_C_PerformConditionCheckAI");
static_assert(offsetof(BTD_ch_IsReviveNpc_C_PerformConditionCheckAI, OwnerController) == 0x000000, "Member 'BTD_ch_IsReviveNpc_C_PerformConditionCheckAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTD_ch_IsReviveNpc_C_PerformConditionCheckAI, ControlledPawn) == 0x000008, "Member 'BTD_ch_IsReviveNpc_C_PerformConditionCheckAI::ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTD_ch_IsReviveNpc_C_PerformConditionCheckAI, ReturnValue) == 0x000010, "Member 'BTD_ch_IsReviveNpc_C_PerformConditionCheckAI::ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_ch_IsReviveNpc_C_PerformConditionCheckAI, bReviveAble) == 0x000011, "Member 'BTD_ch_IsReviveNpc_C_PerformConditionCheckAI::bReviveAble' has a wrong offset!");
static_assert(offsetof(BTD_ch_IsReviveNpc_C_PerformConditionCheckAI, LReviveTarget) == 0x000018, "Member 'BTD_ch_IsReviveNpc_C_PerformConditionCheckAI::LReviveTarget' has a wrong offset!");
static_assert(offsetof(BTD_ch_IsReviveNpc_C_PerformConditionCheckAI, K2Node_DynamicCast_AsPlayer_Interface) == 0x000020, "Member 'BTD_ch_IsReviveNpc_C_PerformConditionCheckAI::K2Node_DynamicCast_AsPlayer_Interface' has a wrong offset!");
static_assert(offsetof(BTD_ch_IsReviveNpc_C_PerformConditionCheckAI, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BTD_ch_IsReviveNpc_C_PerformConditionCheckAI::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BTD_ch_IsReviveNpc_C_PerformConditionCheckAI, CallFunc_GetPartyPlayerKind_ReturnValue) == 0x000031, "Member 'BTD_ch_IsReviveNpc_C_PerformConditionCheckAI::CallFunc_GetPartyPlayerKind_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_ch_IsReviveNpc_C_PerformConditionCheckAI, CallFunc_IsCharacterDead_ReturnValue) == 0x000032, "Member 'BTD_ch_IsReviveNpc_C_PerformConditionCheckAI::CallFunc_IsCharacterDead_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_ch_IsReviveNpc_C_PerformConditionCheckAI, CallFunc_IsValid_ReturnValue) == 0x000033, "Member 'BTD_ch_IsReviveNpc_C_PerformConditionCheckAI::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_ch_IsReviveNpc_C_PerformConditionCheckAI, Temp_byte_Variable) == 0x000034, "Member 'BTD_ch_IsReviveNpc_C_PerformConditionCheckAI::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BTD_ch_IsReviveNpc_C_PerformConditionCheckAI, K2Node_SwitchEnum_CmpSuccess) == 0x000035, "Member 'BTD_ch_IsReviveNpc_C_PerformConditionCheckAI::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BTD_ch_IsReviveNpc_C_PerformConditionCheckAI, CallFunc_GetPlayerManager_PlayerManager) == 0x000038, "Member 'BTD_ch_IsReviveNpc_C_PerformConditionCheckAI::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BTD_ch_IsReviveNpc_C_PerformConditionCheckAI, CallFunc_IsExecResurrect_bExec) == 0x000040, "Member 'BTD_ch_IsReviveNpc_C_PerformConditionCheckAI::CallFunc_IsExecResurrect_bExec' has a wrong offset!");
static_assert(offsetof(BTD_ch_IsReviveNpc_C_PerformConditionCheckAI, CallFunc_GetRightPlayer_Player) == 0x000048, "Member 'BTD_ch_IsReviveNpc_C_PerformConditionCheckAI::CallFunc_GetRightPlayer_Player' has a wrong offset!");
static_assert(offsetof(BTD_ch_IsReviveNpc_C_PerformConditionCheckAI, CallFunc_GetLeftPlayer_Player) == 0x000050, "Member 'BTD_ch_IsReviveNpc_C_PerformConditionCheckAI::CallFunc_GetLeftPlayer_Player' has a wrong offset!");

}

