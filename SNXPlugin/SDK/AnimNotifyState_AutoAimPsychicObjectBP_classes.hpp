#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AnimNotifyState_AutoAimPsychicObjectBP

#include "Basic.hpp"

#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass AnimNotifyState_AutoAimPsychicObjectBP.AnimNotifyState_AutoAimPsychicObjectBP_C
// 0x0018 (0x0048 - 0x0030)
class UAnimNotifyState_AutoAimPsychicObjectBP_C final : public UAnimNotifyState
{
public:
	float                                         AimSpeed;                                          // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxAimAngle;                                       // 0x0034(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSocketRotation;                                  // 0x0038(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5E5C[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   SocketName;                                        // 0x003C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	bool Received_NotifyBegin(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation, float TotalDuration) const;
	bool Received_NotifyEnd(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AnimNotifyState_AutoAimPsychicObjectBP_C">();
	}
	static class UAnimNotifyState_AutoAimPsychicObjectBP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimNotifyState_AutoAimPsychicObjectBP_C>();
	}
};
static_assert(alignof(UAnimNotifyState_AutoAimPsychicObjectBP_C) == 0x000008, "Wrong alignment on UAnimNotifyState_AutoAimPsychicObjectBP_C");
static_assert(sizeof(UAnimNotifyState_AutoAimPsychicObjectBP_C) == 0x000048, "Wrong size on UAnimNotifyState_AutoAimPsychicObjectBP_C");
static_assert(offsetof(UAnimNotifyState_AutoAimPsychicObjectBP_C, AimSpeed) == 0x000030, "Member 'UAnimNotifyState_AutoAimPsychicObjectBP_C::AimSpeed' has a wrong offset!");
static_assert(offsetof(UAnimNotifyState_AutoAimPsychicObjectBP_C, MaxAimAngle) == 0x000034, "Member 'UAnimNotifyState_AutoAimPsychicObjectBP_C::MaxAimAngle' has a wrong offset!");
static_assert(offsetof(UAnimNotifyState_AutoAimPsychicObjectBP_C, IsSocketRotation) == 0x000038, "Member 'UAnimNotifyState_AutoAimPsychicObjectBP_C::IsSocketRotation' has a wrong offset!");
static_assert(offsetof(UAnimNotifyState_AutoAimPsychicObjectBP_C, SocketName) == 0x00003C, "Member 'UAnimNotifyState_AutoAimPsychicObjectBP_C::SocketName' has a wrong offset!");

}

