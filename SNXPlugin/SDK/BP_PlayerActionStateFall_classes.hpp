#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PlayerActionStateFall

#include "Basic.hpp"

#include "BattlePrototype_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "BP_PlayerActionStateCommonBase_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_PlayerActionStateFall.BP_PlayerActionStateFall_C
// 0x0018 (0x0100 - 0x00E8)
class UBP_PlayerActionStateFall_C final : public UBP_PlayerActionStateCommonBase_C
{
public:
	struct FVector                                PrevVelocity;                                      // 0x00E8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         VelocityTimer;                                     // 0x00F4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFallActionParam                              FallParam;                                         // 0x00F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bLanding;                                          // 0x00F9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_93B5[0x2];                                     // 0x00FA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         BeginHeight;                                       // 0x00FC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	int32 Enter(int32 Param);
	bool Transition();
	int32 Update();
	int32 Exit(int32 NextStateIndex);

	void IsEnablePrevVelocity(bool* bEnable) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_PlayerActionStateFall_C">();
	}
	static class UBP_PlayerActionStateFall_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_PlayerActionStateFall_C>();
	}
};
static_assert(alignof(UBP_PlayerActionStateFall_C) == 0x000008, "Wrong alignment on UBP_PlayerActionStateFall_C");
static_assert(sizeof(UBP_PlayerActionStateFall_C) == 0x000100, "Wrong size on UBP_PlayerActionStateFall_C");
static_assert(offsetof(UBP_PlayerActionStateFall_C, PrevVelocity) == 0x0000E8, "Member 'UBP_PlayerActionStateFall_C::PrevVelocity' has a wrong offset!");
static_assert(offsetof(UBP_PlayerActionStateFall_C, VelocityTimer) == 0x0000F4, "Member 'UBP_PlayerActionStateFall_C::VelocityTimer' has a wrong offset!");
static_assert(offsetof(UBP_PlayerActionStateFall_C, FallParam) == 0x0000F8, "Member 'UBP_PlayerActionStateFall_C::FallParam' has a wrong offset!");
static_assert(offsetof(UBP_PlayerActionStateFall_C, bLanding) == 0x0000F9, "Member 'UBP_PlayerActionStateFall_C::bLanding' has a wrong offset!");
static_assert(offsetof(UBP_PlayerActionStateFall_C, BeginHeight) == 0x0000FC, "Member 'UBP_PlayerActionStateFall_C::BeginHeight' has a wrong offset!");

}

