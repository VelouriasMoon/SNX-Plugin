#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PlayerMaterialAccessorComponent

#include "Basic.hpp"

#include "BP_PlayerMaterialAccessorComponent_classes.hpp"
#include "BP_PlayerMaterialAccessorComponent_parameters.hpp"


namespace SDK
{

// Function BP_PlayerMaterialAccessorComponent.BP_PlayerMaterialAccessorComponent_C.ExecuteUbergraph_BP_PlayerMaterialAccessorComponent
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerMaterialAccessorComponent_C::ExecuteUbergraph_BP_PlayerMaterialAccessorComponent(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerMaterialAccessorComponent_C", "ExecuteUbergraph_BP_PlayerMaterialAccessorComponent");

	Params::BP_PlayerMaterialAccessorComponent_C_ExecuteUbergraph_BP_PlayerMaterialAccessorComponent Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerMaterialAccessorComponent.BP_PlayerMaterialAccessorComponent_C.OnCutinVibration
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   No                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerMaterialAccessorComponent_C::OnCutinVibration(int32 No)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerMaterialAccessorComponent_C", "OnCutinVibration");

	Params::BP_PlayerMaterialAccessorComponent_C_OnCutinVibration Parms{};

	Parms.No = No;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerMaterialAccessorComponent.BP_PlayerMaterialAccessorComponent_C.ReceiveEndPlay
// (Event, Public, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerMaterialAccessorComponent_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerMaterialAccessorComponent_C", "ReceiveEndPlay");

	Params::BP_PlayerMaterialAccessorComponent_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerMaterialAccessorComponent.BP_PlayerMaterialAccessorComponent_C.SetPlayerMesh
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USkeletalMeshComponent*           PlayerMesh                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerMaterialAccessorComponent_C::SetPlayerMesh(class USkeletalMeshComponent* PlayerMesh)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerMaterialAccessorComponent_C", "SetPlayerMesh");

	Params::BP_PlayerMaterialAccessorComponent_C_SetPlayerMesh Parms{};

	Parms.PlayerMesh = PlayerMesh;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerMaterialAccessorComponent.BP_PlayerMaterialAccessorComponent_C.UpdateMateiral
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UBP_PlayerMaterialAccessorComponent_C::UpdateMateiral()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerMaterialAccessorComponent_C", "UpdateMateiral");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerMaterialAccessorComponent.BP_PlayerMaterialAccessorComponent_C.SetupDefaultParameter
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ACharacter*                       Param_Player                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerMaterialAccessorComponent_C::SetupDefaultParameter(class ACharacter* Param_Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerMaterialAccessorComponent_C", "SetupDefaultParameter");

	Params::BP_PlayerMaterialAccessorComponent_C_SetupDefaultParameter Parms{};

	Parms.Param_Player = Param_Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerMaterialAccessorComponent.BP_PlayerMaterialAccessorComponent_C.SetCable
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Param_Player                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerMaterialAccessorComponent_C::SetCable(class AActor* Param_Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerMaterialAccessorComponent_C", "SetCable");

	Params::BP_PlayerMaterialAccessorComponent_C_SetCable Parms{};

	Parms.Param_Player = Param_Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerMaterialAccessorComponent.BP_PlayerMaterialAccessorComponent_C.RestoreParameter
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UBP_PlayerMaterialAccessorComponent_C::RestoreParameter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerMaterialAccessorComponent_C", "RestoreParameter");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerMaterialAccessorComponent.BP_PlayerMaterialAccessorComponent_C.SearchPsychicFieldMaterial
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UMaterialInstanceDynamic*         Mid                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerMaterialAccessorComponent_C::SearchPsychicFieldMaterial(class AActor* Target, class UMaterialInstanceDynamic** Mid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerMaterialAccessorComponent_C", "SearchPsychicFieldMaterial");

	Params::BP_PlayerMaterialAccessorComponent_C_SearchPsychicFieldMaterial Parms{};

	Parms.Target = Target;

	UObject::ProcessEvent(Func, &Parms);

	if (Mid != nullptr)
		*Mid = Parms.Mid;
}


// Function BP_PlayerMaterialAccessorComponent.BP_PlayerMaterialAccessorComponent_C.UpdateLeftHandTable
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_PlayerMaterialAccessorComponent_C::UpdateLeftHandTable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerMaterialAccessorComponent_C", "UpdateLeftHandTable");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerMaterialAccessorComponent.BP_PlayerMaterialAccessorComponent_C.PrivateSetupPlayerMesh
// (Private, BlueprintCallable, BlueprintEvent)

void UBP_PlayerMaterialAccessorComponent_C::PrivateSetupPlayerMesh()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerMaterialAccessorComponent_C", "PrivateSetupPlayerMesh");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerMaterialAccessorComponent.BP_PlayerMaterialAccessorComponent_C.PrivateSetupDefaultParameter
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Param_Player                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerMaterialAccessorComponent_C::PrivateSetupDefaultParameter(class AActor* Param_Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerMaterialAccessorComponent_C", "PrivateSetupDefaultParameter");

	Params::BP_PlayerMaterialAccessorComponent_C_PrivateSetupDefaultParameter Parms{};

	Parms.Param_Player = Param_Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerMaterialAccessorComponent.BP_PlayerMaterialAccessorComponent_C.UpdateLeftHand
// (Private, BlueprintCallable, BlueprintEvent)

void UBP_PlayerMaterialAccessorComponent_C::UpdateLeftHand()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerMaterialAccessorComponent_C", "UpdateLeftHand");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerMaterialAccessorComponent.BP_PlayerMaterialAccessorComponent_C.UpdateHood
// (Private, BlueprintCallable, BlueprintEvent)

void UBP_PlayerMaterialAccessorComponent_C::UpdateHood()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerMaterialAccessorComponent_C", "UpdateHood");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerMaterialAccessorComponent.BP_PlayerMaterialAccessorComponent_C.UpdateMask
// (Private, BlueprintCallable, BlueprintEvent)

void UBP_PlayerMaterialAccessorComponent_C::UpdateMask()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerMaterialAccessorComponent_C", "UpdateMask");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerMaterialAccessorComponent.BP_PlayerMaterialAccessorComponent_C.UpdateOutlineEmission
// (Private, BlueprintCallable, BlueprintEvent)

void UBP_PlayerMaterialAccessorComponent_C::UpdateOutlineEmission()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerMaterialAccessorComponent_C", "UpdateOutlineEmission");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerMaterialAccessorComponent.BP_PlayerMaterialAccessorComponent_C.UpdatePsychicField
// (Private, BlueprintCallable, BlueprintEvent)

void UBP_PlayerMaterialAccessorComponent_C::UpdatePsychicField()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerMaterialAccessorComponent_C", "UpdatePsychicField");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerMaterialAccessorComponent.BP_PlayerMaterialAccessorComponent_C.SetupShadowOffsetMapID
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// EMaterialShadowOffsetID                 ShadowOffsetID                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsRestore                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PlayerMaterialAccessorComponent_C::SetupShadowOffsetMapID(EMaterialShadowOffsetID ShadowOffsetID, bool IsRestore)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerMaterialAccessorComponent_C", "SetupShadowOffsetMapID");

	Params::BP_PlayerMaterialAccessorComponent_C_SetupShadowOffsetMapID Parms{};

	Parms.ShadowOffsetID = ShadowOffsetID;
	Parms.IsRestore = IsRestore;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerMaterialAccessorComponent.BP_PlayerMaterialAccessorComponent_C.PrivateRestoreDefaultParameter
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_PlayerMaterialAccessorComponent_C::PrivateRestoreDefaultParameter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerMaterialAccessorComponent_C", "PrivateRestoreDefaultParameter");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerMaterialAccessorComponent.BP_PlayerMaterialAccessorComponent_C.SetShadowOffsetTexture
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UTexture2D*                       ShadowOffsetTexture                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerMaterialAccessorComponent_C::SetShadowOffsetTexture(class UTexture2D* ShadowOffsetTexture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerMaterialAccessorComponent_C", "SetShadowOffsetTexture");

	Params::BP_PlayerMaterialAccessorComponent_C_SetShadowOffsetTexture Parms{};

	Parms.ShadowOffsetTexture = ShadowOffsetTexture;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerMaterialAccessorComponent.BP_PlayerMaterialAccessorComponent_C.UpdateCables
// (Private, BlueprintCallable, BlueprintEvent)

void UBP_PlayerMaterialAccessorComponent_C::UpdateCables()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerMaterialAccessorComponent_C", "UpdateCables");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerMaterialAccessorComponent.BP_PlayerMaterialAccessorComponent_C.UpdateCablesOnce
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFPlayerCableMaterialParameter   CableRef                                               (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)

void UBP_PlayerMaterialAccessorComponent_C::UpdateCablesOnce(struct FFPlayerCableMaterialParameter& CableRef)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerMaterialAccessorComponent_C", "UpdateCablesOnce");

	Params::BP_PlayerMaterialAccessorComponent_C_UpdateCablesOnce Parms{};

	Parms.CableRef = std::move(CableRef);

	UObject::ProcessEvent(Func, &Parms);

	CableRef = std::move(Parms.CableRef);
}


// Function BP_PlayerMaterialAccessorComponent.BP_PlayerMaterialAccessorComponent_C.CreateCableParameter
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class ABP_CableBase_C*>          CableArray                                             (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// TArray<struct FFPlayerCableMaterialParameter>CableParameterArray                                    (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)

void UBP_PlayerMaterialAccessorComponent_C::CreateCableParameter(TArray<class ABP_CableBase_C*>& CableArray, TArray<struct FFPlayerCableMaterialParameter>& CableParameterArray)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerMaterialAccessorComponent_C", "CreateCableParameter");

	Params::BP_PlayerMaterialAccessorComponent_C_CreateCableParameter Parms{};

	Parms.CableArray = std::move(CableArray);
	Parms.CableParameterArray = std::move(CableParameterArray);

	UObject::ProcessEvent(Func, &Parms);

	CableArray = std::move(Parms.CableArray);
	CableParameterArray = std::move(Parms.CableParameterArray);
}


// Function BP_PlayerMaterialAccessorComponent.BP_PlayerMaterialAccessorComponent_C.SetupCableDefaultParameter
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FFPlayerCableMaterialParameter>CableParameterArray                                    (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)

void UBP_PlayerMaterialAccessorComponent_C::SetupCableDefaultParameter(TArray<struct FFPlayerCableMaterialParameter>& CableParameterArray)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerMaterialAccessorComponent_C", "SetupCableDefaultParameter");

	Params::BP_PlayerMaterialAccessorComponent_C_SetupCableDefaultParameter Parms{};

	Parms.CableParameterArray = std::move(CableParameterArray);

	UObject::ProcessEvent(Func, &Parms);

	CableParameterArray = std::move(Parms.CableParameterArray);
}


// Function BP_PlayerMaterialAccessorComponent.BP_PlayerMaterialAccessorComponent_C.PrivateSetupCable
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Param_Player                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerMaterialAccessorComponent_C::PrivateSetupCable(class AActor* Param_Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerMaterialAccessorComponent_C", "PrivateSetupCable");

	Params::BP_PlayerMaterialAccessorComponent_C_PrivateSetupCable Parms{};

	Parms.Param_Player = Param_Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerMaterialAccessorComponent.BP_PlayerMaterialAccessorComponent_C.PrivateInitialize
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_PlayerMaterialAccessorComponent_C::PrivateInitialize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerMaterialAccessorComponent_C", "PrivateInitialize");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerMaterialAccessorComponent.BP_PlayerMaterialAccessorComponent_C.PrivateUpdateMaterial
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_PlayerMaterialAccessorComponent_C::PrivateUpdateMaterial()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerMaterialAccessorComponent_C", "PrivateUpdateMaterial");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerMaterialAccessorComponent.BP_PlayerMaterialAccessorComponent_C.UpdateSeeThroughPPMCancel
// (Private, BlueprintCallable, BlueprintEvent)

void UBP_PlayerMaterialAccessorComponent_C::UpdateSeeThroughPPMCancel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerMaterialAccessorComponent_C", "UpdateSeeThroughPPMCancel");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerMaterialAccessorComponent.BP_PlayerMaterialAccessorComponent_C.SetOutlineEmissionNo
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   No                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerMaterialAccessorComponent_C::SetOutlineEmissionNo(int32 No)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerMaterialAccessorComponent_C", "SetOutlineEmissionNo");

	Params::BP_PlayerMaterialAccessorComponent_C_SetOutlineEmissionNo Parms{};

	Parms.No = No;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerMaterialAccessorComponent.BP_PlayerMaterialAccessorComponent_C.SetupDefaultSlots
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Assign                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   SlotNo                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerMaterialAccessorComponent_C::SetupDefaultSlots(bool Assign, int32 SlotNo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerMaterialAccessorComponent_C", "SetupDefaultSlots");

	Params::BP_PlayerMaterialAccessorComponent_C_SetupDefaultSlots Parms{};

	Parms.Assign = Assign;
	Parms.SlotNo = SlotNo;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerMaterialAccessorComponent.BP_PlayerMaterialAccessorComponent_C.UpdateStealth
// (Private, BlueprintCallable, BlueprintEvent)

void UBP_PlayerMaterialAccessorComponent_C::UpdateStealth()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerMaterialAccessorComponent_C", "UpdateStealth");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerMaterialAccessorComponent.BP_PlayerMaterialAccessorComponent_C.SetStealthRate
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Rate                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerMaterialAccessorComponent_C::SetStealthRate(float Rate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerMaterialAccessorComponent_C", "SetStealthRate");

	Params::BP_PlayerMaterialAccessorComponent_C_SetStealthRate Parms{};

	Parms.Rate = Rate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerMaterialAccessorComponent.BP_PlayerMaterialAccessorComponent_C.PrivateCheckSwitchMaterial
// (Private, BlueprintCallable, BlueprintEvent)

void UBP_PlayerMaterialAccessorComponent_C::PrivateCheckSwitchMaterial()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerMaterialAccessorComponent_C", "PrivateCheckSwitchMaterial");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerMaterialAccessorComponent.BP_PlayerMaterialAccessorComponent_C.PrivateSetupRestoreExcludeParams
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_PlayerMaterialAccessorComponent_C::PrivateSetupRestoreExcludeParams()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerMaterialAccessorComponent_C", "PrivateSetupRestoreExcludeParams");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerMaterialAccessorComponent.BP_PlayerMaterialAccessorComponent_C.PrivateSetupRestoreExcludeParamsInternal
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// EMaterialAccessorSetupID                ParamOverride                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class FName>                     ExcludeNames                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// TArray<class FName>                     OutParameterNames                                      (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)

void UBP_PlayerMaterialAccessorComponent_C::PrivateSetupRestoreExcludeParamsInternal(EMaterialAccessorSetupID ParamOverride, const TArray<class FName>& ExcludeNames, const TArray<class FName>& OutParameterNames)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerMaterialAccessorComponent_C", "PrivateSetupRestoreExcludeParamsInternal");

	Params::BP_PlayerMaterialAccessorComponent_C_PrivateSetupRestoreExcludeParamsInternal Parms{};

	Parms.ParamOverride = ParamOverride;
	Parms.ExcludeNames = std::move(ExcludeNames);
	Parms.OutParameterNames = std::move(OutParameterNames);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerMaterialAccessorComponent.BP_PlayerMaterialAccessorComponent_C.CopyMaterialParameter
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_PlayerMaterialAccessorComponent_C*SourceComponent                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerMaterialAccessorComponent_C::CopyMaterialParameter(class UBP_PlayerMaterialAccessorComponent_C* SourceComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerMaterialAccessorComponent_C", "CopyMaterialParameter");

	Params::BP_PlayerMaterialAccessorComponent_C_CopyMaterialParameter Parms{};

	Parms.SourceComponent = SourceComponent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerMaterialAccessorComponent.BP_PlayerMaterialAccessorComponent_C.PrivateResetOutlineEmission
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_PlayerMaterialAccessorComponent_C::PrivateResetOutlineEmission()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerMaterialAccessorComponent_C", "PrivateResetOutlineEmission");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerMaterialAccessorComponent.BP_PlayerMaterialAccessorComponent_C.UpdateHologram1
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_PlayerMaterialAccessorComponent_C::UpdateHologram1()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerMaterialAccessorComponent_C", "UpdateHologram1");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerMaterialAccessorComponent.BP_PlayerMaterialAccessorComponent_C.UpdatePlayerOptimize
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_PlayerMaterialAccessorComponent_C::UpdatePlayerOptimize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerMaterialAccessorComponent_C", "UpdatePlayerOptimize");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerMaterialAccessorComponent.BP_PlayerMaterialAccessorComponent_C.UpdatePlayerOptimizeOnce
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EMaterialAccessorSetupID                Override                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FMACVariableFloat                ScalarParameter                                        (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<class FName>                     ParameterNames                                         (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// TArray<float>                           ParameterValues                                        (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)

void UBP_PlayerMaterialAccessorComponent_C::UpdatePlayerOptimizeOnce(EMaterialAccessorSetupID Override, struct FMACVariableFloat& ScalarParameter, TArray<class FName>& ParameterNames, TArray<float>& ParameterValues)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerMaterialAccessorComponent_C", "UpdatePlayerOptimizeOnce");

	Params::BP_PlayerMaterialAccessorComponent_C_UpdatePlayerOptimizeOnce Parms{};

	Parms.Override = Override;
	Parms.ScalarParameter = std::move(ScalarParameter);
	Parms.ParameterNames = std::move(ParameterNames);
	Parms.ParameterValues = std::move(ParameterValues);

	UObject::ProcessEvent(Func, &Parms);

	ScalarParameter = std::move(Parms.ScalarParameter);
	ParameterNames = std::move(Parms.ParameterNames);
	ParameterValues = std::move(Parms.ParameterValues);
}


// Function BP_PlayerMaterialAccessorComponent.BP_PlayerMaterialAccessorComponent_C.SetOptimizeSwitcher
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBPC_OptimizeSwitchMaterial_C*    InOptimizeSwitcher                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ChildRef                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PlayerMaterialAccessorComponent_C::SetOptimizeSwitcher(class UBPC_OptimizeSwitchMaterial_C* InOptimizeSwitcher, bool ChildRef)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerMaterialAccessorComponent_C", "SetOptimizeSwitcher");

	Params::BP_PlayerMaterialAccessorComponent_C_SetOptimizeSwitcher Parms{};

	Parms.InOptimizeSwitcher = InOptimizeSwitcher;
	Parms.ChildRef = ChildRef;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerMaterialAccessorComponent.BP_PlayerMaterialAccessorComponent_C.PrivateRestoreOptimzieSwitcher
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_PlayerMaterialAccessorComponent_C::PrivateRestoreOptimzieSwitcher()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerMaterialAccessorComponent_C", "PrivateRestoreOptimzieSwitcher");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerMaterialAccessorComponent.BP_PlayerMaterialAccessorComponent_C.UpdateHeightGradation
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_PlayerMaterialAccessorComponent_C::UpdateHeightGradation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerMaterialAccessorComponent_C", "UpdateHeightGradation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerMaterialAccessorComponent.BP_PlayerMaterialAccessorComponent_C.AddRestoreExcludeParams
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class FName>                     Params_0                                               (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)

void UBP_PlayerMaterialAccessorComponent_C::AddRestoreExcludeParams(TArray<class FName>& Params_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerMaterialAccessorComponent_C", "AddRestoreExcludeParams");

	Params::BP_PlayerMaterialAccessorComponent_C_AddRestoreExcludeParams Parms{};

	Parms.Params_0 = std::move(Params_0);

	UObject::ProcessEvent(Func, &Parms);

	Params_0 = std::move(Parms.Params_0);
}


// Function BP_PlayerMaterialAccessorComponent.BP_PlayerMaterialAccessorComponent_C.UpdateNPC
// (Private, BlueprintCallable, BlueprintEvent)

void UBP_PlayerMaterialAccessorComponent_C::UpdateNPC()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerMaterialAccessorComponent_C", "UpdateNPC");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerMaterialAccessorComponent.BP_PlayerMaterialAccessorComponent_C.SetNPCMode
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enable                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PlayerMaterialAccessorComponent_C::SetNPCMode(bool Enable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerMaterialAccessorComponent_C", "SetNPCMode");

	Params::BP_PlayerMaterialAccessorComponent_C_SetNPCMode Parms{};

	Parms.Enable = Enable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerMaterialAccessorComponent.BP_PlayerMaterialAccessorComponent_C.UpdateAmbientLight
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_PlayerMaterialAccessorComponent_C::UpdateAmbientLight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerMaterialAccessorComponent_C", "UpdateAmbientLight");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerMaterialAccessorComponent.BP_PlayerMaterialAccessorComponent_C.PreEndPlay
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerMaterialAccessorComponent_C::PreEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerMaterialAccessorComponent_C", "PreEndPlay");

	Params::BP_PlayerMaterialAccessorComponent_C_PreEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerMaterialAccessorComponent.BP_PlayerMaterialAccessorComponent_C.SetFirstUpdateOnly
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    FirstOnly                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PlayerMaterialAccessorComponent_C::SetFirstUpdateOnly(bool FirstOnly)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerMaterialAccessorComponent_C", "SetFirstUpdateOnly");

	Params::BP_PlayerMaterialAccessorComponent_C_SetFirstUpdateOnly Parms{};

	Parms.FirstOnly = FirstOnly;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerMaterialAccessorComponent.BP_PlayerMaterialAccessorComponent_C.SetupRestoreType
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InRestoreOverrideParameter                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    InForceRestoreSASParameter                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    InRestoreMaterialReset                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    InRestoreMaterialAllSkip                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PlayerMaterialAccessorComponent_C::SetupRestoreType(bool InRestoreOverrideParameter, bool InForceRestoreSASParameter, bool InRestoreMaterialReset, bool InRestoreMaterialAllSkip)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerMaterialAccessorComponent_C", "SetupRestoreType");

	Params::BP_PlayerMaterialAccessorComponent_C_SetupRestoreType Parms{};

	Parms.InRestoreOverrideParameter = InRestoreOverrideParameter;
	Parms.InForceRestoreSASParameter = InForceRestoreSASParameter;
	Parms.InRestoreMaterialReset = InRestoreMaterialReset;
	Parms.InRestoreMaterialAllSkip = InRestoreMaterialAllSkip;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerMaterialAccessorComponent.BP_PlayerMaterialAccessorComponent_C.UpdateCopy
// (Private, BlueprintCallable, BlueprintEvent)

void UBP_PlayerMaterialAccessorComponent_C::UpdateCopy()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerMaterialAccessorComponent_C", "UpdateCopy");

	UObject::ProcessEvent(Func, nullptr);
}

}

