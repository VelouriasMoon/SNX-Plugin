#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_static_pl

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_static_pl.BP_static_pl_C.ExecuteUbergraph_BP_static_pl
// 0x00A0 (0x00A0 - 0x0000)
struct BP_static_pl_C_ExecuteUbergraph_BP_static_pl final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A8B[0xC];                                     // 0x0004(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0010(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_Enabled;                              // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A8C[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_MatchIDWidgetActor_C*               CallFunc_FinishSpawningActor_ReturnValue;          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_Event_AnimMontage;                          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsLoop;                               // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A8D[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            K2Node_CustomEvent_Curve;                          // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A8E[0x7];                                     // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A8F[0x7];                                     // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UABP_static_pl_C*                       K2Node_DynamicCast_AsABP_Static_Pl;                // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_static_pl_C_ExecuteUbergraph_BP_static_pl) == 0x000010, "Wrong alignment on BP_static_pl_C_ExecuteUbergraph_BP_static_pl");
static_assert(sizeof(BP_static_pl_C_ExecuteUbergraph_BP_static_pl) == 0x0000A0, "Wrong size on BP_static_pl_C_ExecuteUbergraph_BP_static_pl");
static_assert(offsetof(BP_static_pl_C_ExecuteUbergraph_BP_static_pl, EntryPoint) == 0x000000, "Member 'BP_static_pl_C_ExecuteUbergraph_BP_static_pl::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_static_pl_C_ExecuteUbergraph_BP_static_pl, CallFunc_MakeTransform_ReturnValue) == 0x000010, "Member 'BP_static_pl_C_ExecuteUbergraph_BP_static_pl::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_static_pl_C_ExecuteUbergraph_BP_static_pl, K2Node_Event_Enabled) == 0x000040, "Member 'BP_static_pl_C_ExecuteUbergraph_BP_static_pl::K2Node_Event_Enabled' has a wrong offset!");
static_assert(offsetof(BP_static_pl_C_ExecuteUbergraph_BP_static_pl, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000048, "Member 'BP_static_pl_C_ExecuteUbergraph_BP_static_pl::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_static_pl_C_ExecuteUbergraph_BP_static_pl, CallFunc_FinishSpawningActor_ReturnValue) == 0x000050, "Member 'BP_static_pl_C_ExecuteUbergraph_BP_static_pl::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_static_pl_C_ExecuteUbergraph_BP_static_pl, K2Node_Event_AnimMontage) == 0x000058, "Member 'BP_static_pl_C_ExecuteUbergraph_BP_static_pl::K2Node_Event_AnimMontage' has a wrong offset!");
static_assert(offsetof(BP_static_pl_C_ExecuteUbergraph_BP_static_pl, K2Node_Event_IsLoop) == 0x000060, "Member 'BP_static_pl_C_ExecuteUbergraph_BP_static_pl::K2Node_Event_IsLoop' has a wrong offset!");
static_assert(offsetof(BP_static_pl_C_ExecuteUbergraph_BP_static_pl, K2Node_Event_DeltaSeconds) == 0x000064, "Member 'BP_static_pl_C_ExecuteUbergraph_BP_static_pl::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_static_pl_C_ExecuteUbergraph_BP_static_pl, K2Node_CustomEvent_Curve) == 0x000068, "Member 'BP_static_pl_C_ExecuteUbergraph_BP_static_pl::K2Node_CustomEvent_Curve' has a wrong offset!");
static_assert(offsetof(BP_static_pl_C_ExecuteUbergraph_BP_static_pl, CallFunc_IsValid_ReturnValue) == 0x000070, "Member 'BP_static_pl_C_ExecuteUbergraph_BP_static_pl::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_static_pl_C_ExecuteUbergraph_BP_static_pl, CallFunc_GetAnimInstance_ReturnValue) == 0x000078, "Member 'BP_static_pl_C_ExecuteUbergraph_BP_static_pl::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_static_pl_C_ExecuteUbergraph_BP_static_pl, K2Node_Event_EndPlayReason) == 0x000080, "Member 'BP_static_pl_C_ExecuteUbergraph_BP_static_pl::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(BP_static_pl_C_ExecuteUbergraph_BP_static_pl, K2Node_DynamicCast_AsABP_Static_Pl) == 0x000088, "Member 'BP_static_pl_C_ExecuteUbergraph_BP_static_pl::K2Node_DynamicCast_AsABP_Static_Pl' has a wrong offset!");
static_assert(offsetof(BP_static_pl_C_ExecuteUbergraph_BP_static_pl, K2Node_DynamicCast_bSuccess) == 0x000090, "Member 'BP_static_pl_C_ExecuteUbergraph_BP_static_pl::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_static_pl_C_ExecuteUbergraph_BP_static_pl, CallFunc_IsValid_ReturnValue_1) == 0x000091, "Member 'BP_static_pl_C_ExecuteUbergraph_BP_static_pl::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_static_pl.BP_static_pl_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_static_pl_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_static_pl_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BP_static_pl_C_ReceiveEndPlay");
static_assert(sizeof(BP_static_pl_C_ReceiveEndPlay) == 0x000001, "Wrong size on BP_static_pl_C_ReceiveEndPlay");
static_assert(offsetof(BP_static_pl_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BP_static_pl_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BP_static_pl.BP_static_pl_C.StartShaderAnimMontageWeightTimeLine
// 0x0008 (0x0008 - 0x0000)
struct BP_static_pl_C_StartShaderAnimMontageWeightTimeLine final
{
public:
	class UCurveFloat*                            Curve;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_static_pl_C_StartShaderAnimMontageWeightTimeLine) == 0x000008, "Wrong alignment on BP_static_pl_C_StartShaderAnimMontageWeightTimeLine");
static_assert(sizeof(BP_static_pl_C_StartShaderAnimMontageWeightTimeLine) == 0x000008, "Wrong size on BP_static_pl_C_StartShaderAnimMontageWeightTimeLine");
static_assert(offsetof(BP_static_pl_C_StartShaderAnimMontageWeightTimeLine, Curve) == 0x000000, "Member 'BP_static_pl_C_StartShaderAnimMontageWeightTimeLine::Curve' has a wrong offset!");

// Function BP_static_pl.BP_static_pl_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_static_pl_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_static_pl_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_static_pl_C_ReceiveTick");
static_assert(sizeof(BP_static_pl_C_ReceiveTick) == 0x000004, "Wrong size on BP_static_pl_C_ReceiveTick");
static_assert(offsetof(BP_static_pl_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_static_pl_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_static_pl.BP_static_pl_C.PlayBoardAnimation
// 0x0010 (0x0010 - 0x0000)
struct BP_static_pl_C_PlayBoardAnimation final
{
public:
	class UAnimMontage*                           AnimMontage;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsLoop;                                            // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_static_pl_C_PlayBoardAnimation) == 0x000008, "Wrong alignment on BP_static_pl_C_PlayBoardAnimation");
static_assert(sizeof(BP_static_pl_C_PlayBoardAnimation) == 0x000010, "Wrong size on BP_static_pl_C_PlayBoardAnimation");
static_assert(offsetof(BP_static_pl_C_PlayBoardAnimation, AnimMontage) == 0x000000, "Member 'BP_static_pl_C_PlayBoardAnimation::AnimMontage' has a wrong offset!");
static_assert(offsetof(BP_static_pl_C_PlayBoardAnimation, IsLoop) == 0x000008, "Member 'BP_static_pl_C_PlayBoardAnimation::IsLoop' has a wrong offset!");

// Function BP_static_pl.BP_static_pl_C.SetTicks
// 0x0001 (0x0001 - 0x0000)
struct BP_static_pl_C_SetTicks final
{
public:
	bool                                          Enabled;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_static_pl_C_SetTicks) == 0x000001, "Wrong alignment on BP_static_pl_C_SetTicks");
static_assert(sizeof(BP_static_pl_C_SetTicks) == 0x000001, "Wrong size on BP_static_pl_C_SetTicks");
static_assert(offsetof(BP_static_pl_C_SetTicks, Enabled) == 0x000000, "Member 'BP_static_pl_C_SetTicks::Enabled' has a wrong offset!");

// Function BP_static_pl.BP_static_pl_C.PrivateSetTicks
// 0x0001 (0x0001 - 0x0000)
struct BP_static_pl_C_PrivateSetTicks final
{
public:
	bool                                          Enabled;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_static_pl_C_PrivateSetTicks) == 0x000001, "Wrong alignment on BP_static_pl_C_PrivateSetTicks");
static_assert(sizeof(BP_static_pl_C_PrivateSetTicks) == 0x000001, "Wrong size on BP_static_pl_C_PrivateSetTicks");
static_assert(offsetof(BP_static_pl_C_PrivateSetTicks, Enabled) == 0x000000, "Member 'BP_static_pl_C_PrivateSetTicks::Enabled' has a wrong offset!");

// Function BP_static_pl.BP_static_pl_C.PrivatePlayBoardAnimation
// 0x0028 (0x0028 - 0x0000)
struct BP_static_pl_C_PrivatePlayBoardAnimation final
{
public:
	class UAnimMontage*                           AnimMontage;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InIsLoop;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A90[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UABP_static_pl_C*                       K2Node_DynamicCast_AsABP_Static_Pl;                // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_static_pl_C_PrivatePlayBoardAnimation) == 0x000008, "Wrong alignment on BP_static_pl_C_PrivatePlayBoardAnimation");
static_assert(sizeof(BP_static_pl_C_PrivatePlayBoardAnimation) == 0x000028, "Wrong size on BP_static_pl_C_PrivatePlayBoardAnimation");
static_assert(offsetof(BP_static_pl_C_PrivatePlayBoardAnimation, AnimMontage) == 0x000000, "Member 'BP_static_pl_C_PrivatePlayBoardAnimation::AnimMontage' has a wrong offset!");
static_assert(offsetof(BP_static_pl_C_PrivatePlayBoardAnimation, InIsLoop) == 0x000008, "Member 'BP_static_pl_C_PrivatePlayBoardAnimation::InIsLoop' has a wrong offset!");
static_assert(offsetof(BP_static_pl_C_PrivatePlayBoardAnimation, CallFunc_GetAnimInstance_ReturnValue) == 0x000010, "Member 'BP_static_pl_C_PrivatePlayBoardAnimation::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_static_pl_C_PrivatePlayBoardAnimation, K2Node_DynamicCast_AsABP_Static_Pl) == 0x000018, "Member 'BP_static_pl_C_PrivatePlayBoardAnimation::K2Node_DynamicCast_AsABP_Static_Pl' has a wrong offset!");
static_assert(offsetof(BP_static_pl_C_PrivatePlayBoardAnimation, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_static_pl_C_PrivatePlayBoardAnimation::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_static_pl.BP_static_pl_C.SetIsGeneralStaticFlag
// 0x0020 (0x0020 - 0x0000)
struct BP_static_pl_C_SetIsGeneralStaticFlag final
{
public:
	bool                                          Param_IsGeneralStatic;                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A91[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UABP_static_pl_C*                       K2Node_DynamicCast_AsABP_Static_Pl;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_static_pl_C_SetIsGeneralStaticFlag) == 0x000008, "Wrong alignment on BP_static_pl_C_SetIsGeneralStaticFlag");
static_assert(sizeof(BP_static_pl_C_SetIsGeneralStaticFlag) == 0x000020, "Wrong size on BP_static_pl_C_SetIsGeneralStaticFlag");
static_assert(offsetof(BP_static_pl_C_SetIsGeneralStaticFlag, Param_IsGeneralStatic) == 0x000000, "Member 'BP_static_pl_C_SetIsGeneralStaticFlag::Param_IsGeneralStatic' has a wrong offset!");
static_assert(offsetof(BP_static_pl_C_SetIsGeneralStaticFlag, CallFunc_GetAnimInstance_ReturnValue) == 0x000008, "Member 'BP_static_pl_C_SetIsGeneralStaticFlag::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_static_pl_C_SetIsGeneralStaticFlag, K2Node_DynamicCast_AsABP_Static_Pl) == 0x000010, "Member 'BP_static_pl_C_SetIsGeneralStaticFlag::K2Node_DynamicCast_AsABP_Static_Pl' has a wrong offset!");
static_assert(offsetof(BP_static_pl_C_SetIsGeneralStaticFlag, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_static_pl_C_SetIsGeneralStaticFlag::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_static_pl.BP_static_pl_C.SetPauseTimerHandle
// 0x0020 (0x0020 - 0x0000)
struct BP_static_pl_C_SetPauseTimerHandle final
{
public:
	bool                                          IsPause;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A92[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UABP_static_pl_C*                       K2Node_DynamicCast_AsABP_Static_Pl;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_static_pl_C_SetPauseTimerHandle) == 0x000008, "Wrong alignment on BP_static_pl_C_SetPauseTimerHandle");
static_assert(sizeof(BP_static_pl_C_SetPauseTimerHandle) == 0x000020, "Wrong size on BP_static_pl_C_SetPauseTimerHandle");
static_assert(offsetof(BP_static_pl_C_SetPauseTimerHandle, IsPause) == 0x000000, "Member 'BP_static_pl_C_SetPauseTimerHandle::IsPause' has a wrong offset!");
static_assert(offsetof(BP_static_pl_C_SetPauseTimerHandle, CallFunc_GetAnimInstance_ReturnValue) == 0x000008, "Member 'BP_static_pl_C_SetPauseTimerHandle::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_static_pl_C_SetPauseTimerHandle, K2Node_DynamicCast_AsABP_Static_Pl) == 0x000010, "Member 'BP_static_pl_C_SetPauseTimerHandle::K2Node_DynamicCast_AsABP_Static_Pl' has a wrong offset!");
static_assert(offsetof(BP_static_pl_C_SetPauseTimerHandle, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_static_pl_C_SetPauseTimerHandle::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_static_pl.BP_static_pl_C.StartMatchIDWidget
// 0x0020 (0x0020 - 0x0000)
struct BP_static_pl_C_StartMatchIDWidget final
{
public:
	class FName                                   CharaID;                                           // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ArmyCodeMessageID;                                 // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Scale;                                             // 0x0010(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_static_pl_C_StartMatchIDWidget) == 0x000004, "Wrong alignment on BP_static_pl_C_StartMatchIDWidget");
static_assert(sizeof(BP_static_pl_C_StartMatchIDWidget) == 0x000020, "Wrong size on BP_static_pl_C_StartMatchIDWidget");
static_assert(offsetof(BP_static_pl_C_StartMatchIDWidget, CharaID) == 0x000000, "Member 'BP_static_pl_C_StartMatchIDWidget::CharaID' has a wrong offset!");
static_assert(offsetof(BP_static_pl_C_StartMatchIDWidget, ArmyCodeMessageID) == 0x000008, "Member 'BP_static_pl_C_StartMatchIDWidget::ArmyCodeMessageID' has a wrong offset!");
static_assert(offsetof(BP_static_pl_C_StartMatchIDWidget, Scale) == 0x000010, "Member 'BP_static_pl_C_StartMatchIDWidget::Scale' has a wrong offset!");
static_assert(offsetof(BP_static_pl_C_StartMatchIDWidget, CallFunc_IsValid_ReturnValue) == 0x00001C, "Member 'BP_static_pl_C_StartMatchIDWidget::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_static_pl.BP_static_pl_C.EndMatchIDWidget
// 0x0001 (0x0001 - 0x0000)
struct BP_static_pl_C_EndMatchIDWidget final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_static_pl_C_EndMatchIDWidget) == 0x000001, "Wrong alignment on BP_static_pl_C_EndMatchIDWidget");
static_assert(sizeof(BP_static_pl_C_EndMatchIDWidget) == 0x000001, "Wrong size on BP_static_pl_C_EndMatchIDWidget");
static_assert(offsetof(BP_static_pl_C_EndMatchIDWidget, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_static_pl_C_EndMatchIDWidget::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_static_pl.BP_static_pl_C.SetHiddenInGameMatchIDWidget
// 0x0002 (0x0002 - 0x0000)
struct BP_static_pl_C_SetHiddenInGameMatchIDWidget final
{
public:
	bool                                          NewHidden;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_static_pl_C_SetHiddenInGameMatchIDWidget) == 0x000001, "Wrong alignment on BP_static_pl_C_SetHiddenInGameMatchIDWidget");
static_assert(sizeof(BP_static_pl_C_SetHiddenInGameMatchIDWidget) == 0x000002, "Wrong size on BP_static_pl_C_SetHiddenInGameMatchIDWidget");
static_assert(offsetof(BP_static_pl_C_SetHiddenInGameMatchIDWidget, NewHidden) == 0x000000, "Member 'BP_static_pl_C_SetHiddenInGameMatchIDWidget::NewHidden' has a wrong offset!");
static_assert(offsetof(BP_static_pl_C_SetHiddenInGameMatchIDWidget, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'BP_static_pl_C_SetHiddenInGameMatchIDWidget::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_static_pl.BP_static_pl_C.SetToneMapCounter
// 0x0004 (0x0004 - 0x0000)
struct BP_static_pl_C_SetToneMapCounter final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_static_pl_C_SetToneMapCounter) == 0x000004, "Wrong alignment on BP_static_pl_C_SetToneMapCounter");
static_assert(sizeof(BP_static_pl_C_SetToneMapCounter) == 0x000004, "Wrong size on BP_static_pl_C_SetToneMapCounter");
static_assert(offsetof(BP_static_pl_C_SetToneMapCounter, Value) == 0x000000, "Member 'BP_static_pl_C_SetToneMapCounter::Value' has a wrong offset!");

// Function BP_static_pl.BP_static_pl_C.ClearAttachEventAsset
// 0x0080 (0x0080 - 0x0000)
struct BP_static_pl_C_ClearAttachEventAsset final
{
public:
	class AActor*                                 LOwner;                                            // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class USceneComponent*>                LComponentList;                                    // 0x0008(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ActorHasTag_ReturnValue;                  // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A93[0x2];                                     // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A94[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A95[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A96[0x3];                                     // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item_1;                         // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A97[0x2];                                     // 0x006A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class USceneComponent*>                CallFunc_GetChildrenComponents_Children;           // 0x0070(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(BP_static_pl_C_ClearAttachEventAsset) == 0x000008, "Wrong alignment on BP_static_pl_C_ClearAttachEventAsset");
static_assert(sizeof(BP_static_pl_C_ClearAttachEventAsset) == 0x000080, "Wrong size on BP_static_pl_C_ClearAttachEventAsset");
static_assert(offsetof(BP_static_pl_C_ClearAttachEventAsset, LOwner) == 0x000000, "Member 'BP_static_pl_C_ClearAttachEventAsset::LOwner' has a wrong offset!");
static_assert(offsetof(BP_static_pl_C_ClearAttachEventAsset, LComponentList) == 0x000008, "Member 'BP_static_pl_C_ClearAttachEventAsset::LComponentList' has a wrong offset!");
static_assert(offsetof(BP_static_pl_C_ClearAttachEventAsset, Temp_int_Variable) == 0x000018, "Member 'BP_static_pl_C_ClearAttachEventAsset::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_static_pl_C_ClearAttachEventAsset, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'BP_static_pl_C_ClearAttachEventAsset::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_static_pl_C_ClearAttachEventAsset, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BP_static_pl_C_ClearAttachEventAsset::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_static_pl_C_ClearAttachEventAsset, CallFunc_Add_IntInt_ReturnValue_1) == 0x000024, "Member 'BP_static_pl_C_ClearAttachEventAsset::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_static_pl_C_ClearAttachEventAsset, Temp_int_Array_Index_Variable) == 0x000028, "Member 'BP_static_pl_C_ClearAttachEventAsset::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_static_pl_C_ClearAttachEventAsset, CallFunc_IsValid_ReturnValue) == 0x00002C, "Member 'BP_static_pl_C_ClearAttachEventAsset::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_static_pl_C_ClearAttachEventAsset, CallFunc_ActorHasTag_ReturnValue) == 0x00002D, "Member 'BP_static_pl_C_ClearAttachEventAsset::CallFunc_ActorHasTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_static_pl_C_ClearAttachEventAsset, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BP_static_pl_C_ClearAttachEventAsset::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_static_pl_C_ClearAttachEventAsset, CallFunc_Array_Get_Item) == 0x000038, "Member 'BP_static_pl_C_ClearAttachEventAsset::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_static_pl_C_ClearAttachEventAsset, CallFunc_Greater_IntInt_ReturnValue) == 0x000040, "Member 'BP_static_pl_C_ClearAttachEventAsset::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_static_pl_C_ClearAttachEventAsset, CallFunc_GetOwner_ReturnValue) == 0x000048, "Member 'BP_static_pl_C_ClearAttachEventAsset::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_static_pl_C_ClearAttachEventAsset, CallFunc_Array_Length_ReturnValue_1) == 0x000050, "Member 'BP_static_pl_C_ClearAttachEventAsset::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_static_pl_C_ClearAttachEventAsset, CallFunc_Less_IntInt_ReturnValue) == 0x000054, "Member 'BP_static_pl_C_ClearAttachEventAsset::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_static_pl_C_ClearAttachEventAsset, CallFunc_Array_Get_Item_1) == 0x000058, "Member 'BP_static_pl_C_ClearAttachEventAsset::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_static_pl_C_ClearAttachEventAsset, CallFunc_Array_Length_ReturnValue_2) == 0x000060, "Member 'BP_static_pl_C_ClearAttachEventAsset::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_static_pl_C_ClearAttachEventAsset, CallFunc_Array_Length_ReturnValue_3) == 0x000064, "Member 'BP_static_pl_C_ClearAttachEventAsset::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_static_pl_C_ClearAttachEventAsset, CallFunc_Less_IntInt_ReturnValue_1) == 0x000068, "Member 'BP_static_pl_C_ClearAttachEventAsset::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_static_pl_C_ClearAttachEventAsset, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000069, "Member 'BP_static_pl_C_ClearAttachEventAsset::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_static_pl_C_ClearAttachEventAsset, CallFunc_Array_Add_ReturnValue) == 0x00006C, "Member 'BP_static_pl_C_ClearAttachEventAsset::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_static_pl_C_ClearAttachEventAsset, CallFunc_GetChildrenComponents_Children) == 0x000070, "Member 'BP_static_pl_C_ClearAttachEventAsset::CallFunc_GetChildrenComponents_Children' has a wrong offset!");

// Function BP_static_pl.BP_static_pl_C.SetAlphaAttachEventAsset
// 0x0090 (0x0090 - 0x0000)
struct BP_static_pl_C_SetAlphaAttachEventAsset final
{
public:
	float                                         FloatParam;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A98[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         ActorList;                                         // 0x0008(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A99[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A9A[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_GetSkeletalMeshFromActor_ReturnValue;     // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A9B[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class USceneComponent*>                CallFunc_GetChildrenComponents_Children;           // 0x0050(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A9C[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_Array_Get_Item;                           // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x007D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A9D[0x2];                                     // 0x007E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ActorHasTag_ReturnValue;                  // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A9E[0x3];                                     // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_static_pl_C_SetAlphaAttachEventAsset) == 0x000008, "Wrong alignment on BP_static_pl_C_SetAlphaAttachEventAsset");
static_assert(sizeof(BP_static_pl_C_SetAlphaAttachEventAsset) == 0x000090, "Wrong size on BP_static_pl_C_SetAlphaAttachEventAsset");
static_assert(offsetof(BP_static_pl_C_SetAlphaAttachEventAsset, FloatParam) == 0x000000, "Member 'BP_static_pl_C_SetAlphaAttachEventAsset::FloatParam' has a wrong offset!");
static_assert(offsetof(BP_static_pl_C_SetAlphaAttachEventAsset, ActorList) == 0x000008, "Member 'BP_static_pl_C_SetAlphaAttachEventAsset::ActorList' has a wrong offset!");
static_assert(offsetof(BP_static_pl_C_SetAlphaAttachEventAsset, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BP_static_pl_C_SetAlphaAttachEventAsset::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_static_pl_C_SetAlphaAttachEventAsset, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'BP_static_pl_C_SetAlphaAttachEventAsset::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_static_pl_C_SetAlphaAttachEventAsset, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BP_static_pl_C_SetAlphaAttachEventAsset::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_static_pl_C_SetAlphaAttachEventAsset, Temp_int_Array_Index_Variable_1) == 0x000024, "Member 'BP_static_pl_C_SetAlphaAttachEventAsset::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_static_pl_C_SetAlphaAttachEventAsset, Temp_int_Loop_Counter_Variable_1) == 0x000028, "Member 'BP_static_pl_C_SetAlphaAttachEventAsset::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_static_pl_C_SetAlphaAttachEventAsset, CallFunc_Add_IntInt_ReturnValue_1) == 0x00002C, "Member 'BP_static_pl_C_SetAlphaAttachEventAsset::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_static_pl_C_SetAlphaAttachEventAsset, Temp_int_Loop_Num_Variable) == 0x000030, "Member 'BP_static_pl_C_SetAlphaAttachEventAsset::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_static_pl_C_SetAlphaAttachEventAsset, CallFunc_Less_IntInt_ReturnValue) == 0x000034, "Member 'BP_static_pl_C_SetAlphaAttachEventAsset::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_static_pl_C_SetAlphaAttachEventAsset, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'BP_static_pl_C_SetAlphaAttachEventAsset::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_static_pl_C_SetAlphaAttachEventAsset, CallFunc_GetSkeletalMeshFromActor_ReturnValue) == 0x000040, "Member 'BP_static_pl_C_SetAlphaAttachEventAsset::CallFunc_GetSkeletalMeshFromActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_static_pl_C_SetAlphaAttachEventAsset, CallFunc_IsValid_ReturnValue) == 0x000048, "Member 'BP_static_pl_C_SetAlphaAttachEventAsset::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_static_pl_C_SetAlphaAttachEventAsset, CallFunc_Array_Length_ReturnValue_1) == 0x00004C, "Member 'BP_static_pl_C_SetAlphaAttachEventAsset::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_static_pl_C_SetAlphaAttachEventAsset, CallFunc_GetChildrenComponents_Children) == 0x000050, "Member 'BP_static_pl_C_SetAlphaAttachEventAsset::CallFunc_GetChildrenComponents_Children' has a wrong offset!");
static_assert(offsetof(BP_static_pl_C_SetAlphaAttachEventAsset, CallFunc_Greater_IntInt_ReturnValue) == 0x000060, "Member 'BP_static_pl_C_SetAlphaAttachEventAsset::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_static_pl_C_SetAlphaAttachEventAsset, CallFunc_Array_Get_Item) == 0x000068, "Member 'BP_static_pl_C_SetAlphaAttachEventAsset::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_static_pl_C_SetAlphaAttachEventAsset, CallFunc_GetOwner_ReturnValue) == 0x000070, "Member 'BP_static_pl_C_SetAlphaAttachEventAsset::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_static_pl_C_SetAlphaAttachEventAsset, CallFunc_Array_Length_ReturnValue_2) == 0x000078, "Member 'BP_static_pl_C_SetAlphaAttachEventAsset::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_static_pl_C_SetAlphaAttachEventAsset, CallFunc_IsValid_ReturnValue_1) == 0x00007C, "Member 'BP_static_pl_C_SetAlphaAttachEventAsset::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_static_pl_C_SetAlphaAttachEventAsset, CallFunc_Less_IntInt_ReturnValue_1) == 0x00007D, "Member 'BP_static_pl_C_SetAlphaAttachEventAsset::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_static_pl_C_SetAlphaAttachEventAsset, CallFunc_Array_Add_ReturnValue) == 0x000080, "Member 'BP_static_pl_C_SetAlphaAttachEventAsset::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_static_pl_C_SetAlphaAttachEventAsset, CallFunc_ActorHasTag_ReturnValue) == 0x000084, "Member 'BP_static_pl_C_SetAlphaAttachEventAsset::CallFunc_ActorHasTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_static_pl_C_SetAlphaAttachEventAsset, CallFunc_Array_Length_ReturnValue_3) == 0x000088, "Member 'BP_static_pl_C_SetAlphaAttachEventAsset::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_static_pl_C_SetAlphaAttachEventAsset, CallFunc_Greater_IntInt_ReturnValue_1) == 0x00008C, "Member 'BP_static_pl_C_SetAlphaAttachEventAsset::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_static_pl.BP_static_pl_C.SetMaterialUseCrossFadeAlpha
// 0x0008 (0x0008 - 0x0000)
struct BP_static_pl_C_SetMaterialUseCrossFadeAlpha final
{
public:
	bool                                          Enable;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A9F[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue;             // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_static_pl_C_SetMaterialUseCrossFadeAlpha) == 0x000004, "Wrong alignment on BP_static_pl_C_SetMaterialUseCrossFadeAlpha");
static_assert(sizeof(BP_static_pl_C_SetMaterialUseCrossFadeAlpha) == 0x000008, "Wrong size on BP_static_pl_C_SetMaterialUseCrossFadeAlpha");
static_assert(offsetof(BP_static_pl_C_SetMaterialUseCrossFadeAlpha, Enable) == 0x000000, "Member 'BP_static_pl_C_SetMaterialUseCrossFadeAlpha::Enable' has a wrong offset!");
static_assert(offsetof(BP_static_pl_C_SetMaterialUseCrossFadeAlpha, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'BP_static_pl_C_SetMaterialUseCrossFadeAlpha::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_static_pl_C_SetMaterialUseCrossFadeAlpha, CallFunc_Conv_BoolToFloat_ReturnValue) == 0x000004, "Member 'BP_static_pl_C_SetMaterialUseCrossFadeAlpha::CallFunc_Conv_BoolToFloat_ReturnValue' has a wrong offset!");

// Function BP_static_pl.BP_static_pl_C.EventEnd
// 0x0001 (0x0001 - 0x0000)
struct BP_static_pl_C_EventEnd final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_static_pl_C_EventEnd) == 0x000001, "Wrong alignment on BP_static_pl_C_EventEnd");
static_assert(sizeof(BP_static_pl_C_EventEnd) == 0x000001, "Wrong size on BP_static_pl_C_EventEnd");
static_assert(offsetof(BP_static_pl_C_EventEnd, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_static_pl_C_EventEnd::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_static_pl.BP_static_pl_C.IsAnimationPlay
// 0x0020 (0x0020 - 0x0000)
struct BP_static_pl_C_IsAnimationPlay final
{
public:
	bool                                          IsPlay;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5AA0[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UABP_static_pl_C*                       K2Node_DynamicCast_AsABP_Static_Pl;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_static_pl_C_IsAnimationPlay) == 0x000008, "Wrong alignment on BP_static_pl_C_IsAnimationPlay");
static_assert(sizeof(BP_static_pl_C_IsAnimationPlay) == 0x000020, "Wrong size on BP_static_pl_C_IsAnimationPlay");
static_assert(offsetof(BP_static_pl_C_IsAnimationPlay, IsPlay) == 0x000000, "Member 'BP_static_pl_C_IsAnimationPlay::IsPlay' has a wrong offset!");
static_assert(offsetof(BP_static_pl_C_IsAnimationPlay, CallFunc_GetAnimInstance_ReturnValue) == 0x000008, "Member 'BP_static_pl_C_IsAnimationPlay::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_static_pl_C_IsAnimationPlay, K2Node_DynamicCast_AsABP_Static_Pl) == 0x000010, "Member 'BP_static_pl_C_IsAnimationPlay::K2Node_DynamicCast_AsABP_Static_Pl' has a wrong offset!");
static_assert(offsetof(BP_static_pl_C_IsAnimationPlay, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_static_pl_C_IsAnimationPlay::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_static_pl.BP_static_pl_C.IsAnimationPlayToggle
// 0x0020 (0x0020 - 0x0000)
struct BP_static_pl_C_IsAnimationPlayToggle final
{
public:
	bool                                          PlayToggle;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5AA1[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UABP_static_pl_C*                       K2Node_DynamicCast_AsABP_Static_Pl;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_static_pl_C_IsAnimationPlayToggle) == 0x000008, "Wrong alignment on BP_static_pl_C_IsAnimationPlayToggle");
static_assert(sizeof(BP_static_pl_C_IsAnimationPlayToggle) == 0x000020, "Wrong size on BP_static_pl_C_IsAnimationPlayToggle");
static_assert(offsetof(BP_static_pl_C_IsAnimationPlayToggle, PlayToggle) == 0x000000, "Member 'BP_static_pl_C_IsAnimationPlayToggle::PlayToggle' has a wrong offset!");
static_assert(offsetof(BP_static_pl_C_IsAnimationPlayToggle, CallFunc_GetAnimInstance_ReturnValue) == 0x000008, "Member 'BP_static_pl_C_IsAnimationPlayToggle::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_static_pl_C_IsAnimationPlayToggle, K2Node_DynamicCast_AsABP_Static_Pl) == 0x000010, "Member 'BP_static_pl_C_IsAnimationPlayToggle::K2Node_DynamicCast_AsABP_Static_Pl' has a wrong offset!");
static_assert(offsetof(BP_static_pl_C_IsAnimationPlayToggle, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_static_pl_C_IsAnimationPlayToggle::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_static_pl.BP_static_pl_C.IsPlayBeforeAnimation
// 0x0020 (0x0020 - 0x0000)
struct BP_static_pl_C_IsPlayBeforeAnimation final
{
public:
	bool                                          IsPlay;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5AA2[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UABP_static_pl_C*                       K2Node_DynamicCast_AsABP_Static_Pl;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_static_pl_C_IsPlayBeforeAnimation) == 0x000008, "Wrong alignment on BP_static_pl_C_IsPlayBeforeAnimation");
static_assert(sizeof(BP_static_pl_C_IsPlayBeforeAnimation) == 0x000020, "Wrong size on BP_static_pl_C_IsPlayBeforeAnimation");
static_assert(offsetof(BP_static_pl_C_IsPlayBeforeAnimation, IsPlay) == 0x000000, "Member 'BP_static_pl_C_IsPlayBeforeAnimation::IsPlay' has a wrong offset!");
static_assert(offsetof(BP_static_pl_C_IsPlayBeforeAnimation, CallFunc_GetAnimInstance_ReturnValue) == 0x000008, "Member 'BP_static_pl_C_IsPlayBeforeAnimation::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_static_pl_C_IsPlayBeforeAnimation, K2Node_DynamicCast_AsABP_Static_Pl) == 0x000010, "Member 'BP_static_pl_C_IsPlayBeforeAnimation::K2Node_DynamicCast_AsABP_Static_Pl' has a wrong offset!");
static_assert(offsetof(BP_static_pl_C_IsPlayBeforeAnimation, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_static_pl_C_IsPlayBeforeAnimation::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_static_pl.BP_static_pl_C.StopBoadAnimation
// 0x0020 (0x0020 - 0x0000)
struct BP_static_pl_C_StopBoadAnimation final
{
public:
	bool                                          NewParam;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5AA3[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UABP_static_pl_C*                       K2Node_DynamicCast_AsABP_Static_Pl;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_static_pl_C_StopBoadAnimation) == 0x000008, "Wrong alignment on BP_static_pl_C_StopBoadAnimation");
static_assert(sizeof(BP_static_pl_C_StopBoadAnimation) == 0x000020, "Wrong size on BP_static_pl_C_StopBoadAnimation");
static_assert(offsetof(BP_static_pl_C_StopBoadAnimation, NewParam) == 0x000000, "Member 'BP_static_pl_C_StopBoadAnimation::NewParam' has a wrong offset!");
static_assert(offsetof(BP_static_pl_C_StopBoadAnimation, CallFunc_GetAnimInstance_ReturnValue) == 0x000008, "Member 'BP_static_pl_C_StopBoadAnimation::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_static_pl_C_StopBoadAnimation, K2Node_DynamicCast_AsABP_Static_Pl) == 0x000010, "Member 'BP_static_pl_C_StopBoadAnimation::K2Node_DynamicCast_AsABP_Static_Pl' has a wrong offset!");
static_assert(offsetof(BP_static_pl_C_StopBoadAnimation, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_static_pl_C_StopBoadAnimation::K2Node_DynamicCast_bSuccess' has a wrong offset!");

}

