#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AjitoNPCTalk

#include "Basic.hpp"

#include "BP_AjitoNPCTalk_classes.hpp"
#include "BP_AjitoNPCTalk_parameters.hpp"


namespace SDK
{

// Function BP_AjitoNPCTalk.BP_AjitoNPCTalk_C.ExecuteUbergraph_BP_AjitoNPCTalk
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AjitoNPCTalk_C::ExecuteUbergraph_BP_AjitoNPCTalk(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AjitoNPCTalk_C", "ExecuteUbergraph_BP_AjitoNPCTalk");

	Params::BP_AjitoNPCTalk_C_ExecuteUbergraph_BP_AjitoNPCTalk Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AjitoNPCTalk.BP_AjitoNPCTalk_C.ChangePlayerEvent
// (BlueprintCallable, BlueprintEvent)

void ABP_AjitoNPCTalk_C::ChangePlayerEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AjitoNPCTalk_C", "ChangePlayerEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AjitoNPCTalk.BP_AjitoNPCTalk_C.StartAjitoStay
// (BlueprintCallable, BlueprintEvent)

void ABP_AjitoNPCTalk_C::StartAjitoStay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AjitoNPCTalk_C", "StartAjitoStay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AjitoNPCTalk.BP_AjitoNPCTalk_C.NoBondsEvent
// (BlueprintCallable, BlueprintEvent)

void ABP_AjitoNPCTalk_C::NoBondsEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AjitoNPCTalk_C", "NoBondsEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AjitoNPCTalk.BP_AjitoNPCTalk_C.PresentEnd
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EPlayerID                               CharaID                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AjitoNPCTalk_C::PresentEnd(EPlayerID CharaID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AjitoNPCTalk_C", "PresentEnd");

	Params::BP_AjitoNPCTalk_C_PresentEnd Parms{};

	Parms.CharaID = CharaID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AjitoNPCTalk.BP_AjitoNPCTalk_C.StartEvent
// (Event, Public, BlueprintEvent)

void ABP_AjitoNPCTalk_C::StartEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AjitoNPCTalk_C", "StartEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AjitoNPCTalk.BP_AjitoNPCTalk_C.CheckInterludeProgressInRange
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   MinInterludePhase                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   MaxInterludePhase                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ProgressInRange                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AjitoNPCTalk_C::CheckInterludeProgressInRange(int32 MinInterludePhase, int32 MaxInterludePhase, bool* ProgressInRange)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AjitoNPCTalk_C", "CheckInterludeProgressInRange");

	Params::BP_AjitoNPCTalk_C_CheckInterludeProgressInRange Parms{};

	Parms.MinInterludePhase = MinInterludePhase;
	Parms.MaxInterludePhase = MaxInterludePhase;

	UObject::ProcessEvent(Func, &Parms);

	if (ProgressInRange != nullptr)
		*ProgressInRange = Parms.ProgressInRange;
}


// Function BP_AjitoNPCTalk.BP_AjitoNPCTalk_C.CheckBondsEpisodeNum
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   FinshEpisode                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AjitoNPCTalk_C::CheckBondsEpisodeNum(int32* FinshEpisode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AjitoNPCTalk_C", "CheckBondsEpisodeNum");

	Params::BP_AjitoNPCTalk_C_CheckBondsEpisodeNum Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (FinshEpisode != nullptr)
		*FinshEpisode = Parms.FinshEpisode;
}


// Function BP_AjitoNPCTalk.BP_AjitoNPCTalk_C.SearchStringID
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class FString>                   SearchArray                                            (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// class FString                           SearchCharaID                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)

class FString ABP_AjitoNPCTalk_C::SearchStringID(TArray<class FString>& SearchArray, const class FString& SearchCharaID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AjitoNPCTalk_C", "SearchStringID");

	Params::BP_AjitoNPCTalk_C_SearchStringID Parms{};

	Parms.SearchArray = std::move(SearchArray);
	Parms.SearchCharaID = std::move(SearchCharaID);

	UObject::ProcessEvent(Func, &Parms);

	SearchArray = std::move(Parms.SearchArray);

	return Parms.ReturnValue;
}


// Function BP_AjitoNPCTalk.BP_AjitoNPCTalk_C.StringIDConvertProgressID
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           MsgID                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// int32                                   ConvertProgressID                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AjitoNPCTalk_C::StringIDConvertProgressID(const class FString& MsgID, int32* ConvertProgressID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AjitoNPCTalk_C", "StringIDConvertProgressID");

	Params::BP_AjitoNPCTalk_C_StringIDConvertProgressID Parms{};

	Parms.MsgID = std::move(MsgID);

	UObject::ProcessEvent(Func, &Parms);

	if (ConvertProgressID != nullptr)
		*ConvertProgressID = Parms.ConvertProgressID;
}


// Function BP_AjitoNPCTalk.BP_AjitoNPCTalk_C.CheckPossiblePresent
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    AlreadyUnion                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AjitoNPCTalk_C::CheckPossiblePresent(bool* AlreadyUnion)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AjitoNPCTalk_C", "CheckPossiblePresent");

	Params::BP_AjitoNPCTalk_C_CheckPossiblePresent Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AlreadyUnion != nullptr)
		*AlreadyUnion = Parms.AlreadyUnion;
}


// Function BP_AjitoNPCTalk.BP_AjitoNPCTalk_C.Check Exsist Kizuna EP
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsKizunaEP                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AjitoNPCTalk_C::Check_Exsist_Kizuna_EP(bool* IsKizunaEP)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AjitoNPCTalk_C", "Check Exsist Kizuna EP");

	Params::BP_AjitoNPCTalk_C_Check_Exsist_Kizuna_EP Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsKizunaEP != nullptr)
		*IsKizunaEP = Parms.IsKizunaEP;
}


// Function BP_AjitoNPCTalk.BP_AjitoNPCTalk_C.CheckMemberAlreadyUnion
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPlayerID                               CheckCharaID                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    AlreadyUnion                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AjitoNPCTalk_C::CheckMemberAlreadyUnion(EPlayerID CheckCharaID, bool* AlreadyUnion)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AjitoNPCTalk_C", "CheckMemberAlreadyUnion");

	Params::BP_AjitoNPCTalk_C_CheckMemberAlreadyUnion Parms{};

	Parms.CheckCharaID = CheckCharaID;

	UObject::ProcessEvent(Func, &Parms);

	if (AlreadyUnion != nullptr)
		*AlreadyUnion = Parms.AlreadyUnion;
}


// Function BP_AjitoNPCTalk.BP_AjitoNPCTalk_C.Field Event Transform
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_AjitoNPCTalk_C::Field_Event_Transform()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AjitoNPCTalk_C", "Field Event Transform");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AjitoNPCTalk.BP_AjitoNPCTalk_C.CheckKizunaLvup_DLC
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_AjitoNPCTalk_C::CheckKizunaLvup_DLC()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AjitoNPCTalk_C", "CheckKizunaLvup_DLC");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AjitoNPCTalk.BP_AjitoNPCTalk_C.FreeWord_KizunaEP
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsSwapKizunaEPFreeWord                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_AjitoNPCTalk_C::FreeWord_KizunaEP(bool* IsSwapKizunaEPFreeWord)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AjitoNPCTalk_C", "FreeWord_KizunaEP");

	Params::BP_AjitoNPCTalk_C_FreeWord_KizunaEP Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsSwapKizunaEPFreeWord != nullptr)
		*IsSwapKizunaEPFreeWord = Parms.IsSwapKizunaEPFreeWord;
}


// Function BP_AjitoNPCTalk.BP_AjitoNPCTalk_C.SetChoiceMesIDList
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_AjitoNPCTalk_C::SetChoiceMesIDList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AjitoNPCTalk_C", "SetChoiceMesIDList");

	UObject::ProcessEvent(Func, nullptr);
}

}

