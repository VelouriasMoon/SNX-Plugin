#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PsychicAnimObject

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass PsychicAnimObject.PsychicAnimObject_C
// 0x0070 (0x02A0 - 0x0230)
class APsychicAnimObject_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0230(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USkeletalMeshComponent*                 SkeletalMesh;                                      // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          bOccupied;                                         // 0x0248(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5E80[0x7];                                     // 0x0249(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PsychicObjectBasic_C*               ObjOwner;                                          // 0x0250(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bAttach;                                           // 0x0258(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bAttachHero;                                       // 0x0259(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5E81[0x6];                                     // 0x025A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ARsBattleHero_C*                        HeroOwner;                                         // 0x0260(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           MeshTickRefList;                                   // 0x0268(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	struct FRotator                               RotBase;                                           // 0x0278(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bCheckTime_Dilation;                               // 0x0284(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bPlayAnimation;                                    // 0x0285(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5E82[0x2];                                     // 0x0286(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   AttachSocketName;                                  // 0x0288(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMeshComponent*                         AttachMesh;                                        // 0x0290(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bCheckTime_DilationExtend;                         // 0x0298(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bTime_DilationSkipPlayEnd;                         // 0x0299(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_PsychicAnimObject(int32 EntryPoint);
	void ReceiveTick(float DeltaSeconds);
	void ReceiveBeginPlay();
	void SetTickEnable(bool Flag_in);
	void SetOccupied(bool Flag_in);
	void CheckOccupied(bool* Return);
	void SetAttach(bool Flag_in, class ABP_PsychicObjectBasic_C* Psy_obj_in, class ARsBattleHero_C* Hero_in);
	void CanAttach(bool* Return);
	void SetAttackThrow(float Throw_speed_in, float Homing_speed_in, bool Enemy_direct_shot_in, class FName Enemy_attack_row_name_in);
	void SetObjOwner(class ABP_PsychicObjectBasic_C* Psy_obj_in);
	void PlayObjectAnimation(class UAnimationAsset* NewAnimToPlay, float Play_rate_in, bool Loop_in);
	void SetAnimObjLocationRotation(const struct FVector& Location_in, const struct FRotator& Rotation_in, bool Direct_rot_in);
	void DetachAttackCombo();
	void SetCheckTimeDilation(bool Flag_in);
	void UpdateCheckTimeDilation();
	void SetMeshTickEnable(bool Flag_in, class FName Ref_name_in);
	void UpdateAnimationTick();
	void GetSocketLocation(struct FVector* Location);
	void GetSocketRotation(struct FRotator* Roation);
	void GetCalcSocketRotation(struct FRotator* Roation);
	void SetAttachMesh(class UMeshComponent* Mesh_comp_in);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"PsychicAnimObject_C">();
	}
	static class APsychicAnimObject_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<APsychicAnimObject_C>();
	}
};
static_assert(alignof(APsychicAnimObject_C) == 0x000008, "Wrong alignment on APsychicAnimObject_C");
static_assert(sizeof(APsychicAnimObject_C) == 0x0002A0, "Wrong size on APsychicAnimObject_C");
static_assert(offsetof(APsychicAnimObject_C, UberGraphFrame) == 0x000230, "Member 'APsychicAnimObject_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(APsychicAnimObject_C, SkeletalMesh) == 0x000238, "Member 'APsychicAnimObject_C::SkeletalMesh' has a wrong offset!");
static_assert(offsetof(APsychicAnimObject_C, DefaultSceneRoot) == 0x000240, "Member 'APsychicAnimObject_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(APsychicAnimObject_C, bOccupied) == 0x000248, "Member 'APsychicAnimObject_C::bOccupied' has a wrong offset!");
static_assert(offsetof(APsychicAnimObject_C, ObjOwner) == 0x000250, "Member 'APsychicAnimObject_C::ObjOwner' has a wrong offset!");
static_assert(offsetof(APsychicAnimObject_C, bAttach) == 0x000258, "Member 'APsychicAnimObject_C::bAttach' has a wrong offset!");
static_assert(offsetof(APsychicAnimObject_C, bAttachHero) == 0x000259, "Member 'APsychicAnimObject_C::bAttachHero' has a wrong offset!");
static_assert(offsetof(APsychicAnimObject_C, HeroOwner) == 0x000260, "Member 'APsychicAnimObject_C::HeroOwner' has a wrong offset!");
static_assert(offsetof(APsychicAnimObject_C, MeshTickRefList) == 0x000268, "Member 'APsychicAnimObject_C::MeshTickRefList' has a wrong offset!");
static_assert(offsetof(APsychicAnimObject_C, RotBase) == 0x000278, "Member 'APsychicAnimObject_C::RotBase' has a wrong offset!");
static_assert(offsetof(APsychicAnimObject_C, bCheckTime_Dilation) == 0x000284, "Member 'APsychicAnimObject_C::bCheckTime_Dilation' has a wrong offset!");
static_assert(offsetof(APsychicAnimObject_C, bPlayAnimation) == 0x000285, "Member 'APsychicAnimObject_C::bPlayAnimation' has a wrong offset!");
static_assert(offsetof(APsychicAnimObject_C, AttachSocketName) == 0x000288, "Member 'APsychicAnimObject_C::AttachSocketName' has a wrong offset!");
static_assert(offsetof(APsychicAnimObject_C, AttachMesh) == 0x000290, "Member 'APsychicAnimObject_C::AttachMesh' has a wrong offset!");
static_assert(offsetof(APsychicAnimObject_C, bCheckTime_DilationExtend) == 0x000298, "Member 'APsychicAnimObject_C::bCheckTime_DilationExtend' has a wrong offset!");
static_assert(offsetof(APsychicAnimObject_C, bTime_DilationSkipPlayEnd) == 0x000299, "Member 'APsychicAnimObject_C::bTime_DilationSkipPlayEnd' has a wrong offset!");

}

