#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_co0100

#include "Basic.hpp"

#include "AnimGraphRuntime_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "BattlePrototype_structs.hpp"
#include "BattlePrototype_classes.hpp"
#include "EBrainCodeType_structs.hpp"
#include "REDAnimationNode_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_co0100.ABP_co0100_C
// 0x0710 (0x0A10 - 0x0300)
class UABP_co0100_C final : public URSCableAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0300(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x0308(0x0020)()
	struct FAnimNode_MeshSpaceRefPose             AnimGraphNode_MeshRefPose;                         // 0x0328(0x0010)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0338(0x0030)()
	uint8                                         Pad_53FD[0x8];                                     // 0x0368(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimNode_RigidBodyRedCustom           AnimGraphNode_RigidBodyRedCustom;                  // 0x0370(0x0610)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x0980(0x0048)()
	ERSCableGravityType                           GravityType;                                       // 0x09C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERSCableGravityType                           GravityTypeLow;                                    // 0x09C9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53FE[0x2];                                     // 0x09CA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         PARAM_OverrideGravityTime;                         // 0x09CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameTimer                             OverrideGravityTimer;                              // 0x09D0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FGameTimer                             DisableOverrideGravityTimer;                       // 0x09DC(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bOverrideGravity;                                  // 0x09E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_53FF[0x7];                                     // 0x09E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_CableBase_C*                        CableActor;                                        // 0x09F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                OverrideGravity;                                   // 0x09F8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBrainCodeType                                BrainCodeType;                                     // 0x0A04(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_ABP_co0100(int32 EntryPoint);
	void BlueprintUpdateAnimation(float DeltaTimeX);
	bool BeginOverrideGravity(ERSCableGravityType Type);
	bool EndOverrideGravity(ERSCableGravityType Type);
	void SetOwnerCableActor(class ABP_CableBase_C* Param_CableActor, EBrainCodeType Type);
	void AnimGraph(struct FPoseLink* Param_AnimGraph);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_co0100_C">();
	}
	static class UABP_co0100_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_co0100_C>();
	}
};
static_assert(alignof(UABP_co0100_C) == 0x000010, "Wrong alignment on UABP_co0100_C");
static_assert(sizeof(UABP_co0100_C) == 0x000A10, "Wrong size on UABP_co0100_C");
static_assert(offsetof(UABP_co0100_C, UberGraphFrame) == 0x000300, "Member 'UABP_co0100_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_co0100_C, AnimGraphNode_ComponentToLocalSpace) == 0x000308, "Member 'UABP_co0100_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UABP_co0100_C, AnimGraphNode_MeshRefPose) == 0x000328, "Member 'UABP_co0100_C::AnimGraphNode_MeshRefPose' has a wrong offset!");
static_assert(offsetof(UABP_co0100_C, AnimGraphNode_Root) == 0x000338, "Member 'UABP_co0100_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_co0100_C, AnimGraphNode_RigidBodyRedCustom) == 0x000370, "Member 'UABP_co0100_C::AnimGraphNode_RigidBodyRedCustom' has a wrong offset!");
static_assert(offsetof(UABP_co0100_C, AnimGraphNode_Slot) == 0x000980, "Member 'UABP_co0100_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UABP_co0100_C, GravityType) == 0x0009C8, "Member 'UABP_co0100_C::GravityType' has a wrong offset!");
static_assert(offsetof(UABP_co0100_C, GravityTypeLow) == 0x0009C9, "Member 'UABP_co0100_C::GravityTypeLow' has a wrong offset!");
static_assert(offsetof(UABP_co0100_C, PARAM_OverrideGravityTime) == 0x0009CC, "Member 'UABP_co0100_C::PARAM_OverrideGravityTime' has a wrong offset!");
static_assert(offsetof(UABP_co0100_C, OverrideGravityTimer) == 0x0009D0, "Member 'UABP_co0100_C::OverrideGravityTimer' has a wrong offset!");
static_assert(offsetof(UABP_co0100_C, DisableOverrideGravityTimer) == 0x0009DC, "Member 'UABP_co0100_C::DisableOverrideGravityTimer' has a wrong offset!");
static_assert(offsetof(UABP_co0100_C, bOverrideGravity) == 0x0009E8, "Member 'UABP_co0100_C::bOverrideGravity' has a wrong offset!");
static_assert(offsetof(UABP_co0100_C, CableActor) == 0x0009F0, "Member 'UABP_co0100_C::CableActor' has a wrong offset!");
static_assert(offsetof(UABP_co0100_C, OverrideGravity) == 0x0009F8, "Member 'UABP_co0100_C::OverrideGravity' has a wrong offset!");
static_assert(offsetof(UABP_co0100_C, BrainCodeType) == 0x000A04, "Member 'UABP_co0100_C::BrainCodeType' has a wrong offset!");

}

