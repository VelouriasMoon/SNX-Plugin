#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_PsychicObjectBaseInterface

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "BattlePrototype_structs.hpp"
#include "PsyObjType_structs.hpp"


namespace SDK::Params
{

// Function BPI_PsychicObjectBaseInterface.BPI_PsychicObjectBaseInterface_C.IsPsychicObjectActive
// 0x0001 (0x0001 - 0x0000)
struct BPI_PsychicObjectBaseInterface_C_IsPsychicObjectActive final
{
public:
	bool                                          IsActive;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_PsychicObjectBaseInterface_C_IsPsychicObjectActive) == 0x000001, "Wrong alignment on BPI_PsychicObjectBaseInterface_C_IsPsychicObjectActive");
static_assert(sizeof(BPI_PsychicObjectBaseInterface_C_IsPsychicObjectActive) == 0x000001, "Wrong size on BPI_PsychicObjectBaseInterface_C_IsPsychicObjectActive");
static_assert(offsetof(BPI_PsychicObjectBaseInterface_C_IsPsychicObjectActive, IsActive) == 0x000000, "Member 'BPI_PsychicObjectBaseInterface_C_IsPsychicObjectActive::IsActive' has a wrong offset!");

// Function BPI_PsychicObjectBaseInterface.BPI_PsychicObjectBaseInterface_C.SetPsychicObjectActive
// 0x0001 (0x0001 - 0x0000)
struct BPI_PsychicObjectBaseInterface_C_SetPsychicObjectActive final
{
public:
	bool                                          IsActive;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_PsychicObjectBaseInterface_C_SetPsychicObjectActive) == 0x000001, "Wrong alignment on BPI_PsychicObjectBaseInterface_C_SetPsychicObjectActive");
static_assert(sizeof(BPI_PsychicObjectBaseInterface_C_SetPsychicObjectActive) == 0x000001, "Wrong size on BPI_PsychicObjectBaseInterface_C_SetPsychicObjectActive");
static_assert(offsetof(BPI_PsychicObjectBaseInterface_C_SetPsychicObjectActive, IsActive) == 0x000000, "Member 'BPI_PsychicObjectBaseInterface_C_SetPsychicObjectActive::IsActive' has a wrong offset!");

// Function BPI_PsychicObjectBaseInterface.BPI_PsychicObjectBaseInterface_C.IsPsychicObject
// 0x0001 (0x0001 - 0x0000)
struct BPI_PsychicObjectBaseInterface_C_IsPsychicObject final
{
public:
	bool                                          bResult;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_PsychicObjectBaseInterface_C_IsPsychicObject) == 0x000001, "Wrong alignment on BPI_PsychicObjectBaseInterface_C_IsPsychicObject");
static_assert(sizeof(BPI_PsychicObjectBaseInterface_C_IsPsychicObject) == 0x000001, "Wrong size on BPI_PsychicObjectBaseInterface_C_IsPsychicObject");
static_assert(offsetof(BPI_PsychicObjectBaseInterface_C_IsPsychicObject, bResult) == 0x000000, "Member 'BPI_PsychicObjectBaseInterface_C_IsPsychicObject::bResult' has a wrong offset!");

// Function BPI_PsychicObjectBaseInterface.BPI_PsychicObjectBaseInterface_C.SetPsychicObjectVisibility
// 0x0002 (0x0002 - 0x0000)
struct BPI_PsychicObjectBaseInterface_C_SetPsychicObjectVisibility final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Is_mesh_only;                                      // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_PsychicObjectBaseInterface_C_SetPsychicObjectVisibility) == 0x000001, "Wrong alignment on BPI_PsychicObjectBaseInterface_C_SetPsychicObjectVisibility");
static_assert(sizeof(BPI_PsychicObjectBaseInterface_C_SetPsychicObjectVisibility) == 0x000002, "Wrong size on BPI_PsychicObjectBaseInterface_C_SetPsychicObjectVisibility");
static_assert(offsetof(BPI_PsychicObjectBaseInterface_C_SetPsychicObjectVisibility, Flag_in) == 0x000000, "Member 'BPI_PsychicObjectBaseInterface_C_SetPsychicObjectVisibility::Flag_in' has a wrong offset!");
static_assert(offsetof(BPI_PsychicObjectBaseInterface_C_SetPsychicObjectVisibility, Is_mesh_only) == 0x000001, "Member 'BPI_PsychicObjectBaseInterface_C_SetPsychicObjectVisibility::Is_mesh_only' has a wrong offset!");

// Function BPI_PsychicObjectBaseInterface.BPI_PsychicObjectBaseInterface_C.GetPsychicObjectType
// 0x0001 (0x0001 - 0x0000)
struct BPI_PsychicObjectBaseInterface_C_GetPsychicObjectType final
{
public:
	EPsyObjType                                   Psychic_object_type;                               // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_PsychicObjectBaseInterface_C_GetPsychicObjectType) == 0x000001, "Wrong alignment on BPI_PsychicObjectBaseInterface_C_GetPsychicObjectType");
static_assert(sizeof(BPI_PsychicObjectBaseInterface_C_GetPsychicObjectType) == 0x000001, "Wrong size on BPI_PsychicObjectBaseInterface_C_GetPsychicObjectType");
static_assert(offsetof(BPI_PsychicObjectBaseInterface_C_GetPsychicObjectType, Psychic_object_type) == 0x000000, "Member 'BPI_PsychicObjectBaseInterface_C_GetPsychicObjectType::Psychic_object_type' has a wrong offset!");

// Function BPI_PsychicObjectBaseInterface.BPI_PsychicObjectBaseInterface_C.GetPsychicObjectWeightGaugePos
// 0x000C (0x000C - 0x0000)
struct BPI_PsychicObjectBaseInterface_C_GetPsychicObjectWeightGaugePos final
{
public:
	struct FVector                                Weight_gauge_pos;                                  // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_PsychicObjectBaseInterface_C_GetPsychicObjectWeightGaugePos) == 0x000004, "Wrong alignment on BPI_PsychicObjectBaseInterface_C_GetPsychicObjectWeightGaugePos");
static_assert(sizeof(BPI_PsychicObjectBaseInterface_C_GetPsychicObjectWeightGaugePos) == 0x00000C, "Wrong size on BPI_PsychicObjectBaseInterface_C_GetPsychicObjectWeightGaugePos");
static_assert(offsetof(BPI_PsychicObjectBaseInterface_C_GetPsychicObjectWeightGaugePos, Weight_gauge_pos) == 0x000000, "Member 'BPI_PsychicObjectBaseInterface_C_GetPsychicObjectWeightGaugePos::Weight_gauge_pos' has a wrong offset!");

// Function BPI_PsychicObjectBaseInterface.BPI_PsychicObjectBaseInterface_C.GetPsychicObjectCentrePos
// 0x000C (0x000C - 0x0000)
struct BPI_PsychicObjectBaseInterface_C_GetPsychicObjectCentrePos final
{
public:
	struct FVector                                Centre_pos;                                        // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_PsychicObjectBaseInterface_C_GetPsychicObjectCentrePos) == 0x000004, "Wrong alignment on BPI_PsychicObjectBaseInterface_C_GetPsychicObjectCentrePos");
static_assert(sizeof(BPI_PsychicObjectBaseInterface_C_GetPsychicObjectCentrePos) == 0x00000C, "Wrong size on BPI_PsychicObjectBaseInterface_C_GetPsychicObjectCentrePos");
static_assert(offsetof(BPI_PsychicObjectBaseInterface_C_GetPsychicObjectCentrePos, Centre_pos) == 0x000000, "Member 'BPI_PsychicObjectBaseInterface_C_GetPsychicObjectCentrePos::Centre_pos' has a wrong offset!");

// Function BPI_PsychicObjectBaseInterface.BPI_PsychicObjectBaseInterface_C.GetPsychicObjectVhsParam
// 0x0018 (0x0018 - 0x0000)
struct BPI_PsychicObjectBaseInterface_C_GetPsychicObjectVhsParam final
{
public:
	class UCurveVector*                           ParamCurve;                                        // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveVector*                           ColorCurve;                                        // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         VhsSeconds;                                        // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_PsychicObjectBaseInterface_C_GetPsychicObjectVhsParam) == 0x000008, "Wrong alignment on BPI_PsychicObjectBaseInterface_C_GetPsychicObjectVhsParam");
static_assert(sizeof(BPI_PsychicObjectBaseInterface_C_GetPsychicObjectVhsParam) == 0x000018, "Wrong size on BPI_PsychicObjectBaseInterface_C_GetPsychicObjectVhsParam");
static_assert(offsetof(BPI_PsychicObjectBaseInterface_C_GetPsychicObjectVhsParam, ParamCurve) == 0x000000, "Member 'BPI_PsychicObjectBaseInterface_C_GetPsychicObjectVhsParam::ParamCurve' has a wrong offset!");
static_assert(offsetof(BPI_PsychicObjectBaseInterface_C_GetPsychicObjectVhsParam, ColorCurve) == 0x000008, "Member 'BPI_PsychicObjectBaseInterface_C_GetPsychicObjectVhsParam::ColorCurve' has a wrong offset!");
static_assert(offsetof(BPI_PsychicObjectBaseInterface_C_GetPsychicObjectVhsParam, VhsSeconds) == 0x000010, "Member 'BPI_PsychicObjectBaseInterface_C_GetPsychicObjectVhsParam::VhsSeconds' has a wrong offset!");

// Function BPI_PsychicObjectBaseInterface.BPI_PsychicObjectBaseInterface_C.IsPsychicComboAttack
// 0x0001 (0x0001 - 0x0000)
struct BPI_PsychicObjectBaseInterface_C_IsPsychicComboAttack final
{
public:
	bool                                          bComboAttack;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_PsychicObjectBaseInterface_C_IsPsychicComboAttack) == 0x000001, "Wrong alignment on BPI_PsychicObjectBaseInterface_C_IsPsychicComboAttack");
static_assert(sizeof(BPI_PsychicObjectBaseInterface_C_IsPsychicComboAttack) == 0x000001, "Wrong size on BPI_PsychicObjectBaseInterface_C_IsPsychicComboAttack");
static_assert(offsetof(BPI_PsychicObjectBaseInterface_C_IsPsychicComboAttack, bComboAttack) == 0x000000, "Member 'BPI_PsychicObjectBaseInterface_C_IsPsychicComboAttack::bComboAttack' has a wrong offset!");

// Function BPI_PsychicObjectBaseInterface.BPI_PsychicObjectBaseInterface_C.GetUniqueObjectCaptureMontage
// 0x0018 (0x0018 - 0x0000)
struct BPI_PsychicObjectBaseInterface_C_GetUniqueObjectCaptureMontage final
{
public:
	EPlayerID                                     PlayerId;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bBack;                                             // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bLeft;                                             // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bUseBlend;                                         // 0x0003(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_47B9[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           StartMontage;                                      // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           CancelMontage;                                     // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_PsychicObjectBaseInterface_C_GetUniqueObjectCaptureMontage) == 0x000008, "Wrong alignment on BPI_PsychicObjectBaseInterface_C_GetUniqueObjectCaptureMontage");
static_assert(sizeof(BPI_PsychicObjectBaseInterface_C_GetUniqueObjectCaptureMontage) == 0x000018, "Wrong size on BPI_PsychicObjectBaseInterface_C_GetUniqueObjectCaptureMontage");
static_assert(offsetof(BPI_PsychicObjectBaseInterface_C_GetUniqueObjectCaptureMontage, PlayerId) == 0x000000, "Member 'BPI_PsychicObjectBaseInterface_C_GetUniqueObjectCaptureMontage::PlayerId' has a wrong offset!");
static_assert(offsetof(BPI_PsychicObjectBaseInterface_C_GetUniqueObjectCaptureMontage, bBack) == 0x000001, "Member 'BPI_PsychicObjectBaseInterface_C_GetUniqueObjectCaptureMontage::bBack' has a wrong offset!");
static_assert(offsetof(BPI_PsychicObjectBaseInterface_C_GetUniqueObjectCaptureMontage, bLeft) == 0x000002, "Member 'BPI_PsychicObjectBaseInterface_C_GetUniqueObjectCaptureMontage::bLeft' has a wrong offset!");
static_assert(offsetof(BPI_PsychicObjectBaseInterface_C_GetUniqueObjectCaptureMontage, bUseBlend) == 0x000003, "Member 'BPI_PsychicObjectBaseInterface_C_GetUniqueObjectCaptureMontage::bUseBlend' has a wrong offset!");
static_assert(offsetof(BPI_PsychicObjectBaseInterface_C_GetUniqueObjectCaptureMontage, StartMontage) == 0x000008, "Member 'BPI_PsychicObjectBaseInterface_C_GetUniqueObjectCaptureMontage::StartMontage' has a wrong offset!");
static_assert(offsetof(BPI_PsychicObjectBaseInterface_C_GetUniqueObjectCaptureMontage, CancelMontage) == 0x000010, "Member 'BPI_PsychicObjectBaseInterface_C_GetUniqueObjectCaptureMontage::CancelMontage' has a wrong offset!");

// Function BPI_PsychicObjectBaseInterface.BPI_PsychicObjectBaseInterface_C.IsKarenUniqueObject
// 0x0001 (0x0001 - 0x0000)
struct BPI_PsychicObjectBaseInterface_C_IsKarenUniqueObject final
{
public:
	bool                                          bKaren;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_PsychicObjectBaseInterface_C_IsKarenUniqueObject) == 0x000001, "Wrong alignment on BPI_PsychicObjectBaseInterface_C_IsKarenUniqueObject");
static_assert(sizeof(BPI_PsychicObjectBaseInterface_C_IsKarenUniqueObject) == 0x000001, "Wrong size on BPI_PsychicObjectBaseInterface_C_IsKarenUniqueObject");
static_assert(offsetof(BPI_PsychicObjectBaseInterface_C_IsKarenUniqueObject, bKaren) == 0x000000, "Member 'BPI_PsychicObjectBaseInterface_C_IsKarenUniqueObject::bKaren' has a wrong offset!");

}

