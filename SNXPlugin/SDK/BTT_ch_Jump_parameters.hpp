#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTT_ch_Jump

#include "Basic.hpp"


namespace SDK::Params
{

// Function BTT_ch_Jump.BTT_ch_Jump_C.ExecuteUbergraph_BTT_ch_Jump
// 0x0100 (0x0100 - 0x0000)
struct BTT_ch_Jump_C_ExecuteUbergraph_BTT_ch_Jump final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7E16[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_Event_OwnerController_2;                    // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn_2;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_PlayerAIInterface_C> K2Node_DynamicCast_AsBPI_Player_AIInterface;       // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E17[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerAIInterface_C> K2Node_DynamicCast_AsBPI_Player_AIInterface_1;     // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetEnableInputStick_Dummy;                // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E18[0x6];                                     // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerAIInterface_C> K2Node_DynamicCast_AsBPI_Player_AIInterface_2;     // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetAIMoveStick_bDummy;                    // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E19[0x6];                                     // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_Event_OwnerController_1;                    // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn_1;                     // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7E1A[0x4];                                     // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerAIInterface_C> K2Node_DynamicCast_AsBPI_Player_AIInterface_3;     // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E1B[0x7];                                     // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerAIInterface_C> K2Node_DynamicCast_AsBPI_Player_AIInterface_4;     // 0x0090(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInputAI_Jump_bON;                       // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E1C[0x6];                                     // 0x00A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerAIInterface_C> K2Node_DynamicCast_AsBPI_Player_AIInterface_5;     // 0x00A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E1D[0x7];                                     // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerAIInterface_C> K2Node_DynamicCast_AsBPI_Player_AIInterface_6;     // 0x00C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsJumpAble_bEnable;                       // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E1E[0x6];                                     // 0x00D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattlePlayer_C*                      K2Node_DynamicCast_AsRSBattle_Player;              // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActionStatus_Result;                    // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsFalling_ReturnValue;                    // 0x00E3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsFalling_ReturnValue_1;                  // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActionStatus_Result_1;                  // 0x00E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00E6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x00E7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AAIController*                          K2Node_Event_OwnerController;                      // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn;                       // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOver_ReturnValue;                       // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BTT_ch_Jump_C_ExecuteUbergraph_BTT_ch_Jump) == 0x000008, "Wrong alignment on BTT_ch_Jump_C_ExecuteUbergraph_BTT_ch_Jump");
static_assert(sizeof(BTT_ch_Jump_C_ExecuteUbergraph_BTT_ch_Jump) == 0x000100, "Wrong size on BTT_ch_Jump_C_ExecuteUbergraph_BTT_ch_Jump");
static_assert(offsetof(BTT_ch_Jump_C_ExecuteUbergraph_BTT_ch_Jump, EntryPoint) == 0x000000, "Member 'BTT_ch_Jump_C_ExecuteUbergraph_BTT_ch_Jump::EntryPoint' has a wrong offset!");
static_assert(offsetof(BTT_ch_Jump_C_ExecuteUbergraph_BTT_ch_Jump, K2Node_Event_OwnerController_2) == 0x000008, "Member 'BTT_ch_Jump_C_ExecuteUbergraph_BTT_ch_Jump::K2Node_Event_OwnerController_2' has a wrong offset!");
static_assert(offsetof(BTT_ch_Jump_C_ExecuteUbergraph_BTT_ch_Jump, K2Node_Event_ControlledPawn_2) == 0x000010, "Member 'BTT_ch_Jump_C_ExecuteUbergraph_BTT_ch_Jump::K2Node_Event_ControlledPawn_2' has a wrong offset!");
static_assert(offsetof(BTT_ch_Jump_C_ExecuteUbergraph_BTT_ch_Jump, K2Node_DynamicCast_AsBPI_Player_AIInterface) == 0x000018, "Member 'BTT_ch_Jump_C_ExecuteUbergraph_BTT_ch_Jump::K2Node_DynamicCast_AsBPI_Player_AIInterface' has a wrong offset!");
static_assert(offsetof(BTT_ch_Jump_C_ExecuteUbergraph_BTT_ch_Jump, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BTT_ch_Jump_C_ExecuteUbergraph_BTT_ch_Jump::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BTT_ch_Jump_C_ExecuteUbergraph_BTT_ch_Jump, K2Node_DynamicCast_AsBPI_Player_AIInterface_1) == 0x000030, "Member 'BTT_ch_Jump_C_ExecuteUbergraph_BTT_ch_Jump::K2Node_DynamicCast_AsBPI_Player_AIInterface_1' has a wrong offset!");
static_assert(offsetof(BTT_ch_Jump_C_ExecuteUbergraph_BTT_ch_Jump, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'BTT_ch_Jump_C_ExecuteUbergraph_BTT_ch_Jump::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BTT_ch_Jump_C_ExecuteUbergraph_BTT_ch_Jump, CallFunc_SetEnableInputStick_Dummy) == 0x000041, "Member 'BTT_ch_Jump_C_ExecuteUbergraph_BTT_ch_Jump::CallFunc_SetEnableInputStick_Dummy' has a wrong offset!");
static_assert(offsetof(BTT_ch_Jump_C_ExecuteUbergraph_BTT_ch_Jump, K2Node_DynamicCast_AsBPI_Player_AIInterface_2) == 0x000048, "Member 'BTT_ch_Jump_C_ExecuteUbergraph_BTT_ch_Jump::K2Node_DynamicCast_AsBPI_Player_AIInterface_2' has a wrong offset!");
static_assert(offsetof(BTT_ch_Jump_C_ExecuteUbergraph_BTT_ch_Jump, K2Node_DynamicCast_bSuccess_2) == 0x000058, "Member 'BTT_ch_Jump_C_ExecuteUbergraph_BTT_ch_Jump::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BTT_ch_Jump_C_ExecuteUbergraph_BTT_ch_Jump, CallFunc_SetAIMoveStick_bDummy) == 0x000059, "Member 'BTT_ch_Jump_C_ExecuteUbergraph_BTT_ch_Jump::CallFunc_SetAIMoveStick_bDummy' has a wrong offset!");
static_assert(offsetof(BTT_ch_Jump_C_ExecuteUbergraph_BTT_ch_Jump, K2Node_Event_OwnerController_1) == 0x000060, "Member 'BTT_ch_Jump_C_ExecuteUbergraph_BTT_ch_Jump::K2Node_Event_OwnerController_1' has a wrong offset!");
static_assert(offsetof(BTT_ch_Jump_C_ExecuteUbergraph_BTT_ch_Jump, K2Node_Event_ControlledPawn_1) == 0x000068, "Member 'BTT_ch_Jump_C_ExecuteUbergraph_BTT_ch_Jump::K2Node_Event_ControlledPawn_1' has a wrong offset!");
static_assert(offsetof(BTT_ch_Jump_C_ExecuteUbergraph_BTT_ch_Jump, K2Node_Event_DeltaSeconds) == 0x000070, "Member 'BTT_ch_Jump_C_ExecuteUbergraph_BTT_ch_Jump::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BTT_ch_Jump_C_ExecuteUbergraph_BTT_ch_Jump, K2Node_DynamicCast_AsBPI_Player_AIInterface_3) == 0x000078, "Member 'BTT_ch_Jump_C_ExecuteUbergraph_BTT_ch_Jump::K2Node_DynamicCast_AsBPI_Player_AIInterface_3' has a wrong offset!");
static_assert(offsetof(BTT_ch_Jump_C_ExecuteUbergraph_BTT_ch_Jump, K2Node_DynamicCast_bSuccess_3) == 0x000088, "Member 'BTT_ch_Jump_C_ExecuteUbergraph_BTT_ch_Jump::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BTT_ch_Jump_C_ExecuteUbergraph_BTT_ch_Jump, K2Node_DynamicCast_AsBPI_Player_AIInterface_4) == 0x000090, "Member 'BTT_ch_Jump_C_ExecuteUbergraph_BTT_ch_Jump::K2Node_DynamicCast_AsBPI_Player_AIInterface_4' has a wrong offset!");
static_assert(offsetof(BTT_ch_Jump_C_ExecuteUbergraph_BTT_ch_Jump, K2Node_DynamicCast_bSuccess_4) == 0x0000A0, "Member 'BTT_ch_Jump_C_ExecuteUbergraph_BTT_ch_Jump::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BTT_ch_Jump_C_ExecuteUbergraph_BTT_ch_Jump, CallFunc_IsInputAI_Jump_bON) == 0x0000A1, "Member 'BTT_ch_Jump_C_ExecuteUbergraph_BTT_ch_Jump::CallFunc_IsInputAI_Jump_bON' has a wrong offset!");
static_assert(offsetof(BTT_ch_Jump_C_ExecuteUbergraph_BTT_ch_Jump, K2Node_DynamicCast_AsBPI_Player_AIInterface_5) == 0x0000A8, "Member 'BTT_ch_Jump_C_ExecuteUbergraph_BTT_ch_Jump::K2Node_DynamicCast_AsBPI_Player_AIInterface_5' has a wrong offset!");
static_assert(offsetof(BTT_ch_Jump_C_ExecuteUbergraph_BTT_ch_Jump, K2Node_DynamicCast_bSuccess_5) == 0x0000B8, "Member 'BTT_ch_Jump_C_ExecuteUbergraph_BTT_ch_Jump::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BTT_ch_Jump_C_ExecuteUbergraph_BTT_ch_Jump, K2Node_DynamicCast_AsBPI_Player_AIInterface_6) == 0x0000C0, "Member 'BTT_ch_Jump_C_ExecuteUbergraph_BTT_ch_Jump::K2Node_DynamicCast_AsBPI_Player_AIInterface_6' has a wrong offset!");
static_assert(offsetof(BTT_ch_Jump_C_ExecuteUbergraph_BTT_ch_Jump, K2Node_DynamicCast_bSuccess_6) == 0x0000D0, "Member 'BTT_ch_Jump_C_ExecuteUbergraph_BTT_ch_Jump::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(BTT_ch_Jump_C_ExecuteUbergraph_BTT_ch_Jump, CallFunc_IsJumpAble_bEnable) == 0x0000D1, "Member 'BTT_ch_Jump_C_ExecuteUbergraph_BTT_ch_Jump::CallFunc_IsJumpAble_bEnable' has a wrong offset!");
static_assert(offsetof(BTT_ch_Jump_C_ExecuteUbergraph_BTT_ch_Jump, K2Node_DynamicCast_AsRSBattle_Player) == 0x0000D8, "Member 'BTT_ch_Jump_C_ExecuteUbergraph_BTT_ch_Jump::K2Node_DynamicCast_AsRSBattle_Player' has a wrong offset!");
static_assert(offsetof(BTT_ch_Jump_C_ExecuteUbergraph_BTT_ch_Jump, K2Node_DynamicCast_bSuccess_7) == 0x0000E0, "Member 'BTT_ch_Jump_C_ExecuteUbergraph_BTT_ch_Jump::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(BTT_ch_Jump_C_ExecuteUbergraph_BTT_ch_Jump, CallFunc_IsActionStatus_Result) == 0x0000E1, "Member 'BTT_ch_Jump_C_ExecuteUbergraph_BTT_ch_Jump::CallFunc_IsActionStatus_Result' has a wrong offset!");
static_assert(offsetof(BTT_ch_Jump_C_ExecuteUbergraph_BTT_ch_Jump, CallFunc_Not_PreBool_ReturnValue) == 0x0000E2, "Member 'BTT_ch_Jump_C_ExecuteUbergraph_BTT_ch_Jump::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_ch_Jump_C_ExecuteUbergraph_BTT_ch_Jump, CallFunc_IsFalling_ReturnValue) == 0x0000E3, "Member 'BTT_ch_Jump_C_ExecuteUbergraph_BTT_ch_Jump::CallFunc_IsFalling_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_ch_Jump_C_ExecuteUbergraph_BTT_ch_Jump, CallFunc_IsFalling_ReturnValue_1) == 0x0000E4, "Member 'BTT_ch_Jump_C_ExecuteUbergraph_BTT_ch_Jump::CallFunc_IsFalling_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTT_ch_Jump_C_ExecuteUbergraph_BTT_ch_Jump, CallFunc_IsActionStatus_Result_1) == 0x0000E5, "Member 'BTT_ch_Jump_C_ExecuteUbergraph_BTT_ch_Jump::CallFunc_IsActionStatus_Result_1' has a wrong offset!");
static_assert(offsetof(BTT_ch_Jump_C_ExecuteUbergraph_BTT_ch_Jump, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000E6, "Member 'BTT_ch_Jump_C_ExecuteUbergraph_BTT_ch_Jump::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTT_ch_Jump_C_ExecuteUbergraph_BTT_ch_Jump, CallFunc_Not_PreBool_ReturnValue_2) == 0x0000E7, "Member 'BTT_ch_Jump_C_ExecuteUbergraph_BTT_ch_Jump::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BTT_ch_Jump_C_ExecuteUbergraph_BTT_ch_Jump, K2Node_Event_OwnerController) == 0x0000E8, "Member 'BTT_ch_Jump_C_ExecuteUbergraph_BTT_ch_Jump::K2Node_Event_OwnerController' has a wrong offset!");
static_assert(offsetof(BTT_ch_Jump_C_ExecuteUbergraph_BTT_ch_Jump, K2Node_Event_ControlledPawn) == 0x0000F0, "Member 'BTT_ch_Jump_C_ExecuteUbergraph_BTT_ch_Jump::K2Node_Event_ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTT_ch_Jump_C_ExecuteUbergraph_BTT_ch_Jump, CallFunc_IsOver_ReturnValue) == 0x0000F8, "Member 'BTT_ch_Jump_C_ExecuteUbergraph_BTT_ch_Jump::CallFunc_IsOver_ReturnValue' has a wrong offset!");

// Function BTT_ch_Jump.BTT_ch_Jump_C.ReceiveAbortAI
// 0x0010 (0x0010 - 0x0000)
struct BTT_ch_Jump_C_ReceiveAbortAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_ch_Jump_C_ReceiveAbortAI) == 0x000008, "Wrong alignment on BTT_ch_Jump_C_ReceiveAbortAI");
static_assert(sizeof(BTT_ch_Jump_C_ReceiveAbortAI) == 0x000010, "Wrong size on BTT_ch_Jump_C_ReceiveAbortAI");
static_assert(offsetof(BTT_ch_Jump_C_ReceiveAbortAI, OwnerController) == 0x000000, "Member 'BTT_ch_Jump_C_ReceiveAbortAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTT_ch_Jump_C_ReceiveAbortAI, ControlledPawn) == 0x000008, "Member 'BTT_ch_Jump_C_ReceiveAbortAI::ControlledPawn' has a wrong offset!");

// Function BTT_ch_Jump.BTT_ch_Jump_C.ReceiveTickAI
// 0x0018 (0x0018 - 0x0000)
struct BTT_ch_Jump_C_ReceiveTickAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaSeconds;                                      // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_ch_Jump_C_ReceiveTickAI) == 0x000008, "Wrong alignment on BTT_ch_Jump_C_ReceiveTickAI");
static_assert(sizeof(BTT_ch_Jump_C_ReceiveTickAI) == 0x000018, "Wrong size on BTT_ch_Jump_C_ReceiveTickAI");
static_assert(offsetof(BTT_ch_Jump_C_ReceiveTickAI, OwnerController) == 0x000000, "Member 'BTT_ch_Jump_C_ReceiveTickAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTT_ch_Jump_C_ReceiveTickAI, ControlledPawn) == 0x000008, "Member 'BTT_ch_Jump_C_ReceiveTickAI::ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTT_ch_Jump_C_ReceiveTickAI, DeltaSeconds) == 0x000010, "Member 'BTT_ch_Jump_C_ReceiveTickAI::DeltaSeconds' has a wrong offset!");

// Function BTT_ch_Jump.BTT_ch_Jump_C.ReceiveExecuteAI
// 0x0010 (0x0010 - 0x0000)
struct BTT_ch_Jump_C_ReceiveExecuteAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_ch_Jump_C_ReceiveExecuteAI) == 0x000008, "Wrong alignment on BTT_ch_Jump_C_ReceiveExecuteAI");
static_assert(sizeof(BTT_ch_Jump_C_ReceiveExecuteAI) == 0x000010, "Wrong size on BTT_ch_Jump_C_ReceiveExecuteAI");
static_assert(offsetof(BTT_ch_Jump_C_ReceiveExecuteAI, OwnerController) == 0x000000, "Member 'BTT_ch_Jump_C_ReceiveExecuteAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTT_ch_Jump_C_ReceiveExecuteAI, ControlledPawn) == 0x000008, "Member 'BTT_ch_Jump_C_ReceiveExecuteAI::ControlledPawn' has a wrong offset!");

// Function BTT_ch_Jump.BTT_ch_Jump_C.Exit
// 0x0050 (0x0050 - 0x0000)
struct BTT_ch_Jump_C_Exit final
{
public:
	class APawn*                                  ControlledPawn;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_PlayerAIInterface_C> K2Node_DynamicCast_AsBPI_Player_AIInterface;       // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E1F[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerAIInterface_C> K2Node_DynamicCast_AsBPI_Player_AIInterface_1;     // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetAIMoveStick_bDummy;                    // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetEnableInputStick_Dummy;                // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E20[0x5];                                     // 0x0033(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerAIInterface_C> K2Node_DynamicCast_AsBPI_Player_AIInterface_2;     // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BTT_ch_Jump_C_Exit) == 0x000008, "Wrong alignment on BTT_ch_Jump_C_Exit");
static_assert(sizeof(BTT_ch_Jump_C_Exit) == 0x000050, "Wrong size on BTT_ch_Jump_C_Exit");
static_assert(offsetof(BTT_ch_Jump_C_Exit, ControlledPawn) == 0x000000, "Member 'BTT_ch_Jump_C_Exit::ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTT_ch_Jump_C_Exit, K2Node_DynamicCast_AsBPI_Player_AIInterface) == 0x000008, "Member 'BTT_ch_Jump_C_Exit::K2Node_DynamicCast_AsBPI_Player_AIInterface' has a wrong offset!");
static_assert(offsetof(BTT_ch_Jump_C_Exit, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BTT_ch_Jump_C_Exit::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BTT_ch_Jump_C_Exit, K2Node_DynamicCast_AsBPI_Player_AIInterface_1) == 0x000020, "Member 'BTT_ch_Jump_C_Exit::K2Node_DynamicCast_AsBPI_Player_AIInterface_1' has a wrong offset!");
static_assert(offsetof(BTT_ch_Jump_C_Exit, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'BTT_ch_Jump_C_Exit::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BTT_ch_Jump_C_Exit, CallFunc_SetAIMoveStick_bDummy) == 0x000031, "Member 'BTT_ch_Jump_C_Exit::CallFunc_SetAIMoveStick_bDummy' has a wrong offset!");
static_assert(offsetof(BTT_ch_Jump_C_Exit, CallFunc_SetEnableInputStick_Dummy) == 0x000032, "Member 'BTT_ch_Jump_C_Exit::CallFunc_SetEnableInputStick_Dummy' has a wrong offset!");
static_assert(offsetof(BTT_ch_Jump_C_Exit, K2Node_DynamicCast_AsBPI_Player_AIInterface_2) == 0x000038, "Member 'BTT_ch_Jump_C_Exit::K2Node_DynamicCast_AsBPI_Player_AIInterface_2' has a wrong offset!");
static_assert(offsetof(BTT_ch_Jump_C_Exit, K2Node_DynamicCast_bSuccess_2) == 0x000048, "Member 'BTT_ch_Jump_C_Exit::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");

}

