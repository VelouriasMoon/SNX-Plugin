#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_TownPeople

#include "Basic.hpp"

#include "BattlePrototype_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_TownPeople.BP_TownPeople_C.ExecuteUbergraph_BP_TownPeople
// 0x0050 (0x0050 - 0x0000)
struct BP_TownPeople_C_ExecuteUbergraph_BP_TownPeople final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName DatatableId)>      K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_647C[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserParamManager*                      CallFunc_GetUserParamManager_UserParamManager;     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_647D[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UQuestParamManager*                     CallFunc_GetQuestParamManager_ReturnValue;         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_647E[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EUINoticeMessageCallType SenderType, class FName DatatableId)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0034(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_TownPeople_C_ExecuteUbergraph_BP_TownPeople) == 0x000008, "Wrong alignment on BP_TownPeople_C_ExecuteUbergraph_BP_TownPeople");
static_assert(sizeof(BP_TownPeople_C_ExecuteUbergraph_BP_TownPeople) == 0x000050, "Wrong size on BP_TownPeople_C_ExecuteUbergraph_BP_TownPeople");
static_assert(offsetof(BP_TownPeople_C_ExecuteUbergraph_BP_TownPeople, EntryPoint) == 0x000000, "Member 'BP_TownPeople_C_ExecuteUbergraph_BP_TownPeople::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_TownPeople_C_ExecuteUbergraph_BP_TownPeople, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'BP_TownPeople_C_ExecuteUbergraph_BP_TownPeople::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_TownPeople_C_ExecuteUbergraph_BP_TownPeople, CallFunc_GetUserParamManager_UserParamManager) == 0x000018, "Member 'BP_TownPeople_C_ExecuteUbergraph_BP_TownPeople::CallFunc_GetUserParamManager_UserParamManager' has a wrong offset!");
static_assert(offsetof(BP_TownPeople_C_ExecuteUbergraph_BP_TownPeople, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_TownPeople_C_ExecuteUbergraph_BP_TownPeople::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TownPeople_C_ExecuteUbergraph_BP_TownPeople, CallFunc_GetQuestParamManager_ReturnValue) == 0x000028, "Member 'BP_TownPeople_C_ExecuteUbergraph_BP_TownPeople::CallFunc_GetQuestParamManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TownPeople_C_ExecuteUbergraph_BP_TownPeople, CallFunc_IsValid_ReturnValue_1) == 0x000030, "Member 'BP_TownPeople_C_ExecuteUbergraph_BP_TownPeople::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TownPeople_C_ExecuteUbergraph_BP_TownPeople, K2Node_CreateDelegate_OutputDelegate_1) == 0x000034, "Member 'BP_TownPeople_C_ExecuteUbergraph_BP_TownPeople::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_TownPeople_C_ExecuteUbergraph_BP_TownPeople, CallFunc_Array_Length_ReturnValue) == 0x000044, "Member 'BP_TownPeople_C_ExecuteUbergraph_BP_TownPeople::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TownPeople_C_ExecuteUbergraph_BP_TownPeople, CallFunc_Greater_IntInt_ReturnValue) == 0x000048, "Member 'BP_TownPeople_C_ExecuteUbergraph_BP_TownPeople::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BP_TownPeople.BP_TownPeople_C.UpdateQuest
// 0x0010 (0x0010 - 0x0000)
struct BP_TownPeople_C_UpdateQuest final
{
public:
	EUINoticeMessageCallType                      Type;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_647F[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   ID;                                                // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_TownPeople_C_UpdateQuest) == 0x000004, "Wrong alignment on BP_TownPeople_C_UpdateQuest");
static_assert(sizeof(BP_TownPeople_C_UpdateQuest) == 0x000010, "Wrong size on BP_TownPeople_C_UpdateQuest");
static_assert(offsetof(BP_TownPeople_C_UpdateQuest, Type) == 0x000000, "Member 'BP_TownPeople_C_UpdateQuest::Type' has a wrong offset!");
static_assert(offsetof(BP_TownPeople_C_UpdateQuest, ID) == 0x000004, "Member 'BP_TownPeople_C_UpdateQuest::ID' has a wrong offset!");
static_assert(offsetof(BP_TownPeople_C_UpdateQuest, K2Node_SwitchEnum_CmpSuccess) == 0x00000C, "Member 'BP_TownPeople_C_UpdateQuest::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_TownPeople.BP_TownPeople_C.UpdateActiveQuest
// 0x0008 (0x0008 - 0x0000)
struct BP_TownPeople_C_UpdateActiveQuest final
{
public:
	class FName                                   ID;                                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TownPeople_C_UpdateActiveQuest) == 0x000004, "Wrong alignment on BP_TownPeople_C_UpdateActiveQuest");
static_assert(sizeof(BP_TownPeople_C_UpdateActiveQuest) == 0x000008, "Wrong size on BP_TownPeople_C_UpdateActiveQuest");
static_assert(offsetof(BP_TownPeople_C_UpdateActiveQuest, ID) == 0x000000, "Member 'BP_TownPeople_C_UpdateActiveQuest::ID' has a wrong offset!");

// Function BP_TownPeople.BP_TownPeople_C.IsTalkEnablePlayer
// 0x0070 (0x0070 - 0x0000)
struct BP_TownPeople_C_IsTalkEnablePlayer final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6480[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTargetAngle_TargeDegreetAngle;         // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_TownPeople_C_IsTalkEnablePlayer) == 0x000008, "Wrong alignment on BP_TownPeople_C_IsTalkEnablePlayer");
static_assert(sizeof(BP_TownPeople_C_IsTalkEnablePlayer) == 0x000070, "Wrong size on BP_TownPeople_C_IsTalkEnablePlayer");
static_assert(offsetof(BP_TownPeople_C_IsTalkEnablePlayer, ReturnValue) == 0x000000, "Member 'BP_TownPeople_C_IsTalkEnablePlayer::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TownPeople_C_IsTalkEnablePlayer, CallFunc_GetPlayerPawn_ReturnValue) == 0x000008, "Member 'BP_TownPeople_C_IsTalkEnablePlayer::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TownPeople_C_IsTalkEnablePlayer, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000010, "Member 'BP_TownPeople_C_IsTalkEnablePlayer::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TownPeople_C_IsTalkEnablePlayer, CallFunc_GetActorForwardVector_ReturnValue) == 0x00001C, "Member 'BP_TownPeople_C_IsTalkEnablePlayer::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TownPeople_C_IsTalkEnablePlayer, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000028, "Member 'BP_TownPeople_C_IsTalkEnablePlayer::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TownPeople_C_IsTalkEnablePlayer, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000034, "Member 'BP_TownPeople_C_IsTalkEnablePlayer::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TownPeople_C_IsTalkEnablePlayer, CallFunc_BreakVector_X) == 0x000040, "Member 'BP_TownPeople_C_IsTalkEnablePlayer::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_TownPeople_C_IsTalkEnablePlayer, CallFunc_BreakVector_Y) == 0x000044, "Member 'BP_TownPeople_C_IsTalkEnablePlayer::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_TownPeople_C_IsTalkEnablePlayer, CallFunc_BreakVector_Z) == 0x000048, "Member 'BP_TownPeople_C_IsTalkEnablePlayer::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_TownPeople_C_IsTalkEnablePlayer, CallFunc_MakeVector_ReturnValue) == 0x00004C, "Member 'BP_TownPeople_C_IsTalkEnablePlayer::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TownPeople_C_IsTalkEnablePlayer, CallFunc_Normal_ReturnValue) == 0x000058, "Member 'BP_TownPeople_C_IsTalkEnablePlayer::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TownPeople_C_IsTalkEnablePlayer, CallFunc_GetTargetAngle_TargeDegreetAngle) == 0x000064, "Member 'BP_TownPeople_C_IsTalkEnablePlayer::CallFunc_GetTargetAngle_TargeDegreetAngle' has a wrong offset!");
static_assert(offsetof(BP_TownPeople_C_IsTalkEnablePlayer, CallFunc_Abs_ReturnValue) == 0x000068, "Member 'BP_TownPeople_C_IsTalkEnablePlayer::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TownPeople_C_IsTalkEnablePlayer, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x00006C, "Member 'BP_TownPeople_C_IsTalkEnablePlayer::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");

}

