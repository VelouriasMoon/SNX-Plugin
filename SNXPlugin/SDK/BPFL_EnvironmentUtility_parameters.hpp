#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPFL_EnvironmentUtility

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "BattlePrototype_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BPFL_EnvironmentUtility.BPFL_EnvironmentUtility_C.CalcSplineBound
// 0x0440 (0x0440 - 0x0000)
struct BPFL_EnvironmentUtility_C_CalcSplineBound final
{
public:
	TArray<class USplineMeshComponent*>           Splines;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	ESplineMeshAxis                               ForwardAxis;                                       // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_834D[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               BaseRotator;                                       // 0x0014(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          OneStaticMesh;                                     // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_834E[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                BoxCenter;                                         // 0x0030(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                BoxExtent;                                         // 0x003C(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                BoxMin;                                            // 0x0048(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                BoxMax;                                            // 0x0054(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                BoundMax;                                          // 0x0060(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                BoundMin;                                          // 0x006C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                EndPosition;                                       // 0x0078(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                StartPosition;                                     // 0x0084(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USplineMeshComponent*                   SplineMeshComponent;                               // 0x0090(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LocalBoundMax;                                     // 0x0098(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LocalBoundMin;                                     // 0x00A4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TmpVector2;                                        // 0x00B0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TmpVector1;                                        // 0x00BC(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Temp_struct_Variable;                              // 0x00C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_834F[0x3];                                     // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x00E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class USplineMeshComponent*                   CallFunc_Array_Get_Item;                           // 0x00F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Temp_struct_Variable_1;                            // 0x00F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               Temp_struct_Variable_2;                            // 0x0104(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FBoxSphereBounds                       CallFunc_GetBounds_ReturnValue;                    // 0x0110(0x001C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESplineMeshAxis                               Temp_byte_Variable;                                // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8350[0x3];                                     // 0x012D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0130(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0148(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0160(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0190(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x019C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x01A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8351[0xC];                                     // 0x01B4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x01C0(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x01F0(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetWorldBound_BoundMin;                   // 0x0220(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetWorldBound_BoundMax;                   // 0x022C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetWorldBound_BoundMin_1;                 // 0x0238(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetWorldBound_BoundMax_1;                 // 0x0244(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_2;                          // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x0254(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_3;                          // 0x025C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_3;                          // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_3;                          // 0x0264(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_4;                          // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_4;                          // 0x026C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_4;                          // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0274(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue;                         // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue_1;                       // 0x027C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue_1;                       // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue_2;                       // 0x0284(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue_2;                       // 0x0288(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue_3;                       // 0x028C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue_4;                       // 0x0290(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue_5;                       // 0x0294(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_5;                          // 0x0298(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_5;                          // 0x029C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_5;                          // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x02A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue_3;                       // 0x02B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue_4;                       // 0x02B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue_5;                       // 0x02B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x02BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetStartPosition_ReturnValue;             // 0x02C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8352[0xC];                                     // 0x02D4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue_1;     // 0x02E0(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_TransformLocation_ReturnValue;            // 0x0310(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x031C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8353[0x8];                                     // 0x0328(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue_2;     // 0x0330(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Divide_VectorFloat_ReturnValue;           // 0x0360(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetEndPosition_ReturnValue;               // 0x036C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0378(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TransformLocation_ReturnValue_1;          // 0x0384(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               K2Node_Select_Default;                             // 0x0390(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x039C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x03A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue_1; // 0x03AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue_2; // 0x03B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue_3; // 0x03C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x03D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x03D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8354[0x3];                                     // 0x03D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x03D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_6;                          // 0x03DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_6;                          // 0x03E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_6;                          // 0x03E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_7;                          // 0x03E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_7;                          // 0x03EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_7;                          // 0x03F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue_6;                       // 0x03F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_8;                          // 0x03F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_8;                          // 0x03FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_8;                          // 0x0400(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue_7;                       // 0x0404(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue_8;                       // 0x0408(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x040C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_9;                          // 0x0418(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_9;                          // 0x041C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_9;                          // 0x0420(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue_6;                       // 0x0424(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue_7;                       // 0x0428(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue_8;                       // 0x042C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_3;                 // 0x0430(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_EnvironmentUtility_C_CalcSplineBound) == 0x000010, "Wrong alignment on BPFL_EnvironmentUtility_C_CalcSplineBound");
static_assert(sizeof(BPFL_EnvironmentUtility_C_CalcSplineBound) == 0x000440, "Wrong size on BPFL_EnvironmentUtility_C_CalcSplineBound");
static_assert(offsetof(BPFL_EnvironmentUtility_C_CalcSplineBound, Splines) == 0x000000, "Member 'BPFL_EnvironmentUtility_C_CalcSplineBound::Splines' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_CalcSplineBound, ForwardAxis) == 0x000010, "Member 'BPFL_EnvironmentUtility_C_CalcSplineBound::ForwardAxis' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_CalcSplineBound, BaseRotator) == 0x000014, "Member 'BPFL_EnvironmentUtility_C_CalcSplineBound::BaseRotator' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_CalcSplineBound, OneStaticMesh) == 0x000020, "Member 'BPFL_EnvironmentUtility_C_CalcSplineBound::OneStaticMesh' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_CalcSplineBound, __WorldContext) == 0x000028, "Member 'BPFL_EnvironmentUtility_C_CalcSplineBound::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_CalcSplineBound, BoxCenter) == 0x000030, "Member 'BPFL_EnvironmentUtility_C_CalcSplineBound::BoxCenter' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_CalcSplineBound, BoxExtent) == 0x00003C, "Member 'BPFL_EnvironmentUtility_C_CalcSplineBound::BoxExtent' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_CalcSplineBound, BoxMin) == 0x000048, "Member 'BPFL_EnvironmentUtility_C_CalcSplineBound::BoxMin' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_CalcSplineBound, BoxMax) == 0x000054, "Member 'BPFL_EnvironmentUtility_C_CalcSplineBound::BoxMax' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_CalcSplineBound, BoundMax) == 0x000060, "Member 'BPFL_EnvironmentUtility_C_CalcSplineBound::BoundMax' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_CalcSplineBound, BoundMin) == 0x00006C, "Member 'BPFL_EnvironmentUtility_C_CalcSplineBound::BoundMin' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_CalcSplineBound, EndPosition) == 0x000078, "Member 'BPFL_EnvironmentUtility_C_CalcSplineBound::EndPosition' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_CalcSplineBound, StartPosition) == 0x000084, "Member 'BPFL_EnvironmentUtility_C_CalcSplineBound::StartPosition' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_CalcSplineBound, SplineMeshComponent) == 0x000090, "Member 'BPFL_EnvironmentUtility_C_CalcSplineBound::SplineMeshComponent' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_CalcSplineBound, LocalBoundMax) == 0x000098, "Member 'BPFL_EnvironmentUtility_C_CalcSplineBound::LocalBoundMax' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_CalcSplineBound, LocalBoundMin) == 0x0000A4, "Member 'BPFL_EnvironmentUtility_C_CalcSplineBound::LocalBoundMin' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_CalcSplineBound, TmpVector2) == 0x0000B0, "Member 'BPFL_EnvironmentUtility_C_CalcSplineBound::TmpVector2' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_CalcSplineBound, TmpVector1) == 0x0000BC, "Member 'BPFL_EnvironmentUtility_C_CalcSplineBound::TmpVector1' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_CalcSplineBound, Temp_struct_Variable) == 0x0000C8, "Member 'BPFL_EnvironmentUtility_C_CalcSplineBound::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_CalcSplineBound, CallFunc_Array_Length_ReturnValue) == 0x0000D4, "Member 'BPFL_EnvironmentUtility_C_CalcSplineBound::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_CalcSplineBound, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000D8, "Member 'BPFL_EnvironmentUtility_C_CalcSplineBound::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_CalcSplineBound, Temp_int_Array_Index_Variable) == 0x0000DC, "Member 'BPFL_EnvironmentUtility_C_CalcSplineBound::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_CalcSplineBound, Temp_int_Loop_Num_Variable) == 0x0000E0, "Member 'BPFL_EnvironmentUtility_C_CalcSplineBound::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_CalcSplineBound, CallFunc_FindLookAtRotation_ReturnValue) == 0x0000E4, "Member 'BPFL_EnvironmentUtility_C_CalcSplineBound::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_CalcSplineBound, CallFunc_Array_Get_Item) == 0x0000F0, "Member 'BPFL_EnvironmentUtility_C_CalcSplineBound::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_CalcSplineBound, Temp_struct_Variable_1) == 0x0000F8, "Member 'BPFL_EnvironmentUtility_C_CalcSplineBound::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_CalcSplineBound, Temp_struct_Variable_2) == 0x000104, "Member 'BPFL_EnvironmentUtility_C_CalcSplineBound::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_CalcSplineBound, CallFunc_GetBounds_ReturnValue) == 0x000110, "Member 'BPFL_EnvironmentUtility_C_CalcSplineBound::CallFunc_GetBounds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_CalcSplineBound, Temp_byte_Variable) == 0x00012C, "Member 'BPFL_EnvironmentUtility_C_CalcSplineBound::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_CalcSplineBound, CallFunc_Add_VectorVector_ReturnValue) == 0x000130, "Member 'BPFL_EnvironmentUtility_C_CalcSplineBound::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_CalcSplineBound, CallFunc_BreakVector_X) == 0x00013C, "Member 'BPFL_EnvironmentUtility_C_CalcSplineBound::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_CalcSplineBound, CallFunc_BreakVector_Y) == 0x000140, "Member 'BPFL_EnvironmentUtility_C_CalcSplineBound::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_CalcSplineBound, CallFunc_BreakVector_Z) == 0x000144, "Member 'BPFL_EnvironmentUtility_C_CalcSplineBound::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_CalcSplineBound, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000148, "Member 'BPFL_EnvironmentUtility_C_CalcSplineBound::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_CalcSplineBound, CallFunc_BreakVector_X_1) == 0x000154, "Member 'BPFL_EnvironmentUtility_C_CalcSplineBound::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_CalcSplineBound, CallFunc_BreakVector_Y_1) == 0x000158, "Member 'BPFL_EnvironmentUtility_C_CalcSplineBound::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_CalcSplineBound, CallFunc_BreakVector_Z_1) == 0x00015C, "Member 'BPFL_EnvironmentUtility_C_CalcSplineBound::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_CalcSplineBound, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000160, "Member 'BPFL_EnvironmentUtility_C_CalcSplineBound::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_CalcSplineBound, CallFunc_BreakTransform_Location) == 0x000190, "Member 'BPFL_EnvironmentUtility_C_CalcSplineBound::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_CalcSplineBound, CallFunc_BreakTransform_Rotation) == 0x00019C, "Member 'BPFL_EnvironmentUtility_C_CalcSplineBound::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_CalcSplineBound, CallFunc_BreakTransform_Scale) == 0x0001A8, "Member 'BPFL_EnvironmentUtility_C_CalcSplineBound::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_CalcSplineBound, CallFunc_MakeTransform_ReturnValue) == 0x0001C0, "Member 'BPFL_EnvironmentUtility_C_CalcSplineBound::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_CalcSplineBound, CallFunc_MakeTransform_ReturnValue_1) == 0x0001F0, "Member 'BPFL_EnvironmentUtility_C_CalcSplineBound::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_CalcSplineBound, CallFunc_GetWorldBound_BoundMin) == 0x000220, "Member 'BPFL_EnvironmentUtility_C_CalcSplineBound::CallFunc_GetWorldBound_BoundMin' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_CalcSplineBound, CallFunc_GetWorldBound_BoundMax) == 0x00022C, "Member 'BPFL_EnvironmentUtility_C_CalcSplineBound::CallFunc_GetWorldBound_BoundMax' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_CalcSplineBound, CallFunc_GetWorldBound_BoundMin_1) == 0x000238, "Member 'BPFL_EnvironmentUtility_C_CalcSplineBound::CallFunc_GetWorldBound_BoundMin_1' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_CalcSplineBound, CallFunc_GetWorldBound_BoundMax_1) == 0x000244, "Member 'BPFL_EnvironmentUtility_C_CalcSplineBound::CallFunc_GetWorldBound_BoundMax_1' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_CalcSplineBound, CallFunc_BreakVector_X_2) == 0x000250, "Member 'BPFL_EnvironmentUtility_C_CalcSplineBound::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_CalcSplineBound, CallFunc_BreakVector_Y_2) == 0x000254, "Member 'BPFL_EnvironmentUtility_C_CalcSplineBound::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_CalcSplineBound, CallFunc_BreakVector_Z_2) == 0x000258, "Member 'BPFL_EnvironmentUtility_C_CalcSplineBound::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_CalcSplineBound, CallFunc_BreakVector_X_3) == 0x00025C, "Member 'BPFL_EnvironmentUtility_C_CalcSplineBound::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_CalcSplineBound, CallFunc_BreakVector_Y_3) == 0x000260, "Member 'BPFL_EnvironmentUtility_C_CalcSplineBound::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_CalcSplineBound, CallFunc_BreakVector_Z_3) == 0x000264, "Member 'BPFL_EnvironmentUtility_C_CalcSplineBound::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_CalcSplineBound, CallFunc_BreakVector_X_4) == 0x000268, "Member 'BPFL_EnvironmentUtility_C_CalcSplineBound::CallFunc_BreakVector_X_4' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_CalcSplineBound, CallFunc_BreakVector_Y_4) == 0x00026C, "Member 'BPFL_EnvironmentUtility_C_CalcSplineBound::CallFunc_BreakVector_Y_4' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_CalcSplineBound, CallFunc_BreakVector_Z_4) == 0x000270, "Member 'BPFL_EnvironmentUtility_C_CalcSplineBound::CallFunc_BreakVector_Z_4' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_CalcSplineBound, CallFunc_FMax_ReturnValue) == 0x000274, "Member 'BPFL_EnvironmentUtility_C_CalcSplineBound::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_CalcSplineBound, CallFunc_FMin_ReturnValue) == 0x000278, "Member 'BPFL_EnvironmentUtility_C_CalcSplineBound::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_CalcSplineBound, CallFunc_FMax_ReturnValue_1) == 0x00027C, "Member 'BPFL_EnvironmentUtility_C_CalcSplineBound::CallFunc_FMax_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_CalcSplineBound, CallFunc_FMin_ReturnValue_1) == 0x000280, "Member 'BPFL_EnvironmentUtility_C_CalcSplineBound::CallFunc_FMin_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_CalcSplineBound, CallFunc_FMin_ReturnValue_2) == 0x000284, "Member 'BPFL_EnvironmentUtility_C_CalcSplineBound::CallFunc_FMin_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_CalcSplineBound, CallFunc_FMax_ReturnValue_2) == 0x000288, "Member 'BPFL_EnvironmentUtility_C_CalcSplineBound::CallFunc_FMax_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_CalcSplineBound, CallFunc_FMax_ReturnValue_3) == 0x00028C, "Member 'BPFL_EnvironmentUtility_C_CalcSplineBound::CallFunc_FMax_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_CalcSplineBound, CallFunc_FMax_ReturnValue_4) == 0x000290, "Member 'BPFL_EnvironmentUtility_C_CalcSplineBound::CallFunc_FMax_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_CalcSplineBound, CallFunc_FMax_ReturnValue_5) == 0x000294, "Member 'BPFL_EnvironmentUtility_C_CalcSplineBound::CallFunc_FMax_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_CalcSplineBound, CallFunc_BreakVector_X_5) == 0x000298, "Member 'BPFL_EnvironmentUtility_C_CalcSplineBound::CallFunc_BreakVector_X_5' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_CalcSplineBound, CallFunc_BreakVector_Y_5) == 0x00029C, "Member 'BPFL_EnvironmentUtility_C_CalcSplineBound::CallFunc_BreakVector_Y_5' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_CalcSplineBound, CallFunc_BreakVector_Z_5) == 0x0002A0, "Member 'BPFL_EnvironmentUtility_C_CalcSplineBound::CallFunc_BreakVector_Z_5' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_CalcSplineBound, CallFunc_MakeVector_ReturnValue) == 0x0002A4, "Member 'BPFL_EnvironmentUtility_C_CalcSplineBound::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_CalcSplineBound, CallFunc_FMin_ReturnValue_3) == 0x0002B0, "Member 'BPFL_EnvironmentUtility_C_CalcSplineBound::CallFunc_FMin_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_CalcSplineBound, CallFunc_FMin_ReturnValue_4) == 0x0002B4, "Member 'BPFL_EnvironmentUtility_C_CalcSplineBound::CallFunc_FMin_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_CalcSplineBound, CallFunc_FMin_ReturnValue_5) == 0x0002B8, "Member 'BPFL_EnvironmentUtility_C_CalcSplineBound::CallFunc_FMin_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_CalcSplineBound, CallFunc_MakeVector_ReturnValue_1) == 0x0002BC, "Member 'BPFL_EnvironmentUtility_C_CalcSplineBound::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_CalcSplineBound, CallFunc_GetStartPosition_ReturnValue) == 0x0002C8, "Member 'BPFL_EnvironmentUtility_C_CalcSplineBound::CallFunc_GetStartPosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_CalcSplineBound, CallFunc_K2_GetComponentToWorld_ReturnValue_1) == 0x0002E0, "Member 'BPFL_EnvironmentUtility_C_CalcSplineBound::CallFunc_K2_GetComponentToWorld_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_CalcSplineBound, CallFunc_TransformLocation_ReturnValue) == 0x000310, "Member 'BPFL_EnvironmentUtility_C_CalcSplineBound::CallFunc_TransformLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_CalcSplineBound, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x00031C, "Member 'BPFL_EnvironmentUtility_C_CalcSplineBound::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_CalcSplineBound, CallFunc_K2_GetComponentToWorld_ReturnValue_2) == 0x000330, "Member 'BPFL_EnvironmentUtility_C_CalcSplineBound::CallFunc_K2_GetComponentToWorld_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_CalcSplineBound, CallFunc_Divide_VectorFloat_ReturnValue) == 0x000360, "Member 'BPFL_EnvironmentUtility_C_CalcSplineBound::CallFunc_Divide_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_CalcSplineBound, CallFunc_GetEndPosition_ReturnValue) == 0x00036C, "Member 'BPFL_EnvironmentUtility_C_CalcSplineBound::CallFunc_GetEndPosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_CalcSplineBound, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000378, "Member 'BPFL_EnvironmentUtility_C_CalcSplineBound::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_CalcSplineBound, CallFunc_TransformLocation_ReturnValue_1) == 0x000384, "Member 'BPFL_EnvironmentUtility_C_CalcSplineBound::CallFunc_TransformLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_CalcSplineBound, K2Node_Select_Default) == 0x000390, "Member 'BPFL_EnvironmentUtility_C_CalcSplineBound::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_CalcSplineBound, CallFunc_Array_Length_ReturnValue_1) == 0x00039C, "Member 'BPFL_EnvironmentUtility_C_CalcSplineBound::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_CalcSplineBound, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x0003A0, "Member 'BPFL_EnvironmentUtility_C_CalcSplineBound::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_CalcSplineBound, CallFunc_GreaterGreater_VectorRotator_ReturnValue_1) == 0x0003AC, "Member 'BPFL_EnvironmentUtility_C_CalcSplineBound::CallFunc_GreaterGreater_VectorRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_CalcSplineBound, CallFunc_GreaterGreater_VectorRotator_ReturnValue_2) == 0x0003B8, "Member 'BPFL_EnvironmentUtility_C_CalcSplineBound::CallFunc_GreaterGreater_VectorRotator_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_CalcSplineBound, CallFunc_GreaterGreater_VectorRotator_ReturnValue_3) == 0x0003C4, "Member 'BPFL_EnvironmentUtility_C_CalcSplineBound::CallFunc_GreaterGreater_VectorRotator_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_CalcSplineBound, Temp_int_Loop_Counter_Variable) == 0x0003D0, "Member 'BPFL_EnvironmentUtility_C_CalcSplineBound::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_CalcSplineBound, CallFunc_Less_IntInt_ReturnValue) == 0x0003D4, "Member 'BPFL_EnvironmentUtility_C_CalcSplineBound::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_CalcSplineBound, CallFunc_Add_IntInt_ReturnValue) == 0x0003D8, "Member 'BPFL_EnvironmentUtility_C_CalcSplineBound::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_CalcSplineBound, CallFunc_BreakVector_X_6) == 0x0003DC, "Member 'BPFL_EnvironmentUtility_C_CalcSplineBound::CallFunc_BreakVector_X_6' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_CalcSplineBound, CallFunc_BreakVector_Y_6) == 0x0003E0, "Member 'BPFL_EnvironmentUtility_C_CalcSplineBound::CallFunc_BreakVector_Y_6' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_CalcSplineBound, CallFunc_BreakVector_Z_6) == 0x0003E4, "Member 'BPFL_EnvironmentUtility_C_CalcSplineBound::CallFunc_BreakVector_Z_6' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_CalcSplineBound, CallFunc_BreakVector_X_7) == 0x0003E8, "Member 'BPFL_EnvironmentUtility_C_CalcSplineBound::CallFunc_BreakVector_X_7' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_CalcSplineBound, CallFunc_BreakVector_Y_7) == 0x0003EC, "Member 'BPFL_EnvironmentUtility_C_CalcSplineBound::CallFunc_BreakVector_Y_7' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_CalcSplineBound, CallFunc_BreakVector_Z_7) == 0x0003F0, "Member 'BPFL_EnvironmentUtility_C_CalcSplineBound::CallFunc_BreakVector_Z_7' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_CalcSplineBound, CallFunc_FMax_ReturnValue_6) == 0x0003F4, "Member 'BPFL_EnvironmentUtility_C_CalcSplineBound::CallFunc_FMax_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_CalcSplineBound, CallFunc_BreakVector_X_8) == 0x0003F8, "Member 'BPFL_EnvironmentUtility_C_CalcSplineBound::CallFunc_BreakVector_X_8' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_CalcSplineBound, CallFunc_BreakVector_Y_8) == 0x0003FC, "Member 'BPFL_EnvironmentUtility_C_CalcSplineBound::CallFunc_BreakVector_Y_8' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_CalcSplineBound, CallFunc_BreakVector_Z_8) == 0x000400, "Member 'BPFL_EnvironmentUtility_C_CalcSplineBound::CallFunc_BreakVector_Z_8' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_CalcSplineBound, CallFunc_FMax_ReturnValue_7) == 0x000404, "Member 'BPFL_EnvironmentUtility_C_CalcSplineBound::CallFunc_FMax_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_CalcSplineBound, CallFunc_FMax_ReturnValue_8) == 0x000408, "Member 'BPFL_EnvironmentUtility_C_CalcSplineBound::CallFunc_FMax_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_CalcSplineBound, CallFunc_MakeVector_ReturnValue_2) == 0x00040C, "Member 'BPFL_EnvironmentUtility_C_CalcSplineBound::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_CalcSplineBound, CallFunc_BreakVector_X_9) == 0x000418, "Member 'BPFL_EnvironmentUtility_C_CalcSplineBound::CallFunc_BreakVector_X_9' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_CalcSplineBound, CallFunc_BreakVector_Y_9) == 0x00041C, "Member 'BPFL_EnvironmentUtility_C_CalcSplineBound::CallFunc_BreakVector_Y_9' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_CalcSplineBound, CallFunc_BreakVector_Z_9) == 0x000420, "Member 'BPFL_EnvironmentUtility_C_CalcSplineBound::CallFunc_BreakVector_Z_9' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_CalcSplineBound, CallFunc_FMin_ReturnValue_6) == 0x000424, "Member 'BPFL_EnvironmentUtility_C_CalcSplineBound::CallFunc_FMin_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_CalcSplineBound, CallFunc_FMin_ReturnValue_7) == 0x000428, "Member 'BPFL_EnvironmentUtility_C_CalcSplineBound::CallFunc_FMin_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_CalcSplineBound, CallFunc_FMin_ReturnValue_8) == 0x00042C, "Member 'BPFL_EnvironmentUtility_C_CalcSplineBound::CallFunc_FMin_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_CalcSplineBound, CallFunc_MakeVector_ReturnValue_3) == 0x000430, "Member 'BPFL_EnvironmentUtility_C_CalcSplineBound::CallFunc_MakeVector_ReturnValue_3' has a wrong offset!");

// Function BPFL_EnvironmentUtility.BPFL_EnvironmentUtility_C.GetWorldBound
// 0x02B0 (0x02B0 - 0x0000)
struct BPFL_EnvironmentUtility_C_GetWorldBound final
{
public:
	struct FVector                                LocalBoundMin;                                     // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LocalBoundMax;                                     // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8355[0x8];                                     // 0x0018(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             WorldTransform;                                    // 0x0020(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	class UObject*                                __WorldContext;                                    // 0x0050(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                BoundMin;                                          // 0x0058(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                BoundMax;                                          // 0x0064(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector>                        VertexList;                                        // 0x0070(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FVector                                Max;                                               // 0x0080(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Min;                                               // 0x008C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_1;                      // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8356[0x3];                                     // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X;                            // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_2;                          // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue_1;                       // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue_2;                       // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_3;                          // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_3;                          // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_3;                          // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue;                         // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue_1;                       // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue_2;                       // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x010C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0118(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0124(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0130(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_4;                          // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_4;                          // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_4;                          // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0148(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x0154(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x0160(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8357[0x3];                                     // 0x0179(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_5;                          // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_5;                          // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_5;                          // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_6;                          // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_6;                          // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_6;                          // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_3;                 // 0x0198(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_7;                          // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_7;                          // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_7;                          // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_8;                          // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_8;                          // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_8;                          // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_4;                 // 0x01C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_9;                          // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_9;                          // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_9;                          // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_10;                         // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_10;                         // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_10;                         // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_5;                 // 0x01E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_11;                         // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_11;                         // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_11;                         // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_12;                         // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_12;                         // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_12;                         // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_6;                 // 0x0210(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_13;                         // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_13;                         // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_13;                         // 0x0224(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_4;                  // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_14;                         // 0x022C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_14;                         // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_14;                         // 0x0234(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_7;                 // 0x0238(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_15;                         // 0x0244(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_15;                         // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_15;                         // 0x024C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_5;                  // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_16;                         // 0x0254(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_16;                         // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_16;                         // 0x025C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_8;                 // 0x0260(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_6;                  // 0x026C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_7;                  // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x0274(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x0280(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x028C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0298(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x02A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_EnvironmentUtility_C_GetWorldBound) == 0x000010, "Wrong alignment on BPFL_EnvironmentUtility_C_GetWorldBound");
static_assert(sizeof(BPFL_EnvironmentUtility_C_GetWorldBound) == 0x0002B0, "Wrong size on BPFL_EnvironmentUtility_C_GetWorldBound");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetWorldBound, LocalBoundMin) == 0x000000, "Member 'BPFL_EnvironmentUtility_C_GetWorldBound::LocalBoundMin' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetWorldBound, LocalBoundMax) == 0x00000C, "Member 'BPFL_EnvironmentUtility_C_GetWorldBound::LocalBoundMax' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetWorldBound, WorldTransform) == 0x000020, "Member 'BPFL_EnvironmentUtility_C_GetWorldBound::WorldTransform' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetWorldBound, __WorldContext) == 0x000050, "Member 'BPFL_EnvironmentUtility_C_GetWorldBound::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetWorldBound, BoundMin) == 0x000058, "Member 'BPFL_EnvironmentUtility_C_GetWorldBound::BoundMin' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetWorldBound, BoundMax) == 0x000064, "Member 'BPFL_EnvironmentUtility_C_GetWorldBound::BoundMax' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetWorldBound, VertexList) == 0x000070, "Member 'BPFL_EnvironmentUtility_C_GetWorldBound::VertexList' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetWorldBound, Max) == 0x000080, "Member 'BPFL_EnvironmentUtility_C_GetWorldBound::Max' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetWorldBound, Min) == 0x00008C, "Member 'BPFL_EnvironmentUtility_C_GetWorldBound::Min' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetWorldBound, Temp_int_Loop_Num_Variable) == 0x000098, "Member 'BPFL_EnvironmentUtility_C_GetWorldBound::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetWorldBound, Temp_int_Array_Index_Variable) == 0x00009C, "Member 'BPFL_EnvironmentUtility_C_GetWorldBound::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetWorldBound, Temp_int_Loop_Counter_Variable) == 0x0000A0, "Member 'BPFL_EnvironmentUtility_C_GetWorldBound::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetWorldBound, CallFunc_Add_IntInt_ReturnValue) == 0x0000A4, "Member 'BPFL_EnvironmentUtility_C_GetWorldBound::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetWorldBound, Temp_int_Array_Index_Variable_1) == 0x0000A8, "Member 'BPFL_EnvironmentUtility_C_GetWorldBound::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetWorldBound, Temp_int_Loop_Num_Variable_1) == 0x0000AC, "Member 'BPFL_EnvironmentUtility_C_GetWorldBound::Temp_int_Loop_Num_Variable_1' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetWorldBound, CallFunc_Less_IntInt_ReturnValue) == 0x0000B0, "Member 'BPFL_EnvironmentUtility_C_GetWorldBound::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetWorldBound, CallFunc_BreakVector_X) == 0x0000B4, "Member 'BPFL_EnvironmentUtility_C_GetWorldBound::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetWorldBound, CallFunc_BreakVector_Y) == 0x0000B8, "Member 'BPFL_EnvironmentUtility_C_GetWorldBound::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetWorldBound, CallFunc_BreakVector_Z) == 0x0000BC, "Member 'BPFL_EnvironmentUtility_C_GetWorldBound::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetWorldBound, CallFunc_BreakVector_X_1) == 0x0000C0, "Member 'BPFL_EnvironmentUtility_C_GetWorldBound::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetWorldBound, CallFunc_BreakVector_Y_1) == 0x0000C4, "Member 'BPFL_EnvironmentUtility_C_GetWorldBound::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetWorldBound, CallFunc_BreakVector_Z_1) == 0x0000C8, "Member 'BPFL_EnvironmentUtility_C_GetWorldBound::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetWorldBound, CallFunc_Array_Length_ReturnValue) == 0x0000CC, "Member 'BPFL_EnvironmentUtility_C_GetWorldBound::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetWorldBound, CallFunc_BreakVector_X_2) == 0x0000D0, "Member 'BPFL_EnvironmentUtility_C_GetWorldBound::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetWorldBound, CallFunc_BreakVector_Y_2) == 0x0000D4, "Member 'BPFL_EnvironmentUtility_C_GetWorldBound::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetWorldBound, CallFunc_BreakVector_Z_2) == 0x0000D8, "Member 'BPFL_EnvironmentUtility_C_GetWorldBound::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetWorldBound, CallFunc_FMax_ReturnValue) == 0x0000DC, "Member 'BPFL_EnvironmentUtility_C_GetWorldBound::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetWorldBound, CallFunc_FMax_ReturnValue_1) == 0x0000E0, "Member 'BPFL_EnvironmentUtility_C_GetWorldBound::CallFunc_FMax_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetWorldBound, CallFunc_FMax_ReturnValue_2) == 0x0000E4, "Member 'BPFL_EnvironmentUtility_C_GetWorldBound::CallFunc_FMax_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetWorldBound, CallFunc_BreakVector_X_3) == 0x0000E8, "Member 'BPFL_EnvironmentUtility_C_GetWorldBound::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetWorldBound, CallFunc_BreakVector_Y_3) == 0x0000EC, "Member 'BPFL_EnvironmentUtility_C_GetWorldBound::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetWorldBound, CallFunc_BreakVector_Z_3) == 0x0000F0, "Member 'BPFL_EnvironmentUtility_C_GetWorldBound::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetWorldBound, CallFunc_MakeVector_ReturnValue) == 0x0000F4, "Member 'BPFL_EnvironmentUtility_C_GetWorldBound::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetWorldBound, CallFunc_FMin_ReturnValue) == 0x000100, "Member 'BPFL_EnvironmentUtility_C_GetWorldBound::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetWorldBound, CallFunc_FMin_ReturnValue_1) == 0x000104, "Member 'BPFL_EnvironmentUtility_C_GetWorldBound::CallFunc_FMin_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetWorldBound, CallFunc_FMin_ReturnValue_2) == 0x000108, "Member 'BPFL_EnvironmentUtility_C_GetWorldBound::CallFunc_FMin_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetWorldBound, CallFunc_MakeVector_ReturnValue_1) == 0x00010C, "Member 'BPFL_EnvironmentUtility_C_GetWorldBound::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetWorldBound, CallFunc_BreakTransform_Location) == 0x000118, "Member 'BPFL_EnvironmentUtility_C_GetWorldBound::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetWorldBound, CallFunc_BreakTransform_Rotation) == 0x000124, "Member 'BPFL_EnvironmentUtility_C_GetWorldBound::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetWorldBound, CallFunc_BreakTransform_Scale) == 0x000130, "Member 'BPFL_EnvironmentUtility_C_GetWorldBound::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetWorldBound, CallFunc_BreakVector_X_4) == 0x00013C, "Member 'BPFL_EnvironmentUtility_C_GetWorldBound::CallFunc_BreakVector_X_4' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetWorldBound, CallFunc_BreakVector_Y_4) == 0x000140, "Member 'BPFL_EnvironmentUtility_C_GetWorldBound::CallFunc_BreakVector_Y_4' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetWorldBound, CallFunc_BreakVector_Z_4) == 0x000144, "Member 'BPFL_EnvironmentUtility_C_GetWorldBound::CallFunc_BreakVector_Z_4' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetWorldBound, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000148, "Member 'BPFL_EnvironmentUtility_C_GetWorldBound::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetWorldBound, CallFunc_MakeVector_ReturnValue_2) == 0x000154, "Member 'BPFL_EnvironmentUtility_C_GetWorldBound::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetWorldBound, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x000160, "Member 'BPFL_EnvironmentUtility_C_GetWorldBound::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetWorldBound, CallFunc_Array_Length_ReturnValue_1) == 0x00016C, "Member 'BPFL_EnvironmentUtility_C_GetWorldBound::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetWorldBound, Temp_int_Loop_Counter_Variable_1) == 0x000170, "Member 'BPFL_EnvironmentUtility_C_GetWorldBound::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetWorldBound, CallFunc_Array_Add_ReturnValue) == 0x000174, "Member 'BPFL_EnvironmentUtility_C_GetWorldBound::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetWorldBound, CallFunc_Less_IntInt_ReturnValue_1) == 0x000178, "Member 'BPFL_EnvironmentUtility_C_GetWorldBound::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetWorldBound, CallFunc_Add_IntInt_ReturnValue_1) == 0x00017C, "Member 'BPFL_EnvironmentUtility_C_GetWorldBound::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetWorldBound, CallFunc_BreakVector_X_5) == 0x000180, "Member 'BPFL_EnvironmentUtility_C_GetWorldBound::CallFunc_BreakVector_X_5' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetWorldBound, CallFunc_BreakVector_Y_5) == 0x000184, "Member 'BPFL_EnvironmentUtility_C_GetWorldBound::CallFunc_BreakVector_Y_5' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetWorldBound, CallFunc_BreakVector_Z_5) == 0x000188, "Member 'BPFL_EnvironmentUtility_C_GetWorldBound::CallFunc_BreakVector_Z_5' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetWorldBound, CallFunc_BreakVector_X_6) == 0x00018C, "Member 'BPFL_EnvironmentUtility_C_GetWorldBound::CallFunc_BreakVector_X_6' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetWorldBound, CallFunc_BreakVector_Y_6) == 0x000190, "Member 'BPFL_EnvironmentUtility_C_GetWorldBound::CallFunc_BreakVector_Y_6' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetWorldBound, CallFunc_BreakVector_Z_6) == 0x000194, "Member 'BPFL_EnvironmentUtility_C_GetWorldBound::CallFunc_BreakVector_Z_6' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetWorldBound, CallFunc_MakeVector_ReturnValue_3) == 0x000198, "Member 'BPFL_EnvironmentUtility_C_GetWorldBound::CallFunc_MakeVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetWorldBound, CallFunc_Array_Add_ReturnValue_1) == 0x0001A4, "Member 'BPFL_EnvironmentUtility_C_GetWorldBound::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetWorldBound, CallFunc_BreakVector_X_7) == 0x0001A8, "Member 'BPFL_EnvironmentUtility_C_GetWorldBound::CallFunc_BreakVector_X_7' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetWorldBound, CallFunc_BreakVector_Y_7) == 0x0001AC, "Member 'BPFL_EnvironmentUtility_C_GetWorldBound::CallFunc_BreakVector_Y_7' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetWorldBound, CallFunc_BreakVector_Z_7) == 0x0001B0, "Member 'BPFL_EnvironmentUtility_C_GetWorldBound::CallFunc_BreakVector_Z_7' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetWorldBound, CallFunc_BreakVector_X_8) == 0x0001B4, "Member 'BPFL_EnvironmentUtility_C_GetWorldBound::CallFunc_BreakVector_X_8' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetWorldBound, CallFunc_BreakVector_Y_8) == 0x0001B8, "Member 'BPFL_EnvironmentUtility_C_GetWorldBound::CallFunc_BreakVector_Y_8' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetWorldBound, CallFunc_BreakVector_Z_8) == 0x0001BC, "Member 'BPFL_EnvironmentUtility_C_GetWorldBound::CallFunc_BreakVector_Z_8' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetWorldBound, CallFunc_MakeVector_ReturnValue_4) == 0x0001C0, "Member 'BPFL_EnvironmentUtility_C_GetWorldBound::CallFunc_MakeVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetWorldBound, CallFunc_BreakVector_X_9) == 0x0001CC, "Member 'BPFL_EnvironmentUtility_C_GetWorldBound::CallFunc_BreakVector_X_9' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetWorldBound, CallFunc_BreakVector_Y_9) == 0x0001D0, "Member 'BPFL_EnvironmentUtility_C_GetWorldBound::CallFunc_BreakVector_Y_9' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetWorldBound, CallFunc_BreakVector_Z_9) == 0x0001D4, "Member 'BPFL_EnvironmentUtility_C_GetWorldBound::CallFunc_BreakVector_Z_9' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetWorldBound, CallFunc_Array_Add_ReturnValue_2) == 0x0001D8, "Member 'BPFL_EnvironmentUtility_C_GetWorldBound::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetWorldBound, CallFunc_BreakVector_X_10) == 0x0001DC, "Member 'BPFL_EnvironmentUtility_C_GetWorldBound::CallFunc_BreakVector_X_10' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetWorldBound, CallFunc_BreakVector_Y_10) == 0x0001E0, "Member 'BPFL_EnvironmentUtility_C_GetWorldBound::CallFunc_BreakVector_Y_10' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetWorldBound, CallFunc_BreakVector_Z_10) == 0x0001E4, "Member 'BPFL_EnvironmentUtility_C_GetWorldBound::CallFunc_BreakVector_Z_10' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetWorldBound, CallFunc_MakeVector_ReturnValue_5) == 0x0001E8, "Member 'BPFL_EnvironmentUtility_C_GetWorldBound::CallFunc_MakeVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetWorldBound, CallFunc_BreakVector_X_11) == 0x0001F4, "Member 'BPFL_EnvironmentUtility_C_GetWorldBound::CallFunc_BreakVector_X_11' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetWorldBound, CallFunc_BreakVector_Y_11) == 0x0001F8, "Member 'BPFL_EnvironmentUtility_C_GetWorldBound::CallFunc_BreakVector_Y_11' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetWorldBound, CallFunc_BreakVector_Z_11) == 0x0001FC, "Member 'BPFL_EnvironmentUtility_C_GetWorldBound::CallFunc_BreakVector_Z_11' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetWorldBound, CallFunc_Array_Add_ReturnValue_3) == 0x000200, "Member 'BPFL_EnvironmentUtility_C_GetWorldBound::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetWorldBound, CallFunc_BreakVector_X_12) == 0x000204, "Member 'BPFL_EnvironmentUtility_C_GetWorldBound::CallFunc_BreakVector_X_12' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetWorldBound, CallFunc_BreakVector_Y_12) == 0x000208, "Member 'BPFL_EnvironmentUtility_C_GetWorldBound::CallFunc_BreakVector_Y_12' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetWorldBound, CallFunc_BreakVector_Z_12) == 0x00020C, "Member 'BPFL_EnvironmentUtility_C_GetWorldBound::CallFunc_BreakVector_Z_12' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetWorldBound, CallFunc_MakeVector_ReturnValue_6) == 0x000210, "Member 'BPFL_EnvironmentUtility_C_GetWorldBound::CallFunc_MakeVector_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetWorldBound, CallFunc_BreakVector_X_13) == 0x00021C, "Member 'BPFL_EnvironmentUtility_C_GetWorldBound::CallFunc_BreakVector_X_13' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetWorldBound, CallFunc_BreakVector_Y_13) == 0x000220, "Member 'BPFL_EnvironmentUtility_C_GetWorldBound::CallFunc_BreakVector_Y_13' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetWorldBound, CallFunc_BreakVector_Z_13) == 0x000224, "Member 'BPFL_EnvironmentUtility_C_GetWorldBound::CallFunc_BreakVector_Z_13' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetWorldBound, CallFunc_Array_Add_ReturnValue_4) == 0x000228, "Member 'BPFL_EnvironmentUtility_C_GetWorldBound::CallFunc_Array_Add_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetWorldBound, CallFunc_BreakVector_X_14) == 0x00022C, "Member 'BPFL_EnvironmentUtility_C_GetWorldBound::CallFunc_BreakVector_X_14' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetWorldBound, CallFunc_BreakVector_Y_14) == 0x000230, "Member 'BPFL_EnvironmentUtility_C_GetWorldBound::CallFunc_BreakVector_Y_14' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetWorldBound, CallFunc_BreakVector_Z_14) == 0x000234, "Member 'BPFL_EnvironmentUtility_C_GetWorldBound::CallFunc_BreakVector_Z_14' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetWorldBound, CallFunc_MakeVector_ReturnValue_7) == 0x000238, "Member 'BPFL_EnvironmentUtility_C_GetWorldBound::CallFunc_MakeVector_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetWorldBound, CallFunc_BreakVector_X_15) == 0x000244, "Member 'BPFL_EnvironmentUtility_C_GetWorldBound::CallFunc_BreakVector_X_15' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetWorldBound, CallFunc_BreakVector_Y_15) == 0x000248, "Member 'BPFL_EnvironmentUtility_C_GetWorldBound::CallFunc_BreakVector_Y_15' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetWorldBound, CallFunc_BreakVector_Z_15) == 0x00024C, "Member 'BPFL_EnvironmentUtility_C_GetWorldBound::CallFunc_BreakVector_Z_15' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetWorldBound, CallFunc_Array_Add_ReturnValue_5) == 0x000250, "Member 'BPFL_EnvironmentUtility_C_GetWorldBound::CallFunc_Array_Add_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetWorldBound, CallFunc_BreakVector_X_16) == 0x000254, "Member 'BPFL_EnvironmentUtility_C_GetWorldBound::CallFunc_BreakVector_X_16' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetWorldBound, CallFunc_BreakVector_Y_16) == 0x000258, "Member 'BPFL_EnvironmentUtility_C_GetWorldBound::CallFunc_BreakVector_Y_16' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetWorldBound, CallFunc_BreakVector_Z_16) == 0x00025C, "Member 'BPFL_EnvironmentUtility_C_GetWorldBound::CallFunc_BreakVector_Z_16' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetWorldBound, CallFunc_MakeVector_ReturnValue_8) == 0x000260, "Member 'BPFL_EnvironmentUtility_C_GetWorldBound::CallFunc_MakeVector_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetWorldBound, CallFunc_Array_Add_ReturnValue_6) == 0x00026C, "Member 'BPFL_EnvironmentUtility_C_GetWorldBound::CallFunc_Array_Add_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetWorldBound, CallFunc_Array_Add_ReturnValue_7) == 0x000270, "Member 'BPFL_EnvironmentUtility_C_GetWorldBound::CallFunc_Array_Add_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetWorldBound, CallFunc_BreakTransform_Location_1) == 0x000274, "Member 'BPFL_EnvironmentUtility_C_GetWorldBound::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetWorldBound, CallFunc_BreakTransform_Rotation_1) == 0x000280, "Member 'BPFL_EnvironmentUtility_C_GetWorldBound::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetWorldBound, CallFunc_BreakTransform_Scale_1) == 0x00028C, "Member 'BPFL_EnvironmentUtility_C_GetWorldBound::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetWorldBound, CallFunc_Add_VectorVector_ReturnValue) == 0x000298, "Member 'BPFL_EnvironmentUtility_C_GetWorldBound::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetWorldBound, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0002A4, "Member 'BPFL_EnvironmentUtility_C_GetWorldBound::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");

// Function BPFL_EnvironmentUtility.BPFL_EnvironmentUtility_C.AddStaticMeshBound
// 0x0110 (0x0110 - 0x0000)
struct BPFL_EnvironmentUtility_C_AddStaticMeshBound final
{
public:
	class UStaticMeshComponent*                   StaticMesh;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                BaseBoundMin;                                      // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                BaseBoundMax;                                      // 0x0014(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                BoundMin;                                          // 0x0028(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                BoundMax;                                          // 0x0034(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8358[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetLocalBounds_Min;                       // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocalBounds_Max;                       // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8359[0xC];                                     // 0x0074(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0080(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetWorldBound_BoundMin;                   // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetWorldBound_BoundMax;                   // 0x00BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_2;                          // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_3;                          // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_3;                          // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_3;                          // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue;                         // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue_1;                       // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue_2;                       // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue_1;                       // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue_2;                       // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0104(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_EnvironmentUtility_C_AddStaticMeshBound) == 0x000010, "Wrong alignment on BPFL_EnvironmentUtility_C_AddStaticMeshBound");
static_assert(sizeof(BPFL_EnvironmentUtility_C_AddStaticMeshBound) == 0x000110, "Wrong size on BPFL_EnvironmentUtility_C_AddStaticMeshBound");
static_assert(offsetof(BPFL_EnvironmentUtility_C_AddStaticMeshBound, StaticMesh) == 0x000000, "Member 'BPFL_EnvironmentUtility_C_AddStaticMeshBound::StaticMesh' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_AddStaticMeshBound, BaseBoundMin) == 0x000008, "Member 'BPFL_EnvironmentUtility_C_AddStaticMeshBound::BaseBoundMin' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_AddStaticMeshBound, BaseBoundMax) == 0x000014, "Member 'BPFL_EnvironmentUtility_C_AddStaticMeshBound::BaseBoundMax' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_AddStaticMeshBound, __WorldContext) == 0x000020, "Member 'BPFL_EnvironmentUtility_C_AddStaticMeshBound::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_AddStaticMeshBound, BoundMin) == 0x000028, "Member 'BPFL_EnvironmentUtility_C_AddStaticMeshBound::BoundMin' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_AddStaticMeshBound, BoundMax) == 0x000034, "Member 'BPFL_EnvironmentUtility_C_AddStaticMeshBound::BoundMax' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_AddStaticMeshBound, CallFunc_BreakVector_X) == 0x000040, "Member 'BPFL_EnvironmentUtility_C_AddStaticMeshBound::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_AddStaticMeshBound, CallFunc_BreakVector_Y) == 0x000044, "Member 'BPFL_EnvironmentUtility_C_AddStaticMeshBound::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_AddStaticMeshBound, CallFunc_BreakVector_Z) == 0x000048, "Member 'BPFL_EnvironmentUtility_C_AddStaticMeshBound::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_AddStaticMeshBound, CallFunc_BreakVector_X_1) == 0x00004C, "Member 'BPFL_EnvironmentUtility_C_AddStaticMeshBound::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_AddStaticMeshBound, CallFunc_BreakVector_Y_1) == 0x000050, "Member 'BPFL_EnvironmentUtility_C_AddStaticMeshBound::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_AddStaticMeshBound, CallFunc_BreakVector_Z_1) == 0x000054, "Member 'BPFL_EnvironmentUtility_C_AddStaticMeshBound::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_AddStaticMeshBound, CallFunc_IsValid_ReturnValue) == 0x000058, "Member 'BPFL_EnvironmentUtility_C_AddStaticMeshBound::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_AddStaticMeshBound, CallFunc_GetLocalBounds_Min) == 0x00005C, "Member 'BPFL_EnvironmentUtility_C_AddStaticMeshBound::CallFunc_GetLocalBounds_Min' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_AddStaticMeshBound, CallFunc_GetLocalBounds_Max) == 0x000068, "Member 'BPFL_EnvironmentUtility_C_AddStaticMeshBound::CallFunc_GetLocalBounds_Max' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_AddStaticMeshBound, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000080, "Member 'BPFL_EnvironmentUtility_C_AddStaticMeshBound::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_AddStaticMeshBound, CallFunc_GetWorldBound_BoundMin) == 0x0000B0, "Member 'BPFL_EnvironmentUtility_C_AddStaticMeshBound::CallFunc_GetWorldBound_BoundMin' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_AddStaticMeshBound, CallFunc_GetWorldBound_BoundMax) == 0x0000BC, "Member 'BPFL_EnvironmentUtility_C_AddStaticMeshBound::CallFunc_GetWorldBound_BoundMax' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_AddStaticMeshBound, CallFunc_BreakVector_X_2) == 0x0000C8, "Member 'BPFL_EnvironmentUtility_C_AddStaticMeshBound::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_AddStaticMeshBound, CallFunc_BreakVector_Y_2) == 0x0000CC, "Member 'BPFL_EnvironmentUtility_C_AddStaticMeshBound::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_AddStaticMeshBound, CallFunc_BreakVector_Z_2) == 0x0000D0, "Member 'BPFL_EnvironmentUtility_C_AddStaticMeshBound::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_AddStaticMeshBound, CallFunc_BreakVector_X_3) == 0x0000D4, "Member 'BPFL_EnvironmentUtility_C_AddStaticMeshBound::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_AddStaticMeshBound, CallFunc_BreakVector_Y_3) == 0x0000D8, "Member 'BPFL_EnvironmentUtility_C_AddStaticMeshBound::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_AddStaticMeshBound, CallFunc_BreakVector_Z_3) == 0x0000DC, "Member 'BPFL_EnvironmentUtility_C_AddStaticMeshBound::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_AddStaticMeshBound, CallFunc_FMax_ReturnValue) == 0x0000E0, "Member 'BPFL_EnvironmentUtility_C_AddStaticMeshBound::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_AddStaticMeshBound, CallFunc_FMin_ReturnValue) == 0x0000E4, "Member 'BPFL_EnvironmentUtility_C_AddStaticMeshBound::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_AddStaticMeshBound, CallFunc_FMin_ReturnValue_1) == 0x0000E8, "Member 'BPFL_EnvironmentUtility_C_AddStaticMeshBound::CallFunc_FMin_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_AddStaticMeshBound, CallFunc_FMin_ReturnValue_2) == 0x0000EC, "Member 'BPFL_EnvironmentUtility_C_AddStaticMeshBound::CallFunc_FMin_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_AddStaticMeshBound, CallFunc_FMax_ReturnValue_1) == 0x0000F0, "Member 'BPFL_EnvironmentUtility_C_AddStaticMeshBound::CallFunc_FMax_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_AddStaticMeshBound, CallFunc_MakeVector_ReturnValue) == 0x0000F4, "Member 'BPFL_EnvironmentUtility_C_AddStaticMeshBound::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_AddStaticMeshBound, CallFunc_FMax_ReturnValue_2) == 0x000100, "Member 'BPFL_EnvironmentUtility_C_AddStaticMeshBound::CallFunc_FMax_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_AddStaticMeshBound, CallFunc_MakeVector_ReturnValue_1) == 0x000104, "Member 'BPFL_EnvironmentUtility_C_AddStaticMeshBound::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");

// Function BPFL_EnvironmentUtility.BPFL_EnvironmentUtility_C.AddInstancedStaticMeshBound
// 0x0150 (0x0150 - 0x0000)
struct BPFL_EnvironmentUtility_C_AddInstancedStaticMeshBound final
{
public:
	class UInstancedStaticMeshComponent*          InstancedStaticMesh;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                BaseBoundMin;                                      // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                BaseBoundMax;                                      // 0x0014(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                BoundMin;                                          // 0x0028(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                BoundMax;                                          // 0x0034(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CalcBoundMax;                                      // 0x0040(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CalcBoundMin;                                      // 0x004C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InstanceCount;                                     // 0x0058(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_835A[0x3];                                     // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X;                            // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocalBounds_Min;                       // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocalBounds_Max;                       // 0x0084(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_835B[0xC];                                     // 0x0094(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetInstanceTransform_OutInstanceTransform; // 0x00A0(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetInstanceTransform_ReturnValue;         // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_835C[0x3];                                     // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetInstanceCount_ReturnValue;             // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetWorldBound_BoundMin;                   // 0x00D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetWorldBound_BoundMax;                   // 0x00E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_2;                          // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_3;                          // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_3;                          // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_3;                          // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue;                         // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue_1;                       // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue_2;                       // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue_1;                       // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x011C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue_2;                       // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x012C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPFL_EnvironmentUtility_C_AddInstancedStaticMeshBound) == 0x000010, "Wrong alignment on BPFL_EnvironmentUtility_C_AddInstancedStaticMeshBound");
static_assert(sizeof(BPFL_EnvironmentUtility_C_AddInstancedStaticMeshBound) == 0x000150, "Wrong size on BPFL_EnvironmentUtility_C_AddInstancedStaticMeshBound");
static_assert(offsetof(BPFL_EnvironmentUtility_C_AddInstancedStaticMeshBound, InstancedStaticMesh) == 0x000000, "Member 'BPFL_EnvironmentUtility_C_AddInstancedStaticMeshBound::InstancedStaticMesh' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_AddInstancedStaticMeshBound, BaseBoundMin) == 0x000008, "Member 'BPFL_EnvironmentUtility_C_AddInstancedStaticMeshBound::BaseBoundMin' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_AddInstancedStaticMeshBound, BaseBoundMax) == 0x000014, "Member 'BPFL_EnvironmentUtility_C_AddInstancedStaticMeshBound::BaseBoundMax' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_AddInstancedStaticMeshBound, __WorldContext) == 0x000020, "Member 'BPFL_EnvironmentUtility_C_AddInstancedStaticMeshBound::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_AddInstancedStaticMeshBound, BoundMin) == 0x000028, "Member 'BPFL_EnvironmentUtility_C_AddInstancedStaticMeshBound::BoundMin' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_AddInstancedStaticMeshBound, BoundMax) == 0x000034, "Member 'BPFL_EnvironmentUtility_C_AddInstancedStaticMeshBound::BoundMax' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_AddInstancedStaticMeshBound, CalcBoundMax) == 0x000040, "Member 'BPFL_EnvironmentUtility_C_AddInstancedStaticMeshBound::CalcBoundMax' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_AddInstancedStaticMeshBound, CalcBoundMin) == 0x00004C, "Member 'BPFL_EnvironmentUtility_C_AddInstancedStaticMeshBound::CalcBoundMin' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_AddInstancedStaticMeshBound, InstanceCount) == 0x000058, "Member 'BPFL_EnvironmentUtility_C_AddInstancedStaticMeshBound::InstanceCount' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_AddInstancedStaticMeshBound, CallFunc_IsValid_ReturnValue) == 0x00005C, "Member 'BPFL_EnvironmentUtility_C_AddInstancedStaticMeshBound::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_AddInstancedStaticMeshBound, CallFunc_BreakVector_X) == 0x000060, "Member 'BPFL_EnvironmentUtility_C_AddInstancedStaticMeshBound::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_AddInstancedStaticMeshBound, CallFunc_BreakVector_Y) == 0x000064, "Member 'BPFL_EnvironmentUtility_C_AddInstancedStaticMeshBound::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_AddInstancedStaticMeshBound, CallFunc_BreakVector_Z) == 0x000068, "Member 'BPFL_EnvironmentUtility_C_AddInstancedStaticMeshBound::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_AddInstancedStaticMeshBound, CallFunc_BreakVector_X_1) == 0x00006C, "Member 'BPFL_EnvironmentUtility_C_AddInstancedStaticMeshBound::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_AddInstancedStaticMeshBound, CallFunc_BreakVector_Y_1) == 0x000070, "Member 'BPFL_EnvironmentUtility_C_AddInstancedStaticMeshBound::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_AddInstancedStaticMeshBound, CallFunc_BreakVector_Z_1) == 0x000074, "Member 'BPFL_EnvironmentUtility_C_AddInstancedStaticMeshBound::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_AddInstancedStaticMeshBound, CallFunc_GetLocalBounds_Min) == 0x000078, "Member 'BPFL_EnvironmentUtility_C_AddInstancedStaticMeshBound::CallFunc_GetLocalBounds_Min' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_AddInstancedStaticMeshBound, CallFunc_GetLocalBounds_Max) == 0x000084, "Member 'BPFL_EnvironmentUtility_C_AddInstancedStaticMeshBound::CallFunc_GetLocalBounds_Max' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_AddInstancedStaticMeshBound, Temp_int_Variable) == 0x000090, "Member 'BPFL_EnvironmentUtility_C_AddInstancedStaticMeshBound::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_AddInstancedStaticMeshBound, CallFunc_GetInstanceTransform_OutInstanceTransform) == 0x0000A0, "Member 'BPFL_EnvironmentUtility_C_AddInstancedStaticMeshBound::CallFunc_GetInstanceTransform_OutInstanceTransform' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_AddInstancedStaticMeshBound, CallFunc_GetInstanceTransform_ReturnValue) == 0x0000D0, "Member 'BPFL_EnvironmentUtility_C_AddInstancedStaticMeshBound::CallFunc_GetInstanceTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_AddInstancedStaticMeshBound, CallFunc_GetInstanceCount_ReturnValue) == 0x0000D4, "Member 'BPFL_EnvironmentUtility_C_AddInstancedStaticMeshBound::CallFunc_GetInstanceCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_AddInstancedStaticMeshBound, CallFunc_GetWorldBound_BoundMin) == 0x0000D8, "Member 'BPFL_EnvironmentUtility_C_AddInstancedStaticMeshBound::CallFunc_GetWorldBound_BoundMin' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_AddInstancedStaticMeshBound, CallFunc_GetWorldBound_BoundMax) == 0x0000E4, "Member 'BPFL_EnvironmentUtility_C_AddInstancedStaticMeshBound::CallFunc_GetWorldBound_BoundMax' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_AddInstancedStaticMeshBound, CallFunc_BreakVector_X_2) == 0x0000F0, "Member 'BPFL_EnvironmentUtility_C_AddInstancedStaticMeshBound::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_AddInstancedStaticMeshBound, CallFunc_BreakVector_Y_2) == 0x0000F4, "Member 'BPFL_EnvironmentUtility_C_AddInstancedStaticMeshBound::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_AddInstancedStaticMeshBound, CallFunc_BreakVector_Z_2) == 0x0000F8, "Member 'BPFL_EnvironmentUtility_C_AddInstancedStaticMeshBound::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_AddInstancedStaticMeshBound, CallFunc_BreakVector_X_3) == 0x0000FC, "Member 'BPFL_EnvironmentUtility_C_AddInstancedStaticMeshBound::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_AddInstancedStaticMeshBound, CallFunc_BreakVector_Y_3) == 0x000100, "Member 'BPFL_EnvironmentUtility_C_AddInstancedStaticMeshBound::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_AddInstancedStaticMeshBound, CallFunc_BreakVector_Z_3) == 0x000104, "Member 'BPFL_EnvironmentUtility_C_AddInstancedStaticMeshBound::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_AddInstancedStaticMeshBound, CallFunc_FMax_ReturnValue) == 0x000108, "Member 'BPFL_EnvironmentUtility_C_AddInstancedStaticMeshBound::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_AddInstancedStaticMeshBound, CallFunc_FMin_ReturnValue) == 0x00010C, "Member 'BPFL_EnvironmentUtility_C_AddInstancedStaticMeshBound::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_AddInstancedStaticMeshBound, CallFunc_FMin_ReturnValue_1) == 0x000110, "Member 'BPFL_EnvironmentUtility_C_AddInstancedStaticMeshBound::CallFunc_FMin_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_AddInstancedStaticMeshBound, CallFunc_FMin_ReturnValue_2) == 0x000114, "Member 'BPFL_EnvironmentUtility_C_AddInstancedStaticMeshBound::CallFunc_FMin_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_AddInstancedStaticMeshBound, CallFunc_FMax_ReturnValue_1) == 0x000118, "Member 'BPFL_EnvironmentUtility_C_AddInstancedStaticMeshBound::CallFunc_FMax_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_AddInstancedStaticMeshBound, CallFunc_MakeVector_ReturnValue) == 0x00011C, "Member 'BPFL_EnvironmentUtility_C_AddInstancedStaticMeshBound::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_AddInstancedStaticMeshBound, CallFunc_FMax_ReturnValue_2) == 0x000128, "Member 'BPFL_EnvironmentUtility_C_AddInstancedStaticMeshBound::CallFunc_FMax_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_AddInstancedStaticMeshBound, CallFunc_MakeVector_ReturnValue_1) == 0x00012C, "Member 'BPFL_EnvironmentUtility_C_AddInstancedStaticMeshBound::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_AddInstancedStaticMeshBound, CallFunc_Add_IntInt_ReturnValue) == 0x000138, "Member 'BPFL_EnvironmentUtility_C_AddInstancedStaticMeshBound::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_AddInstancedStaticMeshBound, CallFunc_Subtract_IntInt_ReturnValue) == 0x00013C, "Member 'BPFL_EnvironmentUtility_C_AddInstancedStaticMeshBound::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_AddInstancedStaticMeshBound, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000140, "Member 'BPFL_EnvironmentUtility_C_AddInstancedStaticMeshBound::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BPFL_EnvironmentUtility.BPFL_EnvironmentUtility_C.GetTargetSplineComponent
// 0x0078 (0x0078 - 0x0000)
struct BPFL_EnvironmentUtility_C_GetTargetSplineComponent final
{
public:
	class USplineComponent*                       BaseSpline;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_SplineBase_C*                       ParentActor;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USplineComponent*                       TargetComponent;                                   // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseParentSpline;                                   // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_835D[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USplineComponent*                       TargetSpline;                                      // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class USplineComponent*>               Splines;                                           // 0x0030(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_835E[0x1];                                     // 0x0043(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_835F[0x3];                                     // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8360[0x3];                                     // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8361[0x3];                                     // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USplineComponent*>               CallFunc_K2_GetComponentsByClass_ReturnValue;      // 0x0060(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ComponentHasTag_ReturnValue;              // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPFL_EnvironmentUtility_C_GetTargetSplineComponent) == 0x000008, "Wrong alignment on BPFL_EnvironmentUtility_C_GetTargetSplineComponent");
static_assert(sizeof(BPFL_EnvironmentUtility_C_GetTargetSplineComponent) == 0x000078, "Wrong size on BPFL_EnvironmentUtility_C_GetTargetSplineComponent");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetTargetSplineComponent, BaseSpline) == 0x000000, "Member 'BPFL_EnvironmentUtility_C_GetTargetSplineComponent::BaseSpline' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetTargetSplineComponent, ParentActor) == 0x000008, "Member 'BPFL_EnvironmentUtility_C_GetTargetSplineComponent::ParentActor' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetTargetSplineComponent, __WorldContext) == 0x000010, "Member 'BPFL_EnvironmentUtility_C_GetTargetSplineComponent::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetTargetSplineComponent, TargetComponent) == 0x000018, "Member 'BPFL_EnvironmentUtility_C_GetTargetSplineComponent::TargetComponent' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetTargetSplineComponent, UseParentSpline) == 0x000020, "Member 'BPFL_EnvironmentUtility_C_GetTargetSplineComponent::UseParentSpline' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetTargetSplineComponent, TargetSpline) == 0x000028, "Member 'BPFL_EnvironmentUtility_C_GetTargetSplineComponent::TargetSpline' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetTargetSplineComponent, Splines) == 0x000030, "Member 'BPFL_EnvironmentUtility_C_GetTargetSplineComponent::Splines' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetTargetSplineComponent, Temp_bool_True_if_break_was_hit_Variable) == 0x000040, "Member 'BPFL_EnvironmentUtility_C_GetTargetSplineComponent::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetTargetSplineComponent, CallFunc_IsValid_ReturnValue) == 0x000041, "Member 'BPFL_EnvironmentUtility_C_GetTargetSplineComponent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetTargetSplineComponent, CallFunc_Not_PreBool_ReturnValue) == 0x000042, "Member 'BPFL_EnvironmentUtility_C_GetTargetSplineComponent::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetTargetSplineComponent, Temp_int_Array_Index_Variable) == 0x000044, "Member 'BPFL_EnvironmentUtility_C_GetTargetSplineComponent::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetTargetSplineComponent, Temp_int_Loop_Num_Variable) == 0x000048, "Member 'BPFL_EnvironmentUtility_C_GetTargetSplineComponent::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetTargetSplineComponent, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x00004C, "Member 'BPFL_EnvironmentUtility_C_GetTargetSplineComponent::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetTargetSplineComponent, Temp_int_Loop_Counter_Variable) == 0x000050, "Member 'BPFL_EnvironmentUtility_C_GetTargetSplineComponent::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetTargetSplineComponent, CallFunc_Less_IntInt_ReturnValue) == 0x000054, "Member 'BPFL_EnvironmentUtility_C_GetTargetSplineComponent::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetTargetSplineComponent, CallFunc_Add_IntInt_ReturnValue) == 0x000058, "Member 'BPFL_EnvironmentUtility_C_GetTargetSplineComponent::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetTargetSplineComponent, CallFunc_BooleanAND_ReturnValue) == 0x00005C, "Member 'BPFL_EnvironmentUtility_C_GetTargetSplineComponent::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetTargetSplineComponent, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x000060, "Member 'BPFL_EnvironmentUtility_C_GetTargetSplineComponent::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetTargetSplineComponent, CallFunc_Array_Length_ReturnValue) == 0x000070, "Member 'BPFL_EnvironmentUtility_C_GetTargetSplineComponent::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetTargetSplineComponent, CallFunc_ComponentHasTag_ReturnValue) == 0x000074, "Member 'BPFL_EnvironmentUtility_C_GetTargetSplineComponent::CallFunc_ComponentHasTag_ReturnValue' has a wrong offset!");

// Function BPFL_EnvironmentUtility.BPFL_EnvironmentUtility_C.SetupSplineMaterial
// 0x0060 (0x0060 - 0x0000)
struct BPFL_EnvironmentUtility_C_SetupSplineMaterial final
{
public:
	class UPrimitiveComponent*                    Primitive;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInterface*>             Materials;                                         // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     SetMaterial;                                       // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NumMaterial;                                       // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8362[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8363[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8364[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumMaterials_ReturnValue;              // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Min_ReturnValue;                          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8365[0x3];                                     // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_EnvironmentUtility_C_SetupSplineMaterial) == 0x000008, "Wrong alignment on BPFL_EnvironmentUtility_C_SetupSplineMaterial");
static_assert(sizeof(BPFL_EnvironmentUtility_C_SetupSplineMaterial) == 0x000060, "Wrong size on BPFL_EnvironmentUtility_C_SetupSplineMaterial");
static_assert(offsetof(BPFL_EnvironmentUtility_C_SetupSplineMaterial, Primitive) == 0x000000, "Member 'BPFL_EnvironmentUtility_C_SetupSplineMaterial::Primitive' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_SetupSplineMaterial, Materials) == 0x000008, "Member 'BPFL_EnvironmentUtility_C_SetupSplineMaterial::Materials' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_SetupSplineMaterial, __WorldContext) == 0x000018, "Member 'BPFL_EnvironmentUtility_C_SetupSplineMaterial::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_SetupSplineMaterial, SetMaterial) == 0x000020, "Member 'BPFL_EnvironmentUtility_C_SetupSplineMaterial::SetMaterial' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_SetupSplineMaterial, NumMaterial) == 0x000028, "Member 'BPFL_EnvironmentUtility_C_SetupSplineMaterial::NumMaterial' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_SetupSplineMaterial, CallFunc_IsValid_ReturnValue) == 0x00002C, "Member 'BPFL_EnvironmentUtility_C_SetupSplineMaterial::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_SetupSplineMaterial, Temp_int_Variable) == 0x000030, "Member 'BPFL_EnvironmentUtility_C_SetupSplineMaterial::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_SetupSplineMaterial, CallFunc_Array_Get_Item) == 0x000038, "Member 'BPFL_EnvironmentUtility_C_SetupSplineMaterial::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_SetupSplineMaterial, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000040, "Member 'BPFL_EnvironmentUtility_C_SetupSplineMaterial::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_SetupSplineMaterial, CallFunc_Add_IntInt_ReturnValue) == 0x000044, "Member 'BPFL_EnvironmentUtility_C_SetupSplineMaterial::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_SetupSplineMaterial, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'BPFL_EnvironmentUtility_C_SetupSplineMaterial::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_SetupSplineMaterial, CallFunc_GetNumMaterials_ReturnValue) == 0x00004C, "Member 'BPFL_EnvironmentUtility_C_SetupSplineMaterial::CallFunc_GetNumMaterials_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_SetupSplineMaterial, CallFunc_Min_ReturnValue) == 0x000050, "Member 'BPFL_EnvironmentUtility_C_SetupSplineMaterial::CallFunc_Min_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_SetupSplineMaterial, CallFunc_IsValid_ReturnValue_1) == 0x000054, "Member 'BPFL_EnvironmentUtility_C_SetupSplineMaterial::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_SetupSplineMaterial, CallFunc_Subtract_IntInt_ReturnValue) == 0x000058, "Member 'BPFL_EnvironmentUtility_C_SetupSplineMaterial::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");

// Function BPFL_EnvironmentUtility.BPFL_EnvironmentUtility_C.CalcStaticMeshBound
// 0x00B8 (0x00B8 - 0x0000)
struct BPFL_EnvironmentUtility_C_CalcStaticMeshBound final
{
public:
	TArray<class UStaticMeshComponent*>           StaticMeshes;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                BoxCenter;                                         // 0x0018(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                BoxExtent;                                         // 0x0024(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                BoxMin;                                            // 0x0030(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                BoxMax;                                            // 0x003C(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                BoundMax;                                          // 0x0048(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                BoundMin;                                          // 0x0054(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8366[0x3];                                     // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Divide_VectorFloat_ReturnValue;           // 0x0084(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_AddStaticMeshBound_BoundMin;              // 0x0090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_AddStaticMeshBound_BoundMax;              // 0x009C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_EnvironmentUtility_C_CalcStaticMeshBound) == 0x000008, "Wrong alignment on BPFL_EnvironmentUtility_C_CalcStaticMeshBound");
static_assert(sizeof(BPFL_EnvironmentUtility_C_CalcStaticMeshBound) == 0x0000B8, "Wrong size on BPFL_EnvironmentUtility_C_CalcStaticMeshBound");
static_assert(offsetof(BPFL_EnvironmentUtility_C_CalcStaticMeshBound, StaticMeshes) == 0x000000, "Member 'BPFL_EnvironmentUtility_C_CalcStaticMeshBound::StaticMeshes' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_CalcStaticMeshBound, __WorldContext) == 0x000010, "Member 'BPFL_EnvironmentUtility_C_CalcStaticMeshBound::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_CalcStaticMeshBound, BoxCenter) == 0x000018, "Member 'BPFL_EnvironmentUtility_C_CalcStaticMeshBound::BoxCenter' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_CalcStaticMeshBound, BoxExtent) == 0x000024, "Member 'BPFL_EnvironmentUtility_C_CalcStaticMeshBound::BoxExtent' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_CalcStaticMeshBound, BoxMin) == 0x000030, "Member 'BPFL_EnvironmentUtility_C_CalcStaticMeshBound::BoxMin' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_CalcStaticMeshBound, BoxMax) == 0x00003C, "Member 'BPFL_EnvironmentUtility_C_CalcStaticMeshBound::BoxMax' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_CalcStaticMeshBound, BoundMax) == 0x000048, "Member 'BPFL_EnvironmentUtility_C_CalcStaticMeshBound::BoundMax' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_CalcStaticMeshBound, BoundMin) == 0x000054, "Member 'BPFL_EnvironmentUtility_C_CalcStaticMeshBound::BoundMin' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_CalcStaticMeshBound, CallFunc_Array_Length_ReturnValue) == 0x000060, "Member 'BPFL_EnvironmentUtility_C_CalcStaticMeshBound::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_CalcStaticMeshBound, Temp_int_Array_Index_Variable) == 0x000064, "Member 'BPFL_EnvironmentUtility_C_CalcStaticMeshBound::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_CalcStaticMeshBound, Temp_int_Loop_Num_Variable) == 0x000068, "Member 'BPFL_EnvironmentUtility_C_CalcStaticMeshBound::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_CalcStaticMeshBound, Temp_int_Loop_Counter_Variable) == 0x00006C, "Member 'BPFL_EnvironmentUtility_C_CalcStaticMeshBound::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_CalcStaticMeshBound, CallFunc_Less_IntInt_ReturnValue) == 0x000070, "Member 'BPFL_EnvironmentUtility_C_CalcStaticMeshBound::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_CalcStaticMeshBound, CallFunc_Add_IntInt_ReturnValue) == 0x000074, "Member 'BPFL_EnvironmentUtility_C_CalcStaticMeshBound::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_CalcStaticMeshBound, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000078, "Member 'BPFL_EnvironmentUtility_C_CalcStaticMeshBound::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_CalcStaticMeshBound, CallFunc_Divide_VectorFloat_ReturnValue) == 0x000084, "Member 'BPFL_EnvironmentUtility_C_CalcStaticMeshBound::CallFunc_Divide_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_CalcStaticMeshBound, CallFunc_AddStaticMeshBound_BoundMin) == 0x000090, "Member 'BPFL_EnvironmentUtility_C_CalcStaticMeshBound::CallFunc_AddStaticMeshBound_BoundMin' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_CalcStaticMeshBound, CallFunc_AddStaticMeshBound_BoundMax) == 0x00009C, "Member 'BPFL_EnvironmentUtility_C_CalcStaticMeshBound::CallFunc_AddStaticMeshBound_BoundMax' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_CalcStaticMeshBound, CallFunc_Add_VectorVector_ReturnValue) == 0x0000A8, "Member 'BPFL_EnvironmentUtility_C_CalcStaticMeshBound::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");

// Function BPFL_EnvironmentUtility.BPFL_EnvironmentUtility_C.DirtyParentSplineActors
// 0x0048 (0x0048 - 0x0000)
struct BPFL_EnvironmentUtility_C_DirtyParentSplineActors final
{
public:
	class AActor*                                 SelfActor;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_SplineBase_C*                       SplineActor;                                       // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_SplineBase_C*>               CallFunc_GetAllActorsOfClass_OutActors;            // 0x0018(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8367[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8368[0x3];                                     // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPFL_EnvironmentUtility_C_DirtyParentSplineActors) == 0x000008, "Wrong alignment on BPFL_EnvironmentUtility_C_DirtyParentSplineActors");
static_assert(sizeof(BPFL_EnvironmentUtility_C_DirtyParentSplineActors) == 0x000048, "Wrong size on BPFL_EnvironmentUtility_C_DirtyParentSplineActors");
static_assert(offsetof(BPFL_EnvironmentUtility_C_DirtyParentSplineActors, SelfActor) == 0x000000, "Member 'BPFL_EnvironmentUtility_C_DirtyParentSplineActors::SelfActor' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_DirtyParentSplineActors, __WorldContext) == 0x000008, "Member 'BPFL_EnvironmentUtility_C_DirtyParentSplineActors::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_DirtyParentSplineActors, SplineActor) == 0x000010, "Member 'BPFL_EnvironmentUtility_C_DirtyParentSplineActors::SplineActor' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_DirtyParentSplineActors, CallFunc_GetAllActorsOfClass_OutActors) == 0x000018, "Member 'BPFL_EnvironmentUtility_C_DirtyParentSplineActors::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_DirtyParentSplineActors, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BPFL_EnvironmentUtility_C_DirtyParentSplineActors::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_DirtyParentSplineActors, CallFunc_Array_Length_ReturnValue) == 0x00002C, "Member 'BPFL_EnvironmentUtility_C_DirtyParentSplineActors::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_DirtyParentSplineActors, Temp_int_Array_Index_Variable) == 0x000030, "Member 'BPFL_EnvironmentUtility_C_DirtyParentSplineActors::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_DirtyParentSplineActors, Temp_int_Loop_Num_Variable) == 0x000034, "Member 'BPFL_EnvironmentUtility_C_DirtyParentSplineActors::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_DirtyParentSplineActors, Temp_int_Loop_Counter_Variable) == 0x000038, "Member 'BPFL_EnvironmentUtility_C_DirtyParentSplineActors::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_DirtyParentSplineActors, CallFunc_Less_IntInt_ReturnValue) == 0x00003C, "Member 'BPFL_EnvironmentUtility_C_DirtyParentSplineActors::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_DirtyParentSplineActors, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'BPFL_EnvironmentUtility_C_DirtyParentSplineActors::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_DirtyParentSplineActors, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000044, "Member 'BPFL_EnvironmentUtility_C_DirtyParentSplineActors::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_DirtyParentSplineActors, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000045, "Member 'BPFL_EnvironmentUtility_C_DirtyParentSplineActors::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function BPFL_EnvironmentUtility.BPFL_EnvironmentUtility_C.GetEventCutsceneTransform
// 0x05F0 (0x05F0 - 0x0000)
struct BPFL_EnvironmentUtility_C_GetEventCutsceneTransform final
{
public:
	ECutsceneRootTransformID                      CutsceneTransformID;                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8369[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   ExtraName;                                         // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_836A[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_836B[0x8];                                     // 0x0018(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Transform;                                         // 0x0020(0x0030)(Parm, OutParm, IsPlainOldData, NoDestructor)
	struct FTransform                             InvalidTransform;                                  // 0x0050(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	class ABP_CutsceneRootTransform_C*            CutsceneTransform;                                 // 0x0080(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_836C[0x4];                                     // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_CutsceneRootTransform_C*>    CallFunc_GetAllActorsOfClass_OutActors;            // 0x0090(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class ABP_BrainFieldManager_C*                CallFunc_GetBrainFieldManager_Manager;             // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_836D[0x4];                                     // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBrainFieldSettingsLocation            CallFunc_GetCustomCollisionSettings_Settings;      // 0x00B0(0x0220)(NoDestructor)
	bool                                          CallFunc_GetCustomCollisionSettings_UseCustomCollision; // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Is_Performance_Sequencer_IsPerform;       // 0x02D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_836E[0x2];                                     // 0x02D2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x02D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x02E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x02EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x02F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_InBranField_InBrainDield;                 // 0x02F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_836F[0x6];                                     // 0x02FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BrainCrashManager_C*                CallFunc_GetBrainCrashManager_Manager;             // 0x0300(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_CutsceneRootTransform_C*>    CallFunc_GetAllActorsOfClass_OutActors_1;          // 0x0308(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0318(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8370[0x3];                                     // 0x0319(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x031C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetPlayerStartTransform_Transform;        // 0x0320(0x0030)(IsPlainOldData, NoDestructor)
	TArray<class ABP_CutsceneRootTransform_C*>    CallFunc_GetAllActorsOfClass_OutActors_2;          // 0x0350(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0360(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8371[0x4];                                     // 0x0364(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BrainFieldManager_C*                CallFunc_GetBrainFieldManager_Manager_1;           // 0x0368(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0370(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0374(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8372[0x3];                                     // 0x0375(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0378(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8373[0x4];                                     // 0x037C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetENPCStartTransform_Transform;          // 0x0380(0x0030)(IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x03B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_1;                      // 0x03B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x03B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8374[0x3];                                     // 0x03B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x03BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x03C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x03C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x03C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8375[0x3];                                     // 0x03C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x03CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x03D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8376[0xC];                                     // 0x03D4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x03E0(0x0030)(IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Loop_Num_Variable_2;                      // 0x0410(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0414(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8377[0x3];                                     // 0x0415(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0418(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0428(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0440(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0480(0x0010)(ReferenceParm, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0490(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x04C0(0x0018)()
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x04D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8378[0x3];                                     // 0x04D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x04DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x04E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x04E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8379[0xE];                                     // 0x04E2(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue_1;               // 0x04F0(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x0520(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_GetTransform_ReturnValue_2;               // 0x0550(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0580(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_837A[0x3];                                     // 0x0581(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x0584(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x0590(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x059C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x05A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_837B[0xC];                                     // 0x05B4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_2;              // 0x05C0(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPFL_EnvironmentUtility_C_GetEventCutsceneTransform) == 0x000010, "Wrong alignment on BPFL_EnvironmentUtility_C_GetEventCutsceneTransform");
static_assert(sizeof(BPFL_EnvironmentUtility_C_GetEventCutsceneTransform) == 0x0005F0, "Wrong size on BPFL_EnvironmentUtility_C_GetEventCutsceneTransform");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetEventCutsceneTransform, CutsceneTransformID) == 0x000000, "Member 'BPFL_EnvironmentUtility_C_GetEventCutsceneTransform::CutsceneTransformID' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetEventCutsceneTransform, ExtraName) == 0x000004, "Member 'BPFL_EnvironmentUtility_C_GetEventCutsceneTransform::ExtraName' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetEventCutsceneTransform, __WorldContext) == 0x000010, "Member 'BPFL_EnvironmentUtility_C_GetEventCutsceneTransform::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetEventCutsceneTransform, Transform) == 0x000020, "Member 'BPFL_EnvironmentUtility_C_GetEventCutsceneTransform::Transform' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetEventCutsceneTransform, InvalidTransform) == 0x000050, "Member 'BPFL_EnvironmentUtility_C_GetEventCutsceneTransform::InvalidTransform' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetEventCutsceneTransform, CutsceneTransform) == 0x000080, "Member 'BPFL_EnvironmentUtility_C_GetEventCutsceneTransform::CutsceneTransform' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetEventCutsceneTransform, Temp_int_Loop_Num_Variable) == 0x000088, "Member 'BPFL_EnvironmentUtility_C_GetEventCutsceneTransform::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetEventCutsceneTransform, CallFunc_GetAllActorsOfClass_OutActors) == 0x000090, "Member 'BPFL_EnvironmentUtility_C_GetEventCutsceneTransform::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetEventCutsceneTransform, CallFunc_GetBrainFieldManager_Manager) == 0x0000A0, "Member 'BPFL_EnvironmentUtility_C_GetEventCutsceneTransform::CallFunc_GetBrainFieldManager_Manager' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetEventCutsceneTransform, CallFunc_Array_Length_ReturnValue) == 0x0000A8, "Member 'BPFL_EnvironmentUtility_C_GetEventCutsceneTransform::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetEventCutsceneTransform, CallFunc_GetCustomCollisionSettings_Settings) == 0x0000B0, "Member 'BPFL_EnvironmentUtility_C_GetEventCutsceneTransform::CallFunc_GetCustomCollisionSettings_Settings' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetEventCutsceneTransform, CallFunc_GetCustomCollisionSettings_UseCustomCollision) == 0x0002D0, "Member 'BPFL_EnvironmentUtility_C_GetEventCutsceneTransform::CallFunc_GetCustomCollisionSettings_UseCustomCollision' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetEventCutsceneTransform, CallFunc_Is_Performance_Sequencer_IsPerform) == 0x0002D1, "Member 'BPFL_EnvironmentUtility_C_GetEventCutsceneTransform::CallFunc_Is_Performance_Sequencer_IsPerform' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetEventCutsceneTransform, CallFunc_BreakTransform_Location) == 0x0002D4, "Member 'BPFL_EnvironmentUtility_C_GetEventCutsceneTransform::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetEventCutsceneTransform, CallFunc_BreakTransform_Rotation) == 0x0002E0, "Member 'BPFL_EnvironmentUtility_C_GetEventCutsceneTransform::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetEventCutsceneTransform, CallFunc_BreakTransform_Scale) == 0x0002EC, "Member 'BPFL_EnvironmentUtility_C_GetEventCutsceneTransform::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetEventCutsceneTransform, CallFunc_IsValid_ReturnValue) == 0x0002F8, "Member 'BPFL_EnvironmentUtility_C_GetEventCutsceneTransform::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetEventCutsceneTransform, CallFunc_InBranField_InBrainDield) == 0x0002F9, "Member 'BPFL_EnvironmentUtility_C_GetEventCutsceneTransform::CallFunc_InBranField_InBrainDield' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetEventCutsceneTransform, CallFunc_GetBrainCrashManager_Manager) == 0x000300, "Member 'BPFL_EnvironmentUtility_C_GetEventCutsceneTransform::CallFunc_GetBrainCrashManager_Manager' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetEventCutsceneTransform, CallFunc_GetAllActorsOfClass_OutActors_1) == 0x000308, "Member 'BPFL_EnvironmentUtility_C_GetEventCutsceneTransform::CallFunc_GetAllActorsOfClass_OutActors_1' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetEventCutsceneTransform, CallFunc_IsValid_ReturnValue_1) == 0x000318, "Member 'BPFL_EnvironmentUtility_C_GetEventCutsceneTransform::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetEventCutsceneTransform, CallFunc_Array_Length_ReturnValue_1) == 0x00031C, "Member 'BPFL_EnvironmentUtility_C_GetEventCutsceneTransform::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetEventCutsceneTransform, CallFunc_GetPlayerStartTransform_Transform) == 0x000320, "Member 'BPFL_EnvironmentUtility_C_GetEventCutsceneTransform::CallFunc_GetPlayerStartTransform_Transform' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetEventCutsceneTransform, CallFunc_GetAllActorsOfClass_OutActors_2) == 0x000350, "Member 'BPFL_EnvironmentUtility_C_GetEventCutsceneTransform::CallFunc_GetAllActorsOfClass_OutActors_2' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetEventCutsceneTransform, CallFunc_Array_Length_ReturnValue_2) == 0x000360, "Member 'BPFL_EnvironmentUtility_C_GetEventCutsceneTransform::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetEventCutsceneTransform, CallFunc_GetBrainFieldManager_Manager_1) == 0x000368, "Member 'BPFL_EnvironmentUtility_C_GetEventCutsceneTransform::CallFunc_GetBrainFieldManager_Manager_1' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetEventCutsceneTransform, Temp_int_Loop_Counter_Variable) == 0x000370, "Member 'BPFL_EnvironmentUtility_C_GetEventCutsceneTransform::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetEventCutsceneTransform, CallFunc_IsValid_ReturnValue_2) == 0x000374, "Member 'BPFL_EnvironmentUtility_C_GetEventCutsceneTransform::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetEventCutsceneTransform, CallFunc_Add_IntInt_ReturnValue) == 0x000378, "Member 'BPFL_EnvironmentUtility_C_GetEventCutsceneTransform::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetEventCutsceneTransform, CallFunc_GetENPCStartTransform_Transform) == 0x000380, "Member 'BPFL_EnvironmentUtility_C_GetEventCutsceneTransform::CallFunc_GetENPCStartTransform_Transform' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetEventCutsceneTransform, Temp_int_Array_Index_Variable) == 0x0003B0, "Member 'BPFL_EnvironmentUtility_C_GetEventCutsceneTransform::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetEventCutsceneTransform, Temp_int_Loop_Num_Variable_1) == 0x0003B4, "Member 'BPFL_EnvironmentUtility_C_GetEventCutsceneTransform::Temp_int_Loop_Num_Variable_1' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetEventCutsceneTransform, CallFunc_Less_IntInt_ReturnValue) == 0x0003B8, "Member 'BPFL_EnvironmentUtility_C_GetEventCutsceneTransform::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetEventCutsceneTransform, Temp_int_Loop_Counter_Variable_1) == 0x0003BC, "Member 'BPFL_EnvironmentUtility_C_GetEventCutsceneTransform::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetEventCutsceneTransform, Temp_int_Loop_Counter_Variable_2) == 0x0003C0, "Member 'BPFL_EnvironmentUtility_C_GetEventCutsceneTransform::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetEventCutsceneTransform, CallFunc_Add_IntInt_ReturnValue_1) == 0x0003C4, "Member 'BPFL_EnvironmentUtility_C_GetEventCutsceneTransform::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetEventCutsceneTransform, CallFunc_Less_IntInt_ReturnValue_1) == 0x0003C8, "Member 'BPFL_EnvironmentUtility_C_GetEventCutsceneTransform::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetEventCutsceneTransform, CallFunc_Add_IntInt_ReturnValue_2) == 0x0003CC, "Member 'BPFL_EnvironmentUtility_C_GetEventCutsceneTransform::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetEventCutsceneTransform, Temp_int_Array_Index_Variable_1) == 0x0003D0, "Member 'BPFL_EnvironmentUtility_C_GetEventCutsceneTransform::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetEventCutsceneTransform, CallFunc_MakeTransform_ReturnValue) == 0x0003E0, "Member 'BPFL_EnvironmentUtility_C_GetEventCutsceneTransform::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetEventCutsceneTransform, Temp_int_Loop_Num_Variable_2) == 0x000410, "Member 'BPFL_EnvironmentUtility_C_GetEventCutsceneTransform::Temp_int_Loop_Num_Variable_2' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetEventCutsceneTransform, CallFunc_Less_IntInt_ReturnValue_2) == 0x000414, "Member 'BPFL_EnvironmentUtility_C_GetEventCutsceneTransform::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetEventCutsceneTransform, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000418, "Member 'BPFL_EnvironmentUtility_C_GetEventCutsceneTransform::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetEventCutsceneTransform, CallFunc_Conv_StringToText_ReturnValue) == 0x000428, "Member 'BPFL_EnvironmentUtility_C_GetEventCutsceneTransform::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetEventCutsceneTransform, K2Node_MakeStruct_FormatArgumentData) == 0x000440, "Member 'BPFL_EnvironmentUtility_C_GetEventCutsceneTransform::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetEventCutsceneTransform, K2Node_MakeArray_Array) == 0x000480, "Member 'BPFL_EnvironmentUtility_C_GetEventCutsceneTransform::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetEventCutsceneTransform, CallFunc_GetTransform_ReturnValue) == 0x000490, "Member 'BPFL_EnvironmentUtility_C_GetEventCutsceneTransform::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetEventCutsceneTransform, CallFunc_Format_ReturnValue) == 0x0004C0, "Member 'BPFL_EnvironmentUtility_C_GetEventCutsceneTransform::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetEventCutsceneTransform, K2Node_SwitchEnum_CmpSuccess) == 0x0004D8, "Member 'BPFL_EnvironmentUtility_C_GetEventCutsceneTransform::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetEventCutsceneTransform, Temp_int_Array_Index_Variable_2) == 0x0004DC, "Member 'BPFL_EnvironmentUtility_C_GetEventCutsceneTransform::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetEventCutsceneTransform, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0004E0, "Member 'BPFL_EnvironmentUtility_C_GetEventCutsceneTransform::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetEventCutsceneTransform, CallFunc_EqualEqual_NameName_ReturnValue) == 0x0004E1, "Member 'BPFL_EnvironmentUtility_C_GetEventCutsceneTransform::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetEventCutsceneTransform, CallFunc_GetTransform_ReturnValue_1) == 0x0004F0, "Member 'BPFL_EnvironmentUtility_C_GetEventCutsceneTransform::CallFunc_GetTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetEventCutsceneTransform, CallFunc_MakeTransform_ReturnValue_1) == 0x000520, "Member 'BPFL_EnvironmentUtility_C_GetEventCutsceneTransform::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetEventCutsceneTransform, CallFunc_GetTransform_ReturnValue_2) == 0x000550, "Member 'BPFL_EnvironmentUtility_C_GetEventCutsceneTransform::CallFunc_GetTransform_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetEventCutsceneTransform, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000580, "Member 'BPFL_EnvironmentUtility_C_GetEventCutsceneTransform::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetEventCutsceneTransform, CallFunc_BreakTransform_Location_1) == 0x000584, "Member 'BPFL_EnvironmentUtility_C_GetEventCutsceneTransform::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetEventCutsceneTransform, CallFunc_BreakTransform_Rotation_1) == 0x000590, "Member 'BPFL_EnvironmentUtility_C_GetEventCutsceneTransform::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetEventCutsceneTransform, CallFunc_BreakTransform_Scale_1) == 0x00059C, "Member 'BPFL_EnvironmentUtility_C_GetEventCutsceneTransform::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetEventCutsceneTransform, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0005A8, "Member 'BPFL_EnvironmentUtility_C_GetEventCutsceneTransform::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetEventCutsceneTransform, CallFunc_MakeTransform_ReturnValue_2) == 0x0005C0, "Member 'BPFL_EnvironmentUtility_C_GetEventCutsceneTransform::CallFunc_MakeTransform_ReturnValue_2' has a wrong offset!");

// Function BPFL_EnvironmentUtility.BPFL_EnvironmentUtility_C.GetTargetAnySplineComponent
// 0x0078 (0x0078 - 0x0000)
struct BPFL_EnvironmentUtility_C_GetTargetAnySplineComponent final
{
public:
	class USplineComponent*                       BaseSpline;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_SplineBase_C*                       ParentActor;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USplineComponent*                       TargetComponent;                                   // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseParentSpline;                                   // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_837C[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USplineComponent*                       TargetSpline;                                      // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class USplineComponent*>               Splines;                                           // 0x0030(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_837D[0x1];                                     // 0x0043(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_837E[0x3];                                     // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_837F[0x3];                                     // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8380[0x3];                                     // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USplineComponent*>               CallFunc_K2_GetComponentsByClass_ReturnValue;      // 0x0060(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_EnvironmentUtility_C_GetTargetAnySplineComponent) == 0x000008, "Wrong alignment on BPFL_EnvironmentUtility_C_GetTargetAnySplineComponent");
static_assert(sizeof(BPFL_EnvironmentUtility_C_GetTargetAnySplineComponent) == 0x000078, "Wrong size on BPFL_EnvironmentUtility_C_GetTargetAnySplineComponent");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetTargetAnySplineComponent, BaseSpline) == 0x000000, "Member 'BPFL_EnvironmentUtility_C_GetTargetAnySplineComponent::BaseSpline' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetTargetAnySplineComponent, ParentActor) == 0x000008, "Member 'BPFL_EnvironmentUtility_C_GetTargetAnySplineComponent::ParentActor' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetTargetAnySplineComponent, __WorldContext) == 0x000010, "Member 'BPFL_EnvironmentUtility_C_GetTargetAnySplineComponent::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetTargetAnySplineComponent, TargetComponent) == 0x000018, "Member 'BPFL_EnvironmentUtility_C_GetTargetAnySplineComponent::TargetComponent' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetTargetAnySplineComponent, UseParentSpline) == 0x000020, "Member 'BPFL_EnvironmentUtility_C_GetTargetAnySplineComponent::UseParentSpline' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetTargetAnySplineComponent, TargetSpline) == 0x000028, "Member 'BPFL_EnvironmentUtility_C_GetTargetAnySplineComponent::TargetSpline' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetTargetAnySplineComponent, Splines) == 0x000030, "Member 'BPFL_EnvironmentUtility_C_GetTargetAnySplineComponent::Splines' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetTargetAnySplineComponent, Temp_bool_True_if_break_was_hit_Variable) == 0x000040, "Member 'BPFL_EnvironmentUtility_C_GetTargetAnySplineComponent::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetTargetAnySplineComponent, CallFunc_IsValid_ReturnValue) == 0x000041, "Member 'BPFL_EnvironmentUtility_C_GetTargetAnySplineComponent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetTargetAnySplineComponent, CallFunc_Not_PreBool_ReturnValue) == 0x000042, "Member 'BPFL_EnvironmentUtility_C_GetTargetAnySplineComponent::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetTargetAnySplineComponent, Temp_int_Array_Index_Variable) == 0x000044, "Member 'BPFL_EnvironmentUtility_C_GetTargetAnySplineComponent::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetTargetAnySplineComponent, Temp_int_Loop_Num_Variable) == 0x000048, "Member 'BPFL_EnvironmentUtility_C_GetTargetAnySplineComponent::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetTargetAnySplineComponent, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x00004C, "Member 'BPFL_EnvironmentUtility_C_GetTargetAnySplineComponent::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetTargetAnySplineComponent, Temp_int_Loop_Counter_Variable) == 0x000050, "Member 'BPFL_EnvironmentUtility_C_GetTargetAnySplineComponent::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetTargetAnySplineComponent, CallFunc_Less_IntInt_ReturnValue) == 0x000054, "Member 'BPFL_EnvironmentUtility_C_GetTargetAnySplineComponent::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetTargetAnySplineComponent, CallFunc_Add_IntInt_ReturnValue) == 0x000058, "Member 'BPFL_EnvironmentUtility_C_GetTargetAnySplineComponent::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetTargetAnySplineComponent, CallFunc_BooleanAND_ReturnValue) == 0x00005C, "Member 'BPFL_EnvironmentUtility_C_GetTargetAnySplineComponent::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetTargetAnySplineComponent, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x000060, "Member 'BPFL_EnvironmentUtility_C_GetTargetAnySplineComponent::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EnvironmentUtility_C_GetTargetAnySplineComponent, CallFunc_Array_Length_ReturnValue) == 0x000070, "Member 'BPFL_EnvironmentUtility_C_GetTargetAnySplineComponent::CallFunc_Array_Length_ReturnValue' has a wrong offset!");

}

