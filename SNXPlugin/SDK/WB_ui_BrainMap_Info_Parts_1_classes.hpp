#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_ui_BrainMap_Info_Parts_1

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BattlePrototype_structs.hpp"
#include "BattlePrototype_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WB_ui_BrainMap_Info_Parts_1.WB_ui_BrainMap_Info_Parts_1_C
// 0x01A8 (0x0530 - 0x0388)
class UWB_ui_BrainMap_Info_Parts_1_C final : public UUIBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0388(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Default_none;                                      // 0x0390(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Default;                                           // 0x0398(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UHorizonFlipbookWidget*                 Arrow_1_category_1;                                // 0x03A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizonFlipbookWidget*                 Arrow_1_category_2;                                // 0x03A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizonFlipbookWidget*                 Arrow_1_category_3;                                // 0x03B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizonFlipbookWidget*                 Arrow_1_category_4;                                // 0x03B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizonFlipbookWidget*                 Arrow_2_category_1;                                // 0x03C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizonFlipbookWidget*                 Arrow_2_category_2;                                // 0x03C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizonFlipbookWidget*                 Arrow_2_category_3;                                // 0x03D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizonFlipbookWidget*                 Arrow_2_category_4;                                // 0x03D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Face_a;                                            // 0x03E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Face_Frame;                                        // 0x03E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Face_Noise;                                        // 0x03F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Frame_Base_all;                                    // 0x03F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Frame_Base_Chara;                                  // 0x0400(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Frame_List;                                        // 0x0408(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UREDImageBase*                          Icon_font_1;                                       // 0x0410(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Line_1;                                            // 0x0418(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Line_2;                                            // 0x0420(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Movie;                                             // 0x0428(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Picture;                                           // 0x0430(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UREDTextBlock*                          Text_Bmap_info_category_1;                         // 0x0438(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UREDTextBlock*                          Text_Bmap_info_category_2;                         // 0x0440(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UREDTextBlock*                          Text_Bmap_info_category_3;                         // 0x0448(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UREDTextBlock*                          Text_Bmap_info_category_4;                         // 0x0450(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UREDTextBlock*                          Text_Bmap_info_category_1_num;                     // 0x0458(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UREDTextBlock*                          Text_Bmap_info_category_2_num;                     // 0x0460(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UREDTextBlock*                          Text_Bmap_info_category_3_num;                     // 0x0468(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UREDTextBlock*                          Text_Bmap_info_category_4_num;                     // 0x0470(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UREDTextBlock*                          Text_Bmap_info_skill_1;                            // 0x0478(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UREDTextBlock*                          Text_Bmap_info_skill_2;                            // 0x0480(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Thubnail_Base;                                     // 0x0488(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Thubnail_Frame;                                    // 0x0490(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Thubnail_Shade;                                    // 0x0498(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_ui_BrainMap_Info_Parts_3_C*         WB_ui_BrainMap_Info_Parts_3;                       // 0x04A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	EPlayerSkill                                  Skill;                                             // 0x04A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FlagKasane;                                        // 0x04A9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4545[0x6];                                     // 0x04AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 ParamList;                                         // 0x04B0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TArray<int32>                                 ParamOffsetList;                                   // 0x04C0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TArray<class UTextBlock*>                     ParamTextList;                                     // 0x04D0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         BP;                                                // 0x04E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4546[0x4];                                     // 0x04E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UHorizonFlipbookWidget*>         ArrowUpList;                                       // 0x04E8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, HasGetValueTypeHash)
	class ABP_MovieManager_C*                     MovieManager;                                      // 0x04F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         StateMovie;                                        // 0x0500(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FlagSetMovie;                                      // 0x0504(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          FlagCloseMovie;                                    // 0x0505(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4547[0x2];                                     // 0x0506(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 MoviePath;                                         // 0x0508(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class FString                                 PlayerId;                                          // 0x0518(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                          FlagInitializeMovie;                               // 0x0528(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          FlagAlreadyLearn;                                  // 0x0529(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          FlagEnableLearn;                                   // 0x052A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_WB_ui_BrainMap_Info_Parts_1(int32 EntryPoint);
	void UpdateState(int32 State, int32 SubState, float DeltaSeconds);
	void OnInitialized();
	void Construct();
	void SetSkill(EPlayerSkill Param_Skill, bool IsAlreadyLearn, bool IsResetParam);
	void ResetSkill();
	void StateNone(int32 SubState);
	void StateLoop(int32 SubState);
	void SetBaseText();
	void SetPlayerType(bool IsKasane);
	void DrawParam();
	void SetParamOffset(EPlayerSkill Param_Skill);
	void ResetParamOffset();
	void InitializeMovie();
	void UpdateMovie();
	void CreateMoviePath();
	void EndMovie();
	void UpdatePicture();
	void ResetPicture();
	void GetSkillIndex(EPlayerSkill SkillID, int32* Param_Index);
	void SetSkillPoint(int32 Point);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WB_ui_BrainMap_Info_Parts_1_C">();
	}
	static class UWB_ui_BrainMap_Info_Parts_1_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWB_ui_BrainMap_Info_Parts_1_C>();
	}
};
static_assert(alignof(UWB_ui_BrainMap_Info_Parts_1_C) == 0x000008, "Wrong alignment on UWB_ui_BrainMap_Info_Parts_1_C");
static_assert(sizeof(UWB_ui_BrainMap_Info_Parts_1_C) == 0x000530, "Wrong size on UWB_ui_BrainMap_Info_Parts_1_C");
static_assert(offsetof(UWB_ui_BrainMap_Info_Parts_1_C, UberGraphFrame) == 0x000388, "Member 'UWB_ui_BrainMap_Info_Parts_1_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWB_ui_BrainMap_Info_Parts_1_C, Default_none) == 0x000390, "Member 'UWB_ui_BrainMap_Info_Parts_1_C::Default_none' has a wrong offset!");
static_assert(offsetof(UWB_ui_BrainMap_Info_Parts_1_C, Default) == 0x000398, "Member 'UWB_ui_BrainMap_Info_Parts_1_C::Default' has a wrong offset!");
static_assert(offsetof(UWB_ui_BrainMap_Info_Parts_1_C, Arrow_1_category_1) == 0x0003A0, "Member 'UWB_ui_BrainMap_Info_Parts_1_C::Arrow_1_category_1' has a wrong offset!");
static_assert(offsetof(UWB_ui_BrainMap_Info_Parts_1_C, Arrow_1_category_2) == 0x0003A8, "Member 'UWB_ui_BrainMap_Info_Parts_1_C::Arrow_1_category_2' has a wrong offset!");
static_assert(offsetof(UWB_ui_BrainMap_Info_Parts_1_C, Arrow_1_category_3) == 0x0003B0, "Member 'UWB_ui_BrainMap_Info_Parts_1_C::Arrow_1_category_3' has a wrong offset!");
static_assert(offsetof(UWB_ui_BrainMap_Info_Parts_1_C, Arrow_1_category_4) == 0x0003B8, "Member 'UWB_ui_BrainMap_Info_Parts_1_C::Arrow_1_category_4' has a wrong offset!");
static_assert(offsetof(UWB_ui_BrainMap_Info_Parts_1_C, Arrow_2_category_1) == 0x0003C0, "Member 'UWB_ui_BrainMap_Info_Parts_1_C::Arrow_2_category_1' has a wrong offset!");
static_assert(offsetof(UWB_ui_BrainMap_Info_Parts_1_C, Arrow_2_category_2) == 0x0003C8, "Member 'UWB_ui_BrainMap_Info_Parts_1_C::Arrow_2_category_2' has a wrong offset!");
static_assert(offsetof(UWB_ui_BrainMap_Info_Parts_1_C, Arrow_2_category_3) == 0x0003D0, "Member 'UWB_ui_BrainMap_Info_Parts_1_C::Arrow_2_category_3' has a wrong offset!");
static_assert(offsetof(UWB_ui_BrainMap_Info_Parts_1_C, Arrow_2_category_4) == 0x0003D8, "Member 'UWB_ui_BrainMap_Info_Parts_1_C::Arrow_2_category_4' has a wrong offset!");
static_assert(offsetof(UWB_ui_BrainMap_Info_Parts_1_C, Face_a) == 0x0003E0, "Member 'UWB_ui_BrainMap_Info_Parts_1_C::Face_a' has a wrong offset!");
static_assert(offsetof(UWB_ui_BrainMap_Info_Parts_1_C, Face_Frame) == 0x0003E8, "Member 'UWB_ui_BrainMap_Info_Parts_1_C::Face_Frame' has a wrong offset!");
static_assert(offsetof(UWB_ui_BrainMap_Info_Parts_1_C, Face_Noise) == 0x0003F0, "Member 'UWB_ui_BrainMap_Info_Parts_1_C::Face_Noise' has a wrong offset!");
static_assert(offsetof(UWB_ui_BrainMap_Info_Parts_1_C, Frame_Base_all) == 0x0003F8, "Member 'UWB_ui_BrainMap_Info_Parts_1_C::Frame_Base_all' has a wrong offset!");
static_assert(offsetof(UWB_ui_BrainMap_Info_Parts_1_C, Frame_Base_Chara) == 0x000400, "Member 'UWB_ui_BrainMap_Info_Parts_1_C::Frame_Base_Chara' has a wrong offset!");
static_assert(offsetof(UWB_ui_BrainMap_Info_Parts_1_C, Frame_List) == 0x000408, "Member 'UWB_ui_BrainMap_Info_Parts_1_C::Frame_List' has a wrong offset!");
static_assert(offsetof(UWB_ui_BrainMap_Info_Parts_1_C, Icon_font_1) == 0x000410, "Member 'UWB_ui_BrainMap_Info_Parts_1_C::Icon_font_1' has a wrong offset!");
static_assert(offsetof(UWB_ui_BrainMap_Info_Parts_1_C, Line_1) == 0x000418, "Member 'UWB_ui_BrainMap_Info_Parts_1_C::Line_1' has a wrong offset!");
static_assert(offsetof(UWB_ui_BrainMap_Info_Parts_1_C, Line_2) == 0x000420, "Member 'UWB_ui_BrainMap_Info_Parts_1_C::Line_2' has a wrong offset!");
static_assert(offsetof(UWB_ui_BrainMap_Info_Parts_1_C, Movie) == 0x000428, "Member 'UWB_ui_BrainMap_Info_Parts_1_C::Movie' has a wrong offset!");
static_assert(offsetof(UWB_ui_BrainMap_Info_Parts_1_C, Picture) == 0x000430, "Member 'UWB_ui_BrainMap_Info_Parts_1_C::Picture' has a wrong offset!");
static_assert(offsetof(UWB_ui_BrainMap_Info_Parts_1_C, Text_Bmap_info_category_1) == 0x000438, "Member 'UWB_ui_BrainMap_Info_Parts_1_C::Text_Bmap_info_category_1' has a wrong offset!");
static_assert(offsetof(UWB_ui_BrainMap_Info_Parts_1_C, Text_Bmap_info_category_2) == 0x000440, "Member 'UWB_ui_BrainMap_Info_Parts_1_C::Text_Bmap_info_category_2' has a wrong offset!");
static_assert(offsetof(UWB_ui_BrainMap_Info_Parts_1_C, Text_Bmap_info_category_3) == 0x000448, "Member 'UWB_ui_BrainMap_Info_Parts_1_C::Text_Bmap_info_category_3' has a wrong offset!");
static_assert(offsetof(UWB_ui_BrainMap_Info_Parts_1_C, Text_Bmap_info_category_4) == 0x000450, "Member 'UWB_ui_BrainMap_Info_Parts_1_C::Text_Bmap_info_category_4' has a wrong offset!");
static_assert(offsetof(UWB_ui_BrainMap_Info_Parts_1_C, Text_Bmap_info_category_1_num) == 0x000458, "Member 'UWB_ui_BrainMap_Info_Parts_1_C::Text_Bmap_info_category_1_num' has a wrong offset!");
static_assert(offsetof(UWB_ui_BrainMap_Info_Parts_1_C, Text_Bmap_info_category_2_num) == 0x000460, "Member 'UWB_ui_BrainMap_Info_Parts_1_C::Text_Bmap_info_category_2_num' has a wrong offset!");
static_assert(offsetof(UWB_ui_BrainMap_Info_Parts_1_C, Text_Bmap_info_category_3_num) == 0x000468, "Member 'UWB_ui_BrainMap_Info_Parts_1_C::Text_Bmap_info_category_3_num' has a wrong offset!");
static_assert(offsetof(UWB_ui_BrainMap_Info_Parts_1_C, Text_Bmap_info_category_4_num) == 0x000470, "Member 'UWB_ui_BrainMap_Info_Parts_1_C::Text_Bmap_info_category_4_num' has a wrong offset!");
static_assert(offsetof(UWB_ui_BrainMap_Info_Parts_1_C, Text_Bmap_info_skill_1) == 0x000478, "Member 'UWB_ui_BrainMap_Info_Parts_1_C::Text_Bmap_info_skill_1' has a wrong offset!");
static_assert(offsetof(UWB_ui_BrainMap_Info_Parts_1_C, Text_Bmap_info_skill_2) == 0x000480, "Member 'UWB_ui_BrainMap_Info_Parts_1_C::Text_Bmap_info_skill_2' has a wrong offset!");
static_assert(offsetof(UWB_ui_BrainMap_Info_Parts_1_C, Thubnail_Base) == 0x000488, "Member 'UWB_ui_BrainMap_Info_Parts_1_C::Thubnail_Base' has a wrong offset!");
static_assert(offsetof(UWB_ui_BrainMap_Info_Parts_1_C, Thubnail_Frame) == 0x000490, "Member 'UWB_ui_BrainMap_Info_Parts_1_C::Thubnail_Frame' has a wrong offset!");
static_assert(offsetof(UWB_ui_BrainMap_Info_Parts_1_C, Thubnail_Shade) == 0x000498, "Member 'UWB_ui_BrainMap_Info_Parts_1_C::Thubnail_Shade' has a wrong offset!");
static_assert(offsetof(UWB_ui_BrainMap_Info_Parts_1_C, WB_ui_BrainMap_Info_Parts_3) == 0x0004A0, "Member 'UWB_ui_BrainMap_Info_Parts_1_C::WB_ui_BrainMap_Info_Parts_3' has a wrong offset!");
static_assert(offsetof(UWB_ui_BrainMap_Info_Parts_1_C, Skill) == 0x0004A8, "Member 'UWB_ui_BrainMap_Info_Parts_1_C::Skill' has a wrong offset!");
static_assert(offsetof(UWB_ui_BrainMap_Info_Parts_1_C, FlagKasane) == 0x0004A9, "Member 'UWB_ui_BrainMap_Info_Parts_1_C::FlagKasane' has a wrong offset!");
static_assert(offsetof(UWB_ui_BrainMap_Info_Parts_1_C, ParamList) == 0x0004B0, "Member 'UWB_ui_BrainMap_Info_Parts_1_C::ParamList' has a wrong offset!");
static_assert(offsetof(UWB_ui_BrainMap_Info_Parts_1_C, ParamOffsetList) == 0x0004C0, "Member 'UWB_ui_BrainMap_Info_Parts_1_C::ParamOffsetList' has a wrong offset!");
static_assert(offsetof(UWB_ui_BrainMap_Info_Parts_1_C, ParamTextList) == 0x0004D0, "Member 'UWB_ui_BrainMap_Info_Parts_1_C::ParamTextList' has a wrong offset!");
static_assert(offsetof(UWB_ui_BrainMap_Info_Parts_1_C, BP) == 0x0004E0, "Member 'UWB_ui_BrainMap_Info_Parts_1_C::BP' has a wrong offset!");
static_assert(offsetof(UWB_ui_BrainMap_Info_Parts_1_C, ArrowUpList) == 0x0004E8, "Member 'UWB_ui_BrainMap_Info_Parts_1_C::ArrowUpList' has a wrong offset!");
static_assert(offsetof(UWB_ui_BrainMap_Info_Parts_1_C, MovieManager) == 0x0004F8, "Member 'UWB_ui_BrainMap_Info_Parts_1_C::MovieManager' has a wrong offset!");
static_assert(offsetof(UWB_ui_BrainMap_Info_Parts_1_C, StateMovie) == 0x000500, "Member 'UWB_ui_BrainMap_Info_Parts_1_C::StateMovie' has a wrong offset!");
static_assert(offsetof(UWB_ui_BrainMap_Info_Parts_1_C, FlagSetMovie) == 0x000504, "Member 'UWB_ui_BrainMap_Info_Parts_1_C::FlagSetMovie' has a wrong offset!");
static_assert(offsetof(UWB_ui_BrainMap_Info_Parts_1_C, FlagCloseMovie) == 0x000505, "Member 'UWB_ui_BrainMap_Info_Parts_1_C::FlagCloseMovie' has a wrong offset!");
static_assert(offsetof(UWB_ui_BrainMap_Info_Parts_1_C, MoviePath) == 0x000508, "Member 'UWB_ui_BrainMap_Info_Parts_1_C::MoviePath' has a wrong offset!");
static_assert(offsetof(UWB_ui_BrainMap_Info_Parts_1_C, PlayerId) == 0x000518, "Member 'UWB_ui_BrainMap_Info_Parts_1_C::PlayerId' has a wrong offset!");
static_assert(offsetof(UWB_ui_BrainMap_Info_Parts_1_C, FlagInitializeMovie) == 0x000528, "Member 'UWB_ui_BrainMap_Info_Parts_1_C::FlagInitializeMovie' has a wrong offset!");
static_assert(offsetof(UWB_ui_BrainMap_Info_Parts_1_C, FlagAlreadyLearn) == 0x000529, "Member 'UWB_ui_BrainMap_Info_Parts_1_C::FlagAlreadyLearn' has a wrong offset!");
static_assert(offsetof(UWB_ui_BrainMap_Info_Parts_1_C, FlagEnableLearn) == 0x00052A, "Member 'UWB_ui_BrainMap_Info_Parts_1_C::FlagEnableLearn' has a wrong offset!");

}

