#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HologramBullet_ch0500

#include "Basic.hpp"

#include "BP_HologramBullet_ch0500_classes.hpp"
#include "BP_HologramBullet_ch0500_parameters.hpp"


namespace SDK
{

// Function BP_HologramBullet_ch0500.BP_HologramBullet_ch0500_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_HologramBullet_ch0500_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HologramBullet_ch0500_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_HologramBullet_ch0500.BP_HologramBullet_ch0500_C.OnMoveUpdate
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          ResultLocation                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bEnd                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Param_bImpactLand                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_HologramBullet_ch0500_C::OnMoveUpdate(float DeltaSeconds, struct FVector* ResultLocation, bool* bEnd, bool* Param_bImpactLand)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HologramBullet_ch0500_C", "OnMoveUpdate");

	Params::BP_HologramBullet_ch0500_C_OnMoveUpdate Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);

	if (ResultLocation != nullptr)
		*ResultLocation = std::move(Parms.ResultLocation);

	if (bEnd != nullptr)
		*bEnd = Parms.bEnd;

	if (Param_bImpactLand != nullptr)
		*Param_bImpactLand = Parms.Param_bImpactLand;
}


// Function BP_HologramBullet_ch0500.BP_HologramBullet_ch0500_C.Fire
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Param_AttackOwner                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Param_FirePoint                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Dir                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FAttackCollisionInfoBP           Param_CollisionInfo                                    (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// bool                                    Param_bDisableImpactParticle                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bSuccess                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_HologramBullet_ch0500_C::Fire(class AActor* Param_AttackOwner, const struct FVector& Param_FirePoint, const struct FVector& Dir, struct FAttackCollisionInfoBP& Param_CollisionInfo, bool Param_bDisableImpactParticle, bool* bSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HologramBullet_ch0500_C", "Fire");

	Params::BP_HologramBullet_ch0500_C_Fire Parms{};

	Parms.Param_AttackOwner = Param_AttackOwner;
	Parms.Param_FirePoint = std::move(Param_FirePoint);
	Parms.Dir = std::move(Dir);
	Parms.Param_CollisionInfo = std::move(Param_CollisionInfo);
	Parms.Param_bDisableImpactParticle = Param_bDisableImpactParticle;

	UObject::ProcessEvent(Func, &Parms);

	Param_CollisionInfo = std::move(Parms.Param_CollisionInfo);

	if (bSuccess != nullptr)
		*bSuccess = Parms.bSuccess;
}

}

