#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPFL_CharacterUtility

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "BattlePrototype_structs.hpp"
#include "Engine_structs.hpp"
#include "CopyCharacterParameterStruct_structs.hpp"
#include "CharactersParameter_structs.hpp"


namespace SDK::Params
{

// Function BPFL_CharacterUtility.BPFL_CharacterUtility_C.BackupCharacterParameter
// 0x0A20 (0x0A20 - 0x0000)
struct BPFL_CharacterUtility_C_BackupCharacterParameter final
{
public:
	class ARSBattleCharacter_C*                   BaseCharacter;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bBackupTable;                                      // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bBackupBasic;                                      // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_897F[0x6];                                     // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCopyCharacterParameterStruct          BackupData;                                        // 0x0018(0x0280)(Parm, OutParm, HasGetValueTypeHash)
	int32                                         DropId;                                            // 0x0298(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInfinity;                                         // 0x029C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8980[0x3];                                     // 0x029D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         SubGroup;                                          // 0x02A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Group;                                             // 0x02A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             ParameterDataTable;                                // 0x02A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ParameterName;                                     // 0x02B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCharactersParameterBasic              BasicData;                                         // 0x02B8(0x0068)(Edit, BlueprintVisible)
	struct FCharactersParameterTable              TableData;                                         // 0x0320(0x01F8)(Edit, BlueprintVisible)
	TScriptInterface<class IBattleCharacterInterface> CallFunc_IsInfinityCrashChance_self_CastInput;     // 0x0518(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInfinityCrashChance_ReturnValue;        // 0x0528(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8981[0x7];                                     // 0x0529(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IDamageCalcInterface>  CallFunc_GetCharactersParameterTableInterface_self_CastInput; // 0x0530(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FCharactersParameterTable              CallFunc_GetCharactersParameterTableInterface_ReturnValue; // 0x0540(0x01F8)()
	struct FCharactersParameterBasic              CallFunc_GetParameterBasic_ReturnValue;            // 0x0738(0x0068)()
	struct FCopyCharacterParameterStruct          K2Node_MakeStruct_CopyCharacterParameterStruct;    // 0x07A0(0x0280)(HasGetValueTypeHash)
};
static_assert(alignof(BPFL_CharacterUtility_C_BackupCharacterParameter) == 0x000008, "Wrong alignment on BPFL_CharacterUtility_C_BackupCharacterParameter");
static_assert(sizeof(BPFL_CharacterUtility_C_BackupCharacterParameter) == 0x000A20, "Wrong size on BPFL_CharacterUtility_C_BackupCharacterParameter");
static_assert(offsetof(BPFL_CharacterUtility_C_BackupCharacterParameter, BaseCharacter) == 0x000000, "Member 'BPFL_CharacterUtility_C_BackupCharacterParameter::BaseCharacter' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_BackupCharacterParameter, bBackupTable) == 0x000008, "Member 'BPFL_CharacterUtility_C_BackupCharacterParameter::bBackupTable' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_BackupCharacterParameter, bBackupBasic) == 0x000009, "Member 'BPFL_CharacterUtility_C_BackupCharacterParameter::bBackupBasic' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_BackupCharacterParameter, __WorldContext) == 0x000010, "Member 'BPFL_CharacterUtility_C_BackupCharacterParameter::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_BackupCharacterParameter, BackupData) == 0x000018, "Member 'BPFL_CharacterUtility_C_BackupCharacterParameter::BackupData' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_BackupCharacterParameter, DropId) == 0x000298, "Member 'BPFL_CharacterUtility_C_BackupCharacterParameter::DropId' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_BackupCharacterParameter, bInfinity) == 0x00029C, "Member 'BPFL_CharacterUtility_C_BackupCharacterParameter::bInfinity' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_BackupCharacterParameter, SubGroup) == 0x0002A0, "Member 'BPFL_CharacterUtility_C_BackupCharacterParameter::SubGroup' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_BackupCharacterParameter, Group) == 0x0002A4, "Member 'BPFL_CharacterUtility_C_BackupCharacterParameter::Group' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_BackupCharacterParameter, ParameterDataTable) == 0x0002A8, "Member 'BPFL_CharacterUtility_C_BackupCharacterParameter::ParameterDataTable' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_BackupCharacterParameter, ParameterName) == 0x0002B0, "Member 'BPFL_CharacterUtility_C_BackupCharacterParameter::ParameterName' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_BackupCharacterParameter, BasicData) == 0x0002B8, "Member 'BPFL_CharacterUtility_C_BackupCharacterParameter::BasicData' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_BackupCharacterParameter, TableData) == 0x000320, "Member 'BPFL_CharacterUtility_C_BackupCharacterParameter::TableData' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_BackupCharacterParameter, CallFunc_IsInfinityCrashChance_self_CastInput) == 0x000518, "Member 'BPFL_CharacterUtility_C_BackupCharacterParameter::CallFunc_IsInfinityCrashChance_self_CastInput' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_BackupCharacterParameter, CallFunc_IsInfinityCrashChance_ReturnValue) == 0x000528, "Member 'BPFL_CharacterUtility_C_BackupCharacterParameter::CallFunc_IsInfinityCrashChance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_BackupCharacterParameter, CallFunc_GetCharactersParameterTableInterface_self_CastInput) == 0x000530, "Member 'BPFL_CharacterUtility_C_BackupCharacterParameter::CallFunc_GetCharactersParameterTableInterface_self_CastInput' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_BackupCharacterParameter, CallFunc_GetCharactersParameterTableInterface_ReturnValue) == 0x000540, "Member 'BPFL_CharacterUtility_C_BackupCharacterParameter::CallFunc_GetCharactersParameterTableInterface_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_BackupCharacterParameter, CallFunc_GetParameterBasic_ReturnValue) == 0x000738, "Member 'BPFL_CharacterUtility_C_BackupCharacterParameter::CallFunc_GetParameterBasic_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_BackupCharacterParameter, K2Node_MakeStruct_CopyCharacterParameterStruct) == 0x0007A0, "Member 'BPFL_CharacterUtility_C_BackupCharacterParameter::K2Node_MakeStruct_CopyCharacterParameterStruct' has a wrong offset!");

// Function BPFL_CharacterUtility.BPFL_CharacterUtility_C.RestoreCharacterParameter
// 0x06C8 (0x06C8 - 0x0000)
struct BPFL_CharacterUtility_C_RestoreCharacterParameter final
{
public:
	struct FCopyCharacterParameterStruct          BackupData;                                        // 0x0000(0x0280)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class ARSBattleCharacter_C*                   Character;                                         // 0x0280(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bRestoreTable;                                     // 0x0288(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bRestoreBasic;                                     // 0x0289(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bResetCrash;                                       // 0x028A(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8982[0x5];                                     // 0x028B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0290(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDummy;                                            // 0x0298(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8983[0x7];                                     // 0x0299(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCharactersParameter                   LTableData;                                        // 0x02A0(0x01F8)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TScriptInterface<class IBPI_ENpcInterface_C>  K2Node_DynamicCast_AsBPI_ENpc_Interface;           // 0x0498(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x04A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8984[0x7];                                     // 0x04A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCharactersParameter                   CallFunc_GetDataTableRowFromName_OutRow;           // 0x04B0(0x01F8)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x06A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8985[0x3];                                     // 0x06A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Em8010_GetParameterTableAttackScale_Scale; // 0x06AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_ModifyParameterTable_Attack_NewAttack;    // 0x06B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x06B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue_1;        // 0x06B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x06B6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8986[0x1];                                     // 0x06B7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBattleCharacterInterface> CallFunc_SetInfinityCrashChance_self_CastInput;    // 0x06B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPFL_CharacterUtility_C_RestoreCharacterParameter) == 0x000008, "Wrong alignment on BPFL_CharacterUtility_C_RestoreCharacterParameter");
static_assert(sizeof(BPFL_CharacterUtility_C_RestoreCharacterParameter) == 0x0006C8, "Wrong size on BPFL_CharacterUtility_C_RestoreCharacterParameter");
static_assert(offsetof(BPFL_CharacterUtility_C_RestoreCharacterParameter, BackupData) == 0x000000, "Member 'BPFL_CharacterUtility_C_RestoreCharacterParameter::BackupData' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_RestoreCharacterParameter, Character) == 0x000280, "Member 'BPFL_CharacterUtility_C_RestoreCharacterParameter::Character' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_RestoreCharacterParameter, bRestoreTable) == 0x000288, "Member 'BPFL_CharacterUtility_C_RestoreCharacterParameter::bRestoreTable' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_RestoreCharacterParameter, bRestoreBasic) == 0x000289, "Member 'BPFL_CharacterUtility_C_RestoreCharacterParameter::bRestoreBasic' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_RestoreCharacterParameter, bResetCrash) == 0x00028A, "Member 'BPFL_CharacterUtility_C_RestoreCharacterParameter::bResetCrash' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_RestoreCharacterParameter, __WorldContext) == 0x000290, "Member 'BPFL_CharacterUtility_C_RestoreCharacterParameter::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_RestoreCharacterParameter, bDummy) == 0x000298, "Member 'BPFL_CharacterUtility_C_RestoreCharacterParameter::bDummy' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_RestoreCharacterParameter, LTableData) == 0x0002A0, "Member 'BPFL_CharacterUtility_C_RestoreCharacterParameter::LTableData' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_RestoreCharacterParameter, K2Node_DynamicCast_AsBPI_ENpc_Interface) == 0x000498, "Member 'BPFL_CharacterUtility_C_RestoreCharacterParameter::K2Node_DynamicCast_AsBPI_ENpc_Interface' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_RestoreCharacterParameter, K2Node_DynamicCast_bSuccess) == 0x0004A8, "Member 'BPFL_CharacterUtility_C_RestoreCharacterParameter::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_RestoreCharacterParameter, CallFunc_GetDataTableRowFromName_OutRow) == 0x0004B0, "Member 'BPFL_CharacterUtility_C_RestoreCharacterParameter::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_RestoreCharacterParameter, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0006A8, "Member 'BPFL_CharacterUtility_C_RestoreCharacterParameter::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_RestoreCharacterParameter, CallFunc_Em8010_GetParameterTableAttackScale_Scale) == 0x0006AC, "Member 'BPFL_CharacterUtility_C_RestoreCharacterParameter::CallFunc_Em8010_GetParameterTableAttackScale_Scale' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_RestoreCharacterParameter, CallFunc_ModifyParameterTable_Attack_NewAttack) == 0x0006B0, "Member 'BPFL_CharacterUtility_C_RestoreCharacterParameter::CallFunc_ModifyParameterTable_Attack_NewAttack' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_RestoreCharacterParameter, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x0006B4, "Member 'BPFL_CharacterUtility_C_RestoreCharacterParameter::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_RestoreCharacterParameter, CallFunc_NotEqual_FloatFloat_ReturnValue_1) == 0x0006B5, "Member 'BPFL_CharacterUtility_C_RestoreCharacterParameter::CallFunc_NotEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_RestoreCharacterParameter, CallFunc_BooleanAND_ReturnValue) == 0x0006B6, "Member 'BPFL_CharacterUtility_C_RestoreCharacterParameter::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_RestoreCharacterParameter, CallFunc_SetInfinityCrashChance_self_CastInput) == 0x0006B8, "Member 'BPFL_CharacterUtility_C_RestoreCharacterParameter::CallFunc_SetInfinityCrashChance_self_CastInput' has a wrong offset!");

// Function BPFL_CharacterUtility.BPFL_CharacterUtility_C.GetGenderTypeForCharaID
// 0x0038 (0x0038 - 0x0000)
struct BPFL_CharacterUtility_C_GetGenderTypeForCharaID final
{
public:
	class FString                                 CharaID;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETextGender                                   TextGenderType;                                    // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETextGender                                   LocalGenderType;                                   // 0x0019(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue;                     // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8987[0x5];                                     // 0x001B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_LeftChop_ReturnValue;                     // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchString_CmpSuccess;                    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPFL_CharacterUtility_C_GetGenderTypeForCharaID) == 0x000008, "Wrong alignment on BPFL_CharacterUtility_C_GetGenderTypeForCharaID");
static_assert(sizeof(BPFL_CharacterUtility_C_GetGenderTypeForCharaID) == 0x000038, "Wrong size on BPFL_CharacterUtility_C_GetGenderTypeForCharaID");
static_assert(offsetof(BPFL_CharacterUtility_C_GetGenderTypeForCharaID, CharaID) == 0x000000, "Member 'BPFL_CharacterUtility_C_GetGenderTypeForCharaID::CharaID' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_GetGenderTypeForCharaID, __WorldContext) == 0x000010, "Member 'BPFL_CharacterUtility_C_GetGenderTypeForCharaID::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_GetGenderTypeForCharaID, TextGenderType) == 0x000018, "Member 'BPFL_CharacterUtility_C_GetGenderTypeForCharaID::TextGenderType' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_GetGenderTypeForCharaID, LocalGenderType) == 0x000019, "Member 'BPFL_CharacterUtility_C_GetGenderTypeForCharaID::LocalGenderType' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_GetGenderTypeForCharaID, CallFunc_Contains_ReturnValue) == 0x00001A, "Member 'BPFL_CharacterUtility_C_GetGenderTypeForCharaID::CallFunc_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_GetGenderTypeForCharaID, CallFunc_LeftChop_ReturnValue) == 0x000020, "Member 'BPFL_CharacterUtility_C_GetGenderTypeForCharaID::CallFunc_LeftChop_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_GetGenderTypeForCharaID, K2Node_SwitchString_CmpSuccess) == 0x000030, "Member 'BPFL_CharacterUtility_C_GetGenderTypeForCharaID::K2Node_SwitchString_CmpSuccess' has a wrong offset!");

// Function BPFL_CharacterUtility.BPFL_CharacterUtility_C.ChangePlayerLockTarget
// 0x0068 (0x0068 - 0x0000)
struct BPFL_CharacterUtility_C_ChangePlayerLockTarget final
{
public:
	class ARSBattleCharacter_C*                   Src;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattleCharacter_C*                   Dst;                                               // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bChange;                                           // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          LbChange;                                          // 0x0019(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8988[0x6];                                     // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8989[0x6];                                     // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattlePlayer_C*                      CallFunc_GetMainPlayer_Player;                     // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_898A[0x6];                                     // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IPlayerInterface>      CallFunc_IsLockTargetInterface_self_CastInput;     // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLockTargetInterface_IsLockTarget;       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_898B[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetCurrentTargetActor_TargetActor;        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPFL_CharacterUtility_C_ChangePlayerLockTarget) == 0x000008, "Wrong alignment on BPFL_CharacterUtility_C_ChangePlayerLockTarget");
static_assert(sizeof(BPFL_CharacterUtility_C_ChangePlayerLockTarget) == 0x000068, "Wrong size on BPFL_CharacterUtility_C_ChangePlayerLockTarget");
static_assert(offsetof(BPFL_CharacterUtility_C_ChangePlayerLockTarget, Src) == 0x000000, "Member 'BPFL_CharacterUtility_C_ChangePlayerLockTarget::Src' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_ChangePlayerLockTarget, Dst) == 0x000008, "Member 'BPFL_CharacterUtility_C_ChangePlayerLockTarget::Dst' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_ChangePlayerLockTarget, __WorldContext) == 0x000010, "Member 'BPFL_CharacterUtility_C_ChangePlayerLockTarget::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_ChangePlayerLockTarget, bChange) == 0x000018, "Member 'BPFL_CharacterUtility_C_ChangePlayerLockTarget::bChange' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_ChangePlayerLockTarget, LbChange) == 0x000019, "Member 'BPFL_CharacterUtility_C_ChangePlayerLockTarget::LbChange' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_ChangePlayerLockTarget, CallFunc_GetPlayerManager_PlayerManager) == 0x000020, "Member 'BPFL_CharacterUtility_C_ChangePlayerLockTarget::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_ChangePlayerLockTarget, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BPFL_CharacterUtility_C_ChangePlayerLockTarget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_ChangePlayerLockTarget, CallFunc_IsValid_ReturnValue_1) == 0x000029, "Member 'BPFL_CharacterUtility_C_ChangePlayerLockTarget::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_ChangePlayerLockTarget, CallFunc_GetMainPlayer_Player) == 0x000030, "Member 'BPFL_CharacterUtility_C_ChangePlayerLockTarget::CallFunc_GetMainPlayer_Player' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_ChangePlayerLockTarget, CallFunc_IsValid_ReturnValue_2) == 0x000038, "Member 'BPFL_CharacterUtility_C_ChangePlayerLockTarget::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_ChangePlayerLockTarget, CallFunc_IsValid_ReturnValue_3) == 0x000039, "Member 'BPFL_CharacterUtility_C_ChangePlayerLockTarget::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_ChangePlayerLockTarget, CallFunc_IsLockTargetInterface_self_CastInput) == 0x000040, "Member 'BPFL_CharacterUtility_C_ChangePlayerLockTarget::CallFunc_IsLockTargetInterface_self_CastInput' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_ChangePlayerLockTarget, CallFunc_IsLockTargetInterface_IsLockTarget) == 0x000050, "Member 'BPFL_CharacterUtility_C_ChangePlayerLockTarget::CallFunc_IsLockTargetInterface_IsLockTarget' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_ChangePlayerLockTarget, CallFunc_GetCurrentTargetActor_TargetActor) == 0x000058, "Member 'BPFL_CharacterUtility_C_ChangePlayerLockTarget::CallFunc_GetCurrentTargetActor_TargetActor' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_ChangePlayerLockTarget, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000060, "Member 'BPFL_CharacterUtility_C_ChangePlayerLockTarget::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function BPFL_CharacterUtility.BPFL_CharacterUtility_C.CameraAttentionStartForActor
// 0x0050 (0x0050 - 0x0000)
struct BPFL_CharacterUtility_C_CameraAttentionStartForActor final
{
public:
	class AActor*                                 TargetActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            ActorCurveIn;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ChangeFov;                                         // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_898C[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TargetFov;                                         // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            FovCurveIn;                                        // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bEnableOffsetAngleVt;                              // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_898D[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         OffsetAngleVtIn;                                   // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bEnableOffsetDist;                                 // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_898E[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         OffsetDistIn;                                      // 0x002C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDummy;                                            // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_898F[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPFL_CharacterUtility_C_CameraAttentionStartForActor) == 0x000008, "Wrong alignment on BPFL_CharacterUtility_C_CameraAttentionStartForActor");
static_assert(sizeof(BPFL_CharacterUtility_C_CameraAttentionStartForActor) == 0x000050, "Wrong size on BPFL_CharacterUtility_C_CameraAttentionStartForActor");
static_assert(offsetof(BPFL_CharacterUtility_C_CameraAttentionStartForActor, TargetActor) == 0x000000, "Member 'BPFL_CharacterUtility_C_CameraAttentionStartForActor::TargetActor' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_CameraAttentionStartForActor, ActorCurveIn) == 0x000008, "Member 'BPFL_CharacterUtility_C_CameraAttentionStartForActor::ActorCurveIn' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_CameraAttentionStartForActor, ChangeFov) == 0x000010, "Member 'BPFL_CharacterUtility_C_CameraAttentionStartForActor::ChangeFov' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_CameraAttentionStartForActor, TargetFov) == 0x000014, "Member 'BPFL_CharacterUtility_C_CameraAttentionStartForActor::TargetFov' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_CameraAttentionStartForActor, FovCurveIn) == 0x000018, "Member 'BPFL_CharacterUtility_C_CameraAttentionStartForActor::FovCurveIn' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_CameraAttentionStartForActor, bEnableOffsetAngleVt) == 0x000020, "Member 'BPFL_CharacterUtility_C_CameraAttentionStartForActor::bEnableOffsetAngleVt' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_CameraAttentionStartForActor, OffsetAngleVtIn) == 0x000024, "Member 'BPFL_CharacterUtility_C_CameraAttentionStartForActor::OffsetAngleVtIn' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_CameraAttentionStartForActor, bEnableOffsetDist) == 0x000028, "Member 'BPFL_CharacterUtility_C_CameraAttentionStartForActor::bEnableOffsetDist' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_CameraAttentionStartForActor, OffsetDistIn) == 0x00002C, "Member 'BPFL_CharacterUtility_C_CameraAttentionStartForActor::OffsetDistIn' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_CameraAttentionStartForActor, __WorldContext) == 0x000030, "Member 'BPFL_CharacterUtility_C_CameraAttentionStartForActor::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_CameraAttentionStartForActor, bDummy) == 0x000038, "Member 'BPFL_CharacterUtility_C_CameraAttentionStartForActor::bDummy' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_CameraAttentionStartForActor, CallFunc_GetPlayerManager_PlayerManager) == 0x000040, "Member 'BPFL_CharacterUtility_C_CameraAttentionStartForActor::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_CameraAttentionStartForActor, CallFunc_IsValid_ReturnValue) == 0x000048, "Member 'BPFL_CharacterUtility_C_CameraAttentionStartForActor::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_CameraAttentionStartForActor, CallFunc_IsValid_ReturnValue_1) == 0x000049, "Member 'BPFL_CharacterUtility_C_CameraAttentionStartForActor::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BPFL_CharacterUtility.BPFL_CharacterUtility_C.CameraAttentionEndForActor
// 0x0030 (0x0030 - 0x0000)
struct BPFL_CharacterUtility_C_CameraAttentionEndForActor final
{
public:
	class UCurveFloat*                            ActorCurveOut;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            FovCurveOut;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDummy;                                            // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8990[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPFL_CharacterUtility_C_CameraAttentionEndForActor) == 0x000008, "Wrong alignment on BPFL_CharacterUtility_C_CameraAttentionEndForActor");
static_assert(sizeof(BPFL_CharacterUtility_C_CameraAttentionEndForActor) == 0x000030, "Wrong size on BPFL_CharacterUtility_C_CameraAttentionEndForActor");
static_assert(offsetof(BPFL_CharacterUtility_C_CameraAttentionEndForActor, ActorCurveOut) == 0x000000, "Member 'BPFL_CharacterUtility_C_CameraAttentionEndForActor::ActorCurveOut' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_CameraAttentionEndForActor, FovCurveOut) == 0x000008, "Member 'BPFL_CharacterUtility_C_CameraAttentionEndForActor::FovCurveOut' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_CameraAttentionEndForActor, __WorldContext) == 0x000010, "Member 'BPFL_CharacterUtility_C_CameraAttentionEndForActor::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_CameraAttentionEndForActor, bDummy) == 0x000018, "Member 'BPFL_CharacterUtility_C_CameraAttentionEndForActor::bDummy' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_CameraAttentionEndForActor, CallFunc_GetPlayerManager_PlayerManager) == 0x000020, "Member 'BPFL_CharacterUtility_C_CameraAttentionEndForActor::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_CameraAttentionEndForActor, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BPFL_CharacterUtility_C_CameraAttentionEndForActor::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BPFL_CharacterUtility.BPFL_CharacterUtility_C.SetRestrictDriveBegin
// 0x0048 (0x0048 - 0x0000)
struct BPFL_CharacterUtility_C_SetRestrictDriveBegin final
{
public:
	bool                                          bRestrict;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8991[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDummy;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8992[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8993[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_GetPlayer_ReturnValue;                    // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8994[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattlePlayer_C*                      K2Node_DynamicCast_AsRSBattle_Player;              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPFL_CharacterUtility_C_SetRestrictDriveBegin) == 0x000008, "Wrong alignment on BPFL_CharacterUtility_C_SetRestrictDriveBegin");
static_assert(sizeof(BPFL_CharacterUtility_C_SetRestrictDriveBegin) == 0x000048, "Wrong size on BPFL_CharacterUtility_C_SetRestrictDriveBegin");
static_assert(offsetof(BPFL_CharacterUtility_C_SetRestrictDriveBegin, bRestrict) == 0x000000, "Member 'BPFL_CharacterUtility_C_SetRestrictDriveBegin::bRestrict' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_SetRestrictDriveBegin, __WorldContext) == 0x000008, "Member 'BPFL_CharacterUtility_C_SetRestrictDriveBegin::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_SetRestrictDriveBegin, bDummy) == 0x000010, "Member 'BPFL_CharacterUtility_C_SetRestrictDriveBegin::bDummy' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_SetRestrictDriveBegin, CallFunc_GetPlayerManager_PlayerManager) == 0x000018, "Member 'BPFL_CharacterUtility_C_SetRestrictDriveBegin::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_SetRestrictDriveBegin, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BPFL_CharacterUtility_C_SetRestrictDriveBegin::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_SetRestrictDriveBegin, CallFunc_GetPlayer_ReturnValue) == 0x000028, "Member 'BPFL_CharacterUtility_C_SetRestrictDriveBegin::CallFunc_GetPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_SetRestrictDriveBegin, CallFunc_IsValid_ReturnValue_1) == 0x000030, "Member 'BPFL_CharacterUtility_C_SetRestrictDriveBegin::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_SetRestrictDriveBegin, K2Node_DynamicCast_AsRSBattle_Player) == 0x000038, "Member 'BPFL_CharacterUtility_C_SetRestrictDriveBegin::K2Node_DynamicCast_AsRSBattle_Player' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_SetRestrictDriveBegin, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BPFL_CharacterUtility_C_SetRestrictDriveBegin::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BPFL_CharacterUtility.BPFL_CharacterUtility_C.GetAttackOwner
// 0x01E0 (0x01E0 - 0x0000)
struct BPFL_CharacterUtility_C_GetAttackOwner final
{
public:
	struct FHCHitResult                           HitResult;                                         // 0x0000(0x01C0)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	class UObject*                                __WorldContext;                                    // 0x01C0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Owner;                                             // 0x01C8(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 L_Actor;                                           // 0x01D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x01D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPFL_CharacterUtility_C_GetAttackOwner) == 0x000008, "Wrong alignment on BPFL_CharacterUtility_C_GetAttackOwner");
static_assert(sizeof(BPFL_CharacterUtility_C_GetAttackOwner) == 0x0001E0, "Wrong size on BPFL_CharacterUtility_C_GetAttackOwner");
static_assert(offsetof(BPFL_CharacterUtility_C_GetAttackOwner, HitResult) == 0x000000, "Member 'BPFL_CharacterUtility_C_GetAttackOwner::HitResult' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_GetAttackOwner, __WorldContext) == 0x0001C0, "Member 'BPFL_CharacterUtility_C_GetAttackOwner::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_GetAttackOwner, Owner) == 0x0001C8, "Member 'BPFL_CharacterUtility_C_GetAttackOwner::Owner' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_GetAttackOwner, L_Actor) == 0x0001D0, "Member 'BPFL_CharacterUtility_C_GetAttackOwner::L_Actor' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_GetAttackOwner, CallFunc_IsValid_ReturnValue) == 0x0001D8, "Member 'BPFL_CharacterUtility_C_GetAttackOwner::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_GetAttackOwner, CallFunc_IsValid_ReturnValue_1) == 0x0001D9, "Member 'BPFL_CharacterUtility_C_GetAttackOwner::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BPFL_CharacterUtility.BPFL_CharacterUtility_C.CanTelepoPlayer
// 0x0040 (0x0040 - 0x0000)
struct BPFL_CharacterUtility_C_CanTelepoPlayer final
{
public:
	class AActor*                                 Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CanDo;                                             // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          L_Value;                                           // 0x0011(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8995[0x6];                                     // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattlePlayer_C*                      K2Node_DynamicCast_AsRSBattle_Player;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8996[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IPlayerInterface>      CallFunc_GetPlayerID_self_CastInput;               // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerID                                     CallFunc_GetPlayerID_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPFL_CharacterUtility_C_CanTelepoPlayer) == 0x000008, "Wrong alignment on BPFL_CharacterUtility_C_CanTelepoPlayer");
static_assert(sizeof(BPFL_CharacterUtility_C_CanTelepoPlayer) == 0x000040, "Wrong size on BPFL_CharacterUtility_C_CanTelepoPlayer");
static_assert(offsetof(BPFL_CharacterUtility_C_CanTelepoPlayer, Character) == 0x000000, "Member 'BPFL_CharacterUtility_C_CanTelepoPlayer::Character' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_CanTelepoPlayer, __WorldContext) == 0x000008, "Member 'BPFL_CharacterUtility_C_CanTelepoPlayer::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_CanTelepoPlayer, CanDo) == 0x000010, "Member 'BPFL_CharacterUtility_C_CanTelepoPlayer::CanDo' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_CanTelepoPlayer, L_Value) == 0x000011, "Member 'BPFL_CharacterUtility_C_CanTelepoPlayer::L_Value' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_CanTelepoPlayer, K2Node_DynamicCast_AsRSBattle_Player) == 0x000018, "Member 'BPFL_CharacterUtility_C_CanTelepoPlayer::K2Node_DynamicCast_AsRSBattle_Player' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_CanTelepoPlayer, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BPFL_CharacterUtility_C_CanTelepoPlayer::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_CanTelepoPlayer, CallFunc_GetPlayerID_self_CastInput) == 0x000028, "Member 'BPFL_CharacterUtility_C_CanTelepoPlayer::CallFunc_GetPlayerID_self_CastInput' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_CanTelepoPlayer, CallFunc_GetPlayerID_ReturnValue) == 0x000038, "Member 'BPFL_CharacterUtility_C_CanTelepoPlayer::CallFunc_GetPlayerID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_CanTelepoPlayer, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000039, "Member 'BPFL_CharacterUtility_C_CanTelepoPlayer::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_CanTelepoPlayer, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00003A, "Member 'BPFL_CharacterUtility_C_CanTelepoPlayer::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_CanTelepoPlayer, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x00003B, "Member 'BPFL_CharacterUtility_C_CanTelepoPlayer::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_CanTelepoPlayer, CallFunc_BooleanOR_ReturnValue) == 0x00003C, "Member 'BPFL_CharacterUtility_C_CanTelepoPlayer::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_CanTelepoPlayer, CallFunc_BooleanOR_ReturnValue_1) == 0x00003D, "Member 'BPFL_CharacterUtility_C_CanTelepoPlayer::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");

// Function BPFL_CharacterUtility.BPFL_CharacterUtility_C.GetNearestPlayerSideCharacter
// 0x00C8 (0x00C8 - 0x0000)
struct BPFL_CharacterUtility_C_GetNearestPlayerSideCharacter final
{
public:
	class ARSBattleCharacter_C*                   BaseChara;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LimitDistance;                                     // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8997[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattleCharacter_C*                   FindChara;                                         // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Distance;                                          // 0x0020(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_BaseLocation;                                    // 0x0024(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_Distance;                                        // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8998[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattleCharacter_C*                   L_FindChara;                                       // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8999[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ARSBattlePlayer_C*>              CallFunc_GetPlayersAll_Player;                     // 0x0050(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_899A[0x4];                                     // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CharacterParamater_C> CallFunc_IsDead_self_CastInput;                    // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDead_bDead;                             // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_899B[0x3];                                     // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0094(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckTargetableCharacter_ReturnValue;     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_899C[0x3];                                     // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x00A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSizeSquared_ReturnValue;                 // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_899D[0x2];                                     // 0x00BA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Sqrt_ReturnValue;                         // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPFL_CharacterUtility_C_GetNearestPlayerSideCharacter) == 0x000008, "Wrong alignment on BPFL_CharacterUtility_C_GetNearestPlayerSideCharacter");
static_assert(sizeof(BPFL_CharacterUtility_C_GetNearestPlayerSideCharacter) == 0x0000C8, "Wrong size on BPFL_CharacterUtility_C_GetNearestPlayerSideCharacter");
static_assert(offsetof(BPFL_CharacterUtility_C_GetNearestPlayerSideCharacter, BaseChara) == 0x000000, "Member 'BPFL_CharacterUtility_C_GetNearestPlayerSideCharacter::BaseChara' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_GetNearestPlayerSideCharacter, LimitDistance) == 0x000008, "Member 'BPFL_CharacterUtility_C_GetNearestPlayerSideCharacter::LimitDistance' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_GetNearestPlayerSideCharacter, __WorldContext) == 0x000010, "Member 'BPFL_CharacterUtility_C_GetNearestPlayerSideCharacter::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_GetNearestPlayerSideCharacter, FindChara) == 0x000018, "Member 'BPFL_CharacterUtility_C_GetNearestPlayerSideCharacter::FindChara' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_GetNearestPlayerSideCharacter, Distance) == 0x000020, "Member 'BPFL_CharacterUtility_C_GetNearestPlayerSideCharacter::Distance' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_GetNearestPlayerSideCharacter, L_BaseLocation) == 0x000024, "Member 'BPFL_CharacterUtility_C_GetNearestPlayerSideCharacter::L_BaseLocation' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_GetNearestPlayerSideCharacter, L_Distance) == 0x000030, "Member 'BPFL_CharacterUtility_C_GetNearestPlayerSideCharacter::L_Distance' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_GetNearestPlayerSideCharacter, L_FindChara) == 0x000038, "Member 'BPFL_CharacterUtility_C_GetNearestPlayerSideCharacter::L_FindChara' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_GetNearestPlayerSideCharacter, CallFunc_GetPlayerManager_PlayerManager) == 0x000040, "Member 'BPFL_CharacterUtility_C_GetNearestPlayerSideCharacter::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_GetNearestPlayerSideCharacter, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000048, "Member 'BPFL_CharacterUtility_C_GetNearestPlayerSideCharacter::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_GetNearestPlayerSideCharacter, CallFunc_GetPlayersAll_Player) == 0x000050, "Member 'BPFL_CharacterUtility_C_GetNearestPlayerSideCharacter::CallFunc_GetPlayersAll_Player' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_GetNearestPlayerSideCharacter, CallFunc_Array_Length_ReturnValue) == 0x000060, "Member 'BPFL_CharacterUtility_C_GetNearestPlayerSideCharacter::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_GetNearestPlayerSideCharacter, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000064, "Member 'BPFL_CharacterUtility_C_GetNearestPlayerSideCharacter::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_GetNearestPlayerSideCharacter, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000068, "Member 'BPFL_CharacterUtility_C_GetNearestPlayerSideCharacter::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_GetNearestPlayerSideCharacter, Temp_int_Array_Index_Variable) == 0x000074, "Member 'BPFL_CharacterUtility_C_GetNearestPlayerSideCharacter::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_GetNearestPlayerSideCharacter, Temp_int_Loop_Num_Variable) == 0x000078, "Member 'BPFL_CharacterUtility_C_GetNearestPlayerSideCharacter::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_GetNearestPlayerSideCharacter, CallFunc_IsDead_self_CastInput) == 0x000080, "Member 'BPFL_CharacterUtility_C_GetNearestPlayerSideCharacter::CallFunc_IsDead_self_CastInput' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_GetNearestPlayerSideCharacter, CallFunc_IsDead_bDead) == 0x000090, "Member 'BPFL_CharacterUtility_C_GetNearestPlayerSideCharacter::CallFunc_IsDead_bDead' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_GetNearestPlayerSideCharacter, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000094, "Member 'BPFL_CharacterUtility_C_GetNearestPlayerSideCharacter::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_GetNearestPlayerSideCharacter, CallFunc_CheckTargetableCharacter_ReturnValue) == 0x0000A0, "Member 'BPFL_CharacterUtility_C_GetNearestPlayerSideCharacter::CallFunc_CheckTargetableCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_GetNearestPlayerSideCharacter, Temp_int_Loop_Counter_Variable) == 0x0000A4, "Member 'BPFL_CharacterUtility_C_GetNearestPlayerSideCharacter::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_GetNearestPlayerSideCharacter, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0000A8, "Member 'BPFL_CharacterUtility_C_GetNearestPlayerSideCharacter::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_GetNearestPlayerSideCharacter, CallFunc_VSizeSquared_ReturnValue) == 0x0000B4, "Member 'BPFL_CharacterUtility_C_GetNearestPlayerSideCharacter::CallFunc_VSizeSquared_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_GetNearestPlayerSideCharacter, CallFunc_Less_IntInt_ReturnValue) == 0x0000B8, "Member 'BPFL_CharacterUtility_C_GetNearestPlayerSideCharacter::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_GetNearestPlayerSideCharacter, CallFunc_Less_FloatFloat_ReturnValue) == 0x0000B9, "Member 'BPFL_CharacterUtility_C_GetNearestPlayerSideCharacter::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_GetNearestPlayerSideCharacter, CallFunc_Add_IntInt_ReturnValue) == 0x0000BC, "Member 'BPFL_CharacterUtility_C_GetNearestPlayerSideCharacter::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_GetNearestPlayerSideCharacter, CallFunc_Sqrt_ReturnValue) == 0x0000C0, "Member 'BPFL_CharacterUtility_C_GetNearestPlayerSideCharacter::CallFunc_Sqrt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_GetNearestPlayerSideCharacter, CallFunc_IsValid_ReturnValue) == 0x0000C4, "Member 'BPFL_CharacterUtility_C_GetNearestPlayerSideCharacter::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BPFL_CharacterUtility.BPFL_CharacterUtility_C.GetCamaraEyeOffsetLocation
// 0x00C0 (0x00C0 - 0x0000)
struct BPFL_CharacterUtility_C_GetCamaraEyeOffsetLocation final
{
public:
	float                                         Offset;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_899E[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0010(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_Move;                                            // 0x001C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_BaseDir;                                         // 0x0028(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_CameraEye;                                       // 0x0034(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_CameraLocation;                                  // 0x0040(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_Location;                                        // 0x004C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_899F[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x007C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0094(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSizeSquared_ReturnValue;                 // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89A0[0x3];                                     // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_CharacterUtility_C_GetCamaraEyeOffsetLocation) == 0x000008, "Wrong alignment on BPFL_CharacterUtility_C_GetCamaraEyeOffsetLocation");
static_assert(sizeof(BPFL_CharacterUtility_C_GetCamaraEyeOffsetLocation) == 0x0000C0, "Wrong size on BPFL_CharacterUtility_C_GetCamaraEyeOffsetLocation");
static_assert(offsetof(BPFL_CharacterUtility_C_GetCamaraEyeOffsetLocation, Offset) == 0x000000, "Member 'BPFL_CharacterUtility_C_GetCamaraEyeOffsetLocation::Offset' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_GetCamaraEyeOffsetLocation, __WorldContext) == 0x000008, "Member 'BPFL_CharacterUtility_C_GetCamaraEyeOffsetLocation::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_GetCamaraEyeOffsetLocation, Location) == 0x000010, "Member 'BPFL_CharacterUtility_C_GetCamaraEyeOffsetLocation::Location' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_GetCamaraEyeOffsetLocation, L_Move) == 0x00001C, "Member 'BPFL_CharacterUtility_C_GetCamaraEyeOffsetLocation::L_Move' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_GetCamaraEyeOffsetLocation, L_BaseDir) == 0x000028, "Member 'BPFL_CharacterUtility_C_GetCamaraEyeOffsetLocation::L_BaseDir' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_GetCamaraEyeOffsetLocation, L_CameraEye) == 0x000034, "Member 'BPFL_CharacterUtility_C_GetCamaraEyeOffsetLocation::L_CameraEye' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_GetCamaraEyeOffsetLocation, L_CameraLocation) == 0x000040, "Member 'BPFL_CharacterUtility_C_GetCamaraEyeOffsetLocation::L_CameraLocation' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_GetCamaraEyeOffsetLocation, L_Location) == 0x00004C, "Member 'BPFL_CharacterUtility_C_GetCamaraEyeOffsetLocation::L_Location' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_GetCamaraEyeOffsetLocation, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000058, "Member 'BPFL_CharacterUtility_C_GetCamaraEyeOffsetLocation::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_GetCamaraEyeOffsetLocation, CallFunc_IsValid_ReturnValue) == 0x000060, "Member 'BPFL_CharacterUtility_C_GetCamaraEyeOffsetLocation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_GetCamaraEyeOffsetLocation, CallFunc_GetActorForwardVector_ReturnValue) == 0x000064, "Member 'BPFL_CharacterUtility_C_GetCamaraEyeOffsetLocation::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_GetCamaraEyeOffsetLocation, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000070, "Member 'BPFL_CharacterUtility_C_GetCamaraEyeOffsetLocation::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_GetCamaraEyeOffsetLocation, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x00007C, "Member 'BPFL_CharacterUtility_C_GetCamaraEyeOffsetLocation::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_GetCamaraEyeOffsetLocation, CallFunc_BreakVector_X) == 0x000088, "Member 'BPFL_CharacterUtility_C_GetCamaraEyeOffsetLocation::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_GetCamaraEyeOffsetLocation, CallFunc_BreakVector_Y) == 0x00008C, "Member 'BPFL_CharacterUtility_C_GetCamaraEyeOffsetLocation::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_GetCamaraEyeOffsetLocation, CallFunc_BreakVector_Z) == 0x000090, "Member 'BPFL_CharacterUtility_C_GetCamaraEyeOffsetLocation::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_GetCamaraEyeOffsetLocation, CallFunc_MakeVector_ReturnValue) == 0x000094, "Member 'BPFL_CharacterUtility_C_GetCamaraEyeOffsetLocation::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_GetCamaraEyeOffsetLocation, CallFunc_Normal_ReturnValue) == 0x0000A0, "Member 'BPFL_CharacterUtility_C_GetCamaraEyeOffsetLocation::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_GetCamaraEyeOffsetLocation, CallFunc_VSizeSquared_ReturnValue) == 0x0000AC, "Member 'BPFL_CharacterUtility_C_GetCamaraEyeOffsetLocation::CallFunc_VSizeSquared_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_GetCamaraEyeOffsetLocation, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x0000B0, "Member 'BPFL_CharacterUtility_C_GetCamaraEyeOffsetLocation::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_GetCamaraEyeOffsetLocation, CallFunc_Add_VectorVector_ReturnValue) == 0x0000B4, "Member 'BPFL_CharacterUtility_C_GetCamaraEyeOffsetLocation::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");

// Function BPFL_CharacterUtility.BPFL_CharacterUtility_C.GetGroundLocation
// 0x0188 (0x0188 - 0x0000)
struct BPFL_CharacterUtility_C_GetGroundLocation final
{
public:
	struct FVector                                baseLocation;                                      // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89A1[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFind;                                             // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89A2[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Location;                                          // 0x001C(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_Location;                                        // 0x0028(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          L_result;                                          // 0x0034(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89A3[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                L_BottomLocation;                                  // 0x0038(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_TopLocation;                                     // 0x0044(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0050(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0060(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89A4[0x3];                                     // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x00EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89A5[0x2];                                     // 0x00FA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0104(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0110(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x011C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0128(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89A6[0x4];                                     // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0148(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0160(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x016C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0178(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_CharacterUtility_C_GetGroundLocation) == 0x000008, "Wrong alignment on BPFL_CharacterUtility_C_GetGroundLocation");
static_assert(sizeof(BPFL_CharacterUtility_C_GetGroundLocation) == 0x000188, "Wrong size on BPFL_CharacterUtility_C_GetGroundLocation");
static_assert(offsetof(BPFL_CharacterUtility_C_GetGroundLocation, baseLocation) == 0x000000, "Member 'BPFL_CharacterUtility_C_GetGroundLocation::baseLocation' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_GetGroundLocation, __WorldContext) == 0x000010, "Member 'BPFL_CharacterUtility_C_GetGroundLocation::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_GetGroundLocation, bFind) == 0x000018, "Member 'BPFL_CharacterUtility_C_GetGroundLocation::bFind' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_GetGroundLocation, Location) == 0x00001C, "Member 'BPFL_CharacterUtility_C_GetGroundLocation::Location' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_GetGroundLocation, L_Location) == 0x000028, "Member 'BPFL_CharacterUtility_C_GetGroundLocation::L_Location' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_GetGroundLocation, L_result) == 0x000034, "Member 'BPFL_CharacterUtility_C_GetGroundLocation::L_result' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_GetGroundLocation, L_BottomLocation) == 0x000038, "Member 'BPFL_CharacterUtility_C_GetGroundLocation::L_BottomLocation' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_GetGroundLocation, L_TopLocation) == 0x000044, "Member 'BPFL_CharacterUtility_C_GetGroundLocation::L_TopLocation' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_GetGroundLocation, Temp_object_Variable) == 0x000050, "Member 'BPFL_CharacterUtility_C_GetGroundLocation::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_GetGroundLocation, CallFunc_LineTraceSingle_OutHit) == 0x000060, "Member 'BPFL_CharacterUtility_C_GetGroundLocation::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_GetGroundLocation, CallFunc_LineTraceSingle_ReturnValue) == 0x0000E8, "Member 'BPFL_CharacterUtility_C_GetGroundLocation::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_GetGroundLocation, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0000EC, "Member 'BPFL_CharacterUtility_C_GetGroundLocation::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_GetGroundLocation, CallFunc_BreakHitResult_bBlockingHit) == 0x0000F8, "Member 'BPFL_CharacterUtility_C_GetGroundLocation::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_GetGroundLocation, CallFunc_BreakHitResult_bInitialOverlap) == 0x0000F9, "Member 'BPFL_CharacterUtility_C_GetGroundLocation::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_GetGroundLocation, CallFunc_BreakHitResult_Time) == 0x0000FC, "Member 'BPFL_CharacterUtility_C_GetGroundLocation::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_GetGroundLocation, CallFunc_BreakHitResult_Distance) == 0x000100, "Member 'BPFL_CharacterUtility_C_GetGroundLocation::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_GetGroundLocation, CallFunc_BreakHitResult_Location) == 0x000104, "Member 'BPFL_CharacterUtility_C_GetGroundLocation::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_GetGroundLocation, CallFunc_BreakHitResult_ImpactPoint) == 0x000110, "Member 'BPFL_CharacterUtility_C_GetGroundLocation::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_GetGroundLocation, CallFunc_BreakHitResult_Normal) == 0x00011C, "Member 'BPFL_CharacterUtility_C_GetGroundLocation::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_GetGroundLocation, CallFunc_BreakHitResult_ImpactNormal) == 0x000128, "Member 'BPFL_CharacterUtility_C_GetGroundLocation::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_GetGroundLocation, CallFunc_BreakHitResult_PhysMat) == 0x000138, "Member 'BPFL_CharacterUtility_C_GetGroundLocation::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_GetGroundLocation, CallFunc_BreakHitResult_HitActor) == 0x000140, "Member 'BPFL_CharacterUtility_C_GetGroundLocation::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_GetGroundLocation, CallFunc_BreakHitResult_HitComponent) == 0x000148, "Member 'BPFL_CharacterUtility_C_GetGroundLocation::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_GetGroundLocation, CallFunc_BreakHitResult_HitBoneName) == 0x000150, "Member 'BPFL_CharacterUtility_C_GetGroundLocation::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_GetGroundLocation, CallFunc_BreakHitResult_HitItem) == 0x000158, "Member 'BPFL_CharacterUtility_C_GetGroundLocation::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_GetGroundLocation, CallFunc_BreakHitResult_FaceIndex) == 0x00015C, "Member 'BPFL_CharacterUtility_C_GetGroundLocation::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_GetGroundLocation, CallFunc_BreakHitResult_TraceStart) == 0x000160, "Member 'BPFL_CharacterUtility_C_GetGroundLocation::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_GetGroundLocation, CallFunc_BreakHitResult_TraceEnd) == 0x00016C, "Member 'BPFL_CharacterUtility_C_GetGroundLocation::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_GetGroundLocation, CallFunc_Add_VectorVector_ReturnValue) == 0x000178, "Member 'BPFL_CharacterUtility_C_GetGroundLocation::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");

// Function BPFL_CharacterUtility.BPFL_CharacterUtility_C.GetTarget2CamaraOffsetLocation
// 0x00C8 (0x00C8 - 0x0000)
struct BPFL_CharacterUtility_C_GetTarget2CamaraOffsetLocation final
{
public:
	struct FVector                                TargetLocation;                                    // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Offset;                                            // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0018(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_Move;                                            // 0x0024(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_BaseDir;                                         // 0x0030(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_Diff;                                            // 0x003C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_CameraLocation;                                  // 0x0048(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_Location;                                        // 0x0054(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89A7[0x3];                                     // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0084(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x00B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSizeSquared_ReturnValue;                 // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPFL_CharacterUtility_C_GetTarget2CamaraOffsetLocation) == 0x000008, "Wrong alignment on BPFL_CharacterUtility_C_GetTarget2CamaraOffsetLocation");
static_assert(sizeof(BPFL_CharacterUtility_C_GetTarget2CamaraOffsetLocation) == 0x0000C8, "Wrong size on BPFL_CharacterUtility_C_GetTarget2CamaraOffsetLocation");
static_assert(offsetof(BPFL_CharacterUtility_C_GetTarget2CamaraOffsetLocation, TargetLocation) == 0x000000, "Member 'BPFL_CharacterUtility_C_GetTarget2CamaraOffsetLocation::TargetLocation' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_GetTarget2CamaraOffsetLocation, Offset) == 0x00000C, "Member 'BPFL_CharacterUtility_C_GetTarget2CamaraOffsetLocation::Offset' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_GetTarget2CamaraOffsetLocation, __WorldContext) == 0x000010, "Member 'BPFL_CharacterUtility_C_GetTarget2CamaraOffsetLocation::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_GetTarget2CamaraOffsetLocation, Location) == 0x000018, "Member 'BPFL_CharacterUtility_C_GetTarget2CamaraOffsetLocation::Location' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_GetTarget2CamaraOffsetLocation, L_Move) == 0x000024, "Member 'BPFL_CharacterUtility_C_GetTarget2CamaraOffsetLocation::L_Move' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_GetTarget2CamaraOffsetLocation, L_BaseDir) == 0x000030, "Member 'BPFL_CharacterUtility_C_GetTarget2CamaraOffsetLocation::L_BaseDir' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_GetTarget2CamaraOffsetLocation, L_Diff) == 0x00003C, "Member 'BPFL_CharacterUtility_C_GetTarget2CamaraOffsetLocation::L_Diff' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_GetTarget2CamaraOffsetLocation, L_CameraLocation) == 0x000048, "Member 'BPFL_CharacterUtility_C_GetTarget2CamaraOffsetLocation::L_CameraLocation' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_GetTarget2CamaraOffsetLocation, L_Location) == 0x000054, "Member 'BPFL_CharacterUtility_C_GetTarget2CamaraOffsetLocation::L_Location' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_GetTarget2CamaraOffsetLocation, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000060, "Member 'BPFL_CharacterUtility_C_GetTarget2CamaraOffsetLocation::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_GetTarget2CamaraOffsetLocation, CallFunc_IsValid_ReturnValue) == 0x000068, "Member 'BPFL_CharacterUtility_C_GetTarget2CamaraOffsetLocation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_GetTarget2CamaraOffsetLocation, CallFunc_Subtract_VectorVector_ReturnValue) == 0x00006C, "Member 'BPFL_CharacterUtility_C_GetTarget2CamaraOffsetLocation::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_GetTarget2CamaraOffsetLocation, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000078, "Member 'BPFL_CharacterUtility_C_GetTarget2CamaraOffsetLocation::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_GetTarget2CamaraOffsetLocation, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000084, "Member 'BPFL_CharacterUtility_C_GetTarget2CamaraOffsetLocation::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_GetTarget2CamaraOffsetLocation, CallFunc_Add_VectorVector_ReturnValue) == 0x000090, "Member 'BPFL_CharacterUtility_C_GetTarget2CamaraOffsetLocation::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_GetTarget2CamaraOffsetLocation, CallFunc_BreakVector_X) == 0x00009C, "Member 'BPFL_CharacterUtility_C_GetTarget2CamaraOffsetLocation::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_GetTarget2CamaraOffsetLocation, CallFunc_BreakVector_Y) == 0x0000A0, "Member 'BPFL_CharacterUtility_C_GetTarget2CamaraOffsetLocation::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_GetTarget2CamaraOffsetLocation, CallFunc_BreakVector_Z) == 0x0000A4, "Member 'BPFL_CharacterUtility_C_GetTarget2CamaraOffsetLocation::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_GetTarget2CamaraOffsetLocation, CallFunc_MakeVector_ReturnValue) == 0x0000A8, "Member 'BPFL_CharacterUtility_C_GetTarget2CamaraOffsetLocation::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_GetTarget2CamaraOffsetLocation, CallFunc_Normal_ReturnValue) == 0x0000B4, "Member 'BPFL_CharacterUtility_C_GetTarget2CamaraOffsetLocation::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_GetTarget2CamaraOffsetLocation, CallFunc_VSizeSquared_ReturnValue) == 0x0000C0, "Member 'BPFL_CharacterUtility_C_GetTarget2CamaraOffsetLocation::CallFunc_VSizeSquared_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_GetTarget2CamaraOffsetLocation, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x0000C4, "Member 'BPFL_CharacterUtility_C_GetTarget2CamaraOffsetLocation::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function BPFL_CharacterUtility.BPFL_CharacterUtility_C.IsAttackedByMainPlayer
// 0x01F0 (0x01F0 - 0x0000)
struct BPFL_CharacterUtility_C_IsAttackedByMainPlayer final
{
public:
	struct FHCHitResult                           HitResult;                                         // 0x0000(0x01C0)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	class UObject*                                __WorldContext;                                    // 0x01C0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bMainPlayer;                                       // 0x01C8(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          LResult;                                           // 0x01C9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89A8[0x6];                                     // 0x01CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAttackOwner_Owner;                     // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleCharacterInterface_C> K2Node_DynamicCast_AsBPI_Battle_Character_Interface; // 0x01D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAttackerMainPlayer_bMainPlayer;         // 0x01E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPFL_CharacterUtility_C_IsAttackedByMainPlayer) == 0x000008, "Wrong alignment on BPFL_CharacterUtility_C_IsAttackedByMainPlayer");
static_assert(sizeof(BPFL_CharacterUtility_C_IsAttackedByMainPlayer) == 0x0001F0, "Wrong size on BPFL_CharacterUtility_C_IsAttackedByMainPlayer");
static_assert(offsetof(BPFL_CharacterUtility_C_IsAttackedByMainPlayer, HitResult) == 0x000000, "Member 'BPFL_CharacterUtility_C_IsAttackedByMainPlayer::HitResult' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_IsAttackedByMainPlayer, __WorldContext) == 0x0001C0, "Member 'BPFL_CharacterUtility_C_IsAttackedByMainPlayer::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_IsAttackedByMainPlayer, bMainPlayer) == 0x0001C8, "Member 'BPFL_CharacterUtility_C_IsAttackedByMainPlayer::bMainPlayer' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_IsAttackedByMainPlayer, LResult) == 0x0001C9, "Member 'BPFL_CharacterUtility_C_IsAttackedByMainPlayer::LResult' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_IsAttackedByMainPlayer, CallFunc_GetAttackOwner_Owner) == 0x0001D0, "Member 'BPFL_CharacterUtility_C_IsAttackedByMainPlayer::CallFunc_GetAttackOwner_Owner' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_IsAttackedByMainPlayer, K2Node_DynamicCast_AsBPI_Battle_Character_Interface) == 0x0001D8, "Member 'BPFL_CharacterUtility_C_IsAttackedByMainPlayer::K2Node_DynamicCast_AsBPI_Battle_Character_Interface' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_IsAttackedByMainPlayer, K2Node_DynamicCast_bSuccess) == 0x0001E8, "Member 'BPFL_CharacterUtility_C_IsAttackedByMainPlayer::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_IsAttackedByMainPlayer, CallFunc_IsAttackerMainPlayer_bMainPlayer) == 0x0001E9, "Member 'BPFL_CharacterUtility_C_IsAttackedByMainPlayer::CallFunc_IsAttackerMainPlayer_bMainPlayer' has a wrong offset!");
static_assert(offsetof(BPFL_CharacterUtility_C_IsAttackedByMainPlayer, CallFunc_IsValid_ReturnValue) == 0x0001EA, "Member 'BPFL_CharacterUtility_C_IsAttackedByMainPlayer::CallFunc_IsValid_ReturnValue' has a wrong offset!");

}

