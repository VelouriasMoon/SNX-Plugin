#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_LC23_01_BT_Chat

#include "Basic.hpp"

#include "BattlePrototype_structs.hpp"
#include "Engine_structs.hpp"
#include "BP_MakeEventActorChild_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_LC23_01_BT_Chat.BP_LC23_01_BT_Chat_C
// 0x0050 (0x04D8 - 0x0488)
class ABP_LC23_01_BT_Chat_C final : public ABP_MakeEventActorChild_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_LC23_01_BT_Chat_C;               // 0x0488(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	TArray<EPlayerID>                             CheckCharaID_M;                                    // 0x0490(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TArray<EPlayerID>                             CheckCharaID_F;                                    // 0x04A0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                          IsBigBondsEpisode;                                 // 0x04B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_980F[0x7];                                     // 0x04B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CheckNotBigBondsEP;                                // 0x04B8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TArray<class FName>                           CheckDLCBondsEP;                                   // 0x04C8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_LC23_01_BT_Chat(int32 EntryPoint);
	void StartEvent();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_LC23_01_BT_Chat_C">();
	}
	static class ABP_LC23_01_BT_Chat_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_LC23_01_BT_Chat_C>();
	}
};
static_assert(alignof(ABP_LC23_01_BT_Chat_C) == 0x000008, "Wrong alignment on ABP_LC23_01_BT_Chat_C");
static_assert(sizeof(ABP_LC23_01_BT_Chat_C) == 0x0004D8, "Wrong size on ABP_LC23_01_BT_Chat_C");
static_assert(offsetof(ABP_LC23_01_BT_Chat_C, UberGraphFrame_BP_LC23_01_BT_Chat_C) == 0x000488, "Member 'ABP_LC23_01_BT_Chat_C::UberGraphFrame_BP_LC23_01_BT_Chat_C' has a wrong offset!");
static_assert(offsetof(ABP_LC23_01_BT_Chat_C, CheckCharaID_M) == 0x000490, "Member 'ABP_LC23_01_BT_Chat_C::CheckCharaID_M' has a wrong offset!");
static_assert(offsetof(ABP_LC23_01_BT_Chat_C, CheckCharaID_F) == 0x0004A0, "Member 'ABP_LC23_01_BT_Chat_C::CheckCharaID_F' has a wrong offset!");
static_assert(offsetof(ABP_LC23_01_BT_Chat_C, IsBigBondsEpisode) == 0x0004B0, "Member 'ABP_LC23_01_BT_Chat_C::IsBigBondsEpisode' has a wrong offset!");
static_assert(offsetof(ABP_LC23_01_BT_Chat_C, CheckNotBigBondsEP) == 0x0004B8, "Member 'ABP_LC23_01_BT_Chat_C::CheckNotBigBondsEP' has a wrong offset!");
static_assert(offsetof(ABP_LC23_01_BT_Chat_C, CheckDLCBondsEP) == 0x0004C8, "Member 'ABP_LC23_01_BT_Chat_C::CheckDLCBondsEP' has a wrong offset!");

}

