#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ST_DamageFloatingData

#include "Basic.hpp"


namespace SDK
{

// UserDefinedStruct ST_DamageFloatingData.ST_DamageFloatingData
// 0x0020 (0x0020 - 0x0000)
struct FST_DamageFloatingData final
{
public:
	float                                         Weight_5_0B3F7220453CD2FF3F3F80880C167407;         // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Attenuation_8_A51F0865483B26CE0372158524D6D08A;    // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FlyFallCoefficient_10_80FCA7ED474F364D1CE161B3CB815B5B; // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FlyMaxFallSpeed_13_9E36D11D42A4016CF2A0C1BFEE80A52A; // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NormalFallCoefficient_16_83716C654575A2BE2FA75AAC9567F240; // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NormalMaxFallSpeed_17_5DAB7764457B98251FB8F3A37B2FAD3E; // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LimitFloatingHeight_20_0204CBFE497FF5D55EAB7D924C89793B; // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         IgnoreLandingCheckTime_24_0ADC759442FEC46E9B5C76B8FE15C2CC; // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FST_DamageFloatingData) == 0x000004, "Wrong alignment on FST_DamageFloatingData");
static_assert(sizeof(FST_DamageFloatingData) == 0x000020, "Wrong size on FST_DamageFloatingData");
static_assert(offsetof(FST_DamageFloatingData, Weight_5_0B3F7220453CD2FF3F3F80880C167407) == 0x000000, "Member 'FST_DamageFloatingData::Weight_5_0B3F7220453CD2FF3F3F80880C167407' has a wrong offset!");
static_assert(offsetof(FST_DamageFloatingData, Attenuation_8_A51F0865483B26CE0372158524D6D08A) == 0x000004, "Member 'FST_DamageFloatingData::Attenuation_8_A51F0865483B26CE0372158524D6D08A' has a wrong offset!");
static_assert(offsetof(FST_DamageFloatingData, FlyFallCoefficient_10_80FCA7ED474F364D1CE161B3CB815B5B) == 0x000008, "Member 'FST_DamageFloatingData::FlyFallCoefficient_10_80FCA7ED474F364D1CE161B3CB815B5B' has a wrong offset!");
static_assert(offsetof(FST_DamageFloatingData, FlyMaxFallSpeed_13_9E36D11D42A4016CF2A0C1BFEE80A52A) == 0x00000C, "Member 'FST_DamageFloatingData::FlyMaxFallSpeed_13_9E36D11D42A4016CF2A0C1BFEE80A52A' has a wrong offset!");
static_assert(offsetof(FST_DamageFloatingData, NormalFallCoefficient_16_83716C654575A2BE2FA75AAC9567F240) == 0x000010, "Member 'FST_DamageFloatingData::NormalFallCoefficient_16_83716C654575A2BE2FA75AAC9567F240' has a wrong offset!");
static_assert(offsetof(FST_DamageFloatingData, NormalMaxFallSpeed_17_5DAB7764457B98251FB8F3A37B2FAD3E) == 0x000014, "Member 'FST_DamageFloatingData::NormalMaxFallSpeed_17_5DAB7764457B98251FB8F3A37B2FAD3E' has a wrong offset!");
static_assert(offsetof(FST_DamageFloatingData, LimitFloatingHeight_20_0204CBFE497FF5D55EAB7D924C89793B) == 0x000018, "Member 'FST_DamageFloatingData::LimitFloatingHeight_20_0204CBFE497FF5D55EAB7D924C89793B' has a wrong offset!");
static_assert(offsetof(FST_DamageFloatingData, IgnoreLandingCheckTime_24_0ADC759442FEC46E9B5C76B8FE15C2CC) == 0x00001C, "Member 'FST_DamageFloatingData::IgnoreLandingCheckTime_24_0ADC759442FEC46E9B5C76B8FE15C2CC' has a wrong offset!");

}

