#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SASCopyPlayerActor

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "BattlePrototype_structs.hpp"
#include "FNotifyAttackData_structs.hpp"
#include "ECharaExecuteNotifyKind_structs.hpp"
#include "ESASCopyStatus_structs.hpp"
#include "Engine_structs.hpp"
#include "ESASCopyAttachType_structs.hpp"


namespace SDK::Params
{

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.ExecuteUbergraph_BP_SASCopyPlayerActor
// 0x0410 (0x0410 - 0x0000)
struct BP_SASCopyPlayerActor_C_ExecuteUbergraph_BP_SASCopyPlayerActor final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D58[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class INexusDriveInterface>  K2Node_DynamicCast_AsNexus_Drive_Interface;        // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D59[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHCHitResult                           K2Node_Event_HitResult;                            // 0x0020(0x01C0)(ConstParm, ContainsInstancedReference)
	bool                                          K2Node_Event_bCopyPlayer;                          // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerID                                     K2Node_Event_PlayerID_3;                           // 0x01E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerID                                     K2Node_Event_PlayerID_2;                           // 0x01E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerID                                     K2Node_Event_PlayerID_1;                           // 0x01E3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerID                                     K2Node_Event_PlayerID;                             // 0x01E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_wait_on_in;                           // 0x01E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D5A[0x2];                                     // 0x01E6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D5B[0x4];                                     // 0x01EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHCHitResult                           K2Node_ComponentBoundEvent_Result;                 // 0x01F0(0x01C0)(ContainsInstancedReference)
	bool                                          CallFunc_PrevCheckOnAttackActorHit_bOK;            // 0x03B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D5C[0x7];                                     // 0x03B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleCharacterInterface_C> K2Node_DynamicCast_AsBPI_Battle_Character_Interface; // 0x03B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x03C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnemy_bEnemy;                           // 0x03C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x03CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D5D[0x5];                                     // 0x03CB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_PlayerFixParamater_C*               CallFunc_GetPlayerFixParam_Param;                  // 0x03D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UActorComponent*>                K2Node_MakeArray_Array;                            // 0x03D8(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x03E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D5E[0x3];                                     // 0x03E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X;                            // 0x03EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x03F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x03F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URSParticleSystemComponentBase*         K2Node_Event_Particle_1;                           // 0x03F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URSParticleSystemComponentBase*         K2Node_Event_Particle;                             // 0x0400(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0408(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0409(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsControlAI_bAI;                          // 0x040A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_ExecuteUbergraph_BP_SASCopyPlayerActor) == 0x000008, "Wrong alignment on BP_SASCopyPlayerActor_C_ExecuteUbergraph_BP_SASCopyPlayerActor");
static_assert(sizeof(BP_SASCopyPlayerActor_C_ExecuteUbergraph_BP_SASCopyPlayerActor) == 0x000410, "Wrong size on BP_SASCopyPlayerActor_C_ExecuteUbergraph_BP_SASCopyPlayerActor");
static_assert(offsetof(BP_SASCopyPlayerActor_C_ExecuteUbergraph_BP_SASCopyPlayerActor, EntryPoint) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_ExecuteUbergraph_BP_SASCopyPlayerActor::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_ExecuteUbergraph_BP_SASCopyPlayerActor, K2Node_DynamicCast_AsNexus_Drive_Interface) == 0x000008, "Member 'BP_SASCopyPlayerActor_C_ExecuteUbergraph_BP_SASCopyPlayerActor::K2Node_DynamicCast_AsNexus_Drive_Interface' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_ExecuteUbergraph_BP_SASCopyPlayerActor, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_SASCopyPlayerActor_C_ExecuteUbergraph_BP_SASCopyPlayerActor::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_ExecuteUbergraph_BP_SASCopyPlayerActor, K2Node_Event_HitResult) == 0x000020, "Member 'BP_SASCopyPlayerActor_C_ExecuteUbergraph_BP_SASCopyPlayerActor::K2Node_Event_HitResult' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_ExecuteUbergraph_BP_SASCopyPlayerActor, K2Node_Event_bCopyPlayer) == 0x0001E0, "Member 'BP_SASCopyPlayerActor_C_ExecuteUbergraph_BP_SASCopyPlayerActor::K2Node_Event_bCopyPlayer' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_ExecuteUbergraph_BP_SASCopyPlayerActor, K2Node_Event_PlayerID_3) == 0x0001E1, "Member 'BP_SASCopyPlayerActor_C_ExecuteUbergraph_BP_SASCopyPlayerActor::K2Node_Event_PlayerID_3' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_ExecuteUbergraph_BP_SASCopyPlayerActor, K2Node_Event_PlayerID_2) == 0x0001E2, "Member 'BP_SASCopyPlayerActor_C_ExecuteUbergraph_BP_SASCopyPlayerActor::K2Node_Event_PlayerID_2' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_ExecuteUbergraph_BP_SASCopyPlayerActor, K2Node_Event_PlayerID_1) == 0x0001E3, "Member 'BP_SASCopyPlayerActor_C_ExecuteUbergraph_BP_SASCopyPlayerActor::K2Node_Event_PlayerID_1' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_ExecuteUbergraph_BP_SASCopyPlayerActor, K2Node_Event_PlayerID) == 0x0001E4, "Member 'BP_SASCopyPlayerActor_C_ExecuteUbergraph_BP_SASCopyPlayerActor::K2Node_Event_PlayerID' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_ExecuteUbergraph_BP_SASCopyPlayerActor, K2Node_Event_wait_on_in) == 0x0001E5, "Member 'BP_SASCopyPlayerActor_C_ExecuteUbergraph_BP_SASCopyPlayerActor::K2Node_Event_wait_on_in' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_ExecuteUbergraph_BP_SASCopyPlayerActor, K2Node_Event_DeltaSeconds) == 0x0001E8, "Member 'BP_SASCopyPlayerActor_C_ExecuteUbergraph_BP_SASCopyPlayerActor::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_ExecuteUbergraph_BP_SASCopyPlayerActor, K2Node_ComponentBoundEvent_Result) == 0x0001F0, "Member 'BP_SASCopyPlayerActor_C_ExecuteUbergraph_BP_SASCopyPlayerActor::K2Node_ComponentBoundEvent_Result' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_ExecuteUbergraph_BP_SASCopyPlayerActor, CallFunc_PrevCheckOnAttackActorHit_bOK) == 0x0003B0, "Member 'BP_SASCopyPlayerActor_C_ExecuteUbergraph_BP_SASCopyPlayerActor::CallFunc_PrevCheckOnAttackActorHit_bOK' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_ExecuteUbergraph_BP_SASCopyPlayerActor, K2Node_DynamicCast_AsBPI_Battle_Character_Interface) == 0x0003B8, "Member 'BP_SASCopyPlayerActor_C_ExecuteUbergraph_BP_SASCopyPlayerActor::K2Node_DynamicCast_AsBPI_Battle_Character_Interface' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_ExecuteUbergraph_BP_SASCopyPlayerActor, K2Node_DynamicCast_bSuccess_1) == 0x0003C8, "Member 'BP_SASCopyPlayerActor_C_ExecuteUbergraph_BP_SASCopyPlayerActor::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_ExecuteUbergraph_BP_SASCopyPlayerActor, CallFunc_IsEnemy_bEnemy) == 0x0003C9, "Member 'BP_SASCopyPlayerActor_C_ExecuteUbergraph_BP_SASCopyPlayerActor::CallFunc_IsEnemy_bEnemy' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_ExecuteUbergraph_BP_SASCopyPlayerActor, CallFunc_IsValid_ReturnValue) == 0x0003CA, "Member 'BP_SASCopyPlayerActor_C_ExecuteUbergraph_BP_SASCopyPlayerActor::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_ExecuteUbergraph_BP_SASCopyPlayerActor, CallFunc_GetPlayerFixParam_Param) == 0x0003D0, "Member 'BP_SASCopyPlayerActor_C_ExecuteUbergraph_BP_SASCopyPlayerActor::CallFunc_GetPlayerFixParam_Param' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_ExecuteUbergraph_BP_SASCopyPlayerActor, K2Node_MakeArray_Array) == 0x0003D8, "Member 'BP_SASCopyPlayerActor_C_ExecuteUbergraph_BP_SASCopyPlayerActor::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_ExecuteUbergraph_BP_SASCopyPlayerActor, CallFunc_IsValid_ReturnValue_1) == 0x0003E8, "Member 'BP_SASCopyPlayerActor_C_ExecuteUbergraph_BP_SASCopyPlayerActor::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_ExecuteUbergraph_BP_SASCopyPlayerActor, CallFunc_BreakVector_X) == 0x0003EC, "Member 'BP_SASCopyPlayerActor_C_ExecuteUbergraph_BP_SASCopyPlayerActor::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_ExecuteUbergraph_BP_SASCopyPlayerActor, CallFunc_BreakVector_Y) == 0x0003F0, "Member 'BP_SASCopyPlayerActor_C_ExecuteUbergraph_BP_SASCopyPlayerActor::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_ExecuteUbergraph_BP_SASCopyPlayerActor, CallFunc_BreakVector_Z) == 0x0003F4, "Member 'BP_SASCopyPlayerActor_C_ExecuteUbergraph_BP_SASCopyPlayerActor::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_ExecuteUbergraph_BP_SASCopyPlayerActor, K2Node_Event_Particle_1) == 0x0003F8, "Member 'BP_SASCopyPlayerActor_C_ExecuteUbergraph_BP_SASCopyPlayerActor::K2Node_Event_Particle_1' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_ExecuteUbergraph_BP_SASCopyPlayerActor, K2Node_Event_Particle) == 0x000400, "Member 'BP_SASCopyPlayerActor_C_ExecuteUbergraph_BP_SASCopyPlayerActor::K2Node_Event_Particle' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_ExecuteUbergraph_BP_SASCopyPlayerActor, CallFunc_IsValid_ReturnValue_2) == 0x000408, "Member 'BP_SASCopyPlayerActor_C_ExecuteUbergraph_BP_SASCopyPlayerActor::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_ExecuteUbergraph_BP_SASCopyPlayerActor, CallFunc_IsValid_ReturnValue_3) == 0x000409, "Member 'BP_SASCopyPlayerActor_C_ExecuteUbergraph_BP_SASCopyPlayerActor::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_ExecuteUbergraph_BP_SASCopyPlayerActor, CallFunc_IsControlAI_bAI) == 0x00040A, "Member 'BP_SASCopyPlayerActor_C_ExecuteUbergraph_BP_SASCopyPlayerActor::CallFunc_IsControlAI_bAI' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.RegisterEffectInterface
// 0x0008 (0x0008 - 0x0000)
struct BP_SASCopyPlayerActor_C_RegisterEffectInterface final
{
public:
	class URSParticleSystemComponentBase*         Particle;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_RegisterEffectInterface) == 0x000008, "Wrong alignment on BP_SASCopyPlayerActor_C_RegisterEffectInterface");
static_assert(sizeof(BP_SASCopyPlayerActor_C_RegisterEffectInterface) == 0x000008, "Wrong size on BP_SASCopyPlayerActor_C_RegisterEffectInterface");
static_assert(offsetof(BP_SASCopyPlayerActor_C_RegisterEffectInterface, Particle) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_RegisterEffectInterface::Particle' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.RegisterInterruptTelepoEffectInterface
// 0x0008 (0x0008 - 0x0000)
struct BP_SASCopyPlayerActor_C_RegisterInterruptTelepoEffectInterface final
{
public:
	class URSParticleSystemComponentBase*         Particle;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_RegisterInterruptTelepoEffectInterface) == 0x000008, "Wrong alignment on BP_SASCopyPlayerActor_C_RegisterInterruptTelepoEffectInterface");
static_assert(sizeof(BP_SASCopyPlayerActor_C_RegisterInterruptTelepoEffectInterface) == 0x000008, "Wrong size on BP_SASCopyPlayerActor_C_RegisterInterruptTelepoEffectInterface");
static_assert(offsetof(BP_SASCopyPlayerActor_C_RegisterInterruptTelepoEffectInterface, Particle) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_RegisterInterruptTelepoEffectInterface::Particle' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.BndEvt__HitCheckReceiver_K2Node_ComponentBoundEvent_0_HitResultDelegate__DelegateSignature
// 0x01C0 (0x01C0 - 0x0000)
struct BP_SASCopyPlayerActor_C_BndEvt__HitCheckReceiver_K2Node_ComponentBoundEvent_0_HitResultDelegate__DelegateSignature final
{
public:
	struct FHCHitResult                           Result;                                            // 0x0000(0x01C0)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_BndEvt__HitCheckReceiver_K2Node_ComponentBoundEvent_0_HitResultDelegate__DelegateSignature) == 0x000008, "Wrong alignment on BP_SASCopyPlayerActor_C_BndEvt__HitCheckReceiver_K2Node_ComponentBoundEvent_0_HitResultDelegate__DelegateSignature");
static_assert(sizeof(BP_SASCopyPlayerActor_C_BndEvt__HitCheckReceiver_K2Node_ComponentBoundEvent_0_HitResultDelegate__DelegateSignature) == 0x0001C0, "Wrong size on BP_SASCopyPlayerActor_C_BndEvt__HitCheckReceiver_K2Node_ComponentBoundEvent_0_HitResultDelegate__DelegateSignature");
static_assert(offsetof(BP_SASCopyPlayerActor_C_BndEvt__HitCheckReceiver_K2Node_ComponentBoundEvent_0_HitResultDelegate__DelegateSignature, Result) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_BndEvt__HitCheckReceiver_K2Node_ComponentBoundEvent_0_HitResultDelegate__DelegateSignature::Result' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_SASCopyPlayerActor_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_SASCopyPlayerActor_C_ReceiveTick");
static_assert(sizeof(BP_SASCopyPlayerActor_C_ReceiveTick) == 0x000004, "Wrong size on BP_SASCopyPlayerActor_C_ReceiveTick");
static_assert(offsetof(BP_SASCopyPlayerActor_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.SetCounterWait
// 0x0001 (0x0001 - 0x0000)
struct BP_SASCopyPlayerActor_C_SetCounterWait final
{
public:
	bool                                          Wait_on_in;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_SetCounterWait) == 0x000001, "Wrong alignment on BP_SASCopyPlayerActor_C_SetCounterWait");
static_assert(sizeof(BP_SASCopyPlayerActor_C_SetCounterWait) == 0x000001, "Wrong size on BP_SASCopyPlayerActor_C_SetCounterWait");
static_assert(offsetof(BP_SASCopyPlayerActor_C_SetCounterWait, Wait_on_in) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_SetCounterWait::Wait_on_in' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.UnregisterNpcDriveForNexusDrive
// 0x0001 (0x0001 - 0x0000)
struct BP_SASCopyPlayerActor_C_UnregisterNpcDriveForNexusDrive final
{
public:
	EPlayerID                                     PlayerId;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_UnregisterNpcDriveForNexusDrive) == 0x000001, "Wrong alignment on BP_SASCopyPlayerActor_C_UnregisterNpcDriveForNexusDrive");
static_assert(sizeof(BP_SASCopyPlayerActor_C_UnregisterNpcDriveForNexusDrive) == 0x000001, "Wrong size on BP_SASCopyPlayerActor_C_UnregisterNpcDriveForNexusDrive");
static_assert(offsetof(BP_SASCopyPlayerActor_C_UnregisterNpcDriveForNexusDrive, PlayerId) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_UnregisterNpcDriveForNexusDrive::PlayerId' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.UnregisterDelayDriveEnd
// 0x0001 (0x0001 - 0x0000)
struct BP_SASCopyPlayerActor_C_UnregisterDelayDriveEnd final
{
public:
	EPlayerID                                     PlayerId;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_UnregisterDelayDriveEnd) == 0x000001, "Wrong alignment on BP_SASCopyPlayerActor_C_UnregisterDelayDriveEnd");
static_assert(sizeof(BP_SASCopyPlayerActor_C_UnregisterDelayDriveEnd) == 0x000001, "Wrong size on BP_SASCopyPlayerActor_C_UnregisterDelayDriveEnd");
static_assert(offsetof(BP_SASCopyPlayerActor_C_UnregisterDelayDriveEnd, PlayerId) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_UnregisterDelayDriveEnd::PlayerId' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.RegisterNpcDriveForNexusDrive
// 0x0001 (0x0001 - 0x0000)
struct BP_SASCopyPlayerActor_C_RegisterNpcDriveForNexusDrive final
{
public:
	EPlayerID                                     PlayerId;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_RegisterNpcDriveForNexusDrive) == 0x000001, "Wrong alignment on BP_SASCopyPlayerActor_C_RegisterNpcDriveForNexusDrive");
static_assert(sizeof(BP_SASCopyPlayerActor_C_RegisterNpcDriveForNexusDrive) == 0x000001, "Wrong size on BP_SASCopyPlayerActor_C_RegisterNpcDriveForNexusDrive");
static_assert(offsetof(BP_SASCopyPlayerActor_C_RegisterNpcDriveForNexusDrive, PlayerId) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_RegisterNpcDriveForNexusDrive::PlayerId' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.RegisterDelayDriveEnd
// 0x0001 (0x0001 - 0x0000)
struct BP_SASCopyPlayerActor_C_RegisterDelayDriveEnd final
{
public:
	EPlayerID                                     PlayerId;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_RegisterDelayDriveEnd) == 0x000001, "Wrong alignment on BP_SASCopyPlayerActor_C_RegisterDelayDriveEnd");
static_assert(sizeof(BP_SASCopyPlayerActor_C_RegisterDelayDriveEnd) == 0x000001, "Wrong size on BP_SASCopyPlayerActor_C_RegisterDelayDriveEnd");
static_assert(offsetof(BP_SASCopyPlayerActor_C_RegisterDelayDriveEnd, PlayerId) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_RegisterDelayDriveEnd::PlayerId' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.NexusDriveAttackHitRecovery
// 0x01C8 (0x01C8 - 0x0000)
struct BP_SASCopyPlayerActor_C_NexusDriveAttackHitRecovery final
{
public:
	struct FHCHitResult                           HitResult;                                         // 0x0000(0x01C0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	bool                                          bCopyPlayer;                                       // 0x01C0(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_NexusDriveAttackHitRecovery) == 0x000008, "Wrong alignment on BP_SASCopyPlayerActor_C_NexusDriveAttackHitRecovery");
static_assert(sizeof(BP_SASCopyPlayerActor_C_NexusDriveAttackHitRecovery) == 0x0001C8, "Wrong size on BP_SASCopyPlayerActor_C_NexusDriveAttackHitRecovery");
static_assert(offsetof(BP_SASCopyPlayerActor_C_NexusDriveAttackHitRecovery, HitResult) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_NexusDriveAttackHitRecovery::HitResult' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_NexusDriveAttackHitRecovery, bCopyPlayer) == 0x0001C0, "Member 'BP_SASCopyPlayerActor_C_NexusDriveAttackHitRecovery::bCopyPlayer' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.Setting
// 0x0138 (0x0138 - 0x0000)
struct BP_SASCopyPlayerActor_C_Setting final
{
public:
	class ARSBattlePlayer_C*                      OriginalPlayer;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 AnimBP;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESASCopyAttachType                            AttachType;                                        // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D5F[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerInterface_C> CallFunc_IsEnemyPlayer_self_CastInput;             // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnemyPlayer_bEnemyPlayer;               // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D60[0x6];                                     // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IPlayerInterface>      CallFunc_GetPlayerID_self_CastInput;               // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerID                                     CallFunc_GetPlayerID_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D61[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPlayerInfo                            CallFunc_GetPartyMemberInfo_ReturnValue;           // 0x0044(0x00D0)(NoDestructor)
	float                                         CallFunc_GetScaledCapsuleHalfHeight_ReturnValue;   // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_GetWalkableFloorAngle_ReturnValue;     // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D62[0x4];                                     // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCopyPlayerAnimInstance*                K2Node_DynamicCast_AsCopy_Player_Anim_Instance;    // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_Setting) == 0x000008, "Wrong alignment on BP_SASCopyPlayerActor_C_Setting");
static_assert(sizeof(BP_SASCopyPlayerActor_C_Setting) == 0x000138, "Wrong size on BP_SASCopyPlayerActor_C_Setting");
static_assert(offsetof(BP_SASCopyPlayerActor_C_Setting, OriginalPlayer) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_Setting::OriginalPlayer' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_Setting, AnimBP) == 0x000008, "Member 'BP_SASCopyPlayerActor_C_Setting::AnimBP' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_Setting, AttachType) == 0x000010, "Member 'BP_SASCopyPlayerActor_C_Setting::AttachType' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_Setting, CallFunc_IsEnemyPlayer_self_CastInput) == 0x000018, "Member 'BP_SASCopyPlayerActor_C_Setting::CallFunc_IsEnemyPlayer_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_Setting, CallFunc_IsEnemyPlayer_bEnemyPlayer) == 0x000028, "Member 'BP_SASCopyPlayerActor_C_Setting::CallFunc_IsEnemyPlayer_bEnemyPlayer' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_Setting, CallFunc_IsValid_ReturnValue) == 0x000029, "Member 'BP_SASCopyPlayerActor_C_Setting::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_Setting, CallFunc_GetPlayerID_self_CastInput) == 0x000030, "Member 'BP_SASCopyPlayerActor_C_Setting::CallFunc_GetPlayerID_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_Setting, CallFunc_GetPlayerID_ReturnValue) == 0x000040, "Member 'BP_SASCopyPlayerActor_C_Setting::CallFunc_GetPlayerID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_Setting, CallFunc_GetPartyMemberInfo_ReturnValue) == 0x000044, "Member 'BP_SASCopyPlayerActor_C_Setting::CallFunc_GetPartyMemberInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_Setting, CallFunc_GetScaledCapsuleHalfHeight_ReturnValue) == 0x000114, "Member 'BP_SASCopyPlayerActor_C_Setting::CallFunc_GetScaledCapsuleHalfHeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_Setting, CallFunc_K2_GetWalkableFloorAngle_ReturnValue) == 0x000118, "Member 'BP_SASCopyPlayerActor_C_Setting::CallFunc_K2_GetWalkableFloorAngle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_Setting, CallFunc_GetAnimInstance_ReturnValue) == 0x000120, "Member 'BP_SASCopyPlayerActor_C_Setting::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_Setting, K2Node_DynamicCast_AsCopy_Player_Anim_Instance) == 0x000128, "Member 'BP_SASCopyPlayerActor_C_Setting::K2Node_DynamicCast_AsCopy_Player_Anim_Instance' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_Setting, K2Node_DynamicCast_bSuccess) == 0x000130, "Member 'BP_SASCopyPlayerActor_C_Setting::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.CopyOn
// 0x0108 (0x0108 - 0x0000)
struct BP_SASCopyPlayerActor_C_CopyOn final
{
public:
	float                                         Time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bWithSubWeapon;                                    // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          LEnpc;                                             // 0x0005(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D63[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_1;                      // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D64[0x2];                                     // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorRelativeLocation_SweepHitResult; // 0x0024(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_Array_Get_Item;                           // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D65[0x3];                                     // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D66[0x4];                                     // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_WeaponBase_C*>               CallFunc_GetWeaponList_WeaponList;                 // 0x00B8(0x0010)(ReferenceParm, HasGetValueTypeHash)
	float                                         CallFunc_GetWeaponEmissiveValue_Emmisive;          // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D67[0x3];                                     // 0x00D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D68[0x4];                                     // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerInterface_C> K2Node_DynamicCast_AsBPI_Player_Interface;         // 0x00E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnemyPlayer_bEnemyPlayer;               // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDriveMode_ReturnValue;                  // 0x00F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D69[0x5];                                     // 0x00F3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BrainFieldManager_C*                CallFunc_GetBrainFieldManager_Manager;             // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InBranField_InBrainDield;                 // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsUserIsPlayer_IsPlayer;                  // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0102(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default;                             // 0x0103(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0104(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_CopyOn) == 0x000008, "Wrong alignment on BP_SASCopyPlayerActor_C_CopyOn");
static_assert(sizeof(BP_SASCopyPlayerActor_C_CopyOn) == 0x000108, "Wrong size on BP_SASCopyPlayerActor_C_CopyOn");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyOn, Time) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_CopyOn::Time' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyOn, bWithSubWeapon) == 0x000004, "Member 'BP_SASCopyPlayerActor_C_CopyOn::bWithSubWeapon' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyOn, LEnpc) == 0x000005, "Member 'BP_SASCopyPlayerActor_C_CopyOn::LEnpc' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyOn, Temp_int_Loop_Num_Variable) == 0x000008, "Member 'BP_SASCopyPlayerActor_C_CopyOn::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyOn, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'BP_SASCopyPlayerActor_C_CopyOn::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyOn, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'BP_SASCopyPlayerActor_C_CopyOn::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyOn, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_SASCopyPlayerActor_C_CopyOn::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyOn, Temp_int_Array_Index_Variable_1) == 0x000018, "Member 'BP_SASCopyPlayerActor_C_CopyOn::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyOn, Temp_int_Loop_Num_Variable_1) == 0x00001C, "Member 'BP_SASCopyPlayerActor_C_CopyOn::Temp_int_Loop_Num_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyOn, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'BP_SASCopyPlayerActor_C_CopyOn::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyOn, Temp_bool_Variable) == 0x000021, "Member 'BP_SASCopyPlayerActor_C_CopyOn::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyOn, CallFunc_K2_SetActorRelativeLocation_SweepHitResult) == 0x000024, "Member 'BP_SASCopyPlayerActor_C_CopyOn::CallFunc_K2_SetActorRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyOn, CallFunc_Array_Get_Item) == 0x0000AC, "Member 'BP_SASCopyPlayerActor_C_CopyOn::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyOn, CallFunc_Array_Length_ReturnValue) == 0x0000B0, "Member 'BP_SASCopyPlayerActor_C_CopyOn::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyOn, CallFunc_GetWeaponList_WeaponList) == 0x0000B8, "Member 'BP_SASCopyPlayerActor_C_CopyOn::CallFunc_GetWeaponList_WeaponList' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyOn, CallFunc_GetWeaponEmissiveValue_Emmisive) == 0x0000C8, "Member 'BP_SASCopyPlayerActor_C_CopyOn::CallFunc_GetWeaponEmissiveValue_Emmisive' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyOn, CallFunc_Array_Length_ReturnValue_1) == 0x0000CC, "Member 'BP_SASCopyPlayerActor_C_CopyOn::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyOn, Temp_int_Loop_Counter_Variable_1) == 0x0000D0, "Member 'BP_SASCopyPlayerActor_C_CopyOn::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyOn, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000D4, "Member 'BP_SASCopyPlayerActor_C_CopyOn::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyOn, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000D8, "Member 'BP_SASCopyPlayerActor_C_CopyOn::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyOn, K2Node_DynamicCast_AsBPI_Player_Interface) == 0x0000E0, "Member 'BP_SASCopyPlayerActor_C_CopyOn::K2Node_DynamicCast_AsBPI_Player_Interface' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyOn, K2Node_DynamicCast_bSuccess) == 0x0000F0, "Member 'BP_SASCopyPlayerActor_C_CopyOn::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyOn, CallFunc_IsEnemyPlayer_bEnemyPlayer) == 0x0000F1, "Member 'BP_SASCopyPlayerActor_C_CopyOn::CallFunc_IsEnemyPlayer_bEnemyPlayer' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyOn, CallFunc_IsDriveMode_ReturnValue) == 0x0000F2, "Member 'BP_SASCopyPlayerActor_C_CopyOn::CallFunc_IsDriveMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyOn, CallFunc_GetBrainFieldManager_Manager) == 0x0000F8, "Member 'BP_SASCopyPlayerActor_C_CopyOn::CallFunc_GetBrainFieldManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyOn, CallFunc_InBranField_InBrainDield) == 0x000100, "Member 'BP_SASCopyPlayerActor_C_CopyOn::CallFunc_InBranField_InBrainDield' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyOn, CallFunc_IsUserIsPlayer_IsPlayer) == 0x000101, "Member 'BP_SASCopyPlayerActor_C_CopyOn::CallFunc_IsUserIsPlayer_IsPlayer' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyOn, CallFunc_Not_PreBool_ReturnValue) == 0x000102, "Member 'BP_SASCopyPlayerActor_C_CopyOn::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyOn, K2Node_Select_Default) == 0x000103, "Member 'BP_SASCopyPlayerActor_C_CopyOn::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyOn, K2Node_SwitchEnum_CmpSuccess) == 0x000104, "Member 'BP_SASCopyPlayerActor_C_CopyOn::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.CopyOff
// 0x0020 (0x0020 - 0x0000)
struct BP_SASCopyPlayerActor_C_CopyOff final
{
public:
	float                                         Time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRate_ReturnValue;                      // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D6A[0x6];                                     // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class URSParticleSystemComponentBase*         CallFunc_SpawnEmitterAttached_ReturnValue;         // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_CopyOff) == 0x000008, "Wrong alignment on BP_SASCopyPlayerActor_C_CopyOff");
static_assert(sizeof(BP_SASCopyPlayerActor_C_CopyOff) == 0x000020, "Wrong size on BP_SASCopyPlayerActor_C_CopyOff");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyOff, Time) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_CopyOff::Time' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyOff, CallFunc_GetRate_ReturnValue) == 0x000004, "Member 'BP_SASCopyPlayerActor_C_CopyOff::CallFunc_GetRate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyOff, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000008, "Member 'BP_SASCopyPlayerActor_C_CopyOff::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyOff, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'BP_SASCopyPlayerActor_C_CopyOff::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyOff, CallFunc_SpawnEmitterAttached_ReturnValue) == 0x000010, "Member 'BP_SASCopyPlayerActor_C_CopyOff::CallFunc_SpawnEmitterAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyOff, K2Node_SwitchEnum_CmpSuccess) == 0x000018, "Member 'BP_SASCopyPlayerActor_C_CopyOff::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.Update
// 0x0030 (0x0030 - 0x0000)
struct BP_SASCopyPlayerActor_C_Update final
{
public:
	float                                         LRate;                                             // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D6B[0x1];                                     // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class URSParticleSystemComponentBase*         CallFunc_SpawnEmitterAttached_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOver_ReturnValue;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D6C[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRate_ReturnValue;                      // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_1;                       // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOver_ReturnValue_1;                     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D6D[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRate_ReturnValue_1;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_Update) == 0x000008, "Wrong alignment on BP_SASCopyPlayerActor_C_Update");
static_assert(sizeof(BP_SASCopyPlayerActor_C_Update) == 0x000030, "Wrong size on BP_SASCopyPlayerActor_C_Update");
static_assert(offsetof(BP_SASCopyPlayerActor_C_Update, LRate) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_Update::LRate' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_Update, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'BP_SASCopyPlayerActor_C_Update::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_Update, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000005, "Member 'BP_SASCopyPlayerActor_C_Update::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_Update, CallFunc_Not_PreBool_ReturnValue) == 0x000006, "Member 'BP_SASCopyPlayerActor_C_Update::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_Update, CallFunc_SpawnEmitterAttached_ReturnValue) == 0x000008, "Member 'BP_SASCopyPlayerActor_C_Update::CallFunc_SpawnEmitterAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_Update, CallFunc_IsOver_ReturnValue) == 0x000010, "Member 'BP_SASCopyPlayerActor_C_Update::CallFunc_IsOver_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_Update, CallFunc_GetRate_ReturnValue) == 0x000014, "Member 'BP_SASCopyPlayerActor_C_Update::CallFunc_GetRate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_Update, CallFunc_Lerp_ReturnValue) == 0x000018, "Member 'BP_SASCopyPlayerActor_C_Update::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_Update, CallFunc_Lerp_ReturnValue_1) == 0x00001C, "Member 'BP_SASCopyPlayerActor_C_Update::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_Update, CallFunc_IsOver_ReturnValue_1) == 0x000020, "Member 'BP_SASCopyPlayerActor_C_Update::CallFunc_IsOver_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_Update, CallFunc_GetRate_ReturnValue_1) == 0x000024, "Member 'BP_SASCopyPlayerActor_C_Update::CallFunc_GetRate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_Update, K2Node_SwitchEnum_CmpSuccess) == 0x000028, "Member 'BP_SASCopyPlayerActor_C_Update::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.SetVisibility
// 0x0030 (0x0030 - 0x0000)
struct BP_SASCopyPlayerActor_C_SetVisibility final
{
public:
	bool                                          bVisibility;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bWithSubWeapon;                                    // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D6E[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_WeaponBase_C*>               CallFunc_GetWeaponList_WeaponList;                 // 0x0010(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D6F[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayerStatus_Result;                    // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_SetVisibility) == 0x000008, "Wrong alignment on BP_SASCopyPlayerActor_C_SetVisibility");
static_assert(sizeof(BP_SASCopyPlayerActor_C_SetVisibility) == 0x000030, "Wrong size on BP_SASCopyPlayerActor_C_SetVisibility");
static_assert(offsetof(BP_SASCopyPlayerActor_C_SetVisibility, bVisibility) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_SetVisibility::bVisibility' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_SetVisibility, bWithSubWeapon) == 0x000001, "Member 'BP_SASCopyPlayerActor_C_SetVisibility::bWithSubWeapon' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_SetVisibility, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_SASCopyPlayerActor_C_SetVisibility::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_SetVisibility, Temp_int_Loop_Num_Variable) == 0x000008, "Member 'BP_SASCopyPlayerActor_C_SetVisibility::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_SetVisibility, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BP_SASCopyPlayerActor_C_SetVisibility::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_SetVisibility, CallFunc_GetWeaponList_WeaponList) == 0x000010, "Member 'BP_SASCopyPlayerActor_C_SetVisibility::CallFunc_GetWeaponList_WeaponList' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_SetVisibility, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'BP_SASCopyPlayerActor_C_SetVisibility::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_SetVisibility, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'BP_SASCopyPlayerActor_C_SetVisibility::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_SetVisibility, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BP_SASCopyPlayerActor_C_SetVisibility::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_SetVisibility, CallFunc_IsPlayerStatus_Result) == 0x00002C, "Member 'BP_SASCopyPlayerActor_C_SetVisibility::CallFunc_IsPlayerStatus_Result' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.SetCopyMaterialValue
// 0x0004 (0x0004 - 0x0000)
struct BP_SASCopyPlayerActor_C_SetCopyMaterialValue final
{
public:
	float                                         Rate;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_SetCopyMaterialValue) == 0x000004, "Wrong alignment on BP_SASCopyPlayerActor_C_SetCopyMaterialValue");
static_assert(sizeof(BP_SASCopyPlayerActor_C_SetCopyMaterialValue) == 0x000004, "Wrong size on BP_SASCopyPlayerActor_C_SetCopyMaterialValue");
static_assert(offsetof(BP_SASCopyPlayerActor_C_SetCopyMaterialValue, Rate) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_SetCopyMaterialValue::Rate' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.PlayMontage
// 0x0030 (0x0030 - 0x0000)
struct BP_SASCopyPlayerActor_C_PlayMontage final
{
public:
	class UAnimMontage*                           Montage;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PlayRate;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   SectionName;                                       // 0x000C(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D70[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCopyPlayerAnimInstance*                K2Node_DynamicCast_AsCopy_Player_Anim_Instance;    // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D71[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Montage_Play_ReturnValue;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_PlayMontage) == 0x000008, "Wrong alignment on BP_SASCopyPlayerActor_C_PlayMontage");
static_assert(sizeof(BP_SASCopyPlayerActor_C_PlayMontage) == 0x000030, "Wrong size on BP_SASCopyPlayerActor_C_PlayMontage");
static_assert(offsetof(BP_SASCopyPlayerActor_C_PlayMontage, Montage) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_PlayMontage::Montage' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_PlayMontage, PlayRate) == 0x000008, "Member 'BP_SASCopyPlayerActor_C_PlayMontage::PlayRate' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_PlayMontage, SectionName) == 0x00000C, "Member 'BP_SASCopyPlayerActor_C_PlayMontage::SectionName' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_PlayMontage, CallFunc_NotEqual_NameName_ReturnValue) == 0x000014, "Member 'BP_SASCopyPlayerActor_C_PlayMontage::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_PlayMontage, CallFunc_GetAnimInstance_ReturnValue) == 0x000018, "Member 'BP_SASCopyPlayerActor_C_PlayMontage::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_PlayMontage, K2Node_DynamicCast_AsCopy_Player_Anim_Instance) == 0x000020, "Member 'BP_SASCopyPlayerActor_C_PlayMontage::K2Node_DynamicCast_AsCopy_Player_Anim_Instance' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_PlayMontage, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_SASCopyPlayerActor_C_PlayMontage::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_PlayMontage, CallFunc_Montage_Play_ReturnValue) == 0x00002C, "Member 'BP_SASCopyPlayerActor_C_PlayMontage::CallFunc_Montage_Play_ReturnValue' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.StopMontage
// 0x0018 (0x0018 - 0x0000)
struct BP_SASCopyPlayerActor_C_StopMontage final
{
public:
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCopyPlayerAnimInstance*                K2Node_DynamicCast_AsCopy_Player_Anim_Instance;    // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_StopMontage) == 0x000008, "Wrong alignment on BP_SASCopyPlayerActor_C_StopMontage");
static_assert(sizeof(BP_SASCopyPlayerActor_C_StopMontage) == 0x000018, "Wrong size on BP_SASCopyPlayerActor_C_StopMontage");
static_assert(offsetof(BP_SASCopyPlayerActor_C_StopMontage, CallFunc_GetAnimInstance_ReturnValue) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_StopMontage::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_StopMontage, K2Node_DynamicCast_AsCopy_Player_Anim_Instance) == 0x000008, "Member 'BP_SASCopyPlayerActor_C_StopMontage::K2Node_DynamicCast_AsCopy_Player_Anim_Instance' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_StopMontage, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_SASCopyPlayerActor_C_StopMontage::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.PrevCheckOnAttackActorHit
// 0x01E0 (0x01E0 - 0x0000)
struct BP_SASCopyPlayerActor_C_PrevCheckOnAttackActorHit final
{
public:
	struct FHCHitResult                           HCHitResult;                                       // 0x0000(0x01C0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	bool                                          bOK;                                               // 0x01C0(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D72[0x7];                                     // 0x01C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 HitActor;                                          // 0x01C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_PrevCheckOnAttackActorHit) == 0x000008, "Wrong alignment on BP_SASCopyPlayerActor_C_PrevCheckOnAttackActorHit");
static_assert(sizeof(BP_SASCopyPlayerActor_C_PrevCheckOnAttackActorHit) == 0x0001E0, "Wrong size on BP_SASCopyPlayerActor_C_PrevCheckOnAttackActorHit");
static_assert(offsetof(BP_SASCopyPlayerActor_C_PrevCheckOnAttackActorHit, HCHitResult) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_PrevCheckOnAttackActorHit::HCHitResult' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_PrevCheckOnAttackActorHit, bOK) == 0x0001C0, "Member 'BP_SASCopyPlayerActor_C_PrevCheckOnAttackActorHit::bOK' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_PrevCheckOnAttackActorHit, HitActor) == 0x0001C8, "Member 'BP_SASCopyPlayerActor_C_PrevCheckOnAttackActorHit::HitActor' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_PrevCheckOnAttackActorHit, CallFunc_Array_Add_ReturnValue) == 0x0001D0, "Member 'BP_SASCopyPlayerActor_C_PrevCheckOnAttackActorHit::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_PrevCheckOnAttackActorHit, CallFunc_Array_Find_ReturnValue) == 0x0001D4, "Member 'BP_SASCopyPlayerActor_C_PrevCheckOnAttackActorHit::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_PrevCheckOnAttackActorHit, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0001D8, "Member 'BP_SASCopyPlayerActor_C_PrevCheckOnAttackActorHit::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.SpawnParticle
// 0x0038 (0x0038 - 0x0000)
struct BP_SASCopyPlayerActor_C_SpawnParticle final
{
public:
	class UParticleSystem*                        Particle;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   AttachPointName;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bUseActorParameter;                                // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D73[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   ParameterName;                                     // 0x0014(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsCopyVisible_bVisible;                   // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D74[0x2];                                     // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class URSParticleSystemComponentBase*         CallFunc_SpawnEmitterAttached_ReturnValue;         // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_SpawnParticle) == 0x000008, "Wrong alignment on BP_SASCopyPlayerActor_C_SpawnParticle");
static_assert(sizeof(BP_SASCopyPlayerActor_C_SpawnParticle) == 0x000038, "Wrong size on BP_SASCopyPlayerActor_C_SpawnParticle");
static_assert(offsetof(BP_SASCopyPlayerActor_C_SpawnParticle, Particle) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_SpawnParticle::Particle' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_SpawnParticle, AttachPointName) == 0x000008, "Member 'BP_SASCopyPlayerActor_C_SpawnParticle::AttachPointName' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_SpawnParticle, bUseActorParameter) == 0x000010, "Member 'BP_SASCopyPlayerActor_C_SpawnParticle::bUseActorParameter' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_SpawnParticle, ParameterName) == 0x000014, "Member 'BP_SASCopyPlayerActor_C_SpawnParticle::ParameterName' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_SpawnParticle, CallFunc_Array_Add_ReturnValue) == 0x00001C, "Member 'BP_SASCopyPlayerActor_C_SpawnParticle::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_SpawnParticle, CallFunc_Array_Add_ReturnValue_1) == 0x000020, "Member 'BP_SASCopyPlayerActor_C_SpawnParticle::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_SpawnParticle, CallFunc_Array_Add_ReturnValue_2) == 0x000024, "Member 'BP_SASCopyPlayerActor_C_SpawnParticle::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_SpawnParticle, CallFunc_Array_Add_ReturnValue_3) == 0x000028, "Member 'BP_SASCopyPlayerActor_C_SpawnParticle::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_SpawnParticle, CallFunc_IsValid_ReturnValue) == 0x00002C, "Member 'BP_SASCopyPlayerActor_C_SpawnParticle::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_SpawnParticle, CallFunc_IsCopyVisible_bVisible) == 0x00002D, "Member 'BP_SASCopyPlayerActor_C_SpawnParticle::CallFunc_IsCopyVisible_bVisible' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_SpawnParticle, CallFunc_SpawnEmitterAttached_ReturnValue) == 0x000030, "Member 'BP_SASCopyPlayerActor_C_SpawnParticle::CallFunc_SpawnEmitterAttached_ReturnValue' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.StopParticle
// 0x0038 (0x0038 - 0x0000)
struct BP_SASCopyPlayerActor_C_StopParticle final
{
public:
	class UParticleSystem*                        Particle;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LReserveIndex;                                     // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D75[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class URSParticleSystemComponentBase*         LHandle;                                           // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D76[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Remove_ReturnValue;                   // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D77[0x6];                                     // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class URSParticleSystemComponentBase*         CallFunc_Map_Find_Value;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_StopParticle) == 0x000008, "Wrong alignment on BP_SASCopyPlayerActor_C_StopParticle");
static_assert(sizeof(BP_SASCopyPlayerActor_C_StopParticle) == 0x000038, "Wrong size on BP_SASCopyPlayerActor_C_StopParticle");
static_assert(offsetof(BP_SASCopyPlayerActor_C_StopParticle, Particle) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_StopParticle::Particle' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_StopParticle, LReserveIndex) == 0x000008, "Member 'BP_SASCopyPlayerActor_C_StopParticle::LReserveIndex' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_StopParticle, LHandle) == 0x000010, "Member 'BP_SASCopyPlayerActor_C_StopParticle::LHandle' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_StopParticle, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000018, "Member 'BP_SASCopyPlayerActor_C_StopParticle::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_StopParticle, CallFunc_Array_Find_ReturnValue) == 0x00001C, "Member 'BP_SASCopyPlayerActor_C_StopParticle::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_StopParticle, CallFunc_Map_Remove_ReturnValue) == 0x000020, "Member 'BP_SASCopyPlayerActor_C_StopParticle::CallFunc_Map_Remove_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_StopParticle, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'BP_SASCopyPlayerActor_C_StopParticle::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_StopParticle, CallFunc_Map_Find_Value) == 0x000028, "Member 'BP_SASCopyPlayerActor_C_StopParticle::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_StopParticle, CallFunc_Map_Find_ReturnValue) == 0x000030, "Member 'BP_SASCopyPlayerActor_C_StopParticle::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.StopParticleAll
// 0x0038 (0x0038 - 0x0000)
struct BP_SASCopyPlayerActor_C_StopParticleAll final
{
public:
	class URSParticleSystemComponentBase*         LHandle;                                           // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D78[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D79[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class URSParticleSystemComponentBase*> CallFunc_Map_Values_Values;                        // 0x0020(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_StopParticleAll) == 0x000008, "Wrong alignment on BP_SASCopyPlayerActor_C_StopParticleAll");
static_assert(sizeof(BP_SASCopyPlayerActor_C_StopParticleAll) == 0x000038, "Wrong size on BP_SASCopyPlayerActor_C_StopParticleAll");
static_assert(offsetof(BP_SASCopyPlayerActor_C_StopParticleAll, LHandle) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_StopParticleAll::LHandle' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_StopParticleAll, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_SASCopyPlayerActor_C_StopParticleAll::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_StopParticleAll, Temp_int_Loop_Num_Variable) == 0x00000C, "Member 'BP_SASCopyPlayerActor_C_StopParticleAll::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_StopParticleAll, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'BP_SASCopyPlayerActor_C_StopParticleAll::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_StopParticleAll, CallFunc_Less_IntInt_ReturnValue) == 0x000014, "Member 'BP_SASCopyPlayerActor_C_StopParticleAll::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_StopParticleAll, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_SASCopyPlayerActor_C_StopParticleAll::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_StopParticleAll, CallFunc_Map_Values_Values) == 0x000020, "Member 'BP_SASCopyPlayerActor_C_StopParticleAll::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_StopParticleAll, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BP_SASCopyPlayerActor_C_StopParticleAll::CallFunc_Array_Length_ReturnValue' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.SetAimRotate
// 0x0010 (0x0010 - 0x0000)
struct BP_SASCopyPlayerActor_C_SetAimRotate final
{
public:
	struct FRotator                               Rotator;                                           // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_SetAimRotate) == 0x000004, "Wrong alignment on BP_SASCopyPlayerActor_C_SetAimRotate");
static_assert(sizeof(BP_SASCopyPlayerActor_C_SetAimRotate) == 0x000010, "Wrong size on BP_SASCopyPlayerActor_C_SetAimRotate");
static_assert(offsetof(BP_SASCopyPlayerActor_C_SetAimRotate, Rotator) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_SetAimRotate::Rotator' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_SetAimRotate, CallFunc_IsValid_ReturnValue) == 0x00000C, "Member 'BP_SASCopyPlayerActor_C_SetAimRotate::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.SetDir
// 0x0008 (0x0008 - 0x0000)
struct BP_SASCopyPlayerActor_C_SetDir final
{
public:
	float                                         Angle;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Time;                                              // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_SetDir) == 0x000004, "Wrong alignment on BP_SASCopyPlayerActor_C_SetDir");
static_assert(sizeof(BP_SASCopyPlayerActor_C_SetDir) == 0x000008, "Wrong size on BP_SASCopyPlayerActor_C_SetDir");
static_assert(offsetof(BP_SASCopyPlayerActor_C_SetDir, Angle) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_SetDir::Angle' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_SetDir, Time) == 0x000004, "Member 'BP_SASCopyPlayerActor_C_SetDir::Time' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.UpdateDir
// 0x00A4 (0x00A4 - 0x0000)
struct BP_SASCopyPlayerActor_C_UpdateDir final
{
public:
	bool                                          CallFunc_IsOver_ReturnValue;                       // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D7A[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRate_ReturnValue;                      // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetActorRelativeRotation_SweepHitResult; // 0x0018(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_IsEnable_ReturnValue;                     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_UpdateDir) == 0x000004, "Wrong alignment on BP_SASCopyPlayerActor_C_UpdateDir");
static_assert(sizeof(BP_SASCopyPlayerActor_C_UpdateDir) == 0x0000A4, "Wrong size on BP_SASCopyPlayerActor_C_UpdateDir");
static_assert(offsetof(BP_SASCopyPlayerActor_C_UpdateDir, CallFunc_IsOver_ReturnValue) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_UpdateDir::CallFunc_IsOver_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_UpdateDir, CallFunc_GetRate_ReturnValue) == 0x000004, "Member 'BP_SASCopyPlayerActor_C_UpdateDir::CallFunc_GetRate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_UpdateDir, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000008, "Member 'BP_SASCopyPlayerActor_C_UpdateDir::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_UpdateDir, CallFunc_MakeRotator_ReturnValue) == 0x00000C, "Member 'BP_SASCopyPlayerActor_C_UpdateDir::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_UpdateDir, CallFunc_K2_SetActorRelativeRotation_SweepHitResult) == 0x000018, "Member 'BP_SASCopyPlayerActor_C_UpdateDir::CallFunc_K2_SetActorRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_UpdateDir, CallFunc_IsEnable_ReturnValue) == 0x0000A0, "Member 'BP_SASCopyPlayerActor_C_UpdateDir::CallFunc_IsEnable_ReturnValue' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.GetCopyStatus
// 0x0001 (0x0001 - 0x0000)
struct BP_SASCopyPlayerActor_C_GetCopyStatus final
{
public:
	ESASCopyStatus                                Param_Status;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_GetCopyStatus) == 0x000001, "Wrong alignment on BP_SASCopyPlayerActor_C_GetCopyStatus");
static_assert(sizeof(BP_SASCopyPlayerActor_C_GetCopyStatus) == 0x000001, "Wrong size on BP_SASCopyPlayerActor_C_GetCopyStatus");
static_assert(offsetof(BP_SASCopyPlayerActor_C_GetCopyStatus, Param_Status) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_GetCopyStatus::Param_Status' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.SetAttachLocationType
// 0x0001 (0x0001 - 0x0000)
struct BP_SASCopyPlayerActor_C_SetAttachLocationType final
{
public:
	ESASCopyAttachType                            InType;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_SetAttachLocationType) == 0x000001, "Wrong alignment on BP_SASCopyPlayerActor_C_SetAttachLocationType");
static_assert(sizeof(BP_SASCopyPlayerActor_C_SetAttachLocationType) == 0x000001, "Wrong size on BP_SASCopyPlayerActor_C_SetAttachLocationType");
static_assert(offsetof(BP_SASCopyPlayerActor_C_SetAttachLocationType, InType) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_SetAttachLocationType::InType' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.UpdateLocation
// 0x0240 (0x0240 - 0x0000)
struct BP_SASCopyPlayerActor_C_UpdateLocation final
{
public:
	bool                                          bLerp;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D7B[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                LImpactPoint;                                      // 0x0004(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LbGround;                                          // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D7C[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                LLocation;                                         // 0x0014(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_1;                // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D7D[0x3];                                     // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X_2;                          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_3;                          // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_3;                          // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_3;                          // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0074(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_4;                          // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_4;                          // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_4;                          // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x008C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_5;                          // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_5;                          // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_5;                          // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x00A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayerInAerial_ReturnValue;             // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D7E[0x3];                                     // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_VLerp_ReturnValue;                        // 0x00B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_6;                          // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_6;                          // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_6;                          // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_3;                 // 0x00D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D7F[0x4];                                     // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x00E0(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_GetAttachParentActor_ReturnValue;         // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_InverseTransformLocation_ReturnValue;     // 0x0118(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D80[0x3];                                     // 0x0125(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorRelativeLocation_SweepHitResult; // 0x0128(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FPlayerCollisionCheckResult            CallFunc_GetAsyncResult_ReturnValue;               // 0x01B0(0x0040)(ConstParm)
	struct FPlayerCollisionCheckResult            CallFunc_GetAsyncResult_ReturnValue_1;             // 0x01F0(0x0040)(ConstParm)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0231(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_UpdateLocation) == 0x000010, "Wrong alignment on BP_SASCopyPlayerActor_C_UpdateLocation");
static_assert(sizeof(BP_SASCopyPlayerActor_C_UpdateLocation) == 0x000240, "Wrong size on BP_SASCopyPlayerActor_C_UpdateLocation");
static_assert(offsetof(BP_SASCopyPlayerActor_C_UpdateLocation, bLerp) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_UpdateLocation::bLerp' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_UpdateLocation, LImpactPoint) == 0x000004, "Member 'BP_SASCopyPlayerActor_C_UpdateLocation::LImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_UpdateLocation, LbGround) == 0x000010, "Member 'BP_SASCopyPlayerActor_C_UpdateLocation::LbGround' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_UpdateLocation, LLocation) == 0x000014, "Member 'BP_SASCopyPlayerActor_C_UpdateLocation::LLocation' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_UpdateLocation, CallFunc_SelectFloat_ReturnValue) == 0x000020, "Member 'BP_SASCopyPlayerActor_C_UpdateLocation::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_UpdateLocation, CallFunc_BreakVector_X) == 0x000024, "Member 'BP_SASCopyPlayerActor_C_UpdateLocation::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_UpdateLocation, CallFunc_BreakVector_Y) == 0x000028, "Member 'BP_SASCopyPlayerActor_C_UpdateLocation::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_UpdateLocation, CallFunc_BreakVector_Z) == 0x00002C, "Member 'BP_SASCopyPlayerActor_C_UpdateLocation::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_UpdateLocation, CallFunc_SelectFloat_ReturnValue_1) == 0x000030, "Member 'BP_SASCopyPlayerActor_C_UpdateLocation::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_UpdateLocation, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000034, "Member 'BP_SASCopyPlayerActor_C_UpdateLocation::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_UpdateLocation, CallFunc_BreakVector_X_1) == 0x000040, "Member 'BP_SASCopyPlayerActor_C_UpdateLocation::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_UpdateLocation, CallFunc_BreakVector_Y_1) == 0x000044, "Member 'BP_SASCopyPlayerActor_C_UpdateLocation::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_UpdateLocation, CallFunc_BreakVector_Z_1) == 0x000048, "Member 'BP_SASCopyPlayerActor_C_UpdateLocation::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_UpdateLocation, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00004C, "Member 'BP_SASCopyPlayerActor_C_UpdateLocation::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_UpdateLocation, CallFunc_BreakVector_X_2) == 0x000050, "Member 'BP_SASCopyPlayerActor_C_UpdateLocation::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_UpdateLocation, CallFunc_BreakVector_Y_2) == 0x000054, "Member 'BP_SASCopyPlayerActor_C_UpdateLocation::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_UpdateLocation, CallFunc_BreakVector_Z_2) == 0x000058, "Member 'BP_SASCopyPlayerActor_C_UpdateLocation::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_UpdateLocation, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x00005C, "Member 'BP_SASCopyPlayerActor_C_UpdateLocation::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_UpdateLocation, CallFunc_BreakVector_X_3) == 0x000068, "Member 'BP_SASCopyPlayerActor_C_UpdateLocation::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_UpdateLocation, CallFunc_BreakVector_Y_3) == 0x00006C, "Member 'BP_SASCopyPlayerActor_C_UpdateLocation::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_UpdateLocation, CallFunc_BreakVector_Z_3) == 0x000070, "Member 'BP_SASCopyPlayerActor_C_UpdateLocation::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_UpdateLocation, CallFunc_MakeVector_ReturnValue) == 0x000074, "Member 'BP_SASCopyPlayerActor_C_UpdateLocation::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_UpdateLocation, CallFunc_BreakVector_X_4) == 0x000080, "Member 'BP_SASCopyPlayerActor_C_UpdateLocation::CallFunc_BreakVector_X_4' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_UpdateLocation, CallFunc_BreakVector_Y_4) == 0x000084, "Member 'BP_SASCopyPlayerActor_C_UpdateLocation::CallFunc_BreakVector_Y_4' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_UpdateLocation, CallFunc_BreakVector_Z_4) == 0x000088, "Member 'BP_SASCopyPlayerActor_C_UpdateLocation::CallFunc_BreakVector_Z_4' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_UpdateLocation, CallFunc_MakeVector_ReturnValue_1) == 0x00008C, "Member 'BP_SASCopyPlayerActor_C_UpdateLocation::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_UpdateLocation, CallFunc_BreakVector_X_5) == 0x000098, "Member 'BP_SASCopyPlayerActor_C_UpdateLocation::CallFunc_BreakVector_X_5' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_UpdateLocation, CallFunc_BreakVector_Y_5) == 0x00009C, "Member 'BP_SASCopyPlayerActor_C_UpdateLocation::CallFunc_BreakVector_Y_5' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_UpdateLocation, CallFunc_BreakVector_Z_5) == 0x0000A0, "Member 'BP_SASCopyPlayerActor_C_UpdateLocation::CallFunc_BreakVector_Z_5' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_UpdateLocation, CallFunc_Lerp_ReturnValue) == 0x0000A4, "Member 'BP_SASCopyPlayerActor_C_UpdateLocation::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_UpdateLocation, CallFunc_MakeVector_ReturnValue_2) == 0x0000A8, "Member 'BP_SASCopyPlayerActor_C_UpdateLocation::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_UpdateLocation, CallFunc_IsPlayerInAerial_ReturnValue) == 0x0000B4, "Member 'BP_SASCopyPlayerActor_C_UpdateLocation::CallFunc_IsPlayerInAerial_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_UpdateLocation, CallFunc_VLerp_ReturnValue) == 0x0000B8, "Member 'BP_SASCopyPlayerActor_C_UpdateLocation::CallFunc_VLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_UpdateLocation, CallFunc_BreakVector_X_6) == 0x0000C4, "Member 'BP_SASCopyPlayerActor_C_UpdateLocation::CallFunc_BreakVector_X_6' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_UpdateLocation, CallFunc_BreakVector_Y_6) == 0x0000C8, "Member 'BP_SASCopyPlayerActor_C_UpdateLocation::CallFunc_BreakVector_Y_6' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_UpdateLocation, CallFunc_BreakVector_Z_6) == 0x0000CC, "Member 'BP_SASCopyPlayerActor_C_UpdateLocation::CallFunc_BreakVector_Z_6' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_UpdateLocation, CallFunc_MakeVector_ReturnValue_3) == 0x0000D0, "Member 'BP_SASCopyPlayerActor_C_UpdateLocation::CallFunc_MakeVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_UpdateLocation, CallFunc_GetTransform_ReturnValue) == 0x0000E0, "Member 'BP_SASCopyPlayerActor_C_UpdateLocation::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_UpdateLocation, CallFunc_GetAttachParentActor_ReturnValue) == 0x000110, "Member 'BP_SASCopyPlayerActor_C_UpdateLocation::CallFunc_GetAttachParentActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_UpdateLocation, CallFunc_InverseTransformLocation_ReturnValue) == 0x000118, "Member 'BP_SASCopyPlayerActor_C_UpdateLocation::CallFunc_InverseTransformLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_UpdateLocation, CallFunc_IsValid_ReturnValue) == 0x000124, "Member 'BP_SASCopyPlayerActor_C_UpdateLocation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_UpdateLocation, CallFunc_K2_SetActorRelativeLocation_SweepHitResult) == 0x000128, "Member 'BP_SASCopyPlayerActor_C_UpdateLocation::CallFunc_K2_SetActorRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_UpdateLocation, CallFunc_GetAsyncResult_ReturnValue) == 0x0001B0, "Member 'BP_SASCopyPlayerActor_C_UpdateLocation::CallFunc_GetAsyncResult_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_UpdateLocation, CallFunc_GetAsyncResult_ReturnValue_1) == 0x0001F0, "Member 'BP_SASCopyPlayerActor_C_UpdateLocation::CallFunc_GetAsyncResult_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_UpdateLocation, CallFunc_IsValid_ReturnValue_1) == 0x000230, "Member 'BP_SASCopyPlayerActor_C_UpdateLocation::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_UpdateLocation, K2Node_SwitchEnum_CmpSuccess) == 0x000231, "Member 'BP_SASCopyPlayerActor_C_UpdateLocation::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.GetSASCodeActorList
// 0x0020 (0x0020 - 0x0000)
struct BP_SASCopyPlayerActor_C_GetSASCodeActorList final
{
public:
	TArray<class ABP_CableBase_C*>                CodeList;                                          // 0x0000(0x0010)(Parm, OutParm, HasGetValueTypeHash)
	TArray<class ABP_CableBase_C*>                K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ReferenceParm, HasGetValueTypeHash)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_GetSASCodeActorList) == 0x000008, "Wrong alignment on BP_SASCopyPlayerActor_C_GetSASCodeActorList");
static_assert(sizeof(BP_SASCopyPlayerActor_C_GetSASCodeActorList) == 0x000020, "Wrong size on BP_SASCopyPlayerActor_C_GetSASCodeActorList");
static_assert(offsetof(BP_SASCopyPlayerActor_C_GetSASCodeActorList, CodeList) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_GetSASCodeActorList::CodeList' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_GetSASCodeActorList, K2Node_MakeArray_Array) == 0x000010, "Member 'BP_SASCopyPlayerActor_C_GetSASCodeActorList::K2Node_MakeArray_Array' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.GetBrainCodeActorList
// 0x0020 (0x0020 - 0x0000)
struct BP_SASCopyPlayerActor_C_GetBrainCodeActorList final
{
public:
	TArray<class ABP_CableBase_C*>                CodeList;                                          // 0x0000(0x0010)(Parm, OutParm, HasGetValueTypeHash)
	TArray<class ABP_CableBase_C*>                K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ReferenceParm, HasGetValueTypeHash)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_GetBrainCodeActorList) == 0x000008, "Wrong alignment on BP_SASCopyPlayerActor_C_GetBrainCodeActorList");
static_assert(sizeof(BP_SASCopyPlayerActor_C_GetBrainCodeActorList) == 0x000020, "Wrong size on BP_SASCopyPlayerActor_C_GetBrainCodeActorList");
static_assert(offsetof(BP_SASCopyPlayerActor_C_GetBrainCodeActorList, CodeList) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_GetBrainCodeActorList::CodeList' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_GetBrainCodeActorList, K2Node_MakeArray_Array) == 0x000010, "Member 'BP_SASCopyPlayerActor_C_GetBrainCodeActorList::K2Node_MakeArray_Array' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.GetWeaponList
// 0x0020 (0x0020 - 0x0000)
struct BP_SASCopyPlayerActor_C_GetWeaponList final
{
public:
	TArray<class ABP_WeaponBase_C*>               WeaponList;                                        // 0x0000(0x0010)(Parm, OutParm, HasGetValueTypeHash)
	TArray<class ABP_WeaponBase_C*>               K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ReferenceParm, HasGetValueTypeHash)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_GetWeaponList) == 0x000008, "Wrong alignment on BP_SASCopyPlayerActor_C_GetWeaponList");
static_assert(sizeof(BP_SASCopyPlayerActor_C_GetWeaponList) == 0x000020, "Wrong size on BP_SASCopyPlayerActor_C_GetWeaponList");
static_assert(offsetof(BP_SASCopyPlayerActor_C_GetWeaponList, WeaponList) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_GetWeaponList::WeaponList' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_GetWeaponList, K2Node_MakeArray_Array) == 0x000010, "Member 'BP_SASCopyPlayerActor_C_GetWeaponList::K2Node_MakeArray_Array' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.SetCostume
// 0x0010 (0x0010 - 0x0000)
struct BP_SASCopyPlayerActor_C_SetCostume final
{
public:
	class USkeletalMesh*                          Costume;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_ResourceManager_C*                  CallFunc_GetResourceManager_ResourceManager;       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_SetCostume) == 0x000008, "Wrong alignment on BP_SASCopyPlayerActor_C_SetCostume");
static_assert(sizeof(BP_SASCopyPlayerActor_C_SetCostume) == 0x000010, "Wrong size on BP_SASCopyPlayerActor_C_SetCostume");
static_assert(offsetof(BP_SASCopyPlayerActor_C_SetCostume, Costume) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_SetCostume::Costume' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_SetCostume, CallFunc_GetResourceManager_ResourceManager) == 0x000008, "Member 'BP_SASCopyPlayerActor_C_SetCostume::CallFunc_GetResourceManager_ResourceManager' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.CopyMeshFitGround
// 0x06A0 (0x06A0 - 0x0000)
struct BP_SASCopyPlayerActor_C_CopyMeshFitGround final
{
public:
	float                                         InterpSpeed;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AngleLimit;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bEndFit;                                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D81[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         LMeshOffset;                                       // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TmpUpVector;                                       // 0x0010(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LUpVector;                                         // 0x001C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LRightLocation;                                    // 0x0028(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LLeftLocation;                                     // 0x0034(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LBaseZ;                                            // 0x0040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D82[0x3];                                     // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X;                            // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D83[0x4];                                     // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0058(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D84[0x4];                                     // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable_1;                            // 0x0078(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	float                                         CallFunc_GetActorDeltaSeconds_ReturnValue;         // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_2;                          // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FInterpTo_ReturnValue;                    // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x009C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScaledCapsuleHalfHeight_ReturnValue;   // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScaledCapsuleHalfHeight_ReturnValue_1; // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScaledCapsuleHalfHeight_ReturnValue_2; // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_3;                          // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_3;                          // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_3;                          // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D85[0x3];                                     // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X_4;                          // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_4;                          // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_4;                          // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D86[0x4];                                     // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x00F0(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0108(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x0114(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0120(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D87[0x4];                                     // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable_2;                            // 0x0130(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_5;                          // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_5;                          // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_5;                          // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit;         // 0x014C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue;    // 0x01D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x01D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x01D6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D88[0x1];                                     // 0x01D7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x01E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x01EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x01F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0204(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0220(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0234(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0238(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0244(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Vector_Up_ReturnValue;                    // 0x0250(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_6;                          // 0x025C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_6;                          // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_6;                          // 0x0264(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetActorDeltaSeconds_ReturnValue_1;       // 0x026C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D89[0xC];                                     // 0x0274(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0280(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x02B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x02BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromZX_ReturnValue;                // 0x02C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_ClampVectorLimitAngle_ClampVector;        // 0x02D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_InverseTransformRotation_ReturnValue;     // 0x02E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_MakeVector_ReturnValue_3;                 // 0x02EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RInterpTo_ReturnValue;                    // 0x02F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeLocationAndRotation_SweepHitResult; // 0x0304(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_3;             // 0x038C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScaledCapsuleHalfHeight_ReturnValue_3; // 0x0390(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_2;        // 0x0394(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_4;             // 0x0398(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_5;             // 0x039C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_6;             // 0x03A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_4;                 // 0x03A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_5;                 // 0x03B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_6;                 // 0x03BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_7;                 // 0x03C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_3;        // 0x03D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_NegateVector_ReturnValue;                 // 0x03D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x03E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x03F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x03FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue;           // 0x0408(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue;              // 0x0414(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array_1;                          // 0x0420(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit_1;       // 0x0430(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue_1;  // 0x04B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D8A[0x3];                                     // 0x04B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit_2;       // 0x04BC(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue_2;  // 0x0544(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_1;            // 0x0545(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_1;         // 0x0546(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D8B[0x1];                                     // 0x0547(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_1;                    // 0x0548(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_1;                // 0x054C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_1;                // 0x0550(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_1;             // 0x055C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_1;                  // 0x0568(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_1;            // 0x0574(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_1;                 // 0x0580(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_1;                // 0x0588(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_1;            // 0x0590(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_1;             // 0x0598(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_1;                 // 0x05A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_1;               // 0x05A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_1;              // 0x05A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_1;                // 0x05B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_2;            // 0x05C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_2;         // 0x05C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D8C[0x2];                                     // 0x05C2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_2;                    // 0x05C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_2;                // 0x05C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_2;                // 0x05CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_2;             // 0x05D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_2;                  // 0x05E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_2;            // 0x05F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D8D[0x4];                                     // 0x05FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_2;                 // 0x0600(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_2;                // 0x0608(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_2;            // 0x0610(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_2;             // 0x0618(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_2;                 // 0x0620(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_2;               // 0x0624(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_2;              // 0x0628(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_2;                // 0x0634(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_7;                          // 0x0640(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_7;                          // 0x0644(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_7;                          // 0x0648(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_8;                          // 0x064C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_8;                          // 0x0650(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_8;                          // 0x0654(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_1;                     // 0x0658(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_2;                     // 0x065C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_8;                 // 0x0660(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_9;                 // 0x066C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue_1;          // 0x0678(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x0684(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_9;                          // 0x0690(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_9;                          // 0x0694(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_9;                          // 0x0698(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_4;        // 0x069C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_CopyMeshFitGround) == 0x000010, "Wrong alignment on BP_SASCopyPlayerActor_C_CopyMeshFitGround");
static_assert(sizeof(BP_SASCopyPlayerActor_C_CopyMeshFitGround) == 0x0006A0, "Wrong size on BP_SASCopyPlayerActor_C_CopyMeshFitGround");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, InterpSpeed) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::InterpSpeed' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, AngleLimit) == 0x000004, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::AngleLimit' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, bEndFit) == 0x000008, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::bEndFit' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, LMeshOffset) == 0x00000C, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::LMeshOffset' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, TmpUpVector) == 0x000010, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::TmpUpVector' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, LUpVector) == 0x00001C, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::LUpVector' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, LRightLocation) == 0x000028, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::LRightLocation' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, LLeftLocation) == 0x000034, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::LLeftLocation' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, LBaseZ) == 0x000040, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::LBaseZ' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_Less_FloatFloat_ReturnValue) == 0x000044, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_BreakVector_X) == 0x000048, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_BreakVector_Y) == 0x00004C, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_BreakVector_Z) == 0x000050, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, Temp_object_Variable) == 0x000058, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_BreakVector_X_1) == 0x000068, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_BreakVector_Y_1) == 0x00006C, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_BreakVector_Z_1) == 0x000070, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, Temp_object_Variable_1) == 0x000078, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_GetActorDeltaSeconds_ReturnValue) == 0x000088, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_GetActorDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_BreakVector_X_2) == 0x00008C, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_BreakVector_Y_2) == 0x000090, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_BreakVector_Z_2) == 0x000094, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_FInterpTo_ReturnValue) == 0x000098, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_MakeVector_ReturnValue) == 0x00009C, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_GetScaledCapsuleHalfHeight_ReturnValue) == 0x0000A8, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_GetScaledCapsuleHalfHeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000AC, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_GetScaledCapsuleHalfHeight_ReturnValue_1) == 0x0000B0, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_GetScaledCapsuleHalfHeight_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_Add_FloatFloat_ReturnValue) == 0x0000B4, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x0000B8, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_GetScaledCapsuleHalfHeight_ReturnValue_2) == 0x0000BC, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_GetScaledCapsuleHalfHeight_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_BreakVector_X_3) == 0x0000C0, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_BreakVector_Y_3) == 0x0000C4, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_BreakVector_Z_3) == 0x0000C8, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000CC, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x0000D8, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_BreakVector_X_4) == 0x0000DC, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_BreakVector_X_4' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_BreakVector_Y_4) == 0x0000E0, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_BreakVector_Y_4' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_BreakVector_Z_4) == 0x0000E4, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_BreakVector_Z_4' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0000E8, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, K2Node_MakeArray_Array) == 0x0000F0, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000100, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x000104, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_MakeVector_ReturnValue_1) == 0x000108, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_MakeVector_ReturnValue_2) == 0x000114, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000120, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, Temp_object_Variable_2) == 0x000130, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_BreakVector_X_5) == 0x000140, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_BreakVector_X_5' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_BreakVector_Y_5) == 0x000144, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_BreakVector_Y_5' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_BreakVector_Z_5) == 0x000148, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_BreakVector_Z_5' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_LineTraceSingleForObjects_OutHit) == 0x00014C, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_LineTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_LineTraceSingleForObjects_ReturnValue) == 0x0001D4, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_LineTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_BreakHitResult_bBlockingHit) == 0x0001D5, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_BreakHitResult_bInitialOverlap) == 0x0001D6, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_BreakHitResult_Time) == 0x0001D8, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_BreakHitResult_Distance) == 0x0001DC, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_BreakHitResult_Location) == 0x0001E0, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_BreakHitResult_ImpactPoint) == 0x0001EC, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_BreakHitResult_Normal) == 0x0001F8, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_BreakHitResult_ImpactNormal) == 0x000204, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_BreakHitResult_PhysMat) == 0x000210, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_BreakHitResult_HitActor) == 0x000218, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_BreakHitResult_HitComponent) == 0x000220, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_BreakHitResult_HitBoneName) == 0x000228, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_BreakHitResult_HitItem) == 0x000230, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_BreakHitResult_FaceIndex) == 0x000234, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_BreakHitResult_TraceStart) == 0x000238, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_BreakHitResult_TraceEnd) == 0x000244, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_Vector_Up_ReturnValue) == 0x000250, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_Vector_Up_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_BreakVector_X_6) == 0x00025C, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_BreakVector_X_6' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_BreakVector_Y_6) == 0x000260, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_BreakVector_Y_6' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_BreakVector_Z_6) == 0x000264, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_BreakVector_Z_6' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000268, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_GetActorDeltaSeconds_ReturnValue_1) == 0x00026C, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_GetActorDeltaSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_FClamp_ReturnValue) == 0x000270, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_GetTransform_ReturnValue) == 0x000280, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_GetActorForwardVector_ReturnValue) == 0x0002B0, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x0002BC, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_MakeRotFromZX_ReturnValue) == 0x0002C8, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_MakeRotFromZX_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_ClampVectorLimitAngle_ClampVector) == 0x0002D4, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_ClampVectorLimitAngle_ClampVector' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_InverseTransformRotation_ReturnValue) == 0x0002E0, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_InverseTransformRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_MakeVector_ReturnValue_3) == 0x0002EC, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_MakeVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_RInterpTo_ReturnValue) == 0x0002F8, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_RInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_K2_SetRelativeLocationAndRotation_SweepHitResult) == 0x000304, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_K2_SetRelativeLocationAndRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_Add_FloatFloat_ReturnValue_3) == 0x00038C, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_Add_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_GetScaledCapsuleHalfHeight_ReturnValue_3) == 0x000390, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_GetScaledCapsuleHalfHeight_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_Subtract_FloatFloat_ReturnValue_2) == 0x000394, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_Subtract_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_Add_FloatFloat_ReturnValue_4) == 0x000398, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_Add_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_Add_FloatFloat_ReturnValue_5) == 0x00039C, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_Add_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_Add_FloatFloat_ReturnValue_6) == 0x0003A0, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_Add_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_MakeVector_ReturnValue_4) == 0x0003A4, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_MakeVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_MakeVector_ReturnValue_5) == 0x0003B0, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_MakeVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_MakeVector_ReturnValue_6) == 0x0003BC, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_MakeVector_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_MakeVector_ReturnValue_7) == 0x0003C8, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_MakeVector_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_Subtract_FloatFloat_ReturnValue_3) == 0x0003D4, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_Subtract_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_NegateVector_ReturnValue) == 0x0003D8, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_NegateVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0003E4, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_Normal_ReturnValue) == 0x0003F0, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_GetSocketLocation_ReturnValue) == 0x0003FC, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_Cross_VectorVector_ReturnValue) == 0x000408, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_Cross_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_RotateAngleAxis_ReturnValue) == 0x000414, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_RotateAngleAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, K2Node_MakeArray_Array_1) == 0x000420, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_LineTraceSingleForObjects_OutHit_1) == 0x000430, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_LineTraceSingleForObjects_OutHit_1' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_LineTraceSingleForObjects_ReturnValue_1) == 0x0004B8, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_LineTraceSingleForObjects_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_LineTraceSingleForObjects_OutHit_2) == 0x0004BC, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_LineTraceSingleForObjects_OutHit_2' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_LineTraceSingleForObjects_ReturnValue_2) == 0x000544, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_LineTraceSingleForObjects_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_BreakHitResult_bBlockingHit_1) == 0x000545, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_BreakHitResult_bBlockingHit_1' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_BreakHitResult_bInitialOverlap_1) == 0x000546, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_BreakHitResult_bInitialOverlap_1' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_BreakHitResult_Time_1) == 0x000548, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_BreakHitResult_Time_1' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_BreakHitResult_Distance_1) == 0x00054C, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_BreakHitResult_Distance_1' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_BreakHitResult_Location_1) == 0x000550, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_BreakHitResult_Location_1' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_BreakHitResult_ImpactPoint_1) == 0x00055C, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_BreakHitResult_ImpactPoint_1' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_BreakHitResult_Normal_1) == 0x000568, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_BreakHitResult_Normal_1' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_BreakHitResult_ImpactNormal_1) == 0x000574, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_BreakHitResult_ImpactNormal_1' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_BreakHitResult_PhysMat_1) == 0x000580, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_BreakHitResult_PhysMat_1' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_BreakHitResult_HitActor_1) == 0x000588, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_BreakHitResult_HitActor_1' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_BreakHitResult_HitComponent_1) == 0x000590, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_BreakHitResult_HitComponent_1' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_BreakHitResult_HitBoneName_1) == 0x000598, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_BreakHitResult_HitBoneName_1' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_BreakHitResult_HitItem_1) == 0x0005A0, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_BreakHitResult_HitItem_1' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_BreakHitResult_FaceIndex_1) == 0x0005A4, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_BreakHitResult_FaceIndex_1' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_BreakHitResult_TraceStart_1) == 0x0005A8, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_BreakHitResult_TraceStart_1' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_BreakHitResult_TraceEnd_1) == 0x0005B4, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_BreakHitResult_TraceEnd_1' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_BreakHitResult_bBlockingHit_2) == 0x0005C0, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_BreakHitResult_bBlockingHit_2' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_BreakHitResult_bInitialOverlap_2) == 0x0005C1, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_BreakHitResult_bInitialOverlap_2' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_BreakHitResult_Time_2) == 0x0005C4, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_BreakHitResult_Time_2' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_BreakHitResult_Distance_2) == 0x0005C8, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_BreakHitResult_Distance_2' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_BreakHitResult_Location_2) == 0x0005CC, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_BreakHitResult_Location_2' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_BreakHitResult_ImpactPoint_2) == 0x0005D8, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_BreakHitResult_ImpactPoint_2' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_BreakHitResult_Normal_2) == 0x0005E4, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_BreakHitResult_Normal_2' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_BreakHitResult_ImpactNormal_2) == 0x0005F0, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_BreakHitResult_ImpactNormal_2' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_BreakHitResult_PhysMat_2) == 0x000600, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_BreakHitResult_PhysMat_2' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_BreakHitResult_HitActor_2) == 0x000608, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_BreakHitResult_HitActor_2' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_BreakHitResult_HitComponent_2) == 0x000610, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_BreakHitResult_HitComponent_2' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_BreakHitResult_HitBoneName_2) == 0x000618, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_BreakHitResult_HitBoneName_2' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_BreakHitResult_HitItem_2) == 0x000620, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_BreakHitResult_HitItem_2' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_BreakHitResult_FaceIndex_2) == 0x000624, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_BreakHitResult_FaceIndex_2' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_BreakHitResult_TraceStart_2) == 0x000628, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_BreakHitResult_TraceStart_2' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_BreakHitResult_TraceEnd_2) == 0x000634, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_BreakHitResult_TraceEnd_2' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_BreakVector_X_7) == 0x000640, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_BreakVector_X_7' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_BreakVector_Y_7) == 0x000644, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_BreakVector_Y_7' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_BreakVector_Z_7) == 0x000648, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_BreakVector_Z_7' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_BreakVector_X_8) == 0x00064C, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_BreakVector_X_8' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_BreakVector_Y_8) == 0x000650, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_BreakVector_Y_8' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_BreakVector_Z_8) == 0x000654, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_BreakVector_Z_8' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_FClamp_ReturnValue_1) == 0x000658, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_FClamp_ReturnValue_2) == 0x00065C, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_FClamp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_MakeVector_ReturnValue_8) == 0x000660, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_MakeVector_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_MakeVector_ReturnValue_9) == 0x00066C, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_MakeVector_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_GetSocketLocation_ReturnValue_1) == 0x000678, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_GetSocketLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x000684, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_BreakVector_X_9) == 0x000690, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_BreakVector_X_9' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_BreakVector_Y_9) == 0x000694, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_BreakVector_Y_9' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_BreakVector_Z_9) == 0x000698, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_BreakVector_Z_9' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CopyMeshFitGround, CallFunc_Subtract_FloatFloat_ReturnValue_4) == 0x00069C, "Member 'BP_SASCopyPlayerActor_C_CopyMeshFitGround::CallFunc_Subtract_FloatFloat_ReturnValue_4' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.CancelCopyMeshFitGround
// 0x009C (0x009C - 0x0000)
struct BP_SASCopyPlayerActor_C_CancelCopyMeshFitGround final
{
public:
	float                                         CallFunc_GetScaledCapsuleHalfHeight_ReturnValue;   // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocationAndRotation_SweepHitResult; // 0x0014(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_CancelCopyMeshFitGround) == 0x000004, "Wrong alignment on BP_SASCopyPlayerActor_C_CancelCopyMeshFitGround");
static_assert(sizeof(BP_SASCopyPlayerActor_C_CancelCopyMeshFitGround) == 0x00009C, "Wrong size on BP_SASCopyPlayerActor_C_CancelCopyMeshFitGround");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CancelCopyMeshFitGround, CallFunc_GetScaledCapsuleHalfHeight_ReturnValue) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_CancelCopyMeshFitGround::CallFunc_GetScaledCapsuleHalfHeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CancelCopyMeshFitGround, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000004, "Member 'BP_SASCopyPlayerActor_C_CancelCopyMeshFitGround::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CancelCopyMeshFitGround, CallFunc_MakeVector_ReturnValue) == 0x000008, "Member 'BP_SASCopyPlayerActor_C_CancelCopyMeshFitGround::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CancelCopyMeshFitGround, CallFunc_K2_SetRelativeLocationAndRotation_SweepHitResult) == 0x000014, "Member 'BP_SASCopyPlayerActor_C_CancelCopyMeshFitGround::CallFunc_K2_SetRelativeLocationAndRotation_SweepHitResult' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.OverwriteAttackCollisionInfo
// 0x0180 (0x0180 - 0x0000)
struct BP_SASCopyPlayerActor_C_OverwriteAttackCollisionInfo final
{
public:
	struct FHCCollisionCommonInfo                 RefCommonInfo;                                     // 0x0000(0x0070)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FHCSkillCommonInfo                     RefSkill;                                          // 0x0070(0x00F0)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          ReturnValue;                                       // 0x0160(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D8E[0x7];                                     // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IDamageCalcInterface>  CallFunc_OverwriteAttackCollisionInfo_self_CastInput; // 0x0168(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OverwriteAttackCollisionInfo_ReturnValue; // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_OverwriteAttackCollisionInfo) == 0x000008, "Wrong alignment on BP_SASCopyPlayerActor_C_OverwriteAttackCollisionInfo");
static_assert(sizeof(BP_SASCopyPlayerActor_C_OverwriteAttackCollisionInfo) == 0x000180, "Wrong size on BP_SASCopyPlayerActor_C_OverwriteAttackCollisionInfo");
static_assert(offsetof(BP_SASCopyPlayerActor_C_OverwriteAttackCollisionInfo, RefCommonInfo) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_OverwriteAttackCollisionInfo::RefCommonInfo' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_OverwriteAttackCollisionInfo, RefSkill) == 0x000070, "Member 'BP_SASCopyPlayerActor_C_OverwriteAttackCollisionInfo::RefSkill' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_OverwriteAttackCollisionInfo, ReturnValue) == 0x000160, "Member 'BP_SASCopyPlayerActor_C_OverwriteAttackCollisionInfo::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_OverwriteAttackCollisionInfo, CallFunc_OverwriteAttackCollisionInfo_self_CastInput) == 0x000168, "Member 'BP_SASCopyPlayerActor_C_OverwriteAttackCollisionInfo::CallFunc_OverwriteAttackCollisionInfo_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_OverwriteAttackCollisionInfo, CallFunc_OverwriteAttackCollisionInfo_ReturnValue) == 0x000178, "Member 'BP_SASCopyPlayerActor_C_OverwriteAttackCollisionInfo::CallFunc_OverwriteAttackCollisionInfo_ReturnValue' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.GetCharactersParameterTableInterface
// 0x0400 (0x0400 - 0x0000)
struct BP_SASCopyPlayerActor_C_GetCharactersParameterTableInterface final
{
public:
	struct FCharactersParameterTable              ReturnValue;                                       // 0x0000(0x01F8)(Parm, OutParm, ReturnParm)
	TScriptInterface<class IDamageCalcInterface>  CallFunc_GetCharactersParameterTableInterface_self_CastInput; // 0x01F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FCharactersParameterTable              CallFunc_GetCharactersParameterTableInterface_ReturnValue; // 0x0208(0x01F8)()
};
static_assert(alignof(BP_SASCopyPlayerActor_C_GetCharactersParameterTableInterface) == 0x000008, "Wrong alignment on BP_SASCopyPlayerActor_C_GetCharactersParameterTableInterface");
static_assert(sizeof(BP_SASCopyPlayerActor_C_GetCharactersParameterTableInterface) == 0x000400, "Wrong size on BP_SASCopyPlayerActor_C_GetCharactersParameterTableInterface");
static_assert(offsetof(BP_SASCopyPlayerActor_C_GetCharactersParameterTableInterface, ReturnValue) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_GetCharactersParameterTableInterface::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_GetCharactersParameterTableInterface, CallFunc_GetCharactersParameterTableInterface_self_CastInput) == 0x0001F8, "Member 'BP_SASCopyPlayerActor_C_GetCharactersParameterTableInterface::CallFunc_GetCharactersParameterTableInterface_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_GetCharactersParameterTableInterface, CallFunc_GetCharactersParameterTableInterface_ReturnValue) == 0x000208, "Member 'BP_SASCopyPlayerActor_C_GetCharactersParameterTableInterface::CallFunc_GetCharactersParameterTableInterface_ReturnValue' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.CalcFinalDamageByDefence
// 0x0018 (0x0018 - 0x0000)
struct BP_SASCopyPlayerActor_C_CalcFinalDamageByDefence final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D8F[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 AttackActor;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_CalcFinalDamageByDefence) == 0x000008, "Wrong alignment on BP_SASCopyPlayerActor_C_CalcFinalDamageByDefence");
static_assert(sizeof(BP_SASCopyPlayerActor_C_CalcFinalDamageByDefence) == 0x000018, "Wrong size on BP_SASCopyPlayerActor_C_CalcFinalDamageByDefence");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CalcFinalDamageByDefence, Damage) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_CalcFinalDamageByDefence::Damage' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CalcFinalDamageByDefence, AttackActor) == 0x000008, "Member 'BP_SASCopyPlayerActor_C_CalcFinalDamageByDefence::AttackActor' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CalcFinalDamageByDefence, ReturnValue) == 0x000010, "Member 'BP_SASCopyPlayerActor_C_CalcFinalDamageByDefence::ReturnValue' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.CalcFinalDamageByAttack
// 0x0120 (0x0120 - 0x0000)
struct BP_SASCopyPlayerActor_C_CalcFinalDamageByAttack final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D90[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 DefenseActor;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHCSkillCommonInfo                     SkillInfo;                                         // 0x0010(0x00F0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	float                                         ReturnValue;                                       // 0x0100(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IDamageCalcInterface>  CallFunc_CalcFinalDamageByAttack_self_CastInput;   // 0x0108(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_CalcFinalDamageByAttack_ReturnValue;      // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_CalcFinalDamageByAttack) == 0x000008, "Wrong alignment on BP_SASCopyPlayerActor_C_CalcFinalDamageByAttack");
static_assert(sizeof(BP_SASCopyPlayerActor_C_CalcFinalDamageByAttack) == 0x000120, "Wrong size on BP_SASCopyPlayerActor_C_CalcFinalDamageByAttack");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CalcFinalDamageByAttack, Damage) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_CalcFinalDamageByAttack::Damage' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CalcFinalDamageByAttack, DefenseActor) == 0x000008, "Member 'BP_SASCopyPlayerActor_C_CalcFinalDamageByAttack::DefenseActor' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CalcFinalDamageByAttack, SkillInfo) == 0x000010, "Member 'BP_SASCopyPlayerActor_C_CalcFinalDamageByAttack::SkillInfo' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CalcFinalDamageByAttack, ReturnValue) == 0x000100, "Member 'BP_SASCopyPlayerActor_C_CalcFinalDamageByAttack::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CalcFinalDamageByAttack, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000104, "Member 'BP_SASCopyPlayerActor_C_CalcFinalDamageByAttack::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CalcFinalDamageByAttack, CallFunc_CalcFinalDamageByAttack_self_CastInput) == 0x000108, "Member 'BP_SASCopyPlayerActor_C_CalcFinalDamageByAttack::CallFunc_CalcFinalDamageByAttack_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CalcFinalDamageByAttack, CallFunc_CalcFinalDamageByAttack_ReturnValue) == 0x000118, "Member 'BP_SASCopyPlayerActor_C_CalcFinalDamageByAttack::CallFunc_CalcFinalDamageByAttack_ReturnValue' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.CalcDefence
// 0x0014 (0x0014 - 0x0000)
struct BP_SASCopyPlayerActor_C_CalcDefence final
{
public:
	float                                         RefPhysicsDefence;                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RefObjDefence;                                     // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RefFlameDefence;                                   // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RefElectricPhysics;                                // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_CalcDefence) == 0x000004, "Wrong alignment on BP_SASCopyPlayerActor_C_CalcDefence");
static_assert(sizeof(BP_SASCopyPlayerActor_C_CalcDefence) == 0x000014, "Wrong size on BP_SASCopyPlayerActor_C_CalcDefence");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CalcDefence, RefPhysicsDefence) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_CalcDefence::RefPhysicsDefence' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CalcDefence, RefObjDefence) == 0x000004, "Member 'BP_SASCopyPlayerActor_C_CalcDefence::RefObjDefence' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CalcDefence, RefFlameDefence) == 0x000008, "Member 'BP_SASCopyPlayerActor_C_CalcDefence::RefFlameDefence' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CalcDefence, RefElectricPhysics) == 0x00000C, "Member 'BP_SASCopyPlayerActor_C_CalcDefence::RefElectricPhysics' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CalcDefence, ReturnValue) == 0x000010, "Member 'BP_SASCopyPlayerActor_C_CalcDefence::ReturnValue' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.CalcDamageByDefence
// 0x0028 (0x0028 - 0x0000)
struct BP_SASCopyPlayerActor_C_CalcDamageByDefence final
{
public:
	float                                         RefPhysicsDamage;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RefObjDamage;                                      // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RefFlameDamage;                                    // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RefElectricDamage;                                 // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RefCriticalDamageRate;                             // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D91[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 AttackActor;                                       // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_CalcDamageByDefence) == 0x000008, "Wrong alignment on BP_SASCopyPlayerActor_C_CalcDamageByDefence");
static_assert(sizeof(BP_SASCopyPlayerActor_C_CalcDamageByDefence) == 0x000028, "Wrong size on BP_SASCopyPlayerActor_C_CalcDamageByDefence");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CalcDamageByDefence, RefPhysicsDamage) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_CalcDamageByDefence::RefPhysicsDamage' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CalcDamageByDefence, RefObjDamage) == 0x000004, "Member 'BP_SASCopyPlayerActor_C_CalcDamageByDefence::RefObjDamage' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CalcDamageByDefence, RefFlameDamage) == 0x000008, "Member 'BP_SASCopyPlayerActor_C_CalcDamageByDefence::RefFlameDamage' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CalcDamageByDefence, RefElectricDamage) == 0x00000C, "Member 'BP_SASCopyPlayerActor_C_CalcDamageByDefence::RefElectricDamage' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CalcDamageByDefence, RefCriticalDamageRate) == 0x000010, "Member 'BP_SASCopyPlayerActor_C_CalcDamageByDefence::RefCriticalDamageRate' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CalcDamageByDefence, AttackActor) == 0x000018, "Member 'BP_SASCopyPlayerActor_C_CalcDamageByDefence::AttackActor' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CalcDamageByDefence, ReturnValue) == 0x000020, "Member 'BP_SASCopyPlayerActor_C_CalcDamageByDefence::ReturnValue' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.CalcDamageByAttack
// 0x0040 (0x0040 - 0x0000)
struct BP_SASCopyPlayerActor_C_CalcDamageByAttack final
{
public:
	float                                         RefPhysicsDamage;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RefObjDamage;                                      // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RefFlameDamage;                                    // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RefElectricDamage;                                 // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RefCriticalDamageRate;                             // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D92[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 DefenseActor;                                      // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D93[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IDamageCalcInterface>  CallFunc_CalcDamageByAttack_self_CastInput;        // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CalcDamageByAttack_ReturnValue;           // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_CalcDamageByAttack) == 0x000008, "Wrong alignment on BP_SASCopyPlayerActor_C_CalcDamageByAttack");
static_assert(sizeof(BP_SASCopyPlayerActor_C_CalcDamageByAttack) == 0x000040, "Wrong size on BP_SASCopyPlayerActor_C_CalcDamageByAttack");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CalcDamageByAttack, RefPhysicsDamage) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_CalcDamageByAttack::RefPhysicsDamage' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CalcDamageByAttack, RefObjDamage) == 0x000004, "Member 'BP_SASCopyPlayerActor_C_CalcDamageByAttack::RefObjDamage' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CalcDamageByAttack, RefFlameDamage) == 0x000008, "Member 'BP_SASCopyPlayerActor_C_CalcDamageByAttack::RefFlameDamage' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CalcDamageByAttack, RefElectricDamage) == 0x00000C, "Member 'BP_SASCopyPlayerActor_C_CalcDamageByAttack::RefElectricDamage' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CalcDamageByAttack, RefCriticalDamageRate) == 0x000010, "Member 'BP_SASCopyPlayerActor_C_CalcDamageByAttack::RefCriticalDamageRate' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CalcDamageByAttack, DefenseActor) == 0x000018, "Member 'BP_SASCopyPlayerActor_C_CalcDamageByAttack::DefenseActor' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CalcDamageByAttack, ReturnValue) == 0x000020, "Member 'BP_SASCopyPlayerActor_C_CalcDamageByAttack::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CalcDamageByAttack, CallFunc_CalcDamageByAttack_self_CastInput) == 0x000028, "Member 'BP_SASCopyPlayerActor_C_CalcDamageByAttack::CallFunc_CalcDamageByAttack_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CalcDamageByAttack, CallFunc_CalcDamageByAttack_ReturnValue) == 0x000038, "Member 'BP_SASCopyPlayerActor_C_CalcDamageByAttack::CallFunc_CalcDamageByAttack_ReturnValue' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.CalcCritical
// 0x0030 (0x0030 - 0x0000)
struct BP_SASCopyPlayerActor_C_CalcCritical final
{
public:
	float                                         Critical;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D94[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 DefenseActor;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bAssassinAttack;                                   // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D95[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ReturnValue;                                       // 0x0014(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IDamageCalcInterface>  CallFunc_CalcCritical_self_CastInput;              // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_CalcCritical_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_CalcCritical) == 0x000008, "Wrong alignment on BP_SASCopyPlayerActor_C_CalcCritical");
static_assert(sizeof(BP_SASCopyPlayerActor_C_CalcCritical) == 0x000030, "Wrong size on BP_SASCopyPlayerActor_C_CalcCritical");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CalcCritical, Critical) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_CalcCritical::Critical' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CalcCritical, DefenseActor) == 0x000008, "Member 'BP_SASCopyPlayerActor_C_CalcCritical::DefenseActor' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CalcCritical, bAssassinAttack) == 0x000010, "Member 'BP_SASCopyPlayerActor_C_CalcCritical::bAssassinAttack' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CalcCritical, ReturnValue) == 0x000014, "Member 'BP_SASCopyPlayerActor_C_CalcCritical::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CalcCritical, CallFunc_CalcCritical_self_CastInput) == 0x000018, "Member 'BP_SASCopyPlayerActor_C_CalcCritical::CallFunc_CalcCritical_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CalcCritical, CallFunc_CalcCritical_ReturnValue) == 0x000028, "Member 'BP_SASCopyPlayerActor_C_CalcCritical::CallFunc_CalcCritical_ReturnValue' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.CalcAccumulationByDefence
// 0x0040 (0x0040 - 0x0000)
struct BP_SASCopyPlayerActor_C_CalcAccumulationByDefence final
{
public:
	float                                         RefWince;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RefKnockback;                                      // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RefDown;                                           // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RefLaunch;                                         // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RefFlame;                                          // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RefElectric;                                       // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RefFlooded;                                        // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RefOil;                                            // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RefConfusion;                                      // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RefCrashScale;                                     // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RefCrashCapCheckRate;                              // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D96[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 AttackActor;                                       // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_CalcAccumulationByDefence) == 0x000008, "Wrong alignment on BP_SASCopyPlayerActor_C_CalcAccumulationByDefence");
static_assert(sizeof(BP_SASCopyPlayerActor_C_CalcAccumulationByDefence) == 0x000040, "Wrong size on BP_SASCopyPlayerActor_C_CalcAccumulationByDefence");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CalcAccumulationByDefence, RefWince) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_CalcAccumulationByDefence::RefWince' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CalcAccumulationByDefence, RefKnockback) == 0x000004, "Member 'BP_SASCopyPlayerActor_C_CalcAccumulationByDefence::RefKnockback' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CalcAccumulationByDefence, RefDown) == 0x000008, "Member 'BP_SASCopyPlayerActor_C_CalcAccumulationByDefence::RefDown' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CalcAccumulationByDefence, RefLaunch) == 0x00000C, "Member 'BP_SASCopyPlayerActor_C_CalcAccumulationByDefence::RefLaunch' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CalcAccumulationByDefence, RefFlame) == 0x000010, "Member 'BP_SASCopyPlayerActor_C_CalcAccumulationByDefence::RefFlame' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CalcAccumulationByDefence, RefElectric) == 0x000014, "Member 'BP_SASCopyPlayerActor_C_CalcAccumulationByDefence::RefElectric' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CalcAccumulationByDefence, RefFlooded) == 0x000018, "Member 'BP_SASCopyPlayerActor_C_CalcAccumulationByDefence::RefFlooded' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CalcAccumulationByDefence, RefOil) == 0x00001C, "Member 'BP_SASCopyPlayerActor_C_CalcAccumulationByDefence::RefOil' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CalcAccumulationByDefence, RefConfusion) == 0x000020, "Member 'BP_SASCopyPlayerActor_C_CalcAccumulationByDefence::RefConfusion' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CalcAccumulationByDefence, RefCrashScale) == 0x000024, "Member 'BP_SASCopyPlayerActor_C_CalcAccumulationByDefence::RefCrashScale' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CalcAccumulationByDefence, RefCrashCapCheckRate) == 0x000028, "Member 'BP_SASCopyPlayerActor_C_CalcAccumulationByDefence::RefCrashCapCheckRate' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CalcAccumulationByDefence, AttackActor) == 0x000030, "Member 'BP_SASCopyPlayerActor_C_CalcAccumulationByDefence::AttackActor' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CalcAccumulationByDefence, ReturnValue) == 0x000038, "Member 'BP_SASCopyPlayerActor_C_CalcAccumulationByDefence::ReturnValue' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.CalcAccumulationByAttack
// 0x0150 (0x0150 - 0x0000)
struct BP_SASCopyPlayerActor_C_CalcAccumulationByAttack final
{
public:
	float                                         RefWince;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RefKnockback;                                      // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RefDown;                                           // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RefLaunch;                                         // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RefFlame;                                          // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RefElectric;                                       // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RefFlooded;                                        // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RefOil;                                            // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RefConfusion;                                      // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RefCrashScale;                                     // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RefCrashCapCheckRate;                              // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D97[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 DefenseActor;                                      // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHCSkillAttackType                            AttackType;                                        // 0x0038(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bCopyActor;                                        // 0x0039(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D98[0x6];                                     // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHCSkillCommonInfo                     SkillInfo;                                         // 0x0040(0x00F0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          ReturnValue;                                       // 0x0130(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D99[0x7];                                     // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IDamageCalcInterface>  CallFunc_CalcAccumulationByAttack_self_CastInput;  // 0x0138(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CalcAccumulationByAttack_ReturnValue;     // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_CalcAccumulationByAttack) == 0x000008, "Wrong alignment on BP_SASCopyPlayerActor_C_CalcAccumulationByAttack");
static_assert(sizeof(BP_SASCopyPlayerActor_C_CalcAccumulationByAttack) == 0x000150, "Wrong size on BP_SASCopyPlayerActor_C_CalcAccumulationByAttack");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CalcAccumulationByAttack, RefWince) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_CalcAccumulationByAttack::RefWince' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CalcAccumulationByAttack, RefKnockback) == 0x000004, "Member 'BP_SASCopyPlayerActor_C_CalcAccumulationByAttack::RefKnockback' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CalcAccumulationByAttack, RefDown) == 0x000008, "Member 'BP_SASCopyPlayerActor_C_CalcAccumulationByAttack::RefDown' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CalcAccumulationByAttack, RefLaunch) == 0x00000C, "Member 'BP_SASCopyPlayerActor_C_CalcAccumulationByAttack::RefLaunch' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CalcAccumulationByAttack, RefFlame) == 0x000010, "Member 'BP_SASCopyPlayerActor_C_CalcAccumulationByAttack::RefFlame' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CalcAccumulationByAttack, RefElectric) == 0x000014, "Member 'BP_SASCopyPlayerActor_C_CalcAccumulationByAttack::RefElectric' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CalcAccumulationByAttack, RefFlooded) == 0x000018, "Member 'BP_SASCopyPlayerActor_C_CalcAccumulationByAttack::RefFlooded' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CalcAccumulationByAttack, RefOil) == 0x00001C, "Member 'BP_SASCopyPlayerActor_C_CalcAccumulationByAttack::RefOil' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CalcAccumulationByAttack, RefConfusion) == 0x000020, "Member 'BP_SASCopyPlayerActor_C_CalcAccumulationByAttack::RefConfusion' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CalcAccumulationByAttack, RefCrashScale) == 0x000024, "Member 'BP_SASCopyPlayerActor_C_CalcAccumulationByAttack::RefCrashScale' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CalcAccumulationByAttack, RefCrashCapCheckRate) == 0x000028, "Member 'BP_SASCopyPlayerActor_C_CalcAccumulationByAttack::RefCrashCapCheckRate' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CalcAccumulationByAttack, DefenseActor) == 0x000030, "Member 'BP_SASCopyPlayerActor_C_CalcAccumulationByAttack::DefenseActor' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CalcAccumulationByAttack, AttackType) == 0x000038, "Member 'BP_SASCopyPlayerActor_C_CalcAccumulationByAttack::AttackType' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CalcAccumulationByAttack, bCopyActor) == 0x000039, "Member 'BP_SASCopyPlayerActor_C_CalcAccumulationByAttack::bCopyActor' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CalcAccumulationByAttack, SkillInfo) == 0x000040, "Member 'BP_SASCopyPlayerActor_C_CalcAccumulationByAttack::SkillInfo' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CalcAccumulationByAttack, ReturnValue) == 0x000130, "Member 'BP_SASCopyPlayerActor_C_CalcAccumulationByAttack::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CalcAccumulationByAttack, CallFunc_CalcAccumulationByAttack_self_CastInput) == 0x000138, "Member 'BP_SASCopyPlayerActor_C_CalcAccumulationByAttack::CallFunc_CalcAccumulationByAttack_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CalcAccumulationByAttack, CallFunc_CalcAccumulationByAttack_ReturnValue) == 0x000148, "Member 'BP_SASCopyPlayerActor_C_CalcAccumulationByAttack::CallFunc_CalcAccumulationByAttack_ReturnValue' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.IsPsychicFieldDamageRateToBoss
// 0x0001 (0x0001 - 0x0000)
struct BP_SASCopyPlayerActor_C_IsPsychicFieldDamageRateToBoss final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_IsPsychicFieldDamageRateToBoss) == 0x000001, "Wrong alignment on BP_SASCopyPlayerActor_C_IsPsychicFieldDamageRateToBoss");
static_assert(sizeof(BP_SASCopyPlayerActor_C_IsPsychicFieldDamageRateToBoss) == 0x000001, "Wrong size on BP_SASCopyPlayerActor_C_IsPsychicFieldDamageRateToBoss");
static_assert(offsetof(BP_SASCopyPlayerActor_C_IsPsychicFieldDamageRateToBoss, ReturnValue) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_IsPsychicFieldDamageRateToBoss::ReturnValue' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.GetMaxDamageRateLimit
// 0x0004 (0x0004 - 0x0000)
struct BP_SASCopyPlayerActor_C_GetMaxDamageRateLimit final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_GetMaxDamageRateLimit) == 0x000004, "Wrong alignment on BP_SASCopyPlayerActor_C_GetMaxDamageRateLimit");
static_assert(sizeof(BP_SASCopyPlayerActor_C_GetMaxDamageRateLimit) == 0x000004, "Wrong size on BP_SASCopyPlayerActor_C_GetMaxDamageRateLimit");
static_assert(offsetof(BP_SASCopyPlayerActor_C_GetMaxDamageRateLimit, ReturnValue) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_GetMaxDamageRateLimit::ReturnValue' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.GetMaxCrashScaleLimit
// 0x0004 (0x0004 - 0x0000)
struct BP_SASCopyPlayerActor_C_GetMaxCrashScaleLimit final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_GetMaxCrashScaleLimit) == 0x000004, "Wrong alignment on BP_SASCopyPlayerActor_C_GetMaxCrashScaleLimit");
static_assert(sizeof(BP_SASCopyPlayerActor_C_GetMaxCrashScaleLimit) == 0x000004, "Wrong size on BP_SASCopyPlayerActor_C_GetMaxCrashScaleLimit");
static_assert(offsetof(BP_SASCopyPlayerActor_C_GetMaxCrashScaleLimit, ReturnValue) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_GetMaxCrashScaleLimit::ReturnValue' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.IsIgnoreCritical
// 0x0001 (0x0001 - 0x0000)
struct BP_SASCopyPlayerActor_C_IsIgnoreCritical final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_IsIgnoreCritical) == 0x000001, "Wrong alignment on BP_SASCopyPlayerActor_C_IsIgnoreCritical");
static_assert(sizeof(BP_SASCopyPlayerActor_C_IsIgnoreCritical) == 0x000001, "Wrong size on BP_SASCopyPlayerActor_C_IsIgnoreCritical");
static_assert(offsetof(BP_SASCopyPlayerActor_C_IsIgnoreCritical, ReturnValue) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_IsIgnoreCritical::ReturnValue' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.EndSASChance
// 0x0001 (0x0001 - 0x0000)
struct BP_SASCopyPlayerActor_C_EndSASChance final
{
public:
	bool                                          Dammy;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_EndSASChance) == 0x000001, "Wrong alignment on BP_SASCopyPlayerActor_C_EndSASChance");
static_assert(sizeof(BP_SASCopyPlayerActor_C_EndSASChance) == 0x000001, "Wrong size on BP_SASCopyPlayerActor_C_EndSASChance");
static_assert(offsetof(BP_SASCopyPlayerActor_C_EndSASChance, Dammy) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_EndSASChance::Dammy' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.StartSASChance
// 0x0008 (0x0008 - 0x0000)
struct BP_SASCopyPlayerActor_C_StartSASChance final
{
public:
	float                                         Time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Dammy;                                             // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_StartSASChance) == 0x000004, "Wrong alignment on BP_SASCopyPlayerActor_C_StartSASChance");
static_assert(sizeof(BP_SASCopyPlayerActor_C_StartSASChance) == 0x000008, "Wrong size on BP_SASCopyPlayerActor_C_StartSASChance");
static_assert(offsetof(BP_SASCopyPlayerActor_C_StartSASChance, Time) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_StartSASChance::Time' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_StartSASChance, Dammy) == 0x000004, "Member 'BP_SASCopyPlayerActor_C_StartSASChance::Dammy' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.CancelMeshFitGround
// 0x0001 (0x0001 - 0x0000)
struct BP_SASCopyPlayerActor_C_CancelMeshFitGround final
{
public:
	bool                                          bDummy;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_CancelMeshFitGround) == 0x000001, "Wrong alignment on BP_SASCopyPlayerActor_C_CancelMeshFitGround");
static_assert(sizeof(BP_SASCopyPlayerActor_C_CancelMeshFitGround) == 0x000001, "Wrong size on BP_SASCopyPlayerActor_C_CancelMeshFitGround");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CancelMeshFitGround, bDummy) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_CancelMeshFitGround::bDummy' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.GetMeshFitGroundCheckLocation
// 0x0010 (0x0010 - 0x0000)
struct BP_SASCopyPlayerActor_C_GetMeshFitGroundCheckLocation final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CheckHeight;                                       // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_GetMeshFitGroundCheckLocation) == 0x000004, "Wrong alignment on BP_SASCopyPlayerActor_C_GetMeshFitGroundCheckLocation");
static_assert(sizeof(BP_SASCopyPlayerActor_C_GetMeshFitGroundCheckLocation) == 0x000010, "Wrong size on BP_SASCopyPlayerActor_C_GetMeshFitGroundCheckLocation");
static_assert(offsetof(BP_SASCopyPlayerActor_C_GetMeshFitGroundCheckLocation, Location) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_GetMeshFitGroundCheckLocation::Location' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_GetMeshFitGroundCheckLocation, CheckHeight) == 0x00000C, "Member 'BP_SASCopyPlayerActor_C_GetMeshFitGroundCheckLocation::CheckHeight' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.MeshFitGround
// 0x000C (0x000C - 0x0000)
struct BP_SASCopyPlayerActor_C_MeshFitGround final
{
public:
	float                                         InterpSpeed;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AngleLimit;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bEndFit;                                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bDummy;                                            // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_MeshFitGround) == 0x000004, "Wrong alignment on BP_SASCopyPlayerActor_C_MeshFitGround");
static_assert(sizeof(BP_SASCopyPlayerActor_C_MeshFitGround) == 0x00000C, "Wrong size on BP_SASCopyPlayerActor_C_MeshFitGround");
static_assert(offsetof(BP_SASCopyPlayerActor_C_MeshFitGround, InterpSpeed) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_MeshFitGround::InterpSpeed' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_MeshFitGround, AngleLimit) == 0x000004, "Member 'BP_SASCopyPlayerActor_C_MeshFitGround::AngleLimit' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_MeshFitGround, bEndFit) == 0x000008, "Member 'BP_SASCopyPlayerActor_C_MeshFitGround::bEndFit' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_MeshFitGround, bDummy) == 0x000009, "Member 'BP_SASCopyPlayerActor_C_MeshFitGround::bDummy' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.SetAccelerating
// 0x0002 (0x0002 - 0x0000)
struct BP_SASCopyPlayerActor_C_SetAccelerating final
{
public:
	bool                                          Accelerating;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Dammy;                                             // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_SetAccelerating) == 0x000001, "Wrong alignment on BP_SASCopyPlayerActor_C_SetAccelerating");
static_assert(sizeof(BP_SASCopyPlayerActor_C_SetAccelerating) == 0x000002, "Wrong size on BP_SASCopyPlayerActor_C_SetAccelerating");
static_assert(offsetof(BP_SASCopyPlayerActor_C_SetAccelerating, Accelerating) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_SetAccelerating::Accelerating' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_SetAccelerating, Dammy) == 0x000001, "Member 'BP_SASCopyPlayerActor_C_SetAccelerating::Dammy' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.GetAccelerating
// 0x0001 (0x0001 - 0x0000)
struct BP_SASCopyPlayerActor_C_GetAccelerating final
{
public:
	bool                                          Accelerating;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_GetAccelerating) == 0x000001, "Wrong alignment on BP_SASCopyPlayerActor_C_GetAccelerating");
static_assert(sizeof(BP_SASCopyPlayerActor_C_GetAccelerating) == 0x000001, "Wrong size on BP_SASCopyPlayerActor_C_GetAccelerating");
static_assert(offsetof(BP_SASCopyPlayerActor_C_GetAccelerating, Accelerating) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_GetAccelerating::Accelerating' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.GetLockOnTargetInterface
// 0x0008 (0x0008 - 0x0000)
struct BP_SASCopyPlayerActor_C_GetLockOnTargetInterface final
{
public:
	class AActor*                                 TargetActor;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_GetLockOnTargetInterface) == 0x000008, "Wrong alignment on BP_SASCopyPlayerActor_C_GetLockOnTargetInterface");
static_assert(sizeof(BP_SASCopyPlayerActor_C_GetLockOnTargetInterface) == 0x000008, "Wrong size on BP_SASCopyPlayerActor_C_GetLockOnTargetInterface");
static_assert(offsetof(BP_SASCopyPlayerActor_C_GetLockOnTargetInterface, TargetActor) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_GetLockOnTargetInterface::TargetActor' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.SetNotifyAttackData
// 0x0014 (0x0014 - 0x0000)
struct BP_SASCopyPlayerActor_C_SetNotifyAttackData final
{
public:
	struct FFNotifyAttackData                     Data;                                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Dummy;                                             // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_SetNotifyAttackData) == 0x000004, "Wrong alignment on BP_SASCopyPlayerActor_C_SetNotifyAttackData");
static_assert(sizeof(BP_SASCopyPlayerActor_C_SetNotifyAttackData) == 0x000014, "Wrong size on BP_SASCopyPlayerActor_C_SetNotifyAttackData");
static_assert(offsetof(BP_SASCopyPlayerActor_C_SetNotifyAttackData, Data) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_SetNotifyAttackData::Data' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_SetNotifyAttackData, Dummy) == 0x000010, "Member 'BP_SASCopyPlayerActor_C_SetNotifyAttackData::Dummy' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.GetActorStartPoint
// 0x0018 (0x0018 - 0x0000)
struct BP_SASCopyPlayerActor_C_GetActorStartPoint final
{
public:
	struct FVector                                StartLocation;                                     // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_GetActorStartPoint) == 0x000004, "Wrong alignment on BP_SASCopyPlayerActor_C_GetActorStartPoint");
static_assert(sizeof(BP_SASCopyPlayerActor_C_GetActorStartPoint) == 0x000018, "Wrong size on BP_SASCopyPlayerActor_C_GetActorStartPoint");
static_assert(offsetof(BP_SASCopyPlayerActor_C_GetActorStartPoint, StartLocation) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_GetActorStartPoint::StartLocation' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_GetActorStartPoint, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00000C, "Member 'BP_SASCopyPlayerActor_C_GetActorStartPoint::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.StartVisionFog
// 0x0001 (0x0001 - 0x0000)
struct BP_SASCopyPlayerActor_C_StartVisionFog final
{
public:
	bool                                          Dummy;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_StartVisionFog) == 0x000001, "Wrong alignment on BP_SASCopyPlayerActor_C_StartVisionFog");
static_assert(sizeof(BP_SASCopyPlayerActor_C_StartVisionFog) == 0x000001, "Wrong size on BP_SASCopyPlayerActor_C_StartVisionFog");
static_assert(offsetof(BP_SASCopyPlayerActor_C_StartVisionFog, Dummy) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_StartVisionFog::Dummy' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.IsCounterSuccess
// 0x0001 (0x0001 - 0x0000)
struct BP_SASCopyPlayerActor_C_IsCounterSuccess final
{
public:
	bool                                          Success;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_IsCounterSuccess) == 0x000001, "Wrong alignment on BP_SASCopyPlayerActor_C_IsCounterSuccess");
static_assert(sizeof(BP_SASCopyPlayerActor_C_IsCounterSuccess) == 0x000001, "Wrong size on BP_SASCopyPlayerActor_C_IsCounterSuccess");
static_assert(offsetof(BP_SASCopyPlayerActor_C_IsCounterSuccess, Success) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_IsCounterSuccess::Success' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.SetCharacterVisibility
// 0x0002 (0x0002 - 0x0000)
struct BP_SASCopyPlayerActor_C_SetCharacterVisibility final
{
public:
	bool                                          bVisibility;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bDummy;                                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_SetCharacterVisibility) == 0x000001, "Wrong alignment on BP_SASCopyPlayerActor_C_SetCharacterVisibility");
static_assert(sizeof(BP_SASCopyPlayerActor_C_SetCharacterVisibility) == 0x000002, "Wrong size on BP_SASCopyPlayerActor_C_SetCharacterVisibility");
static_assert(offsetof(BP_SASCopyPlayerActor_C_SetCharacterVisibility, bVisibility) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_SetCharacterVisibility::bVisibility' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_SetCharacterVisibility, bDummy) == 0x000001, "Member 'BP_SASCopyPlayerActor_C_SetCharacterVisibility::bDummy' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.SetHitStopInterface
// 0x0003 (0x0003 - 0x0000)
struct BP_SASCopyPlayerActor_C_SetHitStopInterface final
{
public:
	EHCRestictedHitStopType                       HitStopType;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bCritical;                                         // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bDummy;                                            // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_SetHitStopInterface) == 0x000001, "Wrong alignment on BP_SASCopyPlayerActor_C_SetHitStopInterface");
static_assert(sizeof(BP_SASCopyPlayerActor_C_SetHitStopInterface) == 0x000003, "Wrong size on BP_SASCopyPlayerActor_C_SetHitStopInterface");
static_assert(offsetof(BP_SASCopyPlayerActor_C_SetHitStopInterface, HitStopType) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_SetHitStopInterface::HitStopType' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_SetHitStopInterface, bCritical) == 0x000001, "Member 'BP_SASCopyPlayerActor_C_SetHitStopInterface::bCritical' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_SetHitStopInterface, bDummy) == 0x000002, "Member 'BP_SASCopyPlayerActor_C_SetHitStopInterface::bDummy' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.UpdateCameraDither
// 0x000C (0x000C - 0x0000)
struct BP_SASCopyPlayerActor_C_UpdateCameraDither final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseDither;                                         // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D9A[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Param_CameraDither;                                // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_UpdateCameraDither) == 0x000004, "Wrong alignment on BP_SASCopyPlayerActor_C_UpdateCameraDither");
static_assert(sizeof(BP_SASCopyPlayerActor_C_UpdateCameraDither) == 0x00000C, "Wrong size on BP_SASCopyPlayerActor_C_UpdateCameraDither");
static_assert(offsetof(BP_SASCopyPlayerActor_C_UpdateCameraDither, DeltaSeconds) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_UpdateCameraDither::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_UpdateCameraDither, UseDither) == 0x000004, "Member 'BP_SASCopyPlayerActor_C_UpdateCameraDither::UseDither' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_UpdateCameraDither, Param_CameraDither) == 0x000008, "Member 'BP_SASCopyPlayerActor_C_UpdateCameraDither::Param_CameraDither' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.SetCameraDither
// 0x0008 (0x0008 - 0x0000)
struct BP_SASCopyPlayerActor_C_SetCameraDither final
{
public:
	float                                         SetDitherValue;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Dummy;                                             // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_SetCameraDither) == 0x000004, "Wrong alignment on BP_SASCopyPlayerActor_C_SetCameraDither");
static_assert(sizeof(BP_SASCopyPlayerActor_C_SetCameraDither) == 0x000008, "Wrong size on BP_SASCopyPlayerActor_C_SetCameraDither");
static_assert(offsetof(BP_SASCopyPlayerActor_C_SetCameraDither, SetDitherValue) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_SetCameraDither::SetDitherValue' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_SetCameraDither, Dummy) == 0x000004, "Member 'BP_SASCopyPlayerActor_C_SetCameraDither::Dummy' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.SetUseCameraDither
// 0x0002 (0x0002 - 0x0000)
struct BP_SASCopyPlayerActor_C_SetUseCameraDither final
{
public:
	bool                                          bUse;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bDummy;                                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_SetUseCameraDither) == 0x000001, "Wrong alignment on BP_SASCopyPlayerActor_C_SetUseCameraDither");
static_assert(sizeof(BP_SASCopyPlayerActor_C_SetUseCameraDither) == 0x000002, "Wrong size on BP_SASCopyPlayerActor_C_SetUseCameraDither");
static_assert(offsetof(BP_SASCopyPlayerActor_C_SetUseCameraDither, bUse) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_SetUseCameraDither::bUse' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_SetUseCameraDither, bDummy) == 0x000001, "Member 'BP_SASCopyPlayerActor_C_SetUseCameraDither::bDummy' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.IsCounterWait
// 0x0001 (0x0001 - 0x0000)
struct BP_SASCopyPlayerActor_C_IsCounterWait final
{
public:
	bool                                          bWait;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_IsCounterWait) == 0x000001, "Wrong alignment on BP_SASCopyPlayerActor_C_IsCounterWait");
static_assert(sizeof(BP_SASCopyPlayerActor_C_IsCounterWait) == 0x000001, "Wrong size on BP_SASCopyPlayerActor_C_IsCounterWait");
static_assert(offsetof(BP_SASCopyPlayerActor_C_IsCounterWait, bWait) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_IsCounterWait::bWait' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.RequestDie
// 0x0001 (0x0001 - 0x0000)
struct BP_SASCopyPlayerActor_C_RequestDie final
{
public:
	bool                                          bDummy;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_RequestDie) == 0x000001, "Wrong alignment on BP_SASCopyPlayerActor_C_RequestDie");
static_assert(sizeof(BP_SASCopyPlayerActor_C_RequestDie) == 0x000001, "Wrong size on BP_SASCopyPlayerActor_C_RequestDie");
static_assert(offsetof(BP_SASCopyPlayerActor_C_RequestDie, bDummy) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_RequestDie::bDummy' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.EndVisionFog
// 0x0001 (0x0001 - 0x0000)
struct BP_SASCopyPlayerActor_C_EndVisionFog final
{
public:
	bool                                          Dummy;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_EndVisionFog) == 0x000001, "Wrong alignment on BP_SASCopyPlayerActor_C_EndVisionFog");
static_assert(sizeof(BP_SASCopyPlayerActor_C_EndVisionFog) == 0x000001, "Wrong size on BP_SASCopyPlayerActor_C_EndVisionFog");
static_assert(offsetof(BP_SASCopyPlayerActor_C_EndVisionFog, Dummy) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_EndVisionFog::Dummy' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.EnableReactionCoefficient
// 0x0018 (0x0018 - 0x0000)
struct BP_SASCopyPlayerActor_C_EnableReactionCoefficient final
{
public:
	bool                                          bNormalAttack;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bPsychicAttack;                                    // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D9B[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ReactionSRate;                                     // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReactionLRate;                                     // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DownRate;                                          // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CrashRate;                                         // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bAcceptAll;                                        // 0x0014(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Return;                                            // 0x0015(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_EnableReactionCoefficient) == 0x000004, "Wrong alignment on BP_SASCopyPlayerActor_C_EnableReactionCoefficient");
static_assert(sizeof(BP_SASCopyPlayerActor_C_EnableReactionCoefficient) == 0x000018, "Wrong size on BP_SASCopyPlayerActor_C_EnableReactionCoefficient");
static_assert(offsetof(BP_SASCopyPlayerActor_C_EnableReactionCoefficient, bNormalAttack) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_EnableReactionCoefficient::bNormalAttack' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_EnableReactionCoefficient, bPsychicAttack) == 0x000001, "Member 'BP_SASCopyPlayerActor_C_EnableReactionCoefficient::bPsychicAttack' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_EnableReactionCoefficient, ReactionSRate) == 0x000004, "Member 'BP_SASCopyPlayerActor_C_EnableReactionCoefficient::ReactionSRate' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_EnableReactionCoefficient, ReactionLRate) == 0x000008, "Member 'BP_SASCopyPlayerActor_C_EnableReactionCoefficient::ReactionLRate' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_EnableReactionCoefficient, DownRate) == 0x00000C, "Member 'BP_SASCopyPlayerActor_C_EnableReactionCoefficient::DownRate' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_EnableReactionCoefficient, CrashRate) == 0x000010, "Member 'BP_SASCopyPlayerActor_C_EnableReactionCoefficient::CrashRate' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_EnableReactionCoefficient, bAcceptAll) == 0x000014, "Member 'BP_SASCopyPlayerActor_C_EnableReactionCoefficient::bAcceptAll' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_EnableReactionCoefficient, Return) == 0x000015, "Member 'BP_SASCopyPlayerActor_C_EnableReactionCoefficient::Return' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.DisableReactionCoefficient
// 0x0003 (0x0003 - 0x0000)
struct BP_SASCopyPlayerActor_C_DisableReactionCoefficient final
{
public:
	bool                                          bNormalAttack;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bPsychicAttack;                                    // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Return;                                            // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_DisableReactionCoefficient) == 0x000001, "Wrong alignment on BP_SASCopyPlayerActor_C_DisableReactionCoefficient");
static_assert(sizeof(BP_SASCopyPlayerActor_C_DisableReactionCoefficient) == 0x000003, "Wrong size on BP_SASCopyPlayerActor_C_DisableReactionCoefficient");
static_assert(offsetof(BP_SASCopyPlayerActor_C_DisableReactionCoefficient, bNormalAttack) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_DisableReactionCoefficient::bNormalAttack' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_DisableReactionCoefficient, bPsychicAttack) == 0x000001, "Member 'BP_SASCopyPlayerActor_C_DisableReactionCoefficient::bPsychicAttack' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_DisableReactionCoefficient, Return) == 0x000002, "Member 'BP_SASCopyPlayerActor_C_DisableReactionCoefficient::Return' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.SpawnSequencerEffectInterface
// 0x0050 (0x0050 - 0x0000)
struct BP_SASCopyPlayerActor_C_SpawnSequencerEffectInterface final
{
public:
	class FName                                   ClaimantName;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Template;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             Transform;                                         // 0x0010(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	class FName                                   AttachName;                                        // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Return;                                            // 0x0048(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_SpawnSequencerEffectInterface) == 0x000010, "Wrong alignment on BP_SASCopyPlayerActor_C_SpawnSequencerEffectInterface");
static_assert(sizeof(BP_SASCopyPlayerActor_C_SpawnSequencerEffectInterface) == 0x000050, "Wrong size on BP_SASCopyPlayerActor_C_SpawnSequencerEffectInterface");
static_assert(offsetof(BP_SASCopyPlayerActor_C_SpawnSequencerEffectInterface, ClaimantName) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_SpawnSequencerEffectInterface::ClaimantName' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_SpawnSequencerEffectInterface, Template) == 0x000008, "Member 'BP_SASCopyPlayerActor_C_SpawnSequencerEffectInterface::Template' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_SpawnSequencerEffectInterface, Transform) == 0x000010, "Member 'BP_SASCopyPlayerActor_C_SpawnSequencerEffectInterface::Transform' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_SpawnSequencerEffectInterface, AttachName) == 0x000040, "Member 'BP_SASCopyPlayerActor_C_SpawnSequencerEffectInterface::AttachName' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_SpawnSequencerEffectInterface, Return) == 0x000048, "Member 'BP_SASCopyPlayerActor_C_SpawnSequencerEffectInterface::Return' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.EndSequencerEffectInterface
// 0x000C (0x000C - 0x0000)
struct BP_SASCopyPlayerActor_C_EndSequencerEffectInterface final
{
public:
	class FName                                   ClaimantName;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Return;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_EndSequencerEffectInterface) == 0x000004, "Wrong alignment on BP_SASCopyPlayerActor_C_EndSequencerEffectInterface");
static_assert(sizeof(BP_SASCopyPlayerActor_C_EndSequencerEffectInterface) == 0x00000C, "Wrong size on BP_SASCopyPlayerActor_C_EndSequencerEffectInterface");
static_assert(offsetof(BP_SASCopyPlayerActor_C_EndSequencerEffectInterface, ClaimantName) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_EndSequencerEffectInterface::ClaimantName' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_EndSequencerEffectInterface, Return) == 0x000008, "Member 'BP_SASCopyPlayerActor_C_EndSequencerEffectInterface::Return' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.UpdateSequencerEffectInterface
// 0x0008 (0x0008 - 0x0000)
struct BP_SASCopyPlayerActor_C_UpdateSequencerEffectInterface final
{
public:
	float                                         DeltaSec;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Return;                                            // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_UpdateSequencerEffectInterface) == 0x000004, "Wrong alignment on BP_SASCopyPlayerActor_C_UpdateSequencerEffectInterface");
static_assert(sizeof(BP_SASCopyPlayerActor_C_UpdateSequencerEffectInterface) == 0x000008, "Wrong size on BP_SASCopyPlayerActor_C_UpdateSequencerEffectInterface");
static_assert(offsetof(BP_SASCopyPlayerActor_C_UpdateSequencerEffectInterface, DeltaSec) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_UpdateSequencerEffectInterface::DeltaSec' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_UpdateSequencerEffectInterface, Return) == 0x000004, "Member 'BP_SASCopyPlayerActor_C_UpdateSequencerEffectInterface::Return' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.IsInScreen
// 0x0001 (0x0001 - 0x0000)
struct BP_SASCopyPlayerActor_C_IsInScreen final
{
public:
	bool                                          InScreen;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_IsInScreen) == 0x000001, "Wrong alignment on BP_SASCopyPlayerActor_C_IsInScreen");
static_assert(sizeof(BP_SASCopyPlayerActor_C_IsInScreen) == 0x000001, "Wrong size on BP_SASCopyPlayerActor_C_IsInScreen");
static_assert(offsetof(BP_SASCopyPlayerActor_C_IsInScreen, InScreen) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_IsInScreen::InScreen' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.Get Event Bind Mesh Component
// 0x0010 (0x0010 - 0x0000)
struct BP_SASCopyPlayerActor_C_Get_Event_Bind_Mesh_Component final
{
public:
	TArray<class UStaticMeshComponent*>           MeshComponent;                                     // 0x0000(0x0010)(Parm, OutParm, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_Get_Event_Bind_Mesh_Component) == 0x000008, "Wrong alignment on BP_SASCopyPlayerActor_C_Get_Event_Bind_Mesh_Component");
static_assert(sizeof(BP_SASCopyPlayerActor_C_Get_Event_Bind_Mesh_Component) == 0x000010, "Wrong size on BP_SASCopyPlayerActor_C_Get_Event_Bind_Mesh_Component");
static_assert(offsetof(BP_SASCopyPlayerActor_C_Get_Event_Bind_Mesh_Component, MeshComponent) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_Get_Event_Bind_Mesh_Component::MeshComponent' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.RegisterBrainFieldNormalTransform
// 0x0040 (0x0040 - 0x0000)
struct BP_SASCopyPlayerActor_C_RegisterBrainFieldNormalTransform final
{
public:
	struct FTransform                             InNormalTransform;                                 // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	bool                                          Return;                                            // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_RegisterBrainFieldNormalTransform) == 0x000010, "Wrong alignment on BP_SASCopyPlayerActor_C_RegisterBrainFieldNormalTransform");
static_assert(sizeof(BP_SASCopyPlayerActor_C_RegisterBrainFieldNormalTransform) == 0x000040, "Wrong size on BP_SASCopyPlayerActor_C_RegisterBrainFieldNormalTransform");
static_assert(offsetof(BP_SASCopyPlayerActor_C_RegisterBrainFieldNormalTransform, InNormalTransform) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_RegisterBrainFieldNormalTransform::InNormalTransform' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_RegisterBrainFieldNormalTransform, Return) == 0x000030, "Member 'BP_SASCopyPlayerActor_C_RegisterBrainFieldNormalTransform::Return' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.CheckNoDamagePopUpFromAttacker
// 0x0001 (0x0001 - 0x0000)
struct BP_SASCopyPlayerActor_C_CheckNoDamagePopUpFromAttacker final
{
public:
	bool                                          bNoPopUp;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_CheckNoDamagePopUpFromAttacker) == 0x000001, "Wrong alignment on BP_SASCopyPlayerActor_C_CheckNoDamagePopUpFromAttacker");
static_assert(sizeof(BP_SASCopyPlayerActor_C_CheckNoDamagePopUpFromAttacker) == 0x000001, "Wrong size on BP_SASCopyPlayerActor_C_CheckNoDamagePopUpFromAttacker");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CheckNoDamagePopUpFromAttacker, bNoPopUp) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_CheckNoDamagePopUpFromAttacker::bNoPopUp' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.GetGroupIDInterface
// 0x000C (0x000C - 0x0000)
struct BP_SASCopyPlayerActor_C_GetGroupIDInterface final
{
public:
	bool                                          bSuccess;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D9C[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         GroupID;                                           // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SubGroupID;                                        // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_GetGroupIDInterface) == 0x000004, "Wrong alignment on BP_SASCopyPlayerActor_C_GetGroupIDInterface");
static_assert(sizeof(BP_SASCopyPlayerActor_C_GetGroupIDInterface) == 0x00000C, "Wrong size on BP_SASCopyPlayerActor_C_GetGroupIDInterface");
static_assert(offsetof(BP_SASCopyPlayerActor_C_GetGroupIDInterface, bSuccess) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_GetGroupIDInterface::bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_GetGroupIDInterface, GroupID) == 0x000004, "Member 'BP_SASCopyPlayerActor_C_GetGroupIDInterface::GroupID' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_GetGroupIDInterface, SubGroupID) == 0x000008, "Member 'BP_SASCopyPlayerActor_C_GetGroupIDInterface::SubGroupID' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.StopMovementImmediately
// 0x0001 (0x0001 - 0x0000)
struct BP_SASCopyPlayerActor_C_StopMovementImmediately final
{
public:
	bool                                          bDummy;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_StopMovementImmediately) == 0x000001, "Wrong alignment on BP_SASCopyPlayerActor_C_StopMovementImmediately");
static_assert(sizeof(BP_SASCopyPlayerActor_C_StopMovementImmediately) == 0x000001, "Wrong size on BP_SASCopyPlayerActor_C_StopMovementImmediately");
static_assert(offsetof(BP_SASCopyPlayerActor_C_StopMovementImmediately, bDummy) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_StopMovementImmediately::bDummy' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.GetPsychicObjectThrowParameter
// 0x0024 (0x0024 - 0x0000)
struct BP_SASCopyPlayerActor_C_GetPsychicObjectThrowParameter final
{
public:
	bool                                          Apply;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D9D[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Directshot_throw_speed;                            // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Directshot_homing_speed;                           // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Combo_throw_speed;                                 // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Combo_homing_speed;                                // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         brainfield_throw_speed;                            // 0x0014(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         brainfield_homing_speed;                           // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Intercept_throw_speed;                             // 0x001C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Intercept_homing_speed;                            // 0x0020(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_GetPsychicObjectThrowParameter) == 0x000004, "Wrong alignment on BP_SASCopyPlayerActor_C_GetPsychicObjectThrowParameter");
static_assert(sizeof(BP_SASCopyPlayerActor_C_GetPsychicObjectThrowParameter) == 0x000024, "Wrong size on BP_SASCopyPlayerActor_C_GetPsychicObjectThrowParameter");
static_assert(offsetof(BP_SASCopyPlayerActor_C_GetPsychicObjectThrowParameter, Apply) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_GetPsychicObjectThrowParameter::Apply' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_GetPsychicObjectThrowParameter, Directshot_throw_speed) == 0x000004, "Member 'BP_SASCopyPlayerActor_C_GetPsychicObjectThrowParameter::Directshot_throw_speed' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_GetPsychicObjectThrowParameter, Directshot_homing_speed) == 0x000008, "Member 'BP_SASCopyPlayerActor_C_GetPsychicObjectThrowParameter::Directshot_homing_speed' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_GetPsychicObjectThrowParameter, Combo_throw_speed) == 0x00000C, "Member 'BP_SASCopyPlayerActor_C_GetPsychicObjectThrowParameter::Combo_throw_speed' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_GetPsychicObjectThrowParameter, Combo_homing_speed) == 0x000010, "Member 'BP_SASCopyPlayerActor_C_GetPsychicObjectThrowParameter::Combo_homing_speed' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_GetPsychicObjectThrowParameter, brainfield_throw_speed) == 0x000014, "Member 'BP_SASCopyPlayerActor_C_GetPsychicObjectThrowParameter::brainfield_throw_speed' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_GetPsychicObjectThrowParameter, brainfield_homing_speed) == 0x000018, "Member 'BP_SASCopyPlayerActor_C_GetPsychicObjectThrowParameter::brainfield_homing_speed' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_GetPsychicObjectThrowParameter, Intercept_throw_speed) == 0x00001C, "Member 'BP_SASCopyPlayerActor_C_GetPsychicObjectThrowParameter::Intercept_throw_speed' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_GetPsychicObjectThrowParameter, Intercept_homing_speed) == 0x000020, "Member 'BP_SASCopyPlayerActor_C_GetPsychicObjectThrowParameter::Intercept_homing_speed' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.GetCharacterSkillTableWithReplace
// 0x0100 (0x0100 - 0x0000)
struct BP_SASCopyPlayerActor_C_GetCharacterSkillTableWithReplace final
{
public:
	class UDataTable*                             OrgTable;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   SkillName;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHCSkillCommonInfo                     SkillCommonInfo;                                   // 0x0010(0x00F0)(Parm, OutParm)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_GetCharacterSkillTableWithReplace) == 0x000008, "Wrong alignment on BP_SASCopyPlayerActor_C_GetCharacterSkillTableWithReplace");
static_assert(sizeof(BP_SASCopyPlayerActor_C_GetCharacterSkillTableWithReplace) == 0x000100, "Wrong size on BP_SASCopyPlayerActor_C_GetCharacterSkillTableWithReplace");
static_assert(offsetof(BP_SASCopyPlayerActor_C_GetCharacterSkillTableWithReplace, OrgTable) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_GetCharacterSkillTableWithReplace::OrgTable' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_GetCharacterSkillTableWithReplace, SkillName) == 0x000008, "Member 'BP_SASCopyPlayerActor_C_GetCharacterSkillTableWithReplace::SkillName' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_GetCharacterSkillTableWithReplace, SkillCommonInfo) == 0x000010, "Member 'BP_SASCopyPlayerActor_C_GetCharacterSkillTableWithReplace::SkillCommonInfo' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.ReserveCrashVisionShockWave
// 0x0008 (0x0008 - 0x0000)
struct BP_SASCopyPlayerActor_C_ReserveCrashVisionShockWave final
{
public:
	float                                         EffectDelayTime;                                   // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDummy;                                            // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_ReserveCrashVisionShockWave) == 0x000004, "Wrong alignment on BP_SASCopyPlayerActor_C_ReserveCrashVisionShockWave");
static_assert(sizeof(BP_SASCopyPlayerActor_C_ReserveCrashVisionShockWave) == 0x000008, "Wrong size on BP_SASCopyPlayerActor_C_ReserveCrashVisionShockWave");
static_assert(offsetof(BP_SASCopyPlayerActor_C_ReserveCrashVisionShockWave, EffectDelayTime) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_ReserveCrashVisionShockWave::EffectDelayTime' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_ReserveCrashVisionShockWave, bDummy) == 0x000004, "Member 'BP_SASCopyPlayerActor_C_ReserveCrashVisionShockWave::bDummy' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.SetIgnoreVisionSimulatorScore
// 0x0002 (0x0002 - 0x0000)
struct BP_SASCopyPlayerActor_C_SetIgnoreVisionSimulatorScore final
{
public:
	bool                                          bIgnore;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bDummy;                                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_SetIgnoreVisionSimulatorScore) == 0x000001, "Wrong alignment on BP_SASCopyPlayerActor_C_SetIgnoreVisionSimulatorScore");
static_assert(sizeof(BP_SASCopyPlayerActor_C_SetIgnoreVisionSimulatorScore) == 0x000002, "Wrong size on BP_SASCopyPlayerActor_C_SetIgnoreVisionSimulatorScore");
static_assert(offsetof(BP_SASCopyPlayerActor_C_SetIgnoreVisionSimulatorScore, bIgnore) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_SetIgnoreVisionSimulatorScore::bIgnore' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_SetIgnoreVisionSimulatorScore, bDummy) == 0x000001, "Member 'BP_SASCopyPlayerActor_C_SetIgnoreVisionSimulatorScore::bDummy' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.GetProxyMesh
// 0x0008 (0x0008 - 0x0000)
struct BP_SASCopyPlayerActor_C_GetProxyMesh final
{
public:
	class UMeshComponent*                         Mesh;                                              // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_GetProxyMesh) == 0x000008, "Wrong alignment on BP_SASCopyPlayerActor_C_GetProxyMesh");
static_assert(sizeof(BP_SASCopyPlayerActor_C_GetProxyMesh) == 0x000008, "Wrong size on BP_SASCopyPlayerActor_C_GetProxyMesh");
static_assert(offsetof(BP_SASCopyPlayerActor_C_GetProxyMesh, Mesh) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_GetProxyMesh::Mesh' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.GetProxyRequestedPlayer
// 0x0008 (0x0008 - 0x0000)
struct BP_SASCopyPlayerActor_C_GetProxyRequestedPlayer final
{
public:
	class ARSBattlePlayer_C*                      Player;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_GetProxyRequestedPlayer) == 0x000008, "Wrong alignment on BP_SASCopyPlayerActor_C_GetProxyRequestedPlayer");
static_assert(sizeof(BP_SASCopyPlayerActor_C_GetProxyRequestedPlayer) == 0x000008, "Wrong size on BP_SASCopyPlayerActor_C_GetProxyRequestedPlayer");
static_assert(offsetof(BP_SASCopyPlayerActor_C_GetProxyRequestedPlayer, Player) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_GetProxyRequestedPlayer::Player' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.IsPlayerCopy
// 0x0001 (0x0001 - 0x0000)
struct BP_SASCopyPlayerActor_C_IsPlayerCopy final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_IsPlayerCopy) == 0x000001, "Wrong alignment on BP_SASCopyPlayerActor_C_IsPlayerCopy");
static_assert(sizeof(BP_SASCopyPlayerActor_C_IsPlayerCopy) == 0x000001, "Wrong size on BP_SASCopyPlayerActor_C_IsPlayerCopy");
static_assert(offsetof(BP_SASCopyPlayerActor_C_IsPlayerCopy, ReturnValue) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_IsPlayerCopy::ReturnValue' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.IsExistPlayerCopy
// 0x0001 (0x0001 - 0x0000)
struct BP_SASCopyPlayerActor_C_IsExistPlayerCopy final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_IsExistPlayerCopy) == 0x000001, "Wrong alignment on BP_SASCopyPlayerActor_C_IsExistPlayerCopy");
static_assert(sizeof(BP_SASCopyPlayerActor_C_IsExistPlayerCopy) == 0x000001, "Wrong size on BP_SASCopyPlayerActor_C_IsExistPlayerCopy");
static_assert(offsetof(BP_SASCopyPlayerActor_C_IsExistPlayerCopy, ReturnValue) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_IsExistPlayerCopy::ReturnValue' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.GetPlayerWeaponManage
// 0x0008 (0x0008 - 0x0000)
struct BP_SASCopyPlayerActor_C_GetPlayerWeaponManage final
{
public:
	class UBP_WeaponManageComponent_C*            WeaponManage;                                      // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_GetPlayerWeaponManage) == 0x000008, "Wrong alignment on BP_SASCopyPlayerActor_C_GetPlayerWeaponManage");
static_assert(sizeof(BP_SASCopyPlayerActor_C_GetPlayerWeaponManage) == 0x000008, "Wrong size on BP_SASCopyPlayerActor_C_GetPlayerWeaponManage");
static_assert(offsetof(BP_SASCopyPlayerActor_C_GetPlayerWeaponManage, WeaponManage) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_GetPlayerWeaponManage::WeaponManage' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.GetHitEffectPriorityInterface
// 0x0020 (0x0020 - 0x0000)
struct BP_SASCopyPlayerActor_C_GetHitEffectPriorityInterface final
{
public:
	EFHitEffectPriority                           ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D9E[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IHitEffectInterface>   CallFunc_GetHitEffectPriorityInterface_self_CastInput; // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EFHitEffectPriority                           CallFunc_GetHitEffectPriorityInterface_ReturnValue; // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_GetHitEffectPriorityInterface) == 0x000008, "Wrong alignment on BP_SASCopyPlayerActor_C_GetHitEffectPriorityInterface");
static_assert(sizeof(BP_SASCopyPlayerActor_C_GetHitEffectPriorityInterface) == 0x000020, "Wrong size on BP_SASCopyPlayerActor_C_GetHitEffectPriorityInterface");
static_assert(offsetof(BP_SASCopyPlayerActor_C_GetHitEffectPriorityInterface, ReturnValue) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_GetHitEffectPriorityInterface::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_GetHitEffectPriorityInterface, CallFunc_GetHitEffectPriorityInterface_self_CastInput) == 0x000008, "Member 'BP_SASCopyPlayerActor_C_GetHitEffectPriorityInterface::CallFunc_GetHitEffectPriorityInterface_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_GetHitEffectPriorityInterface, CallFunc_GetHitEffectPriorityInterface_ReturnValue) == 0x000018, "Member 'BP_SASCopyPlayerActor_C_GetHitEffectPriorityInterface::CallFunc_GetHitEffectPriorityInterface_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_GetHitEffectPriorityInterface, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'BP_SASCopyPlayerActor_C_GetHitEffectPriorityInterface::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.CheckExecuteAnimNotifyCharacterKind
// 0x0020 (0x0020 - 0x0000)
struct BP_SASCopyPlayerActor_C_CheckExecuteAnimNotifyCharacterKind final
{
public:
	ECharaExecuteNotifyKind                       Kind;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bExecute;                                          // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          LbExecute;                                         // 0x0002(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D9F[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_AnimNotifyExecuteCheck_C> CallFunc_CheckExecuteAnimNotifyCharacterKind_self_CastInput; // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckExecuteAnimNotifyCharacterKind_bExecute; // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_CheckExecuteAnimNotifyCharacterKind) == 0x000008, "Wrong alignment on BP_SASCopyPlayerActor_C_CheckExecuteAnimNotifyCharacterKind");
static_assert(sizeof(BP_SASCopyPlayerActor_C_CheckExecuteAnimNotifyCharacterKind) == 0x000020, "Wrong size on BP_SASCopyPlayerActor_C_CheckExecuteAnimNotifyCharacterKind");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CheckExecuteAnimNotifyCharacterKind, Kind) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_CheckExecuteAnimNotifyCharacterKind::Kind' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CheckExecuteAnimNotifyCharacterKind, bExecute) == 0x000001, "Member 'BP_SASCopyPlayerActor_C_CheckExecuteAnimNotifyCharacterKind::bExecute' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CheckExecuteAnimNotifyCharacterKind, LbExecute) == 0x000002, "Member 'BP_SASCopyPlayerActor_C_CheckExecuteAnimNotifyCharacterKind::LbExecute' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CheckExecuteAnimNotifyCharacterKind, K2Node_SwitchEnum_CmpSuccess) == 0x000003, "Member 'BP_SASCopyPlayerActor_C_CheckExecuteAnimNotifyCharacterKind::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CheckExecuteAnimNotifyCharacterKind, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'BP_SASCopyPlayerActor_C_CheckExecuteAnimNotifyCharacterKind::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CheckExecuteAnimNotifyCharacterKind, CallFunc_CheckExecuteAnimNotifyCharacterKind_self_CastInput) == 0x000008, "Member 'BP_SASCopyPlayerActor_C_CheckExecuteAnimNotifyCharacterKind::CallFunc_CheckExecuteAnimNotifyCharacterKind_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CheckExecuteAnimNotifyCharacterKind, CallFunc_CheckExecuteAnimNotifyCharacterKind_bExecute) == 0x000018, "Member 'BP_SASCopyPlayerActor_C_CheckExecuteAnimNotifyCharacterKind::CallFunc_CheckExecuteAnimNotifyCharacterKind_bExecute' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.IsObstacleHitCheckToActor
// 0x0010 (0x0010 - 0x0000)
struct BP_SASCopyPlayerActor_C_IsObstacleHitCheckToActor final
{
public:
	class AActor*                                 PTarget;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_IsObstacleHitCheckToActor) == 0x000008, "Wrong alignment on BP_SASCopyPlayerActor_C_IsObstacleHitCheckToActor");
static_assert(sizeof(BP_SASCopyPlayerActor_C_IsObstacleHitCheckToActor) == 0x000010, "Wrong size on BP_SASCopyPlayerActor_C_IsObstacleHitCheckToActor");
static_assert(offsetof(BP_SASCopyPlayerActor_C_IsObstacleHitCheckToActor, PTarget) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_IsObstacleHitCheckToActor::PTarget' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_IsObstacleHitCheckToActor, ReturnValue) == 0x000008, "Member 'BP_SASCopyPlayerActor_C_IsObstacleHitCheckToActor::ReturnValue' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.IsObstacleHitCheck
// 0x0020 (0x0020 - 0x0000)
struct BP_SASCopyPlayerActor_C_IsObstacleHitCheck final
{
public:
	class UPrimitiveComponent*                    PPrimitive;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 PAttacker;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                EndPosition;                                       // 0x0010(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x001C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_IsObstacleHitCheck) == 0x000008, "Wrong alignment on BP_SASCopyPlayerActor_C_IsObstacleHitCheck");
static_assert(sizeof(BP_SASCopyPlayerActor_C_IsObstacleHitCheck) == 0x000020, "Wrong size on BP_SASCopyPlayerActor_C_IsObstacleHitCheck");
static_assert(offsetof(BP_SASCopyPlayerActor_C_IsObstacleHitCheck, PPrimitive) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_IsObstacleHitCheck::PPrimitive' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_IsObstacleHitCheck, PAttacker) == 0x000008, "Member 'BP_SASCopyPlayerActor_C_IsObstacleHitCheck::PAttacker' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_IsObstacleHitCheck, EndPosition) == 0x000010, "Member 'BP_SASCopyPlayerActor_C_IsObstacleHitCheck::EndPosition' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_IsObstacleHitCheck, ReturnValue) == 0x00001C, "Member 'BP_SASCopyPlayerActor_C_IsObstacleHitCheck::ReturnValue' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.IsIgnoreHitCheck
// 0x0018 (0x0018 - 0x0000)
struct BP_SASCopyPlayerActor_C_IsIgnoreHitCheck final
{
public:
	class UPrimitiveComponent*                    PPrimitive;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitPosition;                                       // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0014(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_IsIgnoreHitCheck) == 0x000008, "Wrong alignment on BP_SASCopyPlayerActor_C_IsIgnoreHitCheck");
static_assert(sizeof(BP_SASCopyPlayerActor_C_IsIgnoreHitCheck) == 0x000018, "Wrong size on BP_SASCopyPlayerActor_C_IsIgnoreHitCheck");
static_assert(offsetof(BP_SASCopyPlayerActor_C_IsIgnoreHitCheck, PPrimitive) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_IsIgnoreHitCheck::PPrimitive' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_IsIgnoreHitCheck, HitPosition) == 0x000008, "Member 'BP_SASCopyPlayerActor_C_IsIgnoreHitCheck::HitPosition' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_IsIgnoreHitCheck, ReturnValue) == 0x000014, "Member 'BP_SASCopyPlayerActor_C_IsIgnoreHitCheck::ReturnValue' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.IsIgnoreAccelerator
// 0x0002 (0x0002 - 0x0000)
struct BP_SASCopyPlayerActor_C_IsIgnoreAccelerator final
{
public:
	EHCSkillExtraType                             Type;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_IsIgnoreAccelerator) == 0x000001, "Wrong alignment on BP_SASCopyPlayerActor_C_IsIgnoreAccelerator");
static_assert(sizeof(BP_SASCopyPlayerActor_C_IsIgnoreAccelerator) == 0x000002, "Wrong size on BP_SASCopyPlayerActor_C_IsIgnoreAccelerator");
static_assert(offsetof(BP_SASCopyPlayerActor_C_IsIgnoreAccelerator, Type) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_IsIgnoreAccelerator::Type' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_IsIgnoreAccelerator, ReturnValue) == 0x000001, "Member 'BP_SASCopyPlayerActor_C_IsIgnoreAccelerator::ReturnValue' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.IsCheckFriendlyFire
// 0x0010 (0x0010 - 0x0000)
struct BP_SASCopyPlayerActor_C_IsCheckFriendlyFire final
{
public:
	class AActor*                                 HitActor;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_IsCheckFriendlyFire) == 0x000008, "Wrong alignment on BP_SASCopyPlayerActor_C_IsCheckFriendlyFire");
static_assert(sizeof(BP_SASCopyPlayerActor_C_IsCheckFriendlyFire) == 0x000010, "Wrong size on BP_SASCopyPlayerActor_C_IsCheckFriendlyFire");
static_assert(offsetof(BP_SASCopyPlayerActor_C_IsCheckFriendlyFire, HitActor) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_IsCheckFriendlyFire::HitActor' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_IsCheckFriendlyFire, ReturnValue) == 0x000008, "Member 'BP_SASCopyPlayerActor_C_IsCheckFriendlyFire::ReturnValue' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.GetHitCheckIgnoredActor
// 0x0008 (0x0008 - 0x0000)
struct BP_SASCopyPlayerActor_C_GetHitCheckIgnoredActor final
{
public:
	class AActor*                                 ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_GetHitCheckIgnoredActor) == 0x000008, "Wrong alignment on BP_SASCopyPlayerActor_C_GetHitCheckIgnoredActor");
static_assert(sizeof(BP_SASCopyPlayerActor_C_GetHitCheckIgnoredActor) == 0x000008, "Wrong size on BP_SASCopyPlayerActor_C_GetHitCheckIgnoredActor");
static_assert(offsetof(BP_SASCopyPlayerActor_C_GetHitCheckIgnoredActor, ReturnValue) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_GetHitCheckIgnoredActor::ReturnValue' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.AttachmentVisibilityOffOnHead
// 0x0002 (0x0002 - 0x0000)
struct BP_SASCopyPlayerActor_C_AttachmentVisibilityOffOnHead final
{
public:
	bool                                          bOff;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bDummy;                                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_AttachmentVisibilityOffOnHead) == 0x000001, "Wrong alignment on BP_SASCopyPlayerActor_C_AttachmentVisibilityOffOnHead");
static_assert(sizeof(BP_SASCopyPlayerActor_C_AttachmentVisibilityOffOnHead) == 0x000002, "Wrong size on BP_SASCopyPlayerActor_C_AttachmentVisibilityOffOnHead");
static_assert(offsetof(BP_SASCopyPlayerActor_C_AttachmentVisibilityOffOnHead, bOff) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_AttachmentVisibilityOffOnHead::bOff' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_AttachmentVisibilityOffOnHead, bDummy) == 0x000001, "Member 'BP_SASCopyPlayerActor_C_AttachmentVisibilityOffOnHead::bDummy' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.DestroyAttachmentMeshComponent
// 0x0010 (0x0010 - 0x0000)
struct BP_SASCopyPlayerActor_C_DestroyAttachmentMeshComponent final
{
public:
	class USceneComponent*                        DestroyMeshComponent;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDummy;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_DestroyAttachmentMeshComponent) == 0x000008, "Wrong alignment on BP_SASCopyPlayerActor_C_DestroyAttachmentMeshComponent");
static_assert(sizeof(BP_SASCopyPlayerActor_C_DestroyAttachmentMeshComponent) == 0x000010, "Wrong size on BP_SASCopyPlayerActor_C_DestroyAttachmentMeshComponent");
static_assert(offsetof(BP_SASCopyPlayerActor_C_DestroyAttachmentMeshComponent, DestroyMeshComponent) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_DestroyAttachmentMeshComponent::DestroyMeshComponent' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_DestroyAttachmentMeshComponent, bDummy) == 0x000008, "Member 'BP_SASCopyPlayerActor_C_DestroyAttachmentMeshComponent::bDummy' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_DestroyAttachmentMeshComponent, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'BP_SASCopyPlayerActor_C_DestroyAttachmentMeshComponent::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.EquipAttachmentInterface
// 0x0014 (0x0014 - 0x0000)
struct BP_SASCopyPlayerActor_C_EquipAttachmentInterface final
{
public:
	EPlayerAttachment                             Param_Index;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DA0[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         AttachmentItemID;                                  // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerID                                     EquipPlayerID;                                     // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DA1[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         EquipMeshIndex;                                    // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDummy;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_EquipAttachmentInterface) == 0x000004, "Wrong alignment on BP_SASCopyPlayerActor_C_EquipAttachmentInterface");
static_assert(sizeof(BP_SASCopyPlayerActor_C_EquipAttachmentInterface) == 0x000014, "Wrong size on BP_SASCopyPlayerActor_C_EquipAttachmentInterface");
static_assert(offsetof(BP_SASCopyPlayerActor_C_EquipAttachmentInterface, Param_Index) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_EquipAttachmentInterface::Param_Index' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_EquipAttachmentInterface, AttachmentItemID) == 0x000004, "Member 'BP_SASCopyPlayerActor_C_EquipAttachmentInterface::AttachmentItemID' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_EquipAttachmentInterface, EquipPlayerID) == 0x000008, "Member 'BP_SASCopyPlayerActor_C_EquipAttachmentInterface::EquipPlayerID' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_EquipAttachmentInterface, EquipMeshIndex) == 0x00000C, "Member 'BP_SASCopyPlayerActor_C_EquipAttachmentInterface::EquipMeshIndex' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_EquipAttachmentInterface, bDummy) == 0x000010, "Member 'BP_SASCopyPlayerActor_C_EquipAttachmentInterface::bDummy' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.GetAttachedCharacterMesh
// 0x0010 (0x0010 - 0x0000)
struct BP_SASCopyPlayerActor_C_GetAttachedCharacterMesh final
{
public:
	EPlayerID                                     EquipPlayerID;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DA2[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         EquipMeshIndex;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Mesh;                                              // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_GetAttachedCharacterMesh) == 0x000008, "Wrong alignment on BP_SASCopyPlayerActor_C_GetAttachedCharacterMesh");
static_assert(sizeof(BP_SASCopyPlayerActor_C_GetAttachedCharacterMesh) == 0x000010, "Wrong size on BP_SASCopyPlayerActor_C_GetAttachedCharacterMesh");
static_assert(offsetof(BP_SASCopyPlayerActor_C_GetAttachedCharacterMesh, EquipPlayerID) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_GetAttachedCharacterMesh::EquipPlayerID' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_GetAttachedCharacterMesh, EquipMeshIndex) == 0x000004, "Member 'BP_SASCopyPlayerActor_C_GetAttachedCharacterMesh::EquipMeshIndex' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_GetAttachedCharacterMesh, Mesh) == 0x000008, "Member 'BP_SASCopyPlayerActor_C_GetAttachedCharacterMesh::Mesh' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.AttachmentVisibilityOffOnBackBody
// 0x000C (0x000C - 0x0000)
struct BP_SASCopyPlayerActor_C_AttachmentVisibilityOffOnBackBody final
{
public:
	bool                                          bVisibility;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4DA3[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         FadeTime;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDummy;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_AttachmentVisibilityOffOnBackBody) == 0x000004, "Wrong alignment on BP_SASCopyPlayerActor_C_AttachmentVisibilityOffOnBackBody");
static_assert(sizeof(BP_SASCopyPlayerActor_C_AttachmentVisibilityOffOnBackBody) == 0x00000C, "Wrong size on BP_SASCopyPlayerActor_C_AttachmentVisibilityOffOnBackBody");
static_assert(offsetof(BP_SASCopyPlayerActor_C_AttachmentVisibilityOffOnBackBody, bVisibility) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_AttachmentVisibilityOffOnBackBody::bVisibility' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_AttachmentVisibilityOffOnBackBody, FadeTime) == 0x000004, "Member 'BP_SASCopyPlayerActor_C_AttachmentVisibilityOffOnBackBody::FadeTime' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_AttachmentVisibilityOffOnBackBody, bDummy) == 0x000008, "Member 'BP_SASCopyPlayerActor_C_AttachmentVisibilityOffOnBackBody::bDummy' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.IsRegisterNpcDriveForNexusDrive
// 0x0020 (0x0020 - 0x0000)
struct BP_SASCopyPlayerActor_C_IsRegisterNpcDriveForNexusDrive final
{
public:
	EPlayerID                                     PlayerId;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4DA4[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class INexusDriveInterface>  K2Node_DynamicCast_AsNexus_Drive_Interface;        // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsRegisterNpcDriveForNexusDrive_ReturnValue; // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_IsRegisterNpcDriveForNexusDrive) == 0x000008, "Wrong alignment on BP_SASCopyPlayerActor_C_IsRegisterNpcDriveForNexusDrive");
static_assert(sizeof(BP_SASCopyPlayerActor_C_IsRegisterNpcDriveForNexusDrive) == 0x000020, "Wrong size on BP_SASCopyPlayerActor_C_IsRegisterNpcDriveForNexusDrive");
static_assert(offsetof(BP_SASCopyPlayerActor_C_IsRegisterNpcDriveForNexusDrive, PlayerId) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_IsRegisterNpcDriveForNexusDrive::PlayerId' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_IsRegisterNpcDriveForNexusDrive, ReturnValue) == 0x000001, "Member 'BP_SASCopyPlayerActor_C_IsRegisterNpcDriveForNexusDrive::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_IsRegisterNpcDriveForNexusDrive, K2Node_DynamicCast_AsNexus_Drive_Interface) == 0x000008, "Member 'BP_SASCopyPlayerActor_C_IsRegisterNpcDriveForNexusDrive::K2Node_DynamicCast_AsNexus_Drive_Interface' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_IsRegisterNpcDriveForNexusDrive, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_SASCopyPlayerActor_C_IsRegisterNpcDriveForNexusDrive::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_IsRegisterNpcDriveForNexusDrive, CallFunc_IsRegisterNpcDriveForNexusDrive_ReturnValue) == 0x000019, "Member 'BP_SASCopyPlayerActor_C_IsRegisterNpcDriveForNexusDrive::CallFunc_IsRegisterNpcDriveForNexusDrive_ReturnValue' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.IsRegisterActiveSasKindAny
// 0x0020 (0x0020 - 0x0000)
struct BP_SASCopyPlayerActor_C_IsRegisterActiveSasKindAny final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4DA5[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class INexusDriveInterface>  K2Node_DynamicCast_AsNexus_Drive_Interface;        // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsRegisterActiveSasKindAny_ReturnValue;   // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_IsRegisterActiveSasKindAny) == 0x000008, "Wrong alignment on BP_SASCopyPlayerActor_C_IsRegisterActiveSasKindAny");
static_assert(sizeof(BP_SASCopyPlayerActor_C_IsRegisterActiveSasKindAny) == 0x000020, "Wrong size on BP_SASCopyPlayerActor_C_IsRegisterActiveSasKindAny");
static_assert(offsetof(BP_SASCopyPlayerActor_C_IsRegisterActiveSasKindAny, ReturnValue) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_IsRegisterActiveSasKindAny::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_IsRegisterActiveSasKindAny, K2Node_DynamicCast_AsNexus_Drive_Interface) == 0x000008, "Member 'BP_SASCopyPlayerActor_C_IsRegisterActiveSasKindAny::K2Node_DynamicCast_AsNexus_Drive_Interface' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_IsRegisterActiveSasKindAny, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_SASCopyPlayerActor_C_IsRegisterActiveSasKindAny::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_IsRegisterActiveSasKindAny, CallFunc_IsRegisterActiveSasKindAny_ReturnValue) == 0x000019, "Member 'BP_SASCopyPlayerActor_C_IsRegisterActiveSasKindAny::CallFunc_IsRegisterActiveSasKindAny_ReturnValue' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.IsActiveNexusDriveSas
// 0x0020 (0x0020 - 0x0000)
struct BP_SASCopyPlayerActor_C_IsActiveNexusDriveSas final
{
public:
	E_SASKindNative                               Kind;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4DA6[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class INexusDriveInterface>  K2Node_DynamicCast_AsNexus_Drive_Interface;        // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActiveNexusDriveSas_ReturnValue;        // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_IsActiveNexusDriveSas) == 0x000008, "Wrong alignment on BP_SASCopyPlayerActor_C_IsActiveNexusDriveSas");
static_assert(sizeof(BP_SASCopyPlayerActor_C_IsActiveNexusDriveSas) == 0x000020, "Wrong size on BP_SASCopyPlayerActor_C_IsActiveNexusDriveSas");
static_assert(offsetof(BP_SASCopyPlayerActor_C_IsActiveNexusDriveSas, Kind) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_IsActiveNexusDriveSas::Kind' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_IsActiveNexusDriveSas, ReturnValue) == 0x000001, "Member 'BP_SASCopyPlayerActor_C_IsActiveNexusDriveSas::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_IsActiveNexusDriveSas, K2Node_DynamicCast_AsNexus_Drive_Interface) == 0x000008, "Member 'BP_SASCopyPlayerActor_C_IsActiveNexusDriveSas::K2Node_DynamicCast_AsNexus_Drive_Interface' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_IsActiveNexusDriveSas, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_SASCopyPlayerActor_C_IsActiveNexusDriveSas::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_IsActiveNexusDriveSas, CallFunc_IsActiveNexusDriveSas_ReturnValue) == 0x000019, "Member 'BP_SASCopyPlayerActor_C_IsActiveNexusDriveSas::CallFunc_IsActiveNexusDriveSas_ReturnValue' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.IsActiveNexusDriveAny
// 0x0020 (0x0020 - 0x0000)
struct BP_SASCopyPlayerActor_C_IsActiveNexusDriveAny final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4DA7[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class INexusDriveInterface>  K2Node_DynamicCast_AsNexus_Drive_Interface;        // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActiveNexusDriveAny_ReturnValue;        // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_IsActiveNexusDriveAny) == 0x000008, "Wrong alignment on BP_SASCopyPlayerActor_C_IsActiveNexusDriveAny");
static_assert(sizeof(BP_SASCopyPlayerActor_C_IsActiveNexusDriveAny) == 0x000020, "Wrong size on BP_SASCopyPlayerActor_C_IsActiveNexusDriveAny");
static_assert(offsetof(BP_SASCopyPlayerActor_C_IsActiveNexusDriveAny, ReturnValue) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_IsActiveNexusDriveAny::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_IsActiveNexusDriveAny, K2Node_DynamicCast_AsNexus_Drive_Interface) == 0x000008, "Member 'BP_SASCopyPlayerActor_C_IsActiveNexusDriveAny::K2Node_DynamicCast_AsNexus_Drive_Interface' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_IsActiveNexusDriveAny, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_SASCopyPlayerActor_C_IsActiveNexusDriveAny::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_IsActiveNexusDriveAny, CallFunc_IsActiveNexusDriveAny_ReturnValue) == 0x000019, "Member 'BP_SASCopyPlayerActor_C_IsActiveNexusDriveAny::CallFunc_IsActiveNexusDriveAny_ReturnValue' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.GetNexusDriveTelepoDamageRateForJewelPool
// 0x0108 (0x0108 - 0x0000)
struct BP_SASCopyPlayerActor_C_GetNexusDriveTelepoDamageRateForJewelPool final
{
public:
	float                                         OutCrashRate;                                      // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OutWinceRate;                                      // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OutKnockbackRate;                                  // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OutDownRate;                                       // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHCSkillCommonInfo                     InSkill;                                           // 0x0010(0x00F0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          ReturnValue;                                       // 0x0100(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_GetNexusDriveTelepoDamageRateForJewelPool) == 0x000008, "Wrong alignment on BP_SASCopyPlayerActor_C_GetNexusDriveTelepoDamageRateForJewelPool");
static_assert(sizeof(BP_SASCopyPlayerActor_C_GetNexusDriveTelepoDamageRateForJewelPool) == 0x000108, "Wrong size on BP_SASCopyPlayerActor_C_GetNexusDriveTelepoDamageRateForJewelPool");
static_assert(offsetof(BP_SASCopyPlayerActor_C_GetNexusDriveTelepoDamageRateForJewelPool, OutCrashRate) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_GetNexusDriveTelepoDamageRateForJewelPool::OutCrashRate' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_GetNexusDriveTelepoDamageRateForJewelPool, OutWinceRate) == 0x000004, "Member 'BP_SASCopyPlayerActor_C_GetNexusDriveTelepoDamageRateForJewelPool::OutWinceRate' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_GetNexusDriveTelepoDamageRateForJewelPool, OutKnockbackRate) == 0x000008, "Member 'BP_SASCopyPlayerActor_C_GetNexusDriveTelepoDamageRateForJewelPool::OutKnockbackRate' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_GetNexusDriveTelepoDamageRateForJewelPool, OutDownRate) == 0x00000C, "Member 'BP_SASCopyPlayerActor_C_GetNexusDriveTelepoDamageRateForJewelPool::OutDownRate' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_GetNexusDriveTelepoDamageRateForJewelPool, InSkill) == 0x000010, "Member 'BP_SASCopyPlayerActor_C_GetNexusDriveTelepoDamageRateForJewelPool::InSkill' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_GetNexusDriveTelepoDamageRateForJewelPool, ReturnValue) == 0x000100, "Member 'BP_SASCopyPlayerActor_C_GetNexusDriveTelepoDamageRateForJewelPool::ReturnValue' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.GetNexusDriveTelepoAttackRate
// 0x0110 (0x0110 - 0x0000)
struct BP_SASCopyPlayerActor_C_GetNexusDriveTelepoAttackRate final
{
public:
	float                                         OutDamageRate;                                     // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OutCrashRate;                                      // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OutWinceRate;                                      // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OutKnockbackRate;                                  // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OutDownRate;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DA8[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHCSkillCommonInfo                     InSkill;                                           // 0x0018(0x00F0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          ReturnValue;                                       // 0x0108(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_GetNexusDriveTelepoAttackRate) == 0x000008, "Wrong alignment on BP_SASCopyPlayerActor_C_GetNexusDriveTelepoAttackRate");
static_assert(sizeof(BP_SASCopyPlayerActor_C_GetNexusDriveTelepoAttackRate) == 0x000110, "Wrong size on BP_SASCopyPlayerActor_C_GetNexusDriveTelepoAttackRate");
static_assert(offsetof(BP_SASCopyPlayerActor_C_GetNexusDriveTelepoAttackRate, OutDamageRate) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_GetNexusDriveTelepoAttackRate::OutDamageRate' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_GetNexusDriveTelepoAttackRate, OutCrashRate) == 0x000004, "Member 'BP_SASCopyPlayerActor_C_GetNexusDriveTelepoAttackRate::OutCrashRate' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_GetNexusDriveTelepoAttackRate, OutWinceRate) == 0x000008, "Member 'BP_SASCopyPlayerActor_C_GetNexusDriveTelepoAttackRate::OutWinceRate' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_GetNexusDriveTelepoAttackRate, OutKnockbackRate) == 0x00000C, "Member 'BP_SASCopyPlayerActor_C_GetNexusDriveTelepoAttackRate::OutKnockbackRate' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_GetNexusDriveTelepoAttackRate, OutDownRate) == 0x000010, "Member 'BP_SASCopyPlayerActor_C_GetNexusDriveTelepoAttackRate::OutDownRate' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_GetNexusDriveTelepoAttackRate, InSkill) == 0x000018, "Member 'BP_SASCopyPlayerActor_C_GetNexusDriveTelepoAttackRate::InSkill' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_GetNexusDriveTelepoAttackRate, ReturnValue) == 0x000108, "Member 'BP_SASCopyPlayerActor_C_GetNexusDriveTelepoAttackRate::ReturnValue' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.GetNexusDriveStealth_AttackParam
// 0x0010 (0x0010 - 0x0000)
struct BP_SASCopyPlayerActor_C_GetNexusDriveStealth_AttackParam final
{
public:
	float                                         OutCrashRate;                                      // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OutKnockback;                                      // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OutDown;                                           // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_GetNexusDriveStealth_AttackParam) == 0x000004, "Wrong alignment on BP_SASCopyPlayerActor_C_GetNexusDriveStealth_AttackParam");
static_assert(sizeof(BP_SASCopyPlayerActor_C_GetNexusDriveStealth_AttackParam) == 0x000010, "Wrong size on BP_SASCopyPlayerActor_C_GetNexusDriveStealth_AttackParam");
static_assert(offsetof(BP_SASCopyPlayerActor_C_GetNexusDriveStealth_AttackParam, OutCrashRate) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_GetNexusDriveStealth_AttackParam::OutCrashRate' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_GetNexusDriveStealth_AttackParam, OutKnockback) == 0x000004, "Member 'BP_SASCopyPlayerActor_C_GetNexusDriveStealth_AttackParam::OutKnockback' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_GetNexusDriveStealth_AttackParam, OutDown) == 0x000008, "Member 'BP_SASCopyPlayerActor_C_GetNexusDriveStealth_AttackParam::OutDown' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_GetNexusDriveStealth_AttackParam, ReturnValue) == 0x00000C, "Member 'BP_SASCopyPlayerActor_C_GetNexusDriveStealth_AttackParam::ReturnValue' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.GetNexusDrivePsychic_PsychicFieldDown
// 0x0008 (0x0008 - 0x0000)
struct BP_SASCopyPlayerActor_C_GetNexusDrivePsychic_PsychicFieldDown final
{
public:
	float                                         OutDown;                                           // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_GetNexusDrivePsychic_PsychicFieldDown) == 0x000004, "Wrong alignment on BP_SASCopyPlayerActor_C_GetNexusDrivePsychic_PsychicFieldDown");
static_assert(sizeof(BP_SASCopyPlayerActor_C_GetNexusDrivePsychic_PsychicFieldDown) == 0x000008, "Wrong size on BP_SASCopyPlayerActor_C_GetNexusDrivePsychic_PsychicFieldDown");
static_assert(offsetof(BP_SASCopyPlayerActor_C_GetNexusDrivePsychic_PsychicFieldDown, OutDown) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_GetNexusDrivePsychic_PsychicFieldDown::OutDown' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_GetNexusDrivePsychic_PsychicFieldDown, ReturnValue) == 0x000004, "Member 'BP_SASCopyPlayerActor_C_GetNexusDrivePsychic_PsychicFieldDown::ReturnValue' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.GetNexusDriveMetal_DamageRate
// 0x0004 (0x0004 - 0x0000)
struct BP_SASCopyPlayerActor_C_GetNexusDriveMetal_DamageRate final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_GetNexusDriveMetal_DamageRate) == 0x000004, "Wrong alignment on BP_SASCopyPlayerActor_C_GetNexusDriveMetal_DamageRate");
static_assert(sizeof(BP_SASCopyPlayerActor_C_GetNexusDriveMetal_DamageRate) == 0x000004, "Wrong size on BP_SASCopyPlayerActor_C_GetNexusDriveMetal_DamageRate");
static_assert(offsetof(BP_SASCopyPlayerActor_C_GetNexusDriveMetal_DamageRate, ReturnValue) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_GetNexusDriveMetal_DamageRate::ReturnValue' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.GetNexusDriveCombinationVisionCost
// 0x0008 (0x0008 - 0x0000)
struct BP_SASCopyPlayerActor_C_GetNexusDriveCombinationVisionCost final
{
public:
	float                                         OutCost;                                           // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SASKindNative                               SasKind;                                           // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0005(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_GetNexusDriveCombinationVisionCost) == 0x000004, "Wrong alignment on BP_SASCopyPlayerActor_C_GetNexusDriveCombinationVisionCost");
static_assert(sizeof(BP_SASCopyPlayerActor_C_GetNexusDriveCombinationVisionCost) == 0x000008, "Wrong size on BP_SASCopyPlayerActor_C_GetNexusDriveCombinationVisionCost");
static_assert(offsetof(BP_SASCopyPlayerActor_C_GetNexusDriveCombinationVisionCost, OutCost) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_GetNexusDriveCombinationVisionCost::OutCost' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_GetNexusDriveCombinationVisionCost, SasKind) == 0x000004, "Member 'BP_SASCopyPlayerActor_C_GetNexusDriveCombinationVisionCost::SasKind' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_GetNexusDriveCombinationVisionCost, ReturnValue) == 0x000005, "Member 'BP_SASCopyPlayerActor_C_GetNexusDriveCombinationVisionCost::ReturnValue' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.GetNexusDriveAccelerator_DamageRate
// 0x0004 (0x0004 - 0x0000)
struct BP_SASCopyPlayerActor_C_GetNexusDriveAccelerator_DamageRate final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_GetNexusDriveAccelerator_DamageRate) == 0x000004, "Wrong alignment on BP_SASCopyPlayerActor_C_GetNexusDriveAccelerator_DamageRate");
static_assert(sizeof(BP_SASCopyPlayerActor_C_GetNexusDriveAccelerator_DamageRate) == 0x000004, "Wrong size on BP_SASCopyPlayerActor_C_GetNexusDriveAccelerator_DamageRate");
static_assert(offsetof(BP_SASCopyPlayerActor_C_GetNexusDriveAccelerator_DamageRate, ReturnValue) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_GetNexusDriveAccelerator_DamageRate::ReturnValue' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.SetPhotoModeDither
// 0x0008 (0x0008 - 0x0000)
struct BP_SASCopyPlayerActor_C_SetPhotoModeDither final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetCameraDither_Dummy;                    // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_SetPhotoModeDither) == 0x000004, "Wrong alignment on BP_SASCopyPlayerActor_C_SetPhotoModeDither");
static_assert(sizeof(BP_SASCopyPlayerActor_C_SetPhotoModeDither) == 0x000008, "Wrong size on BP_SASCopyPlayerActor_C_SetPhotoModeDither");
static_assert(offsetof(BP_SASCopyPlayerActor_C_SetPhotoModeDither, Value) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_SetPhotoModeDither::Value' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_SetPhotoModeDither, ReturnValue) == 0x000004, "Member 'BP_SASCopyPlayerActor_C_SetPhotoModeDither::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_SetPhotoModeDither, CallFunc_SetCameraDither_Dummy) == 0x000005, "Member 'BP_SASCopyPlayerActor_C_SetPhotoModeDither::CallFunc_SetCameraDither_Dummy' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.EndPhotoMode
// 0x0003 (0x0003 - 0x0000)
struct BP_SASCopyPlayerActor_C_EndPhotoMode final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetPhotoModeDither_ReturnValue;           // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_EndPhotoMode) == 0x000001, "Wrong alignment on BP_SASCopyPlayerActor_C_EndPhotoMode");
static_assert(sizeof(BP_SASCopyPlayerActor_C_EndPhotoMode) == 0x000003, "Wrong size on BP_SASCopyPlayerActor_C_EndPhotoMode");
static_assert(offsetof(BP_SASCopyPlayerActor_C_EndPhotoMode, ReturnValue) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_EndPhotoMode::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_EndPhotoMode, CallFunc_SetPhotoModeDither_ReturnValue) == 0x000001, "Member 'BP_SASCopyPlayerActor_C_EndPhotoMode::CallFunc_SetPhotoModeDither_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_EndPhotoMode, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000002, "Member 'BP_SASCopyPlayerActor_C_EndPhotoMode::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.BeginPhotoMode
// 0x000C (0x000C - 0x0000)
struct BP_SASCopyPlayerActor_C_BeginPhotoMode final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4DA9[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetForcedLOD_ReturnValue;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetPhotoModeDither_ReturnValue;           // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_BeginPhotoMode) == 0x000004, "Wrong alignment on BP_SASCopyPlayerActor_C_BeginPhotoMode");
static_assert(sizeof(BP_SASCopyPlayerActor_C_BeginPhotoMode) == 0x00000C, "Wrong size on BP_SASCopyPlayerActor_C_BeginPhotoMode");
static_assert(offsetof(BP_SASCopyPlayerActor_C_BeginPhotoMode, ReturnValue) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_BeginPhotoMode::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_BeginPhotoMode, CallFunc_GetForcedLOD_ReturnValue) == 0x000004, "Member 'BP_SASCopyPlayerActor_C_BeginPhotoMode::CallFunc_GetForcedLOD_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_BeginPhotoMode, CallFunc_SetPhotoModeDither_ReturnValue) == 0x000008, "Member 'BP_SASCopyPlayerActor_C_BeginPhotoMode::CallFunc_SetPhotoModeDither_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_BeginPhotoMode, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000009, "Member 'BP_SASCopyPlayerActor_C_BeginPhotoMode::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.GetPhotoModeSkeletalMesh
// 0x0008 (0x0008 - 0x0000)
struct BP_SASCopyPlayerActor_C_GetPhotoModeSkeletalMesh final
{
public:
	class USkeletalMeshComponent*                 ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_GetPhotoModeSkeletalMesh) == 0x000008, "Wrong alignment on BP_SASCopyPlayerActor_C_GetPhotoModeSkeletalMesh");
static_assert(sizeof(BP_SASCopyPlayerActor_C_GetPhotoModeSkeletalMesh) == 0x000008, "Wrong size on BP_SASCopyPlayerActor_C_GetPhotoModeSkeletalMesh");
static_assert(offsetof(BP_SASCopyPlayerActor_C_GetPhotoModeSkeletalMesh, ReturnValue) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_GetPhotoModeSkeletalMesh::ReturnValue' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.GetPhotoModeDitherDataName
// 0x0008 (0x0008 - 0x0000)
struct BP_SASCopyPlayerActor_C_GetPhotoModeDitherDataName final
{
public:
	class FName                                   ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_GetPhotoModeDitherDataName) == 0x000004, "Wrong alignment on BP_SASCopyPlayerActor_C_GetPhotoModeDitherDataName");
static_assert(sizeof(BP_SASCopyPlayerActor_C_GetPhotoModeDitherDataName) == 0x000008, "Wrong size on BP_SASCopyPlayerActor_C_GetPhotoModeDitherDataName");
static_assert(offsetof(BP_SASCopyPlayerActor_C_GetPhotoModeDitherDataName, ReturnValue) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_GetPhotoModeDitherDataName::ReturnValue' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.IsPhotoModeManualOverlap
// 0x0001 (0x0001 - 0x0000)
struct BP_SASCopyPlayerActor_C_IsPhotoModeManualOverlap final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_IsPhotoModeManualOverlap) == 0x000001, "Wrong alignment on BP_SASCopyPlayerActor_C_IsPhotoModeManualOverlap");
static_assert(sizeof(BP_SASCopyPlayerActor_C_IsPhotoModeManualOverlap) == 0x000001, "Wrong size on BP_SASCopyPlayerActor_C_IsPhotoModeManualOverlap");
static_assert(offsetof(BP_SASCopyPlayerActor_C_IsPhotoModeManualOverlap, ReturnValue) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_IsPhotoModeManualOverlap::ReturnValue' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.GetPhotoModeManualOverlapCapsule
// 0x0008 (0x0008 - 0x0000)
struct BP_SASCopyPlayerActor_C_GetPhotoModeManualOverlapCapsule final
{
public:
	class UCapsuleComponent*                      ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_GetPhotoModeManualOverlapCapsule) == 0x000008, "Wrong alignment on BP_SASCopyPlayerActor_C_GetPhotoModeManualOverlapCapsule");
static_assert(sizeof(BP_SASCopyPlayerActor_C_GetPhotoModeManualOverlapCapsule) == 0x000008, "Wrong size on BP_SASCopyPlayerActor_C_GetPhotoModeManualOverlapCapsule");
static_assert(offsetof(BP_SASCopyPlayerActor_C_GetPhotoModeManualOverlapCapsule, ReturnValue) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_GetPhotoModeManualOverlapCapsule::ReturnValue' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.PhotoModeTick
// 0x0002 (0x0002 - 0x0000)
struct BP_SASCopyPlayerActor_C_PhotoModeTick final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsCopyVisible_bVisible;                   // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_PhotoModeTick) == 0x000001, "Wrong alignment on BP_SASCopyPlayerActor_C_PhotoModeTick");
static_assert(sizeof(BP_SASCopyPlayerActor_C_PhotoModeTick) == 0x000002, "Wrong size on BP_SASCopyPlayerActor_C_PhotoModeTick");
static_assert(offsetof(BP_SASCopyPlayerActor_C_PhotoModeTick, ReturnValue) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_PhotoModeTick::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_PhotoModeTick, CallFunc_IsCopyVisible_bVisible) == 0x000001, "Member 'BP_SASCopyPlayerActor_C_PhotoModeTick::CallFunc_IsCopyVisible_bVisible' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.IsCopyVisible
// 0x0007 (0x0007 - 0x0000)
struct BP_SASCopyPlayerActor_C_IsCopyVisible final
{
public:
	bool                                          bVisible;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	ESASCopyStatus                                Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_3;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default;                             // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_IsCopyVisible) == 0x000001, "Wrong alignment on BP_SASCopyPlayerActor_C_IsCopyVisible");
static_assert(sizeof(BP_SASCopyPlayerActor_C_IsCopyVisible) == 0x000007, "Wrong size on BP_SASCopyPlayerActor_C_IsCopyVisible");
static_assert(offsetof(BP_SASCopyPlayerActor_C_IsCopyVisible, bVisible) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_IsCopyVisible::bVisible' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_IsCopyVisible, Temp_byte_Variable) == 0x000001, "Member 'BP_SASCopyPlayerActor_C_IsCopyVisible::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_IsCopyVisible, Temp_bool_Variable) == 0x000002, "Member 'BP_SASCopyPlayerActor_C_IsCopyVisible::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_IsCopyVisible, Temp_bool_Variable_1) == 0x000003, "Member 'BP_SASCopyPlayerActor_C_IsCopyVisible::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_IsCopyVisible, Temp_bool_Variable_2) == 0x000004, "Member 'BP_SASCopyPlayerActor_C_IsCopyVisible::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_IsCopyVisible, Temp_bool_Variable_3) == 0x000005, "Member 'BP_SASCopyPlayerActor_C_IsCopyVisible::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_IsCopyVisible, K2Node_Select_Default) == 0x000006, "Member 'BP_SASCopyPlayerActor_C_IsCopyVisible::K2Node_Select_Default' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.GetNotifyAttackData
// 0x0010 (0x0010 - 0x0000)
struct BP_SASCopyPlayerActor_C_GetNotifyAttackData final
{
public:
	struct FFNotifyAttackData                     Data;                                              // 0x0000(0x0010)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_GetNotifyAttackData) == 0x000004, "Wrong alignment on BP_SASCopyPlayerActor_C_GetNotifyAttackData");
static_assert(sizeof(BP_SASCopyPlayerActor_C_GetNotifyAttackData) == 0x000010, "Wrong size on BP_SASCopyPlayerActor_C_GetNotifyAttackData");
static_assert(offsetof(BP_SASCopyPlayerActor_C_GetNotifyAttackData, Data) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_GetNotifyAttackData::Data' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.GetWeakTargetComponent
// 0x0008 (0x0008 - 0x0000)
struct BP_SASCopyPlayerActor_C_GetWeakTargetComponent final
{
public:
	class USceneComponent*                        WeakComponent;                                     // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_GetWeakTargetComponent) == 0x000008, "Wrong alignment on BP_SASCopyPlayerActor_C_GetWeakTargetComponent");
static_assert(sizeof(BP_SASCopyPlayerActor_C_GetWeakTargetComponent) == 0x000008, "Wrong size on BP_SASCopyPlayerActor_C_GetWeakTargetComponent");
static_assert(offsetof(BP_SASCopyPlayerActor_C_GetWeakTargetComponent, WeakComponent) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_GetWeakTargetComponent::WeakComponent' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.GetWeakUIPoint
// 0x0010 (0x0010 - 0x0000)
struct BP_SASCopyPlayerActor_C_GetWeakUIPoint final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Point;                                             // 0x0004(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_GetWeakUIPoint) == 0x000004, "Wrong alignment on BP_SASCopyPlayerActor_C_GetWeakUIPoint");
static_assert(sizeof(BP_SASCopyPlayerActor_C_GetWeakUIPoint) == 0x000010, "Wrong size on BP_SASCopyPlayerActor_C_GetWeakUIPoint");
static_assert(offsetof(BP_SASCopyPlayerActor_C_GetWeakUIPoint, Param_Index) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_GetWeakUIPoint::Param_Index' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_GetWeakUIPoint, Point) == 0x000004, "Member 'BP_SASCopyPlayerActor_C_GetWeakUIPoint::Point' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.GetTopTargetPoint
// 0x000C (0x000C - 0x0000)
struct BP_SASCopyPlayerActor_C_GetTopTargetPoint final
{
public:
	struct FVector                                Point;                                             // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_GetTopTargetPoint) == 0x000004, "Wrong alignment on BP_SASCopyPlayerActor_C_GetTopTargetPoint");
static_assert(sizeof(BP_SASCopyPlayerActor_C_GetTopTargetPoint) == 0x00000C, "Wrong size on BP_SASCopyPlayerActor_C_GetTopTargetPoint");
static_assert(offsetof(BP_SASCopyPlayerActor_C_GetTopTargetPoint, Point) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_GetTopTargetPoint::Point' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.GetWeakTargetPoint
// 0x0018 (0x0018 - 0x0000)
struct BP_SASCopyPlayerActor_C_GetWeakTargetPoint final
{
public:
	struct FVector                                AttackerPos;                                       // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Point;                                             // 0x000C(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_GetWeakTargetPoint) == 0x000004, "Wrong alignment on BP_SASCopyPlayerActor_C_GetWeakTargetPoint");
static_assert(sizeof(BP_SASCopyPlayerActor_C_GetWeakTargetPoint) == 0x000018, "Wrong size on BP_SASCopyPlayerActor_C_GetWeakTargetPoint");
static_assert(offsetof(BP_SASCopyPlayerActor_C_GetWeakTargetPoint, AttackerPos) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_GetWeakTargetPoint::AttackerPos' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_GetWeakTargetPoint, Point) == 0x00000C, "Member 'BP_SASCopyPlayerActor_C_GetWeakTargetPoint::Point' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.IsMetalMode
// 0x0001 (0x0001 - 0x0000)
struct BP_SASCopyPlayerActor_C_IsMetalMode final
{
public:
	bool                                          bMetal;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_IsMetalMode) == 0x000001, "Wrong alignment on BP_SASCopyPlayerActor_C_IsMetalMode");
static_assert(sizeof(BP_SASCopyPlayerActor_C_IsMetalMode) == 0x000001, "Wrong size on BP_SASCopyPlayerActor_C_IsMetalMode");
static_assert(offsetof(BP_SASCopyPlayerActor_C_IsMetalMode, bMetal) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_IsMetalMode::bMetal' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.IsEnemy
// 0x0001 (0x0001 - 0x0000)
struct BP_SASCopyPlayerActor_C_IsEnemy final
{
public:
	bool                                          bEnemy;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_IsEnemy) == 0x000001, "Wrong alignment on BP_SASCopyPlayerActor_C_IsEnemy");
static_assert(sizeof(BP_SASCopyPlayerActor_C_IsEnemy) == 0x000001, "Wrong size on BP_SASCopyPlayerActor_C_IsEnemy");
static_assert(offsetof(BP_SASCopyPlayerActor_C_IsEnemy, bEnemy) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_IsEnemy::bEnemy' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.IsPlayer
// 0x0001 (0x0001 - 0x0000)
struct BP_SASCopyPlayerActor_C_IsPlayer final
{
public:
	bool                                          bPlayer;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_IsPlayer) == 0x000001, "Wrong alignment on BP_SASCopyPlayerActor_C_IsPlayer");
static_assert(sizeof(BP_SASCopyPlayerActor_C_IsPlayer) == 0x000001, "Wrong size on BP_SASCopyPlayerActor_C_IsPlayer");
static_assert(offsetof(BP_SASCopyPlayerActor_C_IsPlayer, bPlayer) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_IsPlayer::bPlayer' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.GetTeam
// 0x0001 (0x0001 - 0x0000)
struct BP_SASCopyPlayerActor_C_GetTeam final
{
public:
	ETeamKind                                     Param_Team;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_GetTeam) == 0x000001, "Wrong alignment on BP_SASCopyPlayerActor_C_GetTeam");
static_assert(sizeof(BP_SASCopyPlayerActor_C_GetTeam) == 0x000001, "Wrong size on BP_SASCopyPlayerActor_C_GetTeam");
static_assert(offsetof(BP_SASCopyPlayerActor_C_GetTeam, Param_Team) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_GetTeam::Param_Team' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.isForceCritical
// 0x0001 (0x0001 - 0x0000)
struct BP_SASCopyPlayerActor_C_IsForceCritical final
{
public:
	bool                                          bResult;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_IsForceCritical) == 0x000001, "Wrong alignment on BP_SASCopyPlayerActor_C_IsForceCritical");
static_assert(sizeof(BP_SASCopyPlayerActor_C_IsForceCritical) == 0x000001, "Wrong size on BP_SASCopyPlayerActor_C_IsForceCritical");
static_assert(offsetof(BP_SASCopyPlayerActor_C_IsForceCritical, bResult) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_IsForceCritical::bResult' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.CanTakeBrainField
// 0x0001 (0x0001 - 0x0000)
struct BP_SASCopyPlayerActor_C_CanTakeBrainField final
{
public:
	bool                                          CanTake;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_CanTakeBrainField) == 0x000001, "Wrong alignment on BP_SASCopyPlayerActor_C_CanTakeBrainField");
static_assert(sizeof(BP_SASCopyPlayerActor_C_CanTakeBrainField) == 0x000001, "Wrong size on BP_SASCopyPlayerActor_C_CanTakeBrainField");
static_assert(offsetof(BP_SASCopyPlayerActor_C_CanTakeBrainField, CanTake) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_CanTakeBrainField::CanTake' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.IsHitWeak_ChangeDefaultEffect
// 0x0001 (0x0001 - 0x0000)
struct BP_SASCopyPlayerActor_C_IsHitWeak_ChangeDefaultEffect final
{
public:
	bool                                          ChangeDefault;                                     // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_IsHitWeak_ChangeDefaultEffect) == 0x000001, "Wrong alignment on BP_SASCopyPlayerActor_C_IsHitWeak_ChangeDefaultEffect");
static_assert(sizeof(BP_SASCopyPlayerActor_C_IsHitWeak_ChangeDefaultEffect) == 0x000001, "Wrong size on BP_SASCopyPlayerActor_C_IsHitWeak_ChangeDefaultEffect");
static_assert(offsetof(BP_SASCopyPlayerActor_C_IsHitWeak_ChangeDefaultEffect, ChangeDefault) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_IsHitWeak_ChangeDefaultEffect::ChangeDefault' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.IsEnableSlashEffect
// 0x01C8 (0x01C8 - 0x0000)
struct BP_SASCopyPlayerActor_C_IsEnableSlashEffect final
{
public:
	struct FHCHitResult                           HitResult;                                         // 0x0000(0x01C0)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	bool                                          bEnable;                                           // 0x01C0(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_IsEnableSlashEffect) == 0x000008, "Wrong alignment on BP_SASCopyPlayerActor_C_IsEnableSlashEffect");
static_assert(sizeof(BP_SASCopyPlayerActor_C_IsEnableSlashEffect) == 0x0001C8, "Wrong size on BP_SASCopyPlayerActor_C_IsEnableSlashEffect");
static_assert(offsetof(BP_SASCopyPlayerActor_C_IsEnableSlashEffect, HitResult) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_IsEnableSlashEffect::HitResult' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_IsEnableSlashEffect, bEnable) == 0x0001C0, "Member 'BP_SASCopyPlayerActor_C_IsEnableSlashEffect::bEnable' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.IsBrainCrashAccessInterface
// 0x0001 (0x0001 - 0x0000)
struct BP_SASCopyPlayerActor_C_IsBrainCrashAccessInterface final
{
public:
	bool                                          bAccess;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_IsBrainCrashAccessInterface) == 0x000001, "Wrong alignment on BP_SASCopyPlayerActor_C_IsBrainCrashAccessInterface");
static_assert(sizeof(BP_SASCopyPlayerActor_C_IsBrainCrashAccessInterface) == 0x000001, "Wrong size on BP_SASCopyPlayerActor_C_IsBrainCrashAccessInterface");
static_assert(offsetof(BP_SASCopyPlayerActor_C_IsBrainCrashAccessInterface, bAccess) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_IsBrainCrashAccessInterface::bAccess' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.GetAutoAimRate
// 0x0004 (0x0004 - 0x0000)
struct BP_SASCopyPlayerActor_C_GetAutoAimRate final
{
public:
	float                                         Rate;                                              // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_GetAutoAimRate) == 0x000004, "Wrong alignment on BP_SASCopyPlayerActor_C_GetAutoAimRate");
static_assert(sizeof(BP_SASCopyPlayerActor_C_GetAutoAimRate) == 0x000004, "Wrong size on BP_SASCopyPlayerActor_C_GetAutoAimRate");
static_assert(offsetof(BP_SASCopyPlayerActor_C_GetAutoAimRate, Rate) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_GetAutoAimRate::Rate' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.GetCharacterLV
// 0x0004 (0x0004 - 0x0000)
struct BP_SASCopyPlayerActor_C_GetCharacterLV final
{
public:
	int32                                         LV;                                                // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_GetCharacterLV) == 0x000004, "Wrong alignment on BP_SASCopyPlayerActor_C_GetCharacterLV");
static_assert(sizeof(BP_SASCopyPlayerActor_C_GetCharacterLV) == 0x000004, "Wrong size on BP_SASCopyPlayerActor_C_GetCharacterLV");
static_assert(offsetof(BP_SASCopyPlayerActor_C_GetCharacterLV, LV) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_GetCharacterLV::LV' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.IsEnableReactionCoefficient
// 0x0018 (0x0018 - 0x0000)
struct BP_SASCopyPlayerActor_C_IsEnableReactionCoefficient final
{
public:
	bool                                          bEnable;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4DAA[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ReactionSRate;                                     // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReactionLRate;                                     // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DownRate;                                          // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CrashRate;                                         // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bAcceptAll;                                        // 0x0014(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_IsEnableReactionCoefficient) == 0x000004, "Wrong alignment on BP_SASCopyPlayerActor_C_IsEnableReactionCoefficient");
static_assert(sizeof(BP_SASCopyPlayerActor_C_IsEnableReactionCoefficient) == 0x000018, "Wrong size on BP_SASCopyPlayerActor_C_IsEnableReactionCoefficient");
static_assert(offsetof(BP_SASCopyPlayerActor_C_IsEnableReactionCoefficient, bEnable) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_IsEnableReactionCoefficient::bEnable' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_IsEnableReactionCoefficient, ReactionSRate) == 0x000004, "Member 'BP_SASCopyPlayerActor_C_IsEnableReactionCoefficient::ReactionSRate' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_IsEnableReactionCoefficient, ReactionLRate) == 0x000008, "Member 'BP_SASCopyPlayerActor_C_IsEnableReactionCoefficient::ReactionLRate' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_IsEnableReactionCoefficient, DownRate) == 0x00000C, "Member 'BP_SASCopyPlayerActor_C_IsEnableReactionCoefficient::DownRate' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_IsEnableReactionCoefficient, CrashRate) == 0x000010, "Member 'BP_SASCopyPlayerActor_C_IsEnableReactionCoefficient::CrashRate' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_IsEnableReactionCoefficient, bAcceptAll) == 0x000014, "Member 'BP_SASCopyPlayerActor_C_IsEnableReactionCoefficient::bAcceptAll' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.IsAttackerMainPlayer
// 0x0020 (0x0020 - 0x0000)
struct BP_SASCopyPlayerActor_C_IsAttackerMainPlayer final
{
public:
	bool                                          bMainPlayer;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4DAB[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleCharacterInterface_C> CallFunc_IsAttackerMainPlayer_self_CastInput;      // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAttackerMainPlayer_bMainPlayer;         // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_IsAttackerMainPlayer) == 0x000008, "Wrong alignment on BP_SASCopyPlayerActor_C_IsAttackerMainPlayer");
static_assert(sizeof(BP_SASCopyPlayerActor_C_IsAttackerMainPlayer) == 0x000020, "Wrong size on BP_SASCopyPlayerActor_C_IsAttackerMainPlayer");
static_assert(offsetof(BP_SASCopyPlayerActor_C_IsAttackerMainPlayer, bMainPlayer) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_IsAttackerMainPlayer::bMainPlayer' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_IsAttackerMainPlayer, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'BP_SASCopyPlayerActor_C_IsAttackerMainPlayer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_IsAttackerMainPlayer, CallFunc_IsAttackerMainPlayer_self_CastInput) == 0x000008, "Member 'BP_SASCopyPlayerActor_C_IsAttackerMainPlayer::CallFunc_IsAttackerMainPlayer_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_IsAttackerMainPlayer, CallFunc_IsAttackerMainPlayer_bMainPlayer) == 0x000018, "Member 'BP_SASCopyPlayerActor_C_IsAttackerMainPlayer::CallFunc_IsAttackerMainPlayer_bMainPlayer' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.GetCharacterReplaceSkillTable
// 0x0010 (0x0010 - 0x0000)
struct BP_SASCopyPlayerActor_C_GetCharacterReplaceSkillTable final
{
public:
	class UDataTable*                             Original;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             SkillTable;                                        // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_GetCharacterReplaceSkillTable) == 0x000008, "Wrong alignment on BP_SASCopyPlayerActor_C_GetCharacterReplaceSkillTable");
static_assert(sizeof(BP_SASCopyPlayerActor_C_GetCharacterReplaceSkillTable) == 0x000010, "Wrong size on BP_SASCopyPlayerActor_C_GetCharacterReplaceSkillTable");
static_assert(offsetof(BP_SASCopyPlayerActor_C_GetCharacterReplaceSkillTable, Original) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_GetCharacterReplaceSkillTable::Original' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_GetCharacterReplaceSkillTable, SkillTable) == 0x000008, "Member 'BP_SASCopyPlayerActor_C_GetCharacterReplaceSkillTable::SkillTable' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.IsOnGround
// 0x0002 (0x0002 - 0x0000)
struct BP_SASCopyPlayerActor_C_IsOnGround final
{
public:
	bool                                          bIncludeObject;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_IsOnGround) == 0x000001, "Wrong alignment on BP_SASCopyPlayerActor_C_IsOnGround");
static_assert(sizeof(BP_SASCopyPlayerActor_C_IsOnGround) == 0x000002, "Wrong size on BP_SASCopyPlayerActor_C_IsOnGround");
static_assert(offsetof(BP_SASCopyPlayerActor_C_IsOnGround, bIncludeObject) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_IsOnGround::bIncludeObject' has a wrong offset!");
static_assert(offsetof(BP_SASCopyPlayerActor_C_IsOnGround, ReturnValue) == 0x000001, "Member 'BP_SASCopyPlayerActor_C_IsOnGround::ReturnValue' has a wrong offset!");

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.IsDisableDamageHit
// 0x0001 (0x0001 - 0x0000)
struct BP_SASCopyPlayerActor_C_IsDisableDamageHit final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SASCopyPlayerActor_C_IsDisableDamageHit) == 0x000001, "Wrong alignment on BP_SASCopyPlayerActor_C_IsDisableDamageHit");
static_assert(sizeof(BP_SASCopyPlayerActor_C_IsDisableDamageHit) == 0x000001, "Wrong size on BP_SASCopyPlayerActor_C_IsDisableDamageHit");
static_assert(offsetof(BP_SASCopyPlayerActor_C_IsDisableDamageHit, ReturnValue) == 0x000000, "Member 'BP_SASCopyPlayerActor_C_IsDisableDamageHit::ReturnValue' has a wrong offset!");

}

