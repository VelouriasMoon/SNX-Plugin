#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_ui_PK_psychic_gauge_1

#include "Basic.hpp"

#include "BattlePrototype_structs.hpp"
#include "BattlePrototype_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WB_ui_PK_psychic_gauge_1.WB_ui_PK_psychic_gauge_1_C
// 0x0140 (0x04C8 - 0x0388)
class UWB_ui_PK_psychic_gauge_1_C final : public UUIBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0388(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Chanege_gauge_timer;                               // 0x0390(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Chanege_timer_gauge;                               // 0x0398(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Decision;                                          // 0x03A0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Error;                                             // 0x03A8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Out;                                               // 0x03B0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       In;                                                // 0x03B8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Default_none;                                      // 0x03C0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Default;                                           // 0x03C8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 All_add_2;                                         // 0x03D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Arrow_1;                                           // 0x03D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Bar_3;                                             // 0x03E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Bar_3_add;                                         // 0x03E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Bar_3_use;                                         // 0x03F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               Size_Bar_3;                                        // 0x03F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               Size_Bar_5;                                        // 0x0400(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TArray<class UWB_ui_ShopContents_Parts_1_C*>  ChildBuySell;                                      // 0x0408(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, HasGetValueTypeHash)
	TArray<class UWB_ui_ShopContents_Parts_6_C*>  ChildItemCategory;                                 // 0x0418(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, HasGetValueTypeHash)
	float                                         CurrentPercent;                                    // 0x0428(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         WorkPercent;                                       // 0x042C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FlagUse;                                           // 0x0430(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          FlagError;                                         // 0x0431(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5822[0x2];                                     // 0x0432(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         WaitSecond;                                        // 0x0434(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PsychicLevel;                                      // 0x0438(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5823[0x4];                                     // 0x043C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FName, struct FPsychicGuageDataCell> GaugeEffectTable;                                  // 0x0440(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UMaterialInstanceDynamic*>       GaugeMaterialList;                                 // 0x0490(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	int32                                         GaugeCurrentIndex;                                 // 0x04A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         GaugeNextIndex;                                    // 0x04A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GaugeChangeTime;                                   // 0x04A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GaugeCurrentTimer;                                 // 0x04AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         GaugeState;                                        // 0x04B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5824[0x4];                                     // 0x04B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USizeBox*                               SizeBoxObject;                                     // 0x04B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         GaugeCurrentIndex_Before;                          // 0x04C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FlagTimerMode;                                     // 0x04C4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_WB_ui_PK_psychic_gauge_1(int32 EntryPoint);
	void UpdateState(int32 State, int32 SubState, float DeltaSeconds);
	void Construct();
	void StateNone(int32 SubState);
	void StateOpen(int32 SubState);
	void StateLoop(int32 SubState);
	void StateClose(int32 SubState);
	void SetGauge(float Param);
	void Decide();
	void UseGauge(float Percent);
	void ErrorGauge();
	void SetGrowColor(int32 Param_Index);
	void UpdateGauge(float DeltaSecond);
	void SetGaugeLevel(int32 Level);
	void LoadPsychicGaugeTable();
	void SetGaugeEffectTime(int32 Param_Index, float Time);
	void UpdateGaugeEffect(float DeltaSecond);
	void SetSizeImageObject(class USizeBox* SizeObject);
	void SetGaugeEffectNormal();
	void SetTimerModeFlag(bool IsTimerMode);
	void StateLoopTimer(int32 SubState);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WB_ui_PK_psychic_gauge_1_C">();
	}
	static class UWB_ui_PK_psychic_gauge_1_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWB_ui_PK_psychic_gauge_1_C>();
	}
};
static_assert(alignof(UWB_ui_PK_psychic_gauge_1_C) == 0x000008, "Wrong alignment on UWB_ui_PK_psychic_gauge_1_C");
static_assert(sizeof(UWB_ui_PK_psychic_gauge_1_C) == 0x0004C8, "Wrong size on UWB_ui_PK_psychic_gauge_1_C");
static_assert(offsetof(UWB_ui_PK_psychic_gauge_1_C, UberGraphFrame) == 0x000388, "Member 'UWB_ui_PK_psychic_gauge_1_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWB_ui_PK_psychic_gauge_1_C, Chanege_gauge_timer) == 0x000390, "Member 'UWB_ui_PK_psychic_gauge_1_C::Chanege_gauge_timer' has a wrong offset!");
static_assert(offsetof(UWB_ui_PK_psychic_gauge_1_C, Chanege_timer_gauge) == 0x000398, "Member 'UWB_ui_PK_psychic_gauge_1_C::Chanege_timer_gauge' has a wrong offset!");
static_assert(offsetof(UWB_ui_PK_psychic_gauge_1_C, Decision) == 0x0003A0, "Member 'UWB_ui_PK_psychic_gauge_1_C::Decision' has a wrong offset!");
static_assert(offsetof(UWB_ui_PK_psychic_gauge_1_C, Error) == 0x0003A8, "Member 'UWB_ui_PK_psychic_gauge_1_C::Error' has a wrong offset!");
static_assert(offsetof(UWB_ui_PK_psychic_gauge_1_C, Out) == 0x0003B0, "Member 'UWB_ui_PK_psychic_gauge_1_C::Out' has a wrong offset!");
static_assert(offsetof(UWB_ui_PK_psychic_gauge_1_C, In) == 0x0003B8, "Member 'UWB_ui_PK_psychic_gauge_1_C::In' has a wrong offset!");
static_assert(offsetof(UWB_ui_PK_psychic_gauge_1_C, Default_none) == 0x0003C0, "Member 'UWB_ui_PK_psychic_gauge_1_C::Default_none' has a wrong offset!");
static_assert(offsetof(UWB_ui_PK_psychic_gauge_1_C, Default) == 0x0003C8, "Member 'UWB_ui_PK_psychic_gauge_1_C::Default' has a wrong offset!");
static_assert(offsetof(UWB_ui_PK_psychic_gauge_1_C, All_add_2) == 0x0003D0, "Member 'UWB_ui_PK_psychic_gauge_1_C::All_add_2' has a wrong offset!");
static_assert(offsetof(UWB_ui_PK_psychic_gauge_1_C, Arrow_1) == 0x0003D8, "Member 'UWB_ui_PK_psychic_gauge_1_C::Arrow_1' has a wrong offset!");
static_assert(offsetof(UWB_ui_PK_psychic_gauge_1_C, Bar_3) == 0x0003E0, "Member 'UWB_ui_PK_psychic_gauge_1_C::Bar_3' has a wrong offset!");
static_assert(offsetof(UWB_ui_PK_psychic_gauge_1_C, Bar_3_add) == 0x0003E8, "Member 'UWB_ui_PK_psychic_gauge_1_C::Bar_3_add' has a wrong offset!");
static_assert(offsetof(UWB_ui_PK_psychic_gauge_1_C, Bar_3_use) == 0x0003F0, "Member 'UWB_ui_PK_psychic_gauge_1_C::Bar_3_use' has a wrong offset!");
static_assert(offsetof(UWB_ui_PK_psychic_gauge_1_C, Size_Bar_3) == 0x0003F8, "Member 'UWB_ui_PK_psychic_gauge_1_C::Size_Bar_3' has a wrong offset!");
static_assert(offsetof(UWB_ui_PK_psychic_gauge_1_C, Size_Bar_5) == 0x000400, "Member 'UWB_ui_PK_psychic_gauge_1_C::Size_Bar_5' has a wrong offset!");
static_assert(offsetof(UWB_ui_PK_psychic_gauge_1_C, ChildBuySell) == 0x000408, "Member 'UWB_ui_PK_psychic_gauge_1_C::ChildBuySell' has a wrong offset!");
static_assert(offsetof(UWB_ui_PK_psychic_gauge_1_C, ChildItemCategory) == 0x000418, "Member 'UWB_ui_PK_psychic_gauge_1_C::ChildItemCategory' has a wrong offset!");
static_assert(offsetof(UWB_ui_PK_psychic_gauge_1_C, CurrentPercent) == 0x000428, "Member 'UWB_ui_PK_psychic_gauge_1_C::CurrentPercent' has a wrong offset!");
static_assert(offsetof(UWB_ui_PK_psychic_gauge_1_C, WorkPercent) == 0x00042C, "Member 'UWB_ui_PK_psychic_gauge_1_C::WorkPercent' has a wrong offset!");
static_assert(offsetof(UWB_ui_PK_psychic_gauge_1_C, FlagUse) == 0x000430, "Member 'UWB_ui_PK_psychic_gauge_1_C::FlagUse' has a wrong offset!");
static_assert(offsetof(UWB_ui_PK_psychic_gauge_1_C, FlagError) == 0x000431, "Member 'UWB_ui_PK_psychic_gauge_1_C::FlagError' has a wrong offset!");
static_assert(offsetof(UWB_ui_PK_psychic_gauge_1_C, WaitSecond) == 0x000434, "Member 'UWB_ui_PK_psychic_gauge_1_C::WaitSecond' has a wrong offset!");
static_assert(offsetof(UWB_ui_PK_psychic_gauge_1_C, PsychicLevel) == 0x000438, "Member 'UWB_ui_PK_psychic_gauge_1_C::PsychicLevel' has a wrong offset!");
static_assert(offsetof(UWB_ui_PK_psychic_gauge_1_C, GaugeEffectTable) == 0x000440, "Member 'UWB_ui_PK_psychic_gauge_1_C::GaugeEffectTable' has a wrong offset!");
static_assert(offsetof(UWB_ui_PK_psychic_gauge_1_C, GaugeMaterialList) == 0x000490, "Member 'UWB_ui_PK_psychic_gauge_1_C::GaugeMaterialList' has a wrong offset!");
static_assert(offsetof(UWB_ui_PK_psychic_gauge_1_C, GaugeCurrentIndex) == 0x0004A0, "Member 'UWB_ui_PK_psychic_gauge_1_C::GaugeCurrentIndex' has a wrong offset!");
static_assert(offsetof(UWB_ui_PK_psychic_gauge_1_C, GaugeNextIndex) == 0x0004A4, "Member 'UWB_ui_PK_psychic_gauge_1_C::GaugeNextIndex' has a wrong offset!");
static_assert(offsetof(UWB_ui_PK_psychic_gauge_1_C, GaugeChangeTime) == 0x0004A8, "Member 'UWB_ui_PK_psychic_gauge_1_C::GaugeChangeTime' has a wrong offset!");
static_assert(offsetof(UWB_ui_PK_psychic_gauge_1_C, GaugeCurrentTimer) == 0x0004AC, "Member 'UWB_ui_PK_psychic_gauge_1_C::GaugeCurrentTimer' has a wrong offset!");
static_assert(offsetof(UWB_ui_PK_psychic_gauge_1_C, GaugeState) == 0x0004B0, "Member 'UWB_ui_PK_psychic_gauge_1_C::GaugeState' has a wrong offset!");
static_assert(offsetof(UWB_ui_PK_psychic_gauge_1_C, SizeBoxObject) == 0x0004B8, "Member 'UWB_ui_PK_psychic_gauge_1_C::SizeBoxObject' has a wrong offset!");
static_assert(offsetof(UWB_ui_PK_psychic_gauge_1_C, GaugeCurrentIndex_Before) == 0x0004C0, "Member 'UWB_ui_PK_psychic_gauge_1_C::GaugeCurrentIndex_Before' has a wrong offset!");
static_assert(offsetof(UWB_ui_PK_psychic_gauge_1_C, FlagTimerMode) == 0x0004C4, "Member 'UWB_ui_PK_psychic_gauge_1_C::FlagTimerMode' has a wrong offset!");

}

