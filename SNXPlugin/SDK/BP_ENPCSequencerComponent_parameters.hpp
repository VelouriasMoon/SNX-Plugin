#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ENPCSequencerComponent

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "MovieScene_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "BattlePrototype_structs.hpp"


namespace SDK::Params
{

// Function BP_ENPCSequencerComponent.BP_ENPCSequencerComponent_C.ExecuteUbergraph_BP_ENPCSequencerComponent
// 0x0048 (0x0048 - 0x0000)
struct BP_ENPCSequencerComponent_C_ExecuteUbergraph_BP_ENPCSequencerComponent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_88D8[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue;            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_88D9[0x2];                                     // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattleCharacter_C*                   K2Node_DynamicCast_AsRSBattle_Character;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_88DA[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_DelayRestartTime;               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_88DB[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue_1;          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ENPCSequencerComponent_C_ExecuteUbergraph_BP_ENPCSequencerComponent) == 0x000008, "Wrong alignment on BP_ENPCSequencerComponent_C_ExecuteUbergraph_BP_ENPCSequencerComponent");
static_assert(sizeof(BP_ENPCSequencerComponent_C_ExecuteUbergraph_BP_ENPCSequencerComponent) == 0x000048, "Wrong size on BP_ENPCSequencerComponent_C_ExecuteUbergraph_BP_ENPCSequencerComponent");
static_assert(offsetof(BP_ENPCSequencerComponent_C_ExecuteUbergraph_BP_ENPCSequencerComponent, EntryPoint) == 0x000000, "Member 'BP_ENPCSequencerComponent_C_ExecuteUbergraph_BP_ENPCSequencerComponent::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_ExecuteUbergraph_BP_ENPCSequencerComponent, CallFunc_GetSequencePlayer_ReturnValue) == 0x000008, "Member 'BP_ENPCSequencerComponent_C_ExecuteUbergraph_BP_ENPCSequencerComponent::CallFunc_GetSequencePlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_ExecuteUbergraph_BP_ENPCSequencerComponent, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_ENPCSequencerComponent_C_ExecuteUbergraph_BP_ENPCSequencerComponent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_ExecuteUbergraph_BP_ENPCSequencerComponent, CallFunc_IsValid_ReturnValue_1) == 0x000011, "Member 'BP_ENPCSequencerComponent_C_ExecuteUbergraph_BP_ENPCSequencerComponent::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_ExecuteUbergraph_BP_ENPCSequencerComponent, K2Node_Event_DeltaSeconds) == 0x000014, "Member 'BP_ENPCSequencerComponent_C_ExecuteUbergraph_BP_ENPCSequencerComponent::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_ExecuteUbergraph_BP_ENPCSequencerComponent, CallFunc_GetOwner_ReturnValue) == 0x000018, "Member 'BP_ENPCSequencerComponent_C_ExecuteUbergraph_BP_ENPCSequencerComponent::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_ExecuteUbergraph_BP_ENPCSequencerComponent, K2Node_DynamicCast_AsRSBattle_Character) == 0x000020, "Member 'BP_ENPCSequencerComponent_C_ExecuteUbergraph_BP_ENPCSequencerComponent::K2Node_DynamicCast_AsRSBattle_Character' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_ExecuteUbergraph_BP_ENPCSequencerComponent, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_ENPCSequencerComponent_C_ExecuteUbergraph_BP_ENPCSequencerComponent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_ExecuteUbergraph_BP_ENPCSequencerComponent, K2Node_CustomEvent_DelayRestartTime) == 0x00002C, "Member 'BP_ENPCSequencerComponent_C_ExecuteUbergraph_BP_ENPCSequencerComponent::K2Node_CustomEvent_DelayRestartTime' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_ExecuteUbergraph_BP_ENPCSequencerComponent, CallFunc_IsValid_ReturnValue_2) == 0x000030, "Member 'BP_ENPCSequencerComponent_C_ExecuteUbergraph_BP_ENPCSequencerComponent::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_ExecuteUbergraph_BP_ENPCSequencerComponent, CallFunc_GetSequencePlayer_ReturnValue_1) == 0x000038, "Member 'BP_ENPCSequencerComponent_C_ExecuteUbergraph_BP_ENPCSequencerComponent::CallFunc_GetSequencePlayer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_ExecuteUbergraph_BP_ENPCSequencerComponent, CallFunc_IsValid_ReturnValue_3) == 0x000040, "Member 'BP_ENPCSequencerComponent_C_ExecuteUbergraph_BP_ENPCSequencerComponent::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");

// Function BP_ENPCSequencerComponent.BP_ENPCSequencerComponent_C.PauseDelayRestart
// 0x0004 (0x0004 - 0x0000)
struct BP_ENPCSequencerComponent_C_PauseDelayRestart final
{
public:
	float                                         DelayRestartTime;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ENPCSequencerComponent_C_PauseDelayRestart) == 0x000004, "Wrong alignment on BP_ENPCSequencerComponent_C_PauseDelayRestart");
static_assert(sizeof(BP_ENPCSequencerComponent_C_PauseDelayRestart) == 0x000004, "Wrong size on BP_ENPCSequencerComponent_C_PauseDelayRestart");
static_assert(offsetof(BP_ENPCSequencerComponent_C_PauseDelayRestart, DelayRestartTime) == 0x000000, "Member 'BP_ENPCSequencerComponent_C_PauseDelayRestart::DelayRestartTime' has a wrong offset!");

// Function BP_ENPCSequencerComponent.BP_ENPCSequencerComponent_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_ENPCSequencerComponent_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ENPCSequencerComponent_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_ENPCSequencerComponent_C_ReceiveTick");
static_assert(sizeof(BP_ENPCSequencerComponent_C_ReceiveTick) == 0x000004, "Wrong size on BP_ENPCSequencerComponent_C_ReceiveTick");
static_assert(offsetof(BP_ENPCSequencerComponent_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_ENPCSequencerComponent_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_ENPCSequencerComponent.BP_ENPCSequencerComponent_C.EndSequencer
// 0x02D0 (0x02D0 - 0x0000)
struct BP_ENPCSequencerComponent_C_EndSequencer final
{
public:
	int32                                         Param_SequencerIndex;                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Dummy;                                             // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_88DC[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         L_CorrectX;                                        // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_88DD[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ARSCharacterBase*>               L_playerList;                                      // 0x0010(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	class ARSBattlePlayer_C*                      L_mainPlayer;                                      // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_88DE[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_EnemyManager_C*                     CallFunc_GetEnemyManager_Manager;                  // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_88DF[0x6];                                     // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattlePlayer_C*                      CallFunc_GetMainPlayer_Player;                     // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_88E0[0x6];                                     // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABattleSimulatorManager*                CallFunc_GetBattleSimulatorManager_BattleSimulatorManager; // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHUDMainGame_C*                         CallFunc_GetHUDMainGame_HUDMainGame;               // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_88E1[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IRSGameModeBPInterface_C> K2Node_DynamicCast_AsRSGame_Mode_BPInterface;      // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_88E2[0x6];                                     // 0x008A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_GetMainPlayerBP_Player;                   // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_PlayerInterface_C> K2Node_DynamicCast_AsBPI_Player_Interface;         // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_PlayerCameraReset_Dummy;                  // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_88E3[0x1];                                     // 0x00AB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSCharacterBase*                       CallFunc_Array_Get_Item;                           // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess_1;                 // 0x00C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_88E4[0x2];                                     // 0x00C6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x00D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x00E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x00FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0108(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0114(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x0120(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x012C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_88E5[0x3];                                     // 0x0139(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorLocationAndRotation_SweepHitResult; // 0x013C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocationAndRotation_ReturnValue; // 0x01C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_88E6[0x3];                                     // 0x01C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_88E7[0x4];                                     // 0x01CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager_1;         // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_9;                    // 0x01D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetInvalidDamage_Dummy;                   // 0x01DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_88E8[0x5];                                     // 0x01DB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ARSCharacterBase*>               CallFunc_GetPlayerList_ReturnValue;                // 0x01E0(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	class ARSCharacterBase*                       CallFunc_Array_Get_Item_1;                         // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_PlayerInterface_C> K2Node_DynamicCast_AsBPI_Player_Interface_1;       // 0x01F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_88E9[0x7];                                     // 0x0209(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerInterface_C> K2Node_DynamicCast_AsBPI_Player_Interface_2;       // 0x0210(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_PlayerCameraReset_Dummy_1;                // 0x0221(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_PlayerCameraReset_Dummy_2;                // 0x0222(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_10;                   // 0x0223(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetActorLocationAndRotation_SweepHitResult_1; // 0x0224(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocationAndRotation_ReturnValue_1; // 0x02AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_88EA[0x3];                                     // 0x02AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager_2;         // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_11;                   // 0x02B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_88EB[0x7];                                     // 0x02B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattlePlayer_C*                      CallFunc_GetMainPlayer_Player_1;                   // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_12;                   // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ENPCSequencerComponent_C_EndSequencer) == 0x000008, "Wrong alignment on BP_ENPCSequencerComponent_C_EndSequencer");
static_assert(sizeof(BP_ENPCSequencerComponent_C_EndSequencer) == 0x0002D0, "Wrong size on BP_ENPCSequencerComponent_C_EndSequencer");
static_assert(offsetof(BP_ENPCSequencerComponent_C_EndSequencer, Param_SequencerIndex) == 0x000000, "Member 'BP_ENPCSequencerComponent_C_EndSequencer::Param_SequencerIndex' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_EndSequencer, Dummy) == 0x000004, "Member 'BP_ENPCSequencerComponent_C_EndSequencer::Dummy' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_EndSequencer, L_CorrectX) == 0x000008, "Member 'BP_ENPCSequencerComponent_C_EndSequencer::L_CorrectX' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_EndSequencer, L_playerList) == 0x000010, "Member 'BP_ENPCSequencerComponent_C_EndSequencer::L_playerList' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_EndSequencer, L_mainPlayer) == 0x000020, "Member 'BP_ENPCSequencerComponent_C_EndSequencer::L_mainPlayer' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_EndSequencer, Temp_int_Array_Index_Variable) == 0x000028, "Member 'BP_ENPCSequencerComponent_C_EndSequencer::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_EndSequencer, K2Node_SwitchInteger_CmpSuccess) == 0x00002C, "Member 'BP_ENPCSequencerComponent_C_EndSequencer::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_EndSequencer, CallFunc_GetEnemyManager_Manager) == 0x000030, "Member 'BP_ENPCSequencerComponent_C_EndSequencer::CallFunc_GetEnemyManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_EndSequencer, CallFunc_GetPlayerManager_PlayerManager) == 0x000038, "Member 'BP_ENPCSequencerComponent_C_EndSequencer::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_EndSequencer, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'BP_ENPCSequencerComponent_C_EndSequencer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_EndSequencer, CallFunc_IsValid_ReturnValue_1) == 0x000041, "Member 'BP_ENPCSequencerComponent_C_EndSequencer::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_EndSequencer, CallFunc_GetMainPlayer_Player) == 0x000048, "Member 'BP_ENPCSequencerComponent_C_EndSequencer::CallFunc_GetMainPlayer_Player' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_EndSequencer, CallFunc_IsValid_ReturnValue_2) == 0x000050, "Member 'BP_ENPCSequencerComponent_C_EndSequencer::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_EndSequencer, CallFunc_IsValid_ReturnValue_3) == 0x000051, "Member 'BP_ENPCSequencerComponent_C_EndSequencer::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_EndSequencer, CallFunc_GetBattleSimulatorManager_BattleSimulatorManager) == 0x000058, "Member 'BP_ENPCSequencerComponent_C_EndSequencer::CallFunc_GetBattleSimulatorManager_BattleSimulatorManager' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_EndSequencer, CallFunc_GetHUDMainGame_HUDMainGame) == 0x000060, "Member 'BP_ENPCSequencerComponent_C_EndSequencer::CallFunc_GetHUDMainGame_HUDMainGame' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_EndSequencer, CallFunc_IsValid_ReturnValue_4) == 0x000068, "Member 'BP_ENPCSequencerComponent_C_EndSequencer::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_EndSequencer, CallFunc_GetGameMode_ReturnValue) == 0x000070, "Member 'BP_ENPCSequencerComponent_C_EndSequencer::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_EndSequencer, K2Node_DynamicCast_AsRSGame_Mode_BPInterface) == 0x000078, "Member 'BP_ENPCSequencerComponent_C_EndSequencer::K2Node_DynamicCast_AsRSGame_Mode_BPInterface' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_EndSequencer, K2Node_DynamicCast_bSuccess) == 0x000088, "Member 'BP_ENPCSequencerComponent_C_EndSequencer::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_EndSequencer, CallFunc_IsValid_ReturnValue_5) == 0x000089, "Member 'BP_ENPCSequencerComponent_C_EndSequencer::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_EndSequencer, CallFunc_GetMainPlayerBP_Player) == 0x000090, "Member 'BP_ENPCSequencerComponent_C_EndSequencer::CallFunc_GetMainPlayerBP_Player' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_EndSequencer, K2Node_DynamicCast_AsBPI_Player_Interface) == 0x000098, "Member 'BP_ENPCSequencerComponent_C_EndSequencer::K2Node_DynamicCast_AsBPI_Player_Interface' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_EndSequencer, K2Node_DynamicCast_bSuccess_1) == 0x0000A8, "Member 'BP_ENPCSequencerComponent_C_EndSequencer::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_EndSequencer, CallFunc_PlayerCameraReset_Dummy) == 0x0000A9, "Member 'BP_ENPCSequencerComponent_C_EndSequencer::CallFunc_PlayerCameraReset_Dummy' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_EndSequencer, CallFunc_IsValid_ReturnValue_6) == 0x0000AA, "Member 'BP_ENPCSequencerComponent_C_EndSequencer::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_EndSequencer, CallFunc_MakeVector_ReturnValue) == 0x0000AC, "Member 'BP_ENPCSequencerComponent_C_EndSequencer::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_EndSequencer, CallFunc_Array_Get_Item) == 0x0000B8, "Member 'BP_ENPCSequencerComponent_C_EndSequencer::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_EndSequencer, CallFunc_Array_Length_ReturnValue) == 0x0000C0, "Member 'BP_ENPCSequencerComponent_C_EndSequencer::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_EndSequencer, CallFunc_IsValid_ReturnValue_7) == 0x0000C4, "Member 'BP_ENPCSequencerComponent_C_EndSequencer::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_EndSequencer, K2Node_SwitchInteger_CmpSuccess_1) == 0x0000C5, "Member 'BP_ENPCSequencerComponent_C_EndSequencer::K2Node_SwitchInteger_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_EndSequencer, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000C8, "Member 'BP_ENPCSequencerComponent_C_EndSequencer::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_EndSequencer, CallFunc_GetActorForwardVector_ReturnValue) == 0x0000D4, "Member 'BP_ENPCSequencerComponent_C_EndSequencer::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_EndSequencer, Temp_int_Loop_Counter_Variable) == 0x0000E0, "Member 'BP_ENPCSequencerComponent_C_EndSequencer::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_EndSequencer, CallFunc_Multiply_VectorVector_ReturnValue) == 0x0000E4, "Member 'BP_ENPCSequencerComponent_C_EndSequencer::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_EndSequencer, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000F0, "Member 'BP_ENPCSequencerComponent_C_EndSequencer::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_EndSequencer, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x0000FC, "Member 'BP_ENPCSequencerComponent_C_EndSequencer::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_EndSequencer, CallFunc_Add_VectorVector_ReturnValue) == 0x000108, "Member 'BP_ENPCSequencerComponent_C_EndSequencer::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_EndSequencer, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000114, "Member 'BP_ENPCSequencerComponent_C_EndSequencer::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_EndSequencer, CallFunc_Add_VectorVector_ReturnValue_2) == 0x000120, "Member 'BP_ENPCSequencerComponent_C_EndSequencer::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_EndSequencer, CallFunc_FindLookAtRotation_ReturnValue) == 0x00012C, "Member 'BP_ENPCSequencerComponent_C_EndSequencer::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_EndSequencer, CallFunc_Less_IntInt_ReturnValue) == 0x000138, "Member 'BP_ENPCSequencerComponent_C_EndSequencer::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_EndSequencer, CallFunc_K2_SetActorLocationAndRotation_SweepHitResult) == 0x00013C, "Member 'BP_ENPCSequencerComponent_C_EndSequencer::CallFunc_K2_SetActorLocationAndRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_EndSequencer, CallFunc_K2_SetActorLocationAndRotation_ReturnValue) == 0x0001C4, "Member 'BP_ENPCSequencerComponent_C_EndSequencer::CallFunc_K2_SetActorLocationAndRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_EndSequencer, CallFunc_Add_IntInt_ReturnValue) == 0x0001C8, "Member 'BP_ENPCSequencerComponent_C_EndSequencer::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_EndSequencer, CallFunc_GetPlayerManager_PlayerManager_1) == 0x0001D0, "Member 'BP_ENPCSequencerComponent_C_EndSequencer::CallFunc_GetPlayerManager_PlayerManager_1' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_EndSequencer, CallFunc_IsValid_ReturnValue_8) == 0x0001D8, "Member 'BP_ENPCSequencerComponent_C_EndSequencer::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_EndSequencer, CallFunc_IsValid_ReturnValue_9) == 0x0001D9, "Member 'BP_ENPCSequencerComponent_C_EndSequencer::CallFunc_IsValid_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_EndSequencer, CallFunc_SetInvalidDamage_Dummy) == 0x0001DA, "Member 'BP_ENPCSequencerComponent_C_EndSequencer::CallFunc_SetInvalidDamage_Dummy' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_EndSequencer, CallFunc_GetPlayerList_ReturnValue) == 0x0001E0, "Member 'BP_ENPCSequencerComponent_C_EndSequencer::CallFunc_GetPlayerList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_EndSequencer, CallFunc_Array_Get_Item_1) == 0x0001F0, "Member 'BP_ENPCSequencerComponent_C_EndSequencer::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_EndSequencer, K2Node_DynamicCast_AsBPI_Player_Interface_1) == 0x0001F8, "Member 'BP_ENPCSequencerComponent_C_EndSequencer::K2Node_DynamicCast_AsBPI_Player_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_EndSequencer, K2Node_DynamicCast_bSuccess_2) == 0x000208, "Member 'BP_ENPCSequencerComponent_C_EndSequencer::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_EndSequencer, K2Node_DynamicCast_AsBPI_Player_Interface_2) == 0x000210, "Member 'BP_ENPCSequencerComponent_C_EndSequencer::K2Node_DynamicCast_AsBPI_Player_Interface_2' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_EndSequencer, K2Node_DynamicCast_bSuccess_3) == 0x000220, "Member 'BP_ENPCSequencerComponent_C_EndSequencer::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_EndSequencer, CallFunc_PlayerCameraReset_Dummy_1) == 0x000221, "Member 'BP_ENPCSequencerComponent_C_EndSequencer::CallFunc_PlayerCameraReset_Dummy_1' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_EndSequencer, CallFunc_PlayerCameraReset_Dummy_2) == 0x000222, "Member 'BP_ENPCSequencerComponent_C_EndSequencer::CallFunc_PlayerCameraReset_Dummy_2' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_EndSequencer, CallFunc_IsValid_ReturnValue_10) == 0x000223, "Member 'BP_ENPCSequencerComponent_C_EndSequencer::CallFunc_IsValid_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_EndSequencer, CallFunc_K2_SetActorLocationAndRotation_SweepHitResult_1) == 0x000224, "Member 'BP_ENPCSequencerComponent_C_EndSequencer::CallFunc_K2_SetActorLocationAndRotation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_EndSequencer, CallFunc_K2_SetActorLocationAndRotation_ReturnValue_1) == 0x0002AC, "Member 'BP_ENPCSequencerComponent_C_EndSequencer::CallFunc_K2_SetActorLocationAndRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_EndSequencer, CallFunc_GetPlayerManager_PlayerManager_2) == 0x0002B0, "Member 'BP_ENPCSequencerComponent_C_EndSequencer::CallFunc_GetPlayerManager_PlayerManager_2' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_EndSequencer, CallFunc_IsValid_ReturnValue_11) == 0x0002B8, "Member 'BP_ENPCSequencerComponent_C_EndSequencer::CallFunc_IsValid_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_EndSequencer, CallFunc_GetMainPlayer_Player_1) == 0x0002C0, "Member 'BP_ENPCSequencerComponent_C_EndSequencer::CallFunc_GetMainPlayer_Player_1' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_EndSequencer, CallFunc_IsValid_ReturnValue_12) == 0x0002C8, "Member 'BP_ENPCSequencerComponent_C_EndSequencer::CallFunc_IsValid_ReturnValue_12' has a wrong offset!");

// Function BP_ENPCSequencerComponent.BP_ENPCSequencerComponent_C.Update
// 0x0310 (0x0310 - 0x0000)
struct BP_ENPCSequencerComponent_C_Update final
{
public:
	bool                                          Dummy;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_88EC[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ARSCharacterBase*>               LPlayerList;                                       // 0x0008(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	uint8                                         Pad_88ED[0x8];                                     // 0x0018(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             LCalcTrans;                                        // 0x0020(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	class ARSBattlePlayer_C*                      K2Node_DynamicCast_AsRSBattle_Player;              // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_88EE[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IPlayerInterface>      K2Node_DynamicCast_AsPlayer_Interface;             // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerID                                     CallFunc_GetPlayerID_ReturnValue;                  // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_88EF[0x5];                                     // 0x0073(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_ENpcInterface_C>  CallFunc_Em8000_GetPartner_self_CastInput;         // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_Em8000_GetPartner_PartnerActor;           // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_88F0[0x7];                                     // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       K2Node_DynamicCast_AsRSCharacter_Base;             // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_88F1[0x7];                                     // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x00B0(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_88F2[0x7];                                     // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ARSCharacterBase*>               CallFunc_GetPlayerList_ReturnValue;                // 0x00E8(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_88F3[0x4];                                     // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IRSGameModeBPInterface_C> K2Node_DynamicCast_AsRSGame_Mode_BPInterface;      // 0x0110(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_88F4[0x7];                                     // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_GetMainPlayerBP_Player;                   // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_88F5[0x7];                                     // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerInterface_C> K2Node_DynamicCast_AsBPI_Player_Interface;         // 0x0138(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0149(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_PlayerCameraReset_Dummy;                  // 0x014A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_88F6[0x5];                                     // 0x014B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_Array_Get_Item;                           // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x015C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x015D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_88F7[0x2];                                     // 0x015E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue_1;                // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_88F8[0x7];                                     // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IRSGameModeBPInterface_C> K2Node_DynamicCast_AsRSGame_Mode_BPInterface_1;    // 0x0170(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_88F9[0x7];                                     // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_GetRightPlayerBP_Player;                  // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IRSGameModeBPInterface_C> K2Node_DynamicCast_AsRSGame_Mode_BPInterface_2;    // 0x0190(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_88FA[0x7];                                     // 0x01A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_GetLeftPlayerBP_Player;                   // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x01B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_88FB[0xE];                                     // 0x01B2(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue_1;         // 0x01C0(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue_2;         // 0x01F0(0x0030)(IsPlainOldData, NoDestructor)
	TScriptInterface<class IRSGameModeBPInterface_C> K2Node_DynamicCast_AsRSGame_Mode_BPInterface_3;    // 0x0220(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_88FC[0x7];                                     // 0x0231(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_GetMainPlayerBP_Player_1;                 // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_9;                    // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_10;                   // 0x0241(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_88FD[0xE];                                     // 0x0242(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue_3;         // 0x0250(0x0030)(IsPlainOldData, NoDestructor)
	EPlayerID                                     Temp_byte_Variable;                                // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0281(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_88FE[0xE];                                     // 0x0282(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0290(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_11;                   // 0x02C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_88FF[0xF];                                     // 0x02C1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue_4;         // 0x02D0(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Update_Dummy;                             // 0x0300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ENPCSequencerComponent_C_Update) == 0x000010, "Wrong alignment on BP_ENPCSequencerComponent_C_Update");
static_assert(sizeof(BP_ENPCSequencerComponent_C_Update) == 0x000310, "Wrong size on BP_ENPCSequencerComponent_C_Update");
static_assert(offsetof(BP_ENPCSequencerComponent_C_Update, Dummy) == 0x000000, "Member 'BP_ENPCSequencerComponent_C_Update::Dummy' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_Update, LPlayerList) == 0x000008, "Member 'BP_ENPCSequencerComponent_C_Update::LPlayerList' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_Update, LCalcTrans) == 0x000020, "Member 'BP_ENPCSequencerComponent_C_Update::LCalcTrans' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_Update, K2Node_DynamicCast_AsRSBattle_Player) == 0x000050, "Member 'BP_ENPCSequencerComponent_C_Update::K2Node_DynamicCast_AsRSBattle_Player' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_Update, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'BP_ENPCSequencerComponent_C_Update::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_Update, K2Node_DynamicCast_AsPlayer_Interface) == 0x000060, "Member 'BP_ENPCSequencerComponent_C_Update::K2Node_DynamicCast_AsPlayer_Interface' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_Update, K2Node_DynamicCast_bSuccess_1) == 0x000070, "Member 'BP_ENPCSequencerComponent_C_Update::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_Update, CallFunc_IsValid_ReturnValue) == 0x000071, "Member 'BP_ENPCSequencerComponent_C_Update::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_Update, CallFunc_GetPlayerID_ReturnValue) == 0x000072, "Member 'BP_ENPCSequencerComponent_C_Update::CallFunc_GetPlayerID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_Update, CallFunc_Em8000_GetPartner_self_CastInput) == 0x000078, "Member 'BP_ENPCSequencerComponent_C_Update::CallFunc_Em8000_GetPartner_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_Update, CallFunc_Em8000_GetPartner_PartnerActor) == 0x000088, "Member 'BP_ENPCSequencerComponent_C_Update::CallFunc_Em8000_GetPartner_PartnerActor' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_Update, CallFunc_IsValid_ReturnValue_1) == 0x000090, "Member 'BP_ENPCSequencerComponent_C_Update::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_Update, K2Node_DynamicCast_AsRSCharacter_Base) == 0x000098, "Member 'BP_ENPCSequencerComponent_C_Update::K2Node_DynamicCast_AsRSCharacter_Base' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_Update, K2Node_DynamicCast_bSuccess_2) == 0x0000A0, "Member 'BP_ENPCSequencerComponent_C_Update::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_Update, CallFunc_GetPlayerManager_PlayerManager) == 0x0000A8, "Member 'BP_ENPCSequencerComponent_C_Update::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_Update, CallFunc_GetSocketTransform_ReturnValue) == 0x0000B0, "Member 'BP_ENPCSequencerComponent_C_Update::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_Update, CallFunc_IsValid_ReturnValue_2) == 0x0000E0, "Member 'BP_ENPCSequencerComponent_C_Update::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_Update, CallFunc_GetPlayerList_ReturnValue) == 0x0000E8, "Member 'BP_ENPCSequencerComponent_C_Update::CallFunc_GetPlayerList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_Update, Temp_int_Loop_Counter_Variable) == 0x0000F8, "Member 'BP_ENPCSequencerComponent_C_Update::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_Update, CallFunc_Add_IntInt_ReturnValue) == 0x0000FC, "Member 'BP_ENPCSequencerComponent_C_Update::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_Update, Temp_int_Array_Index_Variable) == 0x000100, "Member 'BP_ENPCSequencerComponent_C_Update::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_Update, CallFunc_GetGameMode_ReturnValue) == 0x000108, "Member 'BP_ENPCSequencerComponent_C_Update::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_Update, K2Node_DynamicCast_AsRSGame_Mode_BPInterface) == 0x000110, "Member 'BP_ENPCSequencerComponent_C_Update::K2Node_DynamicCast_AsRSGame_Mode_BPInterface' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_Update, K2Node_DynamicCast_bSuccess_3) == 0x000120, "Member 'BP_ENPCSequencerComponent_C_Update::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_Update, CallFunc_GetMainPlayerBP_Player) == 0x000128, "Member 'BP_ENPCSequencerComponent_C_Update::CallFunc_GetMainPlayerBP_Player' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_Update, CallFunc_IsValid_ReturnValue_3) == 0x000130, "Member 'BP_ENPCSequencerComponent_C_Update::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_Update, K2Node_DynamicCast_AsBPI_Player_Interface) == 0x000138, "Member 'BP_ENPCSequencerComponent_C_Update::K2Node_DynamicCast_AsBPI_Player_Interface' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_Update, K2Node_DynamicCast_bSuccess_4) == 0x000148, "Member 'BP_ENPCSequencerComponent_C_Update::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_Update, CallFunc_IsValid_ReturnValue_4) == 0x000149, "Member 'BP_ENPCSequencerComponent_C_Update::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_Update, CallFunc_PlayerCameraReset_Dummy) == 0x00014A, "Member 'BP_ENPCSequencerComponent_C_Update::CallFunc_PlayerCameraReset_Dummy' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_Update, CallFunc_Array_Get_Item) == 0x000150, "Member 'BP_ENPCSequencerComponent_C_Update::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_Update, CallFunc_Array_Length_ReturnValue) == 0x000158, "Member 'BP_ENPCSequencerComponent_C_Update::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_Update, CallFunc_IsValid_ReturnValue_5) == 0x00015C, "Member 'BP_ENPCSequencerComponent_C_Update::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_Update, CallFunc_Less_IntInt_ReturnValue) == 0x00015D, "Member 'BP_ENPCSequencerComponent_C_Update::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_Update, CallFunc_GetGameMode_ReturnValue_1) == 0x000160, "Member 'BP_ENPCSequencerComponent_C_Update::CallFunc_GetGameMode_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_Update, CallFunc_IsValid_ReturnValue_6) == 0x000168, "Member 'BP_ENPCSequencerComponent_C_Update::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_Update, K2Node_DynamicCast_AsRSGame_Mode_BPInterface_1) == 0x000170, "Member 'BP_ENPCSequencerComponent_C_Update::K2Node_DynamicCast_AsRSGame_Mode_BPInterface_1' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_Update, K2Node_DynamicCast_bSuccess_5) == 0x000180, "Member 'BP_ENPCSequencerComponent_C_Update::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_Update, CallFunc_GetRightPlayerBP_Player) == 0x000188, "Member 'BP_ENPCSequencerComponent_C_Update::CallFunc_GetRightPlayerBP_Player' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_Update, K2Node_DynamicCast_AsRSGame_Mode_BPInterface_2) == 0x000190, "Member 'BP_ENPCSequencerComponent_C_Update::K2Node_DynamicCast_AsRSGame_Mode_BPInterface_2' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_Update, K2Node_DynamicCast_bSuccess_6) == 0x0001A0, "Member 'BP_ENPCSequencerComponent_C_Update::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_Update, CallFunc_GetLeftPlayerBP_Player) == 0x0001A8, "Member 'BP_ENPCSequencerComponent_C_Update::CallFunc_GetLeftPlayerBP_Player' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_Update, CallFunc_IsValid_ReturnValue_7) == 0x0001B0, "Member 'BP_ENPCSequencerComponent_C_Update::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_Update, CallFunc_IsValid_ReturnValue_8) == 0x0001B1, "Member 'BP_ENPCSequencerComponent_C_Update::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_Update, CallFunc_GetSocketTransform_ReturnValue_1) == 0x0001C0, "Member 'BP_ENPCSequencerComponent_C_Update::CallFunc_GetSocketTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_Update, CallFunc_GetSocketTransform_ReturnValue_2) == 0x0001F0, "Member 'BP_ENPCSequencerComponent_C_Update::CallFunc_GetSocketTransform_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_Update, K2Node_DynamicCast_AsRSGame_Mode_BPInterface_3) == 0x000220, "Member 'BP_ENPCSequencerComponent_C_Update::K2Node_DynamicCast_AsRSGame_Mode_BPInterface_3' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_Update, K2Node_DynamicCast_bSuccess_7) == 0x000230, "Member 'BP_ENPCSequencerComponent_C_Update::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_Update, CallFunc_GetMainPlayerBP_Player_1) == 0x000238, "Member 'BP_ENPCSequencerComponent_C_Update::CallFunc_GetMainPlayerBP_Player_1' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_Update, CallFunc_IsValid_ReturnValue_9) == 0x000240, "Member 'BP_ENPCSequencerComponent_C_Update::CallFunc_IsValid_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_Update, CallFunc_IsValid_ReturnValue_10) == 0x000241, "Member 'BP_ENPCSequencerComponent_C_Update::CallFunc_IsValid_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_Update, CallFunc_GetSocketTransform_ReturnValue_3) == 0x000250, "Member 'BP_ENPCSequencerComponent_C_Update::CallFunc_GetSocketTransform_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_Update, Temp_byte_Variable) == 0x000280, "Member 'BP_ENPCSequencerComponent_C_Update::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_Update, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000281, "Member 'BP_ENPCSequencerComponent_C_Update::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_Update, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000290, "Member 'BP_ENPCSequencerComponent_C_Update::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_Update, CallFunc_IsValid_ReturnValue_11) == 0x0002C0, "Member 'BP_ENPCSequencerComponent_C_Update::CallFunc_IsValid_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_Update, CallFunc_GetSocketTransform_ReturnValue_4) == 0x0002D0, "Member 'BP_ENPCSequencerComponent_C_Update::CallFunc_GetSocketTransform_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_Update, CallFunc_Update_Dummy) == 0x000300, "Member 'BP_ENPCSequencerComponent_C_Update::CallFunc_Update_Dummy' has a wrong offset!");

// Function BP_ENPCSequencerComponent.BP_ENPCSequencerComponent_C.Initialize
// 0x0210 (0x0210 - 0x0000)
struct BP_ENPCSequencerComponent_C_Initialize final
{
public:
	bool                                          Dummy;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8900[0xF];                                     // 0x0001(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0010(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x0040(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1; // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_co0100_C*                           CallFunc_FinishSpawningActor_ReturnValue;          // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_SeamlessCameraRoot_C*               CallFunc_FinishSpawningActor_ReturnValue_1;        // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_2;              // 0x0090(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_3;              // 0x00C0(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_2; // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_3; // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACameraActor*                           CallFunc_FinishSpawningActor_ReturnValue_2;        // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_co0101_C*                           CallFunc_FinishSpawningActor_ReturnValue_3;        // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_4;              // 0x0110(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_5;              // 0x0140(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_4; // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_5; // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_FinishSpawningActor_ReturnValue_4;        // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_EventCameraRoot_C*                  CallFunc_FinishSpawningActor_ReturnValue_5;        // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_6;              // 0x0190(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_6; // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8901[0x7];                                     // 0x01C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACineCameraActor*                       CallFunc_FinishSpawningActor_ReturnValue_6;        // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_1;            // 0x01DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x01DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8902[0x2];                                     // 0x01DE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_2;            // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x01E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8903[0x2];                                     // 0x01EA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_1;         // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x01F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x01F3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Variable_1;                               // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8904[0x3];                                     // 0x01F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_3;            // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0201(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0202(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_4;            // 0x0203(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_5;            // 0x0204(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Initialize_dummy;                         // 0x0205(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ENPCSequencerComponent_C_Initialize) == 0x000010, "Wrong alignment on BP_ENPCSequencerComponent_C_Initialize");
static_assert(sizeof(BP_ENPCSequencerComponent_C_Initialize) == 0x000210, "Wrong size on BP_ENPCSequencerComponent_C_Initialize");
static_assert(offsetof(BP_ENPCSequencerComponent_C_Initialize, Dummy) == 0x000000, "Member 'BP_ENPCSequencerComponent_C_Initialize::Dummy' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_Initialize, CallFunc_MakeTransform_ReturnValue) == 0x000010, "Member 'BP_ENPCSequencerComponent_C_Initialize::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_Initialize, CallFunc_MakeTransform_ReturnValue_1) == 0x000040, "Member 'BP_ENPCSequencerComponent_C_Initialize::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_Initialize, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000070, "Member 'BP_ENPCSequencerComponent_C_Initialize::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_Initialize, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1) == 0x000078, "Member 'BP_ENPCSequencerComponent_C_Initialize::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_Initialize, CallFunc_FinishSpawningActor_ReturnValue) == 0x000080, "Member 'BP_ENPCSequencerComponent_C_Initialize::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_Initialize, CallFunc_FinishSpawningActor_ReturnValue_1) == 0x000088, "Member 'BP_ENPCSequencerComponent_C_Initialize::CallFunc_FinishSpawningActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_Initialize, CallFunc_MakeTransform_ReturnValue_2) == 0x000090, "Member 'BP_ENPCSequencerComponent_C_Initialize::CallFunc_MakeTransform_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_Initialize, CallFunc_MakeTransform_ReturnValue_3) == 0x0000C0, "Member 'BP_ENPCSequencerComponent_C_Initialize::CallFunc_MakeTransform_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_Initialize, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_2) == 0x0000F0, "Member 'BP_ENPCSequencerComponent_C_Initialize::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_Initialize, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_3) == 0x0000F8, "Member 'BP_ENPCSequencerComponent_C_Initialize::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_Initialize, CallFunc_FinishSpawningActor_ReturnValue_2) == 0x000100, "Member 'BP_ENPCSequencerComponent_C_Initialize::CallFunc_FinishSpawningActor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_Initialize, CallFunc_FinishSpawningActor_ReturnValue_3) == 0x000108, "Member 'BP_ENPCSequencerComponent_C_Initialize::CallFunc_FinishSpawningActor_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_Initialize, CallFunc_MakeTransform_ReturnValue_4) == 0x000110, "Member 'BP_ENPCSequencerComponent_C_Initialize::CallFunc_MakeTransform_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_Initialize, CallFunc_MakeTransform_ReturnValue_5) == 0x000140, "Member 'BP_ENPCSequencerComponent_C_Initialize::CallFunc_MakeTransform_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_Initialize, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_4) == 0x000170, "Member 'BP_ENPCSequencerComponent_C_Initialize::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_Initialize, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_5) == 0x000178, "Member 'BP_ENPCSequencerComponent_C_Initialize::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_Initialize, CallFunc_FinishSpawningActor_ReturnValue_4) == 0x000180, "Member 'BP_ENPCSequencerComponent_C_Initialize::CallFunc_FinishSpawningActor_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_Initialize, CallFunc_FinishSpawningActor_ReturnValue_5) == 0x000188, "Member 'BP_ENPCSequencerComponent_C_Initialize::CallFunc_FinishSpawningActor_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_Initialize, CallFunc_MakeTransform_ReturnValue_6) == 0x000190, "Member 'BP_ENPCSequencerComponent_C_Initialize::CallFunc_MakeTransform_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_Initialize, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_6) == 0x0001C0, "Member 'BP_ENPCSequencerComponent_C_Initialize::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_Initialize, CallFunc_MakeLiteralByte_ReturnValue) == 0x0001C8, "Member 'BP_ENPCSequencerComponent_C_Initialize::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_Initialize, CallFunc_FinishSpawningActor_ReturnValue_6) == 0x0001D0, "Member 'BP_ENPCSequencerComponent_C_Initialize::CallFunc_FinishSpawningActor_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_Initialize, Temp_int_Variable) == 0x0001D8, "Member 'BP_ENPCSequencerComponent_C_Initialize::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_Initialize, CallFunc_MakeLiteralByte_ReturnValue_1) == 0x0001DC, "Member 'BP_ENPCSequencerComponent_C_Initialize::CallFunc_MakeLiteralByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_Initialize, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0001DD, "Member 'BP_ENPCSequencerComponent_C_Initialize::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_Initialize, CallFunc_Add_IntInt_ReturnValue) == 0x0001E0, "Member 'BP_ENPCSequencerComponent_C_Initialize::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_Initialize, CallFunc_Array_Add_ReturnValue) == 0x0001E4, "Member 'BP_ENPCSequencerComponent_C_Initialize::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_Initialize, CallFunc_MakeLiteralByte_ReturnValue_2) == 0x0001E8, "Member 'BP_ENPCSequencerComponent_C_Initialize::CallFunc_MakeLiteralByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_Initialize, CallFunc_Array_IsValidIndex_ReturnValue) == 0x0001E9, "Member 'BP_ENPCSequencerComponent_C_Initialize::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_Initialize, CallFunc_Array_Add_ReturnValue_1) == 0x0001EC, "Member 'BP_ENPCSequencerComponent_C_Initialize::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_Initialize, CallFunc_Array_IsValidIndex_ReturnValue_1) == 0x0001F0, "Member 'BP_ENPCSequencerComponent_C_Initialize::CallFunc_Array_IsValidIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_Initialize, CallFunc_IsValid_ReturnValue) == 0x0001F1, "Member 'BP_ENPCSequencerComponent_C_Initialize::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_Initialize, CallFunc_IsValid_ReturnValue_1) == 0x0001F2, "Member 'BP_ENPCSequencerComponent_C_Initialize::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_Initialize, CallFunc_IsValid_ReturnValue_2) == 0x0001F3, "Member 'BP_ENPCSequencerComponent_C_Initialize::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_Initialize, Temp_int_Variable_1) == 0x0001F4, "Member 'BP_ENPCSequencerComponent_C_Initialize::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_Initialize, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x0001F8, "Member 'BP_ENPCSequencerComponent_C_Initialize::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_Initialize, CallFunc_Add_IntInt_ReturnValue_1) == 0x0001FC, "Member 'BP_ENPCSequencerComponent_C_Initialize::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_Initialize, CallFunc_MakeLiteralByte_ReturnValue_3) == 0x000200, "Member 'BP_ENPCSequencerComponent_C_Initialize::CallFunc_MakeLiteralByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_Initialize, CallFunc_IsValid_ReturnValue_3) == 0x000201, "Member 'BP_ENPCSequencerComponent_C_Initialize::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_Initialize, CallFunc_IsValid_ReturnValue_4) == 0x000202, "Member 'BP_ENPCSequencerComponent_C_Initialize::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_Initialize, CallFunc_MakeLiteralByte_ReturnValue_4) == 0x000203, "Member 'BP_ENPCSequencerComponent_C_Initialize::CallFunc_MakeLiteralByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_Initialize, CallFunc_MakeLiteralByte_ReturnValue_5) == 0x000204, "Member 'BP_ENPCSequencerComponent_C_Initialize::CallFunc_MakeLiteralByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_Initialize, CallFunc_Initialize_dummy) == 0x000205, "Member 'BP_ENPCSequencerComponent_C_Initialize::CallFunc_Initialize_dummy' has a wrong offset!");

// Function BP_ENPCSequencerComponent.BP_ENPCSequencerComponent_C.StartSequnecer
// 0x02E0 (0x02E0 - 0x0000)
struct BP_ENPCSequencerComponent_C_StartSequnecer final
{
public:
	int32                                         Index_in;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Dummy;                                             // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8905[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ARSCharacterBase*>               LPlayerList;                                       // 0x0008(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	bool                                          LReturn;                                           // 0x0018(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8906[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         L_CorrectionX;                                     // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ARSCharacterBase*>               L_playerList;                                      // 0x0020(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0030(0x0040)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_StartSequnecer_dummy;                     // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8907[0x2];                                     // 0x0072(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_EnemyManager_C*                     CallFunc_GetEnemyManager_Manager;                  // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8908[0x7];                                     // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABattleSimulatorManager*                CallFunc_GetBattleSimulatorManager_BattleSimulatorManager; // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMissionActive_ReturnValue;              // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8909[0x5];                                     // 0x009B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_Array_Get_Item;                           // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_890A[0x2];                                     // 0x00AE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_890B[0x7];                                     // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_ENpcInterface_C>  K2Node_DynamicCast_AsBPI_ENpc_Interface;           // 0x00C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_PostStartSequencerEnpc_Return;            // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x00D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_890C[0x5];                                     // 0x00D3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABattleSimulatorManager*                CallFunc_GetBattleSimulatorManager_BattleSimulatorManager_1; // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_ENpcInterface_C>  K2Node_DynamicCast_AsBPI_ENpc_Interface_1;         // 0x00E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_PreStartSequencerEnpc_Return;             // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x00FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_890D[0x5];                                     // 0x00FB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_2;                   // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHUDMainGame_C*                         CallFunc_GetHUDMainGame_HUDMainGame;               // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue;            // 0x0110(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0128(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0168(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_890E[0x7];                                     // 0x0179(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0180(0x0018)()
	uint8                                         Pad_890F[0x8];                                     // 0x0198(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x01A0(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_3;                   // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_ENpcInterface_C>  K2Node_DynamicCast_AsBPI_ENpc_Interface_2;         // 0x01E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8910[0x7];                                     // 0x01F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SeamlessCameraRoot_C*               CallFunc_FinishSpawningActor_ReturnValue;          // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Em8000_GetPartner_PartnerActor;           // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_PlayerInterface_C> K2Node_DynamicCast_AsBPI_Player_Interface;         // 0x0208(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x0219(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8911[0x6];                                     // 0x021A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_ENpcComponent_C*                    CallFunc_GetEnpcComp_ReturnComp;                   // 0x0220(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_9;                    // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8912[0x7];                                     // 0x0229(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IPlayerInterface>      K2Node_DynamicCast_AsPlayer_Interface;             // 0x0230(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerID                                     Temp_byte_Variable;                                // 0x0241(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerID                                     CallFunc_GetPlayerID_ReturnValue;                  // 0x0242(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0243(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8913[0x4];                                     // 0x0244(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_4;                   // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_ENpcInterface_C>  K2Node_DynamicCast_AsBPI_ENpc_Interface_3;         // 0x0258(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_10;                   // 0x0269(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8914[0x6];                                     // 0x026A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattlePlayer_C*                      CallFunc_GetMainPlayer_Player;                     // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_PlayerInterface_C> K2Node_DynamicCast_AsBPI_Player_Interface_1;       // 0x0278(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_11;                   // 0x0289(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8915[0x6];                                     // 0x028A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_ENpcComponent_C*                    CallFunc_GetEnpcComp_ReturnComp_1;                 // 0x0290(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_12;                   // 0x0298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_13;                   // 0x0299(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_14;                   // 0x029A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x029B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8916[0x4];                                     // 0x029C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager_1;         // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_15;                   // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8917[0x7];                                     // 0x02A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ARSCharacterBase*>               CallFunc_GetPlayerList_ReturnValue;                // 0x02B0(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x02C0(0x0010)(ZeroConstructor, NoDestructor)
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue;            // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_16;                   // 0x02D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ENPCSequencerComponent_C_StartSequnecer) == 0x000010, "Wrong alignment on BP_ENPCSequencerComponent_C_StartSequnecer");
static_assert(sizeof(BP_ENPCSequencerComponent_C_StartSequnecer) == 0x0002E0, "Wrong size on BP_ENPCSequencerComponent_C_StartSequnecer");
static_assert(offsetof(BP_ENPCSequencerComponent_C_StartSequnecer, Index_in) == 0x000000, "Member 'BP_ENPCSequencerComponent_C_StartSequnecer::Index_in' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_StartSequnecer, Dummy) == 0x000004, "Member 'BP_ENPCSequencerComponent_C_StartSequnecer::Dummy' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_StartSequnecer, LPlayerList) == 0x000008, "Member 'BP_ENPCSequencerComponent_C_StartSequnecer::LPlayerList' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_StartSequnecer, LReturn) == 0x000018, "Member 'BP_ENPCSequencerComponent_C_StartSequnecer::LReturn' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_StartSequnecer, L_CorrectionX) == 0x00001C, "Member 'BP_ENPCSequencerComponent_C_StartSequnecer::L_CorrectionX' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_StartSequnecer, L_playerList) == 0x000020, "Member 'BP_ENPCSequencerComponent_C_StartSequnecer::L_playerList' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_StartSequnecer, K2Node_MakeStruct_FormatArgumentData) == 0x000030, "Member 'BP_ENPCSequencerComponent_C_StartSequnecer::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_StartSequnecer, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000070, "Member 'BP_ENPCSequencerComponent_C_StartSequnecer::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_StartSequnecer, CallFunc_StartSequnecer_dummy) == 0x000071, "Member 'BP_ENPCSequencerComponent_C_StartSequnecer::CallFunc_StartSequnecer_dummy' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_StartSequnecer, Temp_int_Loop_Counter_Variable) == 0x000074, "Member 'BP_ENPCSequencerComponent_C_StartSequnecer::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_StartSequnecer, CallFunc_Add_IntInt_ReturnValue) == 0x000078, "Member 'BP_ENPCSequencerComponent_C_StartSequnecer::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_StartSequnecer, Temp_int_Array_Index_Variable) == 0x00007C, "Member 'BP_ENPCSequencerComponent_C_StartSequnecer::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_StartSequnecer, CallFunc_GetEnemyManager_Manager) == 0x000080, "Member 'BP_ENPCSequencerComponent_C_StartSequnecer::CallFunc_GetEnemyManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_StartSequnecer, CallFunc_IsValid_ReturnValue) == 0x000088, "Member 'BP_ENPCSequencerComponent_C_StartSequnecer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_StartSequnecer, CallFunc_GetBattleSimulatorManager_BattleSimulatorManager) == 0x000090, "Member 'BP_ENPCSequencerComponent_C_StartSequnecer::CallFunc_GetBattleSimulatorManager_BattleSimulatorManager' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_StartSequnecer, CallFunc_IsValid_ReturnValue_1) == 0x000098, "Member 'BP_ENPCSequencerComponent_C_StartSequnecer::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_StartSequnecer, CallFunc_IsValid_ReturnValue_2) == 0x000099, "Member 'BP_ENPCSequencerComponent_C_StartSequnecer::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_StartSequnecer, CallFunc_IsMissionActive_ReturnValue) == 0x00009A, "Member 'BP_ENPCSequencerComponent_C_StartSequnecer::CallFunc_IsMissionActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_StartSequnecer, CallFunc_Array_Get_Item) == 0x0000A0, "Member 'BP_ENPCSequencerComponent_C_StartSequnecer::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_StartSequnecer, CallFunc_Array_Length_ReturnValue) == 0x0000A8, "Member 'BP_ENPCSequencerComponent_C_StartSequnecer::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_StartSequnecer, CallFunc_IsValid_ReturnValue_3) == 0x0000AC, "Member 'BP_ENPCSequencerComponent_C_StartSequnecer::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_StartSequnecer, CallFunc_Less_IntInt_ReturnValue) == 0x0000AD, "Member 'BP_ENPCSequencerComponent_C_StartSequnecer::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_StartSequnecer, CallFunc_GetOwner_ReturnValue) == 0x0000B0, "Member 'BP_ENPCSequencerComponent_C_StartSequnecer::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_StartSequnecer, CallFunc_IsValid_ReturnValue_4) == 0x0000B8, "Member 'BP_ENPCSequencerComponent_C_StartSequnecer::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_StartSequnecer, K2Node_DynamicCast_AsBPI_ENpc_Interface) == 0x0000C0, "Member 'BP_ENPCSequencerComponent_C_StartSequnecer::K2Node_DynamicCast_AsBPI_ENpc_Interface' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_StartSequnecer, K2Node_DynamicCast_bSuccess) == 0x0000D0, "Member 'BP_ENPCSequencerComponent_C_StartSequnecer::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_StartSequnecer, CallFunc_PostStartSequencerEnpc_Return) == 0x0000D1, "Member 'BP_ENPCSequencerComponent_C_StartSequnecer::CallFunc_PostStartSequencerEnpc_Return' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_StartSequnecer, CallFunc_IsValid_ReturnValue_5) == 0x0000D2, "Member 'BP_ENPCSequencerComponent_C_StartSequnecer::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_StartSequnecer, CallFunc_GetOwner_ReturnValue_1) == 0x0000D8, "Member 'BP_ENPCSequencerComponent_C_StartSequnecer::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_StartSequnecer, CallFunc_GetBattleSimulatorManager_BattleSimulatorManager_1) == 0x0000E0, "Member 'BP_ENPCSequencerComponent_C_StartSequnecer::CallFunc_GetBattleSimulatorManager_BattleSimulatorManager_1' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_StartSequnecer, K2Node_DynamicCast_AsBPI_ENpc_Interface_1) == 0x0000E8, "Member 'BP_ENPCSequencerComponent_C_StartSequnecer::K2Node_DynamicCast_AsBPI_ENpc_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_StartSequnecer, K2Node_DynamicCast_bSuccess_1) == 0x0000F8, "Member 'BP_ENPCSequencerComponent_C_StartSequnecer::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_StartSequnecer, CallFunc_PreStartSequencerEnpc_Return) == 0x0000F9, "Member 'BP_ENPCSequencerComponent_C_StartSequnecer::CallFunc_PreStartSequencerEnpc_Return' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_StartSequnecer, CallFunc_IsValid_ReturnValue_6) == 0x0000FA, "Member 'BP_ENPCSequencerComponent_C_StartSequnecer::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_StartSequnecer, CallFunc_GetOwner_ReturnValue_2) == 0x000100, "Member 'BP_ENPCSequencerComponent_C_StartSequnecer::CallFunc_GetOwner_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_StartSequnecer, CallFunc_GetHUDMainGame_HUDMainGame) == 0x000108, "Member 'BP_ENPCSequencerComponent_C_StartSequnecer::CallFunc_GetHUDMainGame_HUDMainGame' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_StartSequnecer, CallFunc_Conv_ObjectToText_ReturnValue) == 0x000110, "Member 'BP_ENPCSequencerComponent_C_StartSequnecer::CallFunc_Conv_ObjectToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_StartSequnecer, K2Node_MakeStruct_FormatArgumentData_1) == 0x000128, "Member 'BP_ENPCSequencerComponent_C_StartSequnecer::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_StartSequnecer, K2Node_MakeArray_Array) == 0x000168, "Member 'BP_ENPCSequencerComponent_C_StartSequnecer::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_StartSequnecer, CallFunc_IsValid_ReturnValue_7) == 0x000178, "Member 'BP_ENPCSequencerComponent_C_StartSequnecer::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_StartSequnecer, CallFunc_Format_ReturnValue) == 0x000180, "Member 'BP_ENPCSequencerComponent_C_StartSequnecer::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_StartSequnecer, CallFunc_MakeTransform_ReturnValue) == 0x0001A0, "Member 'BP_ENPCSequencerComponent_C_StartSequnecer::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_StartSequnecer, CallFunc_GetOwner_ReturnValue_3) == 0x0001D0, "Member 'BP_ENPCSequencerComponent_C_StartSequnecer::CallFunc_GetOwner_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_StartSequnecer, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0001D8, "Member 'BP_ENPCSequencerComponent_C_StartSequnecer::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_StartSequnecer, K2Node_DynamicCast_AsBPI_ENpc_Interface_2) == 0x0001E0, "Member 'BP_ENPCSequencerComponent_C_StartSequnecer::K2Node_DynamicCast_AsBPI_ENpc_Interface_2' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_StartSequnecer, K2Node_DynamicCast_bSuccess_2) == 0x0001F0, "Member 'BP_ENPCSequencerComponent_C_StartSequnecer::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_StartSequnecer, CallFunc_FinishSpawningActor_ReturnValue) == 0x0001F8, "Member 'BP_ENPCSequencerComponent_C_StartSequnecer::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_StartSequnecer, CallFunc_Em8000_GetPartner_PartnerActor) == 0x000200, "Member 'BP_ENPCSequencerComponent_C_StartSequnecer::CallFunc_Em8000_GetPartner_PartnerActor' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_StartSequnecer, K2Node_DynamicCast_AsBPI_Player_Interface) == 0x000208, "Member 'BP_ENPCSequencerComponent_C_StartSequnecer::K2Node_DynamicCast_AsBPI_Player_Interface' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_StartSequnecer, K2Node_DynamicCast_bSuccess_3) == 0x000218, "Member 'BP_ENPCSequencerComponent_C_StartSequnecer::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_StartSequnecer, CallFunc_IsValid_ReturnValue_8) == 0x000219, "Member 'BP_ENPCSequencerComponent_C_StartSequnecer::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_StartSequnecer, CallFunc_GetEnpcComp_ReturnComp) == 0x000220, "Member 'BP_ENPCSequencerComponent_C_StartSequnecer::CallFunc_GetEnpcComp_ReturnComp' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_StartSequnecer, CallFunc_IsValid_ReturnValue_9) == 0x000228, "Member 'BP_ENPCSequencerComponent_C_StartSequnecer::CallFunc_IsValid_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_StartSequnecer, K2Node_DynamicCast_AsPlayer_Interface) == 0x000230, "Member 'BP_ENPCSequencerComponent_C_StartSequnecer::K2Node_DynamicCast_AsPlayer_Interface' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_StartSequnecer, K2Node_DynamicCast_bSuccess_4) == 0x000240, "Member 'BP_ENPCSequencerComponent_C_StartSequnecer::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_StartSequnecer, Temp_byte_Variable) == 0x000241, "Member 'BP_ENPCSequencerComponent_C_StartSequnecer::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_StartSequnecer, CallFunc_GetPlayerID_ReturnValue) == 0x000242, "Member 'BP_ENPCSequencerComponent_C_StartSequnecer::CallFunc_GetPlayerID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_StartSequnecer, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000243, "Member 'BP_ENPCSequencerComponent_C_StartSequnecer::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_StartSequnecer, CallFunc_GetOwner_ReturnValue_4) == 0x000248, "Member 'BP_ENPCSequencerComponent_C_StartSequnecer::CallFunc_GetOwner_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_StartSequnecer, CallFunc_GetPlayerManager_PlayerManager) == 0x000250, "Member 'BP_ENPCSequencerComponent_C_StartSequnecer::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_StartSequnecer, K2Node_DynamicCast_AsBPI_ENpc_Interface_3) == 0x000258, "Member 'BP_ENPCSequencerComponent_C_StartSequnecer::K2Node_DynamicCast_AsBPI_ENpc_Interface_3' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_StartSequnecer, K2Node_DynamicCast_bSuccess_5) == 0x000268, "Member 'BP_ENPCSequencerComponent_C_StartSequnecer::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_StartSequnecer, CallFunc_IsValid_ReturnValue_10) == 0x000269, "Member 'BP_ENPCSequencerComponent_C_StartSequnecer::CallFunc_IsValid_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_StartSequnecer, CallFunc_GetMainPlayer_Player) == 0x000270, "Member 'BP_ENPCSequencerComponent_C_StartSequnecer::CallFunc_GetMainPlayer_Player' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_StartSequnecer, K2Node_DynamicCast_AsBPI_Player_Interface_1) == 0x000278, "Member 'BP_ENPCSequencerComponent_C_StartSequnecer::K2Node_DynamicCast_AsBPI_Player_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_StartSequnecer, K2Node_DynamicCast_bSuccess_6) == 0x000288, "Member 'BP_ENPCSequencerComponent_C_StartSequnecer::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_StartSequnecer, CallFunc_IsValid_ReturnValue_11) == 0x000289, "Member 'BP_ENPCSequencerComponent_C_StartSequnecer::CallFunc_IsValid_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_StartSequnecer, CallFunc_GetEnpcComp_ReturnComp_1) == 0x000290, "Member 'BP_ENPCSequencerComponent_C_StartSequnecer::CallFunc_GetEnpcComp_ReturnComp_1' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_StartSequnecer, CallFunc_IsValid_ReturnValue_12) == 0x000298, "Member 'BP_ENPCSequencerComponent_C_StartSequnecer::CallFunc_IsValid_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_StartSequnecer, CallFunc_IsValid_ReturnValue_13) == 0x000299, "Member 'BP_ENPCSequencerComponent_C_StartSequnecer::CallFunc_IsValid_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_StartSequnecer, CallFunc_IsValid_ReturnValue_14) == 0x00029A, "Member 'BP_ENPCSequencerComponent_C_StartSequnecer::CallFunc_IsValid_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_StartSequnecer, CallFunc_MakeLiteralByte_ReturnValue) == 0x00029B, "Member 'BP_ENPCSequencerComponent_C_StartSequnecer::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_StartSequnecer, CallFunc_GetPlayerManager_PlayerManager_1) == 0x0002A0, "Member 'BP_ENPCSequencerComponent_C_StartSequnecer::CallFunc_GetPlayerManager_PlayerManager_1' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_StartSequnecer, CallFunc_IsValid_ReturnValue_15) == 0x0002A8, "Member 'BP_ENPCSequencerComponent_C_StartSequnecer::CallFunc_IsValid_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_StartSequnecer, CallFunc_GetPlayerList_ReturnValue) == 0x0002B0, "Member 'BP_ENPCSequencerComponent_C_StartSequnecer::CallFunc_GetPlayerList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_StartSequnecer, K2Node_CreateDelegate_OutputDelegate) == 0x0002C0, "Member 'BP_ENPCSequencerComponent_C_StartSequnecer::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_StartSequnecer, CallFunc_GetSequencePlayer_ReturnValue) == 0x0002D0, "Member 'BP_ENPCSequencerComponent_C_StartSequnecer::CallFunc_GetSequencePlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_StartSequnecer, CallFunc_IsValid_ReturnValue_16) == 0x0002D8, "Member 'BP_ENPCSequencerComponent_C_StartSequnecer::CallFunc_IsValid_ReturnValue_16' has a wrong offset!");

// Function BP_ENPCSequencerComponent.BP_ENPCSequencerComponent_C.PlaySequencer
// 0x0230 (0x0230 - 0x0000)
struct BP_ENPCSequencerComponent_C_PlaySequencer final
{
public:
	bool                                          Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8918[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   LTmpCodeBindingName;                               // 0x0008(0x0018)(Edit, BlueprintVisible)
	TArray<class FText>                           LTmpBindingNames;                                  // 0x0020(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<class ABP_CableBase_C*>                LBrainCodeList;                                    // 0x0030(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	class FText                                   IndexText;                                         // 0x0040(0x0018)(Edit, BlueprintVisible)
	class ABP_CableBase_C*                        LCode;                                             // 0x0058(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_CableBase_C*>                LSasCodeList;                                      // 0x0060(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	TArray<class FText>                           LBindingSuffix;                                    // 0x0070(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<class FText>                           LBindingCodeTextPrefix;                            // 0x0080(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<class FText>                           LBindingCodeNames;                                 // 0x0090(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	bool                                          LReturn;                                           // 0x00A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerID                                     Temp_byte_Variable;                                // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8919[0x6];                                     // 0x00A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FText>                           K2Node_MakeArray_Array;                            // 0x00A8(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_891A[0x6];                                     // 0x00BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IRSGameModeBPInterface_C> K2Node_DynamicCast_AsRSGame_Mode_BPInterface;      // 0x00C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_891B[0x7];                                     // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_GetMainPlayerBP_Player;                   // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_891C[0x6];                                     // 0x00EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetRelativeTransform_ReturnValue;         // 0x00F0(0x0030)(IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_4;                  // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_891D[0x4];                                     // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue_1;                // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IRSGameModeBPInterface_C> K2Node_DynamicCast_AsRSGame_Mode_BPInterface_1;    // 0x0140(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_891E[0x7];                                     // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IRSGameModeBPInterface_C> K2Node_DynamicCast_AsRSGame_Mode_BPInterface_2;    // 0x0158(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_891F[0x7];                                     // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_GetRightPlayerBP_Player;                  // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSCharacterBase*                       CallFunc_GetLeftPlayerBP_Player;                   // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8920[0x3];                                     // 0x0181(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_5;                  // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8921[0x3];                                     // 0x0189(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_6;                  // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IRSGameModeBPInterface_C> K2Node_DynamicCast_AsRSGame_Mode_BPInterface_3;    // 0x0190(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8922[0x7];                                     // 0x01A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue_2;                // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSCharacterBase*                       CallFunc_GetMainPlayerBP_Player_1;                 // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x01B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8923[0x2];                                     // 0x01BA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_7;                  // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetInvalidDamage_Dummy;                   // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8924[0x7];                                     // 0x01C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IPlayerInterface>      K2Node_DynamicCast_AsPlayer_Interface;             // 0x01D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8925[0x7];                                     // 0x01E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattlePlayer_C*                      K2Node_DynamicCast_AsRSBattle_Player;              // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerID                                     CallFunc_GetPlayerID_ReturnValue;                  // 0x01F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x01F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8926[0x5];                                     // 0x01F3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_ENpcInterface_C>  CallFunc_Em8000_GetPartner_self_CastInput;         // 0x01F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_Em8000_GetPartner_PartnerActor;           // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_PlaySequencer_return;                     // 0x0211(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8927[0x2];                                     // 0x0212(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_8;                  // 0x0214(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_9;                  // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_10;                 // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_11;                 // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ENPCSequencerComponent_C_PlaySequencer) == 0x000010, "Wrong alignment on BP_ENPCSequencerComponent_C_PlaySequencer");
static_assert(sizeof(BP_ENPCSequencerComponent_C_PlaySequencer) == 0x000230, "Wrong size on BP_ENPCSequencerComponent_C_PlaySequencer");
static_assert(offsetof(BP_ENPCSequencerComponent_C_PlaySequencer, Return) == 0x000000, "Member 'BP_ENPCSequencerComponent_C_PlaySequencer::Return' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_PlaySequencer, LTmpCodeBindingName) == 0x000008, "Member 'BP_ENPCSequencerComponent_C_PlaySequencer::LTmpCodeBindingName' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_PlaySequencer, LTmpBindingNames) == 0x000020, "Member 'BP_ENPCSequencerComponent_C_PlaySequencer::LTmpBindingNames' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_PlaySequencer, LBrainCodeList) == 0x000030, "Member 'BP_ENPCSequencerComponent_C_PlaySequencer::LBrainCodeList' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_PlaySequencer, IndexText) == 0x000040, "Member 'BP_ENPCSequencerComponent_C_PlaySequencer::IndexText' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_PlaySequencer, LCode) == 0x000058, "Member 'BP_ENPCSequencerComponent_C_PlaySequencer::LCode' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_PlaySequencer, LSasCodeList) == 0x000060, "Member 'BP_ENPCSequencerComponent_C_PlaySequencer::LSasCodeList' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_PlaySequencer, LBindingSuffix) == 0x000070, "Member 'BP_ENPCSequencerComponent_C_PlaySequencer::LBindingSuffix' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_PlaySequencer, LBindingCodeTextPrefix) == 0x000080, "Member 'BP_ENPCSequencerComponent_C_PlaySequencer::LBindingCodeTextPrefix' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_PlaySequencer, LBindingCodeNames) == 0x000090, "Member 'BP_ENPCSequencerComponent_C_PlaySequencer::LBindingCodeNames' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_PlaySequencer, LReturn) == 0x0000A0, "Member 'BP_ENPCSequencerComponent_C_PlaySequencer::LReturn' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_PlaySequencer, Temp_byte_Variable) == 0x0000A1, "Member 'BP_ENPCSequencerComponent_C_PlaySequencer::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_PlaySequencer, K2Node_MakeArray_Array) == 0x0000A8, "Member 'BP_ENPCSequencerComponent_C_PlaySequencer::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_PlaySequencer, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000B8, "Member 'BP_ENPCSequencerComponent_C_PlaySequencer::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_PlaySequencer, CallFunc_Array_IsValidIndex_ReturnValue) == 0x0000B9, "Member 'BP_ENPCSequencerComponent_C_PlaySequencer::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_PlaySequencer, CallFunc_GetGameMode_ReturnValue) == 0x0000C0, "Member 'BP_ENPCSequencerComponent_C_PlaySequencer::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_PlaySequencer, K2Node_DynamicCast_AsRSGame_Mode_BPInterface) == 0x0000C8, "Member 'BP_ENPCSequencerComponent_C_PlaySequencer::K2Node_DynamicCast_AsRSGame_Mode_BPInterface' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_PlaySequencer, K2Node_DynamicCast_bSuccess) == 0x0000D8, "Member 'BP_ENPCSequencerComponent_C_PlaySequencer::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_PlaySequencer, CallFunc_GetMainPlayerBP_Player) == 0x0000E0, "Member 'BP_ENPCSequencerComponent_C_PlaySequencer::CallFunc_GetMainPlayerBP_Player' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_PlaySequencer, CallFunc_IsValid_ReturnValue) == 0x0000E8, "Member 'BP_ENPCSequencerComponent_C_PlaySequencer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_PlaySequencer, CallFunc_IsValid_ReturnValue_1) == 0x0000E9, "Member 'BP_ENPCSequencerComponent_C_PlaySequencer::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_PlaySequencer, CallFunc_GetRelativeTransform_ReturnValue) == 0x0000F0, "Member 'BP_ENPCSequencerComponent_C_PlaySequencer::CallFunc_GetRelativeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_PlaySequencer, CallFunc_Array_Add_ReturnValue) == 0x000120, "Member 'BP_ENPCSequencerComponent_C_PlaySequencer::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_PlaySequencer, CallFunc_Array_Add_ReturnValue_1) == 0x000124, "Member 'BP_ENPCSequencerComponent_C_PlaySequencer::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_PlaySequencer, CallFunc_Array_Add_ReturnValue_2) == 0x000128, "Member 'BP_ENPCSequencerComponent_C_PlaySequencer::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_PlaySequencer, CallFunc_Array_Add_ReturnValue_3) == 0x00012C, "Member 'BP_ENPCSequencerComponent_C_PlaySequencer::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_PlaySequencer, CallFunc_Array_Add_ReturnValue_4) == 0x000130, "Member 'BP_ENPCSequencerComponent_C_PlaySequencer::CallFunc_Array_Add_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_PlaySequencer, CallFunc_GetGameMode_ReturnValue_1) == 0x000138, "Member 'BP_ENPCSequencerComponent_C_PlaySequencer::CallFunc_GetGameMode_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_PlaySequencer, K2Node_DynamicCast_AsRSGame_Mode_BPInterface_1) == 0x000140, "Member 'BP_ENPCSequencerComponent_C_PlaySequencer::K2Node_DynamicCast_AsRSGame_Mode_BPInterface_1' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_PlaySequencer, K2Node_DynamicCast_bSuccess_1) == 0x000150, "Member 'BP_ENPCSequencerComponent_C_PlaySequencer::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_PlaySequencer, K2Node_DynamicCast_AsRSGame_Mode_BPInterface_2) == 0x000158, "Member 'BP_ENPCSequencerComponent_C_PlaySequencer::K2Node_DynamicCast_AsRSGame_Mode_BPInterface_2' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_PlaySequencer, K2Node_DynamicCast_bSuccess_2) == 0x000168, "Member 'BP_ENPCSequencerComponent_C_PlaySequencer::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_PlaySequencer, CallFunc_GetRightPlayerBP_Player) == 0x000170, "Member 'BP_ENPCSequencerComponent_C_PlaySequencer::CallFunc_GetRightPlayerBP_Player' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_PlaySequencer, CallFunc_GetLeftPlayerBP_Player) == 0x000178, "Member 'BP_ENPCSequencerComponent_C_PlaySequencer::CallFunc_GetLeftPlayerBP_Player' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_PlaySequencer, CallFunc_IsValid_ReturnValue_2) == 0x000180, "Member 'BP_ENPCSequencerComponent_C_PlaySequencer::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_PlaySequencer, CallFunc_Array_Add_ReturnValue_5) == 0x000184, "Member 'BP_ENPCSequencerComponent_C_PlaySequencer::CallFunc_Array_Add_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_PlaySequencer, CallFunc_IsValid_ReturnValue_3) == 0x000188, "Member 'BP_ENPCSequencerComponent_C_PlaySequencer::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_PlaySequencer, CallFunc_Array_Add_ReturnValue_6) == 0x00018C, "Member 'BP_ENPCSequencerComponent_C_PlaySequencer::CallFunc_Array_Add_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_PlaySequencer, K2Node_DynamicCast_AsRSGame_Mode_BPInterface_3) == 0x000190, "Member 'BP_ENPCSequencerComponent_C_PlaySequencer::K2Node_DynamicCast_AsRSGame_Mode_BPInterface_3' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_PlaySequencer, K2Node_DynamicCast_bSuccess_3) == 0x0001A0, "Member 'BP_ENPCSequencerComponent_C_PlaySequencer::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_PlaySequencer, CallFunc_GetGameMode_ReturnValue_2) == 0x0001A8, "Member 'BP_ENPCSequencerComponent_C_PlaySequencer::CallFunc_GetGameMode_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_PlaySequencer, CallFunc_GetMainPlayerBP_Player_1) == 0x0001B0, "Member 'BP_ENPCSequencerComponent_C_PlaySequencer::CallFunc_GetMainPlayerBP_Player_1' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_PlaySequencer, CallFunc_IsValid_ReturnValue_4) == 0x0001B8, "Member 'BP_ENPCSequencerComponent_C_PlaySequencer::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_PlaySequencer, CallFunc_IsValid_ReturnValue_5) == 0x0001B9, "Member 'BP_ENPCSequencerComponent_C_PlaySequencer::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_PlaySequencer, CallFunc_Array_Add_ReturnValue_7) == 0x0001BC, "Member 'BP_ENPCSequencerComponent_C_PlaySequencer::CallFunc_Array_Add_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_PlaySequencer, CallFunc_GetOwner_ReturnValue) == 0x0001C0, "Member 'BP_ENPCSequencerComponent_C_PlaySequencer::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_PlaySequencer, CallFunc_SetInvalidDamage_Dummy) == 0x0001C8, "Member 'BP_ENPCSequencerComponent_C_PlaySequencer::CallFunc_SetInvalidDamage_Dummy' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_PlaySequencer, K2Node_DynamicCast_AsPlayer_Interface) == 0x0001D0, "Member 'BP_ENPCSequencerComponent_C_PlaySequencer::K2Node_DynamicCast_AsPlayer_Interface' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_PlaySequencer, K2Node_DynamicCast_bSuccess_4) == 0x0001E0, "Member 'BP_ENPCSequencerComponent_C_PlaySequencer::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_PlaySequencer, K2Node_DynamicCast_AsRSBattle_Player) == 0x0001E8, "Member 'BP_ENPCSequencerComponent_C_PlaySequencer::K2Node_DynamicCast_AsRSBattle_Player' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_PlaySequencer, K2Node_DynamicCast_bSuccess_5) == 0x0001F0, "Member 'BP_ENPCSequencerComponent_C_PlaySequencer::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_PlaySequencer, CallFunc_GetPlayerID_ReturnValue) == 0x0001F1, "Member 'BP_ENPCSequencerComponent_C_PlaySequencer::CallFunc_GetPlayerID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_PlaySequencer, CallFunc_IsValid_ReturnValue_6) == 0x0001F2, "Member 'BP_ENPCSequencerComponent_C_PlaySequencer::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_PlaySequencer, CallFunc_Em8000_GetPartner_self_CastInput) == 0x0001F8, "Member 'BP_ENPCSequencerComponent_C_PlaySequencer::CallFunc_Em8000_GetPartner_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_PlaySequencer, CallFunc_Em8000_GetPartner_PartnerActor) == 0x000208, "Member 'BP_ENPCSequencerComponent_C_PlaySequencer::CallFunc_Em8000_GetPartner_PartnerActor' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_PlaySequencer, CallFunc_IsValid_ReturnValue_7) == 0x000210, "Member 'BP_ENPCSequencerComponent_C_PlaySequencer::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_PlaySequencer, CallFunc_PlaySequencer_return) == 0x000211, "Member 'BP_ENPCSequencerComponent_C_PlaySequencer::CallFunc_PlaySequencer_return' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_PlaySequencer, CallFunc_Array_Add_ReturnValue_8) == 0x000214, "Member 'BP_ENPCSequencerComponent_C_PlaySequencer::CallFunc_Array_Add_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_PlaySequencer, CallFunc_Array_Add_ReturnValue_9) == 0x000218, "Member 'BP_ENPCSequencerComponent_C_PlaySequencer::CallFunc_Array_Add_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_PlaySequencer, CallFunc_Array_Add_ReturnValue_10) == 0x00021C, "Member 'BP_ENPCSequencerComponent_C_PlaySequencer::CallFunc_Array_Add_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_PlaySequencer, CallFunc_Array_Add_ReturnValue_11) == 0x000220, "Member 'BP_ENPCSequencerComponent_C_PlaySequencer::CallFunc_Array_Add_ReturnValue_11' has a wrong offset!");

// Function BP_ENPCSequencerComponent.BP_ENPCSequencerComponent_C.BindActor
// 0x0088 (0x0088 - 0x0000)
struct BP_ENPCSequencerComponent_C_BindActor final
{
public:
	class FText                                   ObjName;                                           // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class AActor*                                 Param_BindActor;                                   // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Dummy;                                             // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8928[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0030(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	TArray<class FText>                           K2Node_MakeArray_Array_1;                          // 0x0040(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<struct FMovieSceneObjectBindingID>     CallFunc_GetSequenceObjectBindingIDList_OutBindingIDList; // 0x0050(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_GetSequenceObjectBindingIDList_IsFind;    // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8929[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_892A[0x3];                                     // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMovieSceneObjectBindingID             CallFunc_Array_Get_Item;                           // 0x006C(0x0018)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ENPCSequencerComponent_C_BindActor) == 0x000008, "Wrong alignment on BP_ENPCSequencerComponent_C_BindActor");
static_assert(sizeof(BP_ENPCSequencerComponent_C_BindActor) == 0x000088, "Wrong size on BP_ENPCSequencerComponent_C_BindActor");
static_assert(offsetof(BP_ENPCSequencerComponent_C_BindActor, ObjName) == 0x000000, "Member 'BP_ENPCSequencerComponent_C_BindActor::ObjName' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_BindActor, Param_BindActor) == 0x000018, "Member 'BP_ENPCSequencerComponent_C_BindActor::Param_BindActor' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_BindActor, Dummy) == 0x000020, "Member 'BP_ENPCSequencerComponent_C_BindActor::Dummy' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_BindActor, Temp_int_Array_Index_Variable) == 0x000024, "Member 'BP_ENPCSequencerComponent_C_BindActor::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_BindActor, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'BP_ENPCSequencerComponent_C_BindActor::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_BindActor, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'BP_ENPCSequencerComponent_C_BindActor::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_BindActor, K2Node_MakeArray_Array) == 0x000030, "Member 'BP_ENPCSequencerComponent_C_BindActor::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_BindActor, K2Node_MakeArray_Array_1) == 0x000040, "Member 'BP_ENPCSequencerComponent_C_BindActor::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_BindActor, CallFunc_GetSequenceObjectBindingIDList_OutBindingIDList) == 0x000050, "Member 'BP_ENPCSequencerComponent_C_BindActor::CallFunc_GetSequenceObjectBindingIDList_OutBindingIDList' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_BindActor, CallFunc_GetSequenceObjectBindingIDList_IsFind) == 0x000060, "Member 'BP_ENPCSequencerComponent_C_BindActor::CallFunc_GetSequenceObjectBindingIDList_IsFind' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_BindActor, CallFunc_Array_Length_ReturnValue) == 0x000064, "Member 'BP_ENPCSequencerComponent_C_BindActor::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_BindActor, CallFunc_Less_IntInt_ReturnValue) == 0x000068, "Member 'BP_ENPCSequencerComponent_C_BindActor::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_BindActor, CallFunc_Array_Get_Item) == 0x00006C, "Member 'BP_ENPCSequencerComponent_C_BindActor::CallFunc_Array_Get_Item' has a wrong offset!");

// Function BP_ENPCSequencerComponent.BP_ENPCSequencerComponent_C.CalcActorTransform
// 0x02C0 (0x02C0 - 0x0000)
struct BP_ENPCSequencerComponent_C_CalcActorTransform final
{
public:
	class ARSBattleCharacter_C*                   RSBattleCharacter;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_892B[0x8];                                     // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             MeshRefTransform;                                  // 0x0010(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FTransform                             CalcTransform;                                     // 0x0040(0x0030)(Parm, OutParm, IsPlainOldData, NoDestructor)
	struct FRotator                               LRotator;                                          // 0x0070(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               LRotation;                                         // 0x007C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                LLocation;                                         // 0x0088(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_892C[0xC];                                     // 0x0094(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             LCalcTransform;                                    // 0x00A0(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x00D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_892D[0x3];                                     // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0104(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_892E[0x4];                                     // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0120(0x0030)(IsPlainOldData, NoDestructor)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0150(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array_1;                          // 0x0160(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x0170(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x017C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x0188(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit;         // 0x0194(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue;    // 0x021C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_892F[0x3];                                     // 0x021D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x0220(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x022C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x022D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8930[0x2];                                     // 0x022E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0234(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0238(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0244(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0250(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x025C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0278(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0288(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x028C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0290(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x029C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x02A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x02AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x02B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x02B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ENPCSequencerComponent_C_CalcActorTransform) == 0x000010, "Wrong alignment on BP_ENPCSequencerComponent_C_CalcActorTransform");
static_assert(sizeof(BP_ENPCSequencerComponent_C_CalcActorTransform) == 0x0002C0, "Wrong size on BP_ENPCSequencerComponent_C_CalcActorTransform");
static_assert(offsetof(BP_ENPCSequencerComponent_C_CalcActorTransform, RSBattleCharacter) == 0x000000, "Member 'BP_ENPCSequencerComponent_C_CalcActorTransform::RSBattleCharacter' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_CalcActorTransform, MeshRefTransform) == 0x000010, "Member 'BP_ENPCSequencerComponent_C_CalcActorTransform::MeshRefTransform' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_CalcActorTransform, CalcTransform) == 0x000040, "Member 'BP_ENPCSequencerComponent_C_CalcActorTransform::CalcTransform' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_CalcActorTransform, LRotator) == 0x000070, "Member 'BP_ENPCSequencerComponent_C_CalcActorTransform::LRotator' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_CalcActorTransform, LRotation) == 0x00007C, "Member 'BP_ENPCSequencerComponent_C_CalcActorTransform::LRotation' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_CalcActorTransform, LLocation) == 0x000088, "Member 'BP_ENPCSequencerComponent_C_CalcActorTransform::LLocation' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_CalcActorTransform, LCalcTransform) == 0x0000A0, "Member 'BP_ENPCSequencerComponent_C_CalcActorTransform::LCalcTransform' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_CalcActorTransform, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0000D0, "Member 'BP_ENPCSequencerComponent_C_CalcActorTransform::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_CalcActorTransform, CallFunc_Add_VectorVector_ReturnValue) == 0x0000DC, "Member 'BP_ENPCSequencerComponent_C_CalcActorTransform::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_CalcActorTransform, K2Node_SwitchInteger_CmpSuccess) == 0x0000E8, "Member 'BP_ENPCSequencerComponent_C_CalcActorTransform::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_CalcActorTransform, CallFunc_BreakTransform_Location) == 0x0000EC, "Member 'BP_ENPCSequencerComponent_C_CalcActorTransform::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_CalcActorTransform, CallFunc_BreakTransform_Rotation) == 0x0000F8, "Member 'BP_ENPCSequencerComponent_C_CalcActorTransform::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_CalcActorTransform, CallFunc_BreakTransform_Scale) == 0x000104, "Member 'BP_ENPCSequencerComponent_C_CalcActorTransform::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_CalcActorTransform, CallFunc_BreakVector_X) == 0x000110, "Member 'BP_ENPCSequencerComponent_C_CalcActorTransform::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_CalcActorTransform, CallFunc_BreakVector_Y) == 0x000114, "Member 'BP_ENPCSequencerComponent_C_CalcActorTransform::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_CalcActorTransform, CallFunc_BreakVector_Z) == 0x000118, "Member 'BP_ENPCSequencerComponent_C_CalcActorTransform::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_CalcActorTransform, CallFunc_MakeTransform_ReturnValue) == 0x000120, "Member 'BP_ENPCSequencerComponent_C_CalcActorTransform::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_CalcActorTransform, K2Node_MakeArray_Array) == 0x000150, "Member 'BP_ENPCSequencerComponent_C_CalcActorTransform::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_CalcActorTransform, K2Node_MakeArray_Array_1) == 0x000160, "Member 'BP_ENPCSequencerComponent_C_CalcActorTransform::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_CalcActorTransform, CallFunc_BreakTransform_Location_1) == 0x000170, "Member 'BP_ENPCSequencerComponent_C_CalcActorTransform::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_CalcActorTransform, CallFunc_BreakTransform_Rotation_1) == 0x00017C, "Member 'BP_ENPCSequencerComponent_C_CalcActorTransform::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_CalcActorTransform, CallFunc_BreakTransform_Scale_1) == 0x000188, "Member 'BP_ENPCSequencerComponent_C_CalcActorTransform::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_CalcActorTransform, CallFunc_LineTraceSingleForObjects_OutHit) == 0x000194, "Member 'BP_ENPCSequencerComponent_C_CalcActorTransform::CallFunc_LineTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_CalcActorTransform, CallFunc_LineTraceSingleForObjects_ReturnValue) == 0x00021C, "Member 'BP_ENPCSequencerComponent_C_CalcActorTransform::CallFunc_LineTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_CalcActorTransform, CallFunc_ComposeRotators_ReturnValue) == 0x000220, "Member 'BP_ENPCSequencerComponent_C_CalcActorTransform::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_CalcActorTransform, CallFunc_BreakHitResult_bBlockingHit) == 0x00022C, "Member 'BP_ENPCSequencerComponent_C_CalcActorTransform::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_CalcActorTransform, CallFunc_BreakHitResult_bInitialOverlap) == 0x00022D, "Member 'BP_ENPCSequencerComponent_C_CalcActorTransform::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_CalcActorTransform, CallFunc_BreakHitResult_Time) == 0x000230, "Member 'BP_ENPCSequencerComponent_C_CalcActorTransform::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_CalcActorTransform, CallFunc_BreakHitResult_Distance) == 0x000234, "Member 'BP_ENPCSequencerComponent_C_CalcActorTransform::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_CalcActorTransform, CallFunc_BreakHitResult_Location) == 0x000238, "Member 'BP_ENPCSequencerComponent_C_CalcActorTransform::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_CalcActorTransform, CallFunc_BreakHitResult_ImpactPoint) == 0x000244, "Member 'BP_ENPCSequencerComponent_C_CalcActorTransform::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_CalcActorTransform, CallFunc_BreakHitResult_Normal) == 0x000250, "Member 'BP_ENPCSequencerComponent_C_CalcActorTransform::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_CalcActorTransform, CallFunc_BreakHitResult_ImpactNormal) == 0x00025C, "Member 'BP_ENPCSequencerComponent_C_CalcActorTransform::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_CalcActorTransform, CallFunc_BreakHitResult_PhysMat) == 0x000268, "Member 'BP_ENPCSequencerComponent_C_CalcActorTransform::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_CalcActorTransform, CallFunc_BreakHitResult_HitActor) == 0x000270, "Member 'BP_ENPCSequencerComponent_C_CalcActorTransform::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_CalcActorTransform, CallFunc_BreakHitResult_HitComponent) == 0x000278, "Member 'BP_ENPCSequencerComponent_C_CalcActorTransform::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_CalcActorTransform, CallFunc_BreakHitResult_HitBoneName) == 0x000280, "Member 'BP_ENPCSequencerComponent_C_CalcActorTransform::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_CalcActorTransform, CallFunc_BreakHitResult_HitItem) == 0x000288, "Member 'BP_ENPCSequencerComponent_C_CalcActorTransform::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_CalcActorTransform, CallFunc_BreakHitResult_FaceIndex) == 0x00028C, "Member 'BP_ENPCSequencerComponent_C_CalcActorTransform::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_CalcActorTransform, CallFunc_BreakHitResult_TraceStart) == 0x000290, "Member 'BP_ENPCSequencerComponent_C_CalcActorTransform::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_CalcActorTransform, CallFunc_BreakHitResult_TraceEnd) == 0x00029C, "Member 'BP_ENPCSequencerComponent_C_CalcActorTransform::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_CalcActorTransform, CallFunc_BreakVector_X_1) == 0x0002A8, "Member 'BP_ENPCSequencerComponent_C_CalcActorTransform::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_CalcActorTransform, CallFunc_BreakVector_Y_1) == 0x0002AC, "Member 'BP_ENPCSequencerComponent_C_CalcActorTransform::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_CalcActorTransform, CallFunc_BreakVector_Z_1) == 0x0002B0, "Member 'BP_ENPCSequencerComponent_C_CalcActorTransform::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_CalcActorTransform, CallFunc_MakeVector_ReturnValue) == 0x0002B4, "Member 'BP_ENPCSequencerComponent_C_CalcActorTransform::CallFunc_MakeVector_ReturnValue' has a wrong offset!");

// Function BP_ENPCSequencerComponent.BP_ENPCSequencerComponent_C.BindCineCamera
// 0x0001 (0x0001 - 0x0000)
struct BP_ENPCSequencerComponent_C_BindCineCamera final
{
public:
	bool                                          Dummy;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ENPCSequencerComponent_C_BindCineCamera) == 0x000001, "Wrong alignment on BP_ENPCSequencerComponent_C_BindCineCamera");
static_assert(sizeof(BP_ENPCSequencerComponent_C_BindCineCamera) == 0x000001, "Wrong size on BP_ENPCSequencerComponent_C_BindCineCamera");
static_assert(offsetof(BP_ENPCSequencerComponent_C_BindCineCamera, Dummy) == 0x000000, "Member 'BP_ENPCSequencerComponent_C_BindCineCamera::Dummy' has a wrong offset!");

// Function BP_ENPCSequencerComponent.BP_ENPCSequencerComponent_C.SetPartyStoreTransform
// 0x00B8 (0x00B8 - 0x0000)
struct BP_ENPCSequencerComponent_C_SetPartyStoreTransform final
{
public:
	class UBP_EventParamComponent_C*              LEventParam03;                                     // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_EventParamComponent_C*              LEventParam02;                                     // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_EventParamComponent_C*              LEventParam01;                                     // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8931[0x6];                                     // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8932[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IRSGameModeBPInterface_C> K2Node_DynamicCast_AsRSGame_Mode_BPInterface;      // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8933[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_GetRightPlayerBP_Player;                  // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IRSGameModeBPInterface_C> K2Node_DynamicCast_AsRSGame_Mode_BPInterface_1;    // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8934[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_GetLeftPlayerBP_Player;                   // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8935[0x6];                                     // 0x0072(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_EventParamComponent_C*              CallFunc_GetComponentByClass_ReturnValue;          // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_EventParamComponent_C*              CallFunc_GetComponentByClass_ReturnValue_1;        // 0x0080(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IRSGameModeBPInterface_C> K2Node_DynamicCast_AsRSGame_Mode_BPInterface_2;    // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8936[0x7];                                     // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_GetMainPlayerBP_Player;                   // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8937[0x6];                                     // 0x00AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_EventParamComponent_C*              CallFunc_GetComponentByClass_ReturnValue_2;        // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ENPCSequencerComponent_C_SetPartyStoreTransform) == 0x000008, "Wrong alignment on BP_ENPCSequencerComponent_C_SetPartyStoreTransform");
static_assert(sizeof(BP_ENPCSequencerComponent_C_SetPartyStoreTransform) == 0x0000B8, "Wrong size on BP_ENPCSequencerComponent_C_SetPartyStoreTransform");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SetPartyStoreTransform, LEventParam03) == 0x000000, "Member 'BP_ENPCSequencerComponent_C_SetPartyStoreTransform::LEventParam03' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SetPartyStoreTransform, LEventParam02) == 0x000008, "Member 'BP_ENPCSequencerComponent_C_SetPartyStoreTransform::LEventParam02' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SetPartyStoreTransform, LEventParam01) == 0x000010, "Member 'BP_ENPCSequencerComponent_C_SetPartyStoreTransform::LEventParam01' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SetPartyStoreTransform, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_ENPCSequencerComponent_C_SetPartyStoreTransform::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SetPartyStoreTransform, CallFunc_IsValid_ReturnValue_1) == 0x000019, "Member 'BP_ENPCSequencerComponent_C_SetPartyStoreTransform::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SetPartyStoreTransform, CallFunc_GetGameMode_ReturnValue) == 0x000020, "Member 'BP_ENPCSequencerComponent_C_SetPartyStoreTransform::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SetPartyStoreTransform, CallFunc_IsValid_ReturnValue_2) == 0x000028, "Member 'BP_ENPCSequencerComponent_C_SetPartyStoreTransform::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SetPartyStoreTransform, K2Node_DynamicCast_AsRSGame_Mode_BPInterface) == 0x000030, "Member 'BP_ENPCSequencerComponent_C_SetPartyStoreTransform::K2Node_DynamicCast_AsRSGame_Mode_BPInterface' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SetPartyStoreTransform, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_ENPCSequencerComponent_C_SetPartyStoreTransform::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SetPartyStoreTransform, CallFunc_GetRightPlayerBP_Player) == 0x000048, "Member 'BP_ENPCSequencerComponent_C_SetPartyStoreTransform::CallFunc_GetRightPlayerBP_Player' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SetPartyStoreTransform, K2Node_DynamicCast_AsRSGame_Mode_BPInterface_1) == 0x000050, "Member 'BP_ENPCSequencerComponent_C_SetPartyStoreTransform::K2Node_DynamicCast_AsRSGame_Mode_BPInterface_1' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SetPartyStoreTransform, K2Node_DynamicCast_bSuccess_1) == 0x000060, "Member 'BP_ENPCSequencerComponent_C_SetPartyStoreTransform::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SetPartyStoreTransform, CallFunc_GetLeftPlayerBP_Player) == 0x000068, "Member 'BP_ENPCSequencerComponent_C_SetPartyStoreTransform::CallFunc_GetLeftPlayerBP_Player' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SetPartyStoreTransform, CallFunc_IsValid_ReturnValue_3) == 0x000070, "Member 'BP_ENPCSequencerComponent_C_SetPartyStoreTransform::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SetPartyStoreTransform, CallFunc_IsValid_ReturnValue_4) == 0x000071, "Member 'BP_ENPCSequencerComponent_C_SetPartyStoreTransform::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SetPartyStoreTransform, CallFunc_GetComponentByClass_ReturnValue) == 0x000078, "Member 'BP_ENPCSequencerComponent_C_SetPartyStoreTransform::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SetPartyStoreTransform, CallFunc_GetComponentByClass_ReturnValue_1) == 0x000080, "Member 'BP_ENPCSequencerComponent_C_SetPartyStoreTransform::CallFunc_GetComponentByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SetPartyStoreTransform, K2Node_DynamicCast_AsRSGame_Mode_BPInterface_2) == 0x000088, "Member 'BP_ENPCSequencerComponent_C_SetPartyStoreTransform::K2Node_DynamicCast_AsRSGame_Mode_BPInterface_2' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SetPartyStoreTransform, K2Node_DynamicCast_bSuccess_2) == 0x000098, "Member 'BP_ENPCSequencerComponent_C_SetPartyStoreTransform::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SetPartyStoreTransform, CallFunc_GetMainPlayerBP_Player) == 0x0000A0, "Member 'BP_ENPCSequencerComponent_C_SetPartyStoreTransform::CallFunc_GetMainPlayerBP_Player' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SetPartyStoreTransform, CallFunc_IsValid_ReturnValue_5) == 0x0000A8, "Member 'BP_ENPCSequencerComponent_C_SetPartyStoreTransform::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SetPartyStoreTransform, CallFunc_IsValid_ReturnValue_6) == 0x0000A9, "Member 'BP_ENPCSequencerComponent_C_SetPartyStoreTransform::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SetPartyStoreTransform, CallFunc_GetComponentByClass_ReturnValue_2) == 0x0000B0, "Member 'BP_ENPCSequencerComponent_C_SetPartyStoreTransform::CallFunc_GetComponentByClass_ReturnValue_2' has a wrong offset!");

// Function BP_ENPCSequencerComponent.BP_ENPCSequencerComponent_C.OnWaitResult
// 0x00B8 (0x00B8 - 0x0000)
struct BP_ENPCSequencerComponent_C_OnWaitResult final
{
public:
	class ABattleSimulatorManager*                CallFunc_GetBattleSimulatorManager_BattleSimulatorManager; // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMissionActive_ReturnValue;              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8938[0x6];                                     // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_ENpcInterface_C>  K2Node_DynamicCast_AsBPI_ENpc_Interface;           // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8939[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_ENpcInterface_C>  K2Node_DynamicCast_AsBPI_ENpc_Interface_1;         // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_PostFinishedSequencerEnpc_Return;         // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_PostFinishedSequencerEnpc_Return_1;       // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_893A[0x3];                                     // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_ENpcInterface_C>  K2Node_DynamicCast_AsBPI_ENpc_Interface_2;         // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_FinishedSequencerEnpc_Return;             // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_893B[0x5];                                     // 0x0063(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IRSGameModeBPInterface_C> K2Node_DynamicCast_AsRSGame_Mode_BPInterface;      // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_893C[0x6];                                     // 0x0082(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_GetMainPlayerBP_Player;                   // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_PlayerInterface_C> K2Node_DynamicCast_AsBPI_Player_Interface;         // 0x0090(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_PlayerCameraReset_Dummy;                  // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x00A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EndSequencer_dummy;                       // 0x00A3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_893D[0x4];                                     // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue;            // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ENPCSequencerComponent_C_OnWaitResult) == 0x000008, "Wrong alignment on BP_ENPCSequencerComponent_C_OnWaitResult");
static_assert(sizeof(BP_ENPCSequencerComponent_C_OnWaitResult) == 0x0000B8, "Wrong size on BP_ENPCSequencerComponent_C_OnWaitResult");
static_assert(offsetof(BP_ENPCSequencerComponent_C_OnWaitResult, CallFunc_GetBattleSimulatorManager_BattleSimulatorManager) == 0x000000, "Member 'BP_ENPCSequencerComponent_C_OnWaitResult::CallFunc_GetBattleSimulatorManager_BattleSimulatorManager' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_OnWaitResult, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_ENPCSequencerComponent_C_OnWaitResult::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_OnWaitResult, CallFunc_IsMissionActive_ReturnValue) == 0x000009, "Member 'BP_ENPCSequencerComponent_C_OnWaitResult::CallFunc_IsMissionActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_OnWaitResult, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'BP_ENPCSequencerComponent_C_OnWaitResult::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_OnWaitResult, K2Node_DynamicCast_AsBPI_ENpc_Interface) == 0x000018, "Member 'BP_ENPCSequencerComponent_C_OnWaitResult::K2Node_DynamicCast_AsBPI_ENpc_Interface' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_OnWaitResult, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_ENPCSequencerComponent_C_OnWaitResult::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_OnWaitResult, K2Node_DynamicCast_AsBPI_ENpc_Interface_1) == 0x000030, "Member 'BP_ENPCSequencerComponent_C_OnWaitResult::K2Node_DynamicCast_AsBPI_ENpc_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_OnWaitResult, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'BP_ENPCSequencerComponent_C_OnWaitResult::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_OnWaitResult, CallFunc_PostFinishedSequencerEnpc_Return) == 0x000041, "Member 'BP_ENPCSequencerComponent_C_OnWaitResult::CallFunc_PostFinishedSequencerEnpc_Return' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_OnWaitResult, CallFunc_PostFinishedSequencerEnpc_Return_1) == 0x000042, "Member 'BP_ENPCSequencerComponent_C_OnWaitResult::CallFunc_PostFinishedSequencerEnpc_Return_1' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_OnWaitResult, CallFunc_IsValid_ReturnValue_1) == 0x000043, "Member 'BP_ENPCSequencerComponent_C_OnWaitResult::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_OnWaitResult, CallFunc_IsValid_ReturnValue_2) == 0x000044, "Member 'BP_ENPCSequencerComponent_C_OnWaitResult::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_OnWaitResult, CallFunc_GetOwner_ReturnValue_1) == 0x000048, "Member 'BP_ENPCSequencerComponent_C_OnWaitResult::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_OnWaitResult, K2Node_DynamicCast_AsBPI_ENpc_Interface_2) == 0x000050, "Member 'BP_ENPCSequencerComponent_C_OnWaitResult::K2Node_DynamicCast_AsBPI_ENpc_Interface_2' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_OnWaitResult, K2Node_DynamicCast_bSuccess_2) == 0x000060, "Member 'BP_ENPCSequencerComponent_C_OnWaitResult::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_OnWaitResult, CallFunc_IsValid_ReturnValue_3) == 0x000061, "Member 'BP_ENPCSequencerComponent_C_OnWaitResult::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_OnWaitResult, CallFunc_FinishedSequencerEnpc_Return) == 0x000062, "Member 'BP_ENPCSequencerComponent_C_OnWaitResult::CallFunc_FinishedSequencerEnpc_Return' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_OnWaitResult, CallFunc_GetGameMode_ReturnValue) == 0x000068, "Member 'BP_ENPCSequencerComponent_C_OnWaitResult::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_OnWaitResult, K2Node_DynamicCast_AsRSGame_Mode_BPInterface) == 0x000070, "Member 'BP_ENPCSequencerComponent_C_OnWaitResult::K2Node_DynamicCast_AsRSGame_Mode_BPInterface' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_OnWaitResult, K2Node_DynamicCast_bSuccess_3) == 0x000080, "Member 'BP_ENPCSequencerComponent_C_OnWaitResult::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_OnWaitResult, CallFunc_IsValid_ReturnValue_4) == 0x000081, "Member 'BP_ENPCSequencerComponent_C_OnWaitResult::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_OnWaitResult, CallFunc_GetMainPlayerBP_Player) == 0x000088, "Member 'BP_ENPCSequencerComponent_C_OnWaitResult::CallFunc_GetMainPlayerBP_Player' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_OnWaitResult, K2Node_DynamicCast_AsBPI_Player_Interface) == 0x000090, "Member 'BP_ENPCSequencerComponent_C_OnWaitResult::K2Node_DynamicCast_AsBPI_Player_Interface' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_OnWaitResult, K2Node_DynamicCast_bSuccess_4) == 0x0000A0, "Member 'BP_ENPCSequencerComponent_C_OnWaitResult::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_OnWaitResult, CallFunc_PlayerCameraReset_Dummy) == 0x0000A1, "Member 'BP_ENPCSequencerComponent_C_OnWaitResult::CallFunc_PlayerCameraReset_Dummy' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_OnWaitResult, CallFunc_IsValid_ReturnValue_5) == 0x0000A2, "Member 'BP_ENPCSequencerComponent_C_OnWaitResult::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_OnWaitResult, CallFunc_EndSequencer_dummy) == 0x0000A3, "Member 'BP_ENPCSequencerComponent_C_OnWaitResult::CallFunc_EndSequencer_dummy' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_OnWaitResult, CallFunc_GetSequencePlayer_ReturnValue) == 0x0000A8, "Member 'BP_ENPCSequencerComponent_C_OnWaitResult::CallFunc_GetSequencePlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_OnWaitResult, CallFunc_IsValid_ReturnValue_6) == 0x0000B0, "Member 'BP_ENPCSequencerComponent_C_OnWaitResult::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");

// Function BP_ENPCSequencerComponent.BP_ENPCSequencerComponent_C.CharacterDynamicEventEnd
// 0x0078 (0x0078 - 0x0000)
struct BP_ENPCSequencerComponent_C_CharacterDynamicEventEnd final
{
public:
	class ARSCharacterBase*                       RSCharacter;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Dummy;                                             // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          LRestoreTransform;                                 // 0x0009(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          LBindActor;                                        // 0x000A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_893E[0x5];                                     // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IEventInterface>       K2Node_DynamicCast_AsEvent_Interface;              // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_893F[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerInterface_C> K2Node_DynamicCast_AsBPI_Player_Interface;         // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnemyPlayer_bEnemyPlayer;               // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BattleSequencerEnd_ReturnValue;           // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8940[0x1];                                     // 0x003B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8941[0x6];                                     // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerInterface_C> K2Node_DynamicCast_AsBPI_Player_Interface_1;       // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8942[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerInterface_C> K2Node_DynamicCast_AsBPI_Player_Interface_2;       // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetPlayerActionAfterEvent_bDummy;         // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetPlayerActionAfterEvent_bDummy_1;       // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ENPCSequencerComponent_C_CharacterDynamicEventEnd) == 0x000008, "Wrong alignment on BP_ENPCSequencerComponent_C_CharacterDynamicEventEnd");
static_assert(sizeof(BP_ENPCSequencerComponent_C_CharacterDynamicEventEnd) == 0x000078, "Wrong size on BP_ENPCSequencerComponent_C_CharacterDynamicEventEnd");
static_assert(offsetof(BP_ENPCSequencerComponent_C_CharacterDynamicEventEnd, RSCharacter) == 0x000000, "Member 'BP_ENPCSequencerComponent_C_CharacterDynamicEventEnd::RSCharacter' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_CharacterDynamicEventEnd, Dummy) == 0x000008, "Member 'BP_ENPCSequencerComponent_C_CharacterDynamicEventEnd::Dummy' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_CharacterDynamicEventEnd, LRestoreTransform) == 0x000009, "Member 'BP_ENPCSequencerComponent_C_CharacterDynamicEventEnd::LRestoreTransform' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_CharacterDynamicEventEnd, LBindActor) == 0x00000A, "Member 'BP_ENPCSequencerComponent_C_CharacterDynamicEventEnd::LBindActor' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_CharacterDynamicEventEnd, K2Node_DynamicCast_AsEvent_Interface) == 0x000010, "Member 'BP_ENPCSequencerComponent_C_CharacterDynamicEventEnd::K2Node_DynamicCast_AsEvent_Interface' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_CharacterDynamicEventEnd, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_ENPCSequencerComponent_C_CharacterDynamicEventEnd::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_CharacterDynamicEventEnd, K2Node_DynamicCast_AsBPI_Player_Interface) == 0x000028, "Member 'BP_ENPCSequencerComponent_C_CharacterDynamicEventEnd::K2Node_DynamicCast_AsBPI_Player_Interface' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_CharacterDynamicEventEnd, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'BP_ENPCSequencerComponent_C_CharacterDynamicEventEnd::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_CharacterDynamicEventEnd, CallFunc_IsEnemyPlayer_bEnemyPlayer) == 0x000039, "Member 'BP_ENPCSequencerComponent_C_CharacterDynamicEventEnd::CallFunc_IsEnemyPlayer_bEnemyPlayer' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_CharacterDynamicEventEnd, CallFunc_BattleSequencerEnd_ReturnValue) == 0x00003A, "Member 'BP_ENPCSequencerComponent_C_CharacterDynamicEventEnd::CallFunc_BattleSequencerEnd_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_CharacterDynamicEventEnd, CallFunc_Array_Find_ReturnValue) == 0x00003C, "Member 'BP_ENPCSequencerComponent_C_CharacterDynamicEventEnd::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_CharacterDynamicEventEnd, K2Node_SwitchInteger_CmpSuccess) == 0x000040, "Member 'BP_ENPCSequencerComponent_C_CharacterDynamicEventEnd::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_CharacterDynamicEventEnd, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000041, "Member 'BP_ENPCSequencerComponent_C_CharacterDynamicEventEnd::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_CharacterDynamicEventEnd, K2Node_DynamicCast_AsBPI_Player_Interface_1) == 0x000048, "Member 'BP_ENPCSequencerComponent_C_CharacterDynamicEventEnd::K2Node_DynamicCast_AsBPI_Player_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_CharacterDynamicEventEnd, K2Node_DynamicCast_bSuccess_2) == 0x000058, "Member 'BP_ENPCSequencerComponent_C_CharacterDynamicEventEnd::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_CharacterDynamicEventEnd, K2Node_DynamicCast_AsBPI_Player_Interface_2) == 0x000060, "Member 'BP_ENPCSequencerComponent_C_CharacterDynamicEventEnd::K2Node_DynamicCast_AsBPI_Player_Interface_2' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_CharacterDynamicEventEnd, K2Node_DynamicCast_bSuccess_3) == 0x000070, "Member 'BP_ENPCSequencerComponent_C_CharacterDynamicEventEnd::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_CharacterDynamicEventEnd, CallFunc_SetPlayerActionAfterEvent_bDummy) == 0x000071, "Member 'BP_ENPCSequencerComponent_C_CharacterDynamicEventEnd::CallFunc_SetPlayerActionAfterEvent_bDummy' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_CharacterDynamicEventEnd, CallFunc_SetPlayerActionAfterEvent_bDummy_1) == 0x000072, "Member 'BP_ENPCSequencerComponent_C_CharacterDynamicEventEnd::CallFunc_SetPlayerActionAfterEvent_bDummy_1' has a wrong offset!");

// Function BP_ENPCSequencerComponent.BP_ENPCSequencerComponent_C.PlayerDynamicEventStart
// 0x0010 (0x0010 - 0x0000)
struct BP_ENPCSequencerComponent_C_PlayerDynamicEventStart final
{
public:
	class ARSBattlePlayer_C*                      RSPlayer;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Dummy;                                             // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_PlayerDynamicEventStart_Dummy;            // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ENPCSequencerComponent_C_PlayerDynamicEventStart) == 0x000008, "Wrong alignment on BP_ENPCSequencerComponent_C_PlayerDynamicEventStart");
static_assert(sizeof(BP_ENPCSequencerComponent_C_PlayerDynamicEventStart) == 0x000010, "Wrong size on BP_ENPCSequencerComponent_C_PlayerDynamicEventStart");
static_assert(offsetof(BP_ENPCSequencerComponent_C_PlayerDynamicEventStart, RSPlayer) == 0x000000, "Member 'BP_ENPCSequencerComponent_C_PlayerDynamicEventStart::RSPlayer' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_PlayerDynamicEventStart, Dummy) == 0x000008, "Member 'BP_ENPCSequencerComponent_C_PlayerDynamicEventStart::Dummy' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_PlayerDynamicEventStart, CallFunc_PlayerDynamicEventStart_Dummy) == 0x000009, "Member 'BP_ENPCSequencerComponent_C_PlayerDynamicEventStart::CallFunc_PlayerDynamicEventStart_Dummy' has a wrong offset!");

// Function BP_ENPCSequencerComponent.BP_ENPCSequencerComponent_C.SetEnemyStoreTransform
// 0x0068 (0x0068 - 0x0000)
struct BP_ENPCSequencerComponent_C_SetEnemyStoreTransform final
{
public:
	class UBP_EventParamComponent_C*              LEventParam;                                       // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerID                                     Temp_byte_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8943[0x5];                                     // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattlePlayer_C*                      K2Node_DynamicCast_AsRSBattle_Player;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8944[0x6];                                     // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_ENpcInterface_C>  CallFunc_Em8000_GetPartner_self_CastInput;         // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_Em8000_GetPartner_PartnerActor;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8945[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_EventParamComponent_C*              CallFunc_GetComponentByClass_ReturnValue;          // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IPlayerInterface>      K2Node_DynamicCast_AsPlayer_Interface;             // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerID                                     CallFunc_GetPlayerID_ReturnValue;                  // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x005B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8946[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_EventParamComponent_C*              CallFunc_GetComponentByClass_ReturnValue_1;        // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ENPCSequencerComponent_C_SetEnemyStoreTransform) == 0x000008, "Wrong alignment on BP_ENPCSequencerComponent_C_SetEnemyStoreTransform");
static_assert(sizeof(BP_ENPCSequencerComponent_C_SetEnemyStoreTransform) == 0x000068, "Wrong size on BP_ENPCSequencerComponent_C_SetEnemyStoreTransform");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SetEnemyStoreTransform, LEventParam) == 0x000000, "Member 'BP_ENPCSequencerComponent_C_SetEnemyStoreTransform::LEventParam' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SetEnemyStoreTransform, Temp_byte_Variable) == 0x000008, "Member 'BP_ENPCSequencerComponent_C_SetEnemyStoreTransform::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SetEnemyStoreTransform, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'BP_ENPCSequencerComponent_C_SetEnemyStoreTransform::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SetEnemyStoreTransform, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00000A, "Member 'BP_ENPCSequencerComponent_C_SetEnemyStoreTransform::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SetEnemyStoreTransform, K2Node_DynamicCast_AsRSBattle_Player) == 0x000010, "Member 'BP_ENPCSequencerComponent_C_SetEnemyStoreTransform::K2Node_DynamicCast_AsRSBattle_Player' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SetEnemyStoreTransform, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_ENPCSequencerComponent_C_SetEnemyStoreTransform::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SetEnemyStoreTransform, CallFunc_IsValid_ReturnValue_1) == 0x000019, "Member 'BP_ENPCSequencerComponent_C_SetEnemyStoreTransform::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SetEnemyStoreTransform, CallFunc_Em8000_GetPartner_self_CastInput) == 0x000020, "Member 'BP_ENPCSequencerComponent_C_SetEnemyStoreTransform::CallFunc_Em8000_GetPartner_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SetEnemyStoreTransform, CallFunc_Em8000_GetPartner_PartnerActor) == 0x000030, "Member 'BP_ENPCSequencerComponent_C_SetEnemyStoreTransform::CallFunc_Em8000_GetPartner_PartnerActor' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SetEnemyStoreTransform, CallFunc_IsValid_ReturnValue_2) == 0x000038, "Member 'BP_ENPCSequencerComponent_C_SetEnemyStoreTransform::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SetEnemyStoreTransform, CallFunc_GetComponentByClass_ReturnValue) == 0x000040, "Member 'BP_ENPCSequencerComponent_C_SetEnemyStoreTransform::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SetEnemyStoreTransform, K2Node_DynamicCast_AsPlayer_Interface) == 0x000048, "Member 'BP_ENPCSequencerComponent_C_SetEnemyStoreTransform::K2Node_DynamicCast_AsPlayer_Interface' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SetEnemyStoreTransform, K2Node_DynamicCast_bSuccess_1) == 0x000058, "Member 'BP_ENPCSequencerComponent_C_SetEnemyStoreTransform::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SetEnemyStoreTransform, CallFunc_GetPlayerID_ReturnValue) == 0x000059, "Member 'BP_ENPCSequencerComponent_C_SetEnemyStoreTransform::CallFunc_GetPlayerID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SetEnemyStoreTransform, CallFunc_IsValid_ReturnValue_3) == 0x00005A, "Member 'BP_ENPCSequencerComponent_C_SetEnemyStoreTransform::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SetEnemyStoreTransform, CallFunc_IsValid_ReturnValue_4) == 0x00005B, "Member 'BP_ENPCSequencerComponent_C_SetEnemyStoreTransform::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SetEnemyStoreTransform, CallFunc_GetComponentByClass_ReturnValue_1) == 0x000060, "Member 'BP_ENPCSequencerComponent_C_SetEnemyStoreTransform::CallFunc_GetComponentByClass_ReturnValue_1' has a wrong offset!");

// Function BP_ENPCSequencerComponent.BP_ENPCSequencerComponent_C.Finalize
// 0x0044 (0x0044 - 0x0000)
struct BP_ENPCSequencerComponent_C_Finalize final
{
public:
	bool                                          Dummy;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8947[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8948[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8949[0x1];                                     // 0x0023(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_3;            // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue_1;                        // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x003E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x003F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Finalize_dummy;                           // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ENPCSequencerComponent_C_Finalize) == 0x000004, "Wrong alignment on BP_ENPCSequencerComponent_C_Finalize");
static_assert(sizeof(BP_ENPCSequencerComponent_C_Finalize) == 0x000044, "Wrong size on BP_ENPCSequencerComponent_C_Finalize");
static_assert(offsetof(BP_ENPCSequencerComponent_C_Finalize, Dummy) == 0x000000, "Member 'BP_ENPCSequencerComponent_C_Finalize::Dummy' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_Finalize, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_ENPCSequencerComponent_C_Finalize::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_Finalize, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_ENPCSequencerComponent_C_Finalize::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_Finalize, CallFunc_Subtract_IntInt_ReturnValue) == 0x00000C, "Member 'BP_ENPCSequencerComponent_C_Finalize::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_Finalize, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000010, "Member 'BP_ENPCSequencerComponent_C_Finalize::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_Finalize, Temp_int_Loop_Counter_Variable_1) == 0x000014, "Member 'BP_ENPCSequencerComponent_C_Finalize::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_Finalize, Temp_int_Array_Index_Variable_1) == 0x000018, "Member 'BP_ENPCSequencerComponent_C_Finalize::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_Finalize, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x00001C, "Member 'BP_ENPCSequencerComponent_C_Finalize::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_Finalize, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x000020, "Member 'BP_ENPCSequencerComponent_C_Finalize::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_Finalize, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'BP_ENPCSequencerComponent_C_Finalize::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_Finalize, CallFunc_IsValid_ReturnValue_1) == 0x000022, "Member 'BP_ENPCSequencerComponent_C_Finalize::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_Finalize, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'BP_ENPCSequencerComponent_C_Finalize::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_Finalize, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x000028, "Member 'BP_ENPCSequencerComponent_C_Finalize::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_Finalize, CallFunc_Max_ReturnValue) == 0x00002C, "Member 'BP_ENPCSequencerComponent_C_Finalize::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_Finalize, CallFunc_Array_Length_ReturnValue_1) == 0x000030, "Member 'BP_ENPCSequencerComponent_C_Finalize::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_Finalize, CallFunc_Subtract_IntInt_ReturnValue_3) == 0x000034, "Member 'BP_ENPCSequencerComponent_C_Finalize::CallFunc_Subtract_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_Finalize, CallFunc_Max_ReturnValue_1) == 0x000038, "Member 'BP_ENPCSequencerComponent_C_Finalize::CallFunc_Max_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_Finalize, CallFunc_IsValid_ReturnValue_2) == 0x00003C, "Member 'BP_ENPCSequencerComponent_C_Finalize::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_Finalize, CallFunc_IsValid_ReturnValue_3) == 0x00003D, "Member 'BP_ENPCSequencerComponent_C_Finalize::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_Finalize, CallFunc_IsValid_ReturnValue_4) == 0x00003E, "Member 'BP_ENPCSequencerComponent_C_Finalize::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_Finalize, CallFunc_IsValid_ReturnValue_5) == 0x00003F, "Member 'BP_ENPCSequencerComponent_C_Finalize::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_Finalize, CallFunc_IsValid_ReturnValue_6) == 0x000040, "Member 'BP_ENPCSequencerComponent_C_Finalize::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_Finalize, CallFunc_Finalize_dummy) == 0x000041, "Member 'BP_ENPCSequencerComponent_C_Finalize::CallFunc_Finalize_dummy' has a wrong offset!");

// Function BP_ENPCSequencerComponent.BP_ENPCSequencerComponent_C.BindingSetupCode
// 0x03A8 (0x03A8 - 0x0000)
struct BP_ENPCSequencerComponent_C_BindingSetupCode final
{
public:
	TArray<class ABP_CableBase_C*>                LBrainCodeList;                                    // 0x0000(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	class FText                                   LTmpCodeBindingName;                               // 0x0010(0x0018)(Edit, BlueprintVisible)
	class FText                                   IndexText;                                         // 0x0028(0x0018)(Edit, BlueprintVisible)
	class ABP_CableBase_C*                        LCode;                                             // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_CableBase_C*>                LSasCodeList;                                      // 0x0048(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	TArray<class FText>                           LTmpBindingNames;                                  // 0x0058(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<class FText>                           LBindingCodeNames;                                 // 0x0068(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<class FText>                           LBindingSuffix;                                    // 0x0078(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<class FText>                           LBindingCodeTextPrefix;                            // 0x0088(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_894A[0x3];                                     // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FText>                           K2Node_MakeArray_Array;                            // 0x00A0(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x00B8(0x0018)()
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_894B[0x3];                                     // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_1;                      // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_894C[0x3];                                     // 0x00F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Num_Variable_2;                      // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_1;             // 0x0110(0x0018)()
	int32                                         Temp_int_Loop_Num_Variable_3;                      // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_894D[0x3];                                     // 0x012D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_894E[0x4];                                     // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FText>                           K2Node_MakeArray_Array_1;                          // 0x0138(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<struct FMovieSceneObjectBindingID>     CallFunc_GetSequenceObjectBindingIDList_OutBindingIDList; // 0x0148(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_GetSequenceObjectBindingIDList_IsFind;    // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0159(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_894F[0x6];                                     // 0x015A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FText>                           K2Node_MakeArray_Array_2;                          // 0x0160(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TScriptInterface<class IBPI_ENpcInterface_C>  K2Node_DynamicCast_AsBPI_ENpc_Interface;           // 0x0170(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8950[0x7];                                     // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetSequenceActorEnpc_SequenceActorEnpc;   // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8951[0x3];                                     // 0x0191(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0198(0x0040)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FMovieSceneObjectBindingID>     CallFunc_GetSequenceObjectBindingIDList_OutBindingIDList_1; // 0x01E0(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_GetSequenceObjectBindingIDList_IsFind_1;  // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8952[0x3];                                     // 0x01F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_4;                  // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_5;                  // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8953[0x4];                                     // 0x01FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerInterface_C> K2Node_DynamicCast_AsBPI_Player_Interface;         // 0x0200(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8954[0x7];                                     // 0x0211(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0218(0x0040)(HasGetValueTypeHash)
	TArray<class ABP_CableBase_C*>                CallFunc_GetBrainCodeActorList_CodeList;           // 0x0258(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_3;                          // 0x0268(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0278(0x0018)()
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0290(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8955[0x4];                                     // 0x0294(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FText>                           K2Node_MakeArray_Array_4;                          // 0x0298(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<struct FMovieSceneObjectBindingID>     CallFunc_GetSequenceObjectBindingIDList_OutBindingIDList_2; // 0x02A8(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_GetSequenceObjectBindingIDList_IsFind_2;  // 0x02B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8956[0x7];                                     // 0x02B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x02C0(0x0040)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0300(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x0304(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x0308(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8957[0x3];                                     // 0x0309(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x030C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0310(0x0040)(HasGetValueTypeHash)
	TScriptInterface<class IBPI_PlayerInterface_C> K2Node_DynamicCast_AsBPI_Player_Interface_1;       // 0x0350(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0360(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8958[0x7];                                     // 0x0361(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_5;                          // 0x0368(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<class ABP_CableBase_C*>                CallFunc_GetSASCodeActorList_CodeList;             // 0x0378(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0388(0x0018)()
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x03A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ENPCSequencerComponent_C_BindingSetupCode) == 0x000008, "Wrong alignment on BP_ENPCSequencerComponent_C_BindingSetupCode");
static_assert(sizeof(BP_ENPCSequencerComponent_C_BindingSetupCode) == 0x0003A8, "Wrong size on BP_ENPCSequencerComponent_C_BindingSetupCode");
static_assert(offsetof(BP_ENPCSequencerComponent_C_BindingSetupCode, LBrainCodeList) == 0x000000, "Member 'BP_ENPCSequencerComponent_C_BindingSetupCode::LBrainCodeList' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_BindingSetupCode, LTmpCodeBindingName) == 0x000010, "Member 'BP_ENPCSequencerComponent_C_BindingSetupCode::LTmpCodeBindingName' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_BindingSetupCode, IndexText) == 0x000028, "Member 'BP_ENPCSequencerComponent_C_BindingSetupCode::IndexText' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_BindingSetupCode, LCode) == 0x000040, "Member 'BP_ENPCSequencerComponent_C_BindingSetupCode::LCode' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_BindingSetupCode, LSasCodeList) == 0x000048, "Member 'BP_ENPCSequencerComponent_C_BindingSetupCode::LSasCodeList' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_BindingSetupCode, LTmpBindingNames) == 0x000058, "Member 'BP_ENPCSequencerComponent_C_BindingSetupCode::LTmpBindingNames' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_BindingSetupCode, LBindingCodeNames) == 0x000068, "Member 'BP_ENPCSequencerComponent_C_BindingSetupCode::LBindingCodeNames' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_BindingSetupCode, LBindingSuffix) == 0x000078, "Member 'BP_ENPCSequencerComponent_C_BindingSetupCode::LBindingSuffix' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_BindingSetupCode, LBindingCodeTextPrefix) == 0x000088, "Member 'BP_ENPCSequencerComponent_C_BindingSetupCode::LBindingCodeTextPrefix' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_BindingSetupCode, CallFunc_IsValid_ReturnValue) == 0x000098, "Member 'BP_ENPCSequencerComponent_C_BindingSetupCode::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_BindingSetupCode, CallFunc_Array_Length_ReturnValue) == 0x00009C, "Member 'BP_ENPCSequencerComponent_C_BindingSetupCode::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_BindingSetupCode, K2Node_MakeArray_Array) == 0x0000A0, "Member 'BP_ENPCSequencerComponent_C_BindingSetupCode::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_BindingSetupCode, Temp_int_Array_Index_Variable) == 0x0000B0, "Member 'BP_ENPCSequencerComponent_C_BindingSetupCode::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_BindingSetupCode, CallFunc_Add_IntInt_ReturnValue) == 0x0000B4, "Member 'BP_ENPCSequencerComponent_C_BindingSetupCode::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_BindingSetupCode, CallFunc_Conv_IntToText_ReturnValue) == 0x0000B8, "Member 'BP_ENPCSequencerComponent_C_BindingSetupCode::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_BindingSetupCode, Temp_int_Loop_Num_Variable) == 0x0000D0, "Member 'BP_ENPCSequencerComponent_C_BindingSetupCode::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_BindingSetupCode, Temp_int_Loop_Counter_Variable) == 0x0000D4, "Member 'BP_ENPCSequencerComponent_C_BindingSetupCode::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_BindingSetupCode, Temp_int_Loop_Counter_Variable_1) == 0x0000D8, "Member 'BP_ENPCSequencerComponent_C_BindingSetupCode::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_BindingSetupCode, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000DC, "Member 'BP_ENPCSequencerComponent_C_BindingSetupCode::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_BindingSetupCode, CallFunc_Less_IntInt_ReturnValue) == 0x0000E0, "Member 'BP_ENPCSequencerComponent_C_BindingSetupCode::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_BindingSetupCode, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000E4, "Member 'BP_ENPCSequencerComponent_C_BindingSetupCode::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_BindingSetupCode, Temp_int_Array_Index_Variable_1) == 0x0000E8, "Member 'BP_ENPCSequencerComponent_C_BindingSetupCode::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_BindingSetupCode, Temp_int_Loop_Num_Variable_1) == 0x0000EC, "Member 'BP_ENPCSequencerComponent_C_BindingSetupCode::Temp_int_Loop_Num_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_BindingSetupCode, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000F0, "Member 'BP_ENPCSequencerComponent_C_BindingSetupCode::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_BindingSetupCode, Temp_int_Loop_Num_Variable_2) == 0x0000F4, "Member 'BP_ENPCSequencerComponent_C_BindingSetupCode::Temp_int_Loop_Num_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_BindingSetupCode, Temp_int_Array_Index_Variable_2) == 0x0000F8, "Member 'BP_ENPCSequencerComponent_C_BindingSetupCode::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_BindingSetupCode, CallFunc_Array_Length_ReturnValue_1) == 0x0000FC, "Member 'BP_ENPCSequencerComponent_C_BindingSetupCode::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_BindingSetupCode, Temp_int_Loop_Counter_Variable_2) == 0x000100, "Member 'BP_ENPCSequencerComponent_C_BindingSetupCode::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_BindingSetupCode, CallFunc_Add_IntInt_ReturnValue_3) == 0x000104, "Member 'BP_ENPCSequencerComponent_C_BindingSetupCode::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_BindingSetupCode, Temp_int_Array_Index_Variable_3) == 0x000108, "Member 'BP_ENPCSequencerComponent_C_BindingSetupCode::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_BindingSetupCode, CallFunc_Add_IntInt_ReturnValue_4) == 0x00010C, "Member 'BP_ENPCSequencerComponent_C_BindingSetupCode::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_BindingSetupCode, CallFunc_Conv_IntToText_ReturnValue_1) == 0x000110, "Member 'BP_ENPCSequencerComponent_C_BindingSetupCode::CallFunc_Conv_IntToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_BindingSetupCode, Temp_int_Loop_Num_Variable_3) == 0x000128, "Member 'BP_ENPCSequencerComponent_C_BindingSetupCode::Temp_int_Loop_Num_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_BindingSetupCode, CallFunc_Less_IntInt_ReturnValue_2) == 0x00012C, "Member 'BP_ENPCSequencerComponent_C_BindingSetupCode::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_BindingSetupCode, CallFunc_Array_Add_ReturnValue) == 0x000130, "Member 'BP_ENPCSequencerComponent_C_BindingSetupCode::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_BindingSetupCode, K2Node_MakeArray_Array_1) == 0x000138, "Member 'BP_ENPCSequencerComponent_C_BindingSetupCode::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_BindingSetupCode, CallFunc_GetSequenceObjectBindingIDList_OutBindingIDList) == 0x000148, "Member 'BP_ENPCSequencerComponent_C_BindingSetupCode::CallFunc_GetSequenceObjectBindingIDList_OutBindingIDList' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_BindingSetupCode, CallFunc_GetSequenceObjectBindingIDList_IsFind) == 0x000158, "Member 'BP_ENPCSequencerComponent_C_BindingSetupCode::CallFunc_GetSequenceObjectBindingIDList_IsFind' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_BindingSetupCode, CallFunc_IsValid_ReturnValue_1) == 0x000159, "Member 'BP_ENPCSequencerComponent_C_BindingSetupCode::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_BindingSetupCode, K2Node_MakeArray_Array_2) == 0x000160, "Member 'BP_ENPCSequencerComponent_C_BindingSetupCode::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_BindingSetupCode, K2Node_DynamicCast_AsBPI_ENpc_Interface) == 0x000170, "Member 'BP_ENPCSequencerComponent_C_BindingSetupCode::K2Node_DynamicCast_AsBPI_ENpc_Interface' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_BindingSetupCode, K2Node_DynamicCast_bSuccess) == 0x000180, "Member 'BP_ENPCSequencerComponent_C_BindingSetupCode::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_BindingSetupCode, CallFunc_GetSequenceActorEnpc_SequenceActorEnpc) == 0x000188, "Member 'BP_ENPCSequencerComponent_C_BindingSetupCode::CallFunc_GetSequenceActorEnpc_SequenceActorEnpc' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_BindingSetupCode, CallFunc_IsValid_ReturnValue_2) == 0x000190, "Member 'BP_ENPCSequencerComponent_C_BindingSetupCode::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_BindingSetupCode, CallFunc_Array_Add_ReturnValue_1) == 0x000194, "Member 'BP_ENPCSequencerComponent_C_BindingSetupCode::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_BindingSetupCode, K2Node_MakeStruct_FormatArgumentData) == 0x000198, "Member 'BP_ENPCSequencerComponent_C_BindingSetupCode::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_BindingSetupCode, CallFunc_Array_Add_ReturnValue_2) == 0x0001D8, "Member 'BP_ENPCSequencerComponent_C_BindingSetupCode::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_BindingSetupCode, CallFunc_Array_Add_ReturnValue_3) == 0x0001DC, "Member 'BP_ENPCSequencerComponent_C_BindingSetupCode::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_BindingSetupCode, CallFunc_GetSequenceObjectBindingIDList_OutBindingIDList_1) == 0x0001E0, "Member 'BP_ENPCSequencerComponent_C_BindingSetupCode::CallFunc_GetSequenceObjectBindingIDList_OutBindingIDList_1' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_BindingSetupCode, CallFunc_GetSequenceObjectBindingIDList_IsFind_1) == 0x0001F0, "Member 'BP_ENPCSequencerComponent_C_BindingSetupCode::CallFunc_GetSequenceObjectBindingIDList_IsFind_1' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_BindingSetupCode, CallFunc_Array_Add_ReturnValue_4) == 0x0001F4, "Member 'BP_ENPCSequencerComponent_C_BindingSetupCode::CallFunc_Array_Add_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_BindingSetupCode, CallFunc_Array_Add_ReturnValue_5) == 0x0001F8, "Member 'BP_ENPCSequencerComponent_C_BindingSetupCode::CallFunc_Array_Add_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_BindingSetupCode, K2Node_DynamicCast_AsBPI_Player_Interface) == 0x000200, "Member 'BP_ENPCSequencerComponent_C_BindingSetupCode::K2Node_DynamicCast_AsBPI_Player_Interface' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_BindingSetupCode, K2Node_DynamicCast_bSuccess_1) == 0x000210, "Member 'BP_ENPCSequencerComponent_C_BindingSetupCode::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_BindingSetupCode, K2Node_MakeStruct_FormatArgumentData_1) == 0x000218, "Member 'BP_ENPCSequencerComponent_C_BindingSetupCode::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_BindingSetupCode, CallFunc_GetBrainCodeActorList_CodeList) == 0x000258, "Member 'BP_ENPCSequencerComponent_C_BindingSetupCode::CallFunc_GetBrainCodeActorList_CodeList' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_BindingSetupCode, K2Node_MakeArray_Array_3) == 0x000268, "Member 'BP_ENPCSequencerComponent_C_BindingSetupCode::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_BindingSetupCode, CallFunc_Format_ReturnValue) == 0x000278, "Member 'BP_ENPCSequencerComponent_C_BindingSetupCode::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_BindingSetupCode, CallFunc_Array_Length_ReturnValue_2) == 0x000290, "Member 'BP_ENPCSequencerComponent_C_BindingSetupCode::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_BindingSetupCode, K2Node_MakeArray_Array_4) == 0x000298, "Member 'BP_ENPCSequencerComponent_C_BindingSetupCode::K2Node_MakeArray_Array_4' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_BindingSetupCode, CallFunc_GetSequenceObjectBindingIDList_OutBindingIDList_2) == 0x0002A8, "Member 'BP_ENPCSequencerComponent_C_BindingSetupCode::CallFunc_GetSequenceObjectBindingIDList_OutBindingIDList_2' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_BindingSetupCode, CallFunc_GetSequenceObjectBindingIDList_IsFind_2) == 0x0002B8, "Member 'BP_ENPCSequencerComponent_C_BindingSetupCode::CallFunc_GetSequenceObjectBindingIDList_IsFind_2' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_BindingSetupCode, K2Node_MakeStruct_FormatArgumentData_2) == 0x0002C0, "Member 'BP_ENPCSequencerComponent_C_BindingSetupCode::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_BindingSetupCode, CallFunc_Array_Length_ReturnValue_3) == 0x000300, "Member 'BP_ENPCSequencerComponent_C_BindingSetupCode::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_BindingSetupCode, Temp_int_Loop_Counter_Variable_3) == 0x000304, "Member 'BP_ENPCSequencerComponent_C_BindingSetupCode::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_BindingSetupCode, CallFunc_Less_IntInt_ReturnValue_3) == 0x000308, "Member 'BP_ENPCSequencerComponent_C_BindingSetupCode::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_BindingSetupCode, CallFunc_Add_IntInt_ReturnValue_5) == 0x00030C, "Member 'BP_ENPCSequencerComponent_C_BindingSetupCode::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_BindingSetupCode, K2Node_MakeStruct_FormatArgumentData_3) == 0x000310, "Member 'BP_ENPCSequencerComponent_C_BindingSetupCode::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_BindingSetupCode, K2Node_DynamicCast_AsBPI_Player_Interface_1) == 0x000350, "Member 'BP_ENPCSequencerComponent_C_BindingSetupCode::K2Node_DynamicCast_AsBPI_Player_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_BindingSetupCode, K2Node_DynamicCast_bSuccess_2) == 0x000360, "Member 'BP_ENPCSequencerComponent_C_BindingSetupCode::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_BindingSetupCode, K2Node_MakeArray_Array_5) == 0x000368, "Member 'BP_ENPCSequencerComponent_C_BindingSetupCode::K2Node_MakeArray_Array_5' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_BindingSetupCode, CallFunc_GetSASCodeActorList_CodeList) == 0x000378, "Member 'BP_ENPCSequencerComponent_C_BindingSetupCode::CallFunc_GetSASCodeActorList_CodeList' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_BindingSetupCode, CallFunc_Format_ReturnValue_1) == 0x000388, "Member 'BP_ENPCSequencerComponent_C_BindingSetupCode::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_BindingSetupCode, CallFunc_Array_Length_ReturnValue_4) == 0x0003A0, "Member 'BP_ENPCSequencerComponent_C_BindingSetupCode::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");

// Function BP_ENPCSequencerComponent.BP_ENPCSequencerComponent_C.SwappingCode
// 0x0438 (0x0438 - 0x0000)
struct BP_ENPCSequencerComponent_C_SwappingCode final
{
public:
	class ABP_CableBase_C*                        LDummyCode;                                        // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMovieSceneObjectBindingID             LBinding;                                          // 0x0008(0x0018)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	TArray<struct FMovieSceneObjectBindingID>     LBindingList;                                      // 0x0020(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<class ABP_CableBase_C*>                LBrainCodeList;                                    // 0x0030(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	class FText                                   LTmpCodeBindingName;                               // 0x0040(0x0018)(Edit, BlueprintVisible)
	class FText                                   IndexText;                                         // 0x0058(0x0018)(Edit, BlueprintVisible)
	class ABP_CableBase_C*                        LCode;                                             // 0x0070(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_CableBase_C*>                LSasCodeList;                                      // 0x0078(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	TArray<class FText>                           LTmpBindingNames;                                  // 0x0088(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<class FText>                           LBindingCodeNames;                                 // 0x0098(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<class FText>                           LBindingSuffix;                                    // 0x00A8(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<class FText>                           LBindingCodeTextPrefix;                            // 0x00B8(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<class FText>                           K2Node_MakeArray_Array;                            // 0x00C8(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8959[0x3];                                     // 0x00E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_1;                      // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_895A[0x3];                                     // 0x00FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0104(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0105(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_895B[0x2];                                     // 0x0106(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_895C[0x4];                                     // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FText>                           K2Node_MakeArray_Array_1;                          // 0x0110(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<class FText>                           K2Node_MakeArray_Array_2;                          // 0x0120(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_2;                      // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_895D[0x4];                                     // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0150(0x0018)()
	int32                                         Temp_int_Loop_Num_Variable_3;                      // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x016C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_895E[0x3];                                     // 0x016D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMovieSceneObjectBindingID             CallFunc_Array_Get_Item;                           // 0x0174(0x0018)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_4;                   // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_5;                   // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_4;                      // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_895F[0x3];                                     // 0x01A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_4;                  // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8960[0x3];                                     // 0x01B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_5;                  // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_6;                   // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_5;                      // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_7;                 // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_5;                // 0x01CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8961[0x3];                                     // 0x01CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_1;             // 0x01D0(0x0018)()
	class ABP_CableBase_C*                        CallFunc_Array_Get_Item_1;                         // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_CableBase_C*                        CallFunc_Array_Get_Item_2;                         // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_1;         // 0x01F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8962[0x6];                                     // 0x01FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_MakeArray_Array_3;                          // 0x0200(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array_4;                          // 0x0210(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_6;                  // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0224(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_6;                // 0x0225(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8963[0x2];                                     // 0x0226(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_8;                 // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x022C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8964[0x3];                                     // 0x022D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0230(0x0040)(HasGetValueTypeHash)
	TArray<struct FMovieSceneObjectBindingID>     CallFunc_GetSequenceObjectBindingIDList_OutBindingIDList; // 0x0270(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_GetSequenceObjectBindingIDList_IsFind;    // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8965[0x7];                                     // 0x0281(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FMovieSceneObjectBindingID>     CallFunc_GetSequenceObjectBindingIDList_OutBindingIDList_1; // 0x0288(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_GetSequenceObjectBindingIDList_IsFind_1;  // 0x0298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8966[0x3];                                     // 0x0299(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_7;                   // 0x029C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMovieSceneObjectBindingID             CallFunc_Array_Get_Item_3;                         // 0x02A0(0x0018)(NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x02B8(0x0040)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_6;               // 0x02F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8967[0x4];                                     // 0x02FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_5;                          // 0x0300(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0310(0x0018)()
	TScriptInterface<class IBPI_PlayerInterface_C> K2Node_DynamicCast_AsBPI_Player_Interface;         // 0x0328(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0338(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8968[0x7];                                     // 0x0339(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_CableBase_C*>                CallFunc_GetBrainCodeActorList_CodeList;           // 0x0340(0x0010)(ReferenceParm, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0350(0x0040)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_7;               // 0x0390(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8969[0x4];                                     // 0x0394(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0398(0x0040)(HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_7;                  // 0x03D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_896A[0x4];                                     // 0x03DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_6;                          // 0x03E0(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x03F0(0x0018)()
	bool                                          CallFunc_Less_IntInt_ReturnValue_7;                // 0x0408(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_896B[0x3];                                     // 0x0409(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_9;                 // 0x040C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_PlayerInterface_C> K2Node_DynamicCast_AsBPI_Player_Interface_1;       // 0x0410(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0420(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_896C[0x3];                                     // 0x0421(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_8;               // 0x0424(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_CableBase_C*>                CallFunc_GetSASCodeActorList_CodeList;             // 0x0428(0x0010)(ReferenceParm, HasGetValueTypeHash)
};
static_assert(alignof(BP_ENPCSequencerComponent_C_SwappingCode) == 0x000008, "Wrong alignment on BP_ENPCSequencerComponent_C_SwappingCode");
static_assert(sizeof(BP_ENPCSequencerComponent_C_SwappingCode) == 0x000438, "Wrong size on BP_ENPCSequencerComponent_C_SwappingCode");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SwappingCode, LDummyCode) == 0x000000, "Member 'BP_ENPCSequencerComponent_C_SwappingCode::LDummyCode' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SwappingCode, LBinding) == 0x000008, "Member 'BP_ENPCSequencerComponent_C_SwappingCode::LBinding' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SwappingCode, LBindingList) == 0x000020, "Member 'BP_ENPCSequencerComponent_C_SwappingCode::LBindingList' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SwappingCode, LBrainCodeList) == 0x000030, "Member 'BP_ENPCSequencerComponent_C_SwappingCode::LBrainCodeList' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SwappingCode, LTmpCodeBindingName) == 0x000040, "Member 'BP_ENPCSequencerComponent_C_SwappingCode::LTmpCodeBindingName' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SwappingCode, IndexText) == 0x000058, "Member 'BP_ENPCSequencerComponent_C_SwappingCode::IndexText' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SwappingCode, LCode) == 0x000070, "Member 'BP_ENPCSequencerComponent_C_SwappingCode::LCode' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SwappingCode, LSasCodeList) == 0x000078, "Member 'BP_ENPCSequencerComponent_C_SwappingCode::LSasCodeList' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SwappingCode, LTmpBindingNames) == 0x000088, "Member 'BP_ENPCSequencerComponent_C_SwappingCode::LTmpBindingNames' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SwappingCode, LBindingCodeNames) == 0x000098, "Member 'BP_ENPCSequencerComponent_C_SwappingCode::LBindingCodeNames' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SwappingCode, LBindingSuffix) == 0x0000A8, "Member 'BP_ENPCSequencerComponent_C_SwappingCode::LBindingSuffix' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SwappingCode, LBindingCodeTextPrefix) == 0x0000B8, "Member 'BP_ENPCSequencerComponent_C_SwappingCode::LBindingCodeTextPrefix' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SwappingCode, K2Node_MakeArray_Array) == 0x0000C8, "Member 'BP_ENPCSequencerComponent_C_SwappingCode::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SwappingCode, CallFunc_Array_Length_ReturnValue) == 0x0000D8, "Member 'BP_ENPCSequencerComponent_C_SwappingCode::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SwappingCode, Temp_int_Array_Index_Variable) == 0x0000DC, "Member 'BP_ENPCSequencerComponent_C_SwappingCode::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SwappingCode, Temp_int_Loop_Num_Variable) == 0x0000E0, "Member 'BP_ENPCSequencerComponent_C_SwappingCode::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SwappingCode, CallFunc_IsValid_ReturnValue) == 0x0000E4, "Member 'BP_ENPCSequencerComponent_C_SwappingCode::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SwappingCode, CallFunc_Array_Length_ReturnValue_1) == 0x0000E8, "Member 'BP_ENPCSequencerComponent_C_SwappingCode::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SwappingCode, Temp_int_Loop_Counter_Variable) == 0x0000EC, "Member 'BP_ENPCSequencerComponent_C_SwappingCode::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SwappingCode, CallFunc_Add_IntInt_ReturnValue) == 0x0000F0, "Member 'BP_ENPCSequencerComponent_C_SwappingCode::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SwappingCode, Temp_int_Array_Index_Variable_1) == 0x0000F4, "Member 'BP_ENPCSequencerComponent_C_SwappingCode::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SwappingCode, Temp_int_Loop_Num_Variable_1) == 0x0000F8, "Member 'BP_ENPCSequencerComponent_C_SwappingCode::Temp_int_Loop_Num_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SwappingCode, CallFunc_Less_IntInt_ReturnValue) == 0x0000FC, "Member 'BP_ENPCSequencerComponent_C_SwappingCode::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SwappingCode, Temp_int_Loop_Counter_Variable_1) == 0x000100, "Member 'BP_ENPCSequencerComponent_C_SwappingCode::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SwappingCode, CallFunc_IsValid_ReturnValue_1) == 0x000104, "Member 'BP_ENPCSequencerComponent_C_SwappingCode::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SwappingCode, CallFunc_Less_IntInt_ReturnValue_1) == 0x000105, "Member 'BP_ENPCSequencerComponent_C_SwappingCode::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SwappingCode, CallFunc_Add_IntInt_ReturnValue_1) == 0x000108, "Member 'BP_ENPCSequencerComponent_C_SwappingCode::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SwappingCode, K2Node_MakeArray_Array_1) == 0x000110, "Member 'BP_ENPCSequencerComponent_C_SwappingCode::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SwappingCode, K2Node_MakeArray_Array_2) == 0x000120, "Member 'BP_ENPCSequencerComponent_C_SwappingCode::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SwappingCode, Temp_int_Loop_Counter_Variable_2) == 0x000130, "Member 'BP_ENPCSequencerComponent_C_SwappingCode::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SwappingCode, CallFunc_Array_Length_ReturnValue_2) == 0x000134, "Member 'BP_ENPCSequencerComponent_C_SwappingCode::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SwappingCode, CallFunc_Add_IntInt_ReturnValue_2) == 0x000138, "Member 'BP_ENPCSequencerComponent_C_SwappingCode::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SwappingCode, CallFunc_Array_Length_ReturnValue_3) == 0x00013C, "Member 'BP_ENPCSequencerComponent_C_SwappingCode::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SwappingCode, Temp_int_Array_Index_Variable_2) == 0x000140, "Member 'BP_ENPCSequencerComponent_C_SwappingCode::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SwappingCode, Temp_int_Loop_Num_Variable_2) == 0x000144, "Member 'BP_ENPCSequencerComponent_C_SwappingCode::Temp_int_Loop_Num_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SwappingCode, CallFunc_Add_IntInt_ReturnValue_3) == 0x000148, "Member 'BP_ENPCSequencerComponent_C_SwappingCode::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SwappingCode, CallFunc_Conv_IntToText_ReturnValue) == 0x000150, "Member 'BP_ENPCSequencerComponent_C_SwappingCode::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SwappingCode, Temp_int_Loop_Num_Variable_3) == 0x000168, "Member 'BP_ENPCSequencerComponent_C_SwappingCode::Temp_int_Loop_Num_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SwappingCode, CallFunc_Less_IntInt_ReturnValue_2) == 0x00016C, "Member 'BP_ENPCSequencerComponent_C_SwappingCode::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SwappingCode, Temp_int_Array_Index_Variable_3) == 0x000170, "Member 'BP_ENPCSequencerComponent_C_SwappingCode::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SwappingCode, CallFunc_Array_Get_Item) == 0x000174, "Member 'BP_ENPCSequencerComponent_C_SwappingCode::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SwappingCode, CallFunc_Array_Length_ReturnValue_4) == 0x00018C, "Member 'BP_ENPCSequencerComponent_C_SwappingCode::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SwappingCode, CallFunc_Array_Length_ReturnValue_5) == 0x000190, "Member 'BP_ENPCSequencerComponent_C_SwappingCode::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SwappingCode, Temp_int_Array_Index_Variable_4) == 0x000194, "Member 'BP_ENPCSequencerComponent_C_SwappingCode::Temp_int_Array_Index_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SwappingCode, Temp_int_Loop_Counter_Variable_3) == 0x000198, "Member 'BP_ENPCSequencerComponent_C_SwappingCode::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SwappingCode, CallFunc_Add_IntInt_ReturnValue_4) == 0x00019C, "Member 'BP_ENPCSequencerComponent_C_SwappingCode::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SwappingCode, Temp_int_Array_Index_Variable_5) == 0x0001A0, "Member 'BP_ENPCSequencerComponent_C_SwappingCode::Temp_int_Array_Index_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SwappingCode, Temp_int_Loop_Num_Variable_4) == 0x0001A4, "Member 'BP_ENPCSequencerComponent_C_SwappingCode::Temp_int_Loop_Num_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SwappingCode, CallFunc_Less_IntInt_ReturnValue_3) == 0x0001A8, "Member 'BP_ENPCSequencerComponent_C_SwappingCode::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SwappingCode, Temp_int_Loop_Counter_Variable_4) == 0x0001AC, "Member 'BP_ENPCSequencerComponent_C_SwappingCode::Temp_int_Loop_Counter_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SwappingCode, CallFunc_Less_IntInt_ReturnValue_4) == 0x0001B0, "Member 'BP_ENPCSequencerComponent_C_SwappingCode::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SwappingCode, CallFunc_Add_IntInt_ReturnValue_5) == 0x0001B4, "Member 'BP_ENPCSequencerComponent_C_SwappingCode::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SwappingCode, Temp_int_Loop_Counter_Variable_5) == 0x0001B8, "Member 'BP_ENPCSequencerComponent_C_SwappingCode::Temp_int_Loop_Counter_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SwappingCode, CallFunc_Add_IntInt_ReturnValue_6) == 0x0001BC, "Member 'BP_ENPCSequencerComponent_C_SwappingCode::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SwappingCode, Temp_int_Array_Index_Variable_6) == 0x0001C0, "Member 'BP_ENPCSequencerComponent_C_SwappingCode::Temp_int_Array_Index_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SwappingCode, Temp_int_Loop_Num_Variable_5) == 0x0001C4, "Member 'BP_ENPCSequencerComponent_C_SwappingCode::Temp_int_Loop_Num_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SwappingCode, CallFunc_Add_IntInt_ReturnValue_7) == 0x0001C8, "Member 'BP_ENPCSequencerComponent_C_SwappingCode::CallFunc_Add_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SwappingCode, CallFunc_Less_IntInt_ReturnValue_5) == 0x0001CC, "Member 'BP_ENPCSequencerComponent_C_SwappingCode::CallFunc_Less_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SwappingCode, CallFunc_Conv_IntToText_ReturnValue_1) == 0x0001D0, "Member 'BP_ENPCSequencerComponent_C_SwappingCode::CallFunc_Conv_IntToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SwappingCode, CallFunc_Array_Get_Item_1) == 0x0001E8, "Member 'BP_ENPCSequencerComponent_C_SwappingCode::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SwappingCode, CallFunc_Array_Get_Item_2) == 0x0001F0, "Member 'BP_ENPCSequencerComponent_C_SwappingCode::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SwappingCode, CallFunc_Array_IsValidIndex_ReturnValue) == 0x0001F8, "Member 'BP_ENPCSequencerComponent_C_SwappingCode::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SwappingCode, CallFunc_Array_IsValidIndex_ReturnValue_1) == 0x0001F9, "Member 'BP_ENPCSequencerComponent_C_SwappingCode::CallFunc_Array_IsValidIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SwappingCode, K2Node_MakeArray_Array_3) == 0x000200, "Member 'BP_ENPCSequencerComponent_C_SwappingCode::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SwappingCode, K2Node_MakeArray_Array_4) == 0x000210, "Member 'BP_ENPCSequencerComponent_C_SwappingCode::K2Node_MakeArray_Array_4' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SwappingCode, Temp_int_Loop_Counter_Variable_6) == 0x000220, "Member 'BP_ENPCSequencerComponent_C_SwappingCode::Temp_int_Loop_Counter_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SwappingCode, CallFunc_IsValid_ReturnValue_2) == 0x000224, "Member 'BP_ENPCSequencerComponent_C_SwappingCode::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SwappingCode, CallFunc_Less_IntInt_ReturnValue_6) == 0x000225, "Member 'BP_ENPCSequencerComponent_C_SwappingCode::CallFunc_Less_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SwappingCode, CallFunc_Add_IntInt_ReturnValue_8) == 0x000228, "Member 'BP_ENPCSequencerComponent_C_SwappingCode::CallFunc_Add_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SwappingCode, CallFunc_IsValid_ReturnValue_3) == 0x00022C, "Member 'BP_ENPCSequencerComponent_C_SwappingCode::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SwappingCode, K2Node_MakeStruct_FormatArgumentData) == 0x000230, "Member 'BP_ENPCSequencerComponent_C_SwappingCode::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SwappingCode, CallFunc_GetSequenceObjectBindingIDList_OutBindingIDList) == 0x000270, "Member 'BP_ENPCSequencerComponent_C_SwappingCode::CallFunc_GetSequenceObjectBindingIDList_OutBindingIDList' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SwappingCode, CallFunc_GetSequenceObjectBindingIDList_IsFind) == 0x000280, "Member 'BP_ENPCSequencerComponent_C_SwappingCode::CallFunc_GetSequenceObjectBindingIDList_IsFind' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SwappingCode, CallFunc_GetSequenceObjectBindingIDList_OutBindingIDList_1) == 0x000288, "Member 'BP_ENPCSequencerComponent_C_SwappingCode::CallFunc_GetSequenceObjectBindingIDList_OutBindingIDList_1' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SwappingCode, CallFunc_GetSequenceObjectBindingIDList_IsFind_1) == 0x000298, "Member 'BP_ENPCSequencerComponent_C_SwappingCode::CallFunc_GetSequenceObjectBindingIDList_IsFind_1' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SwappingCode, Temp_int_Array_Index_Variable_7) == 0x00029C, "Member 'BP_ENPCSequencerComponent_C_SwappingCode::Temp_int_Array_Index_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SwappingCode, CallFunc_Array_Get_Item_3) == 0x0002A0, "Member 'BP_ENPCSequencerComponent_C_SwappingCode::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SwappingCode, K2Node_MakeStruct_FormatArgumentData_1) == 0x0002B8, "Member 'BP_ENPCSequencerComponent_C_SwappingCode::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SwappingCode, CallFunc_Array_Length_ReturnValue_6) == 0x0002F8, "Member 'BP_ENPCSequencerComponent_C_SwappingCode::CallFunc_Array_Length_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SwappingCode, K2Node_MakeArray_Array_5) == 0x000300, "Member 'BP_ENPCSequencerComponent_C_SwappingCode::K2Node_MakeArray_Array_5' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SwappingCode, CallFunc_Format_ReturnValue) == 0x000310, "Member 'BP_ENPCSequencerComponent_C_SwappingCode::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SwappingCode, K2Node_DynamicCast_AsBPI_Player_Interface) == 0x000328, "Member 'BP_ENPCSequencerComponent_C_SwappingCode::K2Node_DynamicCast_AsBPI_Player_Interface' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SwappingCode, K2Node_DynamicCast_bSuccess) == 0x000338, "Member 'BP_ENPCSequencerComponent_C_SwappingCode::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SwappingCode, CallFunc_GetBrainCodeActorList_CodeList) == 0x000340, "Member 'BP_ENPCSequencerComponent_C_SwappingCode::CallFunc_GetBrainCodeActorList_CodeList' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SwappingCode, K2Node_MakeStruct_FormatArgumentData_2) == 0x000350, "Member 'BP_ENPCSequencerComponent_C_SwappingCode::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SwappingCode, CallFunc_Array_Length_ReturnValue_7) == 0x000390, "Member 'BP_ENPCSequencerComponent_C_SwappingCode::CallFunc_Array_Length_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SwappingCode, K2Node_MakeStruct_FormatArgumentData_3) == 0x000398, "Member 'BP_ENPCSequencerComponent_C_SwappingCode::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SwappingCode, Temp_int_Loop_Counter_Variable_7) == 0x0003D8, "Member 'BP_ENPCSequencerComponent_C_SwappingCode::Temp_int_Loop_Counter_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SwappingCode, K2Node_MakeArray_Array_6) == 0x0003E0, "Member 'BP_ENPCSequencerComponent_C_SwappingCode::K2Node_MakeArray_Array_6' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SwappingCode, CallFunc_Format_ReturnValue_1) == 0x0003F0, "Member 'BP_ENPCSequencerComponent_C_SwappingCode::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SwappingCode, CallFunc_Less_IntInt_ReturnValue_7) == 0x000408, "Member 'BP_ENPCSequencerComponent_C_SwappingCode::CallFunc_Less_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SwappingCode, CallFunc_Add_IntInt_ReturnValue_9) == 0x00040C, "Member 'BP_ENPCSequencerComponent_C_SwappingCode::CallFunc_Add_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SwappingCode, K2Node_DynamicCast_AsBPI_Player_Interface_1) == 0x000410, "Member 'BP_ENPCSequencerComponent_C_SwappingCode::K2Node_DynamicCast_AsBPI_Player_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SwappingCode, K2Node_DynamicCast_bSuccess_1) == 0x000420, "Member 'BP_ENPCSequencerComponent_C_SwappingCode::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SwappingCode, CallFunc_Array_Length_ReturnValue_8) == 0x000424, "Member 'BP_ENPCSequencerComponent_C_SwappingCode::CallFunc_Array_Length_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_ENPCSequencerComponent_C_SwappingCode, CallFunc_GetSASCodeActorList_CodeList) == 0x000428, "Member 'BP_ENPCSequencerComponent_C_SwappingCode::CallFunc_GetSASCodeActorList_CodeList' has a wrong offset!");

}

