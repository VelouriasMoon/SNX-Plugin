#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_ui_Equip_Parts_1

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BattlePrototype_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WB_ui_Equip_Parts_1.WB_ui_Equip_Parts_1_C
// 0x00D8 (0x0460 - 0x0388)
class UWB_ui_Equip_Parts_1_C final : public UUIBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0388(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Select_3_in_2;                                     // 0x0390(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Select_3_out;                                      // 0x0398(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Select_3_in;                                       // 0x03A0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Select_3;                                          // 0x03A8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Default_2_out;                                     // 0x03B0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Default_2_in;                                      // 0x03B8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Cancel;                                            // 0x03C0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Decision;                                          // 0x03C8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Select_1_in;                                       // 0x03D0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Select_2;                                          // 0x03D8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Select_1;                                          // 0x03E0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Default_2;                                         // 0x03E8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Default_none;                                      // 0x03F0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Default_1;                                         // 0x03F8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Arrow_L;                                           // 0x0400(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Arrow_L_add;                                       // 0x0408(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Arrow_R_1;                                         // 0x0410(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Arrow_R_add_1;                                     // 0x0418(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Cursor_1;                                          // 0x0420(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Face_a;                                            // 0x0428(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Frame;                                             // 0x0430(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Icon_E;                                            // 0x0438(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Noise;                                             // 0x0440(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Select_Base;                                       // 0x0448(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          IsEnable;                                          // 0x0450(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsSelect;                                          // 0x0451(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsLock;                                            // 0x0452(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsSelectReturn;                                    // 0x0453(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsInParty;                                         // 0x0454(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsLockSelect;                                      // 0x0455(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsStartLockSelect;                                 // 0x0456(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsPressLeft;                                       // 0x0457(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsPressRight;                                      // 0x0458(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_WB_ui_Equip_Parts_1(int32 EntryPoint);
	void OnInitialized();
	void UpdateState(int32 State, int32 SubState, float DeltaSeconds);
	void Construct();
	void StateNone(int32 SubState);
	void StateLoop(int32 SubState);
	void StateLoopSelect(int32 SubState);
	void StateLoopLock(int32 SubState);
	void SetSelect(bool Param_IsSelect);
	void SetLock(bool Param_IsLock);
	void SetEnable(bool Param_IsEnable);
	void StateLoopDisable(int32 SubState);
	void SetCharaIndex(int32 Param_Index);
	void SetInParty(bool InPartyFlag);
	void StateLoopLockSelect(int32 SubState);
	void SetLockSelect(bool Param_IsLockSelect, bool IsStart);
	void PressLeft();
	void PressRight();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WB_ui_Equip_Parts_1_C">();
	}
	static class UWB_ui_Equip_Parts_1_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWB_ui_Equip_Parts_1_C>();
	}
};
static_assert(alignof(UWB_ui_Equip_Parts_1_C) == 0x000008, "Wrong alignment on UWB_ui_Equip_Parts_1_C");
static_assert(sizeof(UWB_ui_Equip_Parts_1_C) == 0x000460, "Wrong size on UWB_ui_Equip_Parts_1_C");
static_assert(offsetof(UWB_ui_Equip_Parts_1_C, UberGraphFrame) == 0x000388, "Member 'UWB_ui_Equip_Parts_1_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWB_ui_Equip_Parts_1_C, Select_3_in_2) == 0x000390, "Member 'UWB_ui_Equip_Parts_1_C::Select_3_in_2' has a wrong offset!");
static_assert(offsetof(UWB_ui_Equip_Parts_1_C, Select_3_out) == 0x000398, "Member 'UWB_ui_Equip_Parts_1_C::Select_3_out' has a wrong offset!");
static_assert(offsetof(UWB_ui_Equip_Parts_1_C, Select_3_in) == 0x0003A0, "Member 'UWB_ui_Equip_Parts_1_C::Select_3_in' has a wrong offset!");
static_assert(offsetof(UWB_ui_Equip_Parts_1_C, Select_3) == 0x0003A8, "Member 'UWB_ui_Equip_Parts_1_C::Select_3' has a wrong offset!");
static_assert(offsetof(UWB_ui_Equip_Parts_1_C, Default_2_out) == 0x0003B0, "Member 'UWB_ui_Equip_Parts_1_C::Default_2_out' has a wrong offset!");
static_assert(offsetof(UWB_ui_Equip_Parts_1_C, Default_2_in) == 0x0003B8, "Member 'UWB_ui_Equip_Parts_1_C::Default_2_in' has a wrong offset!");
static_assert(offsetof(UWB_ui_Equip_Parts_1_C, Cancel) == 0x0003C0, "Member 'UWB_ui_Equip_Parts_1_C::Cancel' has a wrong offset!");
static_assert(offsetof(UWB_ui_Equip_Parts_1_C, Decision) == 0x0003C8, "Member 'UWB_ui_Equip_Parts_1_C::Decision' has a wrong offset!");
static_assert(offsetof(UWB_ui_Equip_Parts_1_C, Select_1_in) == 0x0003D0, "Member 'UWB_ui_Equip_Parts_1_C::Select_1_in' has a wrong offset!");
static_assert(offsetof(UWB_ui_Equip_Parts_1_C, Select_2) == 0x0003D8, "Member 'UWB_ui_Equip_Parts_1_C::Select_2' has a wrong offset!");
static_assert(offsetof(UWB_ui_Equip_Parts_1_C, Select_1) == 0x0003E0, "Member 'UWB_ui_Equip_Parts_1_C::Select_1' has a wrong offset!");
static_assert(offsetof(UWB_ui_Equip_Parts_1_C, Default_2) == 0x0003E8, "Member 'UWB_ui_Equip_Parts_1_C::Default_2' has a wrong offset!");
static_assert(offsetof(UWB_ui_Equip_Parts_1_C, Default_none) == 0x0003F0, "Member 'UWB_ui_Equip_Parts_1_C::Default_none' has a wrong offset!");
static_assert(offsetof(UWB_ui_Equip_Parts_1_C, Default_1) == 0x0003F8, "Member 'UWB_ui_Equip_Parts_1_C::Default_1' has a wrong offset!");
static_assert(offsetof(UWB_ui_Equip_Parts_1_C, Arrow_L) == 0x000400, "Member 'UWB_ui_Equip_Parts_1_C::Arrow_L' has a wrong offset!");
static_assert(offsetof(UWB_ui_Equip_Parts_1_C, Arrow_L_add) == 0x000408, "Member 'UWB_ui_Equip_Parts_1_C::Arrow_L_add' has a wrong offset!");
static_assert(offsetof(UWB_ui_Equip_Parts_1_C, Arrow_R_1) == 0x000410, "Member 'UWB_ui_Equip_Parts_1_C::Arrow_R_1' has a wrong offset!");
static_assert(offsetof(UWB_ui_Equip_Parts_1_C, Arrow_R_add_1) == 0x000418, "Member 'UWB_ui_Equip_Parts_1_C::Arrow_R_add_1' has a wrong offset!");
static_assert(offsetof(UWB_ui_Equip_Parts_1_C, Cursor_1) == 0x000420, "Member 'UWB_ui_Equip_Parts_1_C::Cursor_1' has a wrong offset!");
static_assert(offsetof(UWB_ui_Equip_Parts_1_C, Face_a) == 0x000428, "Member 'UWB_ui_Equip_Parts_1_C::Face_a' has a wrong offset!");
static_assert(offsetof(UWB_ui_Equip_Parts_1_C, Frame) == 0x000430, "Member 'UWB_ui_Equip_Parts_1_C::Frame' has a wrong offset!");
static_assert(offsetof(UWB_ui_Equip_Parts_1_C, Icon_E) == 0x000438, "Member 'UWB_ui_Equip_Parts_1_C::Icon_E' has a wrong offset!");
static_assert(offsetof(UWB_ui_Equip_Parts_1_C, Noise) == 0x000440, "Member 'UWB_ui_Equip_Parts_1_C::Noise' has a wrong offset!");
static_assert(offsetof(UWB_ui_Equip_Parts_1_C, Select_Base) == 0x000448, "Member 'UWB_ui_Equip_Parts_1_C::Select_Base' has a wrong offset!");
static_assert(offsetof(UWB_ui_Equip_Parts_1_C, IsEnable) == 0x000450, "Member 'UWB_ui_Equip_Parts_1_C::IsEnable' has a wrong offset!");
static_assert(offsetof(UWB_ui_Equip_Parts_1_C, IsSelect) == 0x000451, "Member 'UWB_ui_Equip_Parts_1_C::IsSelect' has a wrong offset!");
static_assert(offsetof(UWB_ui_Equip_Parts_1_C, IsLock) == 0x000452, "Member 'UWB_ui_Equip_Parts_1_C::IsLock' has a wrong offset!");
static_assert(offsetof(UWB_ui_Equip_Parts_1_C, IsSelectReturn) == 0x000453, "Member 'UWB_ui_Equip_Parts_1_C::IsSelectReturn' has a wrong offset!");
static_assert(offsetof(UWB_ui_Equip_Parts_1_C, IsInParty) == 0x000454, "Member 'UWB_ui_Equip_Parts_1_C::IsInParty' has a wrong offset!");
static_assert(offsetof(UWB_ui_Equip_Parts_1_C, IsLockSelect) == 0x000455, "Member 'UWB_ui_Equip_Parts_1_C::IsLockSelect' has a wrong offset!");
static_assert(offsetof(UWB_ui_Equip_Parts_1_C, IsStartLockSelect) == 0x000456, "Member 'UWB_ui_Equip_Parts_1_C::IsStartLockSelect' has a wrong offset!");
static_assert(offsetof(UWB_ui_Equip_Parts_1_C, IsPressLeft) == 0x000457, "Member 'UWB_ui_Equip_Parts_1_C::IsPressLeft' has a wrong offset!");
static_assert(offsetof(UWB_ui_Equip_Parts_1_C, IsPressRight) == 0x000458, "Member 'UWB_ui_Equip_Parts_1_C::IsPressRight' has a wrong offset!");

}

