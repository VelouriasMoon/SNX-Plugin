#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PlayerDamageReactionInfo

#include "Basic.hpp"

#include "BP_PlayerDamageReactionInfo_classes.hpp"
#include "BP_PlayerDamageReactionInfo_parameters.hpp"


namespace SDK
{

// Function BP_PlayerDamageReactionInfo.BP_PlayerDamageReactionInfo_C.ExecuteUbergraph_BP_PlayerDamageReactionInfo
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerDamageReactionInfo_C::ExecuteUbergraph_BP_PlayerDamageReactionInfo(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerDamageReactionInfo_C", "ExecuteUbergraph_BP_PlayerDamageReactionInfo");

	Params::BP_PlayerDamageReactionInfo_C_ExecuteUbergraph_BP_PlayerDamageReactionInfo Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerDamageReactionInfo.BP_PlayerDamageReactionInfo_C.EnpcBrainCrashWaitTick
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerDamageReactionInfo_C::EnpcBrainCrashWaitTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerDamageReactionInfo_C", "EnpcBrainCrashWaitTick");

	Params::BP_PlayerDamageReactionInfo_C_EnpcBrainCrashWaitTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerDamageReactionInfo.BP_PlayerDamageReactionInfo_C.UnbindEnpcBrainCrashWaitTick
// (BlueprintCallable, BlueprintEvent)

void UBP_PlayerDamageReactionInfo_C::UnbindEnpcBrainCrashWaitTick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerDamageReactionInfo_C", "UnbindEnpcBrainCrashWaitTick");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerDamageReactionInfo.BP_PlayerDamageReactionInfo_C.BindEnpcBrainCrashWaitTick
// (BlueprintCallable, BlueprintEvent)

void UBP_PlayerDamageReactionInfo_C::BindEnpcBrainCrashWaitTick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerDamageReactionInfo_C", "BindEnpcBrainCrashWaitTick");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerDamageReactionInfo.BP_PlayerDamageReactionInfo_C.BrainCrashAccess
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FHCHitResult                     HitResult                                              (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)

void UBP_PlayerDamageReactionInfo_C::BrainCrashAccess(const struct FHCHitResult& HitResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerDamageReactionInfo_C", "BrainCrashAccess");

	Params::BP_PlayerDamageReactionInfo_C_BrainCrashAccess Parms{};

	Parms.HitResult = std::move(HitResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerDamageReactionInfo.BP_PlayerDamageReactionInfo_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerDamageReactionInfo_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerDamageReactionInfo_C", "ReceiveTick");

	Params::BP_PlayerDamageReactionInfo_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerDamageReactionInfo.BP_PlayerDamageReactionInfo_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UBP_PlayerDamageReactionInfo_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerDamageReactionInfo_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerDamageReactionInfo.BP_PlayerDamageReactionInfo_C.UpdateDamageReaction
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FHCHitResult                     HitResult                                              (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)

void UBP_PlayerDamageReactionInfo_C::UpdateDamageReaction(const struct FHCHitResult& HitResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerDamageReactionInfo_C", "UpdateDamageReaction");

	Params::BP_PlayerDamageReactionInfo_C_UpdateDamageReaction Parms{};

	Parms.HitResult = std::move(HitResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerDamageReactionInfo.BP_PlayerDamageReactionInfo_C.Clear
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PlayerDamageReactionInfo_C::Clear()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerDamageReactionInfo_C", "Clear");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerDamageReactionInfo.BP_PlayerDamageReactionInfo_C.ClearAddDamage
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PlayerDamageReactionInfo_C::ClearAddDamage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerDamageReactionInfo_C", "ClearAddDamage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerDamageReactionInfo.BP_PlayerDamageReactionInfo_C.SetBrainFieldWarning
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bTimeUp                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PlayerDamageReactionInfo_C::SetBrainFieldWarning(bool bTimeUp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerDamageReactionInfo_C", "SetBrainFieldWarning");

	Params::BP_PlayerDamageReactionInfo_C_SetBrainFieldWarning Parms{};

	Parms.bTimeUp = bTimeUp;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerDamageReactionInfo.BP_PlayerDamageReactionInfo_C.SetDeadDamage
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bBrainFieldTimeUp                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PlayerDamageReactionInfo_C::SetDeadDamage(bool bBrainFieldTimeUp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerDamageReactionInfo_C", "SetDeadDamage");

	Params::BP_PlayerDamageReactionInfo_C_SetDeadDamage Parms{};

	Parms.bBrainFieldTimeUp = bBrainFieldTimeUp;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerDamageReactionInfo.BP_PlayerDamageReactionInfo_C.SetDamageReaction
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPlayerDamageKind                       Param_DamageKind                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerDamageReactionInfo_C::SetDamageReaction(EPlayerDamageKind Param_DamageKind)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerDamageReactionInfo_C", "SetDamageReaction");

	Params::BP_PlayerDamageReactionInfo_C_SetDamageReaction Parms{};

	Parms.Param_DamageKind = Param_DamageKind;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerDamageReactionInfo.BP_PlayerDamageReactionInfo_C.CheckFinishMetamorphosis_BPImplement
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPlayerENpcBaseComponent*         ENpcComp                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EPlayerDamageKind                       InDamageKind                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFront                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_PlayerDamageReactionInfo_C::CheckFinishMetamorphosis_BPImplement(class UPlayerENpcBaseComponent* ENpcComp, EPlayerDamageKind InDamageKind, bool bFront)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerDamageReactionInfo_C", "CheckFinishMetamorphosis_BPImplement");

	Params::BP_PlayerDamageReactionInfo_C_CheckFinishMetamorphosis_BPImplement Parms{};

	Parms.ENpcComp = ENpcComp;
	Parms.InDamageKind = InDamageKind;
	Parms.bFront = bFront;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_PlayerDamageReactionInfo.BP_PlayerDamageReactionInfo_C.StartEnemyAddDamageShake_BPImplement
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bTriggerAttack                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_PlayerDamageReactionInfo_C::StartEnemyAddDamageShake_BPImplement(bool bTriggerAttack)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerDamageReactionInfo_C", "StartEnemyAddDamageShake_BPImplement");

	Params::BP_PlayerDamageReactionInfo_C_StartEnemyAddDamageShake_BPImplement Parms{};

	Parms.bTriggerAttack = bTriggerAttack;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_PlayerDamageReactionInfo.BP_PlayerDamageReactionInfo_C.BrainCrashAccess_CallFromCPP
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FHCHitResult                     HitResult                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_PlayerDamageReactionInfo_C::BrainCrashAccess_CallFromCPP(const struct FHCHitResult& HitResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerDamageReactionInfo_C", "BrainCrashAccess_CallFromCPP");

	Params::BP_PlayerDamageReactionInfo_C_BrainCrashAccess_CallFromCPP Parms{};

	Parms.HitResult = std::move(HitResult);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_PlayerDamageReactionInfo.BP_PlayerDamageReactionInfo_C.StartEnpcDamageMove_BPImplement
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Param_DamageDir                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Power                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    DeadMove                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_PlayerDamageReactionInfo_C::StartEnpcDamageMove_BPImplement(const struct FVector& Param_DamageDir, float Power, bool DeadMove)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerDamageReactionInfo_C", "StartEnpcDamageMove_BPImplement");

	Params::BP_PlayerDamageReactionInfo_C_StartEnpcDamageMove_BPImplement Parms{};

	Parms.Param_DamageDir = std::move(Param_DamageDir);
	Parms.Power = Power;
	Parms.DeadMove = DeadMove;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_PlayerDamageReactionInfo.BP_PlayerDamageReactionInfo_C.GetDamageReaction
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// EPlayerDamageKind                       ReactionType                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerDamageReactionInfo_C::GetDamageReaction(EPlayerDamageKind* ReactionType) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerDamageReactionInfo_C", "GetDamageReaction");

	Params::BP_PlayerDamageReactionInfo_C_GetDamageReaction Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ReactionType != nullptr)
		*ReactionType = Parms.ReactionType;
}


// Function BP_PlayerDamageReactionInfo.BP_PlayerDamageReactionInfo_C.IsExistDamage
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    bExist                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PlayerDamageReactionInfo_C::IsExistDamage(bool* bExist) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerDamageReactionInfo_C", "IsExistDamage");

	Params::BP_PlayerDamageReactionInfo_C_IsExistDamage Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bExist != nullptr)
		*bExist = Parms.bExist;
}


// Function BP_PlayerDamageReactionInfo.BP_PlayerDamageReactionInfo_C.IsBlow
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    bBlow                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PlayerDamageReactionInfo_C::IsBlow(bool* bBlow) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerDamageReactionInfo_C", "IsBlow");

	Params::BP_PlayerDamageReactionInfo_C_IsBlow Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bBlow != nullptr)
		*bBlow = Parms.bBlow;
}


// Function BP_PlayerDamageReactionInfo.BP_PlayerDamageReactionInfo_C.IsAddDamage
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    Param_bAddDamage                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PlayerDamageReactionInfo_C::IsAddDamage(bool* Param_bAddDamage) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerDamageReactionInfo_C", "IsAddDamage");

	Params::BP_PlayerDamageReactionInfo_C_IsAddDamage Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_bAddDamage != nullptr)
		*Param_bAddDamage = Parms.Param_bAddDamage;
}


// Function BP_PlayerDamageReactionInfo.BP_PlayerDamageReactionInfo_C.CheckReaction
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// bool                                    InReactionChance                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    InForceBlow                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    InForceReactionL                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    InLaunchAttack                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    InForceLaunch                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    InJustDodgeDown                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    InCheckWInce                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   InWinceAccumulation                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   InWinceResistance                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   InKnockBackAccumulation                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   InKnockBackResistance                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   InDownAccumulation                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   InDownResistance                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          InDamageDir                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   InBadStateFlag                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         InFloatingAngle                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    InPsychicObjectUniqueReaction                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// EPlayerDamageKind                       Damage                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerDamageReactionInfo_C::CheckReaction(bool InReactionChance, bool InForceBlow, bool InForceReactionL, bool InLaunchAttack, bool InForceLaunch, bool InJustDodgeDown, bool InCheckWInce, float InWinceAccumulation, float InWinceResistance, float InKnockBackAccumulation, float InKnockBackResistance, float InDownAccumulation, float InDownResistance, const struct FVector& InDamageDir, int32 InBadStateFlag, const struct FRotator& InFloatingAngle, bool InPsychicObjectUniqueReaction, EPlayerDamageKind* Damage) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerDamageReactionInfo_C", "CheckReaction");

	Params::BP_PlayerDamageReactionInfo_C_CheckReaction Parms{};

	Parms.InReactionChance = InReactionChance;
	Parms.InForceBlow = InForceBlow;
	Parms.InForceReactionL = InForceReactionL;
	Parms.InLaunchAttack = InLaunchAttack;
	Parms.InForceLaunch = InForceLaunch;
	Parms.InJustDodgeDown = InJustDodgeDown;
	Parms.InCheckWInce = InCheckWInce;
	Parms.InWinceAccumulation = InWinceAccumulation;
	Parms.InWinceResistance = InWinceResistance;
	Parms.InKnockBackAccumulation = InKnockBackAccumulation;
	Parms.InKnockBackResistance = InKnockBackResistance;
	Parms.InDownAccumulation = InDownAccumulation;
	Parms.InDownResistance = InDownResistance;
	Parms.InDamageDir = std::move(InDamageDir);
	Parms.InBadStateFlag = InBadStateFlag;
	Parms.InFloatingAngle = std::move(InFloatingAngle);
	Parms.InPsychicObjectUniqueReaction = InPsychicObjectUniqueReaction;

	UObject::ProcessEvent(Func, &Parms);

	if (Damage != nullptr)
		*Damage = Parms.Damage;
}


// Function BP_PlayerDamageReactionInfo.BP_PlayerDamageReactionInfo_C.IsAerialDamage
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// bool                                    bAerial                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PlayerDamageReactionInfo_C::IsAerialDamage(bool* bAerial) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerDamageReactionInfo_C", "IsAerialDamage");

	Params::BP_PlayerDamageReactionInfo_C_IsAerialDamage Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bAerial != nullptr)
		*bAerial = Parms.bAerial;
}

}

