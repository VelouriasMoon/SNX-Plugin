#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MenuPlayerBase

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "BattlePrototype_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_MenuPlayerBase.BP_MenuPlayerBase_C.ExecuteUbergraph_BP_MenuPlayerBase
// 0x0020 (0x0020 - 0x0000)
struct BP_MenuPlayerBase_C_ExecuteUbergraph_BP_MenuPlayerBase final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_GetCharacterInfiniteBoundsSockets_Sockets; // 0x0008(0x0010)(ReferenceParm, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MenuPlayerBase_C_ExecuteUbergraph_BP_MenuPlayerBase) == 0x000008, "Wrong alignment on BP_MenuPlayerBase_C_ExecuteUbergraph_BP_MenuPlayerBase");
static_assert(sizeof(BP_MenuPlayerBase_C_ExecuteUbergraph_BP_MenuPlayerBase) == 0x000020, "Wrong size on BP_MenuPlayerBase_C_ExecuteUbergraph_BP_MenuPlayerBase");
static_assert(offsetof(BP_MenuPlayerBase_C_ExecuteUbergraph_BP_MenuPlayerBase, EntryPoint) == 0x000000, "Member 'BP_MenuPlayerBase_C_ExecuteUbergraph_BP_MenuPlayerBase::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_ExecuteUbergraph_BP_MenuPlayerBase, K2Node_Event_DeltaSeconds) == 0x000004, "Member 'BP_MenuPlayerBase_C_ExecuteUbergraph_BP_MenuPlayerBase::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_ExecuteUbergraph_BP_MenuPlayerBase, CallFunc_GetCharacterInfiniteBoundsSockets_Sockets) == 0x000008, "Member 'BP_MenuPlayerBase_C_ExecuteUbergraph_BP_MenuPlayerBase::CallFunc_GetCharacterInfiniteBoundsSockets_Sockets' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_ExecuteUbergraph_BP_MenuPlayerBase, K2Node_Event_EndPlayReason) == 0x000018, "Member 'BP_MenuPlayerBase_C_ExecuteUbergraph_BP_MenuPlayerBase::K2Node_Event_EndPlayReason' has a wrong offset!");

// Function BP_MenuPlayerBase.BP_MenuPlayerBase_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_MenuPlayerBase_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MenuPlayerBase_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BP_MenuPlayerBase_C_ReceiveEndPlay");
static_assert(sizeof(BP_MenuPlayerBase_C_ReceiveEndPlay) == 0x000001, "Wrong size on BP_MenuPlayerBase_C_ReceiveEndPlay");
static_assert(offsetof(BP_MenuPlayerBase_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BP_MenuPlayerBase_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BP_MenuPlayerBase.BP_MenuPlayerBase_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_MenuPlayerBase_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MenuPlayerBase_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_MenuPlayerBase_C_ReceiveTick");
static_assert(sizeof(BP_MenuPlayerBase_C_ReceiveTick) == 0x000004, "Wrong size on BP_MenuPlayerBase_C_ReceiveTick");
static_assert(offsetof(BP_MenuPlayerBase_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_MenuPlayerBase_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_MenuPlayerBase.BP_MenuPlayerBase_C.StartUIMainAnimation
// 0x0028 (0x0028 - 0x0000)
struct BP_MenuPlayerBase_C_StartUIMainAnimation final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class USkeletalMeshComponent*>         CallFunc_GetWeaponMeshes_Meshes;                   // 0x0008(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MenuPlayerBase_C_StartUIMainAnimation) == 0x000008, "Wrong alignment on BP_MenuPlayerBase_C_StartUIMainAnimation");
static_assert(sizeof(BP_MenuPlayerBase_C_StartUIMainAnimation) == 0x000028, "Wrong size on BP_MenuPlayerBase_C_StartUIMainAnimation");
static_assert(offsetof(BP_MenuPlayerBase_C_StartUIMainAnimation, Temp_int_Variable) == 0x000000, "Member 'BP_MenuPlayerBase_C_StartUIMainAnimation::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_StartUIMainAnimation, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'BP_MenuPlayerBase_C_StartUIMainAnimation::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_StartUIMainAnimation, CallFunc_GetWeaponMeshes_Meshes) == 0x000008, "Member 'BP_MenuPlayerBase_C_StartUIMainAnimation::CallFunc_GetWeaponMeshes_Meshes' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_StartUIMainAnimation, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_MenuPlayerBase_C_StartUIMainAnimation::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_StartUIMainAnimation, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_MenuPlayerBase_C_StartUIMainAnimation::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_StartUIMainAnimation, CallFunc_Less_IntInt_ReturnValue) == 0x000024, "Member 'BP_MenuPlayerBase_C_StartUIMainAnimation::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_MenuPlayerBase.BP_MenuPlayerBase_C.LoadAsset
// 0x0060 (0x0060 - 0x0000)
struct BP_MenuPlayerBase_C_LoadAsset final
{
public:
	TArray<class UAnimMontage*>                   CallFunc_PrivateLoadMontage_MontageObject;         // 0x0000(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<class UAnimMontage*>                   CallFunc_PrivateLoadMontage_MontageObject_1;       // 0x0010(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<class UAnimMontage*>                   CallFunc_PrivateLoadMontage_MontageObject_2;       // 0x0020(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<class UAnimMontage*>                   CallFunc_PrivateLoadMontage_MontageObject_3;       // 0x0030(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<class UAnimMontage*>                   CallFunc_PrivateLoadMontage_MontageObject_4;       // 0x0040(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<class UAnimMontage*>                   CallFunc_PrivateLoadMontage_MontageObject_5;       // 0x0050(0x0010)(ReferenceParm, HasGetValueTypeHash)
};
static_assert(alignof(BP_MenuPlayerBase_C_LoadAsset) == 0x000008, "Wrong alignment on BP_MenuPlayerBase_C_LoadAsset");
static_assert(sizeof(BP_MenuPlayerBase_C_LoadAsset) == 0x000060, "Wrong size on BP_MenuPlayerBase_C_LoadAsset");
static_assert(offsetof(BP_MenuPlayerBase_C_LoadAsset, CallFunc_PrivateLoadMontage_MontageObject) == 0x000000, "Member 'BP_MenuPlayerBase_C_LoadAsset::CallFunc_PrivateLoadMontage_MontageObject' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_LoadAsset, CallFunc_PrivateLoadMontage_MontageObject_1) == 0x000010, "Member 'BP_MenuPlayerBase_C_LoadAsset::CallFunc_PrivateLoadMontage_MontageObject_1' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_LoadAsset, CallFunc_PrivateLoadMontage_MontageObject_2) == 0x000020, "Member 'BP_MenuPlayerBase_C_LoadAsset::CallFunc_PrivateLoadMontage_MontageObject_2' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_LoadAsset, CallFunc_PrivateLoadMontage_MontageObject_3) == 0x000030, "Member 'BP_MenuPlayerBase_C_LoadAsset::CallFunc_PrivateLoadMontage_MontageObject_3' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_LoadAsset, CallFunc_PrivateLoadMontage_MontageObject_4) == 0x000040, "Member 'BP_MenuPlayerBase_C_LoadAsset::CallFunc_PrivateLoadMontage_MontageObject_4' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_LoadAsset, CallFunc_PrivateLoadMontage_MontageObject_5) == 0x000050, "Member 'BP_MenuPlayerBase_C_LoadAsset::CallFunc_PrivateLoadMontage_MontageObject_5' has a wrong offset!");

// Function BP_MenuPlayerBase.BP_MenuPlayerBase_C.PrivateSetupVisibility
// 0x0060 (0x0060 - 0x0000)
struct BP_MenuPlayerBase_C_PrivateSetupVisibility final
{
public:
	TArray<class FName>                           MaterialSlotName;                                  // 0x0000(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_EventManager_C*                     CallFunc_GetEventManager_EventManager;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsWireVisibleOffEvent_IsOffWireEvent;     // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8BA8[0x1];                                     // 0x0023(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8BA9[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_GetMaterialSlotNames_ReturnValue;         // 0x0030(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8BAA[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_FindSubstring_ReturnValue;                // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MenuPlayerBase_C_PrivateSetupVisibility) == 0x000008, "Wrong alignment on BP_MenuPlayerBase_C_PrivateSetupVisibility");
static_assert(sizeof(BP_MenuPlayerBase_C_PrivateSetupVisibility) == 0x000060, "Wrong size on BP_MenuPlayerBase_C_PrivateSetupVisibility");
static_assert(offsetof(BP_MenuPlayerBase_C_PrivateSetupVisibility, MaterialSlotName) == 0x000000, "Member 'BP_MenuPlayerBase_C_PrivateSetupVisibility::MaterialSlotName' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_PrivateSetupVisibility, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_MenuPlayerBase_C_PrivateSetupVisibility::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_PrivateSetupVisibility, Temp_int_Loop_Num_Variable) == 0x000014, "Member 'BP_MenuPlayerBase_C_PrivateSetupVisibility::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_PrivateSetupVisibility, CallFunc_GetEventManager_EventManager) == 0x000018, "Member 'BP_MenuPlayerBase_C_PrivateSetupVisibility::CallFunc_GetEventManager_EventManager' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_PrivateSetupVisibility, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_MenuPlayerBase_C_PrivateSetupVisibility::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_PrivateSetupVisibility, CallFunc_IsWireVisibleOffEvent_IsOffWireEvent) == 0x000021, "Member 'BP_MenuPlayerBase_C_PrivateSetupVisibility::CallFunc_IsWireVisibleOffEvent_IsOffWireEvent' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_PrivateSetupVisibility, CallFunc_Not_PreBool_ReturnValue) == 0x000022, "Member 'BP_MenuPlayerBase_C_PrivateSetupVisibility::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_PrivateSetupVisibility, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'BP_MenuPlayerBase_C_PrivateSetupVisibility::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_PrivateSetupVisibility, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'BP_MenuPlayerBase_C_PrivateSetupVisibility::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_PrivateSetupVisibility, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'BP_MenuPlayerBase_C_PrivateSetupVisibility::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_PrivateSetupVisibility, CallFunc_GetMaterialSlotNames_ReturnValue) == 0x000030, "Member 'BP_MenuPlayerBase_C_PrivateSetupVisibility::CallFunc_GetMaterialSlotNames_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_PrivateSetupVisibility, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'BP_MenuPlayerBase_C_PrivateSetupVisibility::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_PrivateSetupVisibility, CallFunc_Conv_NameToString_ReturnValue) == 0x000048, "Member 'BP_MenuPlayerBase_C_PrivateSetupVisibility::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_PrivateSetupVisibility, CallFunc_FindSubstring_ReturnValue) == 0x000058, "Member 'BP_MenuPlayerBase_C_PrivateSetupVisibility::CallFunc_FindSubstring_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_PrivateSetupVisibility, CallFunc_Greater_IntInt_ReturnValue) == 0x00005C, "Member 'BP_MenuPlayerBase_C_PrivateSetupVisibility::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_PrivateSetupVisibility, CallFunc_IsValid_ReturnValue_1) == 0x00005D, "Member 'BP_MenuPlayerBase_C_PrivateSetupVisibility::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_MenuPlayerBase.BP_MenuPlayerBase_C.StartUIMainEquipAnimation
// 0x0048 (0x0048 - 0x0000)
struct BP_MenuPlayerBase_C_StartUIMainEquipAnimation final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8BAB[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8BAC[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USkeletalMeshComponent*>         CallFunc_GetWeaponMeshes_Meshes;                   // 0x0020(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8BAD[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MenuPlayerBase_C_StartUIMainEquipAnimation) == 0x000008, "Wrong alignment on BP_MenuPlayerBase_C_StartUIMainEquipAnimation");
static_assert(sizeof(BP_MenuPlayerBase_C_StartUIMainEquipAnimation) == 0x000048, "Wrong size on BP_MenuPlayerBase_C_StartUIMainEquipAnimation");
static_assert(offsetof(BP_MenuPlayerBase_C_StartUIMainEquipAnimation, Temp_int_Variable) == 0x000000, "Member 'BP_MenuPlayerBase_C_StartUIMainEquipAnimation::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_StartUIMainEquipAnimation, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'BP_MenuPlayerBase_C_StartUIMainEquipAnimation::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_StartUIMainEquipAnimation, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_MenuPlayerBase_C_StartUIMainEquipAnimation::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_StartUIMainEquipAnimation, Temp_int_Loop_Num_Variable) == 0x00000C, "Member 'BP_MenuPlayerBase_C_StartUIMainEquipAnimation::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_StartUIMainEquipAnimation, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'BP_MenuPlayerBase_C_StartUIMainEquipAnimation::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_StartUIMainEquipAnimation, CallFunc_Less_IntInt_ReturnValue) == 0x000014, "Member 'BP_MenuPlayerBase_C_StartUIMainEquipAnimation::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_StartUIMainEquipAnimation, CallFunc_Add_IntInt_ReturnValue_1) == 0x000018, "Member 'BP_MenuPlayerBase_C_StartUIMainEquipAnimation::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_StartUIMainEquipAnimation, CallFunc_GetWeaponMeshes_Meshes) == 0x000020, "Member 'BP_MenuPlayerBase_C_StartUIMainEquipAnimation::CallFunc_GetWeaponMeshes_Meshes' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_StartUIMainEquipAnimation, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BP_MenuPlayerBase_C_StartUIMainEquipAnimation::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_StartUIMainEquipAnimation, CallFunc_Array_Get_Item) == 0x000038, "Member 'BP_MenuPlayerBase_C_StartUIMainEquipAnimation::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_StartUIMainEquipAnimation, CallFunc_Array_Length_ReturnValue_1) == 0x000040, "Member 'BP_MenuPlayerBase_C_StartUIMainEquipAnimation::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_StartUIMainEquipAnimation, CallFunc_Less_IntInt_ReturnValue_1) == 0x000044, "Member 'BP_MenuPlayerBase_C_StartUIMainEquipAnimation::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_MenuPlayerBase.BP_MenuPlayerBase_C.StartUIMainCostumeAnimation
// 0x0028 (0x0028 - 0x0000)
struct BP_MenuPlayerBase_C_StartUIMainCostumeAnimation final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class USkeletalMeshComponent*>         CallFunc_GetWeaponMeshes_Meshes;                   // 0x0008(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MenuPlayerBase_C_StartUIMainCostumeAnimation) == 0x000008, "Wrong alignment on BP_MenuPlayerBase_C_StartUIMainCostumeAnimation");
static_assert(sizeof(BP_MenuPlayerBase_C_StartUIMainCostumeAnimation) == 0x000028, "Wrong size on BP_MenuPlayerBase_C_StartUIMainCostumeAnimation");
static_assert(offsetof(BP_MenuPlayerBase_C_StartUIMainCostumeAnimation, Temp_int_Variable) == 0x000000, "Member 'BP_MenuPlayerBase_C_StartUIMainCostumeAnimation::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_StartUIMainCostumeAnimation, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'BP_MenuPlayerBase_C_StartUIMainCostumeAnimation::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_StartUIMainCostumeAnimation, CallFunc_GetWeaponMeshes_Meshes) == 0x000008, "Member 'BP_MenuPlayerBase_C_StartUIMainCostumeAnimation::CallFunc_GetWeaponMeshes_Meshes' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_StartUIMainCostumeAnimation, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_MenuPlayerBase_C_StartUIMainCostumeAnimation::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_StartUIMainCostumeAnimation, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_MenuPlayerBase_C_StartUIMainCostumeAnimation::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_StartUIMainCostumeAnimation, CallFunc_Less_IntInt_ReturnValue) == 0x000024, "Member 'BP_MenuPlayerBase_C_StartUIMainCostumeAnimation::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_MenuPlayerBase.BP_MenuPlayerBase_C.SetRenderLayer
// 0x0058 (0x0058 - 0x0000)
struct BP_MenuPlayerBase_C_SetRenderLayer final
{
public:
	uint8                                         Layer;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8BAE[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        Component;                                         // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class USceneComponent*>                Components;                                        // 0x0010(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8BAF[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_DynamicCast_AsPrimitive_Component;          // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8BB0[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USceneComponent*>                CallFunc_GetChildrenComponents_Children;           // 0x0048(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(BP_MenuPlayerBase_C_SetRenderLayer) == 0x000008, "Wrong alignment on BP_MenuPlayerBase_C_SetRenderLayer");
static_assert(sizeof(BP_MenuPlayerBase_C_SetRenderLayer) == 0x000058, "Wrong size on BP_MenuPlayerBase_C_SetRenderLayer");
static_assert(offsetof(BP_MenuPlayerBase_C_SetRenderLayer, Layer) == 0x000000, "Member 'BP_MenuPlayerBase_C_SetRenderLayer::Layer' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetRenderLayer, Component) == 0x000008, "Member 'BP_MenuPlayerBase_C_SetRenderLayer::Component' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetRenderLayer, Components) == 0x000010, "Member 'BP_MenuPlayerBase_C_SetRenderLayer::Components' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetRenderLayer, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_MenuPlayerBase_C_SetRenderLayer::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetRenderLayer, Temp_int_Array_Index_Variable) == 0x000024, "Member 'BP_MenuPlayerBase_C_SetRenderLayer::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetRenderLayer, Temp_int_Loop_Num_Variable) == 0x000028, "Member 'BP_MenuPlayerBase_C_SetRenderLayer::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetRenderLayer, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'BP_MenuPlayerBase_C_SetRenderLayer::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetRenderLayer, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'BP_MenuPlayerBase_C_SetRenderLayer::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetRenderLayer, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'BP_MenuPlayerBase_C_SetRenderLayer::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetRenderLayer, K2Node_DynamicCast_AsPrimitive_Component) == 0x000038, "Member 'BP_MenuPlayerBase_C_SetRenderLayer::K2Node_DynamicCast_AsPrimitive_Component' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetRenderLayer, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_MenuPlayerBase_C_SetRenderLayer::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetRenderLayer, CallFunc_GetChildrenComponents_Children) == 0x000048, "Member 'BP_MenuPlayerBase_C_SetRenderLayer::CallFunc_GetChildrenComponents_Children' has a wrong offset!");

// Function BP_MenuPlayerBase.BP_MenuPlayerBase_C.SetLightChannel
// 0x0058 (0x0058 - 0x0000)
struct BP_MenuPlayerBase_C_SetLightChannel final
{
public:
	bool                                          Channel0;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Channel1;                                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Channel2;                                          // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8BB1[0x5];                                     // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        Component;                                         // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class USceneComponent*>                Components;                                        // 0x0010(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8BB2[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_DynamicCast_AsPrimitive_Component;          // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8BB3[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USceneComponent*>                CallFunc_GetChildrenComponents_Children;           // 0x0048(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(BP_MenuPlayerBase_C_SetLightChannel) == 0x000008, "Wrong alignment on BP_MenuPlayerBase_C_SetLightChannel");
static_assert(sizeof(BP_MenuPlayerBase_C_SetLightChannel) == 0x000058, "Wrong size on BP_MenuPlayerBase_C_SetLightChannel");
static_assert(offsetof(BP_MenuPlayerBase_C_SetLightChannel, Channel0) == 0x000000, "Member 'BP_MenuPlayerBase_C_SetLightChannel::Channel0' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetLightChannel, Channel1) == 0x000001, "Member 'BP_MenuPlayerBase_C_SetLightChannel::Channel1' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetLightChannel, Channel2) == 0x000002, "Member 'BP_MenuPlayerBase_C_SetLightChannel::Channel2' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetLightChannel, Component) == 0x000008, "Member 'BP_MenuPlayerBase_C_SetLightChannel::Component' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetLightChannel, Components) == 0x000010, "Member 'BP_MenuPlayerBase_C_SetLightChannel::Components' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetLightChannel, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_MenuPlayerBase_C_SetLightChannel::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetLightChannel, Temp_int_Array_Index_Variable) == 0x000024, "Member 'BP_MenuPlayerBase_C_SetLightChannel::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetLightChannel, Temp_int_Loop_Num_Variable) == 0x000028, "Member 'BP_MenuPlayerBase_C_SetLightChannel::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetLightChannel, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'BP_MenuPlayerBase_C_SetLightChannel::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetLightChannel, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'BP_MenuPlayerBase_C_SetLightChannel::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetLightChannel, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'BP_MenuPlayerBase_C_SetLightChannel::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetLightChannel, K2Node_DynamicCast_AsPrimitive_Component) == 0x000038, "Member 'BP_MenuPlayerBase_C_SetLightChannel::K2Node_DynamicCast_AsPrimitive_Component' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetLightChannel, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_MenuPlayerBase_C_SetLightChannel::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetLightChannel, CallFunc_GetChildrenComponents_Children) == 0x000048, "Member 'BP_MenuPlayerBase_C_SetLightChannel::CallFunc_GetChildrenComponents_Children' has a wrong offset!");

// Function BP_MenuPlayerBase.BP_MenuPlayerBase_C.SetPauseFlag
// 0x0048 (0x0048 - 0x0000)
struct BP_MenuPlayerBase_C_SetPauseFlag final
{
public:
	int32                                         PauseFlag;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8BB4[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        Component;                                         // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class USceneComponent*>                Components;                                        // 0x0010(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8BB5[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class USceneComponent*>                CallFunc_GetChildrenComponents_Children;           // 0x0038(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(BP_MenuPlayerBase_C_SetPauseFlag) == 0x000008, "Wrong alignment on BP_MenuPlayerBase_C_SetPauseFlag");
static_assert(sizeof(BP_MenuPlayerBase_C_SetPauseFlag) == 0x000048, "Wrong size on BP_MenuPlayerBase_C_SetPauseFlag");
static_assert(offsetof(BP_MenuPlayerBase_C_SetPauseFlag, PauseFlag) == 0x000000, "Member 'BP_MenuPlayerBase_C_SetPauseFlag::PauseFlag' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetPauseFlag, Component) == 0x000008, "Member 'BP_MenuPlayerBase_C_SetPauseFlag::Component' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetPauseFlag, Components) == 0x000010, "Member 'BP_MenuPlayerBase_C_SetPauseFlag::Components' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetPauseFlag, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_MenuPlayerBase_C_SetPauseFlag::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetPauseFlag, Temp_int_Array_Index_Variable) == 0x000024, "Member 'BP_MenuPlayerBase_C_SetPauseFlag::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetPauseFlag, Temp_int_Loop_Num_Variable) == 0x000028, "Member 'BP_MenuPlayerBase_C_SetPauseFlag::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetPauseFlag, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'BP_MenuPlayerBase_C_SetPauseFlag::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetPauseFlag, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'BP_MenuPlayerBase_C_SetPauseFlag::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetPauseFlag, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'BP_MenuPlayerBase_C_SetPauseFlag::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetPauseFlag, CallFunc_GetChildrenComponents_Children) == 0x000038, "Member 'BP_MenuPlayerBase_C_SetPauseFlag::CallFunc_GetChildrenComponents_Children' has a wrong offset!");

// Function BP_MenuPlayerBase.BP_MenuPlayerBase_C.SwitchWeaponBattle
// 0x001C (0x001C - 0x0000)
struct BP_MenuPlayerBase_C_SwitchWeaponBattle final
{
public:
	bool                                          Battle;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8BB6[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   SocketName;                                        // 0x0004(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8BB7[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Select_Default;                             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MenuPlayerBase_C_SwitchWeaponBattle) == 0x000004, "Wrong alignment on BP_MenuPlayerBase_C_SwitchWeaponBattle");
static_assert(sizeof(BP_MenuPlayerBase_C_SwitchWeaponBattle) == 0x00001C, "Wrong size on BP_MenuPlayerBase_C_SwitchWeaponBattle");
static_assert(offsetof(BP_MenuPlayerBase_C_SwitchWeaponBattle, Battle) == 0x000000, "Member 'BP_MenuPlayerBase_C_SwitchWeaponBattle::Battle' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SwitchWeaponBattle, SocketName) == 0x000004, "Member 'BP_MenuPlayerBase_C_SwitchWeaponBattle::SocketName' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SwitchWeaponBattle, Temp_bool_Variable) == 0x00000C, "Member 'BP_MenuPlayerBase_C_SwitchWeaponBattle::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SwitchWeaponBattle, K2Node_Select_Default) == 0x000010, "Member 'BP_MenuPlayerBase_C_SwitchWeaponBattle::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SwitchWeaponBattle, CallFunc_K2_AttachToComponent_ReturnValue) == 0x000018, "Member 'BP_MenuPlayerBase_C_SwitchWeaponBattle::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");

// Function BP_MenuPlayerBase.BP_MenuPlayerBase_C.BeginSASTelepo
// 0x0004 (0x0004 - 0x0000)
struct BP_MenuPlayerBase_C_BeginSASTelepo final
{
public:
	float                                         DisappearTime;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MenuPlayerBase_C_BeginSASTelepo) == 0x000004, "Wrong alignment on BP_MenuPlayerBase_C_BeginSASTelepo");
static_assert(sizeof(BP_MenuPlayerBase_C_BeginSASTelepo) == 0x000004, "Wrong size on BP_MenuPlayerBase_C_BeginSASTelepo");
static_assert(offsetof(BP_MenuPlayerBase_C_BeginSASTelepo, DisappearTime) == 0x000000, "Member 'BP_MenuPlayerBase_C_BeginSASTelepo::DisappearTime' has a wrong offset!");

// Function BP_MenuPlayerBase.BP_MenuPlayerBase_C.EndSASTelepo
// 0x0004 (0x0004 - 0x0000)
struct BP_MenuPlayerBase_C_EndSASTelepo final
{
public:
	float                                         AppearTime;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MenuPlayerBase_C_EndSASTelepo) == 0x000004, "Wrong alignment on BP_MenuPlayerBase_C_EndSASTelepo");
static_assert(sizeof(BP_MenuPlayerBase_C_EndSASTelepo) == 0x000004, "Wrong size on BP_MenuPlayerBase_C_EndSASTelepo");
static_assert(offsetof(BP_MenuPlayerBase_C_EndSASTelepo, AppearTime) == 0x000000, "Member 'BP_MenuPlayerBase_C_EndSASTelepo::AppearTime' has a wrong offset!");

// Function BP_MenuPlayerBase.BP_MenuPlayerBase_C.UpdateTelepo
// 0x0040 (0x0040 - 0x0000)
struct BP_MenuPlayerBase_C_UpdateTelepo final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8BB8[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8BB9[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USkeletalMeshComponent*>         CallFunc_GetWeaponMeshes_Meshes;                   // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsOver_ReturnValue;                       // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8BBA[0x2];                                     // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRate_ReturnValue;                      // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEnable_ReturnValue;                     // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MenuPlayerBase_C_UpdateTelepo) == 0x000008, "Wrong alignment on BP_MenuPlayerBase_C_UpdateTelepo");
static_assert(sizeof(BP_MenuPlayerBase_C_UpdateTelepo) == 0x000040, "Wrong size on BP_MenuPlayerBase_C_UpdateTelepo");
static_assert(offsetof(BP_MenuPlayerBase_C_UpdateTelepo, Temp_int_Variable) == 0x000000, "Member 'BP_MenuPlayerBase_C_UpdateTelepo::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_UpdateTelepo, Temp_bool_Variable) == 0x000004, "Member 'BP_MenuPlayerBase_C_UpdateTelepo::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_UpdateTelepo, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_MenuPlayerBase_C_UpdateTelepo::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_UpdateTelepo, CallFunc_GetWeaponMeshes_Meshes) == 0x000010, "Member 'BP_MenuPlayerBase_C_UpdateTelepo::CallFunc_GetWeaponMeshes_Meshes' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_UpdateTelepo, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_MenuPlayerBase_C_UpdateTelepo::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_UpdateTelepo, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_MenuPlayerBase_C_UpdateTelepo::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_UpdateTelepo, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'BP_MenuPlayerBase_C_UpdateTelepo::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_UpdateTelepo, CallFunc_IsOver_ReturnValue) == 0x00002D, "Member 'BP_MenuPlayerBase_C_UpdateTelepo::CallFunc_IsOver_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_UpdateTelepo, CallFunc_GetRate_ReturnValue) == 0x000030, "Member 'BP_MenuPlayerBase_C_UpdateTelepo::CallFunc_GetRate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_UpdateTelepo, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000034, "Member 'BP_MenuPlayerBase_C_UpdateTelepo::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_UpdateTelepo, K2Node_Select_Default) == 0x000038, "Member 'BP_MenuPlayerBase_C_UpdateTelepo::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_UpdateTelepo, CallFunc_IsEnable_ReturnValue) == 0x00003C, "Member 'BP_MenuPlayerBase_C_UpdateTelepo::CallFunc_IsEnable_ReturnValue' has a wrong offset!");

// Function BP_MenuPlayerBase.BP_MenuPlayerBase_C.SetTransAnim
// 0x0001 (0x0001 - 0x0000)
struct BP_MenuPlayerBase_C_SetTransAnim final
{
public:
	bool                                          Battle;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MenuPlayerBase_C_SetTransAnim) == 0x000001, "Wrong alignment on BP_MenuPlayerBase_C_SetTransAnim");
static_assert(sizeof(BP_MenuPlayerBase_C_SetTransAnim) == 0x000001, "Wrong size on BP_MenuPlayerBase_C_SetTransAnim");
static_assert(offsetof(BP_MenuPlayerBase_C_SetTransAnim, Battle) == 0x000000, "Member 'BP_MenuPlayerBase_C_SetTransAnim::Battle' has a wrong offset!");

// Function BP_MenuPlayerBase.BP_MenuPlayerBase_C.GetOptionalMeshes
// 0x0010 (0x0010 - 0x0000)
struct BP_MenuPlayerBase_C_GetOptionalMeshes final
{
public:
	TArray<class USkeletalMeshComponent*>         Meshes;                                            // 0x0000(0x0010)(Parm, OutParm, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(BP_MenuPlayerBase_C_GetOptionalMeshes) == 0x000008, "Wrong alignment on BP_MenuPlayerBase_C_GetOptionalMeshes");
static_assert(sizeof(BP_MenuPlayerBase_C_GetOptionalMeshes) == 0x000010, "Wrong size on BP_MenuPlayerBase_C_GetOptionalMeshes");
static_assert(offsetof(BP_MenuPlayerBase_C_GetOptionalMeshes, Meshes) == 0x000000, "Member 'BP_MenuPlayerBase_C_GetOptionalMeshes::Meshes' has a wrong offset!");

// Function BP_MenuPlayerBase.BP_MenuPlayerBase_C.GetWeaponMeshes
// 0x0020 (0x0020 - 0x0000)
struct BP_MenuPlayerBase_C_GetWeaponMeshes final
{
public:
	TArray<class USkeletalMeshComponent*>         Meshes;                                            // 0x0000(0x0010)(Parm, OutParm, ContainsInstancedReference, HasGetValueTypeHash)
	TArray<class USkeletalMeshComponent*>         K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(BP_MenuPlayerBase_C_GetWeaponMeshes) == 0x000008, "Wrong alignment on BP_MenuPlayerBase_C_GetWeaponMeshes");
static_assert(sizeof(BP_MenuPlayerBase_C_GetWeaponMeshes) == 0x000020, "Wrong size on BP_MenuPlayerBase_C_GetWeaponMeshes");
static_assert(offsetof(BP_MenuPlayerBase_C_GetWeaponMeshes, Meshes) == 0x000000, "Member 'BP_MenuPlayerBase_C_GetWeaponMeshes::Meshes' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_GetWeaponMeshes, K2Node_MakeArray_Array) == 0x000010, "Member 'BP_MenuPlayerBase_C_GetWeaponMeshes::K2Node_MakeArray_Array' has a wrong offset!");

// Function BP_MenuPlayerBase.BP_MenuPlayerBase_C.SetMaterialScalarParameter
// 0x0070 (0x0070 - 0x0000)
struct BP_MenuPlayerBase_C_SetMaterialScalarParameter final
{
public:
	class FName                                   ParamName;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Value;                                             // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Player;                                            // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Weapon;                                            // 0x000D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8BBB[0x2];                                     // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8BBC[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Num_Variable_1;                      // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8BBD[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USkeletalMeshComponent*>         CallFunc_GetWeaponMeshes_Meshes;                   // 0x0030(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8BBE[0x3];                                     // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USkeletalMeshComponent*>         CallFunc_GetOptionalMeshes_Meshes;                 // 0x0048(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8BBF[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8BC0[0x3];                                     // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MenuPlayerBase_C_SetMaterialScalarParameter) == 0x000008, "Wrong alignment on BP_MenuPlayerBase_C_SetMaterialScalarParameter");
static_assert(sizeof(BP_MenuPlayerBase_C_SetMaterialScalarParameter) == 0x000070, "Wrong size on BP_MenuPlayerBase_C_SetMaterialScalarParameter");
static_assert(offsetof(BP_MenuPlayerBase_C_SetMaterialScalarParameter, ParamName) == 0x000000, "Member 'BP_MenuPlayerBase_C_SetMaterialScalarParameter::ParamName' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetMaterialScalarParameter, Value) == 0x000008, "Member 'BP_MenuPlayerBase_C_SetMaterialScalarParameter::Value' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetMaterialScalarParameter, Player) == 0x00000C, "Member 'BP_MenuPlayerBase_C_SetMaterialScalarParameter::Player' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetMaterialScalarParameter, Weapon) == 0x00000D, "Member 'BP_MenuPlayerBase_C_SetMaterialScalarParameter::Weapon' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetMaterialScalarParameter, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_MenuPlayerBase_C_SetMaterialScalarParameter::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetMaterialScalarParameter, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'BP_MenuPlayerBase_C_SetMaterialScalarParameter::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetMaterialScalarParameter, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_MenuPlayerBase_C_SetMaterialScalarParameter::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetMaterialScalarParameter, Temp_int_Array_Index_Variable_1) == 0x00001C, "Member 'BP_MenuPlayerBase_C_SetMaterialScalarParameter::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetMaterialScalarParameter, Temp_int_Loop_Num_Variable) == 0x000020, "Member 'BP_MenuPlayerBase_C_SetMaterialScalarParameter::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetMaterialScalarParameter, CallFunc_Less_IntInt_ReturnValue) == 0x000024, "Member 'BP_MenuPlayerBase_C_SetMaterialScalarParameter::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetMaterialScalarParameter, Temp_int_Loop_Num_Variable_1) == 0x000028, "Member 'BP_MenuPlayerBase_C_SetMaterialScalarParameter::Temp_int_Loop_Num_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetMaterialScalarParameter, CallFunc_GetWeaponMeshes_Meshes) == 0x000030, "Member 'BP_MenuPlayerBase_C_SetMaterialScalarParameter::CallFunc_GetWeaponMeshes_Meshes' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetMaterialScalarParameter, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'BP_MenuPlayerBase_C_SetMaterialScalarParameter::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetMaterialScalarParameter, CallFunc_IsValid_ReturnValue) == 0x000044, "Member 'BP_MenuPlayerBase_C_SetMaterialScalarParameter::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetMaterialScalarParameter, CallFunc_GetOptionalMeshes_Meshes) == 0x000048, "Member 'BP_MenuPlayerBase_C_SetMaterialScalarParameter::CallFunc_GetOptionalMeshes_Meshes' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetMaterialScalarParameter, CallFunc_IsValid_ReturnValue_1) == 0x000058, "Member 'BP_MenuPlayerBase_C_SetMaterialScalarParameter::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetMaterialScalarParameter, CallFunc_Array_Length_ReturnValue_1) == 0x00005C, "Member 'BP_MenuPlayerBase_C_SetMaterialScalarParameter::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetMaterialScalarParameter, Temp_int_Loop_Counter_Variable_1) == 0x000060, "Member 'BP_MenuPlayerBase_C_SetMaterialScalarParameter::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetMaterialScalarParameter, CallFunc_Less_IntInt_ReturnValue_1) == 0x000064, "Member 'BP_MenuPlayerBase_C_SetMaterialScalarParameter::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetMaterialScalarParameter, CallFunc_Add_IntInt_ReturnValue_1) == 0x000068, "Member 'BP_MenuPlayerBase_C_SetMaterialScalarParameter::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_MenuPlayerBase.BP_MenuPlayerBase_C.SetMaterialVectorParameter
// 0x0070 (0x0070 - 0x0000)
struct BP_MenuPlayerBase_C_SetMaterialVectorParameter final
{
public:
	class FName                                   ParamName;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Value;                                             // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Player;                                            // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Weapon;                                            // 0x0019(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8BC1[0x2];                                     // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8BC2[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Num_Variable_1;                      // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class USkeletalMeshComponent*>         CallFunc_GetWeaponMeshes_Meshes;                   // 0x0038(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	TArray<class USkeletalMeshComponent*>         CallFunc_GetOptionalMeshes_Meshes;                 // 0x0048(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8BC3[0x2];                                     // 0x005A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8BC4[0x3];                                     // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MenuPlayerBase_C_SetMaterialVectorParameter) == 0x000008, "Wrong alignment on BP_MenuPlayerBase_C_SetMaterialVectorParameter");
static_assert(sizeof(BP_MenuPlayerBase_C_SetMaterialVectorParameter) == 0x000070, "Wrong size on BP_MenuPlayerBase_C_SetMaterialVectorParameter");
static_assert(offsetof(BP_MenuPlayerBase_C_SetMaterialVectorParameter, ParamName) == 0x000000, "Member 'BP_MenuPlayerBase_C_SetMaterialVectorParameter::ParamName' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetMaterialVectorParameter, Value) == 0x000008, "Member 'BP_MenuPlayerBase_C_SetMaterialVectorParameter::Value' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetMaterialVectorParameter, Player) == 0x000018, "Member 'BP_MenuPlayerBase_C_SetMaterialVectorParameter::Player' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetMaterialVectorParameter, Weapon) == 0x000019, "Member 'BP_MenuPlayerBase_C_SetMaterialVectorParameter::Weapon' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetMaterialVectorParameter, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'BP_MenuPlayerBase_C_SetMaterialVectorParameter::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetMaterialVectorParameter, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'BP_MenuPlayerBase_C_SetMaterialVectorParameter::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetMaterialVectorParameter, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'BP_MenuPlayerBase_C_SetMaterialVectorParameter::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetMaterialVectorParameter, Temp_int_Array_Index_Variable_1) == 0x000028, "Member 'BP_MenuPlayerBase_C_SetMaterialVectorParameter::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetMaterialVectorParameter, Temp_int_Loop_Num_Variable) == 0x00002C, "Member 'BP_MenuPlayerBase_C_SetMaterialVectorParameter::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetMaterialVectorParameter, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'BP_MenuPlayerBase_C_SetMaterialVectorParameter::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetMaterialVectorParameter, Temp_int_Loop_Num_Variable_1) == 0x000034, "Member 'BP_MenuPlayerBase_C_SetMaterialVectorParameter::Temp_int_Loop_Num_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetMaterialVectorParameter, CallFunc_GetWeaponMeshes_Meshes) == 0x000038, "Member 'BP_MenuPlayerBase_C_SetMaterialVectorParameter::CallFunc_GetWeaponMeshes_Meshes' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetMaterialVectorParameter, CallFunc_GetOptionalMeshes_Meshes) == 0x000048, "Member 'BP_MenuPlayerBase_C_SetMaterialVectorParameter::CallFunc_GetOptionalMeshes_Meshes' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetMaterialVectorParameter, CallFunc_IsValid_ReturnValue) == 0x000058, "Member 'BP_MenuPlayerBase_C_SetMaterialVectorParameter::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetMaterialVectorParameter, CallFunc_IsValid_ReturnValue_1) == 0x000059, "Member 'BP_MenuPlayerBase_C_SetMaterialVectorParameter::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetMaterialVectorParameter, CallFunc_Array_Length_ReturnValue) == 0x00005C, "Member 'BP_MenuPlayerBase_C_SetMaterialVectorParameter::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetMaterialVectorParameter, CallFunc_Array_Length_ReturnValue_1) == 0x000060, "Member 'BP_MenuPlayerBase_C_SetMaterialVectorParameter::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetMaterialVectorParameter, Temp_int_Loop_Counter_Variable_1) == 0x000064, "Member 'BP_MenuPlayerBase_C_SetMaterialVectorParameter::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetMaterialVectorParameter, CallFunc_Less_IntInt_ReturnValue_1) == 0x000068, "Member 'BP_MenuPlayerBase_C_SetMaterialVectorParameter::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetMaterialVectorParameter, CallFunc_Add_IntInt_ReturnValue_1) == 0x00006C, "Member 'BP_MenuPlayerBase_C_SetMaterialVectorParameter::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_MenuPlayerBase.BP_MenuPlayerBase_C.SetMaterialScalarArrayParameter
// 0x0088 (0x0088 - 0x0000)
struct BP_MenuPlayerBase_C_SetMaterialScalarArrayParameter final
{
public:
	TArray<class FName>                           ParamName;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	TArray<float>                                 Value;                                             // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	bool                                          Player;                                            // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Weapon;                                            // 0x0021(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8BC5[0x2];                                     // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8BC6[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Min_ReturnValue;                          // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8BC7[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Num_Variable_1;                      // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class USkeletalMeshComponent*>         CallFunc_GetWeaponMeshes_Meshes;                   // 0x0050(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	TArray<class USkeletalMeshComponent*>         CallFunc_GetOptionalMeshes_Meshes;                 // 0x0060(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8BC8[0x2];                                     // 0x0072(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8BC9[0x3];                                     // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MenuPlayerBase_C_SetMaterialScalarArrayParameter) == 0x000008, "Wrong alignment on BP_MenuPlayerBase_C_SetMaterialScalarArrayParameter");
static_assert(sizeof(BP_MenuPlayerBase_C_SetMaterialScalarArrayParameter) == 0x000088, "Wrong size on BP_MenuPlayerBase_C_SetMaterialScalarArrayParameter");
static_assert(offsetof(BP_MenuPlayerBase_C_SetMaterialScalarArrayParameter, ParamName) == 0x000000, "Member 'BP_MenuPlayerBase_C_SetMaterialScalarArrayParameter::ParamName' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetMaterialScalarArrayParameter, Value) == 0x000010, "Member 'BP_MenuPlayerBase_C_SetMaterialScalarArrayParameter::Value' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetMaterialScalarArrayParameter, Player) == 0x000020, "Member 'BP_MenuPlayerBase_C_SetMaterialScalarArrayParameter::Player' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetMaterialScalarArrayParameter, Weapon) == 0x000021, "Member 'BP_MenuPlayerBase_C_SetMaterialScalarArrayParameter::Weapon' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetMaterialScalarArrayParameter, Temp_int_Array_Index_Variable) == 0x000024, "Member 'BP_MenuPlayerBase_C_SetMaterialScalarArrayParameter::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetMaterialScalarArrayParameter, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'BP_MenuPlayerBase_C_SetMaterialScalarArrayParameter::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetMaterialScalarArrayParameter, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'BP_MenuPlayerBase_C_SetMaterialScalarArrayParameter::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetMaterialScalarArrayParameter, Temp_int_Array_Index_Variable_1) == 0x000030, "Member 'BP_MenuPlayerBase_C_SetMaterialScalarArrayParameter::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetMaterialScalarArrayParameter, Temp_int_Loop_Num_Variable) == 0x000034, "Member 'BP_MenuPlayerBase_C_SetMaterialScalarArrayParameter::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetMaterialScalarArrayParameter, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'BP_MenuPlayerBase_C_SetMaterialScalarArrayParameter::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetMaterialScalarArrayParameter, CallFunc_Array_Length_ReturnValue) == 0x00003C, "Member 'BP_MenuPlayerBase_C_SetMaterialScalarArrayParameter::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetMaterialScalarArrayParameter, CallFunc_Array_Length_ReturnValue_1) == 0x000040, "Member 'BP_MenuPlayerBase_C_SetMaterialScalarArrayParameter::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetMaterialScalarArrayParameter, CallFunc_Min_ReturnValue) == 0x000044, "Member 'BP_MenuPlayerBase_C_SetMaterialScalarArrayParameter::CallFunc_Min_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetMaterialScalarArrayParameter, CallFunc_Greater_IntInt_ReturnValue) == 0x000048, "Member 'BP_MenuPlayerBase_C_SetMaterialScalarArrayParameter::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetMaterialScalarArrayParameter, Temp_int_Loop_Num_Variable_1) == 0x00004C, "Member 'BP_MenuPlayerBase_C_SetMaterialScalarArrayParameter::Temp_int_Loop_Num_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetMaterialScalarArrayParameter, CallFunc_GetWeaponMeshes_Meshes) == 0x000050, "Member 'BP_MenuPlayerBase_C_SetMaterialScalarArrayParameter::CallFunc_GetWeaponMeshes_Meshes' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetMaterialScalarArrayParameter, CallFunc_GetOptionalMeshes_Meshes) == 0x000060, "Member 'BP_MenuPlayerBase_C_SetMaterialScalarArrayParameter::CallFunc_GetOptionalMeshes_Meshes' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetMaterialScalarArrayParameter, CallFunc_IsValid_ReturnValue) == 0x000070, "Member 'BP_MenuPlayerBase_C_SetMaterialScalarArrayParameter::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetMaterialScalarArrayParameter, CallFunc_IsValid_ReturnValue_1) == 0x000071, "Member 'BP_MenuPlayerBase_C_SetMaterialScalarArrayParameter::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetMaterialScalarArrayParameter, CallFunc_Array_Length_ReturnValue_2) == 0x000074, "Member 'BP_MenuPlayerBase_C_SetMaterialScalarArrayParameter::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetMaterialScalarArrayParameter, CallFunc_Array_Length_ReturnValue_3) == 0x000078, "Member 'BP_MenuPlayerBase_C_SetMaterialScalarArrayParameter::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetMaterialScalarArrayParameter, Temp_int_Loop_Counter_Variable_1) == 0x00007C, "Member 'BP_MenuPlayerBase_C_SetMaterialScalarArrayParameter::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetMaterialScalarArrayParameter, CallFunc_Less_IntInt_ReturnValue_1) == 0x000080, "Member 'BP_MenuPlayerBase_C_SetMaterialScalarArrayParameter::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetMaterialScalarArrayParameter, CallFunc_Add_IntInt_ReturnValue_1) == 0x000084, "Member 'BP_MenuPlayerBase_C_SetMaterialScalarArrayParameter::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_MenuPlayerBase.BP_MenuPlayerBase_C.SetMaterialVectorArrayParameter
// 0x0088 (0x0088 - 0x0000)
struct BP_MenuPlayerBase_C_SetMaterialVectorArrayParameter final
{
public:
	TArray<class FName>                           ParamName;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	TArray<struct FLinearColor>                   Value;                                             // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	bool                                          Player;                                            // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Weapon;                                            // 0x0021(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8BCA[0x2];                                     // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8BCB[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Min_ReturnValue;                          // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8BCC[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Num_Variable_1;                      // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class USkeletalMeshComponent*>         CallFunc_GetWeaponMeshes_Meshes;                   // 0x0050(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	TArray<class USkeletalMeshComponent*>         CallFunc_GetOptionalMeshes_Meshes;                 // 0x0060(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8BCD[0x2];                                     // 0x0072(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8BCE[0x3];                                     // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MenuPlayerBase_C_SetMaterialVectorArrayParameter) == 0x000008, "Wrong alignment on BP_MenuPlayerBase_C_SetMaterialVectorArrayParameter");
static_assert(sizeof(BP_MenuPlayerBase_C_SetMaterialVectorArrayParameter) == 0x000088, "Wrong size on BP_MenuPlayerBase_C_SetMaterialVectorArrayParameter");
static_assert(offsetof(BP_MenuPlayerBase_C_SetMaterialVectorArrayParameter, ParamName) == 0x000000, "Member 'BP_MenuPlayerBase_C_SetMaterialVectorArrayParameter::ParamName' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetMaterialVectorArrayParameter, Value) == 0x000010, "Member 'BP_MenuPlayerBase_C_SetMaterialVectorArrayParameter::Value' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetMaterialVectorArrayParameter, Player) == 0x000020, "Member 'BP_MenuPlayerBase_C_SetMaterialVectorArrayParameter::Player' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetMaterialVectorArrayParameter, Weapon) == 0x000021, "Member 'BP_MenuPlayerBase_C_SetMaterialVectorArrayParameter::Weapon' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetMaterialVectorArrayParameter, Temp_int_Array_Index_Variable) == 0x000024, "Member 'BP_MenuPlayerBase_C_SetMaterialVectorArrayParameter::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetMaterialVectorArrayParameter, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'BP_MenuPlayerBase_C_SetMaterialVectorArrayParameter::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetMaterialVectorArrayParameter, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'BP_MenuPlayerBase_C_SetMaterialVectorArrayParameter::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetMaterialVectorArrayParameter, Temp_int_Array_Index_Variable_1) == 0x000030, "Member 'BP_MenuPlayerBase_C_SetMaterialVectorArrayParameter::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetMaterialVectorArrayParameter, Temp_int_Loop_Num_Variable) == 0x000034, "Member 'BP_MenuPlayerBase_C_SetMaterialVectorArrayParameter::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetMaterialVectorArrayParameter, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'BP_MenuPlayerBase_C_SetMaterialVectorArrayParameter::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetMaterialVectorArrayParameter, CallFunc_Array_Length_ReturnValue) == 0x00003C, "Member 'BP_MenuPlayerBase_C_SetMaterialVectorArrayParameter::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetMaterialVectorArrayParameter, CallFunc_Array_Length_ReturnValue_1) == 0x000040, "Member 'BP_MenuPlayerBase_C_SetMaterialVectorArrayParameter::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetMaterialVectorArrayParameter, CallFunc_Min_ReturnValue) == 0x000044, "Member 'BP_MenuPlayerBase_C_SetMaterialVectorArrayParameter::CallFunc_Min_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetMaterialVectorArrayParameter, CallFunc_Greater_IntInt_ReturnValue) == 0x000048, "Member 'BP_MenuPlayerBase_C_SetMaterialVectorArrayParameter::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetMaterialVectorArrayParameter, Temp_int_Loop_Num_Variable_1) == 0x00004C, "Member 'BP_MenuPlayerBase_C_SetMaterialVectorArrayParameter::Temp_int_Loop_Num_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetMaterialVectorArrayParameter, CallFunc_GetWeaponMeshes_Meshes) == 0x000050, "Member 'BP_MenuPlayerBase_C_SetMaterialVectorArrayParameter::CallFunc_GetWeaponMeshes_Meshes' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetMaterialVectorArrayParameter, CallFunc_GetOptionalMeshes_Meshes) == 0x000060, "Member 'BP_MenuPlayerBase_C_SetMaterialVectorArrayParameter::CallFunc_GetOptionalMeshes_Meshes' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetMaterialVectorArrayParameter, CallFunc_IsValid_ReturnValue) == 0x000070, "Member 'BP_MenuPlayerBase_C_SetMaterialVectorArrayParameter::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetMaterialVectorArrayParameter, CallFunc_IsValid_ReturnValue_1) == 0x000071, "Member 'BP_MenuPlayerBase_C_SetMaterialVectorArrayParameter::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetMaterialVectorArrayParameter, CallFunc_Array_Length_ReturnValue_2) == 0x000074, "Member 'BP_MenuPlayerBase_C_SetMaterialVectorArrayParameter::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetMaterialVectorArrayParameter, CallFunc_Array_Length_ReturnValue_3) == 0x000078, "Member 'BP_MenuPlayerBase_C_SetMaterialVectorArrayParameter::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetMaterialVectorArrayParameter, Temp_int_Loop_Counter_Variable_1) == 0x00007C, "Member 'BP_MenuPlayerBase_C_SetMaterialVectorArrayParameter::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetMaterialVectorArrayParameter, CallFunc_Less_IntInt_ReturnValue_1) == 0x000080, "Member 'BP_MenuPlayerBase_C_SetMaterialVectorArrayParameter::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetMaterialVectorArrayParameter, CallFunc_Add_IntInt_ReturnValue_1) == 0x000084, "Member 'BP_MenuPlayerBase_C_SetMaterialVectorArrayParameter::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_MenuPlayerBase.BP_MenuPlayerBase_C.SetAttachment
// 0x0220 (0x0220 - 0x0000)
struct BP_MenuPlayerBase_C_SetAttachment final
{
public:
	bool                                          CheckEquipAble;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8BCF[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         AttachmentID2;                                     // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AttachmentID1;                                     // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AttachmentID0;                                     // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPlayerInfo                            _PlayerInfo;                                       // 0x0010(0x00D0)(Edit, BlueprintVisible, NoDestructor)
	bool                                          CallFunc_CheckEquipAttachmentAble_EquipOK;         // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8BD0[0x3];                                     // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_CheckEquipAttachmentAble_NewAttachmentID; // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckEquipAttachmentAble_EquipOK_1;       // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8BD1[0x3];                                     // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_CheckEquipAttachmentAble_NewAttachmentID_1; // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckEquipAttachmentAble_EquipOK_2;       // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8BD2[0x3];                                     // 0x00F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_CheckEquipAttachmentAble_NewAttachmentID_2; // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_Attachment_C>     CallFunc_EquipAttachmentInterface_self_CastInput;  // 0x00F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EquipAttachmentInterface_bDummy;          // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8BD3[0x7];                                     // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_Attachment_C>     CallFunc_EquipAttachmentInterface_self_CastInput_1; // 0x0110(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EquipAttachmentInterface_bDummy_1;        // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8BD4[0x7];                                     // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_Attachment_C>     CallFunc_EquipAttachmentInterface_self_CastInput_2; // 0x0128(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EquipAttachmentInterface_bDummy_2;        // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8BD5[0x7];                                     // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerManager*                         CallFunc_GetPlayerManager_PlayerManager;           // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8BD6[0x3];                                     // 0x0149(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPlayerInfo                            CallFunc_GetPartyMemberInfo_ReturnValue;           // 0x014C(0x00D0)(NoDestructor)
};
static_assert(alignof(BP_MenuPlayerBase_C_SetAttachment) == 0x000008, "Wrong alignment on BP_MenuPlayerBase_C_SetAttachment");
static_assert(sizeof(BP_MenuPlayerBase_C_SetAttachment) == 0x000220, "Wrong size on BP_MenuPlayerBase_C_SetAttachment");
static_assert(offsetof(BP_MenuPlayerBase_C_SetAttachment, CheckEquipAble) == 0x000000, "Member 'BP_MenuPlayerBase_C_SetAttachment::CheckEquipAble' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetAttachment, AttachmentID2) == 0x000004, "Member 'BP_MenuPlayerBase_C_SetAttachment::AttachmentID2' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetAttachment, AttachmentID1) == 0x000008, "Member 'BP_MenuPlayerBase_C_SetAttachment::AttachmentID1' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetAttachment, AttachmentID0) == 0x00000C, "Member 'BP_MenuPlayerBase_C_SetAttachment::AttachmentID0' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetAttachment, _PlayerInfo) == 0x000010, "Member 'BP_MenuPlayerBase_C_SetAttachment::_PlayerInfo' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetAttachment, CallFunc_CheckEquipAttachmentAble_EquipOK) == 0x0000E0, "Member 'BP_MenuPlayerBase_C_SetAttachment::CallFunc_CheckEquipAttachmentAble_EquipOK' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetAttachment, CallFunc_CheckEquipAttachmentAble_NewAttachmentID) == 0x0000E4, "Member 'BP_MenuPlayerBase_C_SetAttachment::CallFunc_CheckEquipAttachmentAble_NewAttachmentID' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetAttachment, CallFunc_CheckEquipAttachmentAble_EquipOK_1) == 0x0000E8, "Member 'BP_MenuPlayerBase_C_SetAttachment::CallFunc_CheckEquipAttachmentAble_EquipOK_1' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetAttachment, CallFunc_CheckEquipAttachmentAble_NewAttachmentID_1) == 0x0000EC, "Member 'BP_MenuPlayerBase_C_SetAttachment::CallFunc_CheckEquipAttachmentAble_NewAttachmentID_1' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetAttachment, CallFunc_CheckEquipAttachmentAble_EquipOK_2) == 0x0000F0, "Member 'BP_MenuPlayerBase_C_SetAttachment::CallFunc_CheckEquipAttachmentAble_EquipOK_2' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetAttachment, CallFunc_CheckEquipAttachmentAble_NewAttachmentID_2) == 0x0000F4, "Member 'BP_MenuPlayerBase_C_SetAttachment::CallFunc_CheckEquipAttachmentAble_NewAttachmentID_2' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetAttachment, CallFunc_EquipAttachmentInterface_self_CastInput) == 0x0000F8, "Member 'BP_MenuPlayerBase_C_SetAttachment::CallFunc_EquipAttachmentInterface_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetAttachment, CallFunc_EquipAttachmentInterface_bDummy) == 0x000108, "Member 'BP_MenuPlayerBase_C_SetAttachment::CallFunc_EquipAttachmentInterface_bDummy' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetAttachment, CallFunc_EquipAttachmentInterface_self_CastInput_1) == 0x000110, "Member 'BP_MenuPlayerBase_C_SetAttachment::CallFunc_EquipAttachmentInterface_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetAttachment, CallFunc_EquipAttachmentInterface_bDummy_1) == 0x000120, "Member 'BP_MenuPlayerBase_C_SetAttachment::CallFunc_EquipAttachmentInterface_bDummy_1' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetAttachment, CallFunc_EquipAttachmentInterface_self_CastInput_2) == 0x000128, "Member 'BP_MenuPlayerBase_C_SetAttachment::CallFunc_EquipAttachmentInterface_self_CastInput_2' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetAttachment, CallFunc_EquipAttachmentInterface_bDummy_2) == 0x000138, "Member 'BP_MenuPlayerBase_C_SetAttachment::CallFunc_EquipAttachmentInterface_bDummy_2' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetAttachment, CallFunc_GetPlayerManager_PlayerManager) == 0x000140, "Member 'BP_MenuPlayerBase_C_SetAttachment::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetAttachment, CallFunc_IsValid_ReturnValue) == 0x000148, "Member 'BP_MenuPlayerBase_C_SetAttachment::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetAttachment, CallFunc_GetPartyMemberInfo_ReturnValue) == 0x00014C, "Member 'BP_MenuPlayerBase_C_SetAttachment::CallFunc_GetPartyMemberInfo_ReturnValue' has a wrong offset!");

// Function BP_MenuPlayerBase.BP_MenuPlayerBase_C.EventUIMainMontageEnd
// 0x0050 (0x0050 - 0x0000)
struct BP_MenuPlayerBase_C_EventUIMainMontageEnd final
{
public:
	class UAnimMontage*                           Montage;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Interrupt;                                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8BD7[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           NewAnim;                                           // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8BD8[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8BD9[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UAnimMontage*>                   K2Node_MakeArray_Array;                            // 0x0030(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class UAnimMontage*                           CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MenuPlayerBase_C_EventUIMainMontageEnd) == 0x000008, "Wrong alignment on BP_MenuPlayerBase_C_EventUIMainMontageEnd");
static_assert(sizeof(BP_MenuPlayerBase_C_EventUIMainMontageEnd) == 0x000050, "Wrong size on BP_MenuPlayerBase_C_EventUIMainMontageEnd");
static_assert(offsetof(BP_MenuPlayerBase_C_EventUIMainMontageEnd, Montage) == 0x000000, "Member 'BP_MenuPlayerBase_C_EventUIMainMontageEnd::Montage' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_EventUIMainMontageEnd, Interrupt) == 0x000008, "Member 'BP_MenuPlayerBase_C_EventUIMainMontageEnd::Interrupt' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_EventUIMainMontageEnd, NewAnim) == 0x000010, "Member 'BP_MenuPlayerBase_C_EventUIMainMontageEnd::NewAnim' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_EventUIMainMontageEnd, Temp_int_Loop_Num_Variable) == 0x000018, "Member 'BP_MenuPlayerBase_C_EventUIMainMontageEnd::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_EventUIMainMontageEnd, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'BP_MenuPlayerBase_C_EventUIMainMontageEnd::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_EventUIMainMontageEnd, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'BP_MenuPlayerBase_C_EventUIMainMontageEnd::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_EventUIMainMontageEnd, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'BP_MenuPlayerBase_C_EventUIMainMontageEnd::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_EventUIMainMontageEnd, Temp_int_Array_Index_Variable) == 0x000028, "Member 'BP_MenuPlayerBase_C_EventUIMainMontageEnd::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_EventUIMainMontageEnd, K2Node_MakeArray_Array) == 0x000030, "Member 'BP_MenuPlayerBase_C_EventUIMainMontageEnd::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_EventUIMainMontageEnd, CallFunc_Array_Get_Item) == 0x000040, "Member 'BP_MenuPlayerBase_C_EventUIMainMontageEnd::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_EventUIMainMontageEnd, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'BP_MenuPlayerBase_C_EventUIMainMontageEnd::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_EventUIMainMontageEnd, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x00004C, "Member 'BP_MenuPlayerBase_C_EventUIMainMontageEnd::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function BP_MenuPlayerBase.BP_MenuPlayerBase_C.PlayUIMainAnimationInternal
// 0x0068 (0x0068 - 0x0000)
struct BP_MenuPlayerBase_C_PlayUIMainAnimationInternal final
{
public:
	TArray<class UAnimMontage*>                   PlayMontages;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	bool                                          StopMontage;                                       // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8BDA[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           Montage;                                           // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          AnimInstance;                                      // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UAnimMontage* Montage, bool bInterrupted)> K2Node_CreateDelegate_OutputDelegate;              // 0x0034(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8BDB[0x3];                                     // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8BDC[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Montage_Play_ReturnValue;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8BDD[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MenuPlayerBase_C_PlayUIMainAnimationInternal) == 0x000008, "Wrong alignment on BP_MenuPlayerBase_C_PlayUIMainAnimationInternal");
static_assert(sizeof(BP_MenuPlayerBase_C_PlayUIMainAnimationInternal) == 0x000068, "Wrong size on BP_MenuPlayerBase_C_PlayUIMainAnimationInternal");
static_assert(offsetof(BP_MenuPlayerBase_C_PlayUIMainAnimationInternal, PlayMontages) == 0x000000, "Member 'BP_MenuPlayerBase_C_PlayUIMainAnimationInternal::PlayMontages' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_PlayUIMainAnimationInternal, StopMontage) == 0x000010, "Member 'BP_MenuPlayerBase_C_PlayUIMainAnimationInternal::StopMontage' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_PlayUIMainAnimationInternal, Montage) == 0x000018, "Member 'BP_MenuPlayerBase_C_PlayUIMainAnimationInternal::Montage' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_PlayUIMainAnimationInternal, AnimInstance) == 0x000020, "Member 'BP_MenuPlayerBase_C_PlayUIMainAnimationInternal::AnimInstance' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_PlayUIMainAnimationInternal, Temp_int_Array_Index_Variable) == 0x000028, "Member 'BP_MenuPlayerBase_C_PlayUIMainAnimationInternal::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_PlayUIMainAnimationInternal, Temp_int_Loop_Num_Variable) == 0x00002C, "Member 'BP_MenuPlayerBase_C_PlayUIMainAnimationInternal::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_PlayUIMainAnimationInternal, Temp_int_Loop_Counter_Variable) == 0x000030, "Member 'BP_MenuPlayerBase_C_PlayUIMainAnimationInternal::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_PlayUIMainAnimationInternal, K2Node_CreateDelegate_OutputDelegate) == 0x000034, "Member 'BP_MenuPlayerBase_C_PlayUIMainAnimationInternal::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_PlayUIMainAnimationInternal, CallFunc_Less_IntInt_ReturnValue) == 0x000044, "Member 'BP_MenuPlayerBase_C_PlayUIMainAnimationInternal::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_PlayUIMainAnimationInternal, CallFunc_Add_IntInt_ReturnValue) == 0x000048, "Member 'BP_MenuPlayerBase_C_PlayUIMainAnimationInternal::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_PlayUIMainAnimationInternal, CallFunc_Array_Length_ReturnValue) == 0x00004C, "Member 'BP_MenuPlayerBase_C_PlayUIMainAnimationInternal::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_PlayUIMainAnimationInternal, CallFunc_IsValid_ReturnValue) == 0x000050, "Member 'BP_MenuPlayerBase_C_PlayUIMainAnimationInternal::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_PlayUIMainAnimationInternal, CallFunc_Montage_Play_ReturnValue) == 0x000054, "Member 'BP_MenuPlayerBase_C_PlayUIMainAnimationInternal::CallFunc_Montage_Play_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_PlayUIMainAnimationInternal, CallFunc_IsValid_ReturnValue_1) == 0x000058, "Member 'BP_MenuPlayerBase_C_PlayUIMainAnimationInternal::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_PlayUIMainAnimationInternal, CallFunc_GetAnimInstance_ReturnValue) == 0x000060, "Member 'BP_MenuPlayerBase_C_PlayUIMainAnimationInternal::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");

// Function BP_MenuPlayerBase.BP_MenuPlayerBase_C.StopUIMainAnimation
// 0x0028 (0x0028 - 0x0000)
struct BP_MenuPlayerBase_C_StopUIMainAnimation final
{
public:
	class UAnimInstance*                          AnimInstance;                                      // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UAnimMontage* Montage, bool bInterrupted)> K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8BDE[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MenuPlayerBase_C_StopUIMainAnimation) == 0x000008, "Wrong alignment on BP_MenuPlayerBase_C_StopUIMainAnimation");
static_assert(sizeof(BP_MenuPlayerBase_C_StopUIMainAnimation) == 0x000028, "Wrong size on BP_MenuPlayerBase_C_StopUIMainAnimation");
static_assert(offsetof(BP_MenuPlayerBase_C_StopUIMainAnimation, AnimInstance) == 0x000000, "Member 'BP_MenuPlayerBase_C_StopUIMainAnimation::AnimInstance' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_StopUIMainAnimation, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'BP_MenuPlayerBase_C_StopUIMainAnimation::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_StopUIMainAnimation, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_MenuPlayerBase_C_StopUIMainAnimation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_StopUIMainAnimation, CallFunc_GetAnimInstance_ReturnValue) == 0x000020, "Member 'BP_MenuPlayerBase_C_StopUIMainAnimation::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");

// Function BP_MenuPlayerBase.BP_MenuPlayerBase_C.EquipWeapon
// 0x0068 (0x0068 - 0x0000)
struct BP_MenuPlayerBase_C_EquipWeapon final
{
public:
	int32                                         WeaponId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LbDisableYuitoString;                              // 0x0004(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          RestoreMipPrestream;                               // 0x0005(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8BDF[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetItemCategoryID_ReturnValue;            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoEquipWeaponAfter_bDummy;                // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8BE0[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8BE1[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8BE2[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USkeletalMeshComponent*>         CallFunc_GetOptionalMeshes_Meshes;                 // 0x0028(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_GetItemCategoryID_ReturnValue_1;          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8BE3[0x3];                                     // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USkeletalMeshComponent*>         CallFunc_GetWeaponMeshes_Meshes;                   // 0x0040(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8BE4[0x4];                                     // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_ResourceManager_C*                  CallFunc_GetResourceManager_ResourceManager;       // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LoadWeaponMesh_bDisableYuitoString;       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MenuPlayerBase_C_EquipWeapon) == 0x000008, "Wrong alignment on BP_MenuPlayerBase_C_EquipWeapon");
static_assert(sizeof(BP_MenuPlayerBase_C_EquipWeapon) == 0x000068, "Wrong size on BP_MenuPlayerBase_C_EquipWeapon");
static_assert(offsetof(BP_MenuPlayerBase_C_EquipWeapon, WeaponId) == 0x000000, "Member 'BP_MenuPlayerBase_C_EquipWeapon::WeaponId' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_EquipWeapon, LbDisableYuitoString) == 0x000004, "Member 'BP_MenuPlayerBase_C_EquipWeapon::LbDisableYuitoString' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_EquipWeapon, RestoreMipPrestream) == 0x000005, "Member 'BP_MenuPlayerBase_C_EquipWeapon::RestoreMipPrestream' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_EquipWeapon, Temp_int_Loop_Num_Variable) == 0x000008, "Member 'BP_MenuPlayerBase_C_EquipWeapon::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_EquipWeapon, CallFunc_GetItemCategoryID_ReturnValue) == 0x00000C, "Member 'BP_MenuPlayerBase_C_EquipWeapon::CallFunc_GetItemCategoryID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_EquipWeapon, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_MenuPlayerBase_C_EquipWeapon::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_EquipWeapon, CallFunc_DoEquipWeaponAfter_bDummy) == 0x000014, "Member 'BP_MenuPlayerBase_C_EquipWeapon::CallFunc_DoEquipWeaponAfter_bDummy' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_EquipWeapon, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'BP_MenuPlayerBase_C_EquipWeapon::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_EquipWeapon, CallFunc_Less_IntInt_ReturnValue) == 0x00001C, "Member 'BP_MenuPlayerBase_C_EquipWeapon::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_EquipWeapon, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BP_MenuPlayerBase_C_EquipWeapon::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_EquipWeapon, CallFunc_GetOptionalMeshes_Meshes) == 0x000028, "Member 'BP_MenuPlayerBase_C_EquipWeapon::CallFunc_GetOptionalMeshes_Meshes' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_EquipWeapon, CallFunc_GetItemCategoryID_ReturnValue_1) == 0x000038, "Member 'BP_MenuPlayerBase_C_EquipWeapon::CallFunc_GetItemCategoryID_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_EquipWeapon, CallFunc_NotEqual_IntInt_ReturnValue) == 0x00003C, "Member 'BP_MenuPlayerBase_C_EquipWeapon::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_EquipWeapon, CallFunc_GetWeaponMeshes_Meshes) == 0x000040, "Member 'BP_MenuPlayerBase_C_EquipWeapon::CallFunc_GetWeaponMeshes_Meshes' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_EquipWeapon, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'BP_MenuPlayerBase_C_EquipWeapon::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_EquipWeapon, CallFunc_GetResourceManager_ResourceManager) == 0x000058, "Member 'BP_MenuPlayerBase_C_EquipWeapon::CallFunc_GetResourceManager_ResourceManager' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_EquipWeapon, CallFunc_LoadWeaponMesh_bDisableYuitoString) == 0x000060, "Member 'BP_MenuPlayerBase_C_EquipWeapon::CallFunc_LoadWeaponMesh_bDisableYuitoString' has a wrong offset!");

// Function BP_MenuPlayerBase.BP_MenuPlayerBase_C.PrivateWeaponInitialize
// 0x00E0 (0x00E0 - 0x0000)
struct BP_MenuPlayerBase_C_PrivateWeaponInitialize final
{
public:
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPlayerInfo                            CallFunc_GetPartyMemberInfo_ReturnValue;           // 0x0008(0x00D0)(NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8BE5[0x2];                                     // 0x00DA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MenuPlayerBase_C_PrivateWeaponInitialize) == 0x000008, "Wrong alignment on BP_MenuPlayerBase_C_PrivateWeaponInitialize");
static_assert(sizeof(BP_MenuPlayerBase_C_PrivateWeaponInitialize) == 0x0000E0, "Wrong size on BP_MenuPlayerBase_C_PrivateWeaponInitialize");
static_assert(offsetof(BP_MenuPlayerBase_C_PrivateWeaponInitialize, CallFunc_GetPlayerManager_PlayerManager) == 0x000000, "Member 'BP_MenuPlayerBase_C_PrivateWeaponInitialize::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_PrivateWeaponInitialize, CallFunc_GetPartyMemberInfo_ReturnValue) == 0x000008, "Member 'BP_MenuPlayerBase_C_PrivateWeaponInitialize::CallFunc_GetPartyMemberInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_PrivateWeaponInitialize, CallFunc_IsValid_ReturnValue) == 0x0000D8, "Member 'BP_MenuPlayerBase_C_PrivateWeaponInitialize::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_PrivateWeaponInitialize, CallFunc_NotEqual_IntInt_ReturnValue) == 0x0000D9, "Member 'BP_MenuPlayerBase_C_PrivateWeaponInitialize::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_PrivateWeaponInitialize, CallFunc_SelectInt_ReturnValue) == 0x0000DC, "Member 'BP_MenuPlayerBase_C_PrivateWeaponInitialize::CallFunc_SelectInt_ReturnValue' has a wrong offset!");

// Function BP_MenuPlayerBase.BP_MenuPlayerBase_C.EquipCostume
// 0x0020 (0x0020 - 0x0000)
struct BP_MenuPlayerBase_C_EquipCostume final
{
public:
	int32                                         CostumeId;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RestoreMipPrestream;                               // 0x0004(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8BE6[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_EventManager_C*                     CallFunc_GetEventManager_EventManager;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsWireVisibleOffEvent_IsOffWireEvent;     // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8BE7[0x5];                                     // 0x0013(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_ResourceManager_C*                  CallFunc_GetResourceManager_ResourceManager;       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MenuPlayerBase_C_EquipCostume) == 0x000008, "Wrong alignment on BP_MenuPlayerBase_C_EquipCostume");
static_assert(sizeof(BP_MenuPlayerBase_C_EquipCostume) == 0x000020, "Wrong size on BP_MenuPlayerBase_C_EquipCostume");
static_assert(offsetof(BP_MenuPlayerBase_C_EquipCostume, CostumeId) == 0x000000, "Member 'BP_MenuPlayerBase_C_EquipCostume::CostumeId' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_EquipCostume, RestoreMipPrestream) == 0x000004, "Member 'BP_MenuPlayerBase_C_EquipCostume::RestoreMipPrestream' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_EquipCostume, CallFunc_GetEventManager_EventManager) == 0x000008, "Member 'BP_MenuPlayerBase_C_EquipCostume::CallFunc_GetEventManager_EventManager' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_EquipCostume, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_MenuPlayerBase_C_EquipCostume::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_EquipCostume, CallFunc_IsWireVisibleOffEvent_IsOffWireEvent) == 0x000011, "Member 'BP_MenuPlayerBase_C_EquipCostume::CallFunc_IsWireVisibleOffEvent_IsOffWireEvent' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_EquipCostume, CallFunc_Not_PreBool_ReturnValue) == 0x000012, "Member 'BP_MenuPlayerBase_C_EquipCostume::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_EquipCostume, CallFunc_GetResourceManager_ResourceManager) == 0x000018, "Member 'BP_MenuPlayerBase_C_EquipCostume::CallFunc_GetResourceManager_ResourceManager' has a wrong offset!");

// Function BP_MenuPlayerBase.BP_MenuPlayerBase_C.DispWeaponString
// 0x0030 (0x0030 - 0x0000)
struct BP_MenuPlayerBase_C_DispWeaponString final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8BE8[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_1;            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IABPI_ch0100_C>        K2Node_DynamicCast_AsABPI_Ch_0100;                 // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MenuPlayerBase_C_DispWeaponString) == 0x000008, "Wrong alignment on BP_MenuPlayerBase_C_DispWeaponString");
static_assert(sizeof(BP_MenuPlayerBase_C_DispWeaponString) == 0x000030, "Wrong size on BP_MenuPlayerBase_C_DispWeaponString");
static_assert(offsetof(BP_MenuPlayerBase_C_DispWeaponString, Visible) == 0x000000, "Member 'BP_MenuPlayerBase_C_DispWeaponString::Visible' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_DispWeaponString, CallFunc_GetAnimInstance_ReturnValue) == 0x000008, "Member 'BP_MenuPlayerBase_C_DispWeaponString::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_DispWeaponString, CallFunc_GetAnimInstance_ReturnValue_1) == 0x000010, "Member 'BP_MenuPlayerBase_C_DispWeaponString::CallFunc_GetAnimInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_DispWeaponString, K2Node_DynamicCast_AsABPI_Ch_0100) == 0x000018, "Member 'BP_MenuPlayerBase_C_DispWeaponString::K2Node_DynamicCast_AsABPI_Ch_0100' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_DispWeaponString, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_MenuPlayerBase_C_DispWeaponString::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_DispWeaponString, CallFunc_IsValid_ReturnValue) == 0x000029, "Member 'BP_MenuPlayerBase_C_DispWeaponString::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_MenuPlayerBase.BP_MenuPlayerBase_C.SetupDepthMeshComponent
// 0x01A8 (0x01A8 - 0x0000)
struct BP_MenuPlayerBase_C_SetupDepthMeshComponent final
{
public:
	bool                                          EquipIgnoreVisibility;                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8BE9[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   AlphaMap;                                          // 0x0004(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8BEA[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               NewDepthMaterial;                                  // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      MeshMaterialInstance;                              // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     MeshMaterial;                                      // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInterface*>             MeshMaterials;                                     // 0x0028(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	class UMeshComponent*                         DepthMeshComp;                                     // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMeshComponent*                         MeshComp;                                          // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_1;                      // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_2;                      // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8BEB[0x1];                                     // 0x006B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x006C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue_1;            // 0x0074(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRsScalarParameterValue_OutValue;       // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetRsScalarParameterValue_ReturnValue;    // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8BEC[0x3];                                     // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRsScalarParameterValue_OutValue_1;     // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetRsScalarParameterValue_ReturnValue_1;  // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8BED[0x3];                                     // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue_1;                // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8BEE[0x4];                                     // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<float>                                 K2Node_MakeArray_Array;                            // 0x0098(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8BEF[0x4];                                     // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<float>                                 K2Node_MakeArray_Array_1;                          // 0x00B0(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	TArray<class FName>                           K2Node_MakeArray_Array_2;                          // 0x00C0(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8BF0[0x3];                                     // 0x00D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstance*                      K2Node_DynamicCast_AsMaterial_Instance;            // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8BF1[0x3];                                     // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8BF2[0x4];                                     // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInterface*>             CallFunc_GetMaterials_ReturnValue;                 // 0x00F8(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8BF3[0x2];                                     // 0x010A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetComponentPauseFlag_ReturnValue;        // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8BF4[0x2];                                     // 0x011A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8BF5[0x7];                                     // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UActorComponent*                        CallFunc_AddActorComponent_ReturnValue;            // 0x0128(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 K2Node_DynamicCast_AsSkeletal_Mesh_Component;      // 0x0130(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8BF6[0x7];                                     // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 K2Node_DynamicCast_AsSkeletal_Mesh_Component_1;    // 0x0140(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8BF7[0x7];                                     // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   K2Node_DynamicCast_AsStatic_Mesh_Component;        // 0x0150(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8BF8[0x7];                                     // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UActorComponent*                        CallFunc_AddActorComponent_ReturnValue_1;          // 0x0160(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   K2Node_DynamicCast_AsStatic_Mesh_Component_1;      // 0x0168(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8BF9[0x7];                                     // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x0178(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_PrivateCheckUseDepthMesh_UseDepth;        // 0x0189(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMaterialParent_ReturnValue;            // 0x018A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8BFA[0x5];                                     // 0x018B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMeshComponent*>                 CallFunc_GetMeshes_MeshComps;                      // 0x0190(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MenuPlayerBase_C_SetupDepthMeshComponent) == 0x000008, "Wrong alignment on BP_MenuPlayerBase_C_SetupDepthMeshComponent");
static_assert(sizeof(BP_MenuPlayerBase_C_SetupDepthMeshComponent) == 0x0001A8, "Wrong size on BP_MenuPlayerBase_C_SetupDepthMeshComponent");
static_assert(offsetof(BP_MenuPlayerBase_C_SetupDepthMeshComponent, EquipIgnoreVisibility) == 0x000000, "Member 'BP_MenuPlayerBase_C_SetupDepthMeshComponent::EquipIgnoreVisibility' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetupDepthMeshComponent, AlphaMap) == 0x000004, "Member 'BP_MenuPlayerBase_C_SetupDepthMeshComponent::AlphaMap' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetupDepthMeshComponent, NewDepthMaterial) == 0x000010, "Member 'BP_MenuPlayerBase_C_SetupDepthMeshComponent::NewDepthMaterial' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetupDepthMeshComponent, MeshMaterialInstance) == 0x000018, "Member 'BP_MenuPlayerBase_C_SetupDepthMeshComponent::MeshMaterialInstance' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetupDepthMeshComponent, MeshMaterial) == 0x000020, "Member 'BP_MenuPlayerBase_C_SetupDepthMeshComponent::MeshMaterial' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetupDepthMeshComponent, MeshMaterials) == 0x000028, "Member 'BP_MenuPlayerBase_C_SetupDepthMeshComponent::MeshMaterials' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetupDepthMeshComponent, DepthMeshComp) == 0x000038, "Member 'BP_MenuPlayerBase_C_SetupDepthMeshComponent::DepthMeshComp' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetupDepthMeshComponent, MeshComp) == 0x000040, "Member 'BP_MenuPlayerBase_C_SetupDepthMeshComponent::MeshComp' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetupDepthMeshComponent, Temp_int_Loop_Num_Variable) == 0x000048, "Member 'BP_MenuPlayerBase_C_SetupDepthMeshComponent::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetupDepthMeshComponent, Temp_int_Loop_Num_Variable_1) == 0x00004C, "Member 'BP_MenuPlayerBase_C_SetupDepthMeshComponent::Temp_int_Loop_Num_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetupDepthMeshComponent, Temp_int_Array_Index_Variable) == 0x000050, "Member 'BP_MenuPlayerBase_C_SetupDepthMeshComponent::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetupDepthMeshComponent, CallFunc_Array_Length_ReturnValue) == 0x000054, "Member 'BP_MenuPlayerBase_C_SetupDepthMeshComponent::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetupDepthMeshComponent, Temp_int_Loop_Counter_Variable) == 0x000058, "Member 'BP_MenuPlayerBase_C_SetupDepthMeshComponent::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetupDepthMeshComponent, CallFunc_Add_IntInt_ReturnValue) == 0x00005C, "Member 'BP_MenuPlayerBase_C_SetupDepthMeshComponent::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetupDepthMeshComponent, Temp_int_Array_Index_Variable_1) == 0x000060, "Member 'BP_MenuPlayerBase_C_SetupDepthMeshComponent::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetupDepthMeshComponent, Temp_int_Loop_Num_Variable_2) == 0x000064, "Member 'BP_MenuPlayerBase_C_SetupDepthMeshComponent::Temp_int_Loop_Num_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetupDepthMeshComponent, CallFunc_Less_IntInt_ReturnValue) == 0x000068, "Member 'BP_MenuPlayerBase_C_SetupDepthMeshComponent::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetupDepthMeshComponent, Temp_bool_True_if_break_was_hit_Variable) == 0x000069, "Member 'BP_MenuPlayerBase_C_SetupDepthMeshComponent::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetupDepthMeshComponent, CallFunc_Not_PreBool_ReturnValue) == 0x00006A, "Member 'BP_MenuPlayerBase_C_SetupDepthMeshComponent::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetupDepthMeshComponent, CallFunc_MakeLiteralName_ReturnValue) == 0x00006C, "Member 'BP_MenuPlayerBase_C_SetupDepthMeshComponent::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetupDepthMeshComponent, CallFunc_MakeLiteralName_ReturnValue_1) == 0x000074, "Member 'BP_MenuPlayerBase_C_SetupDepthMeshComponent::CallFunc_MakeLiteralName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetupDepthMeshComponent, CallFunc_GetRsScalarParameterValue_OutValue) == 0x00007C, "Member 'BP_MenuPlayerBase_C_SetupDepthMeshComponent::CallFunc_GetRsScalarParameterValue_OutValue' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetupDepthMeshComponent, CallFunc_GetRsScalarParameterValue_ReturnValue) == 0x000080, "Member 'BP_MenuPlayerBase_C_SetupDepthMeshComponent::CallFunc_GetRsScalarParameterValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetupDepthMeshComponent, CallFunc_SelectFloat_ReturnValue) == 0x000084, "Member 'BP_MenuPlayerBase_C_SetupDepthMeshComponent::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetupDepthMeshComponent, CallFunc_GetRsScalarParameterValue_OutValue_1) == 0x000088, "Member 'BP_MenuPlayerBase_C_SetupDepthMeshComponent::CallFunc_GetRsScalarParameterValue_OutValue_1' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetupDepthMeshComponent, CallFunc_GetRsScalarParameterValue_ReturnValue_1) == 0x00008C, "Member 'BP_MenuPlayerBase_C_SetupDepthMeshComponent::CallFunc_GetRsScalarParameterValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetupDepthMeshComponent, CallFunc_SelectFloat_ReturnValue_1) == 0x000090, "Member 'BP_MenuPlayerBase_C_SetupDepthMeshComponent::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetupDepthMeshComponent, K2Node_MakeArray_Array) == 0x000098, "Member 'BP_MenuPlayerBase_C_SetupDepthMeshComponent::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetupDepthMeshComponent, CallFunc_Array_Length_ReturnValue_1) == 0x0000A8, "Member 'BP_MenuPlayerBase_C_SetupDepthMeshComponent::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetupDepthMeshComponent, K2Node_MakeArray_Array_1) == 0x0000B0, "Member 'BP_MenuPlayerBase_C_SetupDepthMeshComponent::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetupDepthMeshComponent, K2Node_MakeArray_Array_2) == 0x0000C0, "Member 'BP_MenuPlayerBase_C_SetupDepthMeshComponent::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetupDepthMeshComponent, Temp_int_Array_Index_Variable_2) == 0x0000D0, "Member 'BP_MenuPlayerBase_C_SetupDepthMeshComponent::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetupDepthMeshComponent, CallFunc_EqualEqual_NameName_ReturnValue) == 0x0000D4, "Member 'BP_MenuPlayerBase_C_SetupDepthMeshComponent::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetupDepthMeshComponent, K2Node_DynamicCast_AsMaterial_Instance) == 0x0000D8, "Member 'BP_MenuPlayerBase_C_SetupDepthMeshComponent::K2Node_DynamicCast_AsMaterial_Instance' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetupDepthMeshComponent, K2Node_DynamicCast_bSuccess) == 0x0000E0, "Member 'BP_MenuPlayerBase_C_SetupDepthMeshComponent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetupDepthMeshComponent, CallFunc_Array_Add_ReturnValue) == 0x0000E4, "Member 'BP_MenuPlayerBase_C_SetupDepthMeshComponent::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetupDepthMeshComponent, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x0000E8, "Member 'BP_MenuPlayerBase_C_SetupDepthMeshComponent::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetupDepthMeshComponent, Temp_int_Loop_Counter_Variable_1) == 0x0000F0, "Member 'BP_MenuPlayerBase_C_SetupDepthMeshComponent::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetupDepthMeshComponent, CallFunc_GetMaterials_ReturnValue) == 0x0000F8, "Member 'BP_MenuPlayerBase_C_SetupDepthMeshComponent::CallFunc_GetMaterials_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetupDepthMeshComponent, CallFunc_Less_IntInt_ReturnValue_1) == 0x000108, "Member 'BP_MenuPlayerBase_C_SetupDepthMeshComponent::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetupDepthMeshComponent, CallFunc_BooleanAND_ReturnValue) == 0x000109, "Member 'BP_MenuPlayerBase_C_SetupDepthMeshComponent::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetupDepthMeshComponent, CallFunc_Add_IntInt_ReturnValue_1) == 0x00010C, "Member 'BP_MenuPlayerBase_C_SetupDepthMeshComponent::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetupDepthMeshComponent, CallFunc_GetComponentPauseFlag_ReturnValue) == 0x000110, "Member 'BP_MenuPlayerBase_C_SetupDepthMeshComponent::CallFunc_GetComponentPauseFlag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetupDepthMeshComponent, Temp_int_Loop_Counter_Variable_2) == 0x000114, "Member 'BP_MenuPlayerBase_C_SetupDepthMeshComponent::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetupDepthMeshComponent, CallFunc_K2_AttachToComponent_ReturnValue) == 0x000118, "Member 'BP_MenuPlayerBase_C_SetupDepthMeshComponent::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetupDepthMeshComponent, CallFunc_Less_IntInt_ReturnValue_2) == 0x000119, "Member 'BP_MenuPlayerBase_C_SetupDepthMeshComponent::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetupDepthMeshComponent, CallFunc_Add_IntInt_ReturnValue_2) == 0x00011C, "Member 'BP_MenuPlayerBase_C_SetupDepthMeshComponent::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetupDepthMeshComponent, CallFunc_BooleanOR_ReturnValue) == 0x000120, "Member 'BP_MenuPlayerBase_C_SetupDepthMeshComponent::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetupDepthMeshComponent, CallFunc_AddActorComponent_ReturnValue) == 0x000128, "Member 'BP_MenuPlayerBase_C_SetupDepthMeshComponent::CallFunc_AddActorComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetupDepthMeshComponent, K2Node_DynamicCast_AsSkeletal_Mesh_Component) == 0x000130, "Member 'BP_MenuPlayerBase_C_SetupDepthMeshComponent::K2Node_DynamicCast_AsSkeletal_Mesh_Component' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetupDepthMeshComponent, K2Node_DynamicCast_bSuccess_1) == 0x000138, "Member 'BP_MenuPlayerBase_C_SetupDepthMeshComponent::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetupDepthMeshComponent, K2Node_DynamicCast_AsSkeletal_Mesh_Component_1) == 0x000140, "Member 'BP_MenuPlayerBase_C_SetupDepthMeshComponent::K2Node_DynamicCast_AsSkeletal_Mesh_Component_1' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetupDepthMeshComponent, K2Node_DynamicCast_bSuccess_2) == 0x000148, "Member 'BP_MenuPlayerBase_C_SetupDepthMeshComponent::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetupDepthMeshComponent, K2Node_DynamicCast_AsStatic_Mesh_Component) == 0x000150, "Member 'BP_MenuPlayerBase_C_SetupDepthMeshComponent::K2Node_DynamicCast_AsStatic_Mesh_Component' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetupDepthMeshComponent, K2Node_DynamicCast_bSuccess_3) == 0x000158, "Member 'BP_MenuPlayerBase_C_SetupDepthMeshComponent::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetupDepthMeshComponent, CallFunc_AddActorComponent_ReturnValue_1) == 0x000160, "Member 'BP_MenuPlayerBase_C_SetupDepthMeshComponent::CallFunc_AddActorComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetupDepthMeshComponent, K2Node_DynamicCast_AsStatic_Mesh_Component_1) == 0x000168, "Member 'BP_MenuPlayerBase_C_SetupDepthMeshComponent::K2Node_DynamicCast_AsStatic_Mesh_Component_1' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetupDepthMeshComponent, K2Node_DynamicCast_bSuccess_4) == 0x000170, "Member 'BP_MenuPlayerBase_C_SetupDepthMeshComponent::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetupDepthMeshComponent, CallFunc_GetObjectName_ReturnValue) == 0x000178, "Member 'BP_MenuPlayerBase_C_SetupDepthMeshComponent::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetupDepthMeshComponent, CallFunc_SetStaticMesh_ReturnValue) == 0x000188, "Member 'BP_MenuPlayerBase_C_SetupDepthMeshComponent::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetupDepthMeshComponent, CallFunc_PrivateCheckUseDepthMesh_UseDepth) == 0x000189, "Member 'BP_MenuPlayerBase_C_SetupDepthMeshComponent::CallFunc_PrivateCheckUseDepthMesh_UseDepth' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetupDepthMeshComponent, CallFunc_HasMaterialParent_ReturnValue) == 0x00018A, "Member 'BP_MenuPlayerBase_C_SetupDepthMeshComponent::CallFunc_HasMaterialParent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetupDepthMeshComponent, CallFunc_GetMeshes_MeshComps) == 0x000190, "Member 'BP_MenuPlayerBase_C_SetupDepthMeshComponent::CallFunc_GetMeshes_MeshComps' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetupDepthMeshComponent, CallFunc_Array_Length_ReturnValue_2) == 0x0001A0, "Member 'BP_MenuPlayerBase_C_SetupDepthMeshComponent::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");

// Function BP_MenuPlayerBase.BP_MenuPlayerBase_C.PrivateDestroyDepthMeshComponent
// 0x0018 (0x0018 - 0x0000)
struct BP_MenuPlayerBase_C_PrivateDestroyDepthMeshComponent final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8BFB[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MenuPlayerBase_C_PrivateDestroyDepthMeshComponent) == 0x000004, "Wrong alignment on BP_MenuPlayerBase_C_PrivateDestroyDepthMeshComponent");
static_assert(sizeof(BP_MenuPlayerBase_C_PrivateDestroyDepthMeshComponent) == 0x000018, "Wrong size on BP_MenuPlayerBase_C_PrivateDestroyDepthMeshComponent");
static_assert(offsetof(BP_MenuPlayerBase_C_PrivateDestroyDepthMeshComponent, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_MenuPlayerBase_C_PrivateDestroyDepthMeshComponent::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_PrivateDestroyDepthMeshComponent, Temp_int_Loop_Num_Variable) == 0x000004, "Member 'BP_MenuPlayerBase_C_PrivateDestroyDepthMeshComponent::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_PrivateDestroyDepthMeshComponent, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_MenuPlayerBase_C_PrivateDestroyDepthMeshComponent::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_PrivateDestroyDepthMeshComponent, CallFunc_Less_IntInt_ReturnValue) == 0x00000C, "Member 'BP_MenuPlayerBase_C_PrivateDestroyDepthMeshComponent::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_PrivateDestroyDepthMeshComponent, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_MenuPlayerBase_C_PrivateDestroyDepthMeshComponent::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_PrivateDestroyDepthMeshComponent, CallFunc_Array_Length_ReturnValue) == 0x000014, "Member 'BP_MenuPlayerBase_C_PrivateDestroyDepthMeshComponent::CallFunc_Array_Length_ReturnValue' has a wrong offset!");

// Function BP_MenuPlayerBase.BP_MenuPlayerBase_C.PrivateCheckUseDepthMesh
// 0x0038 (0x0038 - 0x0000)
struct BP_MenuPlayerBase_C_PrivateCheckUseDepthMesh final
{
public:
	class FString                                 MeshName;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          UseDepth;                                          // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8BFC[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8BFD[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FindSubstring_ReturnValue;                // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MenuPlayerBase_C_PrivateCheckUseDepthMesh) == 0x000008, "Wrong alignment on BP_MenuPlayerBase_C_PrivateCheckUseDepthMesh");
static_assert(sizeof(BP_MenuPlayerBase_C_PrivateCheckUseDepthMesh) == 0x000038, "Wrong size on BP_MenuPlayerBase_C_PrivateCheckUseDepthMesh");
static_assert(offsetof(BP_MenuPlayerBase_C_PrivateCheckUseDepthMesh, MeshName) == 0x000000, "Member 'BP_MenuPlayerBase_C_PrivateCheckUseDepthMesh::MeshName' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_PrivateCheckUseDepthMesh, UseDepth) == 0x000010, "Member 'BP_MenuPlayerBase_C_PrivateCheckUseDepthMesh::UseDepth' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_PrivateCheckUseDepthMesh, Temp_int_Array_Index_Variable) == 0x000014, "Member 'BP_MenuPlayerBase_C_PrivateCheckUseDepthMesh::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_PrivateCheckUseDepthMesh, Temp_int_Loop_Num_Variable) == 0x000018, "Member 'BP_MenuPlayerBase_C_PrivateCheckUseDepthMesh::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_PrivateCheckUseDepthMesh, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'BP_MenuPlayerBase_C_PrivateCheckUseDepthMesh::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_PrivateCheckUseDepthMesh, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'BP_MenuPlayerBase_C_PrivateCheckUseDepthMesh::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_PrivateCheckUseDepthMesh, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'BP_MenuPlayerBase_C_PrivateCheckUseDepthMesh::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_PrivateCheckUseDepthMesh, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_MenuPlayerBase_C_PrivateCheckUseDepthMesh::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_PrivateCheckUseDepthMesh, CallFunc_FindSubstring_ReturnValue) == 0x00002C, "Member 'BP_MenuPlayerBase_C_PrivateCheckUseDepthMesh::CallFunc_FindSubstring_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_PrivateCheckUseDepthMesh, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000030, "Member 'BP_MenuPlayerBase_C_PrivateCheckUseDepthMesh::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_MenuPlayerBase.BP_MenuPlayerBase_C.PrivateCostumeInitialize
// 0x00E8 (0x00E8 - 0x0000)
struct BP_MenuPlayerBase_C_PrivateCostumeInitialize final
{
public:
	int32                                         LCostumeID;                                        // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8BFE[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPlayerInfo                            CallFunc_GetPartyMemberInfo_ReturnValue;           // 0x0010(0x00D0)(NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MenuPlayerBase_C_PrivateCostumeInitialize) == 0x000008, "Wrong alignment on BP_MenuPlayerBase_C_PrivateCostumeInitialize");
static_assert(sizeof(BP_MenuPlayerBase_C_PrivateCostumeInitialize) == 0x0000E8, "Wrong size on BP_MenuPlayerBase_C_PrivateCostumeInitialize");
static_assert(offsetof(BP_MenuPlayerBase_C_PrivateCostumeInitialize, LCostumeID) == 0x000000, "Member 'BP_MenuPlayerBase_C_PrivateCostumeInitialize::LCostumeID' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_PrivateCostumeInitialize, CallFunc_GetPlayerManager_PlayerManager) == 0x000008, "Member 'BP_MenuPlayerBase_C_PrivateCostumeInitialize::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_PrivateCostumeInitialize, CallFunc_GetPartyMemberInfo_ReturnValue) == 0x000010, "Member 'BP_MenuPlayerBase_C_PrivateCostumeInitialize::CallFunc_GetPartyMemberInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_PrivateCostumeInitialize, CallFunc_IsValid_ReturnValue) == 0x0000E0, "Member 'BP_MenuPlayerBase_C_PrivateCostumeInitialize::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_MenuPlayerBase.BP_MenuPlayerBase_C.SetForceMipLevelsToBeResident
// 0x0068 (0x0068 - 0x0000)
struct BP_MenuPlayerBase_C_SetForceMipLevelsToBeResident final
{
public:
	bool                                          TargetPlayer;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          TargetWeapon;                                      // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          TargetAttachments;                                 // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          HighPriority;                                      // 0x0003(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8BFF[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 SkelMeshComp;                                      // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8C00[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USkeletalMeshComponent*>         CallFunc_GetOptionalMeshes_Meshes;                 // 0x0028(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8C01[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_1;                      // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8C02[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class USkeletalMeshComponent*>         CallFunc_GetWeaponMeshes_Meshes;                   // 0x0050(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MenuPlayerBase_C_SetForceMipLevelsToBeResident) == 0x000008, "Wrong alignment on BP_MenuPlayerBase_C_SetForceMipLevelsToBeResident");
static_assert(sizeof(BP_MenuPlayerBase_C_SetForceMipLevelsToBeResident) == 0x000068, "Wrong size on BP_MenuPlayerBase_C_SetForceMipLevelsToBeResident");
static_assert(offsetof(BP_MenuPlayerBase_C_SetForceMipLevelsToBeResident, TargetPlayer) == 0x000000, "Member 'BP_MenuPlayerBase_C_SetForceMipLevelsToBeResident::TargetPlayer' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetForceMipLevelsToBeResident, TargetWeapon) == 0x000001, "Member 'BP_MenuPlayerBase_C_SetForceMipLevelsToBeResident::TargetWeapon' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetForceMipLevelsToBeResident, TargetAttachments) == 0x000002, "Member 'BP_MenuPlayerBase_C_SetForceMipLevelsToBeResident::TargetAttachments' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetForceMipLevelsToBeResident, HighPriority) == 0x000003, "Member 'BP_MenuPlayerBase_C_SetForceMipLevelsToBeResident::HighPriority' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetForceMipLevelsToBeResident, SkelMeshComp) == 0x000008, "Member 'BP_MenuPlayerBase_C_SetForceMipLevelsToBeResident::SkelMeshComp' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetForceMipLevelsToBeResident, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'BP_MenuPlayerBase_C_SetForceMipLevelsToBeResident::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetForceMipLevelsToBeResident, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_MenuPlayerBase_C_SetForceMipLevelsToBeResident::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetForceMipLevelsToBeResident, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BP_MenuPlayerBase_C_SetForceMipLevelsToBeResident::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetForceMipLevelsToBeResident, Temp_int_Array_Index_Variable_1) == 0x00001C, "Member 'BP_MenuPlayerBase_C_SetForceMipLevelsToBeResident::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetForceMipLevelsToBeResident, Temp_int_Loop_Num_Variable) == 0x000020, "Member 'BP_MenuPlayerBase_C_SetForceMipLevelsToBeResident::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetForceMipLevelsToBeResident, CallFunc_Less_IntInt_ReturnValue) == 0x000024, "Member 'BP_MenuPlayerBase_C_SetForceMipLevelsToBeResident::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetForceMipLevelsToBeResident, CallFunc_GetOptionalMeshes_Meshes) == 0x000028, "Member 'BP_MenuPlayerBase_C_SetForceMipLevelsToBeResident::CallFunc_GetOptionalMeshes_Meshes' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetForceMipLevelsToBeResident, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'BP_MenuPlayerBase_C_SetForceMipLevelsToBeResident::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetForceMipLevelsToBeResident, CallFunc_Array_Length_ReturnValue) == 0x00003C, "Member 'BP_MenuPlayerBase_C_SetForceMipLevelsToBeResident::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetForceMipLevelsToBeResident, Temp_int_Loop_Num_Variable_1) == 0x000040, "Member 'BP_MenuPlayerBase_C_SetForceMipLevelsToBeResident::Temp_int_Loop_Num_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetForceMipLevelsToBeResident, Temp_int_Loop_Counter_Variable_1) == 0x000044, "Member 'BP_MenuPlayerBase_C_SetForceMipLevelsToBeResident::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetForceMipLevelsToBeResident, CallFunc_Less_IntInt_ReturnValue_1) == 0x000048, "Member 'BP_MenuPlayerBase_C_SetForceMipLevelsToBeResident::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetForceMipLevelsToBeResident, CallFunc_Add_IntInt_ReturnValue_1) == 0x00004C, "Member 'BP_MenuPlayerBase_C_SetForceMipLevelsToBeResident::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetForceMipLevelsToBeResident, CallFunc_GetWeaponMeshes_Meshes) == 0x000050, "Member 'BP_MenuPlayerBase_C_SetForceMipLevelsToBeResident::CallFunc_GetWeaponMeshes_Meshes' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_SetForceMipLevelsToBeResident, CallFunc_Array_Length_ReturnValue_1) == 0x000060, "Member 'BP_MenuPlayerBase_C_SetForceMipLevelsToBeResident::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");

// Function BP_MenuPlayerBase.BP_MenuPlayerBase_C.ResetForceMipLevelsToBeResident
// 0x0068 (0x0068 - 0x0000)
struct BP_MenuPlayerBase_C_ResetForceMipLevelsToBeResident final
{
public:
	bool                                          TargetPlayer;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          TargetWeapon;                                      // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          TargetAttachments;                                 // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8C03[0x5];                                     // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 SkelMeshComp;                                      // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8C04[0x2];                                     // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USkeletalMeshComponent*>         CallFunc_GetOptionalMeshes_Meshes;                 // 0x0028(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_1;                      // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C05[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USkeletalMeshComponent*>         CallFunc_GetWeaponMeshes_Meshes;                   // 0x0048(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8C06[0x3];                                     // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MenuPlayerBase_C_ResetForceMipLevelsToBeResident) == 0x000008, "Wrong alignment on BP_MenuPlayerBase_C_ResetForceMipLevelsToBeResident");
static_assert(sizeof(BP_MenuPlayerBase_C_ResetForceMipLevelsToBeResident) == 0x000068, "Wrong size on BP_MenuPlayerBase_C_ResetForceMipLevelsToBeResident");
static_assert(offsetof(BP_MenuPlayerBase_C_ResetForceMipLevelsToBeResident, TargetPlayer) == 0x000000, "Member 'BP_MenuPlayerBase_C_ResetForceMipLevelsToBeResident::TargetPlayer' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_ResetForceMipLevelsToBeResident, TargetWeapon) == 0x000001, "Member 'BP_MenuPlayerBase_C_ResetForceMipLevelsToBeResident::TargetWeapon' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_ResetForceMipLevelsToBeResident, TargetAttachments) == 0x000002, "Member 'BP_MenuPlayerBase_C_ResetForceMipLevelsToBeResident::TargetAttachments' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_ResetForceMipLevelsToBeResident, SkelMeshComp) == 0x000008, "Member 'BP_MenuPlayerBase_C_ResetForceMipLevelsToBeResident::SkelMeshComp' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_ResetForceMipLevelsToBeResident, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'BP_MenuPlayerBase_C_ResetForceMipLevelsToBeResident::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_ResetForceMipLevelsToBeResident, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_MenuPlayerBase_C_ResetForceMipLevelsToBeResident::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_ResetForceMipLevelsToBeResident, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BP_MenuPlayerBase_C_ResetForceMipLevelsToBeResident::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_ResetForceMipLevelsToBeResident, Temp_int_Array_Index_Variable_1) == 0x00001C, "Member 'BP_MenuPlayerBase_C_ResetForceMipLevelsToBeResident::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_ResetForceMipLevelsToBeResident, Temp_int_Loop_Num_Variable) == 0x000020, "Member 'BP_MenuPlayerBase_C_ResetForceMipLevelsToBeResident::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_ResetForceMipLevelsToBeResident, CallFunc_Less_IntInt_ReturnValue) == 0x000024, "Member 'BP_MenuPlayerBase_C_ResetForceMipLevelsToBeResident::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_ResetForceMipLevelsToBeResident, CallFunc_IsValid_ReturnValue) == 0x000025, "Member 'BP_MenuPlayerBase_C_ResetForceMipLevelsToBeResident::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_ResetForceMipLevelsToBeResident, CallFunc_GetOptionalMeshes_Meshes) == 0x000028, "Member 'BP_MenuPlayerBase_C_ResetForceMipLevelsToBeResident::CallFunc_GetOptionalMeshes_Meshes' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_ResetForceMipLevelsToBeResident, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'BP_MenuPlayerBase_C_ResetForceMipLevelsToBeResident::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_ResetForceMipLevelsToBeResident, Temp_int_Loop_Num_Variable_1) == 0x00003C, "Member 'BP_MenuPlayerBase_C_ResetForceMipLevelsToBeResident::Temp_int_Loop_Num_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_ResetForceMipLevelsToBeResident, Temp_int_Loop_Counter_Variable_1) == 0x000040, "Member 'BP_MenuPlayerBase_C_ResetForceMipLevelsToBeResident::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_ResetForceMipLevelsToBeResident, CallFunc_GetWeaponMeshes_Meshes) == 0x000048, "Member 'BP_MenuPlayerBase_C_ResetForceMipLevelsToBeResident::CallFunc_GetWeaponMeshes_Meshes' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_ResetForceMipLevelsToBeResident, CallFunc_Array_Length_ReturnValue_1) == 0x000058, "Member 'BP_MenuPlayerBase_C_ResetForceMipLevelsToBeResident::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_ResetForceMipLevelsToBeResident, CallFunc_Less_IntInt_ReturnValue_1) == 0x00005C, "Member 'BP_MenuPlayerBase_C_ResetForceMipLevelsToBeResident::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_ResetForceMipLevelsToBeResident, CallFunc_Add_IntInt_ReturnValue_1) == 0x000060, "Member 'BP_MenuPlayerBase_C_ResetForceMipLevelsToBeResident::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_MenuPlayerBase.BP_MenuPlayerBase_C.DoEquipWeaponAfter
// 0x0002 (0x0002 - 0x0000)
struct BP_MenuPlayerBase_C_DoEquipWeaponAfter final
{
public:
	bool                                          bDisableYuitoString;                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bDummy;                                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MenuPlayerBase_C_DoEquipWeaponAfter) == 0x000001, "Wrong alignment on BP_MenuPlayerBase_C_DoEquipWeaponAfter");
static_assert(sizeof(BP_MenuPlayerBase_C_DoEquipWeaponAfter) == 0x000002, "Wrong size on BP_MenuPlayerBase_C_DoEquipWeaponAfter");
static_assert(offsetof(BP_MenuPlayerBase_C_DoEquipWeaponAfter, bDisableYuitoString) == 0x000000, "Member 'BP_MenuPlayerBase_C_DoEquipWeaponAfter::bDisableYuitoString' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_DoEquipWeaponAfter, bDummy) == 0x000001, "Member 'BP_MenuPlayerBase_C_DoEquipWeaponAfter::bDummy' has a wrong offset!");

// Function BP_MenuPlayerBase.BP_MenuPlayerBase_C.DestroyAttachmentMeshComponent
// 0x0010 (0x0010 - 0x0000)
struct BP_MenuPlayerBase_C_DestroyAttachmentMeshComponent final
{
public:
	class USceneComponent*                        DestroyMeshComponent;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDummy;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MenuPlayerBase_C_DestroyAttachmentMeshComponent) == 0x000008, "Wrong alignment on BP_MenuPlayerBase_C_DestroyAttachmentMeshComponent");
static_assert(sizeof(BP_MenuPlayerBase_C_DestroyAttachmentMeshComponent) == 0x000010, "Wrong size on BP_MenuPlayerBase_C_DestroyAttachmentMeshComponent");
static_assert(offsetof(BP_MenuPlayerBase_C_DestroyAttachmentMeshComponent, DestroyMeshComponent) == 0x000000, "Member 'BP_MenuPlayerBase_C_DestroyAttachmentMeshComponent::DestroyMeshComponent' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_DestroyAttachmentMeshComponent, bDummy) == 0x000008, "Member 'BP_MenuPlayerBase_C_DestroyAttachmentMeshComponent::bDummy' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_DestroyAttachmentMeshComponent, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'BP_MenuPlayerBase_C_DestroyAttachmentMeshComponent::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_MenuPlayerBase.BP_MenuPlayerBase_C.EquipAttachmentInterface
// 0x0014 (0x0014 - 0x0000)
struct BP_MenuPlayerBase_C_EquipAttachmentInterface final
{
public:
	EPlayerAttachment                             Param_Index;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C07[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         AttachmentItemID;                                  // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerID                                     EquipPlayerID;                                     // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C08[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         EquipMeshIndex;                                    // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDummy;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MenuPlayerBase_C_EquipAttachmentInterface) == 0x000004, "Wrong alignment on BP_MenuPlayerBase_C_EquipAttachmentInterface");
static_assert(sizeof(BP_MenuPlayerBase_C_EquipAttachmentInterface) == 0x000014, "Wrong size on BP_MenuPlayerBase_C_EquipAttachmentInterface");
static_assert(offsetof(BP_MenuPlayerBase_C_EquipAttachmentInterface, Param_Index) == 0x000000, "Member 'BP_MenuPlayerBase_C_EquipAttachmentInterface::Param_Index' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_EquipAttachmentInterface, AttachmentItemID) == 0x000004, "Member 'BP_MenuPlayerBase_C_EquipAttachmentInterface::AttachmentItemID' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_EquipAttachmentInterface, EquipPlayerID) == 0x000008, "Member 'BP_MenuPlayerBase_C_EquipAttachmentInterface::EquipPlayerID' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_EquipAttachmentInterface, EquipMeshIndex) == 0x00000C, "Member 'BP_MenuPlayerBase_C_EquipAttachmentInterface::EquipMeshIndex' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_EquipAttachmentInterface, bDummy) == 0x000010, "Member 'BP_MenuPlayerBase_C_EquipAttachmentInterface::bDummy' has a wrong offset!");

// Function BP_MenuPlayerBase.BP_MenuPlayerBase_C.GetAttachedCharacterMesh
// 0x0010 (0x0010 - 0x0000)
struct BP_MenuPlayerBase_C_GetAttachedCharacterMesh final
{
public:
	EPlayerID                                     EquipPlayerID;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C09[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         EquipMeshIndex;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Mesh;                                              // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MenuPlayerBase_C_GetAttachedCharacterMesh) == 0x000008, "Wrong alignment on BP_MenuPlayerBase_C_GetAttachedCharacterMesh");
static_assert(sizeof(BP_MenuPlayerBase_C_GetAttachedCharacterMesh) == 0x000010, "Wrong size on BP_MenuPlayerBase_C_GetAttachedCharacterMesh");
static_assert(offsetof(BP_MenuPlayerBase_C_GetAttachedCharacterMesh, EquipPlayerID) == 0x000000, "Member 'BP_MenuPlayerBase_C_GetAttachedCharacterMesh::EquipPlayerID' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_GetAttachedCharacterMesh, EquipMeshIndex) == 0x000004, "Member 'BP_MenuPlayerBase_C_GetAttachedCharacterMesh::EquipMeshIndex' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_GetAttachedCharacterMesh, Mesh) == 0x000008, "Member 'BP_MenuPlayerBase_C_GetAttachedCharacterMesh::Mesh' has a wrong offset!");

// Function BP_MenuPlayerBase.BP_MenuPlayerBase_C.AttachmentVisibilityOffOnHead
// 0x0002 (0x0002 - 0x0000)
struct BP_MenuPlayerBase_C_AttachmentVisibilityOffOnHead final
{
public:
	bool                                          bOff;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bDummy;                                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MenuPlayerBase_C_AttachmentVisibilityOffOnHead) == 0x000001, "Wrong alignment on BP_MenuPlayerBase_C_AttachmentVisibilityOffOnHead");
static_assert(sizeof(BP_MenuPlayerBase_C_AttachmentVisibilityOffOnHead) == 0x000002, "Wrong size on BP_MenuPlayerBase_C_AttachmentVisibilityOffOnHead");
static_assert(offsetof(BP_MenuPlayerBase_C_AttachmentVisibilityOffOnHead, bOff) == 0x000000, "Member 'BP_MenuPlayerBase_C_AttachmentVisibilityOffOnHead::bOff' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_AttachmentVisibilityOffOnHead, bDummy) == 0x000001, "Member 'BP_MenuPlayerBase_C_AttachmentVisibilityOffOnHead::bDummy' has a wrong offset!");

// Function BP_MenuPlayerBase.BP_MenuPlayerBase_C.AttachmentVisibilityOffOnBackBody
// 0x000C (0x000C - 0x0000)
struct BP_MenuPlayerBase_C_AttachmentVisibilityOffOnBackBody final
{
public:
	bool                                          bVisibility;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8C0A[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         FadeTime;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDummy;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MenuPlayerBase_C_AttachmentVisibilityOffOnBackBody) == 0x000004, "Wrong alignment on BP_MenuPlayerBase_C_AttachmentVisibilityOffOnBackBody");
static_assert(sizeof(BP_MenuPlayerBase_C_AttachmentVisibilityOffOnBackBody) == 0x00000C, "Wrong size on BP_MenuPlayerBase_C_AttachmentVisibilityOffOnBackBody");
static_assert(offsetof(BP_MenuPlayerBase_C_AttachmentVisibilityOffOnBackBody, bVisibility) == 0x000000, "Member 'BP_MenuPlayerBase_C_AttachmentVisibilityOffOnBackBody::bVisibility' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_AttachmentVisibilityOffOnBackBody, FadeTime) == 0x000004, "Member 'BP_MenuPlayerBase_C_AttachmentVisibilityOffOnBackBody::FadeTime' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_AttachmentVisibilityOffOnBackBody, bDummy) == 0x000008, "Member 'BP_MenuPlayerBase_C_AttachmentVisibilityOffOnBackBody::bDummy' has a wrong offset!");

// Function BP_MenuPlayerBase.BP_MenuPlayerBase_C.PrivateLoadMontage
// 0x0060 (0x0060 - 0x0000)
struct BP_MenuPlayerBase_C_PrivateLoadMontage final
{
public:
	TArray<TSoftObjectPtr<class UAnimMontage>>    MontageAsset;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	TArray<class UAnimMontage*>                   MontageObject;                                     // 0x0010(0x0010)(Parm, OutParm, HasGetValueTypeHash)
	TArray<class UAnimMontage*>                   LoadMontages;                                      // 0x0020(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8C0B[0x3];                                     // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue;               // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_DynamicCast_AsAnim_Montage;                 // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8C0C[0x2];                                     // 0x005A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MenuPlayerBase_C_PrivateLoadMontage) == 0x000008, "Wrong alignment on BP_MenuPlayerBase_C_PrivateLoadMontage");
static_assert(sizeof(BP_MenuPlayerBase_C_PrivateLoadMontage) == 0x000060, "Wrong size on BP_MenuPlayerBase_C_PrivateLoadMontage");
static_assert(offsetof(BP_MenuPlayerBase_C_PrivateLoadMontage, MontageAsset) == 0x000000, "Member 'BP_MenuPlayerBase_C_PrivateLoadMontage::MontageAsset' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_PrivateLoadMontage, MontageObject) == 0x000010, "Member 'BP_MenuPlayerBase_C_PrivateLoadMontage::MontageObject' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_PrivateLoadMontage, LoadMontages) == 0x000020, "Member 'BP_MenuPlayerBase_C_PrivateLoadMontage::LoadMontages' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_PrivateLoadMontage, Temp_int_Array_Index_Variable) == 0x000030, "Member 'BP_MenuPlayerBase_C_PrivateLoadMontage::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_PrivateLoadMontage, Temp_int_Loop_Num_Variable) == 0x000034, "Member 'BP_MenuPlayerBase_C_PrivateLoadMontage::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_PrivateLoadMontage, Temp_int_Loop_Counter_Variable) == 0x000038, "Member 'BP_MenuPlayerBase_C_PrivateLoadMontage::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_PrivateLoadMontage, CallFunc_Less_IntInt_ReturnValue) == 0x00003C, "Member 'BP_MenuPlayerBase_C_PrivateLoadMontage::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_PrivateLoadMontage, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'BP_MenuPlayerBase_C_PrivateLoadMontage::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_PrivateLoadMontage, CallFunc_Array_Length_ReturnValue) == 0x000044, "Member 'BP_MenuPlayerBase_C_PrivateLoadMontage::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_PrivateLoadMontage, CallFunc_LoadSoftObject_ReturnValue) == 0x000048, "Member 'BP_MenuPlayerBase_C_PrivateLoadMontage::CallFunc_LoadSoftObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_PrivateLoadMontage, K2Node_DynamicCast_AsAnim_Montage) == 0x000050, "Member 'BP_MenuPlayerBase_C_PrivateLoadMontage::K2Node_DynamicCast_AsAnim_Montage' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_PrivateLoadMontage, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'BP_MenuPlayerBase_C_PrivateLoadMontage::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_PrivateLoadMontage, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000059, "Member 'BP_MenuPlayerBase_C_PrivateLoadMontage::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MenuPlayerBase_C_PrivateLoadMontage, CallFunc_Array_Add_ReturnValue) == 0x00005C, "Member 'BP_MenuPlayerBase_C_PrivateLoadMontage::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

}

