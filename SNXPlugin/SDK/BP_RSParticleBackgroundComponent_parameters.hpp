#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_RSParticleBackgroundComponent

#include "Basic.hpp"

#include "BattlePrototype_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_RSParticleBackgroundComponent.BP_RSParticleBackgroundComponent_C.ExecuteUbergraph_BP_RSParticleBackgroundComponent
// 0x0020 (0x0020 - 0x0000)
struct BP_RSParticleBackgroundComponent_C_ExecuteUbergraph_BP_RSParticleBackgroundComponent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UParticleSystemComponent* PSystem)> K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_7D5D[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               K2Node_CustomEvent_PSystem;                        // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RSParticleBackgroundComponent_C_ExecuteUbergraph_BP_RSParticleBackgroundComponent) == 0x000008, "Wrong alignment on BP_RSParticleBackgroundComponent_C_ExecuteUbergraph_BP_RSParticleBackgroundComponent");
static_assert(sizeof(BP_RSParticleBackgroundComponent_C_ExecuteUbergraph_BP_RSParticleBackgroundComponent) == 0x000020, "Wrong size on BP_RSParticleBackgroundComponent_C_ExecuteUbergraph_BP_RSParticleBackgroundComponent");
static_assert(offsetof(BP_RSParticleBackgroundComponent_C_ExecuteUbergraph_BP_RSParticleBackgroundComponent, EntryPoint) == 0x000000, "Member 'BP_RSParticleBackgroundComponent_C_ExecuteUbergraph_BP_RSParticleBackgroundComponent::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_RSParticleBackgroundComponent_C_ExecuteUbergraph_BP_RSParticleBackgroundComponent, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'BP_RSParticleBackgroundComponent_C_ExecuteUbergraph_BP_RSParticleBackgroundComponent::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_RSParticleBackgroundComponent_C_ExecuteUbergraph_BP_RSParticleBackgroundComponent, K2Node_CustomEvent_PSystem) == 0x000018, "Member 'BP_RSParticleBackgroundComponent_C_ExecuteUbergraph_BP_RSParticleBackgroundComponent::K2Node_CustomEvent_PSystem' has a wrong offset!");

// Function BP_RSParticleBackgroundComponent.BP_RSParticleBackgroundComponent_C.EventOnSystemFinished
// 0x0008 (0x0008 - 0x0000)
struct BP_RSParticleBackgroundComponent_C_EventOnSystemFinished final
{
public:
	class UParticleSystemComponent*               PSystem;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RSParticleBackgroundComponent_C_EventOnSystemFinished) == 0x000008, "Wrong alignment on BP_RSParticleBackgroundComponent_C_EventOnSystemFinished");
static_assert(sizeof(BP_RSParticleBackgroundComponent_C_EventOnSystemFinished) == 0x000008, "Wrong size on BP_RSParticleBackgroundComponent_C_EventOnSystemFinished");
static_assert(offsetof(BP_RSParticleBackgroundComponent_C_EventOnSystemFinished, PSystem) == 0x000000, "Member 'BP_RSParticleBackgroundComponent_C_EventOnSystemFinished::PSystem' has a wrong offset!");

// Function BP_RSParticleBackgroundComponent.BP_RSParticleBackgroundComponent_C.SetBGEmitterParameter
// 0x0070 (0x0070 - 0x0000)
struct BP_RSParticleBackgroundComponent_C_SetBGEmitterParameter final
{
public:
	struct FEffectBackgroundParameter             Parameter;                                         // 0x0000(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue_1;        // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue_2;        // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue_3;        // 0x0063(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue_4;        // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue_5;        // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue_6;        // 0x0066(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue_7;        // 0x0067(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue_8;        // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue_9;        // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue_10;       // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue_11;       // 0x006B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_RSParticleBackgroundComponent_C_SetBGEmitterParameter) == 0x000008, "Wrong alignment on BP_RSParticleBackgroundComponent_C_SetBGEmitterParameter");
static_assert(sizeof(BP_RSParticleBackgroundComponent_C_SetBGEmitterParameter) == 0x000070, "Wrong size on BP_RSParticleBackgroundComponent_C_SetBGEmitterParameter");
static_assert(offsetof(BP_RSParticleBackgroundComponent_C_SetBGEmitterParameter, Parameter) == 0x000000, "Member 'BP_RSParticleBackgroundComponent_C_SetBGEmitterParameter::Parameter' has a wrong offset!");
static_assert(offsetof(BP_RSParticleBackgroundComponent_C_SetBGEmitterParameter, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x000060, "Member 'BP_RSParticleBackgroundComponent_C_SetBGEmitterParameter::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RSParticleBackgroundComponent_C_SetBGEmitterParameter, CallFunc_NotEqual_FloatFloat_ReturnValue_1) == 0x000061, "Member 'BP_RSParticleBackgroundComponent_C_SetBGEmitterParameter::CallFunc_NotEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RSParticleBackgroundComponent_C_SetBGEmitterParameter, CallFunc_NotEqual_FloatFloat_ReturnValue_2) == 0x000062, "Member 'BP_RSParticleBackgroundComponent_C_SetBGEmitterParameter::CallFunc_NotEqual_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_RSParticleBackgroundComponent_C_SetBGEmitterParameter, CallFunc_NotEqual_FloatFloat_ReturnValue_3) == 0x000063, "Member 'BP_RSParticleBackgroundComponent_C_SetBGEmitterParameter::CallFunc_NotEqual_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_RSParticleBackgroundComponent_C_SetBGEmitterParameter, CallFunc_NotEqual_FloatFloat_ReturnValue_4) == 0x000064, "Member 'BP_RSParticleBackgroundComponent_C_SetBGEmitterParameter::CallFunc_NotEqual_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_RSParticleBackgroundComponent_C_SetBGEmitterParameter, CallFunc_NotEqual_FloatFloat_ReturnValue_5) == 0x000065, "Member 'BP_RSParticleBackgroundComponent_C_SetBGEmitterParameter::CallFunc_NotEqual_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_RSParticleBackgroundComponent_C_SetBGEmitterParameter, CallFunc_NotEqual_FloatFloat_ReturnValue_6) == 0x000066, "Member 'BP_RSParticleBackgroundComponent_C_SetBGEmitterParameter::CallFunc_NotEqual_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_RSParticleBackgroundComponent_C_SetBGEmitterParameter, CallFunc_NotEqual_FloatFloat_ReturnValue_7) == 0x000067, "Member 'BP_RSParticleBackgroundComponent_C_SetBGEmitterParameter::CallFunc_NotEqual_FloatFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_RSParticleBackgroundComponent_C_SetBGEmitterParameter, CallFunc_NotEqual_FloatFloat_ReturnValue_8) == 0x000068, "Member 'BP_RSParticleBackgroundComponent_C_SetBGEmitterParameter::CallFunc_NotEqual_FloatFloat_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_RSParticleBackgroundComponent_C_SetBGEmitterParameter, CallFunc_NotEqual_FloatFloat_ReturnValue_9) == 0x000069, "Member 'BP_RSParticleBackgroundComponent_C_SetBGEmitterParameter::CallFunc_NotEqual_FloatFloat_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_RSParticleBackgroundComponent_C_SetBGEmitterParameter, CallFunc_NotEqual_FloatFloat_ReturnValue_10) == 0x00006A, "Member 'BP_RSParticleBackgroundComponent_C_SetBGEmitterParameter::CallFunc_NotEqual_FloatFloat_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_RSParticleBackgroundComponent_C_SetBGEmitterParameter, CallFunc_NotEqual_FloatFloat_ReturnValue_11) == 0x00006B, "Member 'BP_RSParticleBackgroundComponent_C_SetBGEmitterParameter::CallFunc_NotEqual_FloatFloat_ReturnValue_11' has a wrong offset!");

// Function BP_RSParticleBackgroundComponent.BP_RSParticleBackgroundComponent_C.PrivateStartBGEmitterLoop
// 0x0080 (0x0080 - 0x0000)
struct BP_RSParticleBackgroundComponent_C_PrivateStartBGEmitterLoop final
{
public:
	float                                         RandomTime;                                        // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InsertNo;                                          // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SpawnNum;                                          // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D5E[0x2];                                     // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0020(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0030(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D5F[0x2];                                     // 0x0042(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D60[0x3];                                     // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D61[0x3];                                     // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D62[0x3];                                     // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0060(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x0070(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RSParticleBackgroundComponent_C_PrivateStartBGEmitterLoop) == 0x000008, "Wrong alignment on BP_RSParticleBackgroundComponent_C_PrivateStartBGEmitterLoop");
static_assert(sizeof(BP_RSParticleBackgroundComponent_C_PrivateStartBGEmitterLoop) == 0x000080, "Wrong size on BP_RSParticleBackgroundComponent_C_PrivateStartBGEmitterLoop");
static_assert(offsetof(BP_RSParticleBackgroundComponent_C_PrivateStartBGEmitterLoop, RandomTime) == 0x000000, "Member 'BP_RSParticleBackgroundComponent_C_PrivateStartBGEmitterLoop::RandomTime' has a wrong offset!");
static_assert(offsetof(BP_RSParticleBackgroundComponent_C_PrivateStartBGEmitterLoop, InsertNo) == 0x000004, "Member 'BP_RSParticleBackgroundComponent_C_PrivateStartBGEmitterLoop::InsertNo' has a wrong offset!");
static_assert(offsetof(BP_RSParticleBackgroundComponent_C_PrivateStartBGEmitterLoop, SpawnNum) == 0x000008, "Member 'BP_RSParticleBackgroundComponent_C_PrivateStartBGEmitterLoop::SpawnNum' has a wrong offset!");
static_assert(offsetof(BP_RSParticleBackgroundComponent_C_PrivateStartBGEmitterLoop, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'BP_RSParticleBackgroundComponent_C_PrivateStartBGEmitterLoop::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_RSParticleBackgroundComponent_C_PrivateStartBGEmitterLoop, Temp_bool_True_if_break_was_hit_Variable) == 0x000010, "Member 'BP_RSParticleBackgroundComponent_C_PrivateStartBGEmitterLoop::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_RSParticleBackgroundComponent_C_PrivateStartBGEmitterLoop, CallFunc_Not_PreBool_ReturnValue) == 0x000011, "Member 'BP_RSParticleBackgroundComponent_C_PrivateStartBGEmitterLoop::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RSParticleBackgroundComponent_C_PrivateStartBGEmitterLoop, Temp_int_Loop_Num_Variable) == 0x000014, "Member 'BP_RSParticleBackgroundComponent_C_PrivateStartBGEmitterLoop::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_RSParticleBackgroundComponent_C_PrivateStartBGEmitterLoop, Temp_int_Variable) == 0x000018, "Member 'BP_RSParticleBackgroundComponent_C_PrivateStartBGEmitterLoop::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_RSParticleBackgroundComponent_C_PrivateStartBGEmitterLoop, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'BP_RSParticleBackgroundComponent_C_PrivateStartBGEmitterLoop::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RSParticleBackgroundComponent_C_PrivateStartBGEmitterLoop, K2Node_CreateDelegate_OutputDelegate) == 0x000020, "Member 'BP_RSParticleBackgroundComponent_C_PrivateStartBGEmitterLoop::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_RSParticleBackgroundComponent_C_PrivateStartBGEmitterLoop, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000030, "Member 'BP_RSParticleBackgroundComponent_C_PrivateStartBGEmitterLoop::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RSParticleBackgroundComponent_C_PrivateStartBGEmitterLoop, CallFunc_RandomFloatInRange_ReturnValue) == 0x000038, "Member 'BP_RSParticleBackgroundComponent_C_PrivateStartBGEmitterLoop::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RSParticleBackgroundComponent_C_PrivateStartBGEmitterLoop, CallFunc_Array_Length_ReturnValue) == 0x00003C, "Member 'BP_RSParticleBackgroundComponent_C_PrivateStartBGEmitterLoop::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RSParticleBackgroundComponent_C_PrivateStartBGEmitterLoop, CallFunc_Greater_IntInt_ReturnValue) == 0x000040, "Member 'BP_RSParticleBackgroundComponent_C_PrivateStartBGEmitterLoop::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RSParticleBackgroundComponent_C_PrivateStartBGEmitterLoop, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000041, "Member 'BP_RSParticleBackgroundComponent_C_PrivateStartBGEmitterLoop::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RSParticleBackgroundComponent_C_PrivateStartBGEmitterLoop, CallFunc_Array_Length_ReturnValue_1) == 0x000044, "Member 'BP_RSParticleBackgroundComponent_C_PrivateStartBGEmitterLoop::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RSParticleBackgroundComponent_C_PrivateStartBGEmitterLoop, CallFunc_Subtract_IntInt_ReturnValue) == 0x000048, "Member 'BP_RSParticleBackgroundComponent_C_PrivateStartBGEmitterLoop::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RSParticleBackgroundComponent_C_PrivateStartBGEmitterLoop, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00004C, "Member 'BP_RSParticleBackgroundComponent_C_PrivateStartBGEmitterLoop::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RSParticleBackgroundComponent_C_PrivateStartBGEmitterLoop, Temp_int_Loop_Counter_Variable) == 0x000050, "Member 'BP_RSParticleBackgroundComponent_C_PrivateStartBGEmitterLoop::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_RSParticleBackgroundComponent_C_PrivateStartBGEmitterLoop, CallFunc_Less_IntInt_ReturnValue) == 0x000054, "Member 'BP_RSParticleBackgroundComponent_C_PrivateStartBGEmitterLoop::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RSParticleBackgroundComponent_C_PrivateStartBGEmitterLoop, CallFunc_Add_IntInt_ReturnValue_1) == 0x000058, "Member 'BP_RSParticleBackgroundComponent_C_PrivateStartBGEmitterLoop::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RSParticleBackgroundComponent_C_PrivateStartBGEmitterLoop, CallFunc_BooleanAND_ReturnValue) == 0x00005C, "Member 'BP_RSParticleBackgroundComponent_C_PrivateStartBGEmitterLoop::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RSParticleBackgroundComponent_C_PrivateStartBGEmitterLoop, K2Node_CreateDelegate_OutputDelegate_1) == 0x000060, "Member 'BP_RSParticleBackgroundComponent_C_PrivateStartBGEmitterLoop::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_RSParticleBackgroundComponent_C_PrivateStartBGEmitterLoop, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x000070, "Member 'BP_RSParticleBackgroundComponent_C_PrivateStartBGEmitterLoop::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RSParticleBackgroundComponent_C_PrivateStartBGEmitterLoop, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x000078, "Member 'BP_RSParticleBackgroundComponent_C_PrivateStartBGEmitterLoop::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RSParticleBackgroundComponent_C_PrivateStartBGEmitterLoop, CallFunc_RandomIntegerInRange_ReturnValue) == 0x00007C, "Member 'BP_RSParticleBackgroundComponent_C_PrivateStartBGEmitterLoop::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");

// Function BP_RSParticleBackgroundComponent.BP_RSParticleBackgroundComponent_C.PrivateSpawnBGEmitterLoop
// 0x0050 (0x0050 - 0x0000)
struct BP_RSParticleBackgroundComponent_C_PrivateSpawnBGEmitterLoop final
{
public:
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         Temp_int_Variable;                                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0020(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x002C(0x0010)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x0040(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_RSParticleBackgroundComponent_C_PrivateSpawnBGEmitterLoop) == 0x000008, "Wrong alignment on BP_RSParticleBackgroundComponent_C_PrivateSpawnBGEmitterLoop");
static_assert(sizeof(BP_RSParticleBackgroundComponent_C_PrivateSpawnBGEmitterLoop) == 0x000050, "Wrong size on BP_RSParticleBackgroundComponent_C_PrivateSpawnBGEmitterLoop");
static_assert(offsetof(BP_RSParticleBackgroundComponent_C_PrivateSpawnBGEmitterLoop, CallFunc_Subtract_IntInt_ReturnValue) == 0x000000, "Member 'BP_RSParticleBackgroundComponent_C_PrivateSpawnBGEmitterLoop::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RSParticleBackgroundComponent_C_PrivateSpawnBGEmitterLoop, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000004, "Member 'BP_RSParticleBackgroundComponent_C_PrivateSpawnBGEmitterLoop::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RSParticleBackgroundComponent_C_PrivateSpawnBGEmitterLoop, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'BP_RSParticleBackgroundComponent_C_PrivateSpawnBGEmitterLoop::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_RSParticleBackgroundComponent_C_PrivateSpawnBGEmitterLoop, Temp_int_Variable) == 0x000018, "Member 'BP_RSParticleBackgroundComponent_C_PrivateSpawnBGEmitterLoop::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_RSParticleBackgroundComponent_C_PrivateSpawnBGEmitterLoop, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00001C, "Member 'BP_RSParticleBackgroundComponent_C_PrivateSpawnBGEmitterLoop::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RSParticleBackgroundComponent_C_PrivateSpawnBGEmitterLoop, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000020, "Member 'BP_RSParticleBackgroundComponent_C_PrivateSpawnBGEmitterLoop::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RSParticleBackgroundComponent_C_PrivateSpawnBGEmitterLoop, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BP_RSParticleBackgroundComponent_C_PrivateSpawnBGEmitterLoop::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RSParticleBackgroundComponent_C_PrivateSpawnBGEmitterLoop, K2Node_CreateDelegate_OutputDelegate_1) == 0x00002C, "Member 'BP_RSParticleBackgroundComponent_C_PrivateSpawnBGEmitterLoop::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_RSParticleBackgroundComponent_C_PrivateSpawnBGEmitterLoop, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x00003C, "Member 'BP_RSParticleBackgroundComponent_C_PrivateSpawnBGEmitterLoop::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RSParticleBackgroundComponent_C_PrivateSpawnBGEmitterLoop, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x000040, "Member 'BP_RSParticleBackgroundComponent_C_PrivateSpawnBGEmitterLoop::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RSParticleBackgroundComponent_C_PrivateSpawnBGEmitterLoop, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'BP_RSParticleBackgroundComponent_C_PrivateSpawnBGEmitterLoop::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RSParticleBackgroundComponent_C_PrivateSpawnBGEmitterLoop, CallFunc_Less_IntInt_ReturnValue) == 0x00004C, "Member 'BP_RSParticleBackgroundComponent_C_PrivateSpawnBGEmitterLoop::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_RSParticleBackgroundComponent.BP_RSParticleBackgroundComponent_C.PrivateEndBGEmitterLoop
// 0x0020 (0x0020 - 0x0000)
struct BP_RSParticleBackgroundComponent_C_PrivateEndBGEmitterLoop final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RSParticleBackgroundComponent_C_PrivateEndBGEmitterLoop) == 0x000008, "Wrong alignment on BP_RSParticleBackgroundComponent_C_PrivateEndBGEmitterLoop");
static_assert(sizeof(BP_RSParticleBackgroundComponent_C_PrivateEndBGEmitterLoop) == 0x000020, "Wrong size on BP_RSParticleBackgroundComponent_C_PrivateEndBGEmitterLoop");
static_assert(offsetof(BP_RSParticleBackgroundComponent_C_PrivateEndBGEmitterLoop, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'BP_RSParticleBackgroundComponent_C_PrivateEndBGEmitterLoop::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_RSParticleBackgroundComponent_C_PrivateEndBGEmitterLoop, CallFunc_RandomFloatInRange_ReturnValue) == 0x000010, "Member 'BP_RSParticleBackgroundComponent_C_PrivateEndBGEmitterLoop::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RSParticleBackgroundComponent_C_PrivateEndBGEmitterLoop, CallFunc_FMax_ReturnValue) == 0x000014, "Member 'BP_RSParticleBackgroundComponent_C_PrivateEndBGEmitterLoop::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RSParticleBackgroundComponent_C_PrivateEndBGEmitterLoop, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000018, "Member 'BP_RSParticleBackgroundComponent_C_PrivateEndBGEmitterLoop::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");

// Function BP_RSParticleBackgroundComponent.BP_RSParticleBackgroundComponent_C.PrivateSetupTransform
// 0x0100 (0x0100 - 0x0000)
struct BP_RSParticleBackgroundComponent_C_PrivateSetupTransform final
{
public:
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0000(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_2;         // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_3;         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_4;         // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_5;         // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D63[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0040(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetWorldTransform_SweepHitResult;      // 0x0070(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_RSParticleBackgroundComponent_C_PrivateSetupTransform) == 0x000010, "Wrong alignment on BP_RSParticleBackgroundComponent_C_PrivateSetupTransform");
static_assert(sizeof(BP_RSParticleBackgroundComponent_C_PrivateSetupTransform) == 0x000100, "Wrong size on BP_RSParticleBackgroundComponent_C_PrivateSetupTransform");
static_assert(offsetof(BP_RSParticleBackgroundComponent_C_PrivateSetupTransform, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000000, "Member 'BP_RSParticleBackgroundComponent_C_PrivateSetupTransform::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RSParticleBackgroundComponent_C_PrivateSetupTransform, CallFunc_RandomFloatInRange_ReturnValue) == 0x00000C, "Member 'BP_RSParticleBackgroundComponent_C_PrivateSetupTransform::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RSParticleBackgroundComponent_C_PrivateSetupTransform, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x000010, "Member 'BP_RSParticleBackgroundComponent_C_PrivateSetupTransform::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RSParticleBackgroundComponent_C_PrivateSetupTransform, CallFunc_RandomFloatInRange_ReturnValue_2) == 0x000014, "Member 'BP_RSParticleBackgroundComponent_C_PrivateSetupTransform::CallFunc_RandomFloatInRange_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_RSParticleBackgroundComponent_C_PrivateSetupTransform, CallFunc_RandomFloatInRange_ReturnValue_3) == 0x000018, "Member 'BP_RSParticleBackgroundComponent_C_PrivateSetupTransform::CallFunc_RandomFloatInRange_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_RSParticleBackgroundComponent_C_PrivateSetupTransform, CallFunc_RandomFloatInRange_ReturnValue_4) == 0x00001C, "Member 'BP_RSParticleBackgroundComponent_C_PrivateSetupTransform::CallFunc_RandomFloatInRange_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_RSParticleBackgroundComponent_C_PrivateSetupTransform, CallFunc_MakeVector_ReturnValue) == 0x000020, "Member 'BP_RSParticleBackgroundComponent_C_PrivateSetupTransform::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RSParticleBackgroundComponent_C_PrivateSetupTransform, CallFunc_RandomFloatInRange_ReturnValue_5) == 0x00002C, "Member 'BP_RSParticleBackgroundComponent_C_PrivateSetupTransform::CallFunc_RandomFloatInRange_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_RSParticleBackgroundComponent_C_PrivateSetupTransform, CallFunc_MakeRotator_ReturnValue) == 0x000030, "Member 'BP_RSParticleBackgroundComponent_C_PrivateSetupTransform::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RSParticleBackgroundComponent_C_PrivateSetupTransform, CallFunc_MakeTransform_ReturnValue) == 0x000040, "Member 'BP_RSParticleBackgroundComponent_C_PrivateSetupTransform::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RSParticleBackgroundComponent_C_PrivateSetupTransform, CallFunc_K2_SetWorldTransform_SweepHitResult) == 0x000070, "Member 'BP_RSParticleBackgroundComponent_C_PrivateSetupTransform::CallFunc_K2_SetWorldTransform_SweepHitResult' has a wrong offset!");

// Function BP_RSParticleBackgroundComponent.BP_RSParticleBackgroundComponent_C.SetEventCulling
// 0x0001 (0x0001 - 0x0000)
struct BP_RSParticleBackgroundComponent_C_SetEventCulling final
{
public:
	bool                                          Culling;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_RSParticleBackgroundComponent_C_SetEventCulling) == 0x000001, "Wrong alignment on BP_RSParticleBackgroundComponent_C_SetEventCulling");
static_assert(sizeof(BP_RSParticleBackgroundComponent_C_SetEventCulling) == 0x000001, "Wrong size on BP_RSParticleBackgroundComponent_C_SetEventCulling");
static_assert(offsetof(BP_RSParticleBackgroundComponent_C_SetEventCulling, Culling) == 0x000000, "Member 'BP_RSParticleBackgroundComponent_C_SetEventCulling::Culling' has a wrong offset!");

// Function BP_RSParticleBackgroundComponent.BP_RSParticleBackgroundComponent_C.PrivatePlayCheckFlags
// 0x0010 (0x0010 - 0x0000)
struct BP_RSParticleBackgroundComponent_C_PrivatePlayCheckFlags final
{
public:
	class ABP_BrainFieldManager_C*                CallFunc_GetBrainFieldManager_Manager;             // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsBrainFieldParticle_BrainField;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_InBranField_InBrainDield;                 // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnableDistanceCulling_ReturnValue;      // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsCulling_ReturnValue;                    // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_RSParticleBackgroundComponent_C_PrivatePlayCheckFlags) == 0x000008, "Wrong alignment on BP_RSParticleBackgroundComponent_C_PrivatePlayCheckFlags");
static_assert(sizeof(BP_RSParticleBackgroundComponent_C_PrivatePlayCheckFlags) == 0x000010, "Wrong size on BP_RSParticleBackgroundComponent_C_PrivatePlayCheckFlags");
static_assert(offsetof(BP_RSParticleBackgroundComponent_C_PrivatePlayCheckFlags, CallFunc_GetBrainFieldManager_Manager) == 0x000000, "Member 'BP_RSParticleBackgroundComponent_C_PrivatePlayCheckFlags::CallFunc_GetBrainFieldManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_RSParticleBackgroundComponent_C_PrivatePlayCheckFlags, CallFunc_IsBrainFieldParticle_BrainField) == 0x000008, "Member 'BP_RSParticleBackgroundComponent_C_PrivatePlayCheckFlags::CallFunc_IsBrainFieldParticle_BrainField' has a wrong offset!");
static_assert(offsetof(BP_RSParticleBackgroundComponent_C_PrivatePlayCheckFlags, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'BP_RSParticleBackgroundComponent_C_PrivatePlayCheckFlags::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RSParticleBackgroundComponent_C_PrivatePlayCheckFlags, CallFunc_InBranField_InBrainDield) == 0x00000A, "Member 'BP_RSParticleBackgroundComponent_C_PrivatePlayCheckFlags::CallFunc_InBranField_InBrainDield' has a wrong offset!");
static_assert(offsetof(BP_RSParticleBackgroundComponent_C_PrivatePlayCheckFlags, CallFunc_IsEnableDistanceCulling_ReturnValue) == 0x00000B, "Member 'BP_RSParticleBackgroundComponent_C_PrivatePlayCheckFlags::CallFunc_IsEnableDistanceCulling_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RSParticleBackgroundComponent_C_PrivatePlayCheckFlags, CallFunc_IsCulling_ReturnValue) == 0x00000C, "Member 'BP_RSParticleBackgroundComponent_C_PrivatePlayCheckFlags::CallFunc_IsCulling_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RSParticleBackgroundComponent_C_PrivatePlayCheckFlags, CallFunc_BooleanAND_ReturnValue) == 0x00000D, "Member 'BP_RSParticleBackgroundComponent_C_PrivatePlayCheckFlags::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_RSParticleBackgroundComponent.BP_RSParticleBackgroundComponent_C.SetBrainFieldParticle
// 0x0001 (0x0001 - 0x0000)
struct BP_RSParticleBackgroundComponent_C_SetBrainFieldParticle final
{
public:
	bool                                          BrainField;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_RSParticleBackgroundComponent_C_SetBrainFieldParticle) == 0x000001, "Wrong alignment on BP_RSParticleBackgroundComponent_C_SetBrainFieldParticle");
static_assert(sizeof(BP_RSParticleBackgroundComponent_C_SetBrainFieldParticle) == 0x000001, "Wrong size on BP_RSParticleBackgroundComponent_C_SetBrainFieldParticle");
static_assert(offsetof(BP_RSParticleBackgroundComponent_C_SetBrainFieldParticle, BrainField) == 0x000000, "Member 'BP_RSParticleBackgroundComponent_C_SetBrainFieldParticle::BrainField' has a wrong offset!");

// Function BP_RSParticleBackgroundComponent.BP_RSParticleBackgroundComponent_C.IsBrainFieldParticle
// 0x0001 (0x0001 - 0x0000)
struct BP_RSParticleBackgroundComponent_C_IsBrainFieldParticle final
{
public:
	bool                                          BrainField;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_RSParticleBackgroundComponent_C_IsBrainFieldParticle) == 0x000001, "Wrong alignment on BP_RSParticleBackgroundComponent_C_IsBrainFieldParticle");
static_assert(sizeof(BP_RSParticleBackgroundComponent_C_IsBrainFieldParticle) == 0x000001, "Wrong size on BP_RSParticleBackgroundComponent_C_IsBrainFieldParticle");
static_assert(offsetof(BP_RSParticleBackgroundComponent_C_IsBrainFieldParticle, BrainField) == 0x000000, "Member 'BP_RSParticleBackgroundComponent_C_IsBrainFieldParticle::BrainField' has a wrong offset!");

}

