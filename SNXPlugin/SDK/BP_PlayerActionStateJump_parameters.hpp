#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PlayerActionStateJump

#include "Basic.hpp"

#include "BattlePrototype_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "EPlayerJumpTransitionType_structs.hpp"


namespace SDK::Params
{

// Function BP_PlayerActionStateJump.BP_PlayerActionStateJump_C.Enter
// 0x0078 (0x0078 - 0x0000)
struct BP_PlayerActionStateJump_C_Enter final
{
public:
	int32                                         Param;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bActionStepIn;                                     // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6F3D[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                LJumpDir;                                          // 0x000C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LPlayerSpeed;                                      // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerJumpTransitionType                     LSprintJump;                                       // 0x001C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerJumpTransitionType                     LJump;                                             // 0x001D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6F3E[0x2];                                     // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Enter_ReturnValue;                        // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_CalcJumpDir_Dir;                          // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckHardenRestriction_dummy;             // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6F3F[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6F40[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IPlayerInterface>      CallFunc_GetPlayerID_self_CastInput;               // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerID                                     CallFunc_GetPlayerID_ReturnValue;                  // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0073(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerActionStateJump_C_Enter) == 0x000008, "Wrong alignment on BP_PlayerActionStateJump_C_Enter");
static_assert(sizeof(BP_PlayerActionStateJump_C_Enter) == 0x000078, "Wrong size on BP_PlayerActionStateJump_C_Enter");
static_assert(offsetof(BP_PlayerActionStateJump_C_Enter, Param) == 0x000000, "Member 'BP_PlayerActionStateJump_C_Enter::Param' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateJump_C_Enter, ReturnValue) == 0x000004, "Member 'BP_PlayerActionStateJump_C_Enter::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateJump_C_Enter, bActionStepIn) == 0x000008, "Member 'BP_PlayerActionStateJump_C_Enter::bActionStepIn' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateJump_C_Enter, LJumpDir) == 0x00000C, "Member 'BP_PlayerActionStateJump_C_Enter::LJumpDir' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateJump_C_Enter, LPlayerSpeed) == 0x000018, "Member 'BP_PlayerActionStateJump_C_Enter::LPlayerSpeed' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateJump_C_Enter, LSprintJump) == 0x00001C, "Member 'BP_PlayerActionStateJump_C_Enter::LSprintJump' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateJump_C_Enter, LJump) == 0x00001D, "Member 'BP_PlayerActionStateJump_C_Enter::LJump' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateJump_C_Enter, CallFunc_Enter_ReturnValue) == 0x000020, "Member 'BP_PlayerActionStateJump_C_Enter::CallFunc_Enter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateJump_C_Enter, CallFunc_CalcJumpDir_Dir) == 0x000024, "Member 'BP_PlayerActionStateJump_C_Enter::CallFunc_CalcJumpDir_Dir' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateJump_C_Enter, CallFunc_CheckHardenRestriction_dummy) == 0x000030, "Member 'BP_PlayerActionStateJump_C_Enter::CallFunc_CheckHardenRestriction_dummy' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateJump_C_Enter, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000034, "Member 'BP_PlayerActionStateJump_C_Enter::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateJump_C_Enter, CallFunc_BreakRotator_Roll) == 0x000040, "Member 'BP_PlayerActionStateJump_C_Enter::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateJump_C_Enter, CallFunc_BreakRotator_Pitch) == 0x000044, "Member 'BP_PlayerActionStateJump_C_Enter::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateJump_C_Enter, CallFunc_BreakRotator_Yaw) == 0x000048, "Member 'BP_PlayerActionStateJump_C_Enter::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateJump_C_Enter, CallFunc_MakeRotator_ReturnValue) == 0x00004C, "Member 'BP_PlayerActionStateJump_C_Enter::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateJump_C_Enter, CallFunc_K2_SetActorRotation_ReturnValue) == 0x000058, "Member 'BP_PlayerActionStateJump_C_Enter::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateJump_C_Enter, CallFunc_GetPlayerID_self_CastInput) == 0x000060, "Member 'BP_PlayerActionStateJump_C_Enter::CallFunc_GetPlayerID_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateJump_C_Enter, CallFunc_GetPlayerID_ReturnValue) == 0x000070, "Member 'BP_PlayerActionStateJump_C_Enter::CallFunc_GetPlayerID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateJump_C_Enter, K2Node_SwitchEnum_CmpSuccess) == 0x000071, "Member 'BP_PlayerActionStateJump_C_Enter::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateJump_C_Enter, K2Node_SwitchEnum_CmpSuccess_1) == 0x000072, "Member 'BP_PlayerActionStateJump_C_Enter::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateJump_C_Enter, CallFunc_Conv_IntToByte_ReturnValue) == 0x000073, "Member 'BP_PlayerActionStateJump_C_Enter::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateJump_C_Enter, CallFunc_GetValidValue_ReturnValue) == 0x000074, "Member 'BP_PlayerActionStateJump_C_Enter::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");

// Function BP_PlayerActionStateJump.BP_PlayerActionStateJump_C.Update
// 0x0064 (0x0064 - 0x0000)
struct BP_PlayerActionStateJump_C_Update final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActionStatus_Result;                    // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TraceLandCheck_bLand;                     // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6F41[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_TraceLandCheck_LandHeight;                // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsASAnimPlayEnd_ReturnValue;              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsASAnimPlayEnd_ReturnValue_1;            // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6F42[0x1];                                     // 0x000F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6F43[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetActorDeltaSeconds_ActorDeltaSeconds;   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_RInterpTo_ReturnValue;                    // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerActionStateJump_C_Update) == 0x000004, "Wrong alignment on BP_PlayerActionStateJump_C_Update");
static_assert(sizeof(BP_PlayerActionStateJump_C_Update) == 0x000064, "Wrong size on BP_PlayerActionStateJump_C_Update");
static_assert(offsetof(BP_PlayerActionStateJump_C_Update, ReturnValue) == 0x000000, "Member 'BP_PlayerActionStateJump_C_Update::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateJump_C_Update, CallFunc_IsActionStatus_Result) == 0x000004, "Member 'BP_PlayerActionStateJump_C_Update::CallFunc_IsActionStatus_Result' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateJump_C_Update, CallFunc_TraceLandCheck_bLand) == 0x000005, "Member 'BP_PlayerActionStateJump_C_Update::CallFunc_TraceLandCheck_bLand' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateJump_C_Update, CallFunc_TraceLandCheck_LandHeight) == 0x000008, "Member 'BP_PlayerActionStateJump_C_Update::CallFunc_TraceLandCheck_LandHeight' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateJump_C_Update, CallFunc_IsASAnimPlayEnd_ReturnValue) == 0x00000C, "Member 'BP_PlayerActionStateJump_C_Update::CallFunc_IsASAnimPlayEnd_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateJump_C_Update, CallFunc_IsASAnimPlayEnd_ReturnValue_1) == 0x00000D, "Member 'BP_PlayerActionStateJump_C_Update::CallFunc_IsASAnimPlayEnd_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateJump_C_Update, K2Node_SwitchEnum_CmpSuccess) == 0x00000E, "Member 'BP_PlayerActionStateJump_C_Update::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateJump_C_Update, CallFunc_GetVelocity_ReturnValue) == 0x000010, "Member 'BP_PlayerActionStateJump_C_Update::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateJump_C_Update, CallFunc_BreakVector_X) == 0x00001C, "Member 'BP_PlayerActionStateJump_C_Update::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateJump_C_Update, CallFunc_BreakVector_Y) == 0x000020, "Member 'BP_PlayerActionStateJump_C_Update::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateJump_C_Update, CallFunc_BreakVector_Z) == 0x000024, "Member 'BP_PlayerActionStateJump_C_Update::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateJump_C_Update, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000028, "Member 'BP_PlayerActionStateJump_C_Update::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateJump_C_Update, CallFunc_GetActorDeltaSeconds_ActorDeltaSeconds) == 0x00002C, "Member 'BP_PlayerActionStateJump_C_Update::CallFunc_GetActorDeltaSeconds_ActorDeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateJump_C_Update, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000030, "Member 'BP_PlayerActionStateJump_C_Update::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateJump_C_Update, CallFunc_RInterpTo_ReturnValue) == 0x00003C, "Member 'BP_PlayerActionStateJump_C_Update::CallFunc_RInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateJump_C_Update, CallFunc_BreakRotator_Roll) == 0x000048, "Member 'BP_PlayerActionStateJump_C_Update::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateJump_C_Update, CallFunc_BreakRotator_Pitch) == 0x00004C, "Member 'BP_PlayerActionStateJump_C_Update::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateJump_C_Update, CallFunc_BreakRotator_Yaw) == 0x000050, "Member 'BP_PlayerActionStateJump_C_Update::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateJump_C_Update, CallFunc_MakeRotator_ReturnValue) == 0x000054, "Member 'BP_PlayerActionStateJump_C_Update::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateJump_C_Update, CallFunc_K2_SetActorRotation_ReturnValue) == 0x000060, "Member 'BP_PlayerActionStateJump_C_Update::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");

// Function BP_PlayerActionStateJump.BP_PlayerActionStateJump_C.Transition
// 0x0024 (0x0024 - 0x0000)
struct BP_PlayerActionStateJump_C_Transition final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	EFallActionParam                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EJumpActionParam                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EJumpActionParam                              Temp_byte_Variable_2;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EJumpActionParam                              Temp_byte_Variable_3;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EJumpActionParam                              Temp_byte_Variable_4;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EJumpActionParam                              Temp_byte_Variable_5;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EJumpActionParam                              Temp_byte_Variable_6;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EJumpActionParam                              Temp_byte_Variable_7;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFallActionParam                              Temp_byte_Variable_8;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFallActionParam                              Temp_byte_Variable_9;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFallActionParam                              Temp_byte_Variable_10;                             // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFallActionParam                              Temp_byte_Variable_11;                             // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFallActionParam                              Temp_byte_Variable_12;                             // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EJumpActionParam                              Temp_byte_Variable_13;                             // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFallActionParam                              Temp_byte_Variable_14;                             // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFallActionParam                              Temp_byte_Variable_15;                             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFallActionParam                              Temp_byte_Variable_16;                             // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFallActionParam                              Temp_byte_Variable_17;                             // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFallActionParam                              Temp_byte_Variable_18;                             // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFallActionParam                              K2Node_Select_Default;                             // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EJumpActionParam                              K2Node_Select_Default_1;                           // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6F44[0x2];                                     // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActionStatus_Result;                    // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Transition_ReturnValue;                   // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EFallActionParam                              K2Node_Select_Default_2;                           // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6F45[0x1];                                     // 0x001F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_1;             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerActionStateJump_C_Transition) == 0x000004, "Wrong alignment on BP_PlayerActionStateJump_C_Transition");
static_assert(sizeof(BP_PlayerActionStateJump_C_Transition) == 0x000024, "Wrong size on BP_PlayerActionStateJump_C_Transition");
static_assert(offsetof(BP_PlayerActionStateJump_C_Transition, ReturnValue) == 0x000000, "Member 'BP_PlayerActionStateJump_C_Transition::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateJump_C_Transition, Temp_byte_Variable) == 0x000001, "Member 'BP_PlayerActionStateJump_C_Transition::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateJump_C_Transition, Temp_byte_Variable_1) == 0x000002, "Member 'BP_PlayerActionStateJump_C_Transition::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateJump_C_Transition, Temp_byte_Variable_2) == 0x000003, "Member 'BP_PlayerActionStateJump_C_Transition::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateJump_C_Transition, Temp_byte_Variable_3) == 0x000004, "Member 'BP_PlayerActionStateJump_C_Transition::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateJump_C_Transition, Temp_byte_Variable_4) == 0x000005, "Member 'BP_PlayerActionStateJump_C_Transition::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateJump_C_Transition, Temp_byte_Variable_5) == 0x000006, "Member 'BP_PlayerActionStateJump_C_Transition::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateJump_C_Transition, Temp_byte_Variable_6) == 0x000007, "Member 'BP_PlayerActionStateJump_C_Transition::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateJump_C_Transition, Temp_byte_Variable_7) == 0x000008, "Member 'BP_PlayerActionStateJump_C_Transition::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateJump_C_Transition, Temp_byte_Variable_8) == 0x000009, "Member 'BP_PlayerActionStateJump_C_Transition::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateJump_C_Transition, Temp_byte_Variable_9) == 0x00000A, "Member 'BP_PlayerActionStateJump_C_Transition::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateJump_C_Transition, Temp_byte_Variable_10) == 0x00000B, "Member 'BP_PlayerActionStateJump_C_Transition::Temp_byte_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateJump_C_Transition, Temp_byte_Variable_11) == 0x00000C, "Member 'BP_PlayerActionStateJump_C_Transition::Temp_byte_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateJump_C_Transition, Temp_byte_Variable_12) == 0x00000D, "Member 'BP_PlayerActionStateJump_C_Transition::Temp_byte_Variable_12' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateJump_C_Transition, Temp_byte_Variable_13) == 0x00000E, "Member 'BP_PlayerActionStateJump_C_Transition::Temp_byte_Variable_13' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateJump_C_Transition, Temp_byte_Variable_14) == 0x00000F, "Member 'BP_PlayerActionStateJump_C_Transition::Temp_byte_Variable_14' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateJump_C_Transition, Temp_byte_Variable_15) == 0x000010, "Member 'BP_PlayerActionStateJump_C_Transition::Temp_byte_Variable_15' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateJump_C_Transition, Temp_byte_Variable_16) == 0x000011, "Member 'BP_PlayerActionStateJump_C_Transition::Temp_byte_Variable_16' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateJump_C_Transition, Temp_byte_Variable_17) == 0x000012, "Member 'BP_PlayerActionStateJump_C_Transition::Temp_byte_Variable_17' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateJump_C_Transition, Temp_byte_Variable_18) == 0x000013, "Member 'BP_PlayerActionStateJump_C_Transition::Temp_byte_Variable_18' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateJump_C_Transition, K2Node_Select_Default) == 0x000014, "Member 'BP_PlayerActionStateJump_C_Transition::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateJump_C_Transition, K2Node_Select_Default_1) == 0x000015, "Member 'BP_PlayerActionStateJump_C_Transition::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateJump_C_Transition, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000018, "Member 'BP_PlayerActionStateJump_C_Transition::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateJump_C_Transition, CallFunc_IsActionStatus_Result) == 0x00001C, "Member 'BP_PlayerActionStateJump_C_Transition::CallFunc_IsActionStatus_Result' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateJump_C_Transition, CallFunc_Transition_ReturnValue) == 0x00001D, "Member 'BP_PlayerActionStateJump_C_Transition::CallFunc_Transition_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateJump_C_Transition, K2Node_Select_Default_2) == 0x00001E, "Member 'BP_PlayerActionStateJump_C_Transition::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateJump_C_Transition, CallFunc_Conv_ByteToInt_ReturnValue_1) == 0x000020, "Member 'BP_PlayerActionStateJump_C_Transition::CallFunc_Conv_ByteToInt_ReturnValue_1' has a wrong offset!");

// Function BP_PlayerActionStateJump.BP_PlayerActionStateJump_C.Exit
// 0x0010 (0x0010 - 0x0000)
struct BP_PlayerActionStateJump_C_Exit final
{
public:
	int32                                         NextStateIndex;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Exit_ReturnValue;                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetFootIKEnable_Dummy;                    // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerActionStateJump_C_Exit) == 0x000004, "Wrong alignment on BP_PlayerActionStateJump_C_Exit");
static_assert(sizeof(BP_PlayerActionStateJump_C_Exit) == 0x000010, "Wrong size on BP_PlayerActionStateJump_C_Exit");
static_assert(offsetof(BP_PlayerActionStateJump_C_Exit, NextStateIndex) == 0x000000, "Member 'BP_PlayerActionStateJump_C_Exit::NextStateIndex' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateJump_C_Exit, ReturnValue) == 0x000004, "Member 'BP_PlayerActionStateJump_C_Exit::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateJump_C_Exit, CallFunc_Exit_ReturnValue) == 0x000008, "Member 'BP_PlayerActionStateJump_C_Exit::CallFunc_Exit_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateJump_C_Exit, CallFunc_SetFootIKEnable_Dummy) == 0x00000C, "Member 'BP_PlayerActionStateJump_C_Exit::CallFunc_SetFootIKEnable_Dummy' has a wrong offset!");

// Function BP_PlayerActionStateJump.BP_PlayerActionStateJump_C.BeginJump
// 0x0084 (0x0084 - 0x0000)
struct BP_PlayerActionStateJump_C_BeginJump final
{
public:
	struct FVector                                LJumpDir;                                          // 0x0000(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LPlayerSpeed;                                      // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLeftStickZero_ReturnValue;              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerAnimKind                               Temp_byte_Variable;                                // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6F46[0x2];                                     // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_CalcJumpDir_Dir;                          // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAnimKind                               Temp_byte_Variable_1;                              // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAnimKind                               Temp_byte_Variable_2;                              // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6F47[0x2];                                     // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_VSizeSquared_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6F48[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAnimKind                               Temp_byte_Variable_3;                              // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6F49[0x2];                                     // 0x003E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotFromX_ReturnValue;                 // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetFootIKEnable_Dummy;                    // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6F4A[0x3];                                     // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_VSizeSquared_ReturnValue_1;               // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6F4B[0x3];                                     // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6F4C[0x3];                                     // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0074(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAnimKind                               Temp_byte_Variable_4;                              // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EJumpActionParam                              Temp_byte_Variable_5;                              // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAnimKind                               K2Node_Select_Default;                             // 0x0082(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x0083(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerActionStateJump_C_BeginJump) == 0x000004, "Wrong alignment on BP_PlayerActionStateJump_C_BeginJump");
static_assert(sizeof(BP_PlayerActionStateJump_C_BeginJump) == 0x000084, "Wrong size on BP_PlayerActionStateJump_C_BeginJump");
static_assert(offsetof(BP_PlayerActionStateJump_C_BeginJump, LJumpDir) == 0x000000, "Member 'BP_PlayerActionStateJump_C_BeginJump::LJumpDir' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateJump_C_BeginJump, LPlayerSpeed) == 0x00000C, "Member 'BP_PlayerActionStateJump_C_BeginJump::LPlayerSpeed' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateJump_C_BeginJump, CallFunc_IsLeftStickZero_ReturnValue) == 0x000010, "Member 'BP_PlayerActionStateJump_C_BeginJump::CallFunc_IsLeftStickZero_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateJump_C_BeginJump, Temp_byte_Variable) == 0x000011, "Member 'BP_PlayerActionStateJump_C_BeginJump::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateJump_C_BeginJump, CallFunc_CalcJumpDir_Dir) == 0x000014, "Member 'BP_PlayerActionStateJump_C_BeginJump::CallFunc_CalcJumpDir_Dir' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateJump_C_BeginJump, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000020, "Member 'BP_PlayerActionStateJump_C_BeginJump::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateJump_C_BeginJump, Temp_byte_Variable_1) == 0x000024, "Member 'BP_PlayerActionStateJump_C_BeginJump::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateJump_C_BeginJump, Temp_byte_Variable_2) == 0x000025, "Member 'BP_PlayerActionStateJump_C_BeginJump::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateJump_C_BeginJump, CallFunc_VSizeSquared_ReturnValue) == 0x000028, "Member 'BP_PlayerActionStateJump_C_BeginJump::CallFunc_VSizeSquared_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateJump_C_BeginJump, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x00002C, "Member 'BP_PlayerActionStateJump_C_BeginJump::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateJump_C_BeginJump, CallFunc_GetActorForwardVector_ReturnValue) == 0x000030, "Member 'BP_PlayerActionStateJump_C_BeginJump::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateJump_C_BeginJump, Temp_byte_Variable_3) == 0x00003C, "Member 'BP_PlayerActionStateJump_C_BeginJump::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateJump_C_BeginJump, K2Node_SwitchEnum_CmpSuccess) == 0x00003D, "Member 'BP_PlayerActionStateJump_C_BeginJump::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateJump_C_BeginJump, CallFunc_MakeRotFromX_ReturnValue) == 0x000040, "Member 'BP_PlayerActionStateJump_C_BeginJump::CallFunc_MakeRotFromX_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateJump_C_BeginJump, CallFunc_SetFootIKEnable_Dummy) == 0x00004C, "Member 'BP_PlayerActionStateJump_C_BeginJump::CallFunc_SetFootIKEnable_Dummy' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateJump_C_BeginJump, CallFunc_VSizeSquared_ReturnValue_1) == 0x000050, "Member 'BP_PlayerActionStateJump_C_BeginJump::CallFunc_VSizeSquared_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateJump_C_BeginJump, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000054, "Member 'BP_PlayerActionStateJump_C_BeginJump::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateJump_C_BeginJump, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000058, "Member 'BP_PlayerActionStateJump_C_BeginJump::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateJump_C_BeginJump, CallFunc_BreakVector_X) == 0x000064, "Member 'BP_PlayerActionStateJump_C_BeginJump::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateJump_C_BeginJump, CallFunc_BreakVector_Y) == 0x000068, "Member 'BP_PlayerActionStateJump_C_BeginJump::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateJump_C_BeginJump, CallFunc_BreakVector_Z) == 0x00006C, "Member 'BP_PlayerActionStateJump_C_BeginJump::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateJump_C_BeginJump, K2Node_SwitchEnum_CmpSuccess_1) == 0x000070, "Member 'BP_PlayerActionStateJump_C_BeginJump::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateJump_C_BeginJump, CallFunc_MakeVector_ReturnValue) == 0x000074, "Member 'BP_PlayerActionStateJump_C_BeginJump::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateJump_C_BeginJump, Temp_byte_Variable_4) == 0x000080, "Member 'BP_PlayerActionStateJump_C_BeginJump::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateJump_C_BeginJump, Temp_byte_Variable_5) == 0x000081, "Member 'BP_PlayerActionStateJump_C_BeginJump::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateJump_C_BeginJump, K2Node_Select_Default) == 0x000082, "Member 'BP_PlayerActionStateJump_C_BeginJump::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateJump_C_BeginJump, K2Node_SwitchEnum_CmpSuccess_2) == 0x000083, "Member 'BP_PlayerActionStateJump_C_BeginJump::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");

// Function BP_PlayerActionStateJump.BP_PlayerActionStateJump_C.BeginJumpIn
// 0x0004 (0x0004 - 0x0000)
struct BP_PlayerActionStateJump_C_BeginJumpIn final
{
public:
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerActionStateJump_C_BeginJumpIn) == 0x000004, "Wrong alignment on BP_PlayerActionStateJump_C_BeginJumpIn");
static_assert(sizeof(BP_PlayerActionStateJump_C_BeginJumpIn) == 0x000004, "Wrong size on BP_PlayerActionStateJump_C_BeginJumpIn");
static_assert(offsetof(BP_PlayerActionStateJump_C_BeginJumpIn, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000000, "Member 'BP_PlayerActionStateJump_C_BeginJumpIn::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");

// Function BP_PlayerActionStateJump.BP_PlayerActionStateJump_C.CalcJumpDir
// 0x0038 (0x0038 - 0x0000)
struct BP_PlayerActionStateJump_C_CalcJumpDir final
{
public:
	struct FVector                                Dir;                                               // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetLeftStickX_ReturnValue;                // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetLeftStickY_ReturnValue;                // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_CalcWorldVector_ReturnValue;              // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerActionStateJump_C_CalcJumpDir) == 0x000004, "Wrong alignment on BP_PlayerActionStateJump_C_CalcJumpDir");
static_assert(sizeof(BP_PlayerActionStateJump_C_CalcJumpDir) == 0x000038, "Wrong size on BP_PlayerActionStateJump_C_CalcJumpDir");
static_assert(offsetof(BP_PlayerActionStateJump_C_CalcJumpDir, Dir) == 0x000000, "Member 'BP_PlayerActionStateJump_C_CalcJumpDir::Dir' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateJump_C_CalcJumpDir, CallFunc_GetLeftStickX_ReturnValue) == 0x00000C, "Member 'BP_PlayerActionStateJump_C_CalcJumpDir::CallFunc_GetLeftStickX_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateJump_C_CalcJumpDir, CallFunc_GetLeftStickY_ReturnValue) == 0x000010, "Member 'BP_PlayerActionStateJump_C_CalcJumpDir::CallFunc_GetLeftStickY_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateJump_C_CalcJumpDir, CallFunc_MakeVector_ReturnValue) == 0x000014, "Member 'BP_PlayerActionStateJump_C_CalcJumpDir::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateJump_C_CalcJumpDir, CallFunc_Normal_ReturnValue) == 0x000020, "Member 'BP_PlayerActionStateJump_C_CalcJumpDir::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateJump_C_CalcJumpDir, CallFunc_CalcWorldVector_ReturnValue) == 0x00002C, "Member 'BP_PlayerActionStateJump_C_CalcJumpDir::CallFunc_CalcWorldVector_ReturnValue' has a wrong offset!");

}

