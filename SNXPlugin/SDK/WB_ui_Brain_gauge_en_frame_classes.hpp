#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_ui_Brain_gauge_en_frame

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BattlePrototype_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WB_ui_Brain_gauge_en_frame.WB_ui_Brain_gauge_en_frame_C
// 0x0048 (0x03E0 - 0x0398)
class UWB_ui_Brain_gauge_en_frame_C final : public UUIBrainGaugeEN
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0398(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Out_using;                                         // 0x03A0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       In_using;                                          // 0x03A8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Using;                                             // 0x03B0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UOverlay*                               All;                                               // 0x03B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Guage_frame_1;                                     // 0x03C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Guage_frame_2;                                     // 0x03C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UREDTextBlock*                          Text_brain_number_en_1;                            // 0x03D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UREDTextBlock*                          Text_brain_second_en_1;                            // 0x03D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WB_ui_Brain_gauge_en_frame(int32 EntryPoint);
	void UpdateState(int32 State, int32 SubState, float DeltaSeconds);
	void Construct();
	void StateNone(int32 SubState);
	void StateLoopNormal(int32 SubState);
	void StateLoopUsing(int32 SubState);
	void UpdateGaugeFrame();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WB_ui_Brain_gauge_en_frame_C">();
	}
	static class UWB_ui_Brain_gauge_en_frame_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWB_ui_Brain_gauge_en_frame_C>();
	}
};
static_assert(alignof(UWB_ui_Brain_gauge_en_frame_C) == 0x000008, "Wrong alignment on UWB_ui_Brain_gauge_en_frame_C");
static_assert(sizeof(UWB_ui_Brain_gauge_en_frame_C) == 0x0003E0, "Wrong size on UWB_ui_Brain_gauge_en_frame_C");
static_assert(offsetof(UWB_ui_Brain_gauge_en_frame_C, UberGraphFrame) == 0x000398, "Member 'UWB_ui_Brain_gauge_en_frame_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWB_ui_Brain_gauge_en_frame_C, Out_using) == 0x0003A0, "Member 'UWB_ui_Brain_gauge_en_frame_C::Out_using' has a wrong offset!");
static_assert(offsetof(UWB_ui_Brain_gauge_en_frame_C, In_using) == 0x0003A8, "Member 'UWB_ui_Brain_gauge_en_frame_C::In_using' has a wrong offset!");
static_assert(offsetof(UWB_ui_Brain_gauge_en_frame_C, Using) == 0x0003B0, "Member 'UWB_ui_Brain_gauge_en_frame_C::Using' has a wrong offset!");
static_assert(offsetof(UWB_ui_Brain_gauge_en_frame_C, All) == 0x0003B8, "Member 'UWB_ui_Brain_gauge_en_frame_C::All' has a wrong offset!");
static_assert(offsetof(UWB_ui_Brain_gauge_en_frame_C, Guage_frame_1) == 0x0003C0, "Member 'UWB_ui_Brain_gauge_en_frame_C::Guage_frame_1' has a wrong offset!");
static_assert(offsetof(UWB_ui_Brain_gauge_en_frame_C, Guage_frame_2) == 0x0003C8, "Member 'UWB_ui_Brain_gauge_en_frame_C::Guage_frame_2' has a wrong offset!");
static_assert(offsetof(UWB_ui_Brain_gauge_en_frame_C, Text_brain_number_en_1) == 0x0003D0, "Member 'UWB_ui_Brain_gauge_en_frame_C::Text_brain_number_en_1' has a wrong offset!");
static_assert(offsetof(UWB_ui_Brain_gauge_en_frame_C, Text_brain_second_en_1) == 0x0003D8, "Member 'UWB_ui_Brain_gauge_en_frame_C::Text_brain_second_en_1' has a wrong offset!");

}

