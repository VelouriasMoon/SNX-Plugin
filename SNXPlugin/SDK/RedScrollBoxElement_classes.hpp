#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: RedScrollBoxElement

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BattlePrototype_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass RedScrollBoxElement.RedScrollBoxElement_C
// 0x0018 (0x0288 - 0x0270)
class URedScrollBoxElement_C final : public UREDScrollBoxElement
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0270(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UOverlay*                               Overlay_1;                                         // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpacer*                                Spacer_33;                                         // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_RedScrollBoxElement(int32 EntryPoint);
	void SelfInitialize();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"RedScrollBoxElement_C">();
	}
	static class URedScrollBoxElement_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<URedScrollBoxElement_C>();
	}
};
static_assert(alignof(URedScrollBoxElement_C) == 0x000008, "Wrong alignment on URedScrollBoxElement_C");
static_assert(sizeof(URedScrollBoxElement_C) == 0x000288, "Wrong size on URedScrollBoxElement_C");
static_assert(offsetof(URedScrollBoxElement_C, UberGraphFrame) == 0x000270, "Member 'URedScrollBoxElement_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(URedScrollBoxElement_C, Overlay_1) == 0x000278, "Member 'URedScrollBoxElement_C::Overlay_1' has a wrong offset!");
static_assert(offsetof(URedScrollBoxElement_C, Spacer_33) == 0x000280, "Member 'URedScrollBoxElement_C::Spacer_33' has a wrong offset!");

}

