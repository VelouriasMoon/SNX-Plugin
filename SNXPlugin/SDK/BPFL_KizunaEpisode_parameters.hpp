#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPFL_KizunaEpisode

#include "Basic.hpp"

#include "BattlePrototype_structs.hpp"


namespace SDK::Params
{

// Function BPFL_KizunaEpisode.BPFL_KizunaEpisode_C.IsNeedKizunaIcon
// 0x00F0 (0x00F0 - 0x0000)
struct BPFL_KizunaEpisode_C_IsNeedKizunaIcon final
{
public:
	EPlayerID                                     PlayerId;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerID                                     TargetCharaId;                                     // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8643[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NeedKizunaIcon;                                    // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8644[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EPlayerID>                             CallFunc_GetSelectedTogetherCharID_selectedArray;  // 0x0018(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class ABP_SceneManager_C*                     CallFunc_GetSceneManager_SceneManager;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_EventManager_C*                     CallFunc_GetEventManager_EventManager;             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckScenarioFlag_ReturnValue;            // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8645[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_EventManager_C>   CallFunc_GetProgressID_self_CastInput;             // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetProgressID_ProgressID;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8646[0x4];                                     // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserParamManager*                      CallFunc_GetUserParamManager_UserParamManager;     // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8647[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x006B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckKizunaEpisode_DLC2_NeedKizunaIcon;   // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckKizunaLvup_DLC2_NeedKizunaIcon;      // 0x006D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8648[0x2];                                     // 0x006E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckKizunaLvup_DLC1_NeedKizunaIcon;      // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckKizunaEpisode_DLC1_NeedKizunaIcon;   // 0x0076(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckMatchingAttachment_NeedKizunaIcon;   // 0x0077(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckTwoshotPhoto_NeedKizunaIcon;         // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8649[0x3];                                     // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_CheckStartTeamBondsEpisode_episodeNo;     // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckStartTeamBondsEpisode_ReturnValue;   // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_1;            // 0x0085(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckMemberAlreadyUnion_AlreadyUnion;     // 0x0086(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0087(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckBondsLevelUp_ReturnValue;            // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x008B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_864A[0x4];                                     // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0098(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_864B[0x4];                                     // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKizunaEpisodeCheckInfo                CallFunc_GetDataTableRowFromName_OutRow;           // 0x00B0(0x0038)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckKizunaEpisode_row_NeedKizunaIcon;    // 0x00EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPFL_KizunaEpisode_C_IsNeedKizunaIcon) == 0x000008, "Wrong alignment on BPFL_KizunaEpisode_C_IsNeedKizunaIcon");
static_assert(sizeof(BPFL_KizunaEpisode_C_IsNeedKizunaIcon) == 0x0000F0, "Wrong size on BPFL_KizunaEpisode_C_IsNeedKizunaIcon");
static_assert(offsetof(BPFL_KizunaEpisode_C_IsNeedKizunaIcon, PlayerId) == 0x000000, "Member 'BPFL_KizunaEpisode_C_IsNeedKizunaIcon::PlayerId' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_IsNeedKizunaIcon, TargetCharaId) == 0x000001, "Member 'BPFL_KizunaEpisode_C_IsNeedKizunaIcon::TargetCharaId' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_IsNeedKizunaIcon, __WorldContext) == 0x000008, "Member 'BPFL_KizunaEpisode_C_IsNeedKizunaIcon::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_IsNeedKizunaIcon, NeedKizunaIcon) == 0x000010, "Member 'BPFL_KizunaEpisode_C_IsNeedKizunaIcon::NeedKizunaIcon' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_IsNeedKizunaIcon, CallFunc_GetSelectedTogetherCharID_selectedArray) == 0x000018, "Member 'BPFL_KizunaEpisode_C_IsNeedKizunaIcon::CallFunc_GetSelectedTogetherCharID_selectedArray' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_IsNeedKizunaIcon, CallFunc_GetSceneManager_SceneManager) == 0x000028, "Member 'BPFL_KizunaEpisode_C_IsNeedKizunaIcon::CallFunc_GetSceneManager_SceneManager' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_IsNeedKizunaIcon, CallFunc_GetEventManager_EventManager) == 0x000030, "Member 'BPFL_KizunaEpisode_C_IsNeedKizunaIcon::CallFunc_GetEventManager_EventManager' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_IsNeedKizunaIcon, CallFunc_CheckScenarioFlag_ReturnValue) == 0x000038, "Member 'BPFL_KizunaEpisode_C_IsNeedKizunaIcon::CallFunc_CheckScenarioFlag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_IsNeedKizunaIcon, CallFunc_GetProgressID_self_CastInput) == 0x000040, "Member 'BPFL_KizunaEpisode_C_IsNeedKizunaIcon::CallFunc_GetProgressID_self_CastInput' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_IsNeedKizunaIcon, CallFunc_GetProgressID_ProgressID) == 0x000050, "Member 'BPFL_KizunaEpisode_C_IsNeedKizunaIcon::CallFunc_GetProgressID_ProgressID' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_IsNeedKizunaIcon, CallFunc_GetUserParamManager_UserParamManager) == 0x000058, "Member 'BPFL_KizunaEpisode_C_IsNeedKizunaIcon::CallFunc_GetUserParamManager_UserParamManager' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_IsNeedKizunaIcon, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000060, "Member 'BPFL_KizunaEpisode_C_IsNeedKizunaIcon::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_IsNeedKizunaIcon, CallFunc_Percent_IntInt_ReturnValue) == 0x000064, "Member 'BPFL_KizunaEpisode_C_IsNeedKizunaIcon::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_IsNeedKizunaIcon, CallFunc_BooleanAND_ReturnValue) == 0x000068, "Member 'BPFL_KizunaEpisode_C_IsNeedKizunaIcon::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_IsNeedKizunaIcon, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000069, "Member 'BPFL_KizunaEpisode_C_IsNeedKizunaIcon::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_IsNeedKizunaIcon, CallFunc_BooleanAND_ReturnValue_1) == 0x00006A, "Member 'BPFL_KizunaEpisode_C_IsNeedKizunaIcon::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_IsNeedKizunaIcon, CallFunc_BooleanOR_ReturnValue) == 0x00006B, "Member 'BPFL_KizunaEpisode_C_IsNeedKizunaIcon::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_IsNeedKizunaIcon, CallFunc_CheckKizunaEpisode_DLC2_NeedKizunaIcon) == 0x00006C, "Member 'BPFL_KizunaEpisode_C_IsNeedKizunaIcon::CallFunc_CheckKizunaEpisode_DLC2_NeedKizunaIcon' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_IsNeedKizunaIcon, CallFunc_CheckKizunaLvup_DLC2_NeedKizunaIcon) == 0x00006D, "Member 'BPFL_KizunaEpisode_C_IsNeedKizunaIcon::CallFunc_CheckKizunaLvup_DLC2_NeedKizunaIcon' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_IsNeedKizunaIcon, CallFunc_Array_Find_ReturnValue) == 0x000070, "Member 'BPFL_KizunaEpisode_C_IsNeedKizunaIcon::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_IsNeedKizunaIcon, CallFunc_CheckKizunaLvup_DLC1_NeedKizunaIcon) == 0x000074, "Member 'BPFL_KizunaEpisode_C_IsNeedKizunaIcon::CallFunc_CheckKizunaLvup_DLC1_NeedKizunaIcon' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_IsNeedKizunaIcon, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000075, "Member 'BPFL_KizunaEpisode_C_IsNeedKizunaIcon::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_IsNeedKizunaIcon, CallFunc_CheckKizunaEpisode_DLC1_NeedKizunaIcon) == 0x000076, "Member 'BPFL_KizunaEpisode_C_IsNeedKizunaIcon::CallFunc_CheckKizunaEpisode_DLC1_NeedKizunaIcon' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_IsNeedKizunaIcon, CallFunc_CheckMatchingAttachment_NeedKizunaIcon) == 0x000077, "Member 'BPFL_KizunaEpisode_C_IsNeedKizunaIcon::CallFunc_CheckMatchingAttachment_NeedKizunaIcon' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_IsNeedKizunaIcon, Temp_int_Array_Index_Variable) == 0x000078, "Member 'BPFL_KizunaEpisode_C_IsNeedKizunaIcon::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_IsNeedKizunaIcon, CallFunc_CheckTwoshotPhoto_NeedKizunaIcon) == 0x00007C, "Member 'BPFL_KizunaEpisode_C_IsNeedKizunaIcon::CallFunc_CheckTwoshotPhoto_NeedKizunaIcon' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_IsNeedKizunaIcon, CallFunc_CheckStartTeamBondsEpisode_episodeNo) == 0x000080, "Member 'BPFL_KizunaEpisode_C_IsNeedKizunaIcon::CallFunc_CheckStartTeamBondsEpisode_episodeNo' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_IsNeedKizunaIcon, CallFunc_CheckStartTeamBondsEpisode_ReturnValue) == 0x000084, "Member 'BPFL_KizunaEpisode_C_IsNeedKizunaIcon::CallFunc_CheckStartTeamBondsEpisode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_IsNeedKizunaIcon, CallFunc_NotEqual_IntInt_ReturnValue_1) == 0x000085, "Member 'BPFL_KizunaEpisode_C_IsNeedKizunaIcon::CallFunc_NotEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_IsNeedKizunaIcon, CallFunc_CheckMemberAlreadyUnion_AlreadyUnion) == 0x000086, "Member 'BPFL_KizunaEpisode_C_IsNeedKizunaIcon::CallFunc_CheckMemberAlreadyUnion_AlreadyUnion' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_IsNeedKizunaIcon, CallFunc_BooleanAND_ReturnValue_2) == 0x000087, "Member 'BPFL_KizunaEpisode_C_IsNeedKizunaIcon::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_IsNeedKizunaIcon, CallFunc_CheckBondsLevelUp_ReturnValue) == 0x000088, "Member 'BPFL_KizunaEpisode_C_IsNeedKizunaIcon::CallFunc_CheckBondsLevelUp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_IsNeedKizunaIcon, CallFunc_BooleanAND_ReturnValue_3) == 0x000089, "Member 'BPFL_KizunaEpisode_C_IsNeedKizunaIcon::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_IsNeedKizunaIcon, CallFunc_BooleanAND_ReturnValue_4) == 0x00008A, "Member 'BPFL_KizunaEpisode_C_IsNeedKizunaIcon::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_IsNeedKizunaIcon, CallFunc_BooleanAND_ReturnValue_5) == 0x00008B, "Member 'BPFL_KizunaEpisode_C_IsNeedKizunaIcon::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_IsNeedKizunaIcon, Temp_int_Loop_Counter_Variable) == 0x00008C, "Member 'BPFL_KizunaEpisode_C_IsNeedKizunaIcon::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_IsNeedKizunaIcon, CallFunc_Add_IntInt_ReturnValue) == 0x000090, "Member 'BPFL_KizunaEpisode_C_IsNeedKizunaIcon::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_IsNeedKizunaIcon, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000098, "Member 'BPFL_KizunaEpisode_C_IsNeedKizunaIcon::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_IsNeedKizunaIcon, CallFunc_Array_Length_ReturnValue) == 0x0000A8, "Member 'BPFL_KizunaEpisode_C_IsNeedKizunaIcon::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_IsNeedKizunaIcon, CallFunc_GetDataTableRowFromName_OutRow) == 0x0000B0, "Member 'BPFL_KizunaEpisode_C_IsNeedKizunaIcon::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_IsNeedKizunaIcon, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0000E8, "Member 'BPFL_KizunaEpisode_C_IsNeedKizunaIcon::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_IsNeedKizunaIcon, CallFunc_Less_IntInt_ReturnValue) == 0x0000E9, "Member 'BPFL_KizunaEpisode_C_IsNeedKizunaIcon::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_IsNeedKizunaIcon, CallFunc_CheckKizunaEpisode_row_NeedKizunaIcon) == 0x0000EA, "Member 'BPFL_KizunaEpisode_C_IsNeedKizunaIcon::CallFunc_CheckKizunaEpisode_row_NeedKizunaIcon' has a wrong offset!");

// Function BPFL_KizunaEpisode.BPFL_KizunaEpisode_C.CheckKizunaEpisode_row
// 0x00A8 (0x00A8 - 0x0000)
struct BPFL_KizunaEpisode_C_CheckKizunaEpisode_row final
{
public:
	EPlayerID                                     PlayerId;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerID                                     TargetCharaId;                                     // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_864C[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKizunaEpisodeCheckInfo                KizunaEpisodeInfo;                                 // 0x0008(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UObject*                                __WorldContext;                                    // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NeedKizunaIcon;                                    // 0x0048(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EGameClearState                               CallFunc_GetGameClearState_ReturnValue;            // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGameClearState                               CallFunc_GetGameClearState_ReturnValue_1;          // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x004B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_864D[0x3];                                     // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetItemNum_ReturnValue;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetItemNum_ReturnValue_1;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x005B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_864E[0x2];                                     // 0x005E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_864F[0x3];                                     // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_3;          // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8650[0x3];                                     // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x0076(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8651[0x1];                                     // 0x0077(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckProgressID_ReturnEnable1;            // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8652[0x3];                                     // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckBondsProgressID_ReturnEnable1;       // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8653[0x3];                                     // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckScenarioFlag_FlagValue;              // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8654[0x2];                                     // 0x0092(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8655[0x3];                                     // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8656[0x3];                                     // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_row) == 0x000008, "Wrong alignment on BPFL_KizunaEpisode_C_CheckKizunaEpisode_row");
static_assert(sizeof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_row) == 0x0000A8, "Wrong size on BPFL_KizunaEpisode_C_CheckKizunaEpisode_row");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_row, PlayerId) == 0x000000, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_row::PlayerId' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_row, TargetCharaId) == 0x000001, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_row::TargetCharaId' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_row, KizunaEpisodeInfo) == 0x000008, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_row::KizunaEpisodeInfo' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_row, __WorldContext) == 0x000040, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_row::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_row, NeedKizunaIcon) == 0x000048, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_row::NeedKizunaIcon' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_row, CallFunc_GetGameClearState_ReturnValue) == 0x000049, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_row::CallFunc_GetGameClearState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_row, CallFunc_GetGameClearState_ReturnValue_1) == 0x00004A, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_row::CallFunc_GetGameClearState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_row, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00004B, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_row::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_row, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00004C, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_row::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_row, CallFunc_GetItemNum_ReturnValue) == 0x000050, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_row::CallFunc_GetItemNum_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_row, CallFunc_GetItemNum_ReturnValue_1) == 0x000054, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_row::CallFunc_GetItemNum_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_row, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000058, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_row::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_row, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000059, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_row::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_row, CallFunc_BooleanAND_ReturnValue) == 0x00005A, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_row::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_row, CallFunc_BooleanAND_ReturnValue_1) == 0x00005B, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_row::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_row, CallFunc_BooleanAND_ReturnValue_2) == 0x00005C, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_row::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_row, CallFunc_BooleanAND_ReturnValue_3) == 0x00005D, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_row::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_row, Temp_int_Loop_Counter_Variable) == 0x000060, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_row::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_row, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x000064, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_row::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_row, CallFunc_Add_IntInt_ReturnValue) == 0x000068, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_row::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_row, CallFunc_EqualEqual_IntInt_ReturnValue_3) == 0x00006C, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_row::CallFunc_EqualEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_row, CallFunc_Array_Length_ReturnValue) == 0x000070, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_row::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_row, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000074, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_row::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_row, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x000075, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_row::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_row, CallFunc_BooleanAND_ReturnValue_4) == 0x000076, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_row::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_row, Temp_int_Array_Index_Variable) == 0x000078, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_row::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_row, Temp_int_Array_Index_Variable_1) == 0x00007C, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_row::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_row, CallFunc_CheckProgressID_ReturnEnable1) == 0x000080, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_row::CallFunc_CheckProgressID_ReturnEnable1' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_row, Temp_int_Loop_Num_Variable) == 0x000084, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_row::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_row, CallFunc_CheckBondsProgressID_ReturnEnable1) == 0x000088, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_row::CallFunc_CheckBondsProgressID_ReturnEnable1' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_row, Temp_int_Loop_Counter_Variable_1) == 0x00008C, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_row::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_row, CallFunc_Less_IntInt_ReturnValue) == 0x000090, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_row::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_row, CallFunc_CheckScenarioFlag_FlagValue) == 0x000091, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_row::CallFunc_CheckScenarioFlag_FlagValue' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_row, CallFunc_Array_Length_ReturnValue_1) == 0x000094, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_row::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_row, CallFunc_Less_IntInt_ReturnValue_1) == 0x000098, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_row::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_row, CallFunc_Array_Length_ReturnValue_2) == 0x00009C, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_row::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_row, CallFunc_Greater_IntInt_ReturnValue) == 0x0000A0, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_row::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_row, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000A4, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_row::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function BPFL_KizunaEpisode.BPFL_KizunaEpisode_C.CheckMemberAlreadyUnion
// 0x0100 (0x0100 - 0x0000)
struct BPFL_KizunaEpisode_C_CheckMemberAlreadyUnion final
{
public:
	EPlayerID                                     PlayerId;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerID                                     TargetCharaId;                                     // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8657[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AlreadyUnion;                                      // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsExistPartyMember_IsExist;               // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8658[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_EventManager_C*                     CallFunc_GetEventManager_EventManager;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_EventManager_C>   CallFunc_GetProgressID_self_CastInput;             // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetProgressID_ProgressID;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8659[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_EventManager_C*                     CallFunc_GetEventManager_EventManager_1;           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_865A[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_EventManager_C>   CallFunc_GetProgressID_self_CastInput_1;           // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetProgressID_ProgressID_1;               // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsExistPartyMember_IsExist_1;             // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x005E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_865B[0x1];                                     // 0x005F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_EventManager_C*                     CallFunc_GetEventManager_EventManager_2;           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_EventManager_C>   CallFunc_GetProgressID_self_CastInput_2;           // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetProgressID_ProgressID_2;               // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_865C[0x4];                                     // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_EventManager_C*                     CallFunc_GetEventManager_EventManager_3;           // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_2;           // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_865D[0x7];                                     // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_EventManager_C>   CallFunc_GetProgressID_self_CastInput_3;           // 0x0090(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetProgressID_ProgressID_3;               // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsExistPartyMember_IsExist_2;             // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_3;           // 0x00A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x00A6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_865E[0x1];                                     // 0x00A7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_EventManager_C*                     CallFunc_GetEventManager_EventManager_4;           // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_EventManager_C>   CallFunc_GetProgressID_self_CastInput_4;           // 0x00B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetProgressID_ProgressID_4;               // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsExistPartyMember_IsExist_3;             // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_4;           // 0x00C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x00C6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_865F[0x1];                                     // 0x00C7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_EventManager_C*                     CallFunc_GetEventManager_EventManager_5;           // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_EventManager_C>   CallFunc_GetProgressID_self_CastInput_5;           // 0x00D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetProgressID_ProgressID_5;               // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_5;           // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x00E6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x00E7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_6;                 // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_7;                 // 0x00EB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x00ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_8;                 // 0x00EE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x00EF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_9;                 // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_10;                // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_11;                // 0x00F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x00F3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x00F5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_12;                // 0x00F6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_5;        // 0x00F7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_13;                // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_14;                // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x00FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_15;                // 0x00FB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_5;                // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPFL_KizunaEpisode_C_CheckMemberAlreadyUnion) == 0x000008, "Wrong alignment on BPFL_KizunaEpisode_C_CheckMemberAlreadyUnion");
static_assert(sizeof(BPFL_KizunaEpisode_C_CheckMemberAlreadyUnion) == 0x000100, "Wrong size on BPFL_KizunaEpisode_C_CheckMemberAlreadyUnion");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckMemberAlreadyUnion, PlayerId) == 0x000000, "Member 'BPFL_KizunaEpisode_C_CheckMemberAlreadyUnion::PlayerId' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckMemberAlreadyUnion, TargetCharaId) == 0x000001, "Member 'BPFL_KizunaEpisode_C_CheckMemberAlreadyUnion::TargetCharaId' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckMemberAlreadyUnion, __WorldContext) == 0x000008, "Member 'BPFL_KizunaEpisode_C_CheckMemberAlreadyUnion::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckMemberAlreadyUnion, AlreadyUnion) == 0x000010, "Member 'BPFL_KizunaEpisode_C_CheckMemberAlreadyUnion::AlreadyUnion' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckMemberAlreadyUnion, CallFunc_IsExistPartyMember_IsExist) == 0x000011, "Member 'BPFL_KizunaEpisode_C_CheckMemberAlreadyUnion::CallFunc_IsExistPartyMember_IsExist' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckMemberAlreadyUnion, K2Node_SwitchEnum_CmpSuccess) == 0x000012, "Member 'BPFL_KizunaEpisode_C_CheckMemberAlreadyUnion::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckMemberAlreadyUnion, CallFunc_BooleanAND_ReturnValue) == 0x000013, "Member 'BPFL_KizunaEpisode_C_CheckMemberAlreadyUnion::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckMemberAlreadyUnion, CallFunc_GetEventManager_EventManager) == 0x000018, "Member 'BPFL_KizunaEpisode_C_CheckMemberAlreadyUnion::CallFunc_GetEventManager_EventManager' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckMemberAlreadyUnion, CallFunc_GetProgressID_self_CastInput) == 0x000020, "Member 'BPFL_KizunaEpisode_C_CheckMemberAlreadyUnion::CallFunc_GetProgressID_self_CastInput' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckMemberAlreadyUnion, CallFunc_GetProgressID_ProgressID) == 0x000030, "Member 'BPFL_KizunaEpisode_C_CheckMemberAlreadyUnion::CallFunc_GetProgressID_ProgressID' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckMemberAlreadyUnion, CallFunc_GetEventManager_EventManager_1) == 0x000038, "Member 'BPFL_KizunaEpisode_C_CheckMemberAlreadyUnion::CallFunc_GetEventManager_EventManager_1' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckMemberAlreadyUnion, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000040, "Member 'BPFL_KizunaEpisode_C_CheckMemberAlreadyUnion::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckMemberAlreadyUnion, CallFunc_GetProgressID_self_CastInput_1) == 0x000048, "Member 'BPFL_KizunaEpisode_C_CheckMemberAlreadyUnion::CallFunc_GetProgressID_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckMemberAlreadyUnion, CallFunc_GetProgressID_ProgressID_1) == 0x000058, "Member 'BPFL_KizunaEpisode_C_CheckMemberAlreadyUnion::CallFunc_GetProgressID_ProgressID_1' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckMemberAlreadyUnion, CallFunc_IsExistPartyMember_IsExist_1) == 0x00005C, "Member 'BPFL_KizunaEpisode_C_CheckMemberAlreadyUnion::CallFunc_IsExistPartyMember_IsExist_1' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckMemberAlreadyUnion, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x00005D, "Member 'BPFL_KizunaEpisode_C_CheckMemberAlreadyUnion::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckMemberAlreadyUnion, CallFunc_BooleanAND_ReturnValue_1) == 0x00005E, "Member 'BPFL_KizunaEpisode_C_CheckMemberAlreadyUnion::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckMemberAlreadyUnion, CallFunc_GetEventManager_EventManager_2) == 0x000060, "Member 'BPFL_KizunaEpisode_C_CheckMemberAlreadyUnion::CallFunc_GetEventManager_EventManager_2' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckMemberAlreadyUnion, CallFunc_GetProgressID_self_CastInput_2) == 0x000068, "Member 'BPFL_KizunaEpisode_C_CheckMemberAlreadyUnion::CallFunc_GetProgressID_self_CastInput_2' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckMemberAlreadyUnion, CallFunc_GetProgressID_ProgressID_2) == 0x000078, "Member 'BPFL_KizunaEpisode_C_CheckMemberAlreadyUnion::CallFunc_GetProgressID_ProgressID_2' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckMemberAlreadyUnion, CallFunc_GetEventManager_EventManager_3) == 0x000080, "Member 'BPFL_KizunaEpisode_C_CheckMemberAlreadyUnion::CallFunc_GetEventManager_EventManager_3' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckMemberAlreadyUnion, CallFunc_LessEqual_IntInt_ReturnValue_2) == 0x000088, "Member 'BPFL_KizunaEpisode_C_CheckMemberAlreadyUnion::CallFunc_LessEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckMemberAlreadyUnion, CallFunc_GetProgressID_self_CastInput_3) == 0x000090, "Member 'BPFL_KizunaEpisode_C_CheckMemberAlreadyUnion::CallFunc_GetProgressID_self_CastInput_3' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckMemberAlreadyUnion, CallFunc_GetProgressID_ProgressID_3) == 0x0000A0, "Member 'BPFL_KizunaEpisode_C_CheckMemberAlreadyUnion::CallFunc_GetProgressID_ProgressID_3' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckMemberAlreadyUnion, CallFunc_IsExistPartyMember_IsExist_2) == 0x0000A4, "Member 'BPFL_KizunaEpisode_C_CheckMemberAlreadyUnion::CallFunc_IsExistPartyMember_IsExist_2' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckMemberAlreadyUnion, CallFunc_LessEqual_IntInt_ReturnValue_3) == 0x0000A5, "Member 'BPFL_KizunaEpisode_C_CheckMemberAlreadyUnion::CallFunc_LessEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckMemberAlreadyUnion, CallFunc_BooleanAND_ReturnValue_2) == 0x0000A6, "Member 'BPFL_KizunaEpisode_C_CheckMemberAlreadyUnion::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckMemberAlreadyUnion, CallFunc_GetEventManager_EventManager_4) == 0x0000A8, "Member 'BPFL_KizunaEpisode_C_CheckMemberAlreadyUnion::CallFunc_GetEventManager_EventManager_4' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckMemberAlreadyUnion, CallFunc_GetProgressID_self_CastInput_4) == 0x0000B0, "Member 'BPFL_KizunaEpisode_C_CheckMemberAlreadyUnion::CallFunc_GetProgressID_self_CastInput_4' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckMemberAlreadyUnion, CallFunc_GetProgressID_ProgressID_4) == 0x0000C0, "Member 'BPFL_KizunaEpisode_C_CheckMemberAlreadyUnion::CallFunc_GetProgressID_ProgressID_4' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckMemberAlreadyUnion, CallFunc_IsExistPartyMember_IsExist_3) == 0x0000C4, "Member 'BPFL_KizunaEpisode_C_CheckMemberAlreadyUnion::CallFunc_IsExistPartyMember_IsExist_3' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckMemberAlreadyUnion, CallFunc_LessEqual_IntInt_ReturnValue_4) == 0x0000C5, "Member 'BPFL_KizunaEpisode_C_CheckMemberAlreadyUnion::CallFunc_LessEqual_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckMemberAlreadyUnion, CallFunc_BooleanAND_ReturnValue_3) == 0x0000C6, "Member 'BPFL_KizunaEpisode_C_CheckMemberAlreadyUnion::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckMemberAlreadyUnion, CallFunc_GetEventManager_EventManager_5) == 0x0000C8, "Member 'BPFL_KizunaEpisode_C_CheckMemberAlreadyUnion::CallFunc_GetEventManager_EventManager_5' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckMemberAlreadyUnion, CallFunc_GetProgressID_self_CastInput_5) == 0x0000D0, "Member 'BPFL_KizunaEpisode_C_CheckMemberAlreadyUnion::CallFunc_GetProgressID_self_CastInput_5' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckMemberAlreadyUnion, CallFunc_GetProgressID_ProgressID_5) == 0x0000E0, "Member 'BPFL_KizunaEpisode_C_CheckMemberAlreadyUnion::CallFunc_GetProgressID_ProgressID_5' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckMemberAlreadyUnion, CallFunc_LessEqual_IntInt_ReturnValue_5) == 0x0000E4, "Member 'BPFL_KizunaEpisode_C_CheckMemberAlreadyUnion::CallFunc_LessEqual_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckMemberAlreadyUnion, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000E5, "Member 'BPFL_KizunaEpisode_C_CheckMemberAlreadyUnion::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckMemberAlreadyUnion, CallFunc_BooleanAND_ReturnValue_4) == 0x0000E6, "Member 'BPFL_KizunaEpisode_C_CheckMemberAlreadyUnion::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckMemberAlreadyUnion, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0000E7, "Member 'BPFL_KizunaEpisode_C_CheckMemberAlreadyUnion::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckMemberAlreadyUnion, CallFunc_BooleanAND_ReturnValue_5) == 0x0000E8, "Member 'BPFL_KizunaEpisode_C_CheckMemberAlreadyUnion::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckMemberAlreadyUnion, CallFunc_BooleanAND_ReturnValue_6) == 0x0000E9, "Member 'BPFL_KizunaEpisode_C_CheckMemberAlreadyUnion::CallFunc_BooleanAND_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckMemberAlreadyUnion, CallFunc_Not_PreBool_ReturnValue) == 0x0000EA, "Member 'BPFL_KizunaEpisode_C_CheckMemberAlreadyUnion::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckMemberAlreadyUnion, CallFunc_BooleanAND_ReturnValue_7) == 0x0000EB, "Member 'BPFL_KizunaEpisode_C_CheckMemberAlreadyUnion::CallFunc_BooleanAND_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckMemberAlreadyUnion, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000EC, "Member 'BPFL_KizunaEpisode_C_CheckMemberAlreadyUnion::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckMemberAlreadyUnion, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x0000ED, "Member 'BPFL_KizunaEpisode_C_CheckMemberAlreadyUnion::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckMemberAlreadyUnion, CallFunc_BooleanAND_ReturnValue_8) == 0x0000EE, "Member 'BPFL_KizunaEpisode_C_CheckMemberAlreadyUnion::CallFunc_BooleanAND_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckMemberAlreadyUnion, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x0000EF, "Member 'BPFL_KizunaEpisode_C_CheckMemberAlreadyUnion::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckMemberAlreadyUnion, CallFunc_BooleanAND_ReturnValue_9) == 0x0000F0, "Member 'BPFL_KizunaEpisode_C_CheckMemberAlreadyUnion::CallFunc_BooleanAND_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckMemberAlreadyUnion, CallFunc_BooleanAND_ReturnValue_10) == 0x0000F1, "Member 'BPFL_KizunaEpisode_C_CheckMemberAlreadyUnion::CallFunc_BooleanAND_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckMemberAlreadyUnion, CallFunc_BooleanAND_ReturnValue_11) == 0x0000F2, "Member 'BPFL_KizunaEpisode_C_CheckMemberAlreadyUnion::CallFunc_BooleanAND_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckMemberAlreadyUnion, CallFunc_Not_PreBool_ReturnValue_2) == 0x0000F3, "Member 'BPFL_KizunaEpisode_C_CheckMemberAlreadyUnion::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckMemberAlreadyUnion, CallFunc_Not_PreBool_ReturnValue_3) == 0x0000F4, "Member 'BPFL_KizunaEpisode_C_CheckMemberAlreadyUnion::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckMemberAlreadyUnion, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x0000F5, "Member 'BPFL_KizunaEpisode_C_CheckMemberAlreadyUnion::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckMemberAlreadyUnion, CallFunc_BooleanAND_ReturnValue_12) == 0x0000F6, "Member 'BPFL_KizunaEpisode_C_CheckMemberAlreadyUnion::CallFunc_BooleanAND_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckMemberAlreadyUnion, CallFunc_EqualEqual_ByteByte_ReturnValue_5) == 0x0000F7, "Member 'BPFL_KizunaEpisode_C_CheckMemberAlreadyUnion::CallFunc_EqualEqual_ByteByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckMemberAlreadyUnion, CallFunc_BooleanAND_ReturnValue_13) == 0x0000F8, "Member 'BPFL_KizunaEpisode_C_CheckMemberAlreadyUnion::CallFunc_BooleanAND_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckMemberAlreadyUnion, CallFunc_BooleanAND_ReturnValue_14) == 0x0000F9, "Member 'BPFL_KizunaEpisode_C_CheckMemberAlreadyUnion::CallFunc_BooleanAND_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckMemberAlreadyUnion, CallFunc_Not_PreBool_ReturnValue_4) == 0x0000FA, "Member 'BPFL_KizunaEpisode_C_CheckMemberAlreadyUnion::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckMemberAlreadyUnion, CallFunc_BooleanAND_ReturnValue_15) == 0x0000FB, "Member 'BPFL_KizunaEpisode_C_CheckMemberAlreadyUnion::CallFunc_BooleanAND_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckMemberAlreadyUnion, CallFunc_Not_PreBool_ReturnValue_5) == 0x0000FC, "Member 'BPFL_KizunaEpisode_C_CheckMemberAlreadyUnion::CallFunc_Not_PreBool_ReturnValue_5' has a wrong offset!");

// Function BPFL_KizunaEpisode.BPFL_KizunaEpisode_C.CheckTwoshotPhoto
// 0x0180 (0x0180 - 0x0000)
struct BPFL_KizunaEpisode_C_CheckTwoshotPhoto final
{
public:
	EPlayerID                                     TargetCharaId;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8660[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NeedKizunaIcon;                                    // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8661[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<EPlayerID, ELibraryFlagType>             CharaLibraryFlag_F;                                // 0x0018(0x0050)(Edit, BlueprintVisible)
	TMap<EPlayerID, ELibraryFlagType>             CharaLibraryFlag_M;                                // 0x0068(0x0050)(Edit, BlueprintVisible)
	TMap<EPlayerID, ELibraryFlagType>             K2Node_MakeVariable_MakeVariableOutput;            // 0x00B8(0x0050)()
	bool                                          CallFunc_CheckRunningBondsEP_MidstBondsEP;         // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnableNexusDrive_bEnable;               // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnableCrashVision_bEnable;              // 0x010A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8662[0x1];                                     // 0x010B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetItemNum_ReturnValue;                   // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnableNexusDrive_bEnable_1;             // 0x0112(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnableCrashVision_bEnable_1;            // 0x0113(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetItemNum_ReturnValue_1;                 // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerID                                     CallFunc_GetPlayerCharaID_ReturnPlayerID;          // 0x011A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x011B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x011C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x011D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8663[0x2];                                     // 0x011E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<EPlayerID, ELibraryFlagType>             K2Node_MakeVariable_MakeVariableOutput_1;          // 0x0120(0x0050)()
	ELibraryFlagType                              CallFunc_Map_Find_Value;                           // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0171(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ELibraryFlagType                              CallFunc_Map_Find_Value_1;                         // 0x0172(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x0173(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CharaLibraryCheckFlag_ReturnValue;        // 0x0174(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CharaLibraryCheckFlag_ReturnValue_1;      // 0x0175(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0176(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0177(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0179(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x017A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x017B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x017C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x017D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPFL_KizunaEpisode_C_CheckTwoshotPhoto) == 0x000008, "Wrong alignment on BPFL_KizunaEpisode_C_CheckTwoshotPhoto");
static_assert(sizeof(BPFL_KizunaEpisode_C_CheckTwoshotPhoto) == 0x000180, "Wrong size on BPFL_KizunaEpisode_C_CheckTwoshotPhoto");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckTwoshotPhoto, TargetCharaId) == 0x000000, "Member 'BPFL_KizunaEpisode_C_CheckTwoshotPhoto::TargetCharaId' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckTwoshotPhoto, __WorldContext) == 0x000008, "Member 'BPFL_KizunaEpisode_C_CheckTwoshotPhoto::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckTwoshotPhoto, NeedKizunaIcon) == 0x000010, "Member 'BPFL_KizunaEpisode_C_CheckTwoshotPhoto::NeedKizunaIcon' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckTwoshotPhoto, CharaLibraryFlag_F) == 0x000018, "Member 'BPFL_KizunaEpisode_C_CheckTwoshotPhoto::CharaLibraryFlag_F' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckTwoshotPhoto, CharaLibraryFlag_M) == 0x000068, "Member 'BPFL_KizunaEpisode_C_CheckTwoshotPhoto::CharaLibraryFlag_M' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckTwoshotPhoto, K2Node_MakeVariable_MakeVariableOutput) == 0x0000B8, "Member 'BPFL_KizunaEpisode_C_CheckTwoshotPhoto::K2Node_MakeVariable_MakeVariableOutput' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckTwoshotPhoto, CallFunc_CheckRunningBondsEP_MidstBondsEP) == 0x000108, "Member 'BPFL_KizunaEpisode_C_CheckTwoshotPhoto::CallFunc_CheckRunningBondsEP_MidstBondsEP' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckTwoshotPhoto, CallFunc_IsEnableNexusDrive_bEnable) == 0x000109, "Member 'BPFL_KizunaEpisode_C_CheckTwoshotPhoto::CallFunc_IsEnableNexusDrive_bEnable' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckTwoshotPhoto, CallFunc_IsEnableCrashVision_bEnable) == 0x00010A, "Member 'BPFL_KizunaEpisode_C_CheckTwoshotPhoto::CallFunc_IsEnableCrashVision_bEnable' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckTwoshotPhoto, CallFunc_GetItemNum_ReturnValue) == 0x00010C, "Member 'BPFL_KizunaEpisode_C_CheckTwoshotPhoto::CallFunc_GetItemNum_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckTwoshotPhoto, CallFunc_BooleanOR_ReturnValue) == 0x000110, "Member 'BPFL_KizunaEpisode_C_CheckTwoshotPhoto::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckTwoshotPhoto, CallFunc_Greater_IntInt_ReturnValue) == 0x000111, "Member 'BPFL_KizunaEpisode_C_CheckTwoshotPhoto::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckTwoshotPhoto, CallFunc_IsEnableNexusDrive_bEnable_1) == 0x000112, "Member 'BPFL_KizunaEpisode_C_CheckTwoshotPhoto::CallFunc_IsEnableNexusDrive_bEnable_1' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckTwoshotPhoto, CallFunc_IsEnableCrashVision_bEnable_1) == 0x000113, "Member 'BPFL_KizunaEpisode_C_CheckTwoshotPhoto::CallFunc_IsEnableCrashVision_bEnable_1' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckTwoshotPhoto, CallFunc_GetItemNum_ReturnValue_1) == 0x000114, "Member 'BPFL_KizunaEpisode_C_CheckTwoshotPhoto::CallFunc_GetItemNum_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckTwoshotPhoto, CallFunc_BooleanOR_ReturnValue_1) == 0x000118, "Member 'BPFL_KizunaEpisode_C_CheckTwoshotPhoto::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckTwoshotPhoto, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000119, "Member 'BPFL_KizunaEpisode_C_CheckTwoshotPhoto::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckTwoshotPhoto, CallFunc_GetPlayerCharaID_ReturnPlayerID) == 0x00011A, "Member 'BPFL_KizunaEpisode_C_CheckTwoshotPhoto::CallFunc_GetPlayerCharaID_ReturnPlayerID' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckTwoshotPhoto, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00011B, "Member 'BPFL_KizunaEpisode_C_CheckTwoshotPhoto::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckTwoshotPhoto, K2Node_SwitchEnum_CmpSuccess) == 0x00011C, "Member 'BPFL_KizunaEpisode_C_CheckTwoshotPhoto::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckTwoshotPhoto, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00011D, "Member 'BPFL_KizunaEpisode_C_CheckTwoshotPhoto::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckTwoshotPhoto, K2Node_MakeVariable_MakeVariableOutput_1) == 0x000120, "Member 'BPFL_KizunaEpisode_C_CheckTwoshotPhoto::K2Node_MakeVariable_MakeVariableOutput_1' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckTwoshotPhoto, CallFunc_Map_Find_Value) == 0x000170, "Member 'BPFL_KizunaEpisode_C_CheckTwoshotPhoto::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckTwoshotPhoto, CallFunc_Map_Find_ReturnValue) == 0x000171, "Member 'BPFL_KizunaEpisode_C_CheckTwoshotPhoto::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckTwoshotPhoto, CallFunc_Map_Find_Value_1) == 0x000172, "Member 'BPFL_KizunaEpisode_C_CheckTwoshotPhoto::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckTwoshotPhoto, CallFunc_Map_Find_ReturnValue_1) == 0x000173, "Member 'BPFL_KizunaEpisode_C_CheckTwoshotPhoto::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckTwoshotPhoto, CallFunc_CharaLibraryCheckFlag_ReturnValue) == 0x000174, "Member 'BPFL_KizunaEpisode_C_CheckTwoshotPhoto::CallFunc_CharaLibraryCheckFlag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckTwoshotPhoto, CallFunc_CharaLibraryCheckFlag_ReturnValue_1) == 0x000175, "Member 'BPFL_KizunaEpisode_C_CheckTwoshotPhoto::CallFunc_CharaLibraryCheckFlag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckTwoshotPhoto, CallFunc_Not_PreBool_ReturnValue) == 0x000176, "Member 'BPFL_KizunaEpisode_C_CheckTwoshotPhoto::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckTwoshotPhoto, CallFunc_Not_PreBool_ReturnValue_1) == 0x000177, "Member 'BPFL_KizunaEpisode_C_CheckTwoshotPhoto::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckTwoshotPhoto, CallFunc_BooleanAND_ReturnValue) == 0x000178, "Member 'BPFL_KizunaEpisode_C_CheckTwoshotPhoto::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckTwoshotPhoto, CallFunc_BooleanAND_ReturnValue_1) == 0x000179, "Member 'BPFL_KizunaEpisode_C_CheckTwoshotPhoto::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckTwoshotPhoto, CallFunc_BooleanAND_ReturnValue_2) == 0x00017A, "Member 'BPFL_KizunaEpisode_C_CheckTwoshotPhoto::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckTwoshotPhoto, CallFunc_BooleanAND_ReturnValue_3) == 0x00017B, "Member 'BPFL_KizunaEpisode_C_CheckTwoshotPhoto::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckTwoshotPhoto, CallFunc_BooleanAND_ReturnValue_4) == 0x00017C, "Member 'BPFL_KizunaEpisode_C_CheckTwoshotPhoto::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckTwoshotPhoto, CallFunc_BooleanAND_ReturnValue_5) == 0x00017D, "Member 'BPFL_KizunaEpisode_C_CheckTwoshotPhoto::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");

// Function BPFL_KizunaEpisode.BPFL_KizunaEpisode_C.CheckMatchingAttachment
// 0x0198 (0x0198 - 0x0000)
struct BPFL_KizunaEpisode_C_CheckMatchingAttachment final
{
public:
	EPlayerID                                     TargetCharaId;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8664[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NeedKizunaIcon;                                    // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8665[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<EPlayerID, class FName>                  MatchingAttachment_F;                              // 0x0018(0x0050)(Edit, BlueprintVisible)
	TMap<EPlayerID, class FName>                  MatchingAttachment_M;                              // 0x0068(0x0050)(Edit, BlueprintVisible)
	TMap<EPlayerID, class FName>                  K2Node_MakeVariable_MakeVariableOutput;            // 0x00B8(0x0050)()
	bool                                          CallFunc_CheckRunningBondsEP_MidstBondsEP;         // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnableCrashVision_bEnable;              // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8666[0x2];                                     // 0x010A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetItemNum_ReturnValue;                   // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerID                                     CallFunc_GetPlayerCharaID_ReturnPlayerID;          // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0112(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnableCrashVision_bEnable_1;            // 0x0113(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetItemNum_ReturnValue_1;                 // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<EPlayerID, class FName>                  K2Node_MakeVariable_MakeVariableOutput_1;          // 0x0118(0x0050)()
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8667[0x3];                                     // 0x0169(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Map_Find_Value;                           // 0x016C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0174(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8668[0x3];                                     // 0x0175(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Map_Find_Value_1;                         // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8669[0x3];                                     // 0x0181(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetItemNum_ReturnValue_2;                 // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetItemNum_ReturnValue_3;                 // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_2;             // 0x018C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_3;             // 0x018D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x018E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x018F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0191(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0192(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0193(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x0194(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x0195(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPFL_KizunaEpisode_C_CheckMatchingAttachment) == 0x000008, "Wrong alignment on BPFL_KizunaEpisode_C_CheckMatchingAttachment");
static_assert(sizeof(BPFL_KizunaEpisode_C_CheckMatchingAttachment) == 0x000198, "Wrong size on BPFL_KizunaEpisode_C_CheckMatchingAttachment");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckMatchingAttachment, TargetCharaId) == 0x000000, "Member 'BPFL_KizunaEpisode_C_CheckMatchingAttachment::TargetCharaId' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckMatchingAttachment, __WorldContext) == 0x000008, "Member 'BPFL_KizunaEpisode_C_CheckMatchingAttachment::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckMatchingAttachment, NeedKizunaIcon) == 0x000010, "Member 'BPFL_KizunaEpisode_C_CheckMatchingAttachment::NeedKizunaIcon' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckMatchingAttachment, MatchingAttachment_F) == 0x000018, "Member 'BPFL_KizunaEpisode_C_CheckMatchingAttachment::MatchingAttachment_F' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckMatchingAttachment, MatchingAttachment_M) == 0x000068, "Member 'BPFL_KizunaEpisode_C_CheckMatchingAttachment::MatchingAttachment_M' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckMatchingAttachment, K2Node_MakeVariable_MakeVariableOutput) == 0x0000B8, "Member 'BPFL_KizunaEpisode_C_CheckMatchingAttachment::K2Node_MakeVariable_MakeVariableOutput' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckMatchingAttachment, CallFunc_CheckRunningBondsEP_MidstBondsEP) == 0x000108, "Member 'BPFL_KizunaEpisode_C_CheckMatchingAttachment::CallFunc_CheckRunningBondsEP_MidstBondsEP' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckMatchingAttachment, CallFunc_IsEnableCrashVision_bEnable) == 0x000109, "Member 'BPFL_KizunaEpisode_C_CheckMatchingAttachment::CallFunc_IsEnableCrashVision_bEnable' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckMatchingAttachment, CallFunc_GetItemNum_ReturnValue) == 0x00010C, "Member 'BPFL_KizunaEpisode_C_CheckMatchingAttachment::CallFunc_GetItemNum_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckMatchingAttachment, CallFunc_GetPlayerCharaID_ReturnPlayerID) == 0x000110, "Member 'BPFL_KizunaEpisode_C_CheckMatchingAttachment::CallFunc_GetPlayerCharaID_ReturnPlayerID' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckMatchingAttachment, CallFunc_Greater_IntInt_ReturnValue) == 0x000111, "Member 'BPFL_KizunaEpisode_C_CheckMatchingAttachment::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckMatchingAttachment, K2Node_SwitchEnum_CmpSuccess) == 0x000112, "Member 'BPFL_KizunaEpisode_C_CheckMatchingAttachment::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckMatchingAttachment, CallFunc_IsEnableCrashVision_bEnable_1) == 0x000113, "Member 'BPFL_KizunaEpisode_C_CheckMatchingAttachment::CallFunc_IsEnableCrashVision_bEnable_1' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckMatchingAttachment, CallFunc_GetItemNum_ReturnValue_1) == 0x000114, "Member 'BPFL_KizunaEpisode_C_CheckMatchingAttachment::CallFunc_GetItemNum_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckMatchingAttachment, K2Node_MakeVariable_MakeVariableOutput_1) == 0x000118, "Member 'BPFL_KizunaEpisode_C_CheckMatchingAttachment::K2Node_MakeVariable_MakeVariableOutput_1' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckMatchingAttachment, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000168, "Member 'BPFL_KizunaEpisode_C_CheckMatchingAttachment::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckMatchingAttachment, CallFunc_Map_Find_Value) == 0x00016C, "Member 'BPFL_KizunaEpisode_C_CheckMatchingAttachment::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckMatchingAttachment, CallFunc_Map_Find_ReturnValue) == 0x000174, "Member 'BPFL_KizunaEpisode_C_CheckMatchingAttachment::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckMatchingAttachment, CallFunc_Map_Find_Value_1) == 0x000178, "Member 'BPFL_KizunaEpisode_C_CheckMatchingAttachment::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckMatchingAttachment, CallFunc_Map_Find_ReturnValue_1) == 0x000180, "Member 'BPFL_KizunaEpisode_C_CheckMatchingAttachment::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckMatchingAttachment, CallFunc_GetItemNum_ReturnValue_2) == 0x000184, "Member 'BPFL_KizunaEpisode_C_CheckMatchingAttachment::CallFunc_GetItemNum_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckMatchingAttachment, CallFunc_GetItemNum_ReturnValue_3) == 0x000188, "Member 'BPFL_KizunaEpisode_C_CheckMatchingAttachment::CallFunc_GetItemNum_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckMatchingAttachment, CallFunc_Greater_IntInt_ReturnValue_2) == 0x00018C, "Member 'BPFL_KizunaEpisode_C_CheckMatchingAttachment::CallFunc_Greater_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckMatchingAttachment, CallFunc_Greater_IntInt_ReturnValue_3) == 0x00018D, "Member 'BPFL_KizunaEpisode_C_CheckMatchingAttachment::CallFunc_Greater_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckMatchingAttachment, CallFunc_Not_PreBool_ReturnValue) == 0x00018E, "Member 'BPFL_KizunaEpisode_C_CheckMatchingAttachment::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckMatchingAttachment, CallFunc_Not_PreBool_ReturnValue_1) == 0x00018F, "Member 'BPFL_KizunaEpisode_C_CheckMatchingAttachment::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckMatchingAttachment, CallFunc_BooleanAND_ReturnValue) == 0x000190, "Member 'BPFL_KizunaEpisode_C_CheckMatchingAttachment::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckMatchingAttachment, CallFunc_BooleanAND_ReturnValue_1) == 0x000191, "Member 'BPFL_KizunaEpisode_C_CheckMatchingAttachment::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckMatchingAttachment, CallFunc_BooleanAND_ReturnValue_2) == 0x000192, "Member 'BPFL_KizunaEpisode_C_CheckMatchingAttachment::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckMatchingAttachment, CallFunc_BooleanAND_ReturnValue_3) == 0x000193, "Member 'BPFL_KizunaEpisode_C_CheckMatchingAttachment::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckMatchingAttachment, CallFunc_BooleanAND_ReturnValue_4) == 0x000194, "Member 'BPFL_KizunaEpisode_C_CheckMatchingAttachment::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckMatchingAttachment, CallFunc_BooleanAND_ReturnValue_5) == 0x000195, "Member 'BPFL_KizunaEpisode_C_CheckMatchingAttachment::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");

// Function BPFL_KizunaEpisode.BPFL_KizunaEpisode_C.CheckKizunaLvup_DLC1
// 0x02F0 (0x02F0 - 0x0000)
struct BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC1 final
{
public:
	EPlayerID                                     TargetCharaId;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_866A[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NeedKizunaIcon;                                    // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_866B[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<EPlayerID, class FName>                  CheckClearFlag_F;                                  // 0x0018(0x0050)(Edit, BlueprintVisible)
	TMap<EPlayerID, class FName>                  CheckClearFlag_M;                                  // 0x0068(0x0050)(Edit, BlueprintVisible)
	TMap<EPlayerID, EPlayerID>                    SetCharaID_F;                                      // 0x00B8(0x0050)(Edit, BlueprintVisible)
	TMap<EPlayerID, EPlayerID>                    SetCharaID_M;                                      // 0x0108(0x0050)(Edit, BlueprintVisible)
	TMap<EPlayerID, class FName>                  K2Node_MakeVariable_MakeVariableOutput;            // 0x0158(0x0050)()
	EPlayerID                                     CallFunc_GetPlayerCharaID_ReturnValue;             // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x01A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnableCrashVision_bEnable;              // 0x01AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_866C[0x5];                                     // 0x01AB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SceneManager_C*                     CallFunc_GetSceneManager_SceneManager;             // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnableCrashVision_bEnable_1;            // 0x01B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_866D[0x6];                                     // 0x01BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SceneManager_C*                     CallFunc_GetSceneManager_SceneManager_1;           // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x01C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x01CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_866E[0x5];                                     // 0x01CB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<EPlayerID, class FName>                  K2Node_MakeVariable_MakeVariableOutput_1;          // 0x01D0(0x0050)()
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_866F[0x7];                                     // 0x0221(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<EPlayerID, EPlayerID>                    K2Node_MakeVariable_MakeVariableOutput_2;          // 0x0228(0x0050)()
	TMap<EPlayerID, EPlayerID>                    K2Node_MakeVariable_MakeVariableOutput_3;          // 0x0278(0x0050)()
	class FName                                   CallFunc_Map_Find_Value;                           // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckScenarioFlag_ReturnValue;            // 0x02D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerID                                     CallFunc_Map_Find_Value_1;                         // 0x02D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x02D3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnableCrashVision_bEnable_2;            // 0x02D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerID                                     CallFunc_Map_Find_Value_2;                         // 0x02D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_2;                   // 0x02D6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x02D7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnableCrashVision_bEnable_3;            // 0x02D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x02D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8670[0x2];                                     // 0x02DA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Map_Find_Value_3;                         // 0x02DC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_3;                   // 0x02E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x02E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckScenarioFlag_ReturnValue_1;          // 0x02E6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x02E7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x02E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x02E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC1) == 0x000008, "Wrong alignment on BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC1");
static_assert(sizeof(BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC1) == 0x0002F0, "Wrong size on BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC1");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC1, TargetCharaId) == 0x000000, "Member 'BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC1::TargetCharaId' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC1, __WorldContext) == 0x000008, "Member 'BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC1::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC1, NeedKizunaIcon) == 0x000010, "Member 'BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC1::NeedKizunaIcon' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC1, CheckClearFlag_F) == 0x000018, "Member 'BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC1::CheckClearFlag_F' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC1, CheckClearFlag_M) == 0x000068, "Member 'BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC1::CheckClearFlag_M' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC1, SetCharaID_F) == 0x0000B8, "Member 'BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC1::SetCharaID_F' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC1, SetCharaID_M) == 0x000108, "Member 'BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC1::SetCharaID_M' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC1, K2Node_MakeVariable_MakeVariableOutput) == 0x000158, "Member 'BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC1::K2Node_MakeVariable_MakeVariableOutput' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC1, CallFunc_GetPlayerCharaID_ReturnValue) == 0x0001A8, "Member 'BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC1::CallFunc_GetPlayerCharaID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC1, K2Node_SwitchEnum_CmpSuccess) == 0x0001A9, "Member 'BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC1::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC1, CallFunc_IsEnableCrashVision_bEnable) == 0x0001AA, "Member 'BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC1::CallFunc_IsEnableCrashVision_bEnable' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC1, CallFunc_GetSceneManager_SceneManager) == 0x0001B0, "Member 'BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC1::CallFunc_GetSceneManager_SceneManager' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC1, CallFunc_Not_PreBool_ReturnValue) == 0x0001B8, "Member 'BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC1::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC1, CallFunc_IsEnableCrashVision_bEnable_1) == 0x0001B9, "Member 'BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC1::CallFunc_IsEnableCrashVision_bEnable_1' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC1, CallFunc_GetSceneManager_SceneManager_1) == 0x0001C0, "Member 'BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC1::CallFunc_GetSceneManager_SceneManager_1' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC1, CallFunc_Not_PreBool_ReturnValue_1) == 0x0001C8, "Member 'BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC1::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC1, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0001C9, "Member 'BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC1::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC1, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0001CA, "Member 'BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC1::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC1, K2Node_MakeVariable_MakeVariableOutput_1) == 0x0001D0, "Member 'BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC1::K2Node_MakeVariable_MakeVariableOutput_1' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC1, CallFunc_BooleanOR_ReturnValue) == 0x000220, "Member 'BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC1::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC1, K2Node_MakeVariable_MakeVariableOutput_2) == 0x000228, "Member 'BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC1::K2Node_MakeVariable_MakeVariableOutput_2' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC1, K2Node_MakeVariable_MakeVariableOutput_3) == 0x000278, "Member 'BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC1::K2Node_MakeVariable_MakeVariableOutput_3' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC1, CallFunc_Map_Find_Value) == 0x0002C8, "Member 'BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC1::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC1, CallFunc_Map_Find_ReturnValue) == 0x0002D0, "Member 'BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC1::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC1, CallFunc_CheckScenarioFlag_ReturnValue) == 0x0002D1, "Member 'BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC1::CallFunc_CheckScenarioFlag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC1, CallFunc_Map_Find_Value_1) == 0x0002D2, "Member 'BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC1::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC1, CallFunc_Map_Find_ReturnValue_1) == 0x0002D3, "Member 'BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC1::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC1, CallFunc_IsEnableCrashVision_bEnable_2) == 0x0002D4, "Member 'BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC1::CallFunc_IsEnableCrashVision_bEnable_2' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC1, CallFunc_Map_Find_Value_2) == 0x0002D5, "Member 'BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC1::CallFunc_Map_Find_Value_2' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC1, CallFunc_Map_Find_ReturnValue_2) == 0x0002D6, "Member 'BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC1::CallFunc_Map_Find_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC1, CallFunc_BooleanAND_ReturnValue) == 0x0002D7, "Member 'BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC1::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC1, CallFunc_IsEnableCrashVision_bEnable_3) == 0x0002D8, "Member 'BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC1::CallFunc_IsEnableCrashVision_bEnable_3' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC1, CallFunc_BooleanAND_ReturnValue_1) == 0x0002D9, "Member 'BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC1::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC1, CallFunc_Map_Find_Value_3) == 0x0002DC, "Member 'BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC1::CallFunc_Map_Find_Value_3' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC1, CallFunc_Map_Find_ReturnValue_3) == 0x0002E4, "Member 'BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC1::CallFunc_Map_Find_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC1, CallFunc_BooleanAND_ReturnValue_2) == 0x0002E5, "Member 'BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC1::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC1, CallFunc_CheckScenarioFlag_ReturnValue_1) == 0x0002E6, "Member 'BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC1::CallFunc_CheckScenarioFlag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC1, CallFunc_BooleanAND_ReturnValue_3) == 0x0002E7, "Member 'BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC1::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC1, CallFunc_BooleanAND_ReturnValue_4) == 0x0002E8, "Member 'BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC1::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC1, CallFunc_BooleanAND_ReturnValue_5) == 0x0002E9, "Member 'BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC1::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");

// Function BPFL_KizunaEpisode.BPFL_KizunaEpisode_C.CheckKizunaEpisode_DLC1
// 0x04B8 (0x04B8 - 0x0000)
struct BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1 final
{
public:
	EPlayerID                                     TargetCharaId;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8671[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NeedKizunaIcon;                                    // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8672[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<EPlayerID, class FName>                  CheckMidstFlag_F;                                  // 0x0018(0x0050)(Edit, BlueprintVisible)
	TMap<EPlayerID, class FName>                  CheckMidstFlag_M;                                  // 0x0068(0x0050)(Edit, BlueprintVisible)
	TMap<EPlayerID, class FName>                  CheckQuestID_F;                                    // 0x00B8(0x0050)(Edit, BlueprintVisible)
	TMap<EPlayerID, class FName>                  CheckQuestID_M;                                    // 0x0108(0x0050)(Edit, BlueprintVisible)
	TMap<EPlayerID, class FName>                  CheckClearFlag_F;                                  // 0x0158(0x0050)(Edit, BlueprintVisible)
	TMap<EPlayerID, class FName>                  CheckClearFlag_M;                                  // 0x01A8(0x0050)(Edit, BlueprintVisible)
	TMap<EPlayerID, class FName>                  K2Node_MakeVariable_MakeVariableOutput;            // 0x01F8(0x0050)()
	class ABP_SceneManager_C*                     CallFunc_GetSceneManager_SceneManager;             // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_SceneManager_C*                     CallFunc_GetSceneManager_SceneManager_1;           // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_SceneManager_C*                     CallFunc_GetSceneManager_SceneManager_2;           // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_EventManager_C*                     CallFunc_GetEventManager_EventManager;             // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckScenarioFlag_ReturnValue;            // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8673[0x7];                                     // 0x0269(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_EventManager_C>   CallFunc_GetProgressID_self_CastInput;             // 0x0270(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetProgressID_ProgressID;                 // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerID                                     CallFunc_GetPlayerCharaID_ReturnValue;             // 0x0284(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0285(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0286(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0287(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x0288(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x028C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x028D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8674[0x2];                                     // 0x028E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SceneManager_C*                     CallFunc_GetSceneManager_SceneManager_3;           // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckScenarioFlag_ReturnValue_1;          // 0x0299(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8675[0x6];                                     // 0x029A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_EventManager_C*                     CallFunc_GetEventManager_EventManager_1;           // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<EPlayerID, class FName>                  K2Node_MakeVariable_MakeVariableOutput_1;          // 0x02A8(0x0050)()
	TScriptInterface<class IBPI_EventManager_C>   CallFunc_GetProgressID_self_CastInput_1;           // 0x02F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetProgressID_ProgressID_1;               // 0x0308(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x030C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8676[0x3];                                     // 0x030D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Percent_IntInt_ReturnValue_1;             // 0x0310(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0314(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_3;          // 0x0315(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0316(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8677[0x1];                                     // 0x0317(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<EPlayerID, class FName>                  K2Node_MakeVariable_MakeVariableOutput_2;          // 0x0318(0x0050)()
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0368(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8678[0x7];                                     // 0x0369(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<EPlayerID, class FName>                  K2Node_MakeVariable_MakeVariableOutput_3;          // 0x0370(0x0050)()
	TMap<EPlayerID, class FName>                  K2Node_MakeVariable_MakeVariableOutput_4;          // 0x03C0(0x0050)()
	TMap<EPlayerID, class FName>                  K2Node_MakeVariable_MakeVariableOutput_5;          // 0x0410(0x0050)()
	class FName                                   CallFunc_Map_Find_Value;                           // 0x0460(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0468(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckScenarioFlag_ReturnValue_2;          // 0x0469(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8679[0x2];                                     // 0x046A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Map_Find_Value_1;                         // 0x046C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x0474(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0475(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckDLCQuestContentCheck_ReturnValue;    // 0x0476(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_867A[0x1];                                     // 0x0477(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Map_Find_Value_2;                         // 0x0478(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_2;                   // 0x0480(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_867B[0x3];                                     // 0x0481(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Map_Find_Value_3;                         // 0x0484(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_3;                   // 0x048C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckScenarioFlag_ReturnValue_3;          // 0x048D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckDLCQuestContentCheck_ReturnValue_1;  // 0x048E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x048F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FName                                   CallFunc_Map_Find_Value_4;                         // 0x0490(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_4;                   // 0x0498(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_867C[0x3];                                     // 0x0499(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Map_Find_Value_5;                         // 0x049C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_5;                   // 0x04A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckScenarioFlag_ReturnValue_4;          // 0x04A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckScenarioFlag_ReturnValue_5;          // 0x04A6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x04A7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x04A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x04A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x04AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_6;                 // 0x04AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_7;                 // 0x04AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_8;                 // 0x04AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_9;                 // 0x04AE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_10;                // 0x04AF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_11;                // 0x04B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1) == 0x000008, "Wrong alignment on BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1");
static_assert(sizeof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1) == 0x0004B8, "Wrong size on BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1, TargetCharaId) == 0x000000, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1::TargetCharaId' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1, __WorldContext) == 0x000008, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1, NeedKizunaIcon) == 0x000010, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1::NeedKizunaIcon' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1, CheckMidstFlag_F) == 0x000018, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1::CheckMidstFlag_F' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1, CheckMidstFlag_M) == 0x000068, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1::CheckMidstFlag_M' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1, CheckQuestID_F) == 0x0000B8, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1::CheckQuestID_F' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1, CheckQuestID_M) == 0x000108, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1::CheckQuestID_M' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1, CheckClearFlag_F) == 0x000158, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1::CheckClearFlag_F' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1, CheckClearFlag_M) == 0x0001A8, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1::CheckClearFlag_M' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1, K2Node_MakeVariable_MakeVariableOutput) == 0x0001F8, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1::K2Node_MakeVariable_MakeVariableOutput' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1, CallFunc_GetSceneManager_SceneManager) == 0x000248, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1::CallFunc_GetSceneManager_SceneManager' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1, CallFunc_GetSceneManager_SceneManager_1) == 0x000250, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1::CallFunc_GetSceneManager_SceneManager_1' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1, CallFunc_GetSceneManager_SceneManager_2) == 0x000258, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1::CallFunc_GetSceneManager_SceneManager_2' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1, CallFunc_GetEventManager_EventManager) == 0x000260, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1::CallFunc_GetEventManager_EventManager' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1, CallFunc_CheckScenarioFlag_ReturnValue) == 0x000268, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1::CallFunc_CheckScenarioFlag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1, CallFunc_GetProgressID_self_CastInput) == 0x000270, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1::CallFunc_GetProgressID_self_CastInput' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1, CallFunc_GetProgressID_ProgressID) == 0x000280, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1::CallFunc_GetProgressID_ProgressID' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1, CallFunc_GetPlayerCharaID_ReturnValue) == 0x000284, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1::CallFunc_GetPlayerCharaID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000285, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1, K2Node_SwitchEnum_CmpSuccess) == 0x000286, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1, CallFunc_BooleanAND_ReturnValue) == 0x000287, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1, CallFunc_Percent_IntInt_ReturnValue) == 0x000288, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1, CallFunc_BooleanAND_ReturnValue_1) == 0x00028C, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x00028D, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1, CallFunc_GetSceneManager_SceneManager_3) == 0x000290, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1::CallFunc_GetSceneManager_SceneManager_3' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1, CallFunc_BooleanOR_ReturnValue) == 0x000298, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1, CallFunc_CheckScenarioFlag_ReturnValue_1) == 0x000299, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1::CallFunc_CheckScenarioFlag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1, CallFunc_GetEventManager_EventManager_1) == 0x0002A0, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1::CallFunc_GetEventManager_EventManager_1' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1, K2Node_MakeVariable_MakeVariableOutput_1) == 0x0002A8, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1::K2Node_MakeVariable_MakeVariableOutput_1' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1, CallFunc_GetProgressID_self_CastInput_1) == 0x0002F8, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1::CallFunc_GetProgressID_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1, CallFunc_GetProgressID_ProgressID_1) == 0x000308, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1::CallFunc_GetProgressID_ProgressID_1' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x00030C, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1, CallFunc_Percent_IntInt_ReturnValue_1) == 0x000310, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1::CallFunc_Percent_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1, CallFunc_BooleanAND_ReturnValue_2) == 0x000314, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1, CallFunc_EqualEqual_IntInt_ReturnValue_3) == 0x000315, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1::CallFunc_EqualEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1, CallFunc_BooleanAND_ReturnValue_3) == 0x000316, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1, K2Node_MakeVariable_MakeVariableOutput_2) == 0x000318, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1::K2Node_MakeVariable_MakeVariableOutput_2' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1, CallFunc_BooleanOR_ReturnValue_1) == 0x000368, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1, K2Node_MakeVariable_MakeVariableOutput_3) == 0x000370, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1::K2Node_MakeVariable_MakeVariableOutput_3' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1, K2Node_MakeVariable_MakeVariableOutput_4) == 0x0003C0, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1::K2Node_MakeVariable_MakeVariableOutput_4' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1, K2Node_MakeVariable_MakeVariableOutput_5) == 0x000410, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1::K2Node_MakeVariable_MakeVariableOutput_5' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1, CallFunc_Map_Find_Value) == 0x000460, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1, CallFunc_Map_Find_ReturnValue) == 0x000468, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1, CallFunc_CheckScenarioFlag_ReturnValue_2) == 0x000469, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1::CallFunc_CheckScenarioFlag_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1, CallFunc_Map_Find_Value_1) == 0x00046C, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1, CallFunc_Map_Find_ReturnValue_1) == 0x000474, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1, CallFunc_Not_PreBool_ReturnValue) == 0x000475, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1, CallFunc_CheckDLCQuestContentCheck_ReturnValue) == 0x000476, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1::CallFunc_CheckDLCQuestContentCheck_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1, CallFunc_Map_Find_Value_2) == 0x000478, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1::CallFunc_Map_Find_Value_2' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1, CallFunc_Map_Find_ReturnValue_2) == 0x000480, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1::CallFunc_Map_Find_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1, CallFunc_Map_Find_Value_3) == 0x000484, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1::CallFunc_Map_Find_Value_3' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1, CallFunc_Map_Find_ReturnValue_3) == 0x00048C, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1::CallFunc_Map_Find_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1, CallFunc_CheckScenarioFlag_ReturnValue_3) == 0x00048D, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1::CallFunc_CheckScenarioFlag_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1, CallFunc_CheckDLCQuestContentCheck_ReturnValue_1) == 0x00048E, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1::CallFunc_CheckDLCQuestContentCheck_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1, CallFunc_Not_PreBool_ReturnValue_1) == 0x00048F, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1, CallFunc_Map_Find_Value_4) == 0x000490, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1::CallFunc_Map_Find_Value_4' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1, CallFunc_Map_Find_ReturnValue_4) == 0x000498, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1::CallFunc_Map_Find_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1, CallFunc_Map_Find_Value_5) == 0x00049C, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1::CallFunc_Map_Find_Value_5' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1, CallFunc_Map_Find_ReturnValue_5) == 0x0004A4, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1::CallFunc_Map_Find_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1, CallFunc_CheckScenarioFlag_ReturnValue_4) == 0x0004A5, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1::CallFunc_CheckScenarioFlag_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1, CallFunc_CheckScenarioFlag_ReturnValue_5) == 0x0004A6, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1::CallFunc_CheckScenarioFlag_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1, CallFunc_Not_PreBool_ReturnValue_2) == 0x0004A7, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1, CallFunc_Not_PreBool_ReturnValue_3) == 0x0004A8, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1, CallFunc_BooleanAND_ReturnValue_4) == 0x0004A9, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1, CallFunc_BooleanAND_ReturnValue_5) == 0x0004AA, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1, CallFunc_BooleanAND_ReturnValue_6) == 0x0004AB, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1::CallFunc_BooleanAND_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1, CallFunc_BooleanAND_ReturnValue_7) == 0x0004AC, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1::CallFunc_BooleanAND_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1, CallFunc_BooleanAND_ReturnValue_8) == 0x0004AD, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1::CallFunc_BooleanAND_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1, CallFunc_BooleanAND_ReturnValue_9) == 0x0004AE, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1::CallFunc_BooleanAND_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1, CallFunc_BooleanAND_ReturnValue_10) == 0x0004AF, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1::CallFunc_BooleanAND_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1, CallFunc_BooleanAND_ReturnValue_11) == 0x0004B0, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC1::CallFunc_BooleanAND_ReturnValue_11' has a wrong offset!");

// Function BPFL_KizunaEpisode.BPFL_KizunaEpisode_C.CheckKizunaLvup_DLC2
// 0x02F0 (0x02F0 - 0x0000)
struct BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC2 final
{
public:
	EPlayerID                                     TargetCharaId;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_867D[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NeedKizunaIcon;                                    // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_867E[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<EPlayerID, class FName>                  CheckClearFlag_F;                                  // 0x0018(0x0050)(Edit, BlueprintVisible)
	TMap<EPlayerID, class FName>                  CheckClearFlag_M;                                  // 0x0068(0x0050)(Edit, BlueprintVisible)
	TMap<EPlayerID, EPlayerID>                    SetCharaID_F;                                      // 0x00B8(0x0050)(Edit, BlueprintVisible)
	TMap<EPlayerID, EPlayerID>                    SetCharaID_M;                                      // 0x0108(0x0050)(Edit, BlueprintVisible)
	TMap<EPlayerID, class FName>                  K2Node_MakeVariable_MakeVariableOutput;            // 0x0158(0x0050)()
	EPlayerID                                     CallFunc_GetPlayerCharaID_ReturnValue;             // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x01A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnableNexusDrive_bEnable;               // 0x01AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_867F[0x5];                                     // 0x01AB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SceneManager_C*                     CallFunc_GetSceneManager_SceneManager;             // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnableNexusDrive_bEnable_1;             // 0x01B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8680[0x6];                                     // 0x01BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SceneManager_C*                     CallFunc_GetSceneManager_SceneManager_1;           // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x01C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x01CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8681[0x5];                                     // 0x01CB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<EPlayerID, class FName>                  K2Node_MakeVariable_MakeVariableOutput_1;          // 0x01D0(0x0050)()
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8682[0x7];                                     // 0x0221(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<EPlayerID, EPlayerID>                    K2Node_MakeVariable_MakeVariableOutput_2;          // 0x0228(0x0050)()
	TMap<EPlayerID, EPlayerID>                    K2Node_MakeVariable_MakeVariableOutput_3;          // 0x0278(0x0050)()
	class FName                                   CallFunc_Map_Find_Value;                           // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckScenarioFlag_ReturnValue;            // 0x02D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerID                                     CallFunc_Map_Find_Value_1;                         // 0x02D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x02D3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnableNexusDrive_bEnable_2;             // 0x02D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerID                                     CallFunc_Map_Find_Value_2;                         // 0x02D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_2;                   // 0x02D6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x02D7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnableNexusDrive_bEnable_3;             // 0x02D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x02D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8683[0x2];                                     // 0x02DA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Map_Find_Value_3;                         // 0x02DC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_3;                   // 0x02E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x02E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckScenarioFlag_ReturnValue_1;          // 0x02E6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x02E7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x02E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x02E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC2) == 0x000008, "Wrong alignment on BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC2");
static_assert(sizeof(BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC2) == 0x0002F0, "Wrong size on BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC2");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC2, TargetCharaId) == 0x000000, "Member 'BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC2::TargetCharaId' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC2, __WorldContext) == 0x000008, "Member 'BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC2::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC2, NeedKizunaIcon) == 0x000010, "Member 'BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC2::NeedKizunaIcon' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC2, CheckClearFlag_F) == 0x000018, "Member 'BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC2::CheckClearFlag_F' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC2, CheckClearFlag_M) == 0x000068, "Member 'BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC2::CheckClearFlag_M' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC2, SetCharaID_F) == 0x0000B8, "Member 'BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC2::SetCharaID_F' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC2, SetCharaID_M) == 0x000108, "Member 'BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC2::SetCharaID_M' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC2, K2Node_MakeVariable_MakeVariableOutput) == 0x000158, "Member 'BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC2::K2Node_MakeVariable_MakeVariableOutput' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC2, CallFunc_GetPlayerCharaID_ReturnValue) == 0x0001A8, "Member 'BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC2::CallFunc_GetPlayerCharaID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC2, K2Node_SwitchEnum_CmpSuccess) == 0x0001A9, "Member 'BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC2::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC2, CallFunc_IsEnableNexusDrive_bEnable) == 0x0001AA, "Member 'BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC2::CallFunc_IsEnableNexusDrive_bEnable' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC2, CallFunc_GetSceneManager_SceneManager) == 0x0001B0, "Member 'BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC2::CallFunc_GetSceneManager_SceneManager' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC2, CallFunc_Not_PreBool_ReturnValue) == 0x0001B8, "Member 'BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC2::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC2, CallFunc_IsEnableNexusDrive_bEnable_1) == 0x0001B9, "Member 'BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC2::CallFunc_IsEnableNexusDrive_bEnable_1' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC2, CallFunc_GetSceneManager_SceneManager_1) == 0x0001C0, "Member 'BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC2::CallFunc_GetSceneManager_SceneManager_1' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC2, CallFunc_Not_PreBool_ReturnValue_1) == 0x0001C8, "Member 'BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC2::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC2, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0001C9, "Member 'BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC2::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC2, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0001CA, "Member 'BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC2::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC2, K2Node_MakeVariable_MakeVariableOutput_1) == 0x0001D0, "Member 'BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC2::K2Node_MakeVariable_MakeVariableOutput_1' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC2, CallFunc_BooleanOR_ReturnValue) == 0x000220, "Member 'BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC2::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC2, K2Node_MakeVariable_MakeVariableOutput_2) == 0x000228, "Member 'BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC2::K2Node_MakeVariable_MakeVariableOutput_2' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC2, K2Node_MakeVariable_MakeVariableOutput_3) == 0x000278, "Member 'BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC2::K2Node_MakeVariable_MakeVariableOutput_3' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC2, CallFunc_Map_Find_Value) == 0x0002C8, "Member 'BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC2::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC2, CallFunc_Map_Find_ReturnValue) == 0x0002D0, "Member 'BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC2::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC2, CallFunc_CheckScenarioFlag_ReturnValue) == 0x0002D1, "Member 'BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC2::CallFunc_CheckScenarioFlag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC2, CallFunc_Map_Find_Value_1) == 0x0002D2, "Member 'BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC2::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC2, CallFunc_Map_Find_ReturnValue_1) == 0x0002D3, "Member 'BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC2::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC2, CallFunc_IsEnableNexusDrive_bEnable_2) == 0x0002D4, "Member 'BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC2::CallFunc_IsEnableNexusDrive_bEnable_2' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC2, CallFunc_Map_Find_Value_2) == 0x0002D5, "Member 'BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC2::CallFunc_Map_Find_Value_2' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC2, CallFunc_Map_Find_ReturnValue_2) == 0x0002D6, "Member 'BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC2::CallFunc_Map_Find_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC2, CallFunc_BooleanAND_ReturnValue) == 0x0002D7, "Member 'BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC2::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC2, CallFunc_IsEnableNexusDrive_bEnable_3) == 0x0002D8, "Member 'BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC2::CallFunc_IsEnableNexusDrive_bEnable_3' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC2, CallFunc_BooleanAND_ReturnValue_1) == 0x0002D9, "Member 'BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC2::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC2, CallFunc_Map_Find_Value_3) == 0x0002DC, "Member 'BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC2::CallFunc_Map_Find_Value_3' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC2, CallFunc_Map_Find_ReturnValue_3) == 0x0002E4, "Member 'BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC2::CallFunc_Map_Find_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC2, CallFunc_BooleanAND_ReturnValue_2) == 0x0002E5, "Member 'BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC2::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC2, CallFunc_CheckScenarioFlag_ReturnValue_1) == 0x0002E6, "Member 'BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC2::CallFunc_CheckScenarioFlag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC2, CallFunc_BooleanAND_ReturnValue_3) == 0x0002E7, "Member 'BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC2::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC2, CallFunc_BooleanAND_ReturnValue_4) == 0x0002E8, "Member 'BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC2::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC2, CallFunc_BooleanAND_ReturnValue_5) == 0x0002E9, "Member 'BPFL_KizunaEpisode_C_CheckKizunaLvup_DLC2::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");

// Function BPFL_KizunaEpisode.BPFL_KizunaEpisode_C.CheckKizunaEpisode_DLC2
// 0x04B8 (0x04B8 - 0x0000)
struct BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2 final
{
public:
	EPlayerID                                     TargetCharaId;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8684[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NeedKizunaIcon;                                    // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8685[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<EPlayerID, class FName>                  CheckMidstFlag_F;                                  // 0x0018(0x0050)(Edit, BlueprintVisible)
	TMap<EPlayerID, class FName>                  CheckMidstFlag_M;                                  // 0x0068(0x0050)(Edit, BlueprintVisible)
	TMap<EPlayerID, class FName>                  CheckQuestID_F;                                    // 0x00B8(0x0050)(Edit, BlueprintVisible)
	TMap<EPlayerID, class FName>                  CheckQuestID_M;                                    // 0x0108(0x0050)(Edit, BlueprintVisible)
	TMap<EPlayerID, class FName>                  CheckClearFlag_F;                                  // 0x0158(0x0050)(Edit, BlueprintVisible)
	TMap<EPlayerID, class FName>                  CheckClearFlag_M;                                  // 0x01A8(0x0050)(Edit, BlueprintVisible)
	TMap<EPlayerID, class FName>                  K2Node_MakeVariable_MakeVariableOutput;            // 0x01F8(0x0050)()
	class ABP_SceneManager_C*                     CallFunc_GetSceneManager_SceneManager;             // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_SceneManager_C*                     CallFunc_GetSceneManager_SceneManager_1;           // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_SceneManager_C*                     CallFunc_GetSceneManager_SceneManager_2;           // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_EventManager_C*                     CallFunc_GetEventManager_EventManager;             // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckScenarioFlag_ReturnValue;            // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8686[0x7];                                     // 0x0269(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_EventManager_C>   CallFunc_GetProgressID_self_CastInput;             // 0x0270(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetProgressID_ProgressID;                 // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerID                                     CallFunc_GetPlayerCharaID_ReturnValue;             // 0x0284(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0285(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0286(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0287(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x0288(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x028C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x028D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8687[0x2];                                     // 0x028E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SceneManager_C*                     CallFunc_GetSceneManager_SceneManager_3;           // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckScenarioFlag_ReturnValue_1;          // 0x0299(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8688[0x6];                                     // 0x029A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_EventManager_C*                     CallFunc_GetEventManager_EventManager_1;           // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<EPlayerID, class FName>                  K2Node_MakeVariable_MakeVariableOutput_1;          // 0x02A8(0x0050)()
	TScriptInterface<class IBPI_EventManager_C>   CallFunc_GetProgressID_self_CastInput_1;           // 0x02F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetProgressID_ProgressID_1;               // 0x0308(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x030C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8689[0x3];                                     // 0x030D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Percent_IntInt_ReturnValue_1;             // 0x0310(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0314(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_3;          // 0x0315(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0316(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_868A[0x1];                                     // 0x0317(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<EPlayerID, class FName>                  K2Node_MakeVariable_MakeVariableOutput_2;          // 0x0318(0x0050)()
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0368(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_868B[0x7];                                     // 0x0369(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<EPlayerID, class FName>                  K2Node_MakeVariable_MakeVariableOutput_3;          // 0x0370(0x0050)()
	TMap<EPlayerID, class FName>                  K2Node_MakeVariable_MakeVariableOutput_4;          // 0x03C0(0x0050)()
	TMap<EPlayerID, class FName>                  K2Node_MakeVariable_MakeVariableOutput_5;          // 0x0410(0x0050)()
	class FName                                   CallFunc_Map_Find_Value;                           // 0x0460(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0468(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckScenarioFlag_ReturnValue_2;          // 0x0469(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_868C[0x2];                                     // 0x046A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Map_Find_Value_1;                         // 0x046C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x0474(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0475(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckDLCQuestContentCheck_ReturnValue;    // 0x0476(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_868D[0x1];                                     // 0x0477(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Map_Find_Value_2;                         // 0x0478(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_2;                   // 0x0480(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_868E[0x3];                                     // 0x0481(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Map_Find_Value_3;                         // 0x0484(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_3;                   // 0x048C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckScenarioFlag_ReturnValue_3;          // 0x048D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckDLCQuestContentCheck_ReturnValue_1;  // 0x048E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x048F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FName                                   CallFunc_Map_Find_Value_4;                         // 0x0490(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_4;                   // 0x0498(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_868F[0x3];                                     // 0x0499(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Map_Find_Value_5;                         // 0x049C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_5;                   // 0x04A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckScenarioFlag_ReturnValue_4;          // 0x04A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckScenarioFlag_ReturnValue_5;          // 0x04A6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x04A7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x04A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x04A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x04AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_6;                 // 0x04AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_7;                 // 0x04AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_8;                 // 0x04AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_9;                 // 0x04AE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_10;                // 0x04AF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_11;                // 0x04B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2) == 0x000008, "Wrong alignment on BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2");
static_assert(sizeof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2) == 0x0004B8, "Wrong size on BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2, TargetCharaId) == 0x000000, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2::TargetCharaId' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2, __WorldContext) == 0x000008, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2, NeedKizunaIcon) == 0x000010, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2::NeedKizunaIcon' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2, CheckMidstFlag_F) == 0x000018, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2::CheckMidstFlag_F' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2, CheckMidstFlag_M) == 0x000068, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2::CheckMidstFlag_M' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2, CheckQuestID_F) == 0x0000B8, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2::CheckQuestID_F' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2, CheckQuestID_M) == 0x000108, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2::CheckQuestID_M' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2, CheckClearFlag_F) == 0x000158, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2::CheckClearFlag_F' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2, CheckClearFlag_M) == 0x0001A8, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2::CheckClearFlag_M' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2, K2Node_MakeVariable_MakeVariableOutput) == 0x0001F8, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2::K2Node_MakeVariable_MakeVariableOutput' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2, CallFunc_GetSceneManager_SceneManager) == 0x000248, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2::CallFunc_GetSceneManager_SceneManager' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2, CallFunc_GetSceneManager_SceneManager_1) == 0x000250, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2::CallFunc_GetSceneManager_SceneManager_1' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2, CallFunc_GetSceneManager_SceneManager_2) == 0x000258, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2::CallFunc_GetSceneManager_SceneManager_2' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2, CallFunc_GetEventManager_EventManager) == 0x000260, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2::CallFunc_GetEventManager_EventManager' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2, CallFunc_CheckScenarioFlag_ReturnValue) == 0x000268, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2::CallFunc_CheckScenarioFlag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2, CallFunc_GetProgressID_self_CastInput) == 0x000270, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2::CallFunc_GetProgressID_self_CastInput' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2, CallFunc_GetProgressID_ProgressID) == 0x000280, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2::CallFunc_GetProgressID_ProgressID' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2, CallFunc_GetPlayerCharaID_ReturnValue) == 0x000284, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2::CallFunc_GetPlayerCharaID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000285, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2, K2Node_SwitchEnum_CmpSuccess) == 0x000286, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2, CallFunc_BooleanAND_ReturnValue) == 0x000287, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2, CallFunc_Percent_IntInt_ReturnValue) == 0x000288, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2, CallFunc_BooleanAND_ReturnValue_1) == 0x00028C, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x00028D, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2, CallFunc_GetSceneManager_SceneManager_3) == 0x000290, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2::CallFunc_GetSceneManager_SceneManager_3' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2, CallFunc_BooleanOR_ReturnValue) == 0x000298, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2, CallFunc_CheckScenarioFlag_ReturnValue_1) == 0x000299, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2::CallFunc_CheckScenarioFlag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2, CallFunc_GetEventManager_EventManager_1) == 0x0002A0, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2::CallFunc_GetEventManager_EventManager_1' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2, K2Node_MakeVariable_MakeVariableOutput_1) == 0x0002A8, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2::K2Node_MakeVariable_MakeVariableOutput_1' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2, CallFunc_GetProgressID_self_CastInput_1) == 0x0002F8, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2::CallFunc_GetProgressID_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2, CallFunc_GetProgressID_ProgressID_1) == 0x000308, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2::CallFunc_GetProgressID_ProgressID_1' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x00030C, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2, CallFunc_Percent_IntInt_ReturnValue_1) == 0x000310, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2::CallFunc_Percent_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2, CallFunc_BooleanAND_ReturnValue_2) == 0x000314, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2, CallFunc_EqualEqual_IntInt_ReturnValue_3) == 0x000315, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2::CallFunc_EqualEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2, CallFunc_BooleanAND_ReturnValue_3) == 0x000316, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2, K2Node_MakeVariable_MakeVariableOutput_2) == 0x000318, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2::K2Node_MakeVariable_MakeVariableOutput_2' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2, CallFunc_BooleanOR_ReturnValue_1) == 0x000368, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2, K2Node_MakeVariable_MakeVariableOutput_3) == 0x000370, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2::K2Node_MakeVariable_MakeVariableOutput_3' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2, K2Node_MakeVariable_MakeVariableOutput_4) == 0x0003C0, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2::K2Node_MakeVariable_MakeVariableOutput_4' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2, K2Node_MakeVariable_MakeVariableOutput_5) == 0x000410, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2::K2Node_MakeVariable_MakeVariableOutput_5' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2, CallFunc_Map_Find_Value) == 0x000460, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2, CallFunc_Map_Find_ReturnValue) == 0x000468, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2, CallFunc_CheckScenarioFlag_ReturnValue_2) == 0x000469, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2::CallFunc_CheckScenarioFlag_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2, CallFunc_Map_Find_Value_1) == 0x00046C, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2, CallFunc_Map_Find_ReturnValue_1) == 0x000474, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2, CallFunc_Not_PreBool_ReturnValue) == 0x000475, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2, CallFunc_CheckDLCQuestContentCheck_ReturnValue) == 0x000476, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2::CallFunc_CheckDLCQuestContentCheck_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2, CallFunc_Map_Find_Value_2) == 0x000478, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2::CallFunc_Map_Find_Value_2' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2, CallFunc_Map_Find_ReturnValue_2) == 0x000480, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2::CallFunc_Map_Find_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2, CallFunc_Map_Find_Value_3) == 0x000484, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2::CallFunc_Map_Find_Value_3' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2, CallFunc_Map_Find_ReturnValue_3) == 0x00048C, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2::CallFunc_Map_Find_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2, CallFunc_CheckScenarioFlag_ReturnValue_3) == 0x00048D, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2::CallFunc_CheckScenarioFlag_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2, CallFunc_CheckDLCQuestContentCheck_ReturnValue_1) == 0x00048E, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2::CallFunc_CheckDLCQuestContentCheck_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2, CallFunc_Not_PreBool_ReturnValue_1) == 0x00048F, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2, CallFunc_Map_Find_Value_4) == 0x000490, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2::CallFunc_Map_Find_Value_4' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2, CallFunc_Map_Find_ReturnValue_4) == 0x000498, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2::CallFunc_Map_Find_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2, CallFunc_Map_Find_Value_5) == 0x00049C, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2::CallFunc_Map_Find_Value_5' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2, CallFunc_Map_Find_ReturnValue_5) == 0x0004A4, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2::CallFunc_Map_Find_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2, CallFunc_CheckScenarioFlag_ReturnValue_4) == 0x0004A5, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2::CallFunc_CheckScenarioFlag_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2, CallFunc_CheckScenarioFlag_ReturnValue_5) == 0x0004A6, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2::CallFunc_CheckScenarioFlag_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2, CallFunc_Not_PreBool_ReturnValue_2) == 0x0004A7, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2, CallFunc_Not_PreBool_ReturnValue_3) == 0x0004A8, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2, CallFunc_BooleanAND_ReturnValue_4) == 0x0004A9, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2, CallFunc_BooleanAND_ReturnValue_5) == 0x0004AA, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2, CallFunc_BooleanAND_ReturnValue_6) == 0x0004AB, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2::CallFunc_BooleanAND_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2, CallFunc_BooleanAND_ReturnValue_7) == 0x0004AC, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2::CallFunc_BooleanAND_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2, CallFunc_BooleanAND_ReturnValue_8) == 0x0004AD, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2::CallFunc_BooleanAND_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2, CallFunc_BooleanAND_ReturnValue_9) == 0x0004AE, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2::CallFunc_BooleanAND_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2, CallFunc_BooleanAND_ReturnValue_10) == 0x0004AF, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2::CallFunc_BooleanAND_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2, CallFunc_BooleanAND_ReturnValue_11) == 0x0004B0, "Member 'BPFL_KizunaEpisode_C_CheckKizunaEpisode_DLC2::CallFunc_BooleanAND_ReturnValue_11' has a wrong offset!");

// Function BPFL_KizunaEpisode.BPFL_KizunaEpisode_C.CheckRunningBondsEP
// 0x0068 (0x0068 - 0x0000)
struct BPFL_KizunaEpisode_C_CheckRunningBondsEP final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          MidstBondsEP;                                      // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Midst_DLCEP;                                       // 0x0009(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8690[0x6];                                     // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CheckDLCBondsEP;                                   // 0x0010(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	class ABP_SceneManager_C*                     CallFunc_GetSceneManager_SceneManager;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8691[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8692[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           K2Node_MakeArray_Array;                            // 0x0038(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x004C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckScenarioFlag_ReturnValue;            // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8693[0x3];                                     // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPFL_KizunaEpisode_C_CheckRunningBondsEP) == 0x000008, "Wrong alignment on BPFL_KizunaEpisode_C_CheckRunningBondsEP");
static_assert(sizeof(BPFL_KizunaEpisode_C_CheckRunningBondsEP) == 0x000068, "Wrong size on BPFL_KizunaEpisode_C_CheckRunningBondsEP");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckRunningBondsEP, __WorldContext) == 0x000000, "Member 'BPFL_KizunaEpisode_C_CheckRunningBondsEP::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckRunningBondsEP, MidstBondsEP) == 0x000008, "Member 'BPFL_KizunaEpisode_C_CheckRunningBondsEP::MidstBondsEP' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckRunningBondsEP, Midst_DLCEP) == 0x000009, "Member 'BPFL_KizunaEpisode_C_CheckRunningBondsEP::Midst_DLCEP' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckRunningBondsEP, CheckDLCBondsEP) == 0x000010, "Member 'BPFL_KizunaEpisode_C_CheckRunningBondsEP::CheckDLCBondsEP' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckRunningBondsEP, CallFunc_GetSceneManager_SceneManager) == 0x000020, "Member 'BPFL_KizunaEpisode_C_CheckRunningBondsEP::CallFunc_GetSceneManager_SceneManager' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckRunningBondsEP, Temp_bool_True_if_break_was_hit_Variable) == 0x000028, "Member 'BPFL_KizunaEpisode_C_CheckRunningBondsEP::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckRunningBondsEP, Temp_int_Array_Index_Variable) == 0x00002C, "Member 'BPFL_KizunaEpisode_C_CheckRunningBondsEP::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckRunningBondsEP, CallFunc_Not_PreBool_ReturnValue) == 0x000030, "Member 'BPFL_KizunaEpisode_C_CheckRunningBondsEP::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckRunningBondsEP, K2Node_MakeArray_Array) == 0x000038, "Member 'BPFL_KizunaEpisode_C_CheckRunningBondsEP::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckRunningBondsEP, Temp_int_Loop_Counter_Variable) == 0x000048, "Member 'BPFL_KizunaEpisode_C_CheckRunningBondsEP::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckRunningBondsEP, CallFunc_Array_Get_Item) == 0x00004C, "Member 'BPFL_KizunaEpisode_C_CheckRunningBondsEP::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckRunningBondsEP, CallFunc_CheckScenarioFlag_ReturnValue) == 0x000054, "Member 'BPFL_KizunaEpisode_C_CheckRunningBondsEP::CallFunc_CheckScenarioFlag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckRunningBondsEP, CallFunc_Add_IntInt_ReturnValue) == 0x000058, "Member 'BPFL_KizunaEpisode_C_CheckRunningBondsEP::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckRunningBondsEP, CallFunc_Array_Length_ReturnValue) == 0x00005C, "Member 'BPFL_KizunaEpisode_C_CheckRunningBondsEP::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckRunningBondsEP, CallFunc_Less_IntInt_ReturnValue) == 0x000060, "Member 'BPFL_KizunaEpisode_C_CheckRunningBondsEP::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_KizunaEpisode_C_CheckRunningBondsEP, CallFunc_BooleanAND_ReturnValue) == 0x000061, "Member 'BPFL_KizunaEpisode_C_CheckRunningBondsEP::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

}

