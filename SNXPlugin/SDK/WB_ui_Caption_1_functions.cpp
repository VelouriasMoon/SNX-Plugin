#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_ui_Caption_1

#include "Basic.hpp"

#include "WB_ui_Caption_1_classes.hpp"
#include "WB_ui_Caption_1_parameters.hpp"


namespace SDK
{

// Function WB_ui_Caption_1.WB_ui_Caption_1_C.ExecuteUbergraph_WB_ui_Caption_1
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_ui_Caption_1_C::ExecuteUbergraph_WB_ui_Caption_1(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Caption_1_C", "ExecuteUbergraph_WB_ui_Caption_1");

	Params::WB_ui_Caption_1_C_ExecuteUbergraph_WB_ui_Caption_1 Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_ui_Caption_1.WB_ui_Caption_1_C.OnInitialized
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWB_ui_Caption_1_C::OnInitialized()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Caption_1_C", "OnInitialized");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_ui_Caption_1.WB_ui_Caption_1_C.Event_MouseDown
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FRedMouseArgument                Argument                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// class UUserWidget*                      PWidget                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_ui_Caption_1_C::Event_MouseDown(const struct FRedMouseArgument& Argument, class UUserWidget* PWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Caption_1_C", "Event_MouseDown");

	Params::WB_ui_Caption_1_C_Event_MouseDown Parms{};

	Parms.Argument = std::move(Argument);
	Parms.PWidget = PWidget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_ui_Caption_1.WB_ui_Caption_1_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWB_ui_Caption_1_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Caption_1_C", "PreConstruct");

	Params::WB_ui_Caption_1_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_ui_Caption_1.WB_ui_Caption_1_C.UpdateState
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   State                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   SubState                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_ui_Caption_1_C::UpdateState(int32 State, int32 SubState, float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Caption_1_C", "UpdateState");

	Params::WB_ui_Caption_1_C_UpdateState Parms{};

	Parms.State = State;
	Parms.SubState = SubState;
	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_ui_Caption_1.WB_ui_Caption_1_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWB_ui_Caption_1_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Caption_1_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_ui_Caption_1.WB_ui_Caption_1_C.StateNone
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   SubState                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_ui_Caption_1_C::StateNone(int32 SubState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Caption_1_C", "StateNone");

	Params::WB_ui_Caption_1_C_StateNone Parms{};

	Parms.SubState = SubState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_ui_Caption_1.WB_ui_Caption_1_C.StateOpen
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   SubState                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_ui_Caption_1_C::StateOpen(int32 SubState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Caption_1_C", "StateOpen");

	Params::WB_ui_Caption_1_C_StateOpen Parms{};

	Parms.SubState = SubState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_ui_Caption_1.WB_ui_Caption_1_C.StateLoop
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   SubState                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_ui_Caption_1_C::StateLoop(int32 SubState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Caption_1_C", "StateLoop");

	Params::WB_ui_Caption_1_C_StateLoop Parms{};

	Parms.SubState = SubState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_ui_Caption_1.WB_ui_Caption_1_C.StateClose
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   SubState                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_ui_Caption_1_C::StateClose(int32 SubState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Caption_1_C", "StateClose");

	Params::WB_ui_Caption_1_C_StateClose Parms{};

	Parms.SubState = SubState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_ui_Caption_1.WB_ui_Caption_1_C.AddDrawMessage
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsChoice                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   Param_ChoiceNum                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   DefaultChoiceIndex                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Param_CancelIndex                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           Talker                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Message_0                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Message_1                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Message_2                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Message_3                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Message_4                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// int32                                   WindowType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Param_DrawSecond                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Param_FlagEnableSkip                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class URSAtomComponentBase*             Param_Voice                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsSkipVoiceEnd                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Param_IsWaitMode                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   MessageIndex                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_ui_Caption_1_C::AddDrawMessage(bool IsChoice, int32 Param_ChoiceNum, int32 DefaultChoiceIndex, int32 Param_CancelIndex, const class FString& Talker, const class FString& Message_0, const class FString& Message_1, const class FString& Message_2, const class FString& Message_3, const class FString& Message_4, int32 WindowType, float Param_DrawSecond, bool Param_FlagEnableSkip, class URSAtomComponentBase* Param_Voice, bool IsSkipVoiceEnd, bool Param_IsWaitMode, int32* MessageIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Caption_1_C", "AddDrawMessage");

	Params::WB_ui_Caption_1_C_AddDrawMessage Parms{};

	Parms.IsChoice = IsChoice;
	Parms.Param_ChoiceNum = Param_ChoiceNum;
	Parms.DefaultChoiceIndex = DefaultChoiceIndex;
	Parms.Param_CancelIndex = Param_CancelIndex;
	Parms.Talker = std::move(Talker);
	Parms.Message_0 = std::move(Message_0);
	Parms.Message_1 = std::move(Message_1);
	Parms.Message_2 = std::move(Message_2);
	Parms.Message_3 = std::move(Message_3);
	Parms.Message_4 = std::move(Message_4);
	Parms.WindowType = WindowType;
	Parms.Param_DrawSecond = Param_DrawSecond;
	Parms.Param_FlagEnableSkip = Param_FlagEnableSkip;
	Parms.Param_Voice = Param_Voice;
	Parms.IsSkipVoiceEnd = IsSkipVoiceEnd;
	Parms.Param_IsWaitMode = Param_IsWaitMode;

	UObject::ProcessEvent(Func, &Parms);

	if (MessageIndex != nullptr)
		*MessageIndex = Parms.MessageIndex;
}


// Function WB_ui_Caption_1.WB_ui_Caption_1_C.InitWork
// (Private, BlueprintCallable, BlueprintEvent)

void UWB_ui_Caption_1_C::InitWork()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Caption_1_C", "InitWork");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_ui_Caption_1.WB_ui_Caption_1_C.SetCurrentMessage
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWB_ui_Caption_1_C::SetCurrentMessage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Caption_1_C", "SetCurrentMessage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_ui_Caption_1.WB_ui_Caption_1_C.StateLoopChoice
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   SubState                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_ui_Caption_1_C::StateLoopChoice(int32 SubState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Caption_1_C", "StateLoopChoice");

	Params::WB_ui_Caption_1_C_StateLoopChoice Parms{};

	Parms.SubState = SubState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_ui_Caption_1.WB_ui_Caption_1_C.IncWork
// (Private, BlueprintCallable, BlueprintEvent)

void UWB_ui_Caption_1_C::IncWork()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Caption_1_C", "IncWork");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_ui_Caption_1.WB_ui_Caption_1_C.AddDrawMessageNormal
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Talker                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Message                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// int32                                   WindowType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Param_DrawSecond                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Param_FlagEnableSkip                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class URSAtomComponentBase*             Param_Voice                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsSkipVoiceEnd                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Param_IsWaitMode                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   MessageIndex                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_ui_Caption_1_C::AddDrawMessageNormal(const class FString& Talker, const class FString& Message, int32 WindowType, float Param_DrawSecond, bool Param_FlagEnableSkip, class URSAtomComponentBase* Param_Voice, bool IsSkipVoiceEnd, bool Param_IsWaitMode, int32* MessageIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Caption_1_C", "AddDrawMessageNormal");

	Params::WB_ui_Caption_1_C_AddDrawMessageNormal Parms{};

	Parms.Talker = std::move(Talker);
	Parms.Message = std::move(Message);
	Parms.WindowType = WindowType;
	Parms.Param_DrawSecond = Param_DrawSecond;
	Parms.Param_FlagEnableSkip = Param_FlagEnableSkip;
	Parms.Param_Voice = Param_Voice;
	Parms.IsSkipVoiceEnd = IsSkipVoiceEnd;
	Parms.Param_IsWaitMode = Param_IsWaitMode;

	UObject::ProcessEvent(Func, &Parms);

	if (MessageIndex != nullptr)
		*MessageIndex = Parms.MessageIndex;
}


// Function WB_ui_Caption_1.WB_ui_Caption_1_C.AddDrawMessageChoice
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_ChoiceNum                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           Choice0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Choice1                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Choice2                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Choice3                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Choice4                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// int32                                   DefaultIndex                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Param_CancelIndex                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Param_DrawSecond                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsEnableCancel                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Param_IsWaitMode                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   MessageIndex                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_ui_Caption_1_C::AddDrawMessageChoice(int32 Param_ChoiceNum, const class FString& Choice0, const class FString& Choice1, const class FString& Choice2, const class FString& Choice3, const class FString& Choice4, int32 DefaultIndex, int32 Param_CancelIndex, float Param_DrawSecond, bool IsEnableCancel, bool Param_IsWaitMode, int32* MessageIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Caption_1_C", "AddDrawMessageChoice");

	Params::WB_ui_Caption_1_C_AddDrawMessageChoice Parms{};

	Parms.Param_ChoiceNum = Param_ChoiceNum;
	Parms.Choice0 = std::move(Choice0);
	Parms.Choice1 = std::move(Choice1);
	Parms.Choice2 = std::move(Choice2);
	Parms.Choice3 = std::move(Choice3);
	Parms.Choice4 = std::move(Choice4);
	Parms.DefaultIndex = DefaultIndex;
	Parms.Param_CancelIndex = Param_CancelIndex;
	Parms.Param_DrawSecond = Param_DrawSecond;
	Parms.IsEnableCancel = IsEnableCancel;
	Parms.Param_IsWaitMode = Param_IsWaitMode;

	UObject::ProcessEvent(Func, &Parms);

	if (MessageIndex != nullptr)
		*MessageIndex = Parms.MessageIndex;
}


// Function WB_ui_Caption_1.WB_ui_Caption_1_C.CheckEndMessage
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   MessageIndex                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    FlagCheckClose                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsEnd                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWB_ui_Caption_1_C::CheckEndMessage(int32 MessageIndex, bool FlagCheckClose, bool* IsEnd)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Caption_1_C", "CheckEndMessage");

	Params::WB_ui_Caption_1_C_CheckEndMessage Parms{};

	Parms.MessageIndex = MessageIndex;
	Parms.FlagCheckClose = FlagCheckClose;

	UObject::ProcessEvent(Func, &Parms);

	if (IsEnd != nullptr)
		*IsEnd = Parms.IsEnd;
}


// Function WB_ui_Caption_1.WB_ui_Caption_1_C.GetChoiceResult
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   MessageIndex                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_ui_Caption_1_C::GetChoiceResult(int32 MessageIndex, int32* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Caption_1_C", "GetChoiceResult");

	Params::WB_ui_Caption_1_C_GetChoiceResult Parms{};

	Parms.MessageIndex = MessageIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function WB_ui_Caption_1.WB_ui_Caption_1_C.SkipMessage
// (Public, BlueprintCallable, BlueprintEvent)

void UWB_ui_Caption_1_C::SkipMessage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Caption_1_C", "SkipMessage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_ui_Caption_1.WB_ui_Caption_1_C.CheckEndAllMessage
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    FlagCheckClose                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsEnd                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWB_ui_Caption_1_C::CheckEndAllMessage(bool FlagCheckClose, bool* IsEnd)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Caption_1_C", "CheckEndAllMessage");

	Params::WB_ui_Caption_1_C_CheckEndAllMessage Parms{};

	Parms.FlagCheckClose = FlagCheckClose;

	UObject::ProcessEvent(Func, &Parms);

	if (IsEnd != nullptr)
		*IsEnd = Parms.IsEnd;
}


// Function WB_ui_Caption_1.WB_ui_Caption_1_C.GetLastChoiceResult
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_ui_Caption_1_C::GetLastChoiceResult(int32* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Caption_1_C", "GetLastChoiceResult");

	Params::WB_ui_Caption_1_C_GetLastChoiceResult Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function WB_ui_Caption_1.WB_ui_Caption_1_C.UpdateCaptionFrameMaterial
// (Public, BlueprintCallable, BlueprintEvent)

void UWB_ui_Caption_1_C::UpdateCaptionFrameMaterial()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Caption_1_C", "UpdateCaptionFrameMaterial");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_ui_Caption_1.WB_ui_Caption_1_C.PlayChoiceAnimation
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PartsIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   AnimIndex                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsLoop                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWB_ui_Caption_1_C::PlayChoiceAnimation(int32 PartsIndex, int32 AnimIndex, bool IsLoop)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Caption_1_C", "PlayChoiceAnimation");

	Params::WB_ui_Caption_1_C_PlayChoiceAnimation Parms{};

	Parms.PartsIndex = PartsIndex;
	Parms.AnimIndex = AnimIndex;
	Parms.IsLoop = IsLoop;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_ui_Caption_1.WB_ui_Caption_1_C.StopChoiceCurrentAnimation
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PartsIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_ui_Caption_1_C::StopChoiceCurrentAnimation(int32 PartsIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Caption_1_C", "StopChoiceCurrentAnimation");

	Params::WB_ui_Caption_1_C_StopChoiceCurrentAnimation Parms{};

	Parms.PartsIndex = PartsIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_ui_Caption_1.WB_ui_Caption_1_C.ChoicePartsSetup
// (Private, BlueprintCallable, BlueprintEvent)

void UWB_ui_Caption_1_C::ChoicePartsSetup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Caption_1_C", "ChoicePartsSetup");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_ui_Caption_1.WB_ui_Caption_1_C.ChoicePartsUpdateState
// (Private, BlueprintCallable, BlueprintEvent)

void UWB_ui_Caption_1_C::ChoicePartsUpdateState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Caption_1_C", "ChoicePartsUpdateState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_ui_Caption_1.WB_ui_Caption_1_C.IsPlayChoiceAnimation
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsPlay                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWB_ui_Caption_1_C::IsPlayChoiceAnimation(int32 Param_Index, bool* IsPlay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Caption_1_C", "IsPlayChoiceAnimation");

	Params::WB_ui_Caption_1_C_IsPlayChoiceAnimation Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);

	if (IsPlay != nullptr)
		*IsPlay = Parms.IsPlay;
}


// Function WB_ui_Caption_1.WB_ui_Caption_1_C.IsChoiceEnd
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    IsEnd                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWB_ui_Caption_1_C::IsChoiceEnd(bool* IsEnd)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Caption_1_C", "IsChoiceEnd");

	Params::WB_ui_Caption_1_C_IsChoiceEnd Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsEnd != nullptr)
		*IsEnd = Parms.IsEnd;
}


// Function WB_ui_Caption_1.WB_ui_Caption_1_C.SetSkipAllMessage
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsSkip                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWB_ui_Caption_1_C::SetSkipAllMessage(bool IsSkip)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Caption_1_C", "SetSkipAllMessage");

	Params::WB_ui_Caption_1_C_SetSkipAllMessage Parms{};

	Parms.IsSkip = IsSkip;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_ui_Caption_1.WB_ui_Caption_1_C.StopCurrentVoice
// (Private, BlueprintCallable, BlueprintEvent)

void UWB_ui_Caption_1_C::StopCurrentVoice()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Caption_1_C", "StopCurrentVoice");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_ui_Caption_1.WB_ui_Caption_1_C.setGuide
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWB_ui_Caption_Guide_1_C*         Guide                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_ui_Caption_1_C::SetGuide(class UWB_ui_Caption_Guide_1_C* Guide)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Caption_1_C", "setGuide");

	Params::WB_ui_Caption_1_C_SetGuide Parms{};

	Parms.Guide = Guide;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_ui_Caption_1.WB_ui_Caption_1_C.SetDebugDrawFlag
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsDraw                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWB_ui_Caption_1_C::SetDebugDrawFlag(bool IsDraw)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Caption_1_C", "SetDebugDrawFlag");

	Params::WB_ui_Caption_1_C_SetDebugDrawFlag Parms{};

	Parms.IsDraw = IsDraw;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_ui_Caption_1.WB_ui_Caption_1_C.Get Debug Draw Flag
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    IsDraw                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWB_ui_Caption_1_C::Get_Debug_Draw_Flag(bool* IsDraw)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Caption_1_C", "Get Debug Draw Flag");

	Params::WB_ui_Caption_1_C_Get_Debug_Draw_Flag Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsDraw != nullptr)
		*IsDraw = Parms.IsDraw;
}


// Function WB_ui_Caption_1.WB_ui_Caption_1_C.CheckFlagChoice
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Flag                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWB_ui_Caption_1_C::CheckFlagChoice(bool* Flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Caption_1_C", "CheckFlagChoice");

	Params::WB_ui_Caption_1_C_CheckFlagChoice Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Flag != nullptr)
		*Flag = Parms.Flag;
}


// Function WB_ui_Caption_1.WB_ui_Caption_1_C.IsPlayOpenAnimation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    IsPlay                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWB_ui_Caption_1_C::IsPlayOpenAnimation(bool* IsPlay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Caption_1_C", "IsPlayOpenAnimation");

	Params::WB_ui_Caption_1_C_IsPlayOpenAnimation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsPlay != nullptr)
		*IsPlay = Parms.IsPlay;
}


// Function WB_ui_Caption_1.WB_ui_Caption_1_C.SetWaitMode
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_IsWaitMode                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWB_ui_Caption_1_C::SetWaitMode(bool Param_IsWaitMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Caption_1_C", "SetWaitMode");

	Params::WB_ui_Caption_1_C_SetWaitMode Parms{};

	Parms.Param_IsWaitMode = Param_IsWaitMode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_ui_Caption_1.WB_ui_Caption_1_C.SetupTextSize
// (Private, BlueprintCallable, BlueprintEvent)

void UWB_ui_Caption_1_C::SetupTextSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_Caption_1_C", "SetupTextSize");

	UObject::ProcessEvent(Func, nullptr);
}

}

