#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LookAtComponent

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function LookAtComponent.LookAtComponent_C.ExecuteUbergraph_LookAtComponent
// 0x0040 (0x0040 - 0x0000)
struct LookAtComponent_C_ExecuteUbergraph_LookAtComponent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNpcSkeletalMeshComponent*              CallFunc_GetNpcMeshComponent_NpcMesh;              // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAjitoMember*                           K2Node_DynamicCast_AsAjito_Member;                 // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_50B1[0x6];                                     // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UTargetSearchComponent*                 CallFunc_GetTargetSearchComponentFromActor_ReturnValue; // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSCharacterBase*                       CallFunc_GetCurrentTargetActor_ReturnValue;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LookAtComponent_C_ExecuteUbergraph_LookAtComponent) == 0x000008, "Wrong alignment on LookAtComponent_C_ExecuteUbergraph_LookAtComponent");
static_assert(sizeof(LookAtComponent_C_ExecuteUbergraph_LookAtComponent) == 0x000040, "Wrong size on LookAtComponent_C_ExecuteUbergraph_LookAtComponent");
static_assert(offsetof(LookAtComponent_C_ExecuteUbergraph_LookAtComponent, EntryPoint) == 0x000000, "Member 'LookAtComponent_C_ExecuteUbergraph_LookAtComponent::EntryPoint' has a wrong offset!");
static_assert(offsetof(LookAtComponent_C_ExecuteUbergraph_LookAtComponent, K2Node_Event_DeltaSeconds) == 0x000004, "Member 'LookAtComponent_C_ExecuteUbergraph_LookAtComponent::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(LookAtComponent_C_ExecuteUbergraph_LookAtComponent, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'LookAtComponent_C_ExecuteUbergraph_LookAtComponent::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(LookAtComponent_C_ExecuteUbergraph_LookAtComponent, CallFunc_GetNpcMeshComponent_NpcMesh) == 0x000010, "Member 'LookAtComponent_C_ExecuteUbergraph_LookAtComponent::CallFunc_GetNpcMeshComponent_NpcMesh' has a wrong offset!");
static_assert(offsetof(LookAtComponent_C_ExecuteUbergraph_LookAtComponent, K2Node_DynamicCast_AsAjito_Member) == 0x000018, "Member 'LookAtComponent_C_ExecuteUbergraph_LookAtComponent::K2Node_DynamicCast_AsAjito_Member' has a wrong offset!");
static_assert(offsetof(LookAtComponent_C_ExecuteUbergraph_LookAtComponent, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'LookAtComponent_C_ExecuteUbergraph_LookAtComponent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(LookAtComponent_C_ExecuteUbergraph_LookAtComponent, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'LookAtComponent_C_ExecuteUbergraph_LookAtComponent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(LookAtComponent_C_ExecuteUbergraph_LookAtComponent, CallFunc_GetTargetSearchComponentFromActor_ReturnValue) == 0x000028, "Member 'LookAtComponent_C_ExecuteUbergraph_LookAtComponent::CallFunc_GetTargetSearchComponentFromActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(LookAtComponent_C_ExecuteUbergraph_LookAtComponent, CallFunc_GetCurrentTargetActor_ReturnValue) == 0x000030, "Member 'LookAtComponent_C_ExecuteUbergraph_LookAtComponent::CallFunc_GetCurrentTargetActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(LookAtComponent_C_ExecuteUbergraph_LookAtComponent, CallFunc_GetPlayerPawn_ReturnValue) == 0x000038, "Member 'LookAtComponent_C_ExecuteUbergraph_LookAtComponent::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");

// Function LookAtComponent.LookAtComponent_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct LookAtComponent_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LookAtComponent_C_ReceiveTick) == 0x000004, "Wrong alignment on LookAtComponent_C_ReceiveTick");
static_assert(sizeof(LookAtComponent_C_ReceiveTick) == 0x000004, "Wrong size on LookAtComponent_C_ReceiveTick");
static_assert(offsetof(LookAtComponent_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'LookAtComponent_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function LookAtComponent.LookAtComponent_C.getAnim
// 0x0030 (0x0030 - 0x0000)
struct LookAtComponent_C_GetAnim final
{
public:
	class URSPlayerAnimInstance*                  Anim;                                              // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_getMeshComponent_mesh;                    // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_50B2[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URSPlayerAnimInstance*                  K2Node_DynamicCast_AsRSPlayer_Anim_Instance;       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(LookAtComponent_C_GetAnim) == 0x000008, "Wrong alignment on LookAtComponent_C_GetAnim");
static_assert(sizeof(LookAtComponent_C_GetAnim) == 0x000030, "Wrong size on LookAtComponent_C_GetAnim");
static_assert(offsetof(LookAtComponent_C_GetAnim, Anim) == 0x000000, "Member 'LookAtComponent_C_GetAnim::Anim' has a wrong offset!");
static_assert(offsetof(LookAtComponent_C_GetAnim, CallFunc_getMeshComponent_mesh) == 0x000008, "Member 'LookAtComponent_C_GetAnim::CallFunc_getMeshComponent_mesh' has a wrong offset!");
static_assert(offsetof(LookAtComponent_C_GetAnim, CallFunc_GetAnimInstance_ReturnValue) == 0x000010, "Member 'LookAtComponent_C_GetAnim::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(LookAtComponent_C_GetAnim, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'LookAtComponent_C_GetAnim::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(LookAtComponent_C_GetAnim, K2Node_DynamicCast_AsRSPlayer_Anim_Instance) == 0x000020, "Member 'LookAtComponent_C_GetAnim::K2Node_DynamicCast_AsRSPlayer_Anim_Instance' has a wrong offset!");
static_assert(offsetof(LookAtComponent_C_GetAnim, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'LookAtComponent_C_GetAnim::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function LookAtComponent.LookAtComponent_C.calcLookAtRotation
// 0x0140 (0x0140 - 0x0000)
struct LookAtComponent_C_CalcLookAtRotation final
{
public:
	struct FVector                                baseLocation;                                      // 0x0000(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_50B3[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMesh*                          Mesh;                                              // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TargetLocation;                                    // 0x0018(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_50B4[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_calcLookAtRotationLimit_LimitedRotation;  // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_50B5[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_GetSkeletalMeshFromActor_ReturnValue;     // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_GetSkeletalMeshFromActor_ReturnValue_1;   // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_50B6[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_2;                   // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class USkeletalMeshComponent*>         CallFunc_K2_GetComponentsByClass_ReturnValue;      // 0x0068(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_50B7[0x4];                                     // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_Array_Get_Item;                           // 0x0088(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesSocketExist_ReturnValue;              // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_50B8[0x3];                                     // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_3;                   // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAjitoMember*                           K2Node_DynamicCast_AsAjito_Member;                 // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_50B9[0x7];                                     // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UNpcSkeletalMeshComponent*              CallFunc_GetNpcMeshComponent_NpcMesh;              // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_50BA[0x7];                                     // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_GetAnimationComponent_ReturnValue;        // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesSocketExist_ReturnValue_1;            // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_50BB[0x7];                                     // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMesh*                          CallFunc_getMesh_mesh;                             // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x00E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x00FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class USkeletalMeshComponent*>         CallFunc_K2_GetComponentsByClass_ReturnValue_1;    // 0x0108(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_Array_Get_Item_1;                         // 0x0118(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_50BC[0x3];                                     // 0x0121(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue_1;          // 0x0124(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0130(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LookAtComponent_C_CalcLookAtRotation) == 0x000008, "Wrong alignment on LookAtComponent_C_CalcLookAtRotation");
static_assert(sizeof(LookAtComponent_C_CalcLookAtRotation) == 0x000140, "Wrong size on LookAtComponent_C_CalcLookAtRotation");
static_assert(offsetof(LookAtComponent_C_CalcLookAtRotation, baseLocation) == 0x000000, "Member 'LookAtComponent_C_CalcLookAtRotation::baseLocation' has a wrong offset!");
static_assert(offsetof(LookAtComponent_C_CalcLookAtRotation, Mesh) == 0x000010, "Member 'LookAtComponent_C_CalcLookAtRotation::Mesh' has a wrong offset!");
static_assert(offsetof(LookAtComponent_C_CalcLookAtRotation, TargetLocation) == 0x000018, "Member 'LookAtComponent_C_CalcLookAtRotation::TargetLocation' has a wrong offset!");
static_assert(offsetof(LookAtComponent_C_CalcLookAtRotation, CallFunc_GetOwner_ReturnValue) == 0x000028, "Member 'LookAtComponent_C_CalcLookAtRotation::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(LookAtComponent_C_CalcLookAtRotation, CallFunc_calcLookAtRotationLimit_LimitedRotation) == 0x000030, "Member 'LookAtComponent_C_CalcLookAtRotation::CallFunc_calcLookAtRotationLimit_LimitedRotation' has a wrong offset!");
static_assert(offsetof(LookAtComponent_C_CalcLookAtRotation, CallFunc_GetSkeletalMeshFromActor_ReturnValue) == 0x000040, "Member 'LookAtComponent_C_CalcLookAtRotation::CallFunc_GetSkeletalMeshFromActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(LookAtComponent_C_CalcLookAtRotation, CallFunc_GetOwner_ReturnValue_1) == 0x000048, "Member 'LookAtComponent_C_CalcLookAtRotation::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LookAtComponent_C_CalcLookAtRotation, CallFunc_GetSkeletalMeshFromActor_ReturnValue_1) == 0x000050, "Member 'LookAtComponent_C_CalcLookAtRotation::CallFunc_GetSkeletalMeshFromActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LookAtComponent_C_CalcLookAtRotation, CallFunc_IsValid_ReturnValue) == 0x000058, "Member 'LookAtComponent_C_CalcLookAtRotation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(LookAtComponent_C_CalcLookAtRotation, CallFunc_GetOwner_ReturnValue_2) == 0x000060, "Member 'LookAtComponent_C_CalcLookAtRotation::CallFunc_GetOwner_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(LookAtComponent_C_CalcLookAtRotation, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x000068, "Member 'LookAtComponent_C_CalcLookAtRotation::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(LookAtComponent_C_CalcLookAtRotation, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000078, "Member 'LookAtComponent_C_CalcLookAtRotation::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(LookAtComponent_C_CalcLookAtRotation, CallFunc_Array_Get_Item) == 0x000088, "Member 'LookAtComponent_C_CalcLookAtRotation::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(LookAtComponent_C_CalcLookAtRotation, CallFunc_GetSocketLocation_ReturnValue) == 0x000090, "Member 'LookAtComponent_C_CalcLookAtRotation::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(LookAtComponent_C_CalcLookAtRotation, CallFunc_DoesSocketExist_ReturnValue) == 0x00009C, "Member 'LookAtComponent_C_CalcLookAtRotation::CallFunc_DoesSocketExist_ReturnValue' has a wrong offset!");
static_assert(offsetof(LookAtComponent_C_CalcLookAtRotation, CallFunc_GetOwner_ReturnValue_3) == 0x0000A0, "Member 'LookAtComponent_C_CalcLookAtRotation::CallFunc_GetOwner_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(LookAtComponent_C_CalcLookAtRotation, K2Node_DynamicCast_AsAjito_Member) == 0x0000A8, "Member 'LookAtComponent_C_CalcLookAtRotation::K2Node_DynamicCast_AsAjito_Member' has a wrong offset!");
static_assert(offsetof(LookAtComponent_C_CalcLookAtRotation, K2Node_DynamicCast_bSuccess) == 0x0000B0, "Member 'LookAtComponent_C_CalcLookAtRotation::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(LookAtComponent_C_CalcLookAtRotation, CallFunc_GetNpcMeshComponent_NpcMesh) == 0x0000B8, "Member 'LookAtComponent_C_CalcLookAtRotation::CallFunc_GetNpcMeshComponent_NpcMesh' has a wrong offset!");
static_assert(offsetof(LookAtComponent_C_CalcLookAtRotation, CallFunc_IsValid_ReturnValue_1) == 0x0000C0, "Member 'LookAtComponent_C_CalcLookAtRotation::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LookAtComponent_C_CalcLookAtRotation, CallFunc_GetAnimationComponent_ReturnValue) == 0x0000C8, "Member 'LookAtComponent_C_CalcLookAtRotation::CallFunc_GetAnimationComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(LookAtComponent_C_CalcLookAtRotation, CallFunc_DoesSocketExist_ReturnValue_1) == 0x0000D0, "Member 'LookAtComponent_C_CalcLookAtRotation::CallFunc_DoesSocketExist_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LookAtComponent_C_CalcLookAtRotation, CallFunc_getMesh_mesh) == 0x0000D8, "Member 'LookAtComponent_C_CalcLookAtRotation::CallFunc_getMesh_mesh' has a wrong offset!");
static_assert(offsetof(LookAtComponent_C_CalcLookAtRotation, CallFunc_FindLookAtRotation_ReturnValue) == 0x0000E0, "Member 'LookAtComponent_C_CalcLookAtRotation::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(LookAtComponent_C_CalcLookAtRotation, CallFunc_BreakRotator_Roll) == 0x0000EC, "Member 'LookAtComponent_C_CalcLookAtRotation::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(LookAtComponent_C_CalcLookAtRotation, CallFunc_BreakRotator_Pitch) == 0x0000F0, "Member 'LookAtComponent_C_CalcLookAtRotation::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(LookAtComponent_C_CalcLookAtRotation, CallFunc_BreakRotator_Yaw) == 0x0000F4, "Member 'LookAtComponent_C_CalcLookAtRotation::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(LookAtComponent_C_CalcLookAtRotation, CallFunc_Add_FloatFloat_ReturnValue) == 0x0000F8, "Member 'LookAtComponent_C_CalcLookAtRotation::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(LookAtComponent_C_CalcLookAtRotation, CallFunc_MakeRotator_ReturnValue) == 0x0000FC, "Member 'LookAtComponent_C_CalcLookAtRotation::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(LookAtComponent_C_CalcLookAtRotation, CallFunc_K2_GetComponentsByClass_ReturnValue_1) == 0x000108, "Member 'LookAtComponent_C_CalcLookAtRotation::CallFunc_K2_GetComponentsByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LookAtComponent_C_CalcLookAtRotation, CallFunc_Array_Get_Item_1) == 0x000118, "Member 'LookAtComponent_C_CalcLookAtRotation::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(LookAtComponent_C_CalcLookAtRotation, CallFunc_IsValid_ReturnValue_2) == 0x000120, "Member 'LookAtComponent_C_CalcLookAtRotation::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(LookAtComponent_C_CalcLookAtRotation, CallFunc_GetSocketLocation_ReturnValue_1) == 0x000124, "Member 'LookAtComponent_C_CalcLookAtRotation::CallFunc_GetSocketLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LookAtComponent_C_CalcLookAtRotation, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000130, "Member 'LookAtComponent_C_CalcLookAtRotation::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");

// Function LookAtComponent.LookAtComponent_C.getMeshComponent
// 0x0038 (0x0038 - 0x0000)
struct LookAtComponent_C_GetMeshComponent final
{
public:
	class USkeletalMeshComponent*                 Mesh;                                              // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class USkeletalMeshComponent*>         CallFunc_K2_GetComponentsByClass_ReturnValue;      // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_50BD[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(LookAtComponent_C_GetMeshComponent) == 0x000008, "Wrong alignment on LookAtComponent_C_GetMeshComponent");
static_assert(sizeof(LookAtComponent_C_GetMeshComponent) == 0x000038, "Wrong size on LookAtComponent_C_GetMeshComponent");
static_assert(offsetof(LookAtComponent_C_GetMeshComponent, Mesh) == 0x000000, "Member 'LookAtComponent_C_GetMeshComponent::Mesh' has a wrong offset!");
static_assert(offsetof(LookAtComponent_C_GetMeshComponent, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'LookAtComponent_C_GetMeshComponent::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(LookAtComponent_C_GetMeshComponent, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x000010, "Member 'LookAtComponent_C_GetMeshComponent::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(LookAtComponent_C_GetMeshComponent, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'LookAtComponent_C_GetMeshComponent::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(LookAtComponent_C_GetMeshComponent, CallFunc_Array_Get_Item) == 0x000028, "Member 'LookAtComponent_C_GetMeshComponent::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(LookAtComponent_C_GetMeshComponent, CallFunc_Greater_IntInt_ReturnValue) == 0x000030, "Member 'LookAtComponent_C_GetMeshComponent::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function LookAtComponent.LookAtComponent_C.UpdateAnimLookAtRotation
// 0x0068 (0x0068 - 0x0000)
struct LookAtComponent_C_UpdateAnimLookAtRotation final
{
public:
	class URSAjitoAnimInstance*                   CallFunc_getAjitoCharaAnim_Anim;                   // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_50BE[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class URSNpcAnimInstance*                     CallFunc_getNpcAnim_Anim;                          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_50BF[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_RInterpTo_ReturnValue;                    // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_50C0[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class URSPlayerAnimInstance*                  CallFunc_getAnim_Anim;                             // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_2;                      // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_2;                     // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_2;                       // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(LookAtComponent_C_UpdateAnimLookAtRotation) == 0x000008, "Wrong alignment on LookAtComponent_C_UpdateAnimLookAtRotation");
static_assert(sizeof(LookAtComponent_C_UpdateAnimLookAtRotation) == 0x000068, "Wrong size on LookAtComponent_C_UpdateAnimLookAtRotation");
static_assert(offsetof(LookAtComponent_C_UpdateAnimLookAtRotation, CallFunc_getAjitoCharaAnim_Anim) == 0x000000, "Member 'LookAtComponent_C_UpdateAnimLookAtRotation::CallFunc_getAjitoCharaAnim_Anim' has a wrong offset!");
static_assert(offsetof(LookAtComponent_C_UpdateAnimLookAtRotation, CallFunc_BreakRotator_Roll) == 0x000008, "Member 'LookAtComponent_C_UpdateAnimLookAtRotation::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(LookAtComponent_C_UpdateAnimLookAtRotation, CallFunc_BreakRotator_Pitch) == 0x00000C, "Member 'LookAtComponent_C_UpdateAnimLookAtRotation::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(LookAtComponent_C_UpdateAnimLookAtRotation, CallFunc_BreakRotator_Yaw) == 0x000010, "Member 'LookAtComponent_C_UpdateAnimLookAtRotation::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(LookAtComponent_C_UpdateAnimLookAtRotation, CallFunc_IsValid_ReturnValue) == 0x000014, "Member 'LookAtComponent_C_UpdateAnimLookAtRotation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(LookAtComponent_C_UpdateAnimLookAtRotation, CallFunc_getNpcAnim_Anim) == 0x000018, "Member 'LookAtComponent_C_UpdateAnimLookAtRotation::CallFunc_getNpcAnim_Anim' has a wrong offset!");
static_assert(offsetof(LookAtComponent_C_UpdateAnimLookAtRotation, CallFunc_IsValid_ReturnValue_1) == 0x000020, "Member 'LookAtComponent_C_UpdateAnimLookAtRotation::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LookAtComponent_C_UpdateAnimLookAtRotation, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000024, "Member 'LookAtComponent_C_UpdateAnimLookAtRotation::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(LookAtComponent_C_UpdateAnimLookAtRotation, CallFunc_MakeRotator_ReturnValue) == 0x000028, "Member 'LookAtComponent_C_UpdateAnimLookAtRotation::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(LookAtComponent_C_UpdateAnimLookAtRotation, CallFunc_RInterpTo_ReturnValue) == 0x000034, "Member 'LookAtComponent_C_UpdateAnimLookAtRotation::CallFunc_RInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(LookAtComponent_C_UpdateAnimLookAtRotation, CallFunc_BreakRotator_Roll_1) == 0x000040, "Member 'LookAtComponent_C_UpdateAnimLookAtRotation::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(LookAtComponent_C_UpdateAnimLookAtRotation, CallFunc_BreakRotator_Pitch_1) == 0x000044, "Member 'LookAtComponent_C_UpdateAnimLookAtRotation::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(LookAtComponent_C_UpdateAnimLookAtRotation, CallFunc_BreakRotator_Yaw_1) == 0x000048, "Member 'LookAtComponent_C_UpdateAnimLookAtRotation::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(LookAtComponent_C_UpdateAnimLookAtRotation, CallFunc_getAnim_Anim) == 0x000050, "Member 'LookAtComponent_C_UpdateAnimLookAtRotation::CallFunc_getAnim_Anim' has a wrong offset!");
static_assert(offsetof(LookAtComponent_C_UpdateAnimLookAtRotation, CallFunc_BreakRotator_Roll_2) == 0x000058, "Member 'LookAtComponent_C_UpdateAnimLookAtRotation::CallFunc_BreakRotator_Roll_2' has a wrong offset!");
static_assert(offsetof(LookAtComponent_C_UpdateAnimLookAtRotation, CallFunc_BreakRotator_Pitch_2) == 0x00005C, "Member 'LookAtComponent_C_UpdateAnimLookAtRotation::CallFunc_BreakRotator_Pitch_2' has a wrong offset!");
static_assert(offsetof(LookAtComponent_C_UpdateAnimLookAtRotation, CallFunc_BreakRotator_Yaw_2) == 0x000060, "Member 'LookAtComponent_C_UpdateAnimLookAtRotation::CallFunc_BreakRotator_Yaw_2' has a wrong offset!");
static_assert(offsetof(LookAtComponent_C_UpdateAnimLookAtRotation, CallFunc_IsValid_ReturnValue_2) == 0x000064, "Member 'LookAtComponent_C_UpdateAnimLookAtRotation::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

// Function LookAtComponent.LookAtComponent_C.calcLookAtRotationLimit
// 0x0070 (0x0070 - 0x0000)
struct LookAtComponent_C_CalcLookAtRotationLimit final
{
public:
	struct FRotator                               RawRotation;                                       // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               LimitedRotation;                                   // 0x000C(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_50C1[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_2;        // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_ClampAngle_ReturnValue;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_3;        // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_ClampAngle_ReturnValue_1;                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(LookAtComponent_C_CalcLookAtRotationLimit) == 0x000008, "Wrong alignment on LookAtComponent_C_CalcLookAtRotationLimit");
static_assert(sizeof(LookAtComponent_C_CalcLookAtRotationLimit) == 0x000070, "Wrong size on LookAtComponent_C_CalcLookAtRotationLimit");
static_assert(offsetof(LookAtComponent_C_CalcLookAtRotationLimit, RawRotation) == 0x000000, "Member 'LookAtComponent_C_CalcLookAtRotationLimit::RawRotation' has a wrong offset!");
static_assert(offsetof(LookAtComponent_C_CalcLookAtRotationLimit, LimitedRotation) == 0x00000C, "Member 'LookAtComponent_C_CalcLookAtRotationLimit::LimitedRotation' has a wrong offset!");
static_assert(offsetof(LookAtComponent_C_CalcLookAtRotationLimit, CallFunc_BreakRotator_Roll) == 0x000018, "Member 'LookAtComponent_C_CalcLookAtRotationLimit::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(LookAtComponent_C_CalcLookAtRotationLimit, CallFunc_BreakRotator_Pitch) == 0x00001C, "Member 'LookAtComponent_C_CalcLookAtRotationLimit::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(LookAtComponent_C_CalcLookAtRotationLimit, CallFunc_BreakRotator_Yaw) == 0x000020, "Member 'LookAtComponent_C_CalcLookAtRotationLimit::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(LookAtComponent_C_CalcLookAtRotationLimit, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000024, "Member 'LookAtComponent_C_CalcLookAtRotationLimit::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(LookAtComponent_C_CalcLookAtRotationLimit, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000028, "Member 'LookAtComponent_C_CalcLookAtRotationLimit::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LookAtComponent_C_CalcLookAtRotationLimit, CallFunc_GetOwner_ReturnValue) == 0x000030, "Member 'LookAtComponent_C_CalcLookAtRotationLimit::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(LookAtComponent_C_CalcLookAtRotationLimit, CallFunc_Subtract_FloatFloat_ReturnValue_2) == 0x000038, "Member 'LookAtComponent_C_CalcLookAtRotationLimit::CallFunc_Subtract_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(LookAtComponent_C_CalcLookAtRotationLimit, CallFunc_K2_GetActorRotation_ReturnValue) == 0x00003C, "Member 'LookAtComponent_C_CalcLookAtRotationLimit::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(LookAtComponent_C_CalcLookAtRotationLimit, CallFunc_ClampAngle_ReturnValue) == 0x000048, "Member 'LookAtComponent_C_CalcLookAtRotationLimit::CallFunc_ClampAngle_ReturnValue' has a wrong offset!");
static_assert(offsetof(LookAtComponent_C_CalcLookAtRotationLimit, CallFunc_BreakRotator_Roll_1) == 0x00004C, "Member 'LookAtComponent_C_CalcLookAtRotationLimit::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(LookAtComponent_C_CalcLookAtRotationLimit, CallFunc_BreakRotator_Pitch_1) == 0x000050, "Member 'LookAtComponent_C_CalcLookAtRotationLimit::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(LookAtComponent_C_CalcLookAtRotationLimit, CallFunc_BreakRotator_Yaw_1) == 0x000054, "Member 'LookAtComponent_C_CalcLookAtRotationLimit::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(LookAtComponent_C_CalcLookAtRotationLimit, CallFunc_Subtract_FloatFloat_ReturnValue_3) == 0x000058, "Member 'LookAtComponent_C_CalcLookAtRotationLimit::CallFunc_Subtract_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(LookAtComponent_C_CalcLookAtRotationLimit, CallFunc_ClampAngle_ReturnValue_1) == 0x00005C, "Member 'LookAtComponent_C_CalcLookAtRotationLimit::CallFunc_ClampAngle_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LookAtComponent_C_CalcLookAtRotationLimit, CallFunc_MakeRotator_ReturnValue) == 0x000060, "Member 'LookAtComponent_C_CalcLookAtRotationLimit::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");

// Function LookAtComponent.LookAtComponent_C.getMesh
// 0x0038 (0x0038 - 0x0000)
struct LookAtComponent_C_GetMesh final
{
public:
	class USkeletalMesh*                          Mesh;                                              // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class USkeletalMeshComponent*>         CallFunc_K2_GetComponentsByClass_ReturnValue;      // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_50C2[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(LookAtComponent_C_GetMesh) == 0x000008, "Wrong alignment on LookAtComponent_C_GetMesh");
static_assert(sizeof(LookAtComponent_C_GetMesh) == 0x000038, "Wrong size on LookAtComponent_C_GetMesh");
static_assert(offsetof(LookAtComponent_C_GetMesh, Mesh) == 0x000000, "Member 'LookAtComponent_C_GetMesh::Mesh' has a wrong offset!");
static_assert(offsetof(LookAtComponent_C_GetMesh, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'LookAtComponent_C_GetMesh::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(LookAtComponent_C_GetMesh, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x000010, "Member 'LookAtComponent_C_GetMesh::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(LookAtComponent_C_GetMesh, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'LookAtComponent_C_GetMesh::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(LookAtComponent_C_GetMesh, CallFunc_Array_Get_Item) == 0x000028, "Member 'LookAtComponent_C_GetMesh::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(LookAtComponent_C_GetMesh, CallFunc_Greater_IntInt_ReturnValue) == 0x000030, "Member 'LookAtComponent_C_GetMesh::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function LookAtComponent.LookAtComponent_C.GetNpcMeshComponent
// 0x0038 (0x0038 - 0x0000)
struct LookAtComponent_C_GetNpcMeshComponent final
{
public:
	class UNpcSkeletalMeshComponent*              NpcMesh;                                           // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UNpcSkeletalMeshComponent*>      CallFunc_K2_GetComponentsByClass_ReturnValue;      // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_50C3[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UNpcSkeletalMeshComponent*              CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(LookAtComponent_C_GetNpcMeshComponent) == 0x000008, "Wrong alignment on LookAtComponent_C_GetNpcMeshComponent");
static_assert(sizeof(LookAtComponent_C_GetNpcMeshComponent) == 0x000038, "Wrong size on LookAtComponent_C_GetNpcMeshComponent");
static_assert(offsetof(LookAtComponent_C_GetNpcMeshComponent, NpcMesh) == 0x000000, "Member 'LookAtComponent_C_GetNpcMeshComponent::NpcMesh' has a wrong offset!");
static_assert(offsetof(LookAtComponent_C_GetNpcMeshComponent, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'LookAtComponent_C_GetNpcMeshComponent::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(LookAtComponent_C_GetNpcMeshComponent, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x000010, "Member 'LookAtComponent_C_GetNpcMeshComponent::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(LookAtComponent_C_GetNpcMeshComponent, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'LookAtComponent_C_GetNpcMeshComponent::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(LookAtComponent_C_GetNpcMeshComponent, CallFunc_Array_Get_Item) == 0x000028, "Member 'LookAtComponent_C_GetNpcMeshComponent::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(LookAtComponent_C_GetNpcMeshComponent, CallFunc_Greater_IntInt_ReturnValue) == 0x000030, "Member 'LookAtComponent_C_GetNpcMeshComponent::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function LookAtComponent.LookAtComponent_C.getNpcAnim
// 0x0038 (0x0038 - 0x0000)
struct LookAtComponent_C_GetNpcAnim final
{
public:
	class URSNpcAnimInstance*                     Anim;                                              // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNpcSkeletalMeshComponent*              CallFunc_GetNpcMeshComponent_NpcMesh;              // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_50C4[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_GetAnimationComponent_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URSNpcAnimInstance*                     K2Node_DynamicCast_AsRSNpc_Anim_Instance;          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(LookAtComponent_C_GetNpcAnim) == 0x000008, "Wrong alignment on LookAtComponent_C_GetNpcAnim");
static_assert(sizeof(LookAtComponent_C_GetNpcAnim) == 0x000038, "Wrong size on LookAtComponent_C_GetNpcAnim");
static_assert(offsetof(LookAtComponent_C_GetNpcAnim, Anim) == 0x000000, "Member 'LookAtComponent_C_GetNpcAnim::Anim' has a wrong offset!");
static_assert(offsetof(LookAtComponent_C_GetNpcAnim, CallFunc_GetNpcMeshComponent_NpcMesh) == 0x000008, "Member 'LookAtComponent_C_GetNpcAnim::CallFunc_GetNpcMeshComponent_NpcMesh' has a wrong offset!");
static_assert(offsetof(LookAtComponent_C_GetNpcAnim, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'LookAtComponent_C_GetNpcAnim::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(LookAtComponent_C_GetNpcAnim, CallFunc_GetAnimationComponent_ReturnValue) == 0x000018, "Member 'LookAtComponent_C_GetNpcAnim::CallFunc_GetAnimationComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(LookAtComponent_C_GetNpcAnim, CallFunc_GetAnimInstance_ReturnValue) == 0x000020, "Member 'LookAtComponent_C_GetNpcAnim::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(LookAtComponent_C_GetNpcAnim, K2Node_DynamicCast_AsRSNpc_Anim_Instance) == 0x000028, "Member 'LookAtComponent_C_GetNpcAnim::K2Node_DynamicCast_AsRSNpc_Anim_Instance' has a wrong offset!");
static_assert(offsetof(LookAtComponent_C_GetNpcAnim, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'LookAtComponent_C_GetNpcAnim::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function LookAtComponent.LookAtComponent_C.getAjitoCharaAnim
// 0x0030 (0x0030 - 0x0000)
struct LookAtComponent_C_GetAjitoCharaAnim final
{
public:
	class URSAjitoAnimInstance*                   Anim;                                              // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_getMeshComponent_mesh;                    // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_50C5[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URSAjitoAnimInstance*                   K2Node_DynamicCast_AsRSAjito_Anim_Instance;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(LookAtComponent_C_GetAjitoCharaAnim) == 0x000008, "Wrong alignment on LookAtComponent_C_GetAjitoCharaAnim");
static_assert(sizeof(LookAtComponent_C_GetAjitoCharaAnim) == 0x000030, "Wrong size on LookAtComponent_C_GetAjitoCharaAnim");
static_assert(offsetof(LookAtComponent_C_GetAjitoCharaAnim, Anim) == 0x000000, "Member 'LookAtComponent_C_GetAjitoCharaAnim::Anim' has a wrong offset!");
static_assert(offsetof(LookAtComponent_C_GetAjitoCharaAnim, CallFunc_getMeshComponent_mesh) == 0x000008, "Member 'LookAtComponent_C_GetAjitoCharaAnim::CallFunc_getMeshComponent_mesh' has a wrong offset!");
static_assert(offsetof(LookAtComponent_C_GetAjitoCharaAnim, CallFunc_GetAnimInstance_ReturnValue) == 0x000010, "Member 'LookAtComponent_C_GetAjitoCharaAnim::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(LookAtComponent_C_GetAjitoCharaAnim, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'LookAtComponent_C_GetAjitoCharaAnim::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(LookAtComponent_C_GetAjitoCharaAnim, K2Node_DynamicCast_AsRSAjito_Anim_Instance) == 0x000020, "Member 'LookAtComponent_C_GetAjitoCharaAnim::K2Node_DynamicCast_AsRSAjito_Anim_Instance' has a wrong offset!");
static_assert(offsetof(LookAtComponent_C_GetAjitoCharaAnim, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'LookAtComponent_C_GetAjitoCharaAnim::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function LookAtComponent.LookAtComponent_C.Get Look At Rotation Difference Yaw
// 0x0024 (0x0024 - 0x0000)
struct LookAtComponent_C_Get_Look_At_Rotation_Difference_Yaw final
{
public:
	float                                         Difference;                                        // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LookAtComponent_C_Get_Look_At_Rotation_Difference_Yaw) == 0x000004, "Wrong alignment on LookAtComponent_C_Get_Look_At_Rotation_Difference_Yaw");
static_assert(sizeof(LookAtComponent_C_Get_Look_At_Rotation_Difference_Yaw) == 0x000024, "Wrong size on LookAtComponent_C_Get_Look_At_Rotation_Difference_Yaw");
static_assert(offsetof(LookAtComponent_C_Get_Look_At_Rotation_Difference_Yaw, Difference) == 0x000000, "Member 'LookAtComponent_C_Get_Look_At_Rotation_Difference_Yaw::Difference' has a wrong offset!");
static_assert(offsetof(LookAtComponent_C_Get_Look_At_Rotation_Difference_Yaw, CallFunc_BreakRotator_Roll) == 0x000004, "Member 'LookAtComponent_C_Get_Look_At_Rotation_Difference_Yaw::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(LookAtComponent_C_Get_Look_At_Rotation_Difference_Yaw, CallFunc_BreakRotator_Pitch) == 0x000008, "Member 'LookAtComponent_C_Get_Look_At_Rotation_Difference_Yaw::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(LookAtComponent_C_Get_Look_At_Rotation_Difference_Yaw, CallFunc_BreakRotator_Yaw) == 0x00000C, "Member 'LookAtComponent_C_Get_Look_At_Rotation_Difference_Yaw::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(LookAtComponent_C_Get_Look_At_Rotation_Difference_Yaw, CallFunc_BreakRotator_Roll_1) == 0x000010, "Member 'LookAtComponent_C_Get_Look_At_Rotation_Difference_Yaw::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(LookAtComponent_C_Get_Look_At_Rotation_Difference_Yaw, CallFunc_BreakRotator_Pitch_1) == 0x000014, "Member 'LookAtComponent_C_Get_Look_At_Rotation_Difference_Yaw::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(LookAtComponent_C_Get_Look_At_Rotation_Difference_Yaw, CallFunc_BreakRotator_Yaw_1) == 0x000018, "Member 'LookAtComponent_C_Get_Look_At_Rotation_Difference_Yaw::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(LookAtComponent_C_Get_Look_At_Rotation_Difference_Yaw, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00001C, "Member 'LookAtComponent_C_Get_Look_At_Rotation_Difference_Yaw::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(LookAtComponent_C_Get_Look_At_Rotation_Difference_Yaw, CallFunc_Abs_ReturnValue) == 0x000020, "Member 'LookAtComponent_C_Get_Look_At_Rotation_Difference_Yaw::CallFunc_Abs_ReturnValue' has a wrong offset!");

}

