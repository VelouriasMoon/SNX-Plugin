#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CombinationVisionBullet_ch0700

#include "Basic.hpp"

#include "BP_CombinationVisionBullet_ch0700_classes.hpp"
#include "BP_CombinationVisionBullet_ch0700_parameters.hpp"


namespace SDK
{

// Function BP_CombinationVisionBullet_ch0700.BP_CombinationVisionBullet_ch0700_C.OnAttackEnd
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_CombinationVisionBullet_ch0700_C::OnAttackEnd(bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CombinationVisionBullet_ch0700_C", "OnAttackEnd");

	Params::BP_CombinationVisionBullet_ch0700_C_OnAttackEnd Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function BP_CombinationVisionBullet_ch0700.BP_CombinationVisionBullet_ch0700_C.SetBulletVisibility
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    On                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Dunnmy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_CombinationVisionBullet_ch0700_C::SetBulletVisibility(bool On, bool* Dunnmy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CombinationVisionBullet_ch0700_C", "SetBulletVisibility");

	Params::BP_CombinationVisionBullet_ch0700_C_SetBulletVisibility Parms{};

	Parms.On = On;

	UObject::ProcessEvent(Func, &Parms);

	if (Dunnmy != nullptr)
		*Dunnmy = Parms.Dunnmy;
}


// Function BP_CombinationVisionBullet_ch0700.BP_CombinationVisionBullet_ch0700_C.Fire
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Param_AttackOwner                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Param_FirePoint                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Dir                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FAttackCollisionInfoBP           Param_CollisionInfo                                    (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// bool                                    Param_bDisableImpactParticle                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bSuccess                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_CombinationVisionBullet_ch0700_C::Fire(class AActor* Param_AttackOwner, const struct FVector& Param_FirePoint, const struct FVector& Dir, struct FAttackCollisionInfoBP& Param_CollisionInfo, bool Param_bDisableImpactParticle, bool* bSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CombinationVisionBullet_ch0700_C", "Fire");

	Params::BP_CombinationVisionBullet_ch0700_C_Fire Parms{};

	Parms.Param_AttackOwner = Param_AttackOwner;
	Parms.Param_FirePoint = std::move(Param_FirePoint);
	Parms.Dir = std::move(Dir);
	Parms.Param_CollisionInfo = std::move(Param_CollisionInfo);
	Parms.Param_bDisableImpactParticle = Param_bDisableImpactParticle;

	UObject::ProcessEvent(Func, &Parms);

	Param_CollisionInfo = std::move(Parms.Param_CollisionInfo);

	if (bSuccess != nullptr)
		*bSuccess = Parms.bSuccess;
}


// Function BP_CombinationVisionBullet_ch0700.BP_CombinationVisionBullet_ch0700_C.SetEffectKnife
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_CombinationVisionBullet_ch0700_C::SetEffectKnife(bool Flag_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CombinationVisionBullet_ch0700_C", "SetEffectKnife");

	Params::BP_CombinationVisionBullet_ch0700_C_SetEffectKnife Parms{};

	Parms.Flag_in = Flag_in;

	UObject::ProcessEvent(Func, &Parms);
}

}

