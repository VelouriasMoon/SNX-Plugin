#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_RenderTargetManager

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "BattlePrototype_structs.hpp"
#include "ERenderTargetType_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_RenderTargetManager.BP_RenderTargetManager_C
// 0x00D8 (0x0308 - 0x0230)
class ABP_RenderTargetManager_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0230(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 RT_SASCutin;                                       // 0x0240(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 RT_EventTransitionScreen;                          // 0x0248(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsInitialize;                                      // 0x0250(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3AFF[0x7];                                     // 0x0251(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextureRenderTarget2D*                 RT_UIMinimap;                                      // 0x0258(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 RT_CutSceneFaceA;                                  // 0x0260(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 RT_CutSceneFaceB;                                  // 0x0268(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 RT_CutSceneFaceC;                                  // 0x0270(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RenderTargetTypeFlag;                              // 0x0278(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B00[0x4];                                     // 0x027C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextureRenderTarget2D*                 RT_CutSceneFaceD;                                  // 0x0280(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 RT_CutSceneFaceE;                                  // 0x0288(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 RT_CutSceneFaceF;                                  // 0x0290(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 RT_CutSceneFaceG;                                  // 0x0298(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 RT_CutSceneFaceH;                                  // 0x02A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 RT_CutSceneFaceI;                                  // 0x02A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 RT_BrainFieldMonitor;                              // 0x02B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 SpecialCutSceneA;                                  // 0x02B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 SpecialCutSceneB;                                  // 0x02C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 RT_MenuCharacterA_Alpha;                           // 0x02C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 RT_MenuCharacterB_Alpha;                           // 0x02D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 SpecialCutSceneE;                                  // 0x02D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 RT_WorldMap;                                       // 0x02E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RenderScreenPercentage;                            // 0x02E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PlatformScreenPercentage;                          // 0x02EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Resolution4k;                                      // 0x02F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B01[0x7];                                     // 0x02F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             ED_ResetRenderTarget;                              // 0x02F8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void ED_ResetRenderTarget__DelegateSignature(ERenderTargetType RenderTargetType, class UTextureRenderTarget2D* NewTarget);
	void ExecuteUbergraph_BP_RenderTargetManager(int32 EntryPoint);
	void ResetRenderTarget();
	void DelayBeginPlay();
	void UserConstructionScript();
	void GetCutSceneFaceRenderTarget(class UTextureRenderTarget2D** RenderTarget, ERenderTargetType* UsedRenderTargetType);
	void Initialize();
	void OnRendetTargetTypeFlag(int32 BitMask);
	void OffRenderTargetTypeFlag(int32 BitMask);
	bool IsOnRenderTargetTypeFlag(int32 BitMask);
	void GetRenderTarget(ERenderTargetType RenderTargetType, class UTextureRenderTarget2D** RenderTarget);
	void GetERenderTargetTypeBitMask(ERenderTargetType ERenderTargetType, int32* BitMask);
	void GetSpecialCutSceneRenderTarget(class UTextureRenderTarget2D** RenderTarget, ERenderTargetType* UsedRenderTargetType);
	void BeginDebuggingManager(int32* RestoreFlag);
	void ClearEventRenderTargetFlag();
	void PrivateCreateCutSceneFaceTarget(class UTextureRenderTarget2D** Target);
	void GetScreenTargetSize(int32 BaseWidth, int32 BaseHeight, bool Allow4k, int32* Width, int32* Height);
	void EndDebuggingManager(int32 RestoreFlag);
	void DebugGetRenderTargetList(TArray<class UTextureRenderTarget2D*>* RenderTargetList);
	void PrivateResetRenderTarget(bool InitializeSetting, bool ForceReset);
	void DebugForceResetRenderTarget();
	void GetPlatformScreenPercentage(float* ScreenPercentage);
	bool InitializeManager(EManagerProcTiming Timing);
	bool FinalizeManager(EManagerProcTiming Timing);
	bool IsNeedFrameWait();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_RenderTargetManager_C">();
	}
	static class ABP_RenderTargetManager_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_RenderTargetManager_C>();
	}
};
static_assert(alignof(ABP_RenderTargetManager_C) == 0x000008, "Wrong alignment on ABP_RenderTargetManager_C");
static_assert(sizeof(ABP_RenderTargetManager_C) == 0x000308, "Wrong size on ABP_RenderTargetManager_C");
static_assert(offsetof(ABP_RenderTargetManager_C, UberGraphFrame) == 0x000230, "Member 'ABP_RenderTargetManager_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_RenderTargetManager_C, DefaultSceneRoot) == 0x000238, "Member 'ABP_RenderTargetManager_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_RenderTargetManager_C, RT_SASCutin) == 0x000240, "Member 'ABP_RenderTargetManager_C::RT_SASCutin' has a wrong offset!");
static_assert(offsetof(ABP_RenderTargetManager_C, RT_EventTransitionScreen) == 0x000248, "Member 'ABP_RenderTargetManager_C::RT_EventTransitionScreen' has a wrong offset!");
static_assert(offsetof(ABP_RenderTargetManager_C, IsInitialize) == 0x000250, "Member 'ABP_RenderTargetManager_C::IsInitialize' has a wrong offset!");
static_assert(offsetof(ABP_RenderTargetManager_C, RT_UIMinimap) == 0x000258, "Member 'ABP_RenderTargetManager_C::RT_UIMinimap' has a wrong offset!");
static_assert(offsetof(ABP_RenderTargetManager_C, RT_CutSceneFaceA) == 0x000260, "Member 'ABP_RenderTargetManager_C::RT_CutSceneFaceA' has a wrong offset!");
static_assert(offsetof(ABP_RenderTargetManager_C, RT_CutSceneFaceB) == 0x000268, "Member 'ABP_RenderTargetManager_C::RT_CutSceneFaceB' has a wrong offset!");
static_assert(offsetof(ABP_RenderTargetManager_C, RT_CutSceneFaceC) == 0x000270, "Member 'ABP_RenderTargetManager_C::RT_CutSceneFaceC' has a wrong offset!");
static_assert(offsetof(ABP_RenderTargetManager_C, RenderTargetTypeFlag) == 0x000278, "Member 'ABP_RenderTargetManager_C::RenderTargetTypeFlag' has a wrong offset!");
static_assert(offsetof(ABP_RenderTargetManager_C, RT_CutSceneFaceD) == 0x000280, "Member 'ABP_RenderTargetManager_C::RT_CutSceneFaceD' has a wrong offset!");
static_assert(offsetof(ABP_RenderTargetManager_C, RT_CutSceneFaceE) == 0x000288, "Member 'ABP_RenderTargetManager_C::RT_CutSceneFaceE' has a wrong offset!");
static_assert(offsetof(ABP_RenderTargetManager_C, RT_CutSceneFaceF) == 0x000290, "Member 'ABP_RenderTargetManager_C::RT_CutSceneFaceF' has a wrong offset!");
static_assert(offsetof(ABP_RenderTargetManager_C, RT_CutSceneFaceG) == 0x000298, "Member 'ABP_RenderTargetManager_C::RT_CutSceneFaceG' has a wrong offset!");
static_assert(offsetof(ABP_RenderTargetManager_C, RT_CutSceneFaceH) == 0x0002A0, "Member 'ABP_RenderTargetManager_C::RT_CutSceneFaceH' has a wrong offset!");
static_assert(offsetof(ABP_RenderTargetManager_C, RT_CutSceneFaceI) == 0x0002A8, "Member 'ABP_RenderTargetManager_C::RT_CutSceneFaceI' has a wrong offset!");
static_assert(offsetof(ABP_RenderTargetManager_C, RT_BrainFieldMonitor) == 0x0002B0, "Member 'ABP_RenderTargetManager_C::RT_BrainFieldMonitor' has a wrong offset!");
static_assert(offsetof(ABP_RenderTargetManager_C, SpecialCutSceneA) == 0x0002B8, "Member 'ABP_RenderTargetManager_C::SpecialCutSceneA' has a wrong offset!");
static_assert(offsetof(ABP_RenderTargetManager_C, SpecialCutSceneB) == 0x0002C0, "Member 'ABP_RenderTargetManager_C::SpecialCutSceneB' has a wrong offset!");
static_assert(offsetof(ABP_RenderTargetManager_C, RT_MenuCharacterA_Alpha) == 0x0002C8, "Member 'ABP_RenderTargetManager_C::RT_MenuCharacterA_Alpha' has a wrong offset!");
static_assert(offsetof(ABP_RenderTargetManager_C, RT_MenuCharacterB_Alpha) == 0x0002D0, "Member 'ABP_RenderTargetManager_C::RT_MenuCharacterB_Alpha' has a wrong offset!");
static_assert(offsetof(ABP_RenderTargetManager_C, SpecialCutSceneE) == 0x0002D8, "Member 'ABP_RenderTargetManager_C::SpecialCutSceneE' has a wrong offset!");
static_assert(offsetof(ABP_RenderTargetManager_C, RT_WorldMap) == 0x0002E0, "Member 'ABP_RenderTargetManager_C::RT_WorldMap' has a wrong offset!");
static_assert(offsetof(ABP_RenderTargetManager_C, RenderScreenPercentage) == 0x0002E8, "Member 'ABP_RenderTargetManager_C::RenderScreenPercentage' has a wrong offset!");
static_assert(offsetof(ABP_RenderTargetManager_C, PlatformScreenPercentage) == 0x0002EC, "Member 'ABP_RenderTargetManager_C::PlatformScreenPercentage' has a wrong offset!");
static_assert(offsetof(ABP_RenderTargetManager_C, Resolution4k) == 0x0002F0, "Member 'ABP_RenderTargetManager_C::Resolution4k' has a wrong offset!");
static_assert(offsetof(ABP_RenderTargetManager_C, ED_ResetRenderTarget) == 0x0002F8, "Member 'ABP_RenderTargetManager_C::ED_ResetRenderTarget' has a wrong offset!");

}

