#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MakeEventActorBase

#include "Basic.hpp"

#include "BP_MakeEventActorBase_classes.hpp"
#include "BP_MakeEventActorBase_parameters.hpp"


namespace SDK
{

// Function BP_MakeEventActorBase.BP_MakeEventActorBase_C.CallLoadMessageEvent__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABP_MakeEventActorBase_C::CallLoadMessageEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MakeEventActorBase_C", "CallLoadMessageEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MakeEventActorBase.BP_MakeEventActorBase_C.CallUnloadMessageEvent__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABP_MakeEventActorBase_C::CallUnloadMessageEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MakeEventActorBase_C", "CallUnloadMessageEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MakeEventActorBase.BP_MakeEventActorBase_C.ExecuteUbergraph_BP_MakeEventActorBase
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MakeEventActorBase_C::ExecuteUbergraph_BP_MakeEventActorBase(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MakeEventActorBase_C", "ExecuteUbergraph_BP_MakeEventActorBase");

	Params::BP_MakeEventActorBase_C_ExecuteUbergraph_BP_MakeEventActorBase Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MakeEventActorBase.BP_MakeEventActorBase_C.SubEvent
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AMainEventLatentActor*            Latenter                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MakeEventActorBase_C::SubEvent(class AMainEventLatentActor* Latenter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MakeEventActorBase_C", "SubEvent");

	Params::BP_MakeEventActorBase_C_SubEvent Parms{};

	Parms.Latenter = Latenter;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MakeEventActorBase.BP_MakeEventActorBase_C.StartEvent
// (Event, Public, BlueprintEvent)

void ABP_MakeEventActorBase_C::StartEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MakeEventActorBase_C", "StartEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MakeEventActorBase.BP_MakeEventActorBase_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_MakeEventActorBase_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MakeEventActorBase_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MakeEventActorBase.BP_MakeEventActorBase_C.OnStartGameEventNative
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_MakeEventActorBase_C::OnStartGameEventNative()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MakeEventActorBase_C", "OnStartGameEventNative");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MakeEventActorBase.BP_MakeEventActorBase_C.SeamlessStartEvent
// (BlueprintCallable, BlueprintEvent)

void ABP_MakeEventActorBase_C::SeamlessStartEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MakeEventActorBase_C", "SeamlessStartEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MakeEventActorBase.BP_MakeEventActorBase_C.SettingCaptureNewStatic
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   CaptureActorIndex                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   BoardMeshIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             CapturePresetName                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             CharaBodyAnimationSectionName                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             CharaFaceAnimationSectionName                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   NpcMeshTableID                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   NpcMaterialTableID                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             LightPresetName                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ULevelSequence*                   CaptureSequnece                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   CaptureSequnecePositon                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             TextureRowName                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EStaticPlType                           StaticPlType                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             MovieTextureRowName                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsSeamlessInGameCapture                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsUseSaveTexture                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsHiddenPlFrameEffect                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class FName                             CharaEyePresetName                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   EyeXAxisThreshold                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   EyeYAxisThreshold                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             CharaPartsDTRowName                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EEventCaptureRenderType                 RenderType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ToneMapCounterValue                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MakeEventActorBase_C::SettingCaptureNewStatic(int32 CaptureActorIndex, int32 BoardMeshIndex, class FName CapturePresetName, class FName CharaBodyAnimationSectionName, class FName CharaFaceAnimationSectionName, int32 NpcMeshTableID, int32 NpcMaterialTableID, class FName LightPresetName, class ULevelSequence* CaptureSequnece, float CaptureSequnecePositon, class FName TextureRowName, EStaticPlType StaticPlType, class FName MovieTextureRowName, bool IsSeamlessInGameCapture, bool IsUseSaveTexture, bool IsHiddenPlFrameEffect, class FName CharaEyePresetName, float EyeXAxisThreshold, float EyeYAxisThreshold, class FName CharaPartsDTRowName, EEventCaptureRenderType RenderType, float ToneMapCounterValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MakeEventActorBase_C", "SettingCaptureNewStatic");

	Params::BP_MakeEventActorBase_C_SettingCaptureNewStatic Parms{};

	Parms.CaptureActorIndex = CaptureActorIndex;
	Parms.BoardMeshIndex = BoardMeshIndex;
	Parms.CapturePresetName = CapturePresetName;
	Parms.CharaBodyAnimationSectionName = CharaBodyAnimationSectionName;
	Parms.CharaFaceAnimationSectionName = CharaFaceAnimationSectionName;
	Parms.NpcMeshTableID = NpcMeshTableID;
	Parms.NpcMaterialTableID = NpcMaterialTableID;
	Parms.LightPresetName = LightPresetName;
	Parms.CaptureSequnece = CaptureSequnece;
	Parms.CaptureSequnecePositon = CaptureSequnecePositon;
	Parms.TextureRowName = TextureRowName;
	Parms.StaticPlType = StaticPlType;
	Parms.MovieTextureRowName = MovieTextureRowName;
	Parms.IsSeamlessInGameCapture = IsSeamlessInGameCapture;
	Parms.IsUseSaveTexture = IsUseSaveTexture;
	Parms.IsHiddenPlFrameEffect = IsHiddenPlFrameEffect;
	Parms.CharaEyePresetName = CharaEyePresetName;
	Parms.EyeXAxisThreshold = EyeXAxisThreshold;
	Parms.EyeYAxisThreshold = EyeYAxisThreshold;
	Parms.CharaPartsDTRowName = CharaPartsDTRowName;
	Parms.RenderType = RenderType;
	Parms.ToneMapCounterValue = ToneMapCounterValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MakeEventActorBase.BP_MakeEventActorBase_C.ComandStartBoardAnimation
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   CaptureActorIndex                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           BoardAnimNamePath                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           MessageLabel                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// float                                   MessageDelayTime                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   BoardMeshIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             CapturePresetName                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             CharaBodyAnimationSectionName                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             CharaFaceAnimationSectionName                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   NpcMeshTableID                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   NpcMaterialTableID                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             LightPresetName                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             TextureRowName                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UAnimMontage*                     AddAnimMontage                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EStaticPlType                           StaticPlType                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             MovieTextureRowName                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsUseSaveTexture                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_MakeEventActorBase_C::ComandStartBoardAnimation(int32 CaptureActorIndex, const class FString& BoardAnimNamePath, const class FString& MessageLabel, float MessageDelayTime, int32 BoardMeshIndex, class FName CapturePresetName, class FName CharaBodyAnimationSectionName, class FName CharaFaceAnimationSectionName, int32 NpcMeshTableID, int32 NpcMaterialTableID, class FName LightPresetName, class FName TextureRowName, class UAnimMontage* AddAnimMontage, EStaticPlType StaticPlType, class FName MovieTextureRowName, bool IsUseSaveTexture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MakeEventActorBase_C", "ComandStartBoardAnimation");

	Params::BP_MakeEventActorBase_C_ComandStartBoardAnimation Parms{};

	Parms.CaptureActorIndex = CaptureActorIndex;
	Parms.BoardAnimNamePath = std::move(BoardAnimNamePath);
	Parms.MessageLabel = std::move(MessageLabel);
	Parms.MessageDelayTime = MessageDelayTime;
	Parms.BoardMeshIndex = BoardMeshIndex;
	Parms.CapturePresetName = CapturePresetName;
	Parms.CharaBodyAnimationSectionName = CharaBodyAnimationSectionName;
	Parms.CharaFaceAnimationSectionName = CharaFaceAnimationSectionName;
	Parms.NpcMeshTableID = NpcMeshTableID;
	Parms.NpcMaterialTableID = NpcMaterialTableID;
	Parms.LightPresetName = LightPresetName;
	Parms.TextureRowName = TextureRowName;
	Parms.AddAnimMontage = AddAnimMontage;
	Parms.StaticPlType = StaticPlType;
	Parms.MovieTextureRowName = MovieTextureRowName;
	Parms.IsUseSaveTexture = IsUseSaveTexture;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MakeEventActorBase.BP_MakeEventActorBase_C.ReceiveEndPlay
// (Event, Protected, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MakeEventActorBase_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MakeEventActorBase_C", "ReceiveEndPlay");

	Params::BP_MakeEventActorBase_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MakeEventActorBase.BP_MakeEventActorBase_C.EndHighSpeedMode
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_MakeEventActorBase_C::EndHighSpeedMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MakeEventActorBase_C", "EndHighSpeedMode");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MakeEventActorBase.BP_MakeEventActorBase_C.StartHighSpeedMode
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_MakeEventActorBase_C::StartHighSpeedMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MakeEventActorBase_C", "StartHighSpeedMode");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MakeEventActorBase.BP_MakeEventActorBase_C.AfterSettingEvent
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AMainEventLatentActor*            Latenter                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MakeEventActorBase_C::AfterSettingEvent(class AMainEventLatentActor* Latenter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MakeEventActorBase_C", "AfterSettingEvent");

	Params::BP_MakeEventActorBase_C_AfterSettingEvent Parms{};

	Parms.Latenter = Latenter;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MakeEventActorBase.BP_MakeEventActorBase_C.initBPEvent
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AMainEventLatentActor*            Latenter                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MakeEventActorBase_C::InitBPEvent(class AMainEventLatentActor* Latenter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MakeEventActorBase_C", "initBPEvent");

	Params::BP_MakeEventActorBase_C_InitBPEvent Parms{};

	Parms.Latenter = Latenter;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MakeEventActorBase.BP_MakeEventActorBase_C.startSpecialBoadAnimation
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   SpecialCaptureActorIndex                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   BoardMeshIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ULevelSequence*                   CaptureSequence                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   CaptureSequencePosition                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             AttachPointName                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           SpecialNodeAnimNamePath                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FName                             BeforeStaticAttachJointName                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsResetAttach                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_MakeEventActorBase_C::StartSpecialBoadAnimation(int32 SpecialCaptureActorIndex, int32 BoardMeshIndex, class ULevelSequence* CaptureSequence, float CaptureSequencePosition, class FName AttachPointName, const class FString& SpecialNodeAnimNamePath, class FName BeforeStaticAttachJointName, bool IsResetAttach)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MakeEventActorBase_C", "startSpecialBoadAnimation");

	Params::BP_MakeEventActorBase_C_StartSpecialBoadAnimation Parms{};

	Parms.SpecialCaptureActorIndex = SpecialCaptureActorIndex;
	Parms.BoardMeshIndex = BoardMeshIndex;
	Parms.CaptureSequence = CaptureSequence;
	Parms.CaptureSequencePosition = CaptureSequencePosition;
	Parms.AttachPointName = AttachPointName;
	Parms.SpecialNodeAnimNamePath = std::move(SpecialNodeAnimNamePath);
	Parms.BeforeStaticAttachJointName = BeforeStaticAttachJointName;
	Parms.IsResetAttach = IsResetAttach;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MakeEventActorBase.BP_MakeEventActorBase_C.CommandStartGeneralBoardAnimation
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   CaptureActorIndex                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           BoardAnimationIndex                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// TSoftObjectPtr<class UCurveFloat>       BoardAnimPlayRateCurve                                 (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// class FString                           MessageLabel                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// float                                   MessageDelayTime                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   BoardMeshIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             CapturePresetName                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             CharaBodyAnimationSectionName                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             CharaFaceAnimationSectionName                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             LightPresetName                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   AttachBoardIndex                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ULevelSequence*                   CaptureSequnece                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   CaptureSequnecePositon                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             TextureRowName                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UAnimMontage*                     AddAnimMontage                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsUsePPMMoveBlur                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector2D                        PPMMoveBlurVector                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TSoftObjectPtr<class UCurveFloat>       PPMMoveBlurCurve                                       (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// bool                                    IsUseSaveTexture                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_MakeEventActorBase_C::CommandStartGeneralBoardAnimation(int32 CaptureActorIndex, const class FString& BoardAnimationIndex, TSoftObjectPtr<class UCurveFloat> BoardAnimPlayRateCurve, const class FString& MessageLabel, float MessageDelayTime, int32 BoardMeshIndex, class FName CapturePresetName, class FName CharaBodyAnimationSectionName, class FName CharaFaceAnimationSectionName, class FName LightPresetName, int32 AttachBoardIndex, class ULevelSequence* CaptureSequnece, float CaptureSequnecePositon, class FName TextureRowName, class UAnimMontage* AddAnimMontage, bool IsUsePPMMoveBlur, const struct FVector2D& PPMMoveBlurVector, TSoftObjectPtr<class UCurveFloat> PPMMoveBlurCurve, bool IsUseSaveTexture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MakeEventActorBase_C", "CommandStartGeneralBoardAnimation");

	Params::BP_MakeEventActorBase_C_CommandStartGeneralBoardAnimation Parms{};

	Parms.CaptureActorIndex = CaptureActorIndex;
	Parms.BoardAnimationIndex = std::move(BoardAnimationIndex);
	Parms.BoardAnimPlayRateCurve = BoardAnimPlayRateCurve;
	Parms.MessageLabel = std::move(MessageLabel);
	Parms.MessageDelayTime = MessageDelayTime;
	Parms.BoardMeshIndex = BoardMeshIndex;
	Parms.CapturePresetName = CapturePresetName;
	Parms.CharaBodyAnimationSectionName = CharaBodyAnimationSectionName;
	Parms.CharaFaceAnimationSectionName = CharaFaceAnimationSectionName;
	Parms.LightPresetName = LightPresetName;
	Parms.AttachBoardIndex = AttachBoardIndex;
	Parms.CaptureSequnece = CaptureSequnece;
	Parms.CaptureSequnecePositon = CaptureSequnecePositon;
	Parms.TextureRowName = TextureRowName;
	Parms.AddAnimMontage = AddAnimMontage;
	Parms.IsUsePPMMoveBlur = IsUsePPMMoveBlur;
	Parms.PPMMoveBlurVector = std::move(PPMMoveBlurVector);
	Parms.PPMMoveBlurCurve = PPMMoveBlurCurve;
	Parms.IsUseSaveTexture = IsUseSaveTexture;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MakeEventActorBase.BP_MakeEventActorBase_C.BPEventEnd
// (BlueprintCallable, BlueprintEvent)

void ABP_MakeEventActorBase_C::BPEventEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MakeEventActorBase_C", "BPEventEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MakeEventActorBase.BP_MakeEventActorBase_C.EventUnloadMessage
// (BlueprintCallable, BlueprintEvent)

void ABP_MakeEventActorBase_C::EventUnloadMessage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MakeEventActorBase_C", "EventUnloadMessage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MakeEventActorBase.BP_MakeEventActorBase_C.EventLoadMessage
// (BlueprintCallable, BlueprintEvent)

void ABP_MakeEventActorBase_C::EventLoadMessage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MakeEventActorBase_C", "EventLoadMessage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MakeEventActorBase.BP_MakeEventActorBase_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_MakeEventActorBase_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MakeEventActorBase_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MakeEventActorBase.BP_MakeEventActorBase_C.CloseSystemMessage
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MakeEventActorBase_C::CloseSystemMessage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MakeEventActorBase_C", "CloseSystemMessage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MakeEventActorBase.BP_MakeEventActorBase_C.OpenSystemMessage
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           MessageLabel                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ABP_MakeEventActorBase_C::OpenSystemMessage(const class FString& MessageLabel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MakeEventActorBase_C", "OpenSystemMessage");

	Params::BP_MakeEventActorBase_C_OpenSystemMessage Parms{};

	Parms.MessageLabel = std::move(MessageLabel);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MakeEventActorBase.BP_MakeEventActorBase_C.OnStartGameEvent
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_MakeEventActorBase_C::OnStartGameEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MakeEventActorBase_C", "OnStartGameEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MakeEventActorBase.BP_MakeEventActorBase_C.OpenGeneralSystemMessage
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           MessageID                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// ETextType                               TextType                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MakeEventActorBase_C::OpenGeneralSystemMessage(const class FString& MessageID, ETextType TextType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MakeEventActorBase_C", "OpenGeneralSystemMessage");

	Params::BP_MakeEventActorBase_C_OpenGeneralSystemMessage Parms{};

	Parms.MessageID = std::move(MessageID);
	Parms.TextType = TextType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MakeEventActorBase.BP_MakeEventActorBase_C.SetOwnerActorToAjitoMember
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           CharaID                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_MakeEventActorBase_C::SetOwnerActorToAjitoMember(const class FString& CharaID, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MakeEventActorBase_C", "SetOwnerActorToAjitoMember");

	Params::BP_MakeEventActorBase_C_SetOwnerActorToAjitoMember Parms{};

	Parms.CharaID = std::move(CharaID);

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_MakeEventActorBase.BP_MakeEventActorBase_C.IsSeamlessStart
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_MakeEventActorBase_C::IsSeamlessStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MakeEventActorBase_C", "IsSeamlessStart");

	Params::BP_MakeEventActorBase_C_IsSeamlessStart Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_MakeEventActorBase.BP_MakeEventActorBase_C.SetupEventPrestreamTextures
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    UsePrestream                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_MakeEventActorBase_C::SetupEventPrestreamTextures(bool* UsePrestream)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MakeEventActorBase_C", "SetupEventPrestreamTextures");

	Params::BP_MakeEventActorBase_C_SetupEventPrestreamTextures Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (UsePrestream != nullptr)
		*UsePrestream = Parms.UsePrestream;
}


// Function BP_MakeEventActorBase.BP_MakeEventActorBase_C.OnStartGameAjitoStayEventBP
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             ForCharaID                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             DTRowName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MakeEventActorBase_C::OnStartGameAjitoStayEventBP(class FName ForCharaID, class FName DTRowName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MakeEventActorBase_C", "OnStartGameAjitoStayEventBP");

	Params::BP_MakeEventActorBase_C_OnStartGameAjitoStayEventBP Parms{};

	Parms.ForCharaID = ForCharaID;
	Parms.DTRowName = DTRowName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MakeEventActorBase.BP_MakeEventActorBase_C.IsAjitoTVEvent
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_MakeEventActorBase_C::IsAjitoTVEvent(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MakeEventActorBase_C", "IsAjitoTVEvent");

	Params::BP_MakeEventActorBase_C_IsAjitoTVEvent Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}

}

