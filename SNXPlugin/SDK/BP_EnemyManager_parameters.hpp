#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_EnemyManager

#include "Basic.hpp"

#include "EPlayerAIBattleThinkType_structs.hpp"
#include "BattlePrototype_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "CopyCharacterParameterStruct_structs.hpp"
#include "Engine_structs.hpp"
#include "FPlayerAIBattleThinkData_structs.hpp"
#include "Enum_EnemySound_structs.hpp"


namespace SDK::Params
{

// Function BP_EnemyManager.BP_EnemyManager_C.OnDeadDispatcher__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct BP_EnemyManager_C_OnDeadDispatcher__DelegateSignature final
{
public:
	int32                                         GroupID;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SubGroupID;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FenceBattleRate;                                   // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   UniqueId;                                          // 0x000C(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsOnceOnly;                                        // 0x0014(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyManager_C_OnDeadDispatcher__DelegateSignature) == 0x000004, "Wrong alignment on BP_EnemyManager_C_OnDeadDispatcher__DelegateSignature");
static_assert(sizeof(BP_EnemyManager_C_OnDeadDispatcher__DelegateSignature) == 0x000018, "Wrong size on BP_EnemyManager_C_OnDeadDispatcher__DelegateSignature");
static_assert(offsetof(BP_EnemyManager_C_OnDeadDispatcher__DelegateSignature, GroupID) == 0x000000, "Member 'BP_EnemyManager_C_OnDeadDispatcher__DelegateSignature::GroupID' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_OnDeadDispatcher__DelegateSignature, SubGroupID) == 0x000004, "Member 'BP_EnemyManager_C_OnDeadDispatcher__DelegateSignature::SubGroupID' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_OnDeadDispatcher__DelegateSignature, FenceBattleRate) == 0x000008, "Member 'BP_EnemyManager_C_OnDeadDispatcher__DelegateSignature::FenceBattleRate' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_OnDeadDispatcher__DelegateSignature, UniqueId) == 0x00000C, "Member 'BP_EnemyManager_C_OnDeadDispatcher__DelegateSignature::UniqueId' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_OnDeadDispatcher__DelegateSignature, IsOnceOnly) == 0x000014, "Member 'BP_EnemyManager_C_OnDeadDispatcher__DelegateSignature::IsOnceOnly' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.GroupBattleStartDispatcher__DelegateSignature
// 0x0014 (0x0014 - 0x0000)
struct BP_EnemyManager_C_GroupBattleStartDispatcher__DelegateSignature final
{
public:
	int32                                         GroupID;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FenceBattleRate;                                   // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   UniqueId;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsOnceOnly;                                        // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyManager_C_GroupBattleStartDispatcher__DelegateSignature) == 0x000004, "Wrong alignment on BP_EnemyManager_C_GroupBattleStartDispatcher__DelegateSignature");
static_assert(sizeof(BP_EnemyManager_C_GroupBattleStartDispatcher__DelegateSignature) == 0x000014, "Wrong size on BP_EnemyManager_C_GroupBattleStartDispatcher__DelegateSignature");
static_assert(offsetof(BP_EnemyManager_C_GroupBattleStartDispatcher__DelegateSignature, GroupID) == 0x000000, "Member 'BP_EnemyManager_C_GroupBattleStartDispatcher__DelegateSignature::GroupID' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_GroupBattleStartDispatcher__DelegateSignature, FenceBattleRate) == 0x000004, "Member 'BP_EnemyManager_C_GroupBattleStartDispatcher__DelegateSignature::FenceBattleRate' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_GroupBattleStartDispatcher__DelegateSignature, UniqueId) == 0x000008, "Member 'BP_EnemyManager_C_GroupBattleStartDispatcher__DelegateSignature::UniqueId' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_GroupBattleStartDispatcher__DelegateSignature, IsOnceOnly) == 0x000010, "Member 'BP_EnemyManager_C_GroupBattleStartDispatcher__DelegateSignature::IsOnceOnly' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.DebugUniqueEventDispatcher__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct BP_EnemyManager_C_DebugUniqueEventDispatcher__DelegateSignature final
{
public:
	int32                                         EventNo;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EnemyManager_C_DebugUniqueEventDispatcher__DelegateSignature) == 0x000004, "Wrong alignment on BP_EnemyManager_C_DebugUniqueEventDispatcher__DelegateSignature");
static_assert(sizeof(BP_EnemyManager_C_DebugUniqueEventDispatcher__DelegateSignature) == 0x000004, "Wrong size on BP_EnemyManager_C_DebugUniqueEventDispatcher__DelegateSignature");
static_assert(offsetof(BP_EnemyManager_C_DebugUniqueEventDispatcher__DelegateSignature, EventNo) == 0x000000, "Member 'BP_EnemyManager_C_DebugUniqueEventDispatcher__DelegateSignature::EventNo' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.ExecuteUbergraph_BP_EnemyManager
// 0x0128 (0x0128 - 0x0000)
struct BP_EnemyManager_C_ExecuteUbergraph_BP_EnemyManager final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_602B[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_1;                      // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_602C[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool IsCameraCutPhotoMode)>    K2Node_CreateDelegate_OutputDelegate;              // 0x002C(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_2;                      // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_602D[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EChangeAreaStatus Status, bool IsChangeLocation)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0054(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0064(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          K2Node_Event_bBeginActor_1;                        // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bBeginActor;                          // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_602E[0x2];                                     // 0x0076(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           K2Node_Event_PlayerEndMontage;                     // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BrainCrash_C>     K2Node_DynamicCast_AsBPI_Brain_Crash;              // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_602F[0x2];                                     // 0x0092(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BrainCrash_C>     K2Node_DynamicCast_AsBPI_Brain_Crash_1;            // 0x00A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6030[0x1];                                     // 0x00B3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BrainCrash_C>     K2Node_DynamicCast_AsBPI_Brain_Crash_2;            // 0x00B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6031[0x7];                                     // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BrainCrash_C>     K2Node_DynamicCast_AsBPI_Brain_Crash_3;            // 0x00D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6032[0x1];                                     // 0x00E3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_RigitBodyEmptyUpdateSeconds;          // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InitBadStateMaterialParam_Dummy;          // 0x00F5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_InitDropItem_Dummy;                       // 0x00F6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6033[0x1];                                     // 0x00F7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUDMainGame_C*                         CallFunc_GetHUDMainGame_HUDMainGame;               // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHUDMainGame_C*                         CallFunc_GetHUDMainGame_HUDMainGame_1;             // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OnReturnFromPartyMenu_Dummy;              // 0x010A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6034[0x1];                                     // 0x010B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6035[0x3];                                     // 0x0111(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_SceneManager_C*                     CallFunc_GetSceneManager_SceneManager;             // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EChangeAreaStatus                             K2Node_CustomEvent_Status;                         // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsChangeLocation;               // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x0122(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_isCameraCutPhotoMode;           // 0x0123(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OnReturnFromPartyMenu_Dummy_1;            // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyManager_C_ExecuteUbergraph_BP_EnemyManager) == 0x000008, "Wrong alignment on BP_EnemyManager_C_ExecuteUbergraph_BP_EnemyManager");
static_assert(sizeof(BP_EnemyManager_C_ExecuteUbergraph_BP_EnemyManager) == 0x000128, "Wrong size on BP_EnemyManager_C_ExecuteUbergraph_BP_EnemyManager");
static_assert(offsetof(BP_EnemyManager_C_ExecuteUbergraph_BP_EnemyManager, EntryPoint) == 0x000000, "Member 'BP_EnemyManager_C_ExecuteUbergraph_BP_EnemyManager::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_ExecuteUbergraph_BP_EnemyManager, Temp_int_Loop_Num_Variable) == 0x000004, "Member 'BP_EnemyManager_C_ExecuteUbergraph_BP_EnemyManager::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_ExecuteUbergraph_BP_EnemyManager, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_EnemyManager_C_ExecuteUbergraph_BP_EnemyManager::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_ExecuteUbergraph_BP_EnemyManager, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BP_EnemyManager_C_ExecuteUbergraph_BP_EnemyManager::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_ExecuteUbergraph_BP_EnemyManager, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_EnemyManager_C_ExecuteUbergraph_BP_EnemyManager::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_ExecuteUbergraph_BP_EnemyManager, Temp_int_Array_Index_Variable_1) == 0x000014, "Member 'BP_EnemyManager_C_ExecuteUbergraph_BP_EnemyManager::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_ExecuteUbergraph_BP_EnemyManager, Temp_int_Loop_Counter_Variable_1) == 0x000018, "Member 'BP_EnemyManager_C_ExecuteUbergraph_BP_EnemyManager::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_ExecuteUbergraph_BP_EnemyManager, CallFunc_Less_IntInt_ReturnValue) == 0x00001C, "Member 'BP_EnemyManager_C_ExecuteUbergraph_BP_EnemyManager::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_ExecuteUbergraph_BP_EnemyManager, CallFunc_Add_IntInt_ReturnValue_1) == 0x000020, "Member 'BP_EnemyManager_C_ExecuteUbergraph_BP_EnemyManager::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_ExecuteUbergraph_BP_EnemyManager, Temp_int_Loop_Num_Variable_1) == 0x000024, "Member 'BP_EnemyManager_C_ExecuteUbergraph_BP_EnemyManager::Temp_int_Loop_Num_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_ExecuteUbergraph_BP_EnemyManager, CallFunc_Less_IntInt_ReturnValue_1) == 0x000028, "Member 'BP_EnemyManager_C_ExecuteUbergraph_BP_EnemyManager::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_ExecuteUbergraph_BP_EnemyManager, K2Node_CreateDelegate_OutputDelegate) == 0x00002C, "Member 'BP_EnemyManager_C_ExecuteUbergraph_BP_EnemyManager::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_ExecuteUbergraph_BP_EnemyManager, Temp_int_Array_Index_Variable_2) == 0x00003C, "Member 'BP_EnemyManager_C_ExecuteUbergraph_BP_EnemyManager::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_ExecuteUbergraph_BP_EnemyManager, Temp_int_Loop_Counter_Variable_2) == 0x000040, "Member 'BP_EnemyManager_C_ExecuteUbergraph_BP_EnemyManager::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_ExecuteUbergraph_BP_EnemyManager, CallFunc_Add_IntInt_ReturnValue_2) == 0x000044, "Member 'BP_EnemyManager_C_ExecuteUbergraph_BP_EnemyManager::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_ExecuteUbergraph_BP_EnemyManager, Temp_int_Array_Index_Variable_3) == 0x000048, "Member 'BP_EnemyManager_C_ExecuteUbergraph_BP_EnemyManager::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_ExecuteUbergraph_BP_EnemyManager, Temp_int_Loop_Num_Variable_2) == 0x00004C, "Member 'BP_EnemyManager_C_ExecuteUbergraph_BP_EnemyManager::Temp_int_Loop_Num_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_ExecuteUbergraph_BP_EnemyManager, CallFunc_Less_IntInt_ReturnValue_2) == 0x000050, "Member 'BP_EnemyManager_C_ExecuteUbergraph_BP_EnemyManager::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_ExecuteUbergraph_BP_EnemyManager, K2Node_CreateDelegate_OutputDelegate_1) == 0x000054, "Member 'BP_EnemyManager_C_ExecuteUbergraph_BP_EnemyManager::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_ExecuteUbergraph_BP_EnemyManager, K2Node_CreateDelegate_OutputDelegate_2) == 0x000064, "Member 'BP_EnemyManager_C_ExecuteUbergraph_BP_EnemyManager::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_ExecuteUbergraph_BP_EnemyManager, K2Node_Event_bBeginActor_1) == 0x000074, "Member 'BP_EnemyManager_C_ExecuteUbergraph_BP_EnemyManager::K2Node_Event_bBeginActor_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_ExecuteUbergraph_BP_EnemyManager, K2Node_Event_bBeginActor) == 0x000075, "Member 'BP_EnemyManager_C_ExecuteUbergraph_BP_EnemyManager::K2Node_Event_bBeginActor' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_ExecuteUbergraph_BP_EnemyManager, K2Node_Event_PlayerEndMontage) == 0x000078, "Member 'BP_EnemyManager_C_ExecuteUbergraph_BP_EnemyManager::K2Node_Event_PlayerEndMontage' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_ExecuteUbergraph_BP_EnemyManager, K2Node_DynamicCast_AsBPI_Brain_Crash) == 0x000080, "Member 'BP_EnemyManager_C_ExecuteUbergraph_BP_EnemyManager::K2Node_DynamicCast_AsBPI_Brain_Crash' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_ExecuteUbergraph_BP_EnemyManager, K2Node_DynamicCast_bSuccess) == 0x000090, "Member 'BP_EnemyManager_C_ExecuteUbergraph_BP_EnemyManager::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_ExecuteUbergraph_BP_EnemyManager, CallFunc_IsValid_ReturnValue) == 0x000091, "Member 'BP_EnemyManager_C_ExecuteUbergraph_BP_EnemyManager::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_ExecuteUbergraph_BP_EnemyManager, CallFunc_Array_Length_ReturnValue) == 0x000094, "Member 'BP_EnemyManager_C_ExecuteUbergraph_BP_EnemyManager::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_ExecuteUbergraph_BP_EnemyManager, CallFunc_Array_AddUnique_ReturnValue) == 0x000098, "Member 'BP_EnemyManager_C_ExecuteUbergraph_BP_EnemyManager::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_ExecuteUbergraph_BP_EnemyManager, CallFunc_Array_Length_ReturnValue_1) == 0x00009C, "Member 'BP_EnemyManager_C_ExecuteUbergraph_BP_EnemyManager::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_ExecuteUbergraph_BP_EnemyManager, K2Node_DynamicCast_AsBPI_Brain_Crash_1) == 0x0000A0, "Member 'BP_EnemyManager_C_ExecuteUbergraph_BP_EnemyManager::K2Node_DynamicCast_AsBPI_Brain_Crash_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_ExecuteUbergraph_BP_EnemyManager, K2Node_DynamicCast_bSuccess_1) == 0x0000B0, "Member 'BP_EnemyManager_C_ExecuteUbergraph_BP_EnemyManager::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_ExecuteUbergraph_BP_EnemyManager, CallFunc_Less_IntInt_ReturnValue_3) == 0x0000B1, "Member 'BP_EnemyManager_C_ExecuteUbergraph_BP_EnemyManager::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_ExecuteUbergraph_BP_EnemyManager, CallFunc_IsValid_ReturnValue_1) == 0x0000B2, "Member 'BP_EnemyManager_C_ExecuteUbergraph_BP_EnemyManager::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_ExecuteUbergraph_BP_EnemyManager, CallFunc_Array_Length_ReturnValue_2) == 0x0000B4, "Member 'BP_EnemyManager_C_ExecuteUbergraph_BP_EnemyManager::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_ExecuteUbergraph_BP_EnemyManager, K2Node_DynamicCast_AsBPI_Brain_Crash_2) == 0x0000B8, "Member 'BP_EnemyManager_C_ExecuteUbergraph_BP_EnemyManager::K2Node_DynamicCast_AsBPI_Brain_Crash_2' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_ExecuteUbergraph_BP_EnemyManager, K2Node_DynamicCast_bSuccess_2) == 0x0000C8, "Member 'BP_EnemyManager_C_ExecuteUbergraph_BP_EnemyManager::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_ExecuteUbergraph_BP_EnemyManager, K2Node_DynamicCast_AsBPI_Brain_Crash_3) == 0x0000D0, "Member 'BP_EnemyManager_C_ExecuteUbergraph_BP_EnemyManager::K2Node_DynamicCast_AsBPI_Brain_Crash_3' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_ExecuteUbergraph_BP_EnemyManager, K2Node_DynamicCast_bSuccess_3) == 0x0000E0, "Member 'BP_EnemyManager_C_ExecuteUbergraph_BP_EnemyManager::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_ExecuteUbergraph_BP_EnemyManager, CallFunc_IsValid_ReturnValue_2) == 0x0000E1, "Member 'BP_EnemyManager_C_ExecuteUbergraph_BP_EnemyManager::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_ExecuteUbergraph_BP_EnemyManager, CallFunc_IsValid_ReturnValue_3) == 0x0000E2, "Member 'BP_EnemyManager_C_ExecuteUbergraph_BP_EnemyManager::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_ExecuteUbergraph_BP_EnemyManager, CallFunc_Array_Length_ReturnValue_3) == 0x0000E4, "Member 'BP_EnemyManager_C_ExecuteUbergraph_BP_EnemyManager::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_ExecuteUbergraph_BP_EnemyManager, CallFunc_Array_Length_ReturnValue_4) == 0x0000E8, "Member 'BP_EnemyManager_C_ExecuteUbergraph_BP_EnemyManager::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_ExecuteUbergraph_BP_EnemyManager, K2Node_Event_DeltaSeconds) == 0x0000EC, "Member 'BP_EnemyManager_C_ExecuteUbergraph_BP_EnemyManager::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_ExecuteUbergraph_BP_EnemyManager, K2Node_Event_RigitBodyEmptyUpdateSeconds) == 0x0000F0, "Member 'BP_EnemyManager_C_ExecuteUbergraph_BP_EnemyManager::K2Node_Event_RigitBodyEmptyUpdateSeconds' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_ExecuteUbergraph_BP_EnemyManager, K2Node_Event_EndPlayReason) == 0x0000F4, "Member 'BP_EnemyManager_C_ExecuteUbergraph_BP_EnemyManager::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_ExecuteUbergraph_BP_EnemyManager, CallFunc_InitBadStateMaterialParam_Dummy) == 0x0000F5, "Member 'BP_EnemyManager_C_ExecuteUbergraph_BP_EnemyManager::CallFunc_InitBadStateMaterialParam_Dummy' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_ExecuteUbergraph_BP_EnemyManager, CallFunc_InitDropItem_Dummy) == 0x0000F6, "Member 'BP_EnemyManager_C_ExecuteUbergraph_BP_EnemyManager::CallFunc_InitDropItem_Dummy' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_ExecuteUbergraph_BP_EnemyManager, CallFunc_GetHUDMainGame_HUDMainGame) == 0x0000F8, "Member 'BP_EnemyManager_C_ExecuteUbergraph_BP_EnemyManager::CallFunc_GetHUDMainGame_HUDMainGame' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_ExecuteUbergraph_BP_EnemyManager, CallFunc_GetHUDMainGame_HUDMainGame_1) == 0x000100, "Member 'BP_EnemyManager_C_ExecuteUbergraph_BP_EnemyManager::CallFunc_GetHUDMainGame_HUDMainGame_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_ExecuteUbergraph_BP_EnemyManager, CallFunc_IsValid_ReturnValue_4) == 0x000108, "Member 'BP_EnemyManager_C_ExecuteUbergraph_BP_EnemyManager::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_ExecuteUbergraph_BP_EnemyManager, CallFunc_IsValid_ReturnValue_5) == 0x000109, "Member 'BP_EnemyManager_C_ExecuteUbergraph_BP_EnemyManager::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_ExecuteUbergraph_BP_EnemyManager, CallFunc_OnReturnFromPartyMenu_Dummy) == 0x00010A, "Member 'BP_EnemyManager_C_ExecuteUbergraph_BP_EnemyManager::CallFunc_OnReturnFromPartyMenu_Dummy' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_ExecuteUbergraph_BP_EnemyManager, Temp_int_Loop_Counter_Variable_3) == 0x00010C, "Member 'BP_EnemyManager_C_ExecuteUbergraph_BP_EnemyManager::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_ExecuteUbergraph_BP_EnemyManager, CallFunc_Less_IntInt_ReturnValue_4) == 0x000110, "Member 'BP_EnemyManager_C_ExecuteUbergraph_BP_EnemyManager::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_ExecuteUbergraph_BP_EnemyManager, CallFunc_Add_IntInt_ReturnValue_3) == 0x000114, "Member 'BP_EnemyManager_C_ExecuteUbergraph_BP_EnemyManager::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_ExecuteUbergraph_BP_EnemyManager, CallFunc_GetSceneManager_SceneManager) == 0x000118, "Member 'BP_EnemyManager_C_ExecuteUbergraph_BP_EnemyManager::CallFunc_GetSceneManager_SceneManager' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_ExecuteUbergraph_BP_EnemyManager, K2Node_CustomEvent_Status) == 0x000120, "Member 'BP_EnemyManager_C_ExecuteUbergraph_BP_EnemyManager::K2Node_CustomEvent_Status' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_ExecuteUbergraph_BP_EnemyManager, K2Node_CustomEvent_IsChangeLocation) == 0x000121, "Member 'BP_EnemyManager_C_ExecuteUbergraph_BP_EnemyManager::K2Node_CustomEvent_IsChangeLocation' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_ExecuteUbergraph_BP_EnemyManager, CallFunc_IsValid_ReturnValue_6) == 0x000122, "Member 'BP_EnemyManager_C_ExecuteUbergraph_BP_EnemyManager::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_ExecuteUbergraph_BP_EnemyManager, K2Node_CustomEvent_isCameraCutPhotoMode) == 0x000123, "Member 'BP_EnemyManager_C_ExecuteUbergraph_BP_EnemyManager::K2Node_CustomEvent_isCameraCutPhotoMode' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_ExecuteUbergraph_BP_EnemyManager, CallFunc_OnReturnFromPartyMenu_Dummy_1) == 0x000124, "Member 'BP_EnemyManager_C_ExecuteUbergraph_BP_EnemyManager::CallFunc_OnReturnFromPartyMenu_Dummy_1' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.EventReturnFromPhotoMode
// 0x0001 (0x0001 - 0x0000)
struct BP_EnemyManager_C_EventReturnFromPhotoMode final
{
public:
	bool                                          IsCameraCutPhotoMode;                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyManager_C_EventReturnFromPhotoMode) == 0x000001, "Wrong alignment on BP_EnemyManager_C_EventReturnFromPhotoMode");
static_assert(sizeof(BP_EnemyManager_C_EventReturnFromPhotoMode) == 0x000001, "Wrong size on BP_EnemyManager_C_EventReturnFromPhotoMode");
static_assert(offsetof(BP_EnemyManager_C_EventReturnFromPhotoMode, IsCameraCutPhotoMode) == 0x000000, "Member 'BP_EnemyManager_C_EventReturnFromPhotoMode::IsCameraCutPhotoMode' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.OnChangeAreaLoadStatus
// 0x0002 (0x0002 - 0x0000)
struct BP_EnemyManager_C_OnChangeAreaLoadStatus final
{
public:
	EChangeAreaStatus                             Status;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsChangeLocation;                                  // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyManager_C_OnChangeAreaLoadStatus) == 0x000001, "Wrong alignment on BP_EnemyManager_C_OnChangeAreaLoadStatus");
static_assert(sizeof(BP_EnemyManager_C_OnChangeAreaLoadStatus) == 0x000002, "Wrong size on BP_EnemyManager_C_OnChangeAreaLoadStatus");
static_assert(offsetof(BP_EnemyManager_C_OnChangeAreaLoadStatus, Status) == 0x000000, "Member 'BP_EnemyManager_C_OnChangeAreaLoadStatus::Status' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_OnChangeAreaLoadStatus, IsChangeLocation) == 0x000001, "Member 'BP_EnemyManager_C_OnChangeAreaLoadStatus::IsChangeLocation' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_EnemyManager_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EnemyManager_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BP_EnemyManager_C_ReceiveEndPlay");
static_assert(sizeof(BP_EnemyManager_C_ReceiveEndPlay) == 0x000001, "Wrong size on BP_EnemyManager_C_ReceiveEndPlay");
static_assert(offsetof(BP_EnemyManager_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BP_EnemyManager_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.EventManagerRigitBodyEmptyUpdateSeconds
// 0x0004 (0x0004 - 0x0000)
struct BP_EnemyManager_C_EventManagerRigitBodyEmptyUpdateSeconds final
{
public:
	float                                         RigitBodyEmptyUpdateSeconds;                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EnemyManager_C_EventManagerRigitBodyEmptyUpdateSeconds) == 0x000004, "Wrong alignment on BP_EnemyManager_C_EventManagerRigitBodyEmptyUpdateSeconds");
static_assert(sizeof(BP_EnemyManager_C_EventManagerRigitBodyEmptyUpdateSeconds) == 0x000004, "Wrong size on BP_EnemyManager_C_EventManagerRigitBodyEmptyUpdateSeconds");
static_assert(offsetof(BP_EnemyManager_C_EventManagerRigitBodyEmptyUpdateSeconds, RigitBodyEmptyUpdateSeconds) == 0x000000, "Member 'BP_EnemyManager_C_EventManagerRigitBodyEmptyUpdateSeconds::RigitBodyEmptyUpdateSeconds' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_EnemyManager_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EnemyManager_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_EnemyManager_C_ReceiveTick");
static_assert(sizeof(BP_EnemyManager_C_ReceiveTick) == 0x000004, "Wrong size on BP_EnemyManager_C_ReceiveTick");
static_assert(offsetof(BP_EnemyManager_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_EnemyManager_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.OnBrainCrashEnd
// 0x0010 (0x0010 - 0x0000)
struct BP_EnemyManager_C_OnBrainCrashEnd final
{
public:
	bool                                          bBeginActor;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6036[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           PlayerEndMontage;                                  // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EnemyManager_C_OnBrainCrashEnd) == 0x000008, "Wrong alignment on BP_EnemyManager_C_OnBrainCrashEnd");
static_assert(sizeof(BP_EnemyManager_C_OnBrainCrashEnd) == 0x000010, "Wrong size on BP_EnemyManager_C_OnBrainCrashEnd");
static_assert(offsetof(BP_EnemyManager_C_OnBrainCrashEnd, bBeginActor) == 0x000000, "Member 'BP_EnemyManager_C_OnBrainCrashEnd::bBeginActor' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_OnBrainCrashEnd, PlayerEndMontage) == 0x000008, "Member 'BP_EnemyManager_C_OnBrainCrashEnd::PlayerEndMontage' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.OnBrainCrashStart
// 0x0001 (0x0001 - 0x0000)
struct BP_EnemyManager_C_OnBrainCrashStart final
{
public:
	bool                                          bBeginActor;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyManager_C_OnBrainCrashStart) == 0x000001, "Wrong alignment on BP_EnemyManager_C_OnBrainCrashStart");
static_assert(sizeof(BP_EnemyManager_C_OnBrainCrashStart) == 0x000001, "Wrong size on BP_EnemyManager_C_OnBrainCrashStart");
static_assert(offsetof(BP_EnemyManager_C_OnBrainCrashStart, bBeginActor) == 0x000000, "Member 'BP_EnemyManager_C_OnBrainCrashStart::bBeginActor' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.UpdateTick
// 0x00C8 (0x00C8 - 0x0000)
struct BP_EnemyManager_C_UpdateTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6037[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ARSCharacterBase*>               LEnemyList;                                        // 0x0008(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	class AActor*                                 LPlayerActor;                                      // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CheckEnemyListNum;                                 // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SkipUpdateTickEnable;                              // 0x0024(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6038[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 EnemyActor;                                        // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         EnemyListNum;                                      // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6039[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABattleSimulatorManager*                CallFunc_GetBattleSimulatorManager_BattleSimulatorManager; // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMissionActive_ReturnValue;              // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_603A[0x6];                                     // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ARSCharacterBase*>               CallFunc_GetEnemyListRef_ReturnValue;              // 0x0048(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_603B[0x2];                                     // 0x005A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_603C[0x1];                                     // 0x0063(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_603D[0x3];                                     // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_603E[0x3];                                     // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_603F[0x4];                                     // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_PreUpdateEnemyTickEnable_ReturnValue;     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6040[0x7];                                     // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattleCharacter_C*                   K2Node_DynamicCast_AsRSBattle_Character;           // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanSetTickDistance_result;                // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanSetTick_result;                        // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6041[0x5];                                     // 0x009B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattleEnemy_C*                       K2Node_DynamicCast_AsRSBattle_Enemy;               // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DebugDrawInfomation_Dummy;                // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6042[0x2];                                     // 0x00AA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSCharacterBase*                       CallFunc_Array_Get_Item;                           // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_2;        // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyManager_C_UpdateTick) == 0x000008, "Wrong alignment on BP_EnemyManager_C_UpdateTick");
static_assert(sizeof(BP_EnemyManager_C_UpdateTick) == 0x0000C8, "Wrong size on BP_EnemyManager_C_UpdateTick");
static_assert(offsetof(BP_EnemyManager_C_UpdateTick, DeltaSeconds) == 0x000000, "Member 'BP_EnemyManager_C_UpdateTick::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_UpdateTick, LEnemyList) == 0x000008, "Member 'BP_EnemyManager_C_UpdateTick::LEnemyList' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_UpdateTick, LPlayerActor) == 0x000018, "Member 'BP_EnemyManager_C_UpdateTick::LPlayerActor' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_UpdateTick, CheckEnemyListNum) == 0x000020, "Member 'BP_EnemyManager_C_UpdateTick::CheckEnemyListNum' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_UpdateTick, SkipUpdateTickEnable) == 0x000024, "Member 'BP_EnemyManager_C_UpdateTick::SkipUpdateTickEnable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_UpdateTick, EnemyActor) == 0x000028, "Member 'BP_EnemyManager_C_UpdateTick::EnemyActor' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_UpdateTick, EnemyListNum) == 0x000030, "Member 'BP_EnemyManager_C_UpdateTick::EnemyListNum' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_UpdateTick, CallFunc_GetBattleSimulatorManager_BattleSimulatorManager) == 0x000038, "Member 'BP_EnemyManager_C_UpdateTick::CallFunc_GetBattleSimulatorManager_BattleSimulatorManager' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_UpdateTick, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'BP_EnemyManager_C_UpdateTick::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_UpdateTick, CallFunc_IsMissionActive_ReturnValue) == 0x000041, "Member 'BP_EnemyManager_C_UpdateTick::CallFunc_IsMissionActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_UpdateTick, CallFunc_GetEnemyListRef_ReturnValue) == 0x000048, "Member 'BP_EnemyManager_C_UpdateTick::CallFunc_GetEnemyListRef_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_UpdateTick, CallFunc_IsValid_ReturnValue_1) == 0x000058, "Member 'BP_EnemyManager_C_UpdateTick::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_UpdateTick, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000059, "Member 'BP_EnemyManager_C_UpdateTick::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_UpdateTick, CallFunc_Add_IntInt_ReturnValue) == 0x00005C, "Member 'BP_EnemyManager_C_UpdateTick::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_UpdateTick, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x000060, "Member 'BP_EnemyManager_C_UpdateTick::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_UpdateTick, CallFunc_IsValid_ReturnValue_2) == 0x000061, "Member 'BP_EnemyManager_C_UpdateTick::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_UpdateTick, CallFunc_Greater_IntInt_ReturnValue) == 0x000062, "Member 'BP_EnemyManager_C_UpdateTick::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_UpdateTick, Temp_int_Variable) == 0x000064, "Member 'BP_EnemyManager_C_UpdateTick::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_UpdateTick, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000068, "Member 'BP_EnemyManager_C_UpdateTick::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_UpdateTick, CallFunc_Array_Length_ReturnValue) == 0x00006C, "Member 'BP_EnemyManager_C_UpdateTick::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_UpdateTick, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000070, "Member 'BP_EnemyManager_C_UpdateTick::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_UpdateTick, CallFunc_Divide_IntInt_ReturnValue) == 0x000074, "Member 'BP_EnemyManager_C_UpdateTick::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_UpdateTick, CallFunc_Subtract_IntInt_ReturnValue) == 0x000078, "Member 'BP_EnemyManager_C_UpdateTick::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_UpdateTick, CallFunc_GetPlayerPawn_ReturnValue) == 0x000080, "Member 'BP_EnemyManager_C_UpdateTick::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_UpdateTick, CallFunc_PreUpdateEnemyTickEnable_ReturnValue) == 0x000088, "Member 'BP_EnemyManager_C_UpdateTick::CallFunc_PreUpdateEnemyTickEnable_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_UpdateTick, K2Node_DynamicCast_AsRSBattle_Character) == 0x000090, "Member 'BP_EnemyManager_C_UpdateTick::K2Node_DynamicCast_AsRSBattle_Character' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_UpdateTick, K2Node_DynamicCast_bSuccess) == 0x000098, "Member 'BP_EnemyManager_C_UpdateTick::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_UpdateTick, CallFunc_CanSetTickDistance_result) == 0x000099, "Member 'BP_EnemyManager_C_UpdateTick::CallFunc_CanSetTickDistance_result' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_UpdateTick, CallFunc_CanSetTick_result) == 0x00009A, "Member 'BP_EnemyManager_C_UpdateTick::CallFunc_CanSetTick_result' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_UpdateTick, K2Node_DynamicCast_AsRSBattle_Enemy) == 0x0000A0, "Member 'BP_EnemyManager_C_UpdateTick::K2Node_DynamicCast_AsRSBattle_Enemy' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_UpdateTick, K2Node_DynamicCast_bSuccess_1) == 0x0000A8, "Member 'BP_EnemyManager_C_UpdateTick::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_UpdateTick, CallFunc_DebugDrawInfomation_Dummy) == 0x0000A9, "Member 'BP_EnemyManager_C_UpdateTick::CallFunc_DebugDrawInfomation_Dummy' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_UpdateTick, Temp_int_Variable_1) == 0x0000AC, "Member 'BP_EnemyManager_C_UpdateTick::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_UpdateTick, CallFunc_Array_Get_Item) == 0x0000B0, "Member 'BP_EnemyManager_C_UpdateTick::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_UpdateTick, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000B8, "Member 'BP_EnemyManager_C_UpdateTick::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_UpdateTick, CallFunc_Array_Length_ReturnValue_1) == 0x0000BC, "Member 'BP_EnemyManager_C_UpdateTick::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_UpdateTick, CallFunc_GreaterEqual_IntInt_ReturnValue_2) == 0x0000C0, "Member 'BP_EnemyManager_C_UpdateTick::CallFunc_GreaterEqual_IntInt_ReturnValue_2' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.SetTickEnable
// 0x02F0 (0x02F0 - 0x0000)
struct BP_EnemyManager_C_SetTickEnable final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          L_ForceEnable;                                     // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6043[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                L_PlayerLocation;                                  // 0x000C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_EnemyLocation;                                   // 0x0018(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_HeightDistance;                                  // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UActorComponent*>                ComponentList;                                     // 0x0028(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          IsTickEnable;                                      // 0x0038(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6044[0x2];                                     // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6045[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_GetSkeletalMeshFromActor_ReturnValue;     // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_EnemyInterface_C> K2Node_DynamicCast_AsBPI_Enemy_Interface;          // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6046[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattleEnemy_C*                       K2Node_DynamicCast_AsRSBattle_Enemy;               // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ReturnStart_Return;                       // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6047[0x6];                                     // 0x0072(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_EnemyInterface_C> K2Node_DynamicCast_AsBPI_Enemy_Interface_1;        // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SpawnStart_Return;                        // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6048[0x6];                                     // 0x008A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UActorComponent*>                CallFunc_K2_GetComponentsByClass_ReturnValue;      // 0x0090(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6049[0x3];                                     // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattleEnemy_C*                       K2Node_DynamicCast_AsRSBattle_Enemy_1;             // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_604A[0x6];                                     // 0x00B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBattleCharacterInterface> K2Node_DynamicCast_AsBattle_Character_Interface;   // 0x00B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetActorAllTickEnabled_ReturnValue;       // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_604B[0x6];                                     // 0x00CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_EnemyInterface_C> K2Node_DynamicCast_AsBPI_Enemy_Interface_2;        // 0x00D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnemySpawnNow_SpawnNow;                 // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_604C[0x6];                                     // 0x00E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattleEnemy_C*                       K2Node_DynamicCast_AsRSBattle_Enemy_2;             // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_604D[0x7];                                     // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_EnemyInterface_C> CallFunc_IsFlyEnemyCheck_self_CastInput;           // 0x00F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsFlyEnemyCheck_NewParam;                 // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_604E[0x3];                                     // 0x0109(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_GetCharacterMovementGroundInfoSimple_result; // 0x010C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_GetCharacterMovementGroundInfoSimple_ReturnValue; // 0x0194(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActorTickEnabled_ReturnValue;           // 0x0195(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_604F[0x2];                                     // 0x0196(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6050[0x4];                                     // 0x019C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_GetDebuggingManager_Manager;              // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x01A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x01B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6051[0x3];                                     // 0x01B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_VSizeSquared_ReturnValue;                 // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x01BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6052[0x3];                                     // 0x01BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_GetDebuggingManager_Manager_1;            // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckSeeEnemy_IsSeeEnemy;                 // 0x01C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6053[0x2];                                     // 0x01CA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X;                            // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x01D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x01F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x01FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_2;      // 0x0208(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSizeSquared_ReturnValue_1;               // 0x0214(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6054[0x4];                                     // 0x021C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0228(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0234(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_EnemyInterface_C> K2Node_DynamicCast_AsBPI_Enemy_Interface_3;        // 0x0240(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsBossEnemy_bBoss;                        // 0x0251(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_1;    // 0x0252(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6055[0x5];                                     // 0x0253(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_EnemyInterface_C> K2Node_DynamicCast_AsBPI_Enemy_Interface_4;        // 0x0258(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6056[0x7];                                     // 0x0269(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_EnemyInterface_C> K2Node_DynamicCast_AsBPI_Enemy_Interface_5;        // 0x0270(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_9;                     // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsFlyEnemyCheck_NewParam_1;               // 0x0281(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetHeightCheckFlag_NewParam;              // 0x0282(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6057[0x1];                                     // 0x0283(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0284(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UActorComponent*                        CallFunc_Array_Get_Item;                           // 0x0288(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_1;         // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6058[0x7];                                     // 0x0291(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_EnemyInterface_C> K2Node_DynamicCast_AsBPI_Enemy_Interface_6;        // 0x0298(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_10;                    // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetEnemySpawn_return;                     // 0x02A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActorTickEnabled_ReturnValue_1;         // 0x02AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x02AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6059[0x4];                                     // 0x02AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CharacterParamater_C> K2Node_DynamicCast_AsBPI_Character_Paramater;      // 0x02B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_11;                    // 0x02C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDead_bDead;                             // 0x02C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_605A[0x6];                                     // 0x02C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_EnemyInterface_C> K2Node_DynamicCast_AsBPI_Enemy_Interface_7;        // 0x02C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_12;                    // 0x02D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnemyTickDisableCondition_bDisableCondition; // 0x02D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_605B[0x6];                                     // 0x02DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue_1;              // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x02E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x02EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_2;    // 0x02ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyManager_C_SetTickEnable) == 0x000008, "Wrong alignment on BP_EnemyManager_C_SetTickEnable");
static_assert(sizeof(BP_EnemyManager_C_SetTickEnable) == 0x0002F0, "Wrong size on BP_EnemyManager_C_SetTickEnable");
static_assert(offsetof(BP_EnemyManager_C_SetTickEnable, Actor) == 0x000000, "Member 'BP_EnemyManager_C_SetTickEnable::Actor' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetTickEnable, L_ForceEnable) == 0x000008, "Member 'BP_EnemyManager_C_SetTickEnable::L_ForceEnable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetTickEnable, L_PlayerLocation) == 0x00000C, "Member 'BP_EnemyManager_C_SetTickEnable::L_PlayerLocation' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetTickEnable, L_EnemyLocation) == 0x000018, "Member 'BP_EnemyManager_C_SetTickEnable::L_EnemyLocation' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetTickEnable, L_HeightDistance) == 0x000024, "Member 'BP_EnemyManager_C_SetTickEnable::L_HeightDistance' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetTickEnable, ComponentList) == 0x000028, "Member 'BP_EnemyManager_C_SetTickEnable::ComponentList' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetTickEnable, IsTickEnable) == 0x000038, "Member 'BP_EnemyManager_C_SetTickEnable::IsTickEnable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetTickEnable, CallFunc_IsValid_ReturnValue) == 0x000039, "Member 'BP_EnemyManager_C_SetTickEnable::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetTickEnable, Temp_int_Loop_Counter_Variable) == 0x00003C, "Member 'BP_EnemyManager_C_SetTickEnable::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetTickEnable, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'BP_EnemyManager_C_SetTickEnable::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetTickEnable, CallFunc_GetSkeletalMeshFromActor_ReturnValue) == 0x000048, "Member 'BP_EnemyManager_C_SetTickEnable::CallFunc_GetSkeletalMeshFromActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetTickEnable, K2Node_DynamicCast_AsBPI_Enemy_Interface) == 0x000050, "Member 'BP_EnemyManager_C_SetTickEnable::K2Node_DynamicCast_AsBPI_Enemy_Interface' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetTickEnable, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'BP_EnemyManager_C_SetTickEnable::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetTickEnable, K2Node_DynamicCast_AsRSBattle_Enemy) == 0x000068, "Member 'BP_EnemyManager_C_SetTickEnable::K2Node_DynamicCast_AsRSBattle_Enemy' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetTickEnable, K2Node_DynamicCast_bSuccess_1) == 0x000070, "Member 'BP_EnemyManager_C_SetTickEnable::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetTickEnable, CallFunc_ReturnStart_Return) == 0x000071, "Member 'BP_EnemyManager_C_SetTickEnable::CallFunc_ReturnStart_Return' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetTickEnable, K2Node_DynamicCast_AsBPI_Enemy_Interface_1) == 0x000078, "Member 'BP_EnemyManager_C_SetTickEnable::K2Node_DynamicCast_AsBPI_Enemy_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetTickEnable, K2Node_DynamicCast_bSuccess_2) == 0x000088, "Member 'BP_EnemyManager_C_SetTickEnable::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetTickEnable, CallFunc_SpawnStart_Return) == 0x000089, "Member 'BP_EnemyManager_C_SetTickEnable::CallFunc_SpawnStart_Return' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetTickEnable, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x000090, "Member 'BP_EnemyManager_C_SetTickEnable::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetTickEnable, CallFunc_Array_IsValidIndex_ReturnValue) == 0x0000A0, "Member 'BP_EnemyManager_C_SetTickEnable::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetTickEnable, CallFunc_Array_Length_ReturnValue) == 0x0000A4, "Member 'BP_EnemyManager_C_SetTickEnable::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetTickEnable, K2Node_DynamicCast_AsRSBattle_Enemy_1) == 0x0000A8, "Member 'BP_EnemyManager_C_SetTickEnable::K2Node_DynamicCast_AsRSBattle_Enemy_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetTickEnable, K2Node_DynamicCast_bSuccess_3) == 0x0000B0, "Member 'BP_EnemyManager_C_SetTickEnable::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetTickEnable, CallFunc_Less_IntInt_ReturnValue) == 0x0000B1, "Member 'BP_EnemyManager_C_SetTickEnable::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetTickEnable, K2Node_DynamicCast_AsBattle_Character_Interface) == 0x0000B8, "Member 'BP_EnemyManager_C_SetTickEnable::K2Node_DynamicCast_AsBattle_Character_Interface' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetTickEnable, K2Node_DynamicCast_bSuccess_4) == 0x0000C8, "Member 'BP_EnemyManager_C_SetTickEnable::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetTickEnable, CallFunc_SetActorAllTickEnabled_ReturnValue) == 0x0000C9, "Member 'BP_EnemyManager_C_SetTickEnable::CallFunc_SetActorAllTickEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetTickEnable, K2Node_DynamicCast_AsBPI_Enemy_Interface_2) == 0x0000D0, "Member 'BP_EnemyManager_C_SetTickEnable::K2Node_DynamicCast_AsBPI_Enemy_Interface_2' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetTickEnable, K2Node_DynamicCast_bSuccess_5) == 0x0000E0, "Member 'BP_EnemyManager_C_SetTickEnable::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetTickEnable, CallFunc_IsEnemySpawnNow_SpawnNow) == 0x0000E1, "Member 'BP_EnemyManager_C_SetTickEnable::CallFunc_IsEnemySpawnNow_SpawnNow' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetTickEnable, K2Node_DynamicCast_AsRSBattle_Enemy_2) == 0x0000E8, "Member 'BP_EnemyManager_C_SetTickEnable::K2Node_DynamicCast_AsRSBattle_Enemy_2' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetTickEnable, K2Node_DynamicCast_bSuccess_6) == 0x0000F0, "Member 'BP_EnemyManager_C_SetTickEnable::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetTickEnable, CallFunc_IsFlyEnemyCheck_self_CastInput) == 0x0000F8, "Member 'BP_EnemyManager_C_SetTickEnable::CallFunc_IsFlyEnemyCheck_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetTickEnable, CallFunc_IsFlyEnemyCheck_NewParam) == 0x000108, "Member 'BP_EnemyManager_C_SetTickEnable::CallFunc_IsFlyEnemyCheck_NewParam' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetTickEnable, CallFunc_GetCharacterMovementGroundInfoSimple_result) == 0x00010C, "Member 'BP_EnemyManager_C_SetTickEnable::CallFunc_GetCharacterMovementGroundInfoSimple_result' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetTickEnable, CallFunc_GetCharacterMovementGroundInfoSimple_ReturnValue) == 0x000194, "Member 'BP_EnemyManager_C_SetTickEnable::CallFunc_GetCharacterMovementGroundInfoSimple_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetTickEnable, CallFunc_IsActorTickEnabled_ReturnValue) == 0x000195, "Member 'BP_EnemyManager_C_SetTickEnable::CallFunc_IsActorTickEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetTickEnable, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000198, "Member 'BP_EnemyManager_C_SetTickEnable::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetTickEnable, CallFunc_GetDebuggingManager_Manager) == 0x0001A0, "Member 'BP_EnemyManager_C_SetTickEnable::CallFunc_GetDebuggingManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetTickEnable, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0001A8, "Member 'BP_EnemyManager_C_SetTickEnable::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetTickEnable, CallFunc_IsValid_ReturnValue_1) == 0x0001B4, "Member 'BP_EnemyManager_C_SetTickEnable::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetTickEnable, CallFunc_VSizeSquared_ReturnValue) == 0x0001B8, "Member 'BP_EnemyManager_C_SetTickEnable::CallFunc_VSizeSquared_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetTickEnable, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x0001BC, "Member 'BP_EnemyManager_C_SetTickEnable::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetTickEnable, CallFunc_GetDebuggingManager_Manager_1) == 0x0001C0, "Member 'BP_EnemyManager_C_SetTickEnable::CallFunc_GetDebuggingManager_Manager_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetTickEnable, CallFunc_IsValid_ReturnValue_2) == 0x0001C8, "Member 'BP_EnemyManager_C_SetTickEnable::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetTickEnable, CallFunc_CheckSeeEnemy_IsSeeEnemy) == 0x0001C9, "Member 'BP_EnemyManager_C_SetTickEnable::CallFunc_CheckSeeEnemy_IsSeeEnemy' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetTickEnable, CallFunc_BreakVector_X) == 0x0001CC, "Member 'BP_EnemyManager_C_SetTickEnable::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetTickEnable, CallFunc_BreakVector_Y) == 0x0001D0, "Member 'BP_EnemyManager_C_SetTickEnable::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetTickEnable, CallFunc_BreakVector_Z) == 0x0001D4, "Member 'BP_EnemyManager_C_SetTickEnable::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetTickEnable, CallFunc_MakeVector_ReturnValue) == 0x0001D8, "Member 'BP_EnemyManager_C_SetTickEnable::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetTickEnable, CallFunc_BreakVector_X_1) == 0x0001E4, "Member 'BP_EnemyManager_C_SetTickEnable::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetTickEnable, CallFunc_BreakVector_Y_1) == 0x0001E8, "Member 'BP_EnemyManager_C_SetTickEnable::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetTickEnable, CallFunc_BreakVector_Z_1) == 0x0001EC, "Member 'BP_EnemyManager_C_SetTickEnable::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetTickEnable, CallFunc_MakeVector_ReturnValue_1) == 0x0001F0, "Member 'BP_EnemyManager_C_SetTickEnable::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetTickEnable, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x0001FC, "Member 'BP_EnemyManager_C_SetTickEnable::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetTickEnable, CallFunc_Subtract_VectorVector_ReturnValue_2) == 0x000208, "Member 'BP_EnemyManager_C_SetTickEnable::CallFunc_Subtract_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetTickEnable, CallFunc_VSizeSquared_ReturnValue_1) == 0x000214, "Member 'BP_EnemyManager_C_SetTickEnable::CallFunc_VSizeSquared_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetTickEnable, CallFunc_VSize_ReturnValue) == 0x000218, "Member 'BP_EnemyManager_C_SetTickEnable::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetTickEnable, CallFunc_GetPlayerPawn_ReturnValue) == 0x000220, "Member 'BP_EnemyManager_C_SetTickEnable::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetTickEnable, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000228, "Member 'BP_EnemyManager_C_SetTickEnable::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetTickEnable, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000234, "Member 'BP_EnemyManager_C_SetTickEnable::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetTickEnable, K2Node_DynamicCast_AsBPI_Enemy_Interface_3) == 0x000240, "Member 'BP_EnemyManager_C_SetTickEnable::K2Node_DynamicCast_AsBPI_Enemy_Interface_3' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetTickEnable, K2Node_DynamicCast_bSuccess_7) == 0x000250, "Member 'BP_EnemyManager_C_SetTickEnable::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetTickEnable, CallFunc_IsBossEnemy_bBoss) == 0x000251, "Member 'BP_EnemyManager_C_SetTickEnable::CallFunc_IsBossEnemy_bBoss' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetTickEnable, CallFunc_GreaterEqual_FloatFloat_ReturnValue_1) == 0x000252, "Member 'BP_EnemyManager_C_SetTickEnable::CallFunc_GreaterEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetTickEnable, K2Node_DynamicCast_AsBPI_Enemy_Interface_4) == 0x000258, "Member 'BP_EnemyManager_C_SetTickEnable::K2Node_DynamicCast_AsBPI_Enemy_Interface_4' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetTickEnable, K2Node_DynamicCast_bSuccess_8) == 0x000268, "Member 'BP_EnemyManager_C_SetTickEnable::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetTickEnable, K2Node_DynamicCast_AsBPI_Enemy_Interface_5) == 0x000270, "Member 'BP_EnemyManager_C_SetTickEnable::K2Node_DynamicCast_AsBPI_Enemy_Interface_5' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetTickEnable, K2Node_DynamicCast_bSuccess_9) == 0x000280, "Member 'BP_EnemyManager_C_SetTickEnable::K2Node_DynamicCast_bSuccess_9' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetTickEnable, CallFunc_IsFlyEnemyCheck_NewParam_1) == 0x000281, "Member 'BP_EnemyManager_C_SetTickEnable::CallFunc_IsFlyEnemyCheck_NewParam_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetTickEnable, CallFunc_GetHeightCheckFlag_NewParam) == 0x000282, "Member 'BP_EnemyManager_C_SetTickEnable::CallFunc_GetHeightCheckFlag_NewParam' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetTickEnable, Temp_int_Array_Index_Variable) == 0x000284, "Member 'BP_EnemyManager_C_SetTickEnable::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetTickEnable, CallFunc_Array_Get_Item) == 0x000288, "Member 'BP_EnemyManager_C_SetTickEnable::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetTickEnable, CallFunc_Array_IsValidIndex_ReturnValue_1) == 0x000290, "Member 'BP_EnemyManager_C_SetTickEnable::CallFunc_Array_IsValidIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetTickEnable, K2Node_DynamicCast_AsBPI_Enemy_Interface_6) == 0x000298, "Member 'BP_EnemyManager_C_SetTickEnable::K2Node_DynamicCast_AsBPI_Enemy_Interface_6' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetTickEnable, K2Node_DynamicCast_bSuccess_10) == 0x0002A8, "Member 'BP_EnemyManager_C_SetTickEnable::K2Node_DynamicCast_bSuccess_10' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetTickEnable, CallFunc_GetEnemySpawn_return) == 0x0002A9, "Member 'BP_EnemyManager_C_SetTickEnable::CallFunc_GetEnemySpawn_return' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetTickEnable, CallFunc_IsActorTickEnabled_ReturnValue_1) == 0x0002AA, "Member 'BP_EnemyManager_C_SetTickEnable::CallFunc_IsActorTickEnabled_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetTickEnable, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x0002AB, "Member 'BP_EnemyManager_C_SetTickEnable::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetTickEnable, K2Node_DynamicCast_AsBPI_Character_Paramater) == 0x0002B0, "Member 'BP_EnemyManager_C_SetTickEnable::K2Node_DynamicCast_AsBPI_Character_Paramater' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetTickEnable, K2Node_DynamicCast_bSuccess_11) == 0x0002C0, "Member 'BP_EnemyManager_C_SetTickEnable::K2Node_DynamicCast_bSuccess_11' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetTickEnable, CallFunc_IsDead_bDead) == 0x0002C1, "Member 'BP_EnemyManager_C_SetTickEnable::CallFunc_IsDead_bDead' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetTickEnable, K2Node_DynamicCast_AsBPI_Enemy_Interface_7) == 0x0002C8, "Member 'BP_EnemyManager_C_SetTickEnable::K2Node_DynamicCast_AsBPI_Enemy_Interface_7' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetTickEnable, K2Node_DynamicCast_bSuccess_12) == 0x0002D8, "Member 'BP_EnemyManager_C_SetTickEnable::K2Node_DynamicCast_bSuccess_12' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetTickEnable, CallFunc_IsEnemyTickDisableCondition_bDisableCondition) == 0x0002D9, "Member 'BP_EnemyManager_C_SetTickEnable::CallFunc_IsEnemyTickDisableCondition_bDisableCondition' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetTickEnable, CallFunc_GetPlayerPawn_ReturnValue_1) == 0x0002E0, "Member 'BP_EnemyManager_C_SetTickEnable::CallFunc_GetPlayerPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetTickEnable, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x0002E8, "Member 'BP_EnemyManager_C_SetTickEnable::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetTickEnable, CallFunc_IsValid_ReturnValue_3) == 0x0002EC, "Member 'BP_EnemyManager_C_SetTickEnable::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetTickEnable, CallFunc_GreaterEqual_FloatFloat_ReturnValue_2) == 0x0002ED, "Member 'BP_EnemyManager_C_SetTickEnable::CallFunc_GreaterEqual_FloatFloat_ReturnValue_2' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.SetEnemySoundCheck
// 0x0020 (0x0020 - 0x0000)
struct BP_EnemyManager_C_SetEnemySoundCheck final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_EnemyInterface_C> K2Node_DynamicCast_AsBPI_Enemy_Interface;          // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	Enum_EnemySound                               CallFunc_GetEnemyInterfaceSound_enum;              // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_ByteByte_ReturnValue;             // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyManager_C_SetEnemySoundCheck) == 0x000008, "Wrong alignment on BP_EnemyManager_C_SetEnemySoundCheck");
static_assert(sizeof(BP_EnemyManager_C_SetEnemySoundCheck) == 0x000020, "Wrong size on BP_EnemyManager_C_SetEnemySoundCheck");
static_assert(offsetof(BP_EnemyManager_C_SetEnemySoundCheck, Actor) == 0x000000, "Member 'BP_EnemyManager_C_SetEnemySoundCheck::Actor' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetEnemySoundCheck, K2Node_DynamicCast_AsBPI_Enemy_Interface) == 0x000008, "Member 'BP_EnemyManager_C_SetEnemySoundCheck::K2Node_DynamicCast_AsBPI_Enemy_Interface' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetEnemySoundCheck, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_EnemyManager_C_SetEnemySoundCheck::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetEnemySoundCheck, CallFunc_GetEnemyInterfaceSound_enum) == 0x000019, "Member 'BP_EnemyManager_C_SetEnemySoundCheck::CallFunc_GetEnemyInterfaceSound_enum' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetEnemySoundCheck, CallFunc_Greater_ByteByte_ReturnValue) == 0x00001A, "Member 'BP_EnemyManager_C_SetEnemySoundCheck::CallFunc_Greater_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.GetEnemySound
// 0x0001 (0x0001 - 0x0000)
struct BP_EnemyManager_C_GetEnemySound final
{
public:
	Enum_EnemySound                               Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EnemyManager_C_GetEnemySound) == 0x000001, "Wrong alignment on BP_EnemyManager_C_GetEnemySound");
static_assert(sizeof(BP_EnemyManager_C_GetEnemySound) == 0x000001, "Wrong size on BP_EnemyManager_C_GetEnemySound");
static_assert(offsetof(BP_EnemyManager_C_GetEnemySound, Return) == 0x000000, "Member 'BP_EnemyManager_C_GetEnemySound::Return' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.EnemyRigitBodyEmptyUpdate
// 0x0058 (0x0058 - 0x0000)
struct BP_EnemyManager_C_EnemyRigitBodyEmptyUpdate final
{
public:
	float                                         RigitBodyEmptyUpdateSeconds;                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_605C[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         LEnemyList;                                        // 0x0008(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_605D[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IEventInterface>       K2Node_DynamicCast_AsEvent_Interface;              // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_605E[0x2];                                     // 0x0042(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ARSCharacterBase*>               CallFunc_GetEnemyList_ReturnValue;                 // 0x0048(0x0010)(ReferenceParm, HasGetValueTypeHash)
};
static_assert(alignof(BP_EnemyManager_C_EnemyRigitBodyEmptyUpdate) == 0x000008, "Wrong alignment on BP_EnemyManager_C_EnemyRigitBodyEmptyUpdate");
static_assert(sizeof(BP_EnemyManager_C_EnemyRigitBodyEmptyUpdate) == 0x000058, "Wrong size on BP_EnemyManager_C_EnemyRigitBodyEmptyUpdate");
static_assert(offsetof(BP_EnemyManager_C_EnemyRigitBodyEmptyUpdate, RigitBodyEmptyUpdateSeconds) == 0x000000, "Member 'BP_EnemyManager_C_EnemyRigitBodyEmptyUpdate::RigitBodyEmptyUpdateSeconds' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_EnemyRigitBodyEmptyUpdate, LEnemyList) == 0x000008, "Member 'BP_EnemyManager_C_EnemyRigitBodyEmptyUpdate::LEnemyList' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_EnemyRigitBodyEmptyUpdate, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BP_EnemyManager_C_EnemyRigitBodyEmptyUpdate::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_EnemyRigitBodyEmptyUpdate, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'BP_EnemyManager_C_EnemyRigitBodyEmptyUpdate::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_EnemyRigitBodyEmptyUpdate, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'BP_EnemyManager_C_EnemyRigitBodyEmptyUpdate::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_EnemyRigitBodyEmptyUpdate, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_EnemyManager_C_EnemyRigitBodyEmptyUpdate::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_EnemyRigitBodyEmptyUpdate, K2Node_DynamicCast_AsEvent_Interface) == 0x000030, "Member 'BP_EnemyManager_C_EnemyRigitBodyEmptyUpdate::K2Node_DynamicCast_AsEvent_Interface' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_EnemyRigitBodyEmptyUpdate, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_EnemyManager_C_EnemyRigitBodyEmptyUpdate::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_EnemyRigitBodyEmptyUpdate, CallFunc_Less_IntInt_ReturnValue) == 0x000041, "Member 'BP_EnemyManager_C_EnemyRigitBodyEmptyUpdate::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_EnemyRigitBodyEmptyUpdate, CallFunc_Add_IntInt_ReturnValue) == 0x000044, "Member 'BP_EnemyManager_C_EnemyRigitBodyEmptyUpdate::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_EnemyRigitBodyEmptyUpdate, CallFunc_GetEnemyList_ReturnValue) == 0x000048, "Member 'BP_EnemyManager_C_EnemyRigitBodyEmptyUpdate::CallFunc_GetEnemyList_ReturnValue' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.AddBattleEnemyList
// 0x0010 (0x0010 - 0x0000)
struct BP_EnemyManager_C_AddBattleEnemyList final
{
public:
	class AActor*                                 Enemy;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EnemyManager_C_AddBattleEnemyList) == 0x000008, "Wrong alignment on BP_EnemyManager_C_AddBattleEnemyList");
static_assert(sizeof(BP_EnemyManager_C_AddBattleEnemyList) == 0x000010, "Wrong size on BP_EnemyManager_C_AddBattleEnemyList");
static_assert(offsetof(BP_EnemyManager_C_AddBattleEnemyList, Enemy) == 0x000000, "Member 'BP_EnemyManager_C_AddBattleEnemyList::Enemy' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_AddBattleEnemyList, CallFunc_Array_Add_ReturnValue) == 0x000008, "Member 'BP_EnemyManager_C_AddBattleEnemyList::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.SubBattleEnemyList
// 0x0010 (0x0010 - 0x0000)
struct BP_EnemyManager_C_SubBattleEnemyList final
{
public:
	class AActor*                                 Enemy;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyManager_C_SubBattleEnemyList) == 0x000008, "Wrong alignment on BP_EnemyManager_C_SubBattleEnemyList");
static_assert(sizeof(BP_EnemyManager_C_SubBattleEnemyList) == 0x000010, "Wrong size on BP_EnemyManager_C_SubBattleEnemyList");
static_assert(offsetof(BP_EnemyManager_C_SubBattleEnemyList, Enemy) == 0x000000, "Member 'BP_EnemyManager_C_SubBattleEnemyList::Enemy' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SubBattleEnemyList, CallFunc_Array_RemoveItem_ReturnValue) == 0x000008, "Member 'BP_EnemyManager_C_SubBattleEnemyList::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.SetStealthSeeEnable
// 0x0050 (0x0050 - 0x0000)
struct BP_EnemyManager_C_SetStealthSeeEnable final
{
public:
	bool                                          On;                                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ShadowChange;                                      // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_605F[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ARSCharacterBase*>               CallFunc_GetEnemyList_ReturnValue;                 // 0x0010(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6060[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6061[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_EnemyInterface_C> K2Node_DynamicCast_AsBPI_Enemy_Interface;          // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetEnemyStealthSeeEnable_Return;          // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyManager_C_SetStealthSeeEnable) == 0x000008, "Wrong alignment on BP_EnemyManager_C_SetStealthSeeEnable");
static_assert(sizeof(BP_EnemyManager_C_SetStealthSeeEnable) == 0x000050, "Wrong size on BP_EnemyManager_C_SetStealthSeeEnable");
static_assert(offsetof(BP_EnemyManager_C_SetStealthSeeEnable, On) == 0x000000, "Member 'BP_EnemyManager_C_SetStealthSeeEnable::On' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetStealthSeeEnable, ShadowChange) == 0x000001, "Member 'BP_EnemyManager_C_SetStealthSeeEnable::ShadowChange' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetStealthSeeEnable, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_EnemyManager_C_SetStealthSeeEnable::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetStealthSeeEnable, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_EnemyManager_C_SetStealthSeeEnable::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetStealthSeeEnable, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_EnemyManager_C_SetStealthSeeEnable::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetStealthSeeEnable, CallFunc_GetEnemyList_ReturnValue) == 0x000010, "Member 'BP_EnemyManager_C_SetStealthSeeEnable::CallFunc_GetEnemyList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetStealthSeeEnable, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_EnemyManager_C_SetStealthSeeEnable::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetStealthSeeEnable, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_EnemyManager_C_SetStealthSeeEnable::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetStealthSeeEnable, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'BP_EnemyManager_C_SetStealthSeeEnable::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetStealthSeeEnable, K2Node_DynamicCast_AsBPI_Enemy_Interface) == 0x000038, "Member 'BP_EnemyManager_C_SetStealthSeeEnable::K2Node_DynamicCast_AsBPI_Enemy_Interface' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetStealthSeeEnable, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'BP_EnemyManager_C_SetStealthSeeEnable::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetStealthSeeEnable, CallFunc_SetEnemyStealthSeeEnable_Return) == 0x000049, "Member 'BP_EnemyManager_C_SetStealthSeeEnable::CallFunc_SetEnemyStealthSeeEnable_Return' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.IsStealthSeeEnable
// 0x0001 (0x0001 - 0x0000)
struct BP_EnemyManager_C_IsStealthSeeEnable final
{
public:
	bool                                          Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyManager_C_IsStealthSeeEnable) == 0x000001, "Wrong alignment on BP_EnemyManager_C_IsStealthSeeEnable");
static_assert(sizeof(BP_EnemyManager_C_IsStealthSeeEnable) == 0x000001, "Wrong size on BP_EnemyManager_C_IsStealthSeeEnable");
static_assert(offsetof(BP_EnemyManager_C_IsStealthSeeEnable, Return) == 0x000000, "Member 'BP_EnemyManager_C_IsStealthSeeEnable::Return' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.SetBrainCrashParam
// 0x0048 (0x0048 - 0x0000)
struct BP_EnemyManager_C_SetBrainCrashParam final
{
public:
	float                                         BrainCrashTimer;                                   // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BrainCrashMissScale;                               // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6062[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ARSCharacterBase*>               CallFunc_GetEnemyListRef_ReturnValue;              // 0x0018(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6063[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_EnemyInterface_C> K2Node_DynamicCast_AsBPI_Enemy_Interface;          // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetEnemyBrainCrashParam_Return;           // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6064[0x1];                                     // 0x0043(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EnemyManager_C_SetBrainCrashParam) == 0x000008, "Wrong alignment on BP_EnemyManager_C_SetBrainCrashParam");
static_assert(sizeof(BP_EnemyManager_C_SetBrainCrashParam) == 0x000048, "Wrong size on BP_EnemyManager_C_SetBrainCrashParam");
static_assert(offsetof(BP_EnemyManager_C_SetBrainCrashParam, BrainCrashTimer) == 0x000000, "Member 'BP_EnemyManager_C_SetBrainCrashParam::BrainCrashTimer' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetBrainCrashParam, BrainCrashMissScale) == 0x000004, "Member 'BP_EnemyManager_C_SetBrainCrashParam::BrainCrashMissScale' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetBrainCrashParam, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_EnemyManager_C_SetBrainCrashParam::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetBrainCrashParam, Temp_int_Loop_Num_Variable) == 0x00000C, "Member 'BP_EnemyManager_C_SetBrainCrashParam::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetBrainCrashParam, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'BP_EnemyManager_C_SetBrainCrashParam::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetBrainCrashParam, CallFunc_GetEnemyListRef_ReturnValue) == 0x000018, "Member 'BP_EnemyManager_C_SetBrainCrashParam::CallFunc_GetEnemyListRef_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetBrainCrashParam, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_EnemyManager_C_SetBrainCrashParam::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetBrainCrashParam, K2Node_DynamicCast_AsBPI_Enemy_Interface) == 0x000030, "Member 'BP_EnemyManager_C_SetBrainCrashParam::K2Node_DynamicCast_AsBPI_Enemy_Interface' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetBrainCrashParam, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_EnemyManager_C_SetBrainCrashParam::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetBrainCrashParam, CallFunc_SetEnemyBrainCrashParam_Return) == 0x000041, "Member 'BP_EnemyManager_C_SetBrainCrashParam::CallFunc_SetEnemyBrainCrashParam_Return' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetBrainCrashParam, CallFunc_Less_IntInt_ReturnValue) == 0x000042, "Member 'BP_EnemyManager_C_SetBrainCrashParam::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetBrainCrashParam, CallFunc_Add_IntInt_ReturnValue) == 0x000044, "Member 'BP_EnemyManager_C_SetBrainCrashParam::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.GetEnemyHitObjectType
// 0x0030 (0x0030 - 0x0000)
struct BP_EnemyManager_C_GetEnemyHitObjectType final
{
public:
	TArray<EObjectTypeQuery>                      ObjectType;                                        // 0x0000(0x0010)(Parm, OutParm, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      L_ObjectType;                                      // 0x0010(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0020(0x0010)(ReferenceParm, HasGetValueTypeHash)
};
static_assert(alignof(BP_EnemyManager_C_GetEnemyHitObjectType) == 0x000008, "Wrong alignment on BP_EnemyManager_C_GetEnemyHitObjectType");
static_assert(sizeof(BP_EnemyManager_C_GetEnemyHitObjectType) == 0x000030, "Wrong size on BP_EnemyManager_C_GetEnemyHitObjectType");
static_assert(offsetof(BP_EnemyManager_C_GetEnemyHitObjectType, ObjectType) == 0x000000, "Member 'BP_EnemyManager_C_GetEnemyHitObjectType::ObjectType' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_GetEnemyHitObjectType, L_ObjectType) == 0x000010, "Member 'BP_EnemyManager_C_GetEnemyHitObjectType::L_ObjectType' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_GetEnemyHitObjectType, K2Node_MakeArray_Array) == 0x000020, "Member 'BP_EnemyManager_C_GetEnemyHitObjectType::K2Node_MakeArray_Array' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.GetGroupEnemyCount
// 0x0060 (0x0060 - 0x0000)
struct BP_EnemyManager_C_GetGroupEnemyCount final
{
public:
	int32                                         CheckGroupdID;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         GroupCount;                                        // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Count;                                             // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6065[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ARSCharacterBase*>               CallFunc_GetEnemyListRef_ReturnValue;              // 0x0020(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattleCharacter_C*                   K2Node_DynamicCast_AsRSBattle_Character;           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6066[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_CharacterParamater_C> CallFunc_IsDead_self_CastInput;                    // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDead_bDead;                             // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6067[0x1];                                     // 0x005B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EnemyManager_C_GetGroupEnemyCount) == 0x000008, "Wrong alignment on BP_EnemyManager_C_GetGroupEnemyCount");
static_assert(sizeof(BP_EnemyManager_C_GetGroupEnemyCount) == 0x000060, "Wrong size on BP_EnemyManager_C_GetGroupEnemyCount");
static_assert(offsetof(BP_EnemyManager_C_GetGroupEnemyCount, CheckGroupdID) == 0x000000, "Member 'BP_EnemyManager_C_GetGroupEnemyCount::CheckGroupdID' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_GetGroupEnemyCount, GroupCount) == 0x000004, "Member 'BP_EnemyManager_C_GetGroupEnemyCount::GroupCount' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_GetGroupEnemyCount, Count) == 0x000008, "Member 'BP_EnemyManager_C_GetGroupEnemyCount::Count' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_GetGroupEnemyCount, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BP_EnemyManager_C_GetGroupEnemyCount::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_GetGroupEnemyCount, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_EnemyManager_C_GetGroupEnemyCount::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_GetGroupEnemyCount, Temp_int_Array_Index_Variable) == 0x000014, "Member 'BP_EnemyManager_C_GetGroupEnemyCount::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_GetGroupEnemyCount, Temp_int_Variable) == 0x000018, "Member 'BP_EnemyManager_C_GetGroupEnemyCount::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_GetGroupEnemyCount, CallFunc_GetEnemyListRef_ReturnValue) == 0x000020, "Member 'BP_EnemyManager_C_GetGroupEnemyCount::CallFunc_GetEnemyListRef_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_GetGroupEnemyCount, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_EnemyManager_C_GetGroupEnemyCount::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_GetGroupEnemyCount, K2Node_DynamicCast_AsRSBattle_Character) == 0x000038, "Member 'BP_EnemyManager_C_GetGroupEnemyCount::K2Node_DynamicCast_AsRSBattle_Character' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_GetGroupEnemyCount, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_EnemyManager_C_GetGroupEnemyCount::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_GetGroupEnemyCount, CallFunc_Array_Length_ReturnValue) == 0x000044, "Member 'BP_EnemyManager_C_GetGroupEnemyCount::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_GetGroupEnemyCount, CallFunc_IsDead_self_CastInput) == 0x000048, "Member 'BP_EnemyManager_C_GetGroupEnemyCount::CallFunc_IsDead_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_GetGroupEnemyCount, CallFunc_IsDead_bDead) == 0x000058, "Member 'BP_EnemyManager_C_GetGroupEnemyCount::CallFunc_IsDead_bDead' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_GetGroupEnemyCount, CallFunc_Less_IntInt_ReturnValue) == 0x000059, "Member 'BP_EnemyManager_C_GetGroupEnemyCount::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_GetGroupEnemyCount, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00005A, "Member 'BP_EnemyManager_C_GetGroupEnemyCount::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_GetGroupEnemyCount, CallFunc_Add_IntInt_ReturnValue_1) == 0x00005C, "Member 'BP_EnemyManager_C_GetGroupEnemyCount::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.GroupBattleStart
// 0x0014 (0x0014 - 0x0000)
struct BP_EnemyManager_C_GroupBattleStart final
{
public:
	int32                                         GroupID;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FenceBattleRate;                                   // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   UniqueId;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsOnceOnly;                                        // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyManager_C_GroupBattleStart) == 0x000004, "Wrong alignment on BP_EnemyManager_C_GroupBattleStart");
static_assert(sizeof(BP_EnemyManager_C_GroupBattleStart) == 0x000014, "Wrong size on BP_EnemyManager_C_GroupBattleStart");
static_assert(offsetof(BP_EnemyManager_C_GroupBattleStart, GroupID) == 0x000000, "Member 'BP_EnemyManager_C_GroupBattleStart::GroupID' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_GroupBattleStart, FenceBattleRate) == 0x000004, "Member 'BP_EnemyManager_C_GroupBattleStart::FenceBattleRate' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_GroupBattleStart, UniqueId) == 0x000008, "Member 'BP_EnemyManager_C_GroupBattleStart::UniqueId' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_GroupBattleStart, IsOnceOnly) == 0x000010, "Member 'BP_EnemyManager_C_GroupBattleStart::IsOnceOnly' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.AddPsychicFlyObj
// 0x0080 (0x0080 - 0x0000)
struct BP_EnemyManager_C_AddPsychicFlyObj final
{
public:
	class ABP_PsychicObjectBasic_C*               PsychicFlyObj;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ARSCharacterBase*>               CallFunc_GetEnemyList_ReturnValue;                 // 0x0018(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<class ARSCharacterBase*>               CallFunc_GetEnemyList_ReturnValue_1;               // 0x0028(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class ARSCharacterBase*                       CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSCharacterBase*                       CallFunc_Array_Get_Item_1;                         // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_EnemyInterface_C> K2Node_DynamicCast_AsBPI_Enemy_Interface;          // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6068[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerInterface_C> K2Node_DynamicCast_AsBPI_Player_Interface;         // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_em1210_AddPSychicFlyObj_dummy;            // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_AddPSychicFlyObj_Dummy;                   // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6069[0x1];                                     // 0x0073(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x007D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyManager_C_AddPsychicFlyObj) == 0x000008, "Wrong alignment on BP_EnemyManager_C_AddPsychicFlyObj");
static_assert(sizeof(BP_EnemyManager_C_AddPsychicFlyObj) == 0x000080, "Wrong size on BP_EnemyManager_C_AddPsychicFlyObj");
static_assert(offsetof(BP_EnemyManager_C_AddPsychicFlyObj, PsychicFlyObj) == 0x000000, "Member 'BP_EnemyManager_C_AddPsychicFlyObj::PsychicFlyObj' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_AddPsychicFlyObj, Temp_int_Variable) == 0x000008, "Member 'BP_EnemyManager_C_AddPsychicFlyObj::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_AddPsychicFlyObj, Temp_int_Variable_1) == 0x00000C, "Member 'BP_EnemyManager_C_AddPsychicFlyObj::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_AddPsychicFlyObj, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_EnemyManager_C_AddPsychicFlyObj::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_AddPsychicFlyObj, CallFunc_Add_IntInt_ReturnValue_1) == 0x000014, "Member 'BP_EnemyManager_C_AddPsychicFlyObj::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_AddPsychicFlyObj, CallFunc_GetEnemyList_ReturnValue) == 0x000018, "Member 'BP_EnemyManager_C_AddPsychicFlyObj::CallFunc_GetEnemyList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_AddPsychicFlyObj, CallFunc_GetEnemyList_ReturnValue_1) == 0x000028, "Member 'BP_EnemyManager_C_AddPsychicFlyObj::CallFunc_GetEnemyList_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_AddPsychicFlyObj, CallFunc_Array_Get_Item) == 0x000038, "Member 'BP_EnemyManager_C_AddPsychicFlyObj::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_AddPsychicFlyObj, CallFunc_Array_Get_Item_1) == 0x000040, "Member 'BP_EnemyManager_C_AddPsychicFlyObj::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_AddPsychicFlyObj, K2Node_DynamicCast_AsBPI_Enemy_Interface) == 0x000048, "Member 'BP_EnemyManager_C_AddPsychicFlyObj::K2Node_DynamicCast_AsBPI_Enemy_Interface' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_AddPsychicFlyObj, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'BP_EnemyManager_C_AddPsychicFlyObj::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_AddPsychicFlyObj, K2Node_DynamicCast_AsBPI_Player_Interface) == 0x000060, "Member 'BP_EnemyManager_C_AddPsychicFlyObj::K2Node_DynamicCast_AsBPI_Player_Interface' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_AddPsychicFlyObj, K2Node_DynamicCast_bSuccess_1) == 0x000070, "Member 'BP_EnemyManager_C_AddPsychicFlyObj::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_AddPsychicFlyObj, CallFunc_em1210_AddPSychicFlyObj_dummy) == 0x000071, "Member 'BP_EnemyManager_C_AddPsychicFlyObj::CallFunc_em1210_AddPSychicFlyObj_dummy' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_AddPsychicFlyObj, CallFunc_AddPSychicFlyObj_Dummy) == 0x000072, "Member 'BP_EnemyManager_C_AddPsychicFlyObj::CallFunc_AddPSychicFlyObj_Dummy' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_AddPsychicFlyObj, CallFunc_Array_Length_ReturnValue) == 0x000074, "Member 'BP_EnemyManager_C_AddPsychicFlyObj::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_AddPsychicFlyObj, CallFunc_Array_Length_ReturnValue_1) == 0x000078, "Member 'BP_EnemyManager_C_AddPsychicFlyObj::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_AddPsychicFlyObj, CallFunc_Less_IntInt_ReturnValue) == 0x00007C, "Member 'BP_EnemyManager_C_AddPsychicFlyObj::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_AddPsychicFlyObj, CallFunc_Less_IntInt_ReturnValue_1) == 0x00007D, "Member 'BP_EnemyManager_C_AddPsychicFlyObj::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.CanUpdateEnemy
// 0x0002 (0x0002 - 0x0000)
struct BP_EnemyManager_C_CanUpdateEnemy final
{
public:
	bool                                          CanUpdate;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyManager_C_CanUpdateEnemy) == 0x000001, "Wrong alignment on BP_EnemyManager_C_CanUpdateEnemy");
static_assert(sizeof(BP_EnemyManager_C_CanUpdateEnemy) == 0x000002, "Wrong size on BP_EnemyManager_C_CanUpdateEnemy");
static_assert(offsetof(BP_EnemyManager_C_CanUpdateEnemy, CanUpdate) == 0x000000, "Member 'BP_EnemyManager_C_CanUpdateEnemy::CanUpdate' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_CanUpdateEnemy, CallFunc_Less_IntInt_ReturnValue) == 0x000001, "Member 'BP_EnemyManager_C_CanUpdateEnemy::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.IncrementUpdateEnemy
// 0x0008 (0x0008 - 0x0000)
struct BP_EnemyManager_C_IncrementUpdateEnemy final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EnemyManager_C_IncrementUpdateEnemy) == 0x000004, "Wrong alignment on BP_EnemyManager_C_IncrementUpdateEnemy");
static_assert(sizeof(BP_EnemyManager_C_IncrementUpdateEnemy) == 0x000008, "Wrong size on BP_EnemyManager_C_IncrementUpdateEnemy");
static_assert(offsetof(BP_EnemyManager_C_IncrementUpdateEnemy, Temp_int_Variable) == 0x000000, "Member 'BP_EnemyManager_C_IncrementUpdateEnemy::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_IncrementUpdateEnemy, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'BP_EnemyManager_C_IncrementUpdateEnemy::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.DebugTargetEnemy
// 0x0138 (0x0138 - 0x0000)
struct BP_EnemyManager_C_DebugTargetEnemy final
{
public:
	int32                                         Command;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          L_IsStart;                                         // 0x0004(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor)
	uint8                                         Pad_606A[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                L_DebugManager;                                    // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_TargetListNum;                                   // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_606B[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 L_TargetActor;                                     // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_606C[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_606D[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable_1;        // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_606E[0x2];                                     // 0x003E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_606F[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6070[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ARSCharacterBase*>               CallFunc_GetEnemyList_ReturnValue;                 // 0x0058(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TScriptInterface<class IBPI_EnemyInterface_C> K2Node_DynamicCast_AsBPI_Enemy_Interface;          // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6071[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_Array_Get_Item;                           // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsBossEnemy_bBoss;                        // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6072[0x7];                                     // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_EnemyInterface_C> K2Node_DynamicCast_AsBPI_Enemy_Interface_1;        // 0x0090(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsBossEnemy_bBoss_1;                      // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6073[0x2];                                     // 0x00A2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6074[0x6];                                     // 0x00AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ARSCharacterBase*>               CallFunc_GetEnemyList_ReturnValue_1;               // 0x00B0(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class ARSCharacterBase*                       CallFunc_Array_Get_Item_1;                         // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattlePlayer_C*                      K2Node_DynamicCast_AsRSBattle_Player;              // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6075[0x7];                                     // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattleEnemy_C*                       K2Node_DynamicCast_AsRSBattle_Enemy;               // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6076[0x6];                                     // 0x00E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ARSCharacterBase*>               CallFunc_GetEnemyList_ReturnValue_2;               // 0x00E8(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class ARSCharacterBase*                       CallFunc_Array_Get_Item_2;                         // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0104(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0105(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0106(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6077[0x1];                                     // 0x0107(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattlePlayer_C*                      K2Node_DynamicCast_AsRSBattle_Player_1;            // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6078[0x7];                                     // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetCurrentTargetActor_TargetActor;        // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetCurrentTargetActor_TargetActor_1;      // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyManager_C_DebugTargetEnemy) == 0x000008, "Wrong alignment on BP_EnemyManager_C_DebugTargetEnemy");
static_assert(sizeof(BP_EnemyManager_C_DebugTargetEnemy) == 0x000138, "Wrong size on BP_EnemyManager_C_DebugTargetEnemy");
static_assert(offsetof(BP_EnemyManager_C_DebugTargetEnemy, Command) == 0x000000, "Member 'BP_EnemyManager_C_DebugTargetEnemy::Command' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugTargetEnemy, L_IsStart) == 0x000004, "Member 'BP_EnemyManager_C_DebugTargetEnemy::L_IsStart' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugTargetEnemy, L_DebugManager) == 0x000008, "Member 'BP_EnemyManager_C_DebugTargetEnemy::L_DebugManager' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugTargetEnemy, L_TargetListNum) == 0x000010, "Member 'BP_EnemyManager_C_DebugTargetEnemy::L_TargetListNum' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugTargetEnemy, L_TargetActor) == 0x000018, "Member 'BP_EnemyManager_C_DebugTargetEnemy::L_TargetActor' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugTargetEnemy, Temp_int_Array_Index_Variable) == 0x000020, "Member 'BP_EnemyManager_C_DebugTargetEnemy::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugTargetEnemy, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'BP_EnemyManager_C_DebugTargetEnemy::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugTargetEnemy, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BP_EnemyManager_C_DebugTargetEnemy::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugTargetEnemy, Temp_bool_True_if_break_was_hit_Variable) == 0x00002C, "Member 'BP_EnemyManager_C_DebugTargetEnemy::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugTargetEnemy, Temp_int_Array_Index_Variable_1) == 0x000030, "Member 'BP_EnemyManager_C_DebugTargetEnemy::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugTargetEnemy, CallFunc_Not_PreBool_ReturnValue) == 0x000034, "Member 'BP_EnemyManager_C_DebugTargetEnemy::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugTargetEnemy, Temp_int_Loop_Counter_Variable_1) == 0x000038, "Member 'BP_EnemyManager_C_DebugTargetEnemy::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugTargetEnemy, Temp_bool_True_if_break_was_hit_Variable_1) == 0x00003C, "Member 'BP_EnemyManager_C_DebugTargetEnemy::Temp_bool_True_if_break_was_hit_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugTargetEnemy, CallFunc_Not_PreBool_ReturnValue_1) == 0x00003D, "Member 'BP_EnemyManager_C_DebugTargetEnemy::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugTargetEnemy, CallFunc_Add_IntInt_ReturnValue_1) == 0x000040, "Member 'BP_EnemyManager_C_DebugTargetEnemy::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugTargetEnemy, CallFunc_GetPlayerManager_PlayerManager) == 0x000048, "Member 'BP_EnemyManager_C_DebugTargetEnemy::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugTargetEnemy, CallFunc_IsValid_ReturnValue) == 0x000050, "Member 'BP_EnemyManager_C_DebugTargetEnemy::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugTargetEnemy, CallFunc_GetEnemyList_ReturnValue) == 0x000058, "Member 'BP_EnemyManager_C_DebugTargetEnemy::CallFunc_GetEnemyList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugTargetEnemy, K2Node_DynamicCast_AsBPI_Enemy_Interface) == 0x000068, "Member 'BP_EnemyManager_C_DebugTargetEnemy::K2Node_DynamicCast_AsBPI_Enemy_Interface' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugTargetEnemy, K2Node_DynamicCast_bSuccess) == 0x000078, "Member 'BP_EnemyManager_C_DebugTargetEnemy::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugTargetEnemy, CallFunc_Array_Get_Item) == 0x000080, "Member 'BP_EnemyManager_C_DebugTargetEnemy::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugTargetEnemy, CallFunc_IsBossEnemy_bBoss) == 0x000088, "Member 'BP_EnemyManager_C_DebugTargetEnemy::CallFunc_IsBossEnemy_bBoss' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugTargetEnemy, K2Node_DynamicCast_AsBPI_Enemy_Interface_1) == 0x000090, "Member 'BP_EnemyManager_C_DebugTargetEnemy::K2Node_DynamicCast_AsBPI_Enemy_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugTargetEnemy, K2Node_DynamicCast_bSuccess_1) == 0x0000A0, "Member 'BP_EnemyManager_C_DebugTargetEnemy::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugTargetEnemy, CallFunc_IsBossEnemy_bBoss_1) == 0x0000A1, "Member 'BP_EnemyManager_C_DebugTargetEnemy::CallFunc_IsBossEnemy_bBoss_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugTargetEnemy, CallFunc_Array_Length_ReturnValue) == 0x0000A4, "Member 'BP_EnemyManager_C_DebugTargetEnemy::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugTargetEnemy, CallFunc_Less_IntInt_ReturnValue) == 0x0000A8, "Member 'BP_EnemyManager_C_DebugTargetEnemy::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugTargetEnemy, CallFunc_BooleanAND_ReturnValue) == 0x0000A9, "Member 'BP_EnemyManager_C_DebugTargetEnemy::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugTargetEnemy, CallFunc_GetEnemyList_ReturnValue_1) == 0x0000B0, "Member 'BP_EnemyManager_C_DebugTargetEnemy::CallFunc_GetEnemyList_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugTargetEnemy, CallFunc_Array_Get_Item_1) == 0x0000C0, "Member 'BP_EnemyManager_C_DebugTargetEnemy::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugTargetEnemy, K2Node_DynamicCast_AsRSBattle_Player) == 0x0000C8, "Member 'BP_EnemyManager_C_DebugTargetEnemy::K2Node_DynamicCast_AsRSBattle_Player' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugTargetEnemy, K2Node_DynamicCast_bSuccess_2) == 0x0000D0, "Member 'BP_EnemyManager_C_DebugTargetEnemy::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugTargetEnemy, K2Node_DynamicCast_AsRSBattle_Enemy) == 0x0000D8, "Member 'BP_EnemyManager_C_DebugTargetEnemy::K2Node_DynamicCast_AsRSBattle_Enemy' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugTargetEnemy, K2Node_DynamicCast_bSuccess_3) == 0x0000E0, "Member 'BP_EnemyManager_C_DebugTargetEnemy::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugTargetEnemy, CallFunc_IsValid_ReturnValue_1) == 0x0000E1, "Member 'BP_EnemyManager_C_DebugTargetEnemy::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugTargetEnemy, CallFunc_GetEnemyList_ReturnValue_2) == 0x0000E8, "Member 'BP_EnemyManager_C_DebugTargetEnemy::CallFunc_GetEnemyList_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugTargetEnemy, CallFunc_Array_Get_Item_2) == 0x0000F8, "Member 'BP_EnemyManager_C_DebugTargetEnemy::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugTargetEnemy, CallFunc_Array_Length_ReturnValue_1) == 0x000100, "Member 'BP_EnemyManager_C_DebugTargetEnemy::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugTargetEnemy, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000104, "Member 'BP_EnemyManager_C_DebugTargetEnemy::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugTargetEnemy, CallFunc_Less_IntInt_ReturnValue_1) == 0x000105, "Member 'BP_EnemyManager_C_DebugTargetEnemy::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugTargetEnemy, CallFunc_BooleanAND_ReturnValue_1) == 0x000106, "Member 'BP_EnemyManager_C_DebugTargetEnemy::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugTargetEnemy, CallFunc_GetPlayerPawn_ReturnValue) == 0x000108, "Member 'BP_EnemyManager_C_DebugTargetEnemy::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugTargetEnemy, K2Node_DynamicCast_AsRSBattle_Player_1) == 0x000110, "Member 'BP_EnemyManager_C_DebugTargetEnemy::K2Node_DynamicCast_AsRSBattle_Player_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugTargetEnemy, K2Node_DynamicCast_bSuccess_4) == 0x000118, "Member 'BP_EnemyManager_C_DebugTargetEnemy::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugTargetEnemy, CallFunc_GetCurrentTargetActor_TargetActor) == 0x000120, "Member 'BP_EnemyManager_C_DebugTargetEnemy::CallFunc_GetCurrentTargetActor_TargetActor' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugTargetEnemy, CallFunc_GetCurrentTargetActor_TargetActor_1) == 0x000128, "Member 'BP_EnemyManager_C_DebugTargetEnemy::CallFunc_GetCurrentTargetActor_TargetActor_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugTargetEnemy, CallFunc_IsValid_ReturnValue_2) == 0x000130, "Member 'BP_EnemyManager_C_DebugTargetEnemy::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.DebugEnemySelectCommand
// 0x0040 (0x0040 - 0x0000)
struct BP_EnemyManager_C_DebugEnemySelectCommand final
{
public:
	class ARSBattleEnemy_C*                       TargetEnemy;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Command;                                           // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6079[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                L_DebugManager;                                    // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_607A[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_GetDebuggingManager_Manager;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_607B[0x2];                                     // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetEnemyEnumLength_Length;                // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyManager_C_DebugEnemySelectCommand) == 0x000008, "Wrong alignment on BP_EnemyManager_C_DebugEnemySelectCommand");
static_assert(sizeof(BP_EnemyManager_C_DebugEnemySelectCommand) == 0x000040, "Wrong size on BP_EnemyManager_C_DebugEnemySelectCommand");
static_assert(offsetof(BP_EnemyManager_C_DebugEnemySelectCommand, TargetEnemy) == 0x000000, "Member 'BP_EnemyManager_C_DebugEnemySelectCommand::TargetEnemy' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugEnemySelectCommand, Command) == 0x000008, "Member 'BP_EnemyManager_C_DebugEnemySelectCommand::Command' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugEnemySelectCommand, L_DebugManager) == 0x000010, "Member 'BP_EnemyManager_C_DebugEnemySelectCommand::L_DebugManager' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugEnemySelectCommand, Temp_int_Variable) == 0x000018, "Member 'BP_EnemyManager_C_DebugEnemySelectCommand::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugEnemySelectCommand, Temp_int_Variable_1) == 0x00001C, "Member 'BP_EnemyManager_C_DebugEnemySelectCommand::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugEnemySelectCommand, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000020, "Member 'BP_EnemyManager_C_DebugEnemySelectCommand::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugEnemySelectCommand, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'BP_EnemyManager_C_DebugEnemySelectCommand::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugEnemySelectCommand, CallFunc_GetDebuggingManager_Manager) == 0x000028, "Member 'BP_EnemyManager_C_DebugEnemySelectCommand::CallFunc_GetDebuggingManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugEnemySelectCommand, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BP_EnemyManager_C_DebugEnemySelectCommand::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugEnemySelectCommand, K2Node_SwitchInteger_CmpSuccess) == 0x000031, "Member 'BP_EnemyManager_C_DebugEnemySelectCommand::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugEnemySelectCommand, CallFunc_GetEnemyEnumLength_Length) == 0x000034, "Member 'BP_EnemyManager_C_DebugEnemySelectCommand::CallFunc_GetEnemyEnumLength_Length' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugEnemySelectCommand, CallFunc_Subtract_IntInt_ReturnValue) == 0x000038, "Member 'BP_EnemyManager_C_DebugEnemySelectCommand::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugEnemySelectCommand, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00003C, "Member 'BP_EnemyManager_C_DebugEnemySelectCommand::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.DebugENPCSelectCommand
// 0x0090 (0x0090 - 0x0000)
struct BP_EnemyManager_C_DebugENPCSelectCommand final
{
public:
	class ARSBattlePlayer_C*                      TargetENPC;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Command;                                           // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAIBattleThinkType                      NewLocalVar_0;                                     // 0x000C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_607C[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         L_length;                                          // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_607D[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFPlayerAIBattleThinkData              L_ThinkData;                                       // 0x0018(0x0018)(Edit, BlueprintVisible, HasGetValueTypeHash)
	class UObject*                                L_DebugManager;                                    // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_607E[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue_1;             // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetEnumeratorValueFromIndex_ReturnValue;  // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_607F[0x1];                                     // 0x004B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6080[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_GetDebuggingManager_Manager;              // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue_2;             // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue_3;             // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue_1;              // 0x0063(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue_2;              // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6081[0x2];                                     // 0x0066(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_StartsWith_ReturnValue;                   // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6082[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDataTable*                             CallFunc_GetCurrentThinkTable_Table;               // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyManager_C_DebugENPCSelectCommand) == 0x000008, "Wrong alignment on BP_EnemyManager_C_DebugENPCSelectCommand");
static_assert(sizeof(BP_EnemyManager_C_DebugENPCSelectCommand) == 0x000090, "Wrong size on BP_EnemyManager_C_DebugENPCSelectCommand");
static_assert(offsetof(BP_EnemyManager_C_DebugENPCSelectCommand, TargetENPC) == 0x000000, "Member 'BP_EnemyManager_C_DebugENPCSelectCommand::TargetENPC' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugENPCSelectCommand, Command) == 0x000008, "Member 'BP_EnemyManager_C_DebugENPCSelectCommand::Command' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugENPCSelectCommand, NewLocalVar_0) == 0x00000C, "Member 'BP_EnemyManager_C_DebugENPCSelectCommand::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugENPCSelectCommand, L_length) == 0x000010, "Member 'BP_EnemyManager_C_DebugENPCSelectCommand::L_length' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugENPCSelectCommand, L_ThinkData) == 0x000018, "Member 'BP_EnemyManager_C_DebugENPCSelectCommand::L_ThinkData' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugENPCSelectCommand, L_DebugManager) == 0x000030, "Member 'BP_EnemyManager_C_DebugENPCSelectCommand::L_DebugManager' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugENPCSelectCommand, Temp_int_Variable) == 0x000038, "Member 'BP_EnemyManager_C_DebugENPCSelectCommand::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugENPCSelectCommand, Temp_int_Variable_1) == 0x00003C, "Member 'BP_EnemyManager_C_DebugENPCSelectCommand::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugENPCSelectCommand, CallFunc_Conv_IntToByte_ReturnValue) == 0x000040, "Member 'BP_EnemyManager_C_DebugENPCSelectCommand::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugENPCSelectCommand, CallFunc_Add_IntInt_ReturnValue) == 0x000044, "Member 'BP_EnemyManager_C_DebugENPCSelectCommand::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugENPCSelectCommand, CallFunc_GetValidValue_ReturnValue) == 0x000048, "Member 'BP_EnemyManager_C_DebugENPCSelectCommand::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugENPCSelectCommand, CallFunc_Conv_IntToByte_ReturnValue_1) == 0x000049, "Member 'BP_EnemyManager_C_DebugENPCSelectCommand::CallFunc_Conv_IntToByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugENPCSelectCommand, CallFunc_GetEnumeratorValueFromIndex_ReturnValue) == 0x00004A, "Member 'BP_EnemyManager_C_DebugENPCSelectCommand::CallFunc_GetEnumeratorValueFromIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugENPCSelectCommand, CallFunc_Conv_ByteToInt_ReturnValue) == 0x00004C, "Member 'BP_EnemyManager_C_DebugENPCSelectCommand::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugENPCSelectCommand, CallFunc_IsValid_ReturnValue) == 0x000050, "Member 'BP_EnemyManager_C_DebugENPCSelectCommand::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugENPCSelectCommand, CallFunc_MakeLiteralInt_ReturnValue) == 0x000054, "Member 'BP_EnemyManager_C_DebugENPCSelectCommand::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugENPCSelectCommand, CallFunc_GetDebuggingManager_Manager) == 0x000058, "Member 'BP_EnemyManager_C_DebugENPCSelectCommand::CallFunc_GetDebuggingManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugENPCSelectCommand, CallFunc_Less_IntInt_ReturnValue) == 0x000060, "Member 'BP_EnemyManager_C_DebugENPCSelectCommand::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugENPCSelectCommand, CallFunc_Conv_IntToByte_ReturnValue_2) == 0x000061, "Member 'BP_EnemyManager_C_DebugENPCSelectCommand::CallFunc_Conv_IntToByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugENPCSelectCommand, CallFunc_Conv_IntToByte_ReturnValue_3) == 0x000062, "Member 'BP_EnemyManager_C_DebugENPCSelectCommand::CallFunc_Conv_IntToByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugENPCSelectCommand, CallFunc_GetValidValue_ReturnValue_1) == 0x000063, "Member 'BP_EnemyManager_C_DebugENPCSelectCommand::CallFunc_GetValidValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugENPCSelectCommand, CallFunc_GetValidValue_ReturnValue_2) == 0x000064, "Member 'BP_EnemyManager_C_DebugENPCSelectCommand::CallFunc_GetValidValue_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugENPCSelectCommand, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000065, "Member 'BP_EnemyManager_C_DebugENPCSelectCommand::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugENPCSelectCommand, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000068, "Member 'BP_EnemyManager_C_DebugENPCSelectCommand::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugENPCSelectCommand, CallFunc_StartsWith_ReturnValue) == 0x000078, "Member 'BP_EnemyManager_C_DebugENPCSelectCommand::CallFunc_StartsWith_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugENPCSelectCommand, CallFunc_GetCurrentThinkTable_Table) == 0x000080, "Member 'BP_EnemyManager_C_DebugENPCSelectCommand::CallFunc_GetCurrentThinkTable_Table' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugENPCSelectCommand, CallFunc_IsValid_ReturnValue_1) == 0x000088, "Member 'BP_EnemyManager_C_DebugENPCSelectCommand::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.DebugUpdate
// 0x0058 (0x0058 - 0x0000)
struct BP_EnemyManager_C_DebugUpdate final
{
public:
	class AActor*                                 EnemyActor;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         EnemyIndex;                                        // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6083[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                L_DebuggingManager;                                // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattlePlayer_C*                      L_ENPCActor;                                       // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_GetDebuggingManager_Manager;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6084[0x5];                                     // 0x002B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattlePlayer_C*                      K2Node_DynamicCast_AsRSBattle_Player;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6085[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_StartsWith_ReturnValue;                   // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerAIBattleThinkType                      CallFunc_GetCurrentBattleThink_NewParam;           // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0053(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyManager_C_DebugUpdate) == 0x000008, "Wrong alignment on BP_EnemyManager_C_DebugUpdate");
static_assert(sizeof(BP_EnemyManager_C_DebugUpdate) == 0x000058, "Wrong size on BP_EnemyManager_C_DebugUpdate");
static_assert(offsetof(BP_EnemyManager_C_DebugUpdate, EnemyActor) == 0x000000, "Member 'BP_EnemyManager_C_DebugUpdate::EnemyActor' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugUpdate, EnemyIndex) == 0x000008, "Member 'BP_EnemyManager_C_DebugUpdate::EnemyIndex' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugUpdate, L_DebuggingManager) == 0x000010, "Member 'BP_EnemyManager_C_DebugUpdate::L_DebuggingManager' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugUpdate, L_ENPCActor) == 0x000018, "Member 'BP_EnemyManager_C_DebugUpdate::L_ENPCActor' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugUpdate, CallFunc_GetDebuggingManager_Manager) == 0x000020, "Member 'BP_EnemyManager_C_DebugUpdate::CallFunc_GetDebuggingManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugUpdate, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BP_EnemyManager_C_DebugUpdate::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugUpdate, CallFunc_Conv_IntToByte_ReturnValue) == 0x000029, "Member 'BP_EnemyManager_C_DebugUpdate::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugUpdate, CallFunc_GetValidValue_ReturnValue) == 0x00002A, "Member 'BP_EnemyManager_C_DebugUpdate::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugUpdate, K2Node_DynamicCast_AsRSBattle_Player) == 0x000030, "Member 'BP_EnemyManager_C_DebugUpdate::K2Node_DynamicCast_AsRSBattle_Player' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugUpdate, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_EnemyManager_C_DebugUpdate::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugUpdate, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000040, "Member 'BP_EnemyManager_C_DebugUpdate::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugUpdate, CallFunc_StartsWith_ReturnValue) == 0x000050, "Member 'BP_EnemyManager_C_DebugUpdate::CallFunc_StartsWith_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugUpdate, CallFunc_GetCurrentBattleThink_NewParam) == 0x000051, "Member 'BP_EnemyManager_C_DebugUpdate::CallFunc_GetCurrentBattleThink_NewParam' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugUpdate, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000052, "Member 'BP_EnemyManager_C_DebugUpdate::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugUpdate, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000053, "Member 'BP_EnemyManager_C_DebugUpdate::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugUpdate, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000054, "Member 'BP_EnemyManager_C_DebugUpdate::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.GetSubGroupEnemyCount
// 0x0088 (0x0088 - 0x0000)
struct BP_EnemyManager_C_GetSubGroupEnemyCount final
{
public:
	int32                                         CheckGroupdID;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CheckSubGroupID;                                   // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CheckSpawnConditionNow;                            // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6086[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         GroupCount;                                        // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ARSCharacterBase*>               LEnemyList;                                        // 0x0010(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	int32                                         Count;                                             // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6087[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6088[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattleCharacter_C*                   K2Node_DynamicCast_AsRSBattle_Character;           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6089[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CharacterParamater_C> CallFunc_IsDead_self_CastInput;                    // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDead_bDead;                             // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAbleCountSpawnCondition_IsCountOK;      // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_608A[0x1];                                     // 0x006B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_608B[0x7];                                     // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ARSCharacterBase*>               CallFunc_GetEnemyList_ReturnValue;                 // 0x0078(0x0010)(ReferenceParm, HasGetValueTypeHash)
};
static_assert(alignof(BP_EnemyManager_C_GetSubGroupEnemyCount) == 0x000008, "Wrong alignment on BP_EnemyManager_C_GetSubGroupEnemyCount");
static_assert(sizeof(BP_EnemyManager_C_GetSubGroupEnemyCount) == 0x000088, "Wrong size on BP_EnemyManager_C_GetSubGroupEnemyCount");
static_assert(offsetof(BP_EnemyManager_C_GetSubGroupEnemyCount, CheckGroupdID) == 0x000000, "Member 'BP_EnemyManager_C_GetSubGroupEnemyCount::CheckGroupdID' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_GetSubGroupEnemyCount, CheckSubGroupID) == 0x000004, "Member 'BP_EnemyManager_C_GetSubGroupEnemyCount::CheckSubGroupID' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_GetSubGroupEnemyCount, CheckSpawnConditionNow) == 0x000008, "Member 'BP_EnemyManager_C_GetSubGroupEnemyCount::CheckSpawnConditionNow' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_GetSubGroupEnemyCount, GroupCount) == 0x00000C, "Member 'BP_EnemyManager_C_GetSubGroupEnemyCount::GroupCount' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_GetSubGroupEnemyCount, LEnemyList) == 0x000010, "Member 'BP_EnemyManager_C_GetSubGroupEnemyCount::LEnemyList' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_GetSubGroupEnemyCount, Count) == 0x000020, "Member 'BP_EnemyManager_C_GetSubGroupEnemyCount::Count' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_GetSubGroupEnemyCount, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'BP_EnemyManager_C_GetSubGroupEnemyCount::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_GetSubGroupEnemyCount, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_EnemyManager_C_GetSubGroupEnemyCount::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_GetSubGroupEnemyCount, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'BP_EnemyManager_C_GetSubGroupEnemyCount::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_GetSubGroupEnemyCount, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'BP_EnemyManager_C_GetSubGroupEnemyCount::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_GetSubGroupEnemyCount, Temp_int_Array_Index_Variable) == 0x000034, "Member 'BP_EnemyManager_C_GetSubGroupEnemyCount::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_GetSubGroupEnemyCount, Temp_int_Variable) == 0x000038, "Member 'BP_EnemyManager_C_GetSubGroupEnemyCount::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_GetSubGroupEnemyCount, CallFunc_Array_Get_Item) == 0x000040, "Member 'BP_EnemyManager_C_GetSubGroupEnemyCount::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_GetSubGroupEnemyCount, K2Node_DynamicCast_AsRSBattle_Character) == 0x000048, "Member 'BP_EnemyManager_C_GetSubGroupEnemyCount::K2Node_DynamicCast_AsRSBattle_Character' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_GetSubGroupEnemyCount, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'BP_EnemyManager_C_GetSubGroupEnemyCount::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_GetSubGroupEnemyCount, CallFunc_IsDead_self_CastInput) == 0x000058, "Member 'BP_EnemyManager_C_GetSubGroupEnemyCount::CallFunc_IsDead_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_GetSubGroupEnemyCount, CallFunc_IsDead_bDead) == 0x000068, "Member 'BP_EnemyManager_C_GetSubGroupEnemyCount::CallFunc_IsDead_bDead' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_GetSubGroupEnemyCount, CallFunc_IsAbleCountSpawnCondition_IsCountOK) == 0x000069, "Member 'BP_EnemyManager_C_GetSubGroupEnemyCount::CallFunc_IsAbleCountSpawnCondition_IsCountOK' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_GetSubGroupEnemyCount, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00006A, "Member 'BP_EnemyManager_C_GetSubGroupEnemyCount::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_GetSubGroupEnemyCount, CallFunc_Add_IntInt_ReturnValue_1) == 0x00006C, "Member 'BP_EnemyManager_C_GetSubGroupEnemyCount::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_GetSubGroupEnemyCount, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000070, "Member 'BP_EnemyManager_C_GetSubGroupEnemyCount::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_GetSubGroupEnemyCount, CallFunc_GetEnemyList_ReturnValue) == 0x000078, "Member 'BP_EnemyManager_C_GetSubGroupEnemyCount::CallFunc_GetEnemyList_ReturnValue' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.SpawnAllEnemiesInSubGroup
// 0x00C0 (0x00C0 - 0x0000)
struct BP_EnemyManager_C_SpawnAllEnemiesInSubGroup final
{
public:
	int32                                         GroupID;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SubGroupID;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ARSBattleCharacter_C*>           WaveEnemies;                                       // 0x0008(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	TArray<class ARSCharacterBase*>               Enemies;                                           // 0x0018(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattleCharacter_C*                   CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_608C[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_EnemyInterface_C> K2Node_DynamicCast_AsBPI_Enemy_Interface;          // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SpawnStart_Return;                        // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_608D[0x5];                                     // 0x005B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ARSCharacterBase*>               CallFunc_GetEnemyList_ReturnValue;                 // 0x0060(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_608E[0x7];                                     // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattleCharacter_C*                   K2Node_DynamicCast_AsRSBattle_Character;           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_608F[0x3];                                     // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6090[0x6];                                     // 0x008A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CharacterParamater_C> CallFunc_IsDead_self_CastInput;                    // 0x0090(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDead_bDead;                             // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6091[0x2];                                     // 0x00A2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BrainFieldManager_C*                CallFunc_GetBrainFieldManager_Manager;             // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6092[0x2];                                     // 0x00B6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InBranField_InBrainDield;                 // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyManager_C_SpawnAllEnemiesInSubGroup) == 0x000008, "Wrong alignment on BP_EnemyManager_C_SpawnAllEnemiesInSubGroup");
static_assert(sizeof(BP_EnemyManager_C_SpawnAllEnemiesInSubGroup) == 0x0000C0, "Wrong size on BP_EnemyManager_C_SpawnAllEnemiesInSubGroup");
static_assert(offsetof(BP_EnemyManager_C_SpawnAllEnemiesInSubGroup, GroupID) == 0x000000, "Member 'BP_EnemyManager_C_SpawnAllEnemiesInSubGroup::GroupID' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SpawnAllEnemiesInSubGroup, SubGroupID) == 0x000004, "Member 'BP_EnemyManager_C_SpawnAllEnemiesInSubGroup::SubGroupID' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SpawnAllEnemiesInSubGroup, WaveEnemies) == 0x000008, "Member 'BP_EnemyManager_C_SpawnAllEnemiesInSubGroup::WaveEnemies' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SpawnAllEnemiesInSubGroup, Enemies) == 0x000018, "Member 'BP_EnemyManager_C_SpawnAllEnemiesInSubGroup::Enemies' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SpawnAllEnemiesInSubGroup, Temp_int_Variable) == 0x000028, "Member 'BP_EnemyManager_C_SpawnAllEnemiesInSubGroup::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SpawnAllEnemiesInSubGroup, Temp_int_Array_Index_Variable) == 0x00002C, "Member 'BP_EnemyManager_C_SpawnAllEnemiesInSubGroup::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SpawnAllEnemiesInSubGroup, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'BP_EnemyManager_C_SpawnAllEnemiesInSubGroup::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SpawnAllEnemiesInSubGroup, Temp_int_Loop_Num_Variable) == 0x000034, "Member 'BP_EnemyManager_C_SpawnAllEnemiesInSubGroup::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SpawnAllEnemiesInSubGroup, CallFunc_Array_Get_Item) == 0x000038, "Member 'BP_EnemyManager_C_SpawnAllEnemiesInSubGroup::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SpawnAllEnemiesInSubGroup, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'BP_EnemyManager_C_SpawnAllEnemiesInSubGroup::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SpawnAllEnemiesInSubGroup, K2Node_DynamicCast_AsBPI_Enemy_Interface) == 0x000048, "Member 'BP_EnemyManager_C_SpawnAllEnemiesInSubGroup::K2Node_DynamicCast_AsBPI_Enemy_Interface' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SpawnAllEnemiesInSubGroup, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'BP_EnemyManager_C_SpawnAllEnemiesInSubGroup::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SpawnAllEnemiesInSubGroup, CallFunc_Less_IntInt_ReturnValue) == 0x000059, "Member 'BP_EnemyManager_C_SpawnAllEnemiesInSubGroup::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SpawnAllEnemiesInSubGroup, CallFunc_SpawnStart_Return) == 0x00005A, "Member 'BP_EnemyManager_C_SpawnAllEnemiesInSubGroup::CallFunc_SpawnStart_Return' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SpawnAllEnemiesInSubGroup, CallFunc_GetEnemyList_ReturnValue) == 0x000060, "Member 'BP_EnemyManager_C_SpawnAllEnemiesInSubGroup::CallFunc_GetEnemyList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SpawnAllEnemiesInSubGroup, CallFunc_IsValid_ReturnValue) == 0x000070, "Member 'BP_EnemyManager_C_SpawnAllEnemiesInSubGroup::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SpawnAllEnemiesInSubGroup, K2Node_DynamicCast_AsRSBattle_Character) == 0x000078, "Member 'BP_EnemyManager_C_SpawnAllEnemiesInSubGroup::K2Node_DynamicCast_AsRSBattle_Character' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SpawnAllEnemiesInSubGroup, K2Node_DynamicCast_bSuccess_1) == 0x000080, "Member 'BP_EnemyManager_C_SpawnAllEnemiesInSubGroup::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SpawnAllEnemiesInSubGroup, CallFunc_Array_Add_ReturnValue) == 0x000084, "Member 'BP_EnemyManager_C_SpawnAllEnemiesInSubGroup::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SpawnAllEnemiesInSubGroup, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000088, "Member 'BP_EnemyManager_C_SpawnAllEnemiesInSubGroup::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SpawnAllEnemiesInSubGroup, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000089, "Member 'BP_EnemyManager_C_SpawnAllEnemiesInSubGroup::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SpawnAllEnemiesInSubGroup, CallFunc_IsDead_self_CastInput) == 0x000090, "Member 'BP_EnemyManager_C_SpawnAllEnemiesInSubGroup::CallFunc_IsDead_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SpawnAllEnemiesInSubGroup, CallFunc_IsDead_bDead) == 0x0000A0, "Member 'BP_EnemyManager_C_SpawnAllEnemiesInSubGroup::CallFunc_IsDead_bDead' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SpawnAllEnemiesInSubGroup, CallFunc_BooleanAND_ReturnValue) == 0x0000A1, "Member 'BP_EnemyManager_C_SpawnAllEnemiesInSubGroup::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SpawnAllEnemiesInSubGroup, CallFunc_Array_Length_ReturnValue_1) == 0x0000A4, "Member 'BP_EnemyManager_C_SpawnAllEnemiesInSubGroup::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SpawnAllEnemiesInSubGroup, CallFunc_GetBrainFieldManager_Manager) == 0x0000A8, "Member 'BP_EnemyManager_C_SpawnAllEnemiesInSubGroup::CallFunc_GetBrainFieldManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SpawnAllEnemiesInSubGroup, Temp_int_Loop_Counter_Variable) == 0x0000B0, "Member 'BP_EnemyManager_C_SpawnAllEnemiesInSubGroup::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SpawnAllEnemiesInSubGroup, CallFunc_IsValid_ReturnValue_1) == 0x0000B4, "Member 'BP_EnemyManager_C_SpawnAllEnemiesInSubGroup::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SpawnAllEnemiesInSubGroup, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000B5, "Member 'BP_EnemyManager_C_SpawnAllEnemiesInSubGroup::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SpawnAllEnemiesInSubGroup, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000B8, "Member 'BP_EnemyManager_C_SpawnAllEnemiesInSubGroup::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SpawnAllEnemiesInSubGroup, CallFunc_InBranField_InBrainDield) == 0x0000BC, "Member 'BP_EnemyManager_C_SpawnAllEnemiesInSubGroup::CallFunc_InBranField_InBrainDield' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.SpawnEnemyByName
// 0x0008 (0x0008 - 0x0000)
struct BP_EnemyManager_C_SpawnEnemyByName final
{
public:
	class FName                                   EnemyName;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EnemyManager_C_SpawnEnemyByName) == 0x000004, "Wrong alignment on BP_EnemyManager_C_SpawnEnemyByName");
static_assert(sizeof(BP_EnemyManager_C_SpawnEnemyByName) == 0x000008, "Wrong size on BP_EnemyManager_C_SpawnEnemyByName");
static_assert(offsetof(BP_EnemyManager_C_SpawnEnemyByName, EnemyName) == 0x000000, "Member 'BP_EnemyManager_C_SpawnEnemyByName::EnemyName' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.SpawnOneEnemyInSubGroup
// 0x0078 (0x0078 - 0x0000)
struct BP_EnemyManager_C_SpawnOneEnemyInSubGroup final
{
public:
	int32                                         GroupID;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SubGroupID;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SpawnOK;                                           // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6093[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ARSCharacterBase*>               CallFunc_GetEnemyList_ReturnValue;                 // 0x0010(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6094[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattleCharacter_C*                   K2Node_DynamicCast_AsRSBattle_Character;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6095[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_EnemyInterface_C> K2Node_DynamicCast_AsBPI_Enemy_Interface;          // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SpawnStart_Return;                        // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6096[0x5];                                     // 0x0053(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CharacterParamater_C> CallFunc_IsDead_self_CastInput;                    // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDead_bDead;                             // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6097[0x1];                                     // 0x006B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyManager_C_SpawnOneEnemyInSubGroup) == 0x000008, "Wrong alignment on BP_EnemyManager_C_SpawnOneEnemyInSubGroup");
static_assert(sizeof(BP_EnemyManager_C_SpawnOneEnemyInSubGroup) == 0x000078, "Wrong size on BP_EnemyManager_C_SpawnOneEnemyInSubGroup");
static_assert(offsetof(BP_EnemyManager_C_SpawnOneEnemyInSubGroup, GroupID) == 0x000000, "Member 'BP_EnemyManager_C_SpawnOneEnemyInSubGroup::GroupID' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SpawnOneEnemyInSubGroup, SubGroupID) == 0x000004, "Member 'BP_EnemyManager_C_SpawnOneEnemyInSubGroup::SubGroupID' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SpawnOneEnemyInSubGroup, SpawnOK) == 0x000008, "Member 'BP_EnemyManager_C_SpawnOneEnemyInSubGroup::SpawnOK' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SpawnOneEnemyInSubGroup, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'BP_EnemyManager_C_SpawnOneEnemyInSubGroup::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SpawnOneEnemyInSubGroup, CallFunc_GetEnemyList_ReturnValue) == 0x000010, "Member 'BP_EnemyManager_C_SpawnOneEnemyInSubGroup::CallFunc_GetEnemyList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SpawnOneEnemyInSubGroup, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'BP_EnemyManager_C_SpawnOneEnemyInSubGroup::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SpawnOneEnemyInSubGroup, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_EnemyManager_C_SpawnOneEnemyInSubGroup::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SpawnOneEnemyInSubGroup, K2Node_DynamicCast_AsRSBattle_Character) == 0x000030, "Member 'BP_EnemyManager_C_SpawnOneEnemyInSubGroup::K2Node_DynamicCast_AsRSBattle_Character' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SpawnOneEnemyInSubGroup, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_EnemyManager_C_SpawnOneEnemyInSubGroup::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SpawnOneEnemyInSubGroup, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'BP_EnemyManager_C_SpawnOneEnemyInSubGroup::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SpawnOneEnemyInSubGroup, K2Node_DynamicCast_AsBPI_Enemy_Interface) == 0x000040, "Member 'BP_EnemyManager_C_SpawnOneEnemyInSubGroup::K2Node_DynamicCast_AsBPI_Enemy_Interface' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SpawnOneEnemyInSubGroup, K2Node_DynamicCast_bSuccess_1) == 0x000050, "Member 'BP_EnemyManager_C_SpawnOneEnemyInSubGroup::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SpawnOneEnemyInSubGroup, CallFunc_SpawnStart_Return) == 0x000051, "Member 'BP_EnemyManager_C_SpawnOneEnemyInSubGroup::CallFunc_SpawnStart_Return' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SpawnOneEnemyInSubGroup, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000052, "Member 'BP_EnemyManager_C_SpawnOneEnemyInSubGroup::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SpawnOneEnemyInSubGroup, CallFunc_IsDead_self_CastInput) == 0x000058, "Member 'BP_EnemyManager_C_SpawnOneEnemyInSubGroup::CallFunc_IsDead_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SpawnOneEnemyInSubGroup, CallFunc_IsDead_bDead) == 0x000068, "Member 'BP_EnemyManager_C_SpawnOneEnemyInSubGroup::CallFunc_IsDead_bDead' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SpawnOneEnemyInSubGroup, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000069, "Member 'BP_EnemyManager_C_SpawnOneEnemyInSubGroup::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SpawnOneEnemyInSubGroup, CallFunc_BooleanAND_ReturnValue) == 0x00006A, "Member 'BP_EnemyManager_C_SpawnOneEnemyInSubGroup::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SpawnOneEnemyInSubGroup, CallFunc_Array_Length_ReturnValue) == 0x00006C, "Member 'BP_EnemyManager_C_SpawnOneEnemyInSubGroup::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SpawnOneEnemyInSubGroup, CallFunc_Less_IntInt_ReturnValue) == 0x000070, "Member 'BP_EnemyManager_C_SpawnOneEnemyInSubGroup::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.SpawnAllEnemiesInGroup
// 0x0078 (0x0078 - 0x0000)
struct BP_EnemyManager_C_SpawnAllEnemiesInGroup final
{
public:
	int32                                         GroupID;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SubGroupID;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6098[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ARSCharacterBase*>               CallFunc_GetEnemyList_ReturnValue;                 // 0x0010(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6099[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattleCharacter_C*                   K2Node_DynamicCast_AsRSBattle_Character;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_609A[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_EnemyInterface_C> K2Node_DynamicCast_AsBPI_Enemy_Interface;          // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SpawnStart_Return;                        // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_609B[0x5];                                     // 0x0053(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CharacterParamater_C> CallFunc_IsDead_self_CastInput;                    // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDead_bDead;                             // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_609C[0x3];                                     // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyManager_C_SpawnAllEnemiesInGroup) == 0x000008, "Wrong alignment on BP_EnemyManager_C_SpawnAllEnemiesInGroup");
static_assert(sizeof(BP_EnemyManager_C_SpawnAllEnemiesInGroup) == 0x000078, "Wrong size on BP_EnemyManager_C_SpawnAllEnemiesInGroup");
static_assert(offsetof(BP_EnemyManager_C_SpawnAllEnemiesInGroup, GroupID) == 0x000000, "Member 'BP_EnemyManager_C_SpawnAllEnemiesInGroup::GroupID' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SpawnAllEnemiesInGroup, SubGroupID) == 0x000004, "Member 'BP_EnemyManager_C_SpawnAllEnemiesInGroup::SubGroupID' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SpawnAllEnemiesInGroup, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_EnemyManager_C_SpawnAllEnemiesInGroup::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SpawnAllEnemiesInGroup, CallFunc_GetEnemyList_ReturnValue) == 0x000010, "Member 'BP_EnemyManager_C_SpawnAllEnemiesInGroup::CallFunc_GetEnemyList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SpawnAllEnemiesInGroup, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'BP_EnemyManager_C_SpawnAllEnemiesInGroup::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SpawnAllEnemiesInGroup, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_EnemyManager_C_SpawnAllEnemiesInGroup::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SpawnAllEnemiesInGroup, K2Node_DynamicCast_AsRSBattle_Character) == 0x000030, "Member 'BP_EnemyManager_C_SpawnAllEnemiesInGroup::K2Node_DynamicCast_AsRSBattle_Character' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SpawnAllEnemiesInGroup, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_EnemyManager_C_SpawnAllEnemiesInGroup::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SpawnAllEnemiesInGroup, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'BP_EnemyManager_C_SpawnAllEnemiesInGroup::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SpawnAllEnemiesInGroup, K2Node_DynamicCast_AsBPI_Enemy_Interface) == 0x000040, "Member 'BP_EnemyManager_C_SpawnAllEnemiesInGroup::K2Node_DynamicCast_AsBPI_Enemy_Interface' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SpawnAllEnemiesInGroup, K2Node_DynamicCast_bSuccess_1) == 0x000050, "Member 'BP_EnemyManager_C_SpawnAllEnemiesInGroup::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SpawnAllEnemiesInGroup, CallFunc_SpawnStart_Return) == 0x000051, "Member 'BP_EnemyManager_C_SpawnAllEnemiesInGroup::CallFunc_SpawnStart_Return' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SpawnAllEnemiesInGroup, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000052, "Member 'BP_EnemyManager_C_SpawnAllEnemiesInGroup::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SpawnAllEnemiesInGroup, CallFunc_IsDead_self_CastInput) == 0x000058, "Member 'BP_EnemyManager_C_SpawnAllEnemiesInGroup::CallFunc_IsDead_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SpawnAllEnemiesInGroup, CallFunc_IsDead_bDead) == 0x000068, "Member 'BP_EnemyManager_C_SpawnAllEnemiesInGroup::CallFunc_IsDead_bDead' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SpawnAllEnemiesInGroup, CallFunc_Array_Length_ReturnValue) == 0x00006C, "Member 'BP_EnemyManager_C_SpawnAllEnemiesInGroup::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SpawnAllEnemiesInGroup, CallFunc_Less_IntInt_ReturnValue) == 0x000070, "Member 'BP_EnemyManager_C_SpawnAllEnemiesInGroup::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.KillEnemy
// 0x0030 (0x0030 - 0x0000)
struct BP_EnemyManager_C_KillEnemy final
{
public:
	class ARSCharacterBase*                       Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattleCharacter_C*                   K2Node_DynamicCast_AsRSBattle_Character;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_609D[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CharacterParamater_C> CallFunc_SetHP_self_CastInput;                     // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetHP_bDummy;                             // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CallDead_Dummy;                           // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyManager_C_KillEnemy) == 0x000008, "Wrong alignment on BP_EnemyManager_C_KillEnemy");
static_assert(sizeof(BP_EnemyManager_C_KillEnemy) == 0x000030, "Wrong size on BP_EnemyManager_C_KillEnemy");
static_assert(offsetof(BP_EnemyManager_C_KillEnemy, Actor) == 0x000000, "Member 'BP_EnemyManager_C_KillEnemy::Actor' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_KillEnemy, K2Node_DynamicCast_AsRSBattle_Character) == 0x000008, "Member 'BP_EnemyManager_C_KillEnemy::K2Node_DynamicCast_AsRSBattle_Character' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_KillEnemy, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_EnemyManager_C_KillEnemy::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_KillEnemy, CallFunc_SetHP_self_CastInput) == 0x000018, "Member 'BP_EnemyManager_C_KillEnemy::CallFunc_SetHP_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_KillEnemy, CallFunc_SetHP_bDummy) == 0x000028, "Member 'BP_EnemyManager_C_KillEnemy::CallFunc_SetHP_bDummy' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_KillEnemy, CallFunc_CallDead_Dummy) == 0x000029, "Member 'BP_EnemyManager_C_KillEnemy::CallFunc_CallDead_Dummy' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.KillAllEnemiesInGroup
// 0x0060 (0x0060 - 0x0000)
struct BP_EnemyManager_C_KillAllEnemiesInGroup final
{
public:
	int32                                         GroupID;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SubGroupID;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_609E[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ARSCharacterBase*>               CallFunc_GetEnemyList_ReturnValue;                 // 0x0010(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_609F[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattleCharacter_C*                   K2Node_DynamicCast_AsRSBattle_Character;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_60A0[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_CharacterParamater_C> CallFunc_IsDead_self_CastInput;                    // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDead_bDead;                             // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_60A1[0x2];                                     // 0x0052(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyManager_C_KillAllEnemiesInGroup) == 0x000008, "Wrong alignment on BP_EnemyManager_C_KillAllEnemiesInGroup");
static_assert(sizeof(BP_EnemyManager_C_KillAllEnemiesInGroup) == 0x000060, "Wrong size on BP_EnemyManager_C_KillAllEnemiesInGroup");
static_assert(offsetof(BP_EnemyManager_C_KillAllEnemiesInGroup, GroupID) == 0x000000, "Member 'BP_EnemyManager_C_KillAllEnemiesInGroup::GroupID' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_KillAllEnemiesInGroup, SubGroupID) == 0x000004, "Member 'BP_EnemyManager_C_KillAllEnemiesInGroup::SubGroupID' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_KillAllEnemiesInGroup, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_EnemyManager_C_KillAllEnemiesInGroup::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_KillAllEnemiesInGroup, CallFunc_GetEnemyList_ReturnValue) == 0x000010, "Member 'BP_EnemyManager_C_KillAllEnemiesInGroup::CallFunc_GetEnemyList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_KillAllEnemiesInGroup, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'BP_EnemyManager_C_KillAllEnemiesInGroup::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_KillAllEnemiesInGroup, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_EnemyManager_C_KillAllEnemiesInGroup::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_KillAllEnemiesInGroup, K2Node_DynamicCast_AsRSBattle_Character) == 0x000030, "Member 'BP_EnemyManager_C_KillAllEnemiesInGroup::K2Node_DynamicCast_AsRSBattle_Character' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_KillAllEnemiesInGroup, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_EnemyManager_C_KillAllEnemiesInGroup::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_KillAllEnemiesInGroup, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'BP_EnemyManager_C_KillAllEnemiesInGroup::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_KillAllEnemiesInGroup, CallFunc_IsDead_self_CastInput) == 0x000040, "Member 'BP_EnemyManager_C_KillAllEnemiesInGroup::CallFunc_IsDead_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_KillAllEnemiesInGroup, CallFunc_IsDead_bDead) == 0x000050, "Member 'BP_EnemyManager_C_KillAllEnemiesInGroup::CallFunc_IsDead_bDead' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_KillAllEnemiesInGroup, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000051, "Member 'BP_EnemyManager_C_KillAllEnemiesInGroup::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_KillAllEnemiesInGroup, CallFunc_Array_Length_ReturnValue) == 0x000054, "Member 'BP_EnemyManager_C_KillAllEnemiesInGroup::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_KillAllEnemiesInGroup, CallFunc_Less_IntInt_ReturnValue) == 0x000058, "Member 'BP_EnemyManager_C_KillAllEnemiesInGroup::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.KillAllEnemiesInSubGroup
// 0x0068 (0x0068 - 0x0000)
struct BP_EnemyManager_C_KillAllEnemiesInSubGroup final
{
public:
	int32                                         GroupID;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SubGroupID;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_60A2[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ARSCharacterBase*>               CallFunc_GetEnemyList_ReturnValue;                 // 0x0010(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_60A3[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattleCharacter_C*                   K2Node_DynamicCast_AsRSBattle_Character;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_60A4[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_60A5[0x6];                                     // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CharacterParamater_C> CallFunc_IsDead_self_CastInput;                    // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDead_bDead;                             // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_60A6[0x2];                                     // 0x005A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyManager_C_KillAllEnemiesInSubGroup) == 0x000008, "Wrong alignment on BP_EnemyManager_C_KillAllEnemiesInSubGroup");
static_assert(sizeof(BP_EnemyManager_C_KillAllEnemiesInSubGroup) == 0x000068, "Wrong size on BP_EnemyManager_C_KillAllEnemiesInSubGroup");
static_assert(offsetof(BP_EnemyManager_C_KillAllEnemiesInSubGroup, GroupID) == 0x000000, "Member 'BP_EnemyManager_C_KillAllEnemiesInSubGroup::GroupID' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_KillAllEnemiesInSubGroup, SubGroupID) == 0x000004, "Member 'BP_EnemyManager_C_KillAllEnemiesInSubGroup::SubGroupID' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_KillAllEnemiesInSubGroup, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_EnemyManager_C_KillAllEnemiesInSubGroup::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_KillAllEnemiesInSubGroup, CallFunc_GetEnemyList_ReturnValue) == 0x000010, "Member 'BP_EnemyManager_C_KillAllEnemiesInSubGroup::CallFunc_GetEnemyList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_KillAllEnemiesInSubGroup, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'BP_EnemyManager_C_KillAllEnemiesInSubGroup::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_KillAllEnemiesInSubGroup, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_EnemyManager_C_KillAllEnemiesInSubGroup::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_KillAllEnemiesInSubGroup, K2Node_DynamicCast_AsRSBattle_Character) == 0x000030, "Member 'BP_EnemyManager_C_KillAllEnemiesInSubGroup::K2Node_DynamicCast_AsRSBattle_Character' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_KillAllEnemiesInSubGroup, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_EnemyManager_C_KillAllEnemiesInSubGroup::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_KillAllEnemiesInSubGroup, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'BP_EnemyManager_C_KillAllEnemiesInSubGroup::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_KillAllEnemiesInSubGroup, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000040, "Member 'BP_EnemyManager_C_KillAllEnemiesInSubGroup::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_KillAllEnemiesInSubGroup, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000041, "Member 'BP_EnemyManager_C_KillAllEnemiesInSubGroup::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_KillAllEnemiesInSubGroup, CallFunc_IsDead_self_CastInput) == 0x000048, "Member 'BP_EnemyManager_C_KillAllEnemiesInSubGroup::CallFunc_IsDead_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_KillAllEnemiesInSubGroup, CallFunc_IsDead_bDead) == 0x000058, "Member 'BP_EnemyManager_C_KillAllEnemiesInSubGroup::CallFunc_IsDead_bDead' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_KillAllEnemiesInSubGroup, CallFunc_BooleanAND_ReturnValue) == 0x000059, "Member 'BP_EnemyManager_C_KillAllEnemiesInSubGroup::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_KillAllEnemiesInSubGroup, CallFunc_Array_Length_ReturnValue) == 0x00005C, "Member 'BP_EnemyManager_C_KillAllEnemiesInSubGroup::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_KillAllEnemiesInSubGroup, CallFunc_Less_IntInt_ReturnValue) == 0x000060, "Member 'BP_EnemyManager_C_KillAllEnemiesInSubGroup::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.CheckSeeEnemy
// 0x0030 (0x0030 - 0x0000)
struct BP_EnemyManager_C_CheckSeeEnemy final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TargetLocation;                                    // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSeeEnemy;                                        // 0x0014(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_60A7[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                L_DebugManager;                                    // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_CameraLocation;                                  // 0x0020(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          L_IsSeeEnemy;                                      // 0x002C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_WasRecentlyRendered_ReturnValue;          // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyManager_C_CheckSeeEnemy) == 0x000008, "Wrong alignment on BP_EnemyManager_C_CheckSeeEnemy");
static_assert(sizeof(BP_EnemyManager_C_CheckSeeEnemy) == 0x000030, "Wrong size on BP_EnemyManager_C_CheckSeeEnemy");
static_assert(offsetof(BP_EnemyManager_C_CheckSeeEnemy, Actor) == 0x000000, "Member 'BP_EnemyManager_C_CheckSeeEnemy::Actor' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_CheckSeeEnemy, TargetLocation) == 0x000008, "Member 'BP_EnemyManager_C_CheckSeeEnemy::TargetLocation' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_CheckSeeEnemy, IsSeeEnemy) == 0x000014, "Member 'BP_EnemyManager_C_CheckSeeEnemy::IsSeeEnemy' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_CheckSeeEnemy, L_DebugManager) == 0x000018, "Member 'BP_EnemyManager_C_CheckSeeEnemy::L_DebugManager' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_CheckSeeEnemy, L_CameraLocation) == 0x000020, "Member 'BP_EnemyManager_C_CheckSeeEnemy::L_CameraLocation' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_CheckSeeEnemy, L_IsSeeEnemy) == 0x00002C, "Member 'BP_EnemyManager_C_CheckSeeEnemy::L_IsSeeEnemy' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_CheckSeeEnemy, CallFunc_IsValid_ReturnValue) == 0x00002D, "Member 'BP_EnemyManager_C_CheckSeeEnemy::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_CheckSeeEnemy, CallFunc_WasRecentlyRendered_ReturnValue) == 0x00002E, "Member 'BP_EnemyManager_C_CheckSeeEnemy::CallFunc_WasRecentlyRendered_ReturnValue' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.EntryBrainCrashAccess
// 0x0010 (0x0010 - 0x0000)
struct BP_EnemyManager_C_EntryBrainCrashAccess final
{
public:
	class ARSBattleCharacter_C*                   Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Dummy;                                             // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyManager_C_EntryBrainCrashAccess) == 0x000008, "Wrong alignment on BP_EnemyManager_C_EntryBrainCrashAccess");
static_assert(sizeof(BP_EnemyManager_C_EntryBrainCrashAccess) == 0x000010, "Wrong size on BP_EnemyManager_C_EntryBrainCrashAccess");
static_assert(offsetof(BP_EnemyManager_C_EntryBrainCrashAccess, Character) == 0x000000, "Member 'BP_EnemyManager_C_EntryBrainCrashAccess::Character' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_EntryBrainCrashAccess, Dummy) == 0x000008, "Member 'BP_EnemyManager_C_EntryBrainCrashAccess::Dummy' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_EntryBrainCrashAccess, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'BP_EnemyManager_C_EntryBrainCrashAccess::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.LeaveBrainCrashAccess
// 0x0010 (0x0010 - 0x0000)
struct BP_EnemyManager_C_LeaveBrainCrashAccess final
{
public:
	class ARSBattleCharacter_C*                   Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Dummy;                                             // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyManager_C_LeaveBrainCrashAccess) == 0x000008, "Wrong alignment on BP_EnemyManager_C_LeaveBrainCrashAccess");
static_assert(sizeof(BP_EnemyManager_C_LeaveBrainCrashAccess) == 0x000010, "Wrong size on BP_EnemyManager_C_LeaveBrainCrashAccess");
static_assert(offsetof(BP_EnemyManager_C_LeaveBrainCrashAccess, Character) == 0x000000, "Member 'BP_EnemyManager_C_LeaveBrainCrashAccess::Character' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_LeaveBrainCrashAccess, Dummy) == 0x000008, "Member 'BP_EnemyManager_C_LeaveBrainCrashAccess::Dummy' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_LeaveBrainCrashAccess, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'BP_EnemyManager_C_LeaveBrainCrashAccess::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.SelectBrainCrashCharacter
// 0x0058 (0x0058 - 0x0000)
struct BP_EnemyManager_C_SelectBrainCrashCharacter final
{
public:
	class ARSBattleCharacter_C*                   TargetCharacter;                                   // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_BaseDir;                                         // 0x0008(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_BaseLocation;                                    // 0x0014(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattleCharacter_C*                   L_target;                                          // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_CalcAnySearchBase_BaseLocation;           // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_CalcAnySearchBase_BaseDir;                // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSCharacterBase*                       CallFunc_SelectBrainCrashTarget_ReturnValue;       // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattleCharacter_C*                   K2Node_DynamicCast_AsRSBattle_Character;           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyManager_C_SelectBrainCrashCharacter) == 0x000008, "Wrong alignment on BP_EnemyManager_C_SelectBrainCrashCharacter");
static_assert(sizeof(BP_EnemyManager_C_SelectBrainCrashCharacter) == 0x000058, "Wrong size on BP_EnemyManager_C_SelectBrainCrashCharacter");
static_assert(offsetof(BP_EnemyManager_C_SelectBrainCrashCharacter, TargetCharacter) == 0x000000, "Member 'BP_EnemyManager_C_SelectBrainCrashCharacter::TargetCharacter' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SelectBrainCrashCharacter, L_BaseDir) == 0x000008, "Member 'BP_EnemyManager_C_SelectBrainCrashCharacter::L_BaseDir' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SelectBrainCrashCharacter, L_BaseLocation) == 0x000014, "Member 'BP_EnemyManager_C_SelectBrainCrashCharacter::L_BaseLocation' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SelectBrainCrashCharacter, L_target) == 0x000020, "Member 'BP_EnemyManager_C_SelectBrainCrashCharacter::L_target' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SelectBrainCrashCharacter, CallFunc_CalcAnySearchBase_BaseLocation) == 0x000028, "Member 'BP_EnemyManager_C_SelectBrainCrashCharacter::CallFunc_CalcAnySearchBase_BaseLocation' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SelectBrainCrashCharacter, CallFunc_CalcAnySearchBase_BaseDir) == 0x000034, "Member 'BP_EnemyManager_C_SelectBrainCrashCharacter::CallFunc_CalcAnySearchBase_BaseDir' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SelectBrainCrashCharacter, CallFunc_SelectBrainCrashTarget_ReturnValue) == 0x000040, "Member 'BP_EnemyManager_C_SelectBrainCrashCharacter::CallFunc_SelectBrainCrashTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SelectBrainCrashCharacter, K2Node_DynamicCast_AsRSBattle_Character) == 0x000048, "Member 'BP_EnemyManager_C_SelectBrainCrashCharacter::K2Node_DynamicCast_AsRSBattle_Character' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SelectBrainCrashCharacter, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'BP_EnemyManager_C_SelectBrainCrashCharacter::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.SetBrainCrashHUDTarget
// 0x0038 (0x0038 - 0x0000)
struct BP_EnemyManager_C_SetBrainCrashHUDTarget final
{
public:
	class ARSBattleCharacter_C*                   BattleChara;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bEnablePlayer;                                     // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Dummy;                                             // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          L_bEnableBC;                                       // 0x000A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_60A8[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_60A9[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHUDMainGame_C*                         K2Node_DynamicCast_AsHUDMain_Game;                 // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetBrainCrashTarget_Success;              // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyManager_C_SetBrainCrashHUDTarget) == 0x000008, "Wrong alignment on BP_EnemyManager_C_SetBrainCrashHUDTarget");
static_assert(sizeof(BP_EnemyManager_C_SetBrainCrashHUDTarget) == 0x000038, "Wrong size on BP_EnemyManager_C_SetBrainCrashHUDTarget");
static_assert(offsetof(BP_EnemyManager_C_SetBrainCrashHUDTarget, BattleChara) == 0x000000, "Member 'BP_EnemyManager_C_SetBrainCrashHUDTarget::BattleChara' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetBrainCrashHUDTarget, bEnablePlayer) == 0x000008, "Member 'BP_EnemyManager_C_SetBrainCrashHUDTarget::bEnablePlayer' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetBrainCrashHUDTarget, Dummy) == 0x000009, "Member 'BP_EnemyManager_C_SetBrainCrashHUDTarget::Dummy' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetBrainCrashHUDTarget, L_bEnableBC) == 0x00000A, "Member 'BP_EnemyManager_C_SetBrainCrashHUDTarget::L_bEnableBC' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetBrainCrashHUDTarget, CallFunc_IsValid_ReturnValue) == 0x00000B, "Member 'BP_EnemyManager_C_SetBrainCrashHUDTarget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetBrainCrashHUDTarget, CallFunc_GetPlayerController_ReturnValue) == 0x000010, "Member 'BP_EnemyManager_C_SetBrainCrashHUDTarget::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetBrainCrashHUDTarget, CallFunc_IsValid_ReturnValue_1) == 0x000018, "Member 'BP_EnemyManager_C_SetBrainCrashHUDTarget::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetBrainCrashHUDTarget, CallFunc_GetHUD_ReturnValue) == 0x000020, "Member 'BP_EnemyManager_C_SetBrainCrashHUDTarget::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetBrainCrashHUDTarget, K2Node_DynamicCast_AsHUDMain_Game) == 0x000028, "Member 'BP_EnemyManager_C_SetBrainCrashHUDTarget::K2Node_DynamicCast_AsHUDMain_Game' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetBrainCrashHUDTarget, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_EnemyManager_C_SetBrainCrashHUDTarget::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetBrainCrashHUDTarget, CallFunc_SetBrainCrashTarget_Success) == 0x000031, "Member 'BP_EnemyManager_C_SetBrainCrashHUDTarget::CallFunc_SetBrainCrashTarget_Success' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.Usable Brain Crash Lock Target
// 0x0080 (0x0080 - 0x0000)
struct BP_EnemyManager_C_Usable_Brain_Crash_Lock_Target final
{
public:
	class ARSBattleCharacter_C*                   TargetCharacter;                                   // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattleCharacter_C*                   L_target;                                          // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_CalcAnySearchBase_BaseLocation;           // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_CalcAnySearchBase_BaseDir;                // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSCharacterBase*                       CallFunc_GetPlayer_ReturnValue;                    // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_60AA[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattlePlayer_C*                      K2Node_DynamicCast_AsRSBattle_Player;              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_60AB[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_GetCurrentTargetActor_ReturnValue;        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLockTarget_ReturnValue;                 // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_60AC[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattleCharacter_C*                   K2Node_DynamicCast_AsRSBattle_Character;           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_60AD[0x3];                                     // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_CalcBrainCrashScore_outDist;              // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CalcBrainCrashScore_outAngle;             // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_CalcBrainCrashScore_ReturnValue;          // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_IsEntryBrainCrashCandidate_ReturnValue;   // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x007D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyManager_C_Usable_Brain_Crash_Lock_Target) == 0x000008, "Wrong alignment on BP_EnemyManager_C_Usable_Brain_Crash_Lock_Target");
static_assert(sizeof(BP_EnemyManager_C_Usable_Brain_Crash_Lock_Target) == 0x000080, "Wrong size on BP_EnemyManager_C_Usable_Brain_Crash_Lock_Target");
static_assert(offsetof(BP_EnemyManager_C_Usable_Brain_Crash_Lock_Target, TargetCharacter) == 0x000000, "Member 'BP_EnemyManager_C_Usable_Brain_Crash_Lock_Target::TargetCharacter' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_Usable_Brain_Crash_Lock_Target, L_target) == 0x000008, "Member 'BP_EnemyManager_C_Usable_Brain_Crash_Lock_Target::L_target' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_Usable_Brain_Crash_Lock_Target, CallFunc_CalcAnySearchBase_BaseLocation) == 0x000010, "Member 'BP_EnemyManager_C_Usable_Brain_Crash_Lock_Target::CallFunc_CalcAnySearchBase_BaseLocation' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_Usable_Brain_Crash_Lock_Target, CallFunc_CalcAnySearchBase_BaseDir) == 0x00001C, "Member 'BP_EnemyManager_C_Usable_Brain_Crash_Lock_Target::CallFunc_CalcAnySearchBase_BaseDir' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_Usable_Brain_Crash_Lock_Target, CallFunc_GetPlayerManager_PlayerManager) == 0x000028, "Member 'BP_EnemyManager_C_Usable_Brain_Crash_Lock_Target::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_Usable_Brain_Crash_Lock_Target, CallFunc_GetPlayer_ReturnValue) == 0x000030, "Member 'BP_EnemyManager_C_Usable_Brain_Crash_Lock_Target::CallFunc_GetPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_Usable_Brain_Crash_Lock_Target, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'BP_EnemyManager_C_Usable_Brain_Crash_Lock_Target::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_Usable_Brain_Crash_Lock_Target, K2Node_DynamicCast_AsRSBattle_Player) == 0x000040, "Member 'BP_EnemyManager_C_Usable_Brain_Crash_Lock_Target::K2Node_DynamicCast_AsRSBattle_Player' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_Usable_Brain_Crash_Lock_Target, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'BP_EnemyManager_C_Usable_Brain_Crash_Lock_Target::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_Usable_Brain_Crash_Lock_Target, CallFunc_GetCurrentTargetActor_ReturnValue) == 0x000050, "Member 'BP_EnemyManager_C_Usable_Brain_Crash_Lock_Target::CallFunc_GetCurrentTargetActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_Usable_Brain_Crash_Lock_Target, CallFunc_IsLockTarget_ReturnValue) == 0x000058, "Member 'BP_EnemyManager_C_Usable_Brain_Crash_Lock_Target::CallFunc_IsLockTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_Usable_Brain_Crash_Lock_Target, K2Node_DynamicCast_AsRSBattle_Character) == 0x000060, "Member 'BP_EnemyManager_C_Usable_Brain_Crash_Lock_Target::K2Node_DynamicCast_AsRSBattle_Character' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_Usable_Brain_Crash_Lock_Target, K2Node_DynamicCast_bSuccess_1) == 0x000068, "Member 'BP_EnemyManager_C_Usable_Brain_Crash_Lock_Target::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_Usable_Brain_Crash_Lock_Target, CallFunc_CalcBrainCrashScore_outDist) == 0x00006C, "Member 'BP_EnemyManager_C_Usable_Brain_Crash_Lock_Target::CallFunc_CalcBrainCrashScore_outDist' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_Usable_Brain_Crash_Lock_Target, CallFunc_CalcBrainCrashScore_outAngle) == 0x000070, "Member 'BP_EnemyManager_C_Usable_Brain_Crash_Lock_Target::CallFunc_CalcBrainCrashScore_outAngle' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_Usable_Brain_Crash_Lock_Target, CallFunc_CalcBrainCrashScore_ReturnValue) == 0x000074, "Member 'BP_EnemyManager_C_Usable_Brain_Crash_Lock_Target::CallFunc_CalcBrainCrashScore_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_Usable_Brain_Crash_Lock_Target, CallFunc_IsEntryBrainCrashCandidate_ReturnValue) == 0x000078, "Member 'BP_EnemyManager_C_Usable_Brain_Crash_Lock_Target::CallFunc_IsEntryBrainCrashCandidate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_Usable_Brain_Crash_Lock_Target, CallFunc_Greater_IntInt_ReturnValue) == 0x00007C, "Member 'BP_EnemyManager_C_Usable_Brain_Crash_Lock_Target::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_Usable_Brain_Crash_Lock_Target, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00007D, "Member 'BP_EnemyManager_C_Usable_Brain_Crash_Lock_Target::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.DebugSetAddDamageBlendWeight
// 0x0048 (0x0048 - 0x0000)
struct BP_EnemyManager_C_DebugSetAddDamageBlendWeight final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_60AE[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattleEnemy_C*                       K2Node_DynamicCast_AsRSBattle_Enemy;               // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_60AF[0x5];                                     // 0x0023(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_60B0[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class URSEnemyAnimInstance*                   K2Node_DynamicCast_AsRSEnemy_Anim_Instance;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyManager_C_DebugSetAddDamageBlendWeight) == 0x000008, "Wrong alignment on BP_EnemyManager_C_DebugSetAddDamageBlendWeight");
static_assert(sizeof(BP_EnemyManager_C_DebugSetAddDamageBlendWeight) == 0x000048, "Wrong size on BP_EnemyManager_C_DebugSetAddDamageBlendWeight");
static_assert(offsetof(BP_EnemyManager_C_DebugSetAddDamageBlendWeight, Value) == 0x000000, "Member 'BP_EnemyManager_C_DebugSetAddDamageBlendWeight::Value' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugSetAddDamageBlendWeight, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_EnemyManager_C_DebugSetAddDamageBlendWeight::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugSetAddDamageBlendWeight, Temp_int_Loop_Num_Variable) == 0x000008, "Member 'BP_EnemyManager_C_DebugSetAddDamageBlendWeight::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugSetAddDamageBlendWeight, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BP_EnemyManager_C_DebugSetAddDamageBlendWeight::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugSetAddDamageBlendWeight, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'BP_EnemyManager_C_DebugSetAddDamageBlendWeight::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugSetAddDamageBlendWeight, K2Node_DynamicCast_AsRSBattle_Enemy) == 0x000018, "Member 'BP_EnemyManager_C_DebugSetAddDamageBlendWeight::K2Node_DynamicCast_AsRSBattle_Enemy' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugSetAddDamageBlendWeight, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_EnemyManager_C_DebugSetAddDamageBlendWeight::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugSetAddDamageBlendWeight, CallFunc_Less_IntInt_ReturnValue) == 0x000021, "Member 'BP_EnemyManager_C_DebugSetAddDamageBlendWeight::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugSetAddDamageBlendWeight, CallFunc_IsValid_ReturnValue) == 0x000022, "Member 'BP_EnemyManager_C_DebugSetAddDamageBlendWeight::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugSetAddDamageBlendWeight, CallFunc_GetAnimInstance_ReturnValue) == 0x000028, "Member 'BP_EnemyManager_C_DebugSetAddDamageBlendWeight::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugSetAddDamageBlendWeight, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'BP_EnemyManager_C_DebugSetAddDamageBlendWeight::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugSetAddDamageBlendWeight, CallFunc_IsValid_ReturnValue_1) == 0x000034, "Member 'BP_EnemyManager_C_DebugSetAddDamageBlendWeight::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugSetAddDamageBlendWeight, K2Node_DynamicCast_AsRSEnemy_Anim_Instance) == 0x000038, "Member 'BP_EnemyManager_C_DebugSetAddDamageBlendWeight::K2Node_DynamicCast_AsRSEnemy_Anim_Instance' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugSetAddDamageBlendWeight, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'BP_EnemyManager_C_DebugSetAddDamageBlendWeight::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.DebugResetAddDamageBlendWeight
// 0x0040 (0x0040 - 0x0000)
struct BP_EnemyManager_C_DebugResetAddDamageBlendWeight final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattleEnemy_C*                       K2Node_DynamicCast_AsRSBattle_Enemy;               // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_60B1[0x5];                                     // 0x001B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_60B2[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class URSEnemyAnimInstance*                   K2Node_DynamicCast_AsRSEnemy_Anim_Instance;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyManager_C_DebugResetAddDamageBlendWeight) == 0x000008, "Wrong alignment on BP_EnemyManager_C_DebugResetAddDamageBlendWeight");
static_assert(sizeof(BP_EnemyManager_C_DebugResetAddDamageBlendWeight) == 0x000040, "Wrong size on BP_EnemyManager_C_DebugResetAddDamageBlendWeight");
static_assert(offsetof(BP_EnemyManager_C_DebugResetAddDamageBlendWeight, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_EnemyManager_C_DebugResetAddDamageBlendWeight::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugResetAddDamageBlendWeight, Temp_int_Loop_Num_Variable) == 0x000004, "Member 'BP_EnemyManager_C_DebugResetAddDamageBlendWeight::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugResetAddDamageBlendWeight, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_EnemyManager_C_DebugResetAddDamageBlendWeight::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugResetAddDamageBlendWeight, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'BP_EnemyManager_C_DebugResetAddDamageBlendWeight::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugResetAddDamageBlendWeight, K2Node_DynamicCast_AsRSBattle_Enemy) == 0x000010, "Member 'BP_EnemyManager_C_DebugResetAddDamageBlendWeight::K2Node_DynamicCast_AsRSBattle_Enemy' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugResetAddDamageBlendWeight, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_EnemyManager_C_DebugResetAddDamageBlendWeight::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugResetAddDamageBlendWeight, CallFunc_Less_IntInt_ReturnValue) == 0x000019, "Member 'BP_EnemyManager_C_DebugResetAddDamageBlendWeight::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugResetAddDamageBlendWeight, CallFunc_IsValid_ReturnValue) == 0x00001A, "Member 'BP_EnemyManager_C_DebugResetAddDamageBlendWeight::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugResetAddDamageBlendWeight, CallFunc_GetAnimInstance_ReturnValue) == 0x000020, "Member 'BP_EnemyManager_C_DebugResetAddDamageBlendWeight::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugResetAddDamageBlendWeight, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BP_EnemyManager_C_DebugResetAddDamageBlendWeight::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugResetAddDamageBlendWeight, CallFunc_IsValid_ReturnValue_1) == 0x00002C, "Member 'BP_EnemyManager_C_DebugResetAddDamageBlendWeight::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugResetAddDamageBlendWeight, K2Node_DynamicCast_AsRSEnemy_Anim_Instance) == 0x000030, "Member 'BP_EnemyManager_C_DebugResetAddDamageBlendWeight::K2Node_DynamicCast_AsRSEnemy_Anim_Instance' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugResetAddDamageBlendWeight, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'BP_EnemyManager_C_DebugResetAddDamageBlendWeight::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.SetENPCStartTransformbyID
// 0x0050 (0x0050 - 0x0000)
struct BP_EnemyManager_C_SetENPCStartTransformbyID final
{
public:
	ECutsceneRootTransformID                      ID;                                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_60B3[0xF];                                     // 0x0001(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Transform;                                         // 0x0010(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyManager_C_SetENPCStartTransformbyID) == 0x000010, "Wrong alignment on BP_EnemyManager_C_SetENPCStartTransformbyID");
static_assert(sizeof(BP_EnemyManager_C_SetENPCStartTransformbyID) == 0x000050, "Wrong size on BP_EnemyManager_C_SetENPCStartTransformbyID");
static_assert(offsetof(BP_EnemyManager_C_SetENPCStartTransformbyID, ID) == 0x000000, "Member 'BP_EnemyManager_C_SetENPCStartTransformbyID::ID' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetENPCStartTransformbyID, Transform) == 0x000010, "Member 'BP_EnemyManager_C_SetENPCStartTransformbyID::Transform' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetENPCStartTransformbyID, K2Node_SwitchEnum_CmpSuccess) == 0x000040, "Member 'BP_EnemyManager_C_SetENPCStartTransformbyID::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.GetENPCStartTransformbyID
// 0x0050 (0x0050 - 0x0000)
struct BP_EnemyManager_C_GetENPCStartTransformbyID final
{
public:
	ECutsceneRootTransformID                      ID;                                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_60B4[0xF];                                     // 0x0001(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Transform;                                         // 0x0010(0x0030)(Parm, OutParm, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyManager_C_GetENPCStartTransformbyID) == 0x000010, "Wrong alignment on BP_EnemyManager_C_GetENPCStartTransformbyID");
static_assert(sizeof(BP_EnemyManager_C_GetENPCStartTransformbyID) == 0x000050, "Wrong size on BP_EnemyManager_C_GetENPCStartTransformbyID");
static_assert(offsetof(BP_EnemyManager_C_GetENPCStartTransformbyID, ID) == 0x000000, "Member 'BP_EnemyManager_C_GetENPCStartTransformbyID::ID' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_GetENPCStartTransformbyID, Transform) == 0x000010, "Member 'BP_EnemyManager_C_GetENPCStartTransformbyID::Transform' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_GetENPCStartTransformbyID, K2Node_SwitchEnum_CmpSuccess) == 0x000040, "Member 'BP_EnemyManager_C_GetENPCStartTransformbyID::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.InitBadStateMaterialParam
// 0x0058 (0x0058 - 0x0000)
struct BP_EnemyManager_C_InitBadStateMaterialParam final
{
public:
	bool                                          Dummy;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_60B5[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<EHCSkillAttribute, struct FEnemyStateDataCell> CallFunc_LoadEnemyBadState_rCells;                 // 0x0008(0x0050)()
};
static_assert(alignof(BP_EnemyManager_C_InitBadStateMaterialParam) == 0x000008, "Wrong alignment on BP_EnemyManager_C_InitBadStateMaterialParam");
static_assert(sizeof(BP_EnemyManager_C_InitBadStateMaterialParam) == 0x000058, "Wrong size on BP_EnemyManager_C_InitBadStateMaterialParam");
static_assert(offsetof(BP_EnemyManager_C_InitBadStateMaterialParam, Dummy) == 0x000000, "Member 'BP_EnemyManager_C_InitBadStateMaterialParam::Dummy' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_InitBadStateMaterialParam, CallFunc_LoadEnemyBadState_rCells) == 0x000008, "Member 'BP_EnemyManager_C_InitBadStateMaterialParam::CallFunc_LoadEnemyBadState_rCells' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.GetBadStateMaterialParam
// 0x0078 (0x0078 - 0x0000)
struct BP_EnemyManager_C_GetBadStateMaterialParam final
{
public:
	EHCSkillAttribute                             Attribute;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_60B6[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEnemyStateDataCell                    Param;                                             // 0x0008(0x0030)(Parm, OutParm)
	bool                                          Find;                                              // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_60B7[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEnemyStateDataCell                    CallFunc_Map_Find_Value;                           // 0x0040(0x0030)()
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyManager_C_GetBadStateMaterialParam) == 0x000008, "Wrong alignment on BP_EnemyManager_C_GetBadStateMaterialParam");
static_assert(sizeof(BP_EnemyManager_C_GetBadStateMaterialParam) == 0x000078, "Wrong size on BP_EnemyManager_C_GetBadStateMaterialParam");
static_assert(offsetof(BP_EnemyManager_C_GetBadStateMaterialParam, Attribute) == 0x000000, "Member 'BP_EnemyManager_C_GetBadStateMaterialParam::Attribute' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_GetBadStateMaterialParam, Param) == 0x000008, "Member 'BP_EnemyManager_C_GetBadStateMaterialParam::Param' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_GetBadStateMaterialParam, Find) == 0x000038, "Member 'BP_EnemyManager_C_GetBadStateMaterialParam::Find' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_GetBadStateMaterialParam, CallFunc_Map_Find_Value) == 0x000040, "Member 'BP_EnemyManager_C_GetBadStateMaterialParam::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_GetBadStateMaterialParam, CallFunc_Map_Find_ReturnValue) == 0x000070, "Member 'BP_EnemyManager_C_GetBadStateMaterialParam::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.DebugDrawTargetingList
// 0x0278 (0x0278 - 0x0000)
struct BP_EnemyManager_C_DebugDrawTargetingList final
{
public:
	class FString                                 L_TargetingNames;                                  // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 L_objName;                                         // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0028(0x0040)(HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_1;                      // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_60B8[0x3];                                     // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_GetDebuggingManager_Manager;              // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_60B9[0x2];                                     // 0x008A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0090(0x0018)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x00A8(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00C0(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0100(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0140(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0150(0x0018)()
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0170(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_60BA[0x7];                                     // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ARSCharacterBase*>               CallFunc_GetPlayerList_ReturnValue;                // 0x0188(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x019C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_60BB[0x3];                                     // 0x019D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ARSCharacterBase*>               CallFunc_GetConstTargetingList_ReturnValue;        // 0x01A0(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x01B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_60BC[0x3];                                     // 0x01B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x01B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetObjectName_ReturnValue_1;              // 0x01C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_2;          // 0x01D8(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x01F0(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0230(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0240(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x0258(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0268(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EnemyManager_C_DebugDrawTargetingList) == 0x000008, "Wrong alignment on BP_EnemyManager_C_DebugDrawTargetingList");
static_assert(sizeof(BP_EnemyManager_C_DebugDrawTargetingList) == 0x000278, "Wrong size on BP_EnemyManager_C_DebugDrawTargetingList");
static_assert(offsetof(BP_EnemyManager_C_DebugDrawTargetingList, L_TargetingNames) == 0x000000, "Member 'BP_EnemyManager_C_DebugDrawTargetingList::L_TargetingNames' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDrawTargetingList, L_objName) == 0x000010, "Member 'BP_EnemyManager_C_DebugDrawTargetingList::L_objName' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDrawTargetingList, Temp_int_Loop_Num_Variable) == 0x000020, "Member 'BP_EnemyManager_C_DebugDrawTargetingList::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDrawTargetingList, Temp_int_Array_Index_Variable) == 0x000024, "Member 'BP_EnemyManager_C_DebugDrawTargetingList::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDrawTargetingList, K2Node_MakeStruct_FormatArgumentData) == 0x000028, "Member 'BP_EnemyManager_C_DebugDrawTargetingList::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDrawTargetingList, Temp_int_Loop_Counter_Variable) == 0x000068, "Member 'BP_EnemyManager_C_DebugDrawTargetingList::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDrawTargetingList, CallFunc_Add_IntInt_ReturnValue) == 0x00006C, "Member 'BP_EnemyManager_C_DebugDrawTargetingList::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDrawTargetingList, Temp_int_Array_Index_Variable_1) == 0x000070, "Member 'BP_EnemyManager_C_DebugDrawTargetingList::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDrawTargetingList, Temp_int_Loop_Num_Variable_1) == 0x000074, "Member 'BP_EnemyManager_C_DebugDrawTargetingList::Temp_int_Loop_Num_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDrawTargetingList, CallFunc_Less_IntInt_ReturnValue) == 0x000078, "Member 'BP_EnemyManager_C_DebugDrawTargetingList::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDrawTargetingList, Temp_int_Loop_Counter_Variable_1) == 0x00007C, "Member 'BP_EnemyManager_C_DebugDrawTargetingList::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDrawTargetingList, CallFunc_GetDebuggingManager_Manager) == 0x000080, "Member 'BP_EnemyManager_C_DebugDrawTargetingList::CallFunc_GetDebuggingManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDrawTargetingList, CallFunc_IsValid_ReturnValue) == 0x000088, "Member 'BP_EnemyManager_C_DebugDrawTargetingList::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDrawTargetingList, CallFunc_Less_IntInt_ReturnValue_1) == 0x000089, "Member 'BP_EnemyManager_C_DebugDrawTargetingList::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDrawTargetingList, CallFunc_Add_IntInt_ReturnValue_1) == 0x00008C, "Member 'BP_EnemyManager_C_DebugDrawTargetingList::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDrawTargetingList, CallFunc_Conv_StringToText_ReturnValue) == 0x000090, "Member 'BP_EnemyManager_C_DebugDrawTargetingList::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDrawTargetingList, CallFunc_Conv_StringToText_ReturnValue_1) == 0x0000A8, "Member 'BP_EnemyManager_C_DebugDrawTargetingList::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDrawTargetingList, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000C0, "Member 'BP_EnemyManager_C_DebugDrawTargetingList::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDrawTargetingList, K2Node_MakeStruct_FormatArgumentData_2) == 0x000100, "Member 'BP_EnemyManager_C_DebugDrawTargetingList::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDrawTargetingList, K2Node_MakeArray_Array) == 0x000140, "Member 'BP_EnemyManager_C_DebugDrawTargetingList::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDrawTargetingList, CallFunc_Format_ReturnValue) == 0x000150, "Member 'BP_EnemyManager_C_DebugDrawTargetingList::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDrawTargetingList, CallFunc_GetPlayerManager_PlayerManager) == 0x000168, "Member 'BP_EnemyManager_C_DebugDrawTargetingList::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDrawTargetingList, CallFunc_Conv_TextToString_ReturnValue) == 0x000170, "Member 'BP_EnemyManager_C_DebugDrawTargetingList::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDrawTargetingList, CallFunc_IsValid_ReturnValue_1) == 0x000180, "Member 'BP_EnemyManager_C_DebugDrawTargetingList::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDrawTargetingList, CallFunc_GetPlayerList_ReturnValue) == 0x000188, "Member 'BP_EnemyManager_C_DebugDrawTargetingList::CallFunc_GetPlayerList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDrawTargetingList, CallFunc_Array_Length_ReturnValue) == 0x000198, "Member 'BP_EnemyManager_C_DebugDrawTargetingList::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDrawTargetingList, CallFunc_IsValid_ReturnValue_2) == 0x00019C, "Member 'BP_EnemyManager_C_DebugDrawTargetingList::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDrawTargetingList, CallFunc_GetConstTargetingList_ReturnValue) == 0x0001A0, "Member 'BP_EnemyManager_C_DebugDrawTargetingList::CallFunc_GetConstTargetingList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDrawTargetingList, CallFunc_Array_Length_ReturnValue_1) == 0x0001B0, "Member 'BP_EnemyManager_C_DebugDrawTargetingList::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDrawTargetingList, CallFunc_IsValid_ReturnValue_3) == 0x0001B4, "Member 'BP_EnemyManager_C_DebugDrawTargetingList::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDrawTargetingList, CallFunc_GetObjectName_ReturnValue) == 0x0001B8, "Member 'BP_EnemyManager_C_DebugDrawTargetingList::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDrawTargetingList, CallFunc_GetObjectName_ReturnValue_1) == 0x0001C8, "Member 'BP_EnemyManager_C_DebugDrawTargetingList::CallFunc_GetObjectName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDrawTargetingList, CallFunc_Conv_StringToText_ReturnValue_2) == 0x0001D8, "Member 'BP_EnemyManager_C_DebugDrawTargetingList::CallFunc_Conv_StringToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDrawTargetingList, K2Node_MakeStruct_FormatArgumentData_3) == 0x0001F0, "Member 'BP_EnemyManager_C_DebugDrawTargetingList::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDrawTargetingList, K2Node_MakeArray_Array_1) == 0x000230, "Member 'BP_EnemyManager_C_DebugDrawTargetingList::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDrawTargetingList, CallFunc_Format_ReturnValue_1) == 0x000240, "Member 'BP_EnemyManager_C_DebugDrawTargetingList::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDrawTargetingList, CallFunc_Conv_TextToString_ReturnValue_1) == 0x000258, "Member 'BP_EnemyManager_C_DebugDrawTargetingList::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDrawTargetingList, CallFunc_Concat_StrStr_ReturnValue) == 0x000268, "Member 'BP_EnemyManager_C_DebugDrawTargetingList::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.DebugDrawAttackingList
// 0x0278 (0x0278 - 0x0000)
struct BP_EnemyManager_C_DebugDrawAttackingList final
{
public:
	class FString                                 L_TargetingNames;                                  // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 L_objName;                                         // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0028(0x0040)(HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_1;                      // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_60BD[0x3];                                     // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_GetDebuggingManager_Manager;              // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_60BE[0x2];                                     // 0x008A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0090(0x0018)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x00A8(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00C0(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0100(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0140(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0150(0x0018)()
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0170(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_60BF[0x7];                                     // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ARSCharacterBase*>               CallFunc_GetPlayerList_ReturnValue;                // 0x0188(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x019C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_60C0[0x3];                                     // 0x019D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ARSCharacterBase*>               CallFunc_GetConstAttackingList_ReturnValue;        // 0x01A0(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x01B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_60C1[0x3];                                     // 0x01B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x01B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetObjectName_ReturnValue_1;              // 0x01C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_2;          // 0x01D8(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x01F0(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0230(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0240(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x0258(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0268(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EnemyManager_C_DebugDrawAttackingList) == 0x000008, "Wrong alignment on BP_EnemyManager_C_DebugDrawAttackingList");
static_assert(sizeof(BP_EnemyManager_C_DebugDrawAttackingList) == 0x000278, "Wrong size on BP_EnemyManager_C_DebugDrawAttackingList");
static_assert(offsetof(BP_EnemyManager_C_DebugDrawAttackingList, L_TargetingNames) == 0x000000, "Member 'BP_EnemyManager_C_DebugDrawAttackingList::L_TargetingNames' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDrawAttackingList, L_objName) == 0x000010, "Member 'BP_EnemyManager_C_DebugDrawAttackingList::L_objName' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDrawAttackingList, Temp_int_Loop_Num_Variable) == 0x000020, "Member 'BP_EnemyManager_C_DebugDrawAttackingList::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDrawAttackingList, Temp_int_Array_Index_Variable) == 0x000024, "Member 'BP_EnemyManager_C_DebugDrawAttackingList::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDrawAttackingList, K2Node_MakeStruct_FormatArgumentData) == 0x000028, "Member 'BP_EnemyManager_C_DebugDrawAttackingList::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDrawAttackingList, Temp_int_Loop_Counter_Variable) == 0x000068, "Member 'BP_EnemyManager_C_DebugDrawAttackingList::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDrawAttackingList, CallFunc_Add_IntInt_ReturnValue) == 0x00006C, "Member 'BP_EnemyManager_C_DebugDrawAttackingList::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDrawAttackingList, Temp_int_Array_Index_Variable_1) == 0x000070, "Member 'BP_EnemyManager_C_DebugDrawAttackingList::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDrawAttackingList, Temp_int_Loop_Num_Variable_1) == 0x000074, "Member 'BP_EnemyManager_C_DebugDrawAttackingList::Temp_int_Loop_Num_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDrawAttackingList, CallFunc_Less_IntInt_ReturnValue) == 0x000078, "Member 'BP_EnemyManager_C_DebugDrawAttackingList::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDrawAttackingList, Temp_int_Loop_Counter_Variable_1) == 0x00007C, "Member 'BP_EnemyManager_C_DebugDrawAttackingList::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDrawAttackingList, CallFunc_GetDebuggingManager_Manager) == 0x000080, "Member 'BP_EnemyManager_C_DebugDrawAttackingList::CallFunc_GetDebuggingManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDrawAttackingList, CallFunc_IsValid_ReturnValue) == 0x000088, "Member 'BP_EnemyManager_C_DebugDrawAttackingList::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDrawAttackingList, CallFunc_Less_IntInt_ReturnValue_1) == 0x000089, "Member 'BP_EnemyManager_C_DebugDrawAttackingList::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDrawAttackingList, CallFunc_Add_IntInt_ReturnValue_1) == 0x00008C, "Member 'BP_EnemyManager_C_DebugDrawAttackingList::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDrawAttackingList, CallFunc_Conv_StringToText_ReturnValue) == 0x000090, "Member 'BP_EnemyManager_C_DebugDrawAttackingList::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDrawAttackingList, CallFunc_Conv_StringToText_ReturnValue_1) == 0x0000A8, "Member 'BP_EnemyManager_C_DebugDrawAttackingList::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDrawAttackingList, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000C0, "Member 'BP_EnemyManager_C_DebugDrawAttackingList::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDrawAttackingList, K2Node_MakeStruct_FormatArgumentData_2) == 0x000100, "Member 'BP_EnemyManager_C_DebugDrawAttackingList::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDrawAttackingList, K2Node_MakeArray_Array) == 0x000140, "Member 'BP_EnemyManager_C_DebugDrawAttackingList::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDrawAttackingList, CallFunc_Format_ReturnValue) == 0x000150, "Member 'BP_EnemyManager_C_DebugDrawAttackingList::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDrawAttackingList, CallFunc_GetPlayerManager_PlayerManager) == 0x000168, "Member 'BP_EnemyManager_C_DebugDrawAttackingList::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDrawAttackingList, CallFunc_Conv_TextToString_ReturnValue) == 0x000170, "Member 'BP_EnemyManager_C_DebugDrawAttackingList::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDrawAttackingList, CallFunc_IsValid_ReturnValue_1) == 0x000180, "Member 'BP_EnemyManager_C_DebugDrawAttackingList::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDrawAttackingList, CallFunc_GetPlayerList_ReturnValue) == 0x000188, "Member 'BP_EnemyManager_C_DebugDrawAttackingList::CallFunc_GetPlayerList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDrawAttackingList, CallFunc_Array_Length_ReturnValue) == 0x000198, "Member 'BP_EnemyManager_C_DebugDrawAttackingList::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDrawAttackingList, CallFunc_IsValid_ReturnValue_2) == 0x00019C, "Member 'BP_EnemyManager_C_DebugDrawAttackingList::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDrawAttackingList, CallFunc_GetConstAttackingList_ReturnValue) == 0x0001A0, "Member 'BP_EnemyManager_C_DebugDrawAttackingList::CallFunc_GetConstAttackingList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDrawAttackingList, CallFunc_Array_Length_ReturnValue_1) == 0x0001B0, "Member 'BP_EnemyManager_C_DebugDrawAttackingList::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDrawAttackingList, CallFunc_IsValid_ReturnValue_3) == 0x0001B4, "Member 'BP_EnemyManager_C_DebugDrawAttackingList::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDrawAttackingList, CallFunc_GetObjectName_ReturnValue) == 0x0001B8, "Member 'BP_EnemyManager_C_DebugDrawAttackingList::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDrawAttackingList, CallFunc_GetObjectName_ReturnValue_1) == 0x0001C8, "Member 'BP_EnemyManager_C_DebugDrawAttackingList::CallFunc_GetObjectName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDrawAttackingList, CallFunc_Conv_StringToText_ReturnValue_2) == 0x0001D8, "Member 'BP_EnemyManager_C_DebugDrawAttackingList::CallFunc_Conv_StringToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDrawAttackingList, K2Node_MakeStruct_FormatArgumentData_3) == 0x0001F0, "Member 'BP_EnemyManager_C_DebugDrawAttackingList::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDrawAttackingList, K2Node_MakeArray_Array_1) == 0x000230, "Member 'BP_EnemyManager_C_DebugDrawAttackingList::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDrawAttackingList, CallFunc_Format_ReturnValue_1) == 0x000240, "Member 'BP_EnemyManager_C_DebugDrawAttackingList::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDrawAttackingList, CallFunc_Conv_TextToString_ReturnValue_1) == 0x000258, "Member 'BP_EnemyManager_C_DebugDrawAttackingList::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDrawAttackingList, CallFunc_Concat_StrStr_ReturnValue) == 0x000268, "Member 'BP_EnemyManager_C_DebugDrawAttackingList::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.UpdateEnemyVisionFog
// 0x0020 (0x0020 - 0x0000)
struct BP_EnemyManager_C_UpdateEnemyVisionFog final
{
public:
	float                                         DeltaSec;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_60C2[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ARSCharacterBase*>               LPlayerList;                                       // 0x0008(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EnemyManager_C_UpdateEnemyVisionFog) == 0x000008, "Wrong alignment on BP_EnemyManager_C_UpdateEnemyVisionFog");
static_assert(sizeof(BP_EnemyManager_C_UpdateEnemyVisionFog) == 0x000020, "Wrong size on BP_EnemyManager_C_UpdateEnemyVisionFog");
static_assert(offsetof(BP_EnemyManager_C_UpdateEnemyVisionFog, DeltaSec) == 0x000000, "Member 'BP_EnemyManager_C_UpdateEnemyVisionFog::DeltaSec' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_UpdateEnemyVisionFog, LPlayerList) == 0x000008, "Member 'BP_EnemyManager_C_UpdateEnemyVisionFog::LPlayerList' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_UpdateEnemyVisionFog, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000018, "Member 'BP_EnemyManager_C_UpdateEnemyVisionFog::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_UpdateEnemyVisionFog, CallFunc_FClamp_ReturnValue) == 0x00001C, "Member 'BP_EnemyManager_C_UpdateEnemyVisionFog::CallFunc_FClamp_ReturnValue' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.DebugSetHpImmediate
// 0x0060 (0x0060 - 0x0000)
struct BP_EnemyManager_C_DebugSetHpImmediate final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Dummy;                                             // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_60C3[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_60C4[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattlePlayer_C*                      K2Node_DynamicCast_AsRSBattle_Player;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_60C5[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetCurrentTargetActor_TargetActor;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_60C6[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattleCharacter_C*                   K2Node_DynamicCast_AsRSBattle_Character;           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_60C7[0x6];                                     // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CharacterParamater_C> CallFunc_SetHP_self_CastInput;                     // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetHP_bDummy;                             // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyManager_C_DebugSetHpImmediate) == 0x000008, "Wrong alignment on BP_EnemyManager_C_DebugSetHpImmediate");
static_assert(sizeof(BP_EnemyManager_C_DebugSetHpImmediate) == 0x000060, "Wrong size on BP_EnemyManager_C_DebugSetHpImmediate");
static_assert(offsetof(BP_EnemyManager_C_DebugSetHpImmediate, Value) == 0x000000, "Member 'BP_EnemyManager_C_DebugSetHpImmediate::Value' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugSetHpImmediate, Dummy) == 0x000004, "Member 'BP_EnemyManager_C_DebugSetHpImmediate::Dummy' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugSetHpImmediate, CallFunc_GetPlayerPawn_ReturnValue) == 0x000008, "Member 'BP_EnemyManager_C_DebugSetHpImmediate::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugSetHpImmediate, CallFunc_FTrunc_ReturnValue) == 0x000010, "Member 'BP_EnemyManager_C_DebugSetHpImmediate::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugSetHpImmediate, CallFunc_IsValid_ReturnValue) == 0x000014, "Member 'BP_EnemyManager_C_DebugSetHpImmediate::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugSetHpImmediate, K2Node_DynamicCast_AsRSBattle_Player) == 0x000018, "Member 'BP_EnemyManager_C_DebugSetHpImmediate::K2Node_DynamicCast_AsRSBattle_Player' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugSetHpImmediate, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_EnemyManager_C_DebugSetHpImmediate::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugSetHpImmediate, CallFunc_GetCurrentTargetActor_TargetActor) == 0x000028, "Member 'BP_EnemyManager_C_DebugSetHpImmediate::CallFunc_GetCurrentTargetActor_TargetActor' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugSetHpImmediate, CallFunc_IsValid_ReturnValue_1) == 0x000030, "Member 'BP_EnemyManager_C_DebugSetHpImmediate::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugSetHpImmediate, K2Node_DynamicCast_AsRSBattle_Character) == 0x000038, "Member 'BP_EnemyManager_C_DebugSetHpImmediate::K2Node_DynamicCast_AsRSBattle_Character' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugSetHpImmediate, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'BP_EnemyManager_C_DebugSetHpImmediate::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugSetHpImmediate, CallFunc_IsValid_ReturnValue_2) == 0x000041, "Member 'BP_EnemyManager_C_DebugSetHpImmediate::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugSetHpImmediate, CallFunc_SetHP_self_CastInput) == 0x000048, "Member 'BP_EnemyManager_C_DebugSetHpImmediate::CallFunc_SetHP_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugSetHpImmediate, CallFunc_SetHP_bDummy) == 0x000058, "Member 'BP_EnemyManager_C_DebugSetHpImmediate::CallFunc_SetHP_bDummy' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.DebugSetHpRate
// 0x0088 (0x0088 - 0x0000)
struct BP_EnemyManager_C_DebugSetHpRate final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Dummy;                                             // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_60C8[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         L_Immediate;                                       // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_60C9[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattlePlayer_C*                      K2Node_DynamicCast_AsRSBattle_Player;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_60CA[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetCurrentTargetActor_TargetActor;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_60CB[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattleCharacter_C*                   K2Node_DynamicCast_AsRSBattle_Character;           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_60CC[0x6];                                     // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CharacterParamater_C> CallFunc_GetMaxHP_self_CastInput;                  // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetMaxHP_MaxHP;                           // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_CharacterParamater_C> CallFunc_SetHP_self_CastInput;                     // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetHP_bDummy;                             // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_60CD[0x3];                                     // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EnemyManager_C_DebugSetHpRate) == 0x000008, "Wrong alignment on BP_EnemyManager_C_DebugSetHpRate");
static_assert(sizeof(BP_EnemyManager_C_DebugSetHpRate) == 0x000088, "Wrong size on BP_EnemyManager_C_DebugSetHpRate");
static_assert(offsetof(BP_EnemyManager_C_DebugSetHpRate, Value) == 0x000000, "Member 'BP_EnemyManager_C_DebugSetHpRate::Value' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugSetHpRate, Dummy) == 0x000004, "Member 'BP_EnemyManager_C_DebugSetHpRate::Dummy' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugSetHpRate, L_Immediate) == 0x000008, "Member 'BP_EnemyManager_C_DebugSetHpRate::L_Immediate' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugSetHpRate, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00000C, "Member 'BP_EnemyManager_C_DebugSetHpRate::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugSetHpRate, CallFunc_GetPlayerPawn_ReturnValue) == 0x000010, "Member 'BP_EnemyManager_C_DebugSetHpRate::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugSetHpRate, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_EnemyManager_C_DebugSetHpRate::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugSetHpRate, K2Node_DynamicCast_AsRSBattle_Player) == 0x000020, "Member 'BP_EnemyManager_C_DebugSetHpRate::K2Node_DynamicCast_AsRSBattle_Player' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugSetHpRate, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_EnemyManager_C_DebugSetHpRate::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugSetHpRate, CallFunc_GetCurrentTargetActor_TargetActor) == 0x000030, "Member 'BP_EnemyManager_C_DebugSetHpRate::CallFunc_GetCurrentTargetActor_TargetActor' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugSetHpRate, CallFunc_IsValid_ReturnValue_1) == 0x000038, "Member 'BP_EnemyManager_C_DebugSetHpRate::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugSetHpRate, K2Node_DynamicCast_AsRSBattle_Character) == 0x000040, "Member 'BP_EnemyManager_C_DebugSetHpRate::K2Node_DynamicCast_AsRSBattle_Character' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugSetHpRate, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'BP_EnemyManager_C_DebugSetHpRate::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugSetHpRate, CallFunc_IsValid_ReturnValue_2) == 0x000049, "Member 'BP_EnemyManager_C_DebugSetHpRate::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugSetHpRate, CallFunc_GetMaxHP_self_CastInput) == 0x000050, "Member 'BP_EnemyManager_C_DebugSetHpRate::CallFunc_GetMaxHP_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugSetHpRate, CallFunc_GetMaxHP_MaxHP) == 0x000060, "Member 'BP_EnemyManager_C_DebugSetHpRate::CallFunc_GetMaxHP_MaxHP' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugSetHpRate, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000064, "Member 'BP_EnemyManager_C_DebugSetHpRate::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugSetHpRate, CallFunc_SetHP_self_CastInput) == 0x000068, "Member 'BP_EnemyManager_C_DebugSetHpRate::CallFunc_SetHP_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugSetHpRate, CallFunc_SetHP_bDummy) == 0x000078, "Member 'BP_EnemyManager_C_DebugSetHpRate::CallFunc_SetHP_bDummy' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugSetHpRate, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x00007C, "Member 'BP_EnemyManager_C_DebugSetHpRate::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugSetHpRate, CallFunc_FTrunc_ReturnValue) == 0x000080, "Member 'BP_EnemyManager_C_DebugSetHpRate::CallFunc_FTrunc_ReturnValue' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.StopEnemyAll
// 0x0028 (0x0028 - 0x0000)
struct BP_EnemyManager_C_StopEnemyAll final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_60CE[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ARSCharacterBase*>               CallFunc_GetEnemyList_ReturnValue;                 // 0x0010(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyManager_C_StopEnemyAll) == 0x000008, "Wrong alignment on BP_EnemyManager_C_StopEnemyAll");
static_assert(sizeof(BP_EnemyManager_C_StopEnemyAll) == 0x000028, "Wrong size on BP_EnemyManager_C_StopEnemyAll");
static_assert(offsetof(BP_EnemyManager_C_StopEnemyAll, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_EnemyManager_C_StopEnemyAll::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_StopEnemyAll, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_EnemyManager_C_StopEnemyAll::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_StopEnemyAll, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_EnemyManager_C_StopEnemyAll::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_StopEnemyAll, CallFunc_GetEnemyList_ReturnValue) == 0x000010, "Member 'BP_EnemyManager_C_StopEnemyAll::CallFunc_GetEnemyList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_StopEnemyAll, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_EnemyManager_C_StopEnemyAll::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_StopEnemyAll, CallFunc_Less_IntInt_ReturnValue) == 0x000024, "Member 'BP_EnemyManager_C_StopEnemyAll::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.SetEm8300Manager
// 0x0008 (0x0008 - 0x0000)
struct BP_EnemyManager_C_SetEm8300Manager final
{
public:
	class AActor*                                 Manager;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EnemyManager_C_SetEm8300Manager) == 0x000008, "Wrong alignment on BP_EnemyManager_C_SetEm8300Manager");
static_assert(sizeof(BP_EnemyManager_C_SetEm8300Manager) == 0x000008, "Wrong size on BP_EnemyManager_C_SetEm8300Manager");
static_assert(offsetof(BP_EnemyManager_C_SetEm8300Manager, Manager) == 0x000000, "Member 'BP_EnemyManager_C_SetEm8300Manager::Manager' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.IsBattleCourtMort
// 0x0001 (0x0001 - 0x0000)
struct BP_EnemyManager_C_IsBattleCourtMort final
{
public:
	bool                                          Param_IsCourtMort;                                 // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyManager_C_IsBattleCourtMort) == 0x000001, "Wrong alignment on BP_EnemyManager_C_IsBattleCourtMort");
static_assert(sizeof(BP_EnemyManager_C_IsBattleCourtMort) == 0x000001, "Wrong size on BP_EnemyManager_C_IsBattleCourtMort");
static_assert(offsetof(BP_EnemyManager_C_IsBattleCourtMort, Param_IsCourtMort) == 0x000000, "Member 'BP_EnemyManager_C_IsBattleCourtMort::Param_IsCourtMort' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.SetBattleCourtMort
// 0x0001 (0x0001 - 0x0000)
struct BP_EnemyManager_C_SetBattleCourtMort final
{
public:
	bool                                          Param_IsCourtMort;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyManager_C_SetBattleCourtMort) == 0x000001, "Wrong alignment on BP_EnemyManager_C_SetBattleCourtMort");
static_assert(sizeof(BP_EnemyManager_C_SetBattleCourtMort) == 0x000001, "Wrong size on BP_EnemyManager_C_SetBattleCourtMort");
static_assert(offsetof(BP_EnemyManager_C_SetBattleCourtMort, Param_IsCourtMort) == 0x000000, "Member 'BP_EnemyManager_C_SetBattleCourtMort::Param_IsCourtMort' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.SetCourtMortActor
// 0x0008 (0x0008 - 0x0000)
struct BP_EnemyManager_C_SetCourtMortActor final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EnemyManager_C_SetCourtMortActor) == 0x000008, "Wrong alignment on BP_EnemyManager_C_SetCourtMortActor");
static_assert(sizeof(BP_EnemyManager_C_SetCourtMortActor) == 0x000008, "Wrong size on BP_EnemyManager_C_SetCourtMortActor");
static_assert(offsetof(BP_EnemyManager_C_SetCourtMortActor, Actor) == 0x000000, "Member 'BP_EnemyManager_C_SetCourtMortActor::Actor' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.GetCourtMortActor
// 0x0008 (0x0008 - 0x0000)
struct BP_EnemyManager_C_GetCourtMortActor final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EnemyManager_C_GetCourtMortActor) == 0x000008, "Wrong alignment on BP_EnemyManager_C_GetCourtMortActor");
static_assert(sizeof(BP_EnemyManager_C_GetCourtMortActor) == 0x000008, "Wrong size on BP_EnemyManager_C_GetCourtMortActor");
static_assert(offsetof(BP_EnemyManager_C_GetCourtMortActor, Actor) == 0x000000, "Member 'BP_EnemyManager_C_GetCourtMortActor::Actor' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.DebugCallUniqueEvent
// 0x0008 (0x0008 - 0x0000)
struct BP_EnemyManager_C_DebugCallUniqueEvent final
{
public:
	int32                                         EventNo;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Dummy;                                             // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyManager_C_DebugCallUniqueEvent) == 0x000004, "Wrong alignment on BP_EnemyManager_C_DebugCallUniqueEvent");
static_assert(sizeof(BP_EnemyManager_C_DebugCallUniqueEvent) == 0x000008, "Wrong size on BP_EnemyManager_C_DebugCallUniqueEvent");
static_assert(offsetof(BP_EnemyManager_C_DebugCallUniqueEvent, EventNo) == 0x000000, "Member 'BP_EnemyManager_C_DebugCallUniqueEvent::EventNo' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugCallUniqueEvent, Dummy) == 0x000004, "Member 'BP_EnemyManager_C_DebugCallUniqueEvent::Dummy' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.RegisterVisionFogArea
// 0x0048 (0x0048 - 0x0000)
struct BP_EnemyManager_C_RegisterVisionFogArea final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Radius;                                            // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Param_Name;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	struct FVisionFogAreaInfo                     K2Node_MakeStruct_VisionFogAreaInfo;               // 0x0020(0x0020)()
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EnemyManager_C_RegisterVisionFogArea) == 0x000008, "Wrong alignment on BP_EnemyManager_C_RegisterVisionFogArea");
static_assert(sizeof(BP_EnemyManager_C_RegisterVisionFogArea) == 0x000048, "Wrong size on BP_EnemyManager_C_RegisterVisionFogArea");
static_assert(offsetof(BP_EnemyManager_C_RegisterVisionFogArea, Location) == 0x000000, "Member 'BP_EnemyManager_C_RegisterVisionFogArea::Location' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_RegisterVisionFogArea, Radius) == 0x00000C, "Member 'BP_EnemyManager_C_RegisterVisionFogArea::Radius' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_RegisterVisionFogArea, Param_Name) == 0x000010, "Member 'BP_EnemyManager_C_RegisterVisionFogArea::Param_Name' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_RegisterVisionFogArea, K2Node_MakeStruct_VisionFogAreaInfo) == 0x000020, "Member 'BP_EnemyManager_C_RegisterVisionFogArea::K2Node_MakeStruct_VisionFogAreaInfo' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_RegisterVisionFogArea, CallFunc_Array_Add_ReturnValue) == 0x000040, "Member 'BP_EnemyManager_C_RegisterVisionFogArea::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.UnregisterVisionFogArea
// 0x0050 (0x0050 - 0x0000)
struct BP_EnemyManager_C_UnregisterVisionFogArea final
{
public:
	class FString                                 Param_Name;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_60CF[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_60D0[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVisionFogAreaInfo                     CallFunc_Array_Get_Item;                           // 0x0028(0x0020)()
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyManager_C_UnregisterVisionFogArea) == 0x000008, "Wrong alignment on BP_EnemyManager_C_UnregisterVisionFogArea");
static_assert(sizeof(BP_EnemyManager_C_UnregisterVisionFogArea) == 0x000050, "Wrong size on BP_EnemyManager_C_UnregisterVisionFogArea");
static_assert(offsetof(BP_EnemyManager_C_UnregisterVisionFogArea, Param_Name) == 0x000000, "Member 'BP_EnemyManager_C_UnregisterVisionFogArea::Param_Name' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_UnregisterVisionFogArea, Temp_bool_True_if_break_was_hit_Variable) == 0x000010, "Member 'BP_EnemyManager_C_UnregisterVisionFogArea::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_UnregisterVisionFogArea, Temp_int_Array_Index_Variable) == 0x000014, "Member 'BP_EnemyManager_C_UnregisterVisionFogArea::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_UnregisterVisionFogArea, CallFunc_Not_PreBool_ReturnValue) == 0x000018, "Member 'BP_EnemyManager_C_UnregisterVisionFogArea::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_UnregisterVisionFogArea, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'BP_EnemyManager_C_UnregisterVisionFogArea::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_UnregisterVisionFogArea, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BP_EnemyManager_C_UnregisterVisionFogArea::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_UnregisterVisionFogArea, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'BP_EnemyManager_C_UnregisterVisionFogArea::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_UnregisterVisionFogArea, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_EnemyManager_C_UnregisterVisionFogArea::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_UnregisterVisionFogArea, CallFunc_Less_IntInt_ReturnValue) == 0x000048, "Member 'BP_EnemyManager_C_UnregisterVisionFogArea::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_UnregisterVisionFogArea, CallFunc_BooleanAND_ReturnValue) == 0x000049, "Member 'BP_EnemyManager_C_UnregisterVisionFogArea::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_UnregisterVisionFogArea, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x00004A, "Member 'BP_EnemyManager_C_UnregisterVisionFogArea::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.GetVisionFogAreaList
// 0x0010 (0x0010 - 0x0000)
struct BP_EnemyManager_C_GetVisionFogAreaList final
{
public:
	TArray<struct FVisionFogAreaInfo>             Param_VisionFogAreaList;                           // 0x0000(0x0010)(Parm, OutParm, HasGetValueTypeHash)
};
static_assert(alignof(BP_EnemyManager_C_GetVisionFogAreaList) == 0x000008, "Wrong alignment on BP_EnemyManager_C_GetVisionFogAreaList");
static_assert(sizeof(BP_EnemyManager_C_GetVisionFogAreaList) == 0x000010, "Wrong size on BP_EnemyManager_C_GetVisionFogAreaList");
static_assert(offsetof(BP_EnemyManager_C_GetVisionFogAreaList, Param_VisionFogAreaList) == 0x000000, "Member 'BP_EnemyManager_C_GetVisionFogAreaList::Param_VisionFogAreaList' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.SetVisionFogAction
// 0x0001 (0x0001 - 0x0000)
struct BP_EnemyManager_C_SetVisionFogAction final
{
public:
	bool                                          bAction;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyManager_C_SetVisionFogAction) == 0x000001, "Wrong alignment on BP_EnemyManager_C_SetVisionFogAction");
static_assert(sizeof(BP_EnemyManager_C_SetVisionFogAction) == 0x000001, "Wrong size on BP_EnemyManager_C_SetVisionFogAction");
static_assert(offsetof(BP_EnemyManager_C_SetVisionFogAction, bAction) == 0x000000, "Member 'BP_EnemyManager_C_SetVisionFogAction::bAction' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.IsVisionFogAction
// 0x0002 (0x0002 - 0x0000)
struct BP_EnemyManager_C_IsVisionFogAction final
{
public:
	bool                                          bAction;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyManager_C_IsVisionFogAction) == 0x000001, "Wrong alignment on BP_EnemyManager_C_IsVisionFogAction");
static_assert(sizeof(BP_EnemyManager_C_IsVisionFogAction) == 0x000002, "Wrong size on BP_EnemyManager_C_IsVisionFogAction");
static_assert(offsetof(BP_EnemyManager_C_IsVisionFogAction, bAction) == 0x000000, "Member 'BP_EnemyManager_C_IsVisionFogAction::bAction' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_IsVisionFogAction, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000001, "Member 'BP_EnemyManager_C_IsVisionFogAction::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.CheckUniqueBrainCrash
// 0x0140 (0x0140 - 0x0000)
struct BP_EnemyManager_C_CheckUniqueBrainCrash final
{
public:
	bool                                          IsBoss;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsGeneral;                                         // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          RequestJudgmentUniqueCoolTime;                     // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          RequestJudgmentSearchSafePoint;                    // 0x0003(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_60D1[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       LBrainCrashTarget;                                 // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattleCharacter_C*                   K2Node_DynamicCast_AsRSBattle_Character;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_60D2[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_CreateUniqueBrainCrashPlayedListKeyName_KeyName; // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsUniqueBrainCrashPlayed_ReturnValue;     // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_60D3[0x1];                                     // 0x0033(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_60D4[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattleEnemy_C*                       K2Node_DynamicCast_AsRSBattle_Enemy;               // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsUseBattleFieldFence_return;             // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_60D5[0x2];                                     // 0x004A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattleEnemy_C*                       K2Node_DynamicCast_AsRSBattle_Enemy_1;             // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_60D6[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_EnemyInterface_C> K2Node_DynamicCast_AsBPI_Enemy_Interface;          // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsBossEnemy_bBoss;                        // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_60D7[0x6];                                     // 0x0072(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BattlefieldManager_C*               CallFunc_GetBattlefieldManager_BP_BattlefieldManager; // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_60D8[0x3];                                     // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FBattlefieldInfo>               CallFunc_Map_Values_Values;                        // 0x0088(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class ABP_BrainFieldManager_C*                CallFunc_GetBrainFieldManager_Manager;             // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBattlefieldInfo                       CallFunc_Array_Get_Item_1;                         // 0x00A0(0x0088)()
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_60D9[0x2];                                     // 0x012A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetGroupEnemyCount_GroupCount;            // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_InBranField_InBrainDield;                 // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnemyLastOne_IsLastOne;                 // 0x0132(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_60DA[0x1];                                     // 0x0133(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyManager_C_CheckUniqueBrainCrash) == 0x000008, "Wrong alignment on BP_EnemyManager_C_CheckUniqueBrainCrash");
static_assert(sizeof(BP_EnemyManager_C_CheckUniqueBrainCrash) == 0x000140, "Wrong size on BP_EnemyManager_C_CheckUniqueBrainCrash");
static_assert(offsetof(BP_EnemyManager_C_CheckUniqueBrainCrash, IsBoss) == 0x000000, "Member 'BP_EnemyManager_C_CheckUniqueBrainCrash::IsBoss' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_CheckUniqueBrainCrash, IsGeneral) == 0x000001, "Member 'BP_EnemyManager_C_CheckUniqueBrainCrash::IsGeneral' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_CheckUniqueBrainCrash, RequestJudgmentUniqueCoolTime) == 0x000002, "Member 'BP_EnemyManager_C_CheckUniqueBrainCrash::RequestJudgmentUniqueCoolTime' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_CheckUniqueBrainCrash, RequestJudgmentSearchSafePoint) == 0x000003, "Member 'BP_EnemyManager_C_CheckUniqueBrainCrash::RequestJudgmentSearchSafePoint' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_CheckUniqueBrainCrash, LBrainCrashTarget) == 0x000008, "Member 'BP_EnemyManager_C_CheckUniqueBrainCrash::LBrainCrashTarget' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_CheckUniqueBrainCrash, K2Node_DynamicCast_AsRSBattle_Character) == 0x000010, "Member 'BP_EnemyManager_C_CheckUniqueBrainCrash::K2Node_DynamicCast_AsRSBattle_Character' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_CheckUniqueBrainCrash, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_EnemyManager_C_CheckUniqueBrainCrash::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_CheckUniqueBrainCrash, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_EnemyManager_C_CheckUniqueBrainCrash::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_CheckUniqueBrainCrash, CallFunc_CreateUniqueBrainCrashPlayedListKeyName_KeyName) == 0x000028, "Member 'BP_EnemyManager_C_CheckUniqueBrainCrash::CallFunc_CreateUniqueBrainCrashPlayedListKeyName_KeyName' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_CheckUniqueBrainCrash, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BP_EnemyManager_C_CheckUniqueBrainCrash::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_CheckUniqueBrainCrash, CallFunc_IsUniqueBrainCrashPlayed_ReturnValue) == 0x000031, "Member 'BP_EnemyManager_C_CheckUniqueBrainCrash::CallFunc_IsUniqueBrainCrashPlayed_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_CheckUniqueBrainCrash, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000032, "Member 'BP_EnemyManager_C_CheckUniqueBrainCrash::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_CheckUniqueBrainCrash, CallFunc_Array_Length_ReturnValue) == 0x000034, "Member 'BP_EnemyManager_C_CheckUniqueBrainCrash::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_CheckUniqueBrainCrash, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000038, "Member 'BP_EnemyManager_C_CheckUniqueBrainCrash::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_CheckUniqueBrainCrash, K2Node_DynamicCast_AsRSBattle_Enemy) == 0x000040, "Member 'BP_EnemyManager_C_CheckUniqueBrainCrash::K2Node_DynamicCast_AsRSBattle_Enemy' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_CheckUniqueBrainCrash, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'BP_EnemyManager_C_CheckUniqueBrainCrash::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_CheckUniqueBrainCrash, CallFunc_IsUseBattleFieldFence_return) == 0x000049, "Member 'BP_EnemyManager_C_CheckUniqueBrainCrash::CallFunc_IsUseBattleFieldFence_return' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_CheckUniqueBrainCrash, Temp_int_Loop_Counter_Variable) == 0x00004C, "Member 'BP_EnemyManager_C_CheckUniqueBrainCrash::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_CheckUniqueBrainCrash, K2Node_DynamicCast_AsRSBattle_Enemy_1) == 0x000050, "Member 'BP_EnemyManager_C_CheckUniqueBrainCrash::K2Node_DynamicCast_AsRSBattle_Enemy_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_CheckUniqueBrainCrash, K2Node_DynamicCast_bSuccess_2) == 0x000058, "Member 'BP_EnemyManager_C_CheckUniqueBrainCrash::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_CheckUniqueBrainCrash, CallFunc_Add_IntInt_ReturnValue) == 0x00005C, "Member 'BP_EnemyManager_C_CheckUniqueBrainCrash::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_CheckUniqueBrainCrash, K2Node_DynamicCast_AsBPI_Enemy_Interface) == 0x000060, "Member 'BP_EnemyManager_C_CheckUniqueBrainCrash::K2Node_DynamicCast_AsBPI_Enemy_Interface' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_CheckUniqueBrainCrash, K2Node_DynamicCast_bSuccess_3) == 0x000070, "Member 'BP_EnemyManager_C_CheckUniqueBrainCrash::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_CheckUniqueBrainCrash, CallFunc_IsBossEnemy_bBoss) == 0x000071, "Member 'BP_EnemyManager_C_CheckUniqueBrainCrash::CallFunc_IsBossEnemy_bBoss' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_CheckUniqueBrainCrash, CallFunc_GetBattlefieldManager_BP_BattlefieldManager) == 0x000078, "Member 'BP_EnemyManager_C_CheckUniqueBrainCrash::CallFunc_GetBattlefieldManager_BP_BattlefieldManager' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_CheckUniqueBrainCrash, Temp_int_Array_Index_Variable) == 0x000080, "Member 'BP_EnemyManager_C_CheckUniqueBrainCrash::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_CheckUniqueBrainCrash, CallFunc_IsValid_ReturnValue_1) == 0x000084, "Member 'BP_EnemyManager_C_CheckUniqueBrainCrash::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_CheckUniqueBrainCrash, CallFunc_Map_Values_Values) == 0x000088, "Member 'BP_EnemyManager_C_CheckUniqueBrainCrash::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_CheckUniqueBrainCrash, CallFunc_GetBrainFieldManager_Manager) == 0x000098, "Member 'BP_EnemyManager_C_CheckUniqueBrainCrash::CallFunc_GetBrainFieldManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_CheckUniqueBrainCrash, CallFunc_Array_Get_Item_1) == 0x0000A0, "Member 'BP_EnemyManager_C_CheckUniqueBrainCrash::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_CheckUniqueBrainCrash, CallFunc_IsValid_ReturnValue_2) == 0x000128, "Member 'BP_EnemyManager_C_CheckUniqueBrainCrash::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_CheckUniqueBrainCrash, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000129, "Member 'BP_EnemyManager_C_CheckUniqueBrainCrash::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_CheckUniqueBrainCrash, CallFunc_GetGroupEnemyCount_GroupCount) == 0x00012C, "Member 'BP_EnemyManager_C_CheckUniqueBrainCrash::CallFunc_GetGroupEnemyCount_GroupCount' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_CheckUniqueBrainCrash, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000130, "Member 'BP_EnemyManager_C_CheckUniqueBrainCrash::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_CheckUniqueBrainCrash, CallFunc_InBranField_InBrainDield) == 0x000131, "Member 'BP_EnemyManager_C_CheckUniqueBrainCrash::CallFunc_InBranField_InBrainDield' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_CheckUniqueBrainCrash, CallFunc_IsEnemyLastOne_IsLastOne) == 0x000132, "Member 'BP_EnemyManager_C_CheckUniqueBrainCrash::CallFunc_IsEnemyLastOne_IsLastOne' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_CheckUniqueBrainCrash, CallFunc_Array_Length_ReturnValue_1) == 0x000134, "Member 'BP_EnemyManager_C_CheckUniqueBrainCrash::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_CheckUniqueBrainCrash, CallFunc_Less_IntInt_ReturnValue) == 0x000138, "Member 'BP_EnemyManager_C_CheckUniqueBrainCrash::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.InitializeUniqueBrainCrashPlayedList
// 0x0050 (0x0050 - 0x0000)
struct BP_EnemyManager_C_InitializeUniqueBrainCrashPlayedList final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_60DB[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ARSCharacterBase*>               CallFunc_GetEnemyListRef_ReturnValue;              // 0x0010(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_60DC[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_60DD[0x6];                                     // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattleCharacter_C*                   K2Node_DynamicCast_AsRSBattle_Character;           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_60DE[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_CreateUniqueBrainCrashPlayedListKeyName_KeyName; // 0x0044(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EnemyManager_C_InitializeUniqueBrainCrashPlayedList) == 0x000008, "Wrong alignment on BP_EnemyManager_C_InitializeUniqueBrainCrashPlayedList");
static_assert(sizeof(BP_EnemyManager_C_InitializeUniqueBrainCrashPlayedList) == 0x000050, "Wrong size on BP_EnemyManager_C_InitializeUniqueBrainCrashPlayedList");
static_assert(offsetof(BP_EnemyManager_C_InitializeUniqueBrainCrashPlayedList, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_EnemyManager_C_InitializeUniqueBrainCrashPlayedList::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_InitializeUniqueBrainCrashPlayedList, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_EnemyManager_C_InitializeUniqueBrainCrashPlayedList::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_InitializeUniqueBrainCrashPlayedList, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_EnemyManager_C_InitializeUniqueBrainCrashPlayedList::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_InitializeUniqueBrainCrashPlayedList, CallFunc_GetEnemyListRef_ReturnValue) == 0x000010, "Member 'BP_EnemyManager_C_InitializeUniqueBrainCrashPlayedList::CallFunc_GetEnemyListRef_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_InitializeUniqueBrainCrashPlayedList, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_EnemyManager_C_InitializeUniqueBrainCrashPlayedList::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_InitializeUniqueBrainCrashPlayedList, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_EnemyManager_C_InitializeUniqueBrainCrashPlayedList::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_InitializeUniqueBrainCrashPlayedList, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'BP_EnemyManager_C_InitializeUniqueBrainCrashPlayedList::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_InitializeUniqueBrainCrashPlayedList, CallFunc_IsValid_ReturnValue) == 0x000031, "Member 'BP_EnemyManager_C_InitializeUniqueBrainCrashPlayedList::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_InitializeUniqueBrainCrashPlayedList, K2Node_DynamicCast_AsRSBattle_Character) == 0x000038, "Member 'BP_EnemyManager_C_InitializeUniqueBrainCrashPlayedList::K2Node_DynamicCast_AsRSBattle_Character' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_InitializeUniqueBrainCrashPlayedList, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_EnemyManager_C_InitializeUniqueBrainCrashPlayedList::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_InitializeUniqueBrainCrashPlayedList, CallFunc_CreateUniqueBrainCrashPlayedListKeyName_KeyName) == 0x000044, "Member 'BP_EnemyManager_C_InitializeUniqueBrainCrashPlayedList::CallFunc_CreateUniqueBrainCrashPlayedListKeyName_KeyName' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_InitializeUniqueBrainCrashPlayedList, CallFunc_Array_AddUnique_ReturnValue) == 0x00004C, "Member 'BP_EnemyManager_C_InitializeUniqueBrainCrashPlayedList::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.CreateUniqueBrainCrashPlayedListKeyName
// 0x0028 (0x0028 - 0x0000)
struct BP_EnemyManager_C_CreateUniqueBrainCrashPlayedListKeyName final
{
public:
	class ARSCharacterBase*                       TargetEnemy;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   KeyName;                                           // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattleEnemy_C*                       K2Node_DynamicCast_AsRSBattle_Enemy;               // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_60DF[0x2];                                     // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetName_ReturnValue;                      // 0x001C(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EnemyManager_C_CreateUniqueBrainCrashPlayedListKeyName) == 0x000008, "Wrong alignment on BP_EnemyManager_C_CreateUniqueBrainCrashPlayedListKeyName");
static_assert(sizeof(BP_EnemyManager_C_CreateUniqueBrainCrashPlayedListKeyName) == 0x000028, "Wrong size on BP_EnemyManager_C_CreateUniqueBrainCrashPlayedListKeyName");
static_assert(offsetof(BP_EnemyManager_C_CreateUniqueBrainCrashPlayedListKeyName, TargetEnemy) == 0x000000, "Member 'BP_EnemyManager_C_CreateUniqueBrainCrashPlayedListKeyName::TargetEnemy' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_CreateUniqueBrainCrashPlayedListKeyName, KeyName) == 0x000008, "Member 'BP_EnemyManager_C_CreateUniqueBrainCrashPlayedListKeyName::KeyName' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_CreateUniqueBrainCrashPlayedListKeyName, K2Node_DynamicCast_AsRSBattle_Enemy) == 0x000010, "Member 'BP_EnemyManager_C_CreateUniqueBrainCrashPlayedListKeyName::K2Node_DynamicCast_AsRSBattle_Enemy' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_CreateUniqueBrainCrashPlayedListKeyName, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_EnemyManager_C_CreateUniqueBrainCrashPlayedListKeyName::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_CreateUniqueBrainCrashPlayedListKeyName, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'BP_EnemyManager_C_CreateUniqueBrainCrashPlayedListKeyName::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_CreateUniqueBrainCrashPlayedListKeyName, CallFunc_GetName_ReturnValue) == 0x00001C, "Member 'BP_EnemyManager_C_CreateUniqueBrainCrashPlayedListKeyName::CallFunc_GetName_ReturnValue' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.UpdateUniqueBrainCrashPlayedList
// 0x0038 (0x0038 - 0x0000)
struct BP_EnemyManager_C_UpdateUniqueBrainCrashPlayedList final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_60E0[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattleCharacter_C*                   K2Node_DynamicCast_AsRSBattle_Character;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_60E1[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_CreateUniqueBrainCrashPlayedListKeyName_KeyName; // 0x001C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_60E2[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyManager_C_UpdateUniqueBrainCrashPlayedList) == 0x000008, "Wrong alignment on BP_EnemyManager_C_UpdateUniqueBrainCrashPlayedList");
static_assert(sizeof(BP_EnemyManager_C_UpdateUniqueBrainCrashPlayedList) == 0x000038, "Wrong size on BP_EnemyManager_C_UpdateUniqueBrainCrashPlayedList");
static_assert(offsetof(BP_EnemyManager_C_UpdateUniqueBrainCrashPlayedList, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_EnemyManager_C_UpdateUniqueBrainCrashPlayedList::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_UpdateUniqueBrainCrashPlayedList, Temp_int_Loop_Num_Variable) == 0x000004, "Member 'BP_EnemyManager_C_UpdateUniqueBrainCrashPlayedList::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_UpdateUniqueBrainCrashPlayedList, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_EnemyManager_C_UpdateUniqueBrainCrashPlayedList::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_UpdateUniqueBrainCrashPlayedList, CallFunc_IsValid_ReturnValue) == 0x00000C, "Member 'BP_EnemyManager_C_UpdateUniqueBrainCrashPlayedList::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_UpdateUniqueBrainCrashPlayedList, K2Node_DynamicCast_AsRSBattle_Character) == 0x000010, "Member 'BP_EnemyManager_C_UpdateUniqueBrainCrashPlayedList::K2Node_DynamicCast_AsRSBattle_Character' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_UpdateUniqueBrainCrashPlayedList, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_EnemyManager_C_UpdateUniqueBrainCrashPlayedList::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_UpdateUniqueBrainCrashPlayedList, CallFunc_CreateUniqueBrainCrashPlayedListKeyName_KeyName) == 0x00001C, "Member 'BP_EnemyManager_C_UpdateUniqueBrainCrashPlayedList::CallFunc_CreateUniqueBrainCrashPlayedListKeyName_KeyName' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_UpdateUniqueBrainCrashPlayedList, CallFunc_Less_IntInt_ReturnValue) == 0x000024, "Member 'BP_EnemyManager_C_UpdateUniqueBrainCrashPlayedList::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_UpdateUniqueBrainCrashPlayedList, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BP_EnemyManager_C_UpdateUniqueBrainCrashPlayedList::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_UpdateUniqueBrainCrashPlayedList, CallFunc_Array_Length_ReturnValue) == 0x00002C, "Member 'BP_EnemyManager_C_UpdateUniqueBrainCrashPlayedList::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_UpdateUniqueBrainCrashPlayedList, CallFunc_Array_Find_ReturnValue) == 0x000030, "Member 'BP_EnemyManager_C_UpdateUniqueBrainCrashPlayedList::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_UpdateUniqueBrainCrashPlayedList, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000034, "Member 'BP_EnemyManager_C_UpdateUniqueBrainCrashPlayedList::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.UpdateUniqueBrainCrashFlag
// 0x0001 (0x0001 - 0x0000)
struct BP_EnemyManager_C_UpdateUniqueBrainCrashFlag final
{
public:
	bool                                          IsUnique;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyManager_C_UpdateUniqueBrainCrashFlag) == 0x000001, "Wrong alignment on BP_EnemyManager_C_UpdateUniqueBrainCrashFlag");
static_assert(sizeof(BP_EnemyManager_C_UpdateUniqueBrainCrashFlag) == 0x000001, "Wrong size on BP_EnemyManager_C_UpdateUniqueBrainCrashFlag");
static_assert(offsetof(BP_EnemyManager_C_UpdateUniqueBrainCrashFlag, IsUnique) == 0x000000, "Member 'BP_EnemyManager_C_UpdateUniqueBrainCrashFlag::IsUnique' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.SelectBrainCrashMultiCharacters
// 0x0080 (0x0080 - 0x0000)
struct BP_EnemyManager_C_SelectBrainCrashMultiCharacters final
{
public:
	class ARSBattleCharacter_C*                   LockTarget;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ARSBattleCharacter_C*>           TargetCharactersList;                              // 0x0008(0x0010)(Parm, OutParm, HasGetValueTypeHash)
	TArray<class ARSBattleCharacter_C*>           L_ReturnList;                                      // 0x0018(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_60E3[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_CalcAnySearchBase_BaseLocation;           // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_CalcAnySearchBase_BaseDir;                // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_60E4[0x4];                                     // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ARSCharacterBase*>               CallFunc_SelectBrainCrashMultiTarget_ReturnValue;  // 0x0058(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x006D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_60E5[0x2];                                     // 0x006E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattleCharacter_C*                   K2Node_DynamicCast_AsRSBattle_Character;           // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_60E6[0x3];                                     // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EnemyManager_C_SelectBrainCrashMultiCharacters) == 0x000008, "Wrong alignment on BP_EnemyManager_C_SelectBrainCrashMultiCharacters");
static_assert(sizeof(BP_EnemyManager_C_SelectBrainCrashMultiCharacters) == 0x000080, "Wrong size on BP_EnemyManager_C_SelectBrainCrashMultiCharacters");
static_assert(offsetof(BP_EnemyManager_C_SelectBrainCrashMultiCharacters, LockTarget) == 0x000000, "Member 'BP_EnemyManager_C_SelectBrainCrashMultiCharacters::LockTarget' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SelectBrainCrashMultiCharacters, TargetCharactersList) == 0x000008, "Member 'BP_EnemyManager_C_SelectBrainCrashMultiCharacters::TargetCharactersList' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SelectBrainCrashMultiCharacters, L_ReturnList) == 0x000018, "Member 'BP_EnemyManager_C_SelectBrainCrashMultiCharacters::L_ReturnList' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SelectBrainCrashMultiCharacters, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BP_EnemyManager_C_SelectBrainCrashMultiCharacters::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SelectBrainCrashMultiCharacters, Temp_int_Array_Index_Variable) == 0x00002C, "Member 'BP_EnemyManager_C_SelectBrainCrashMultiCharacters::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SelectBrainCrashMultiCharacters, Temp_int_Loop_Counter_Variable) == 0x000030, "Member 'BP_EnemyManager_C_SelectBrainCrashMultiCharacters::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SelectBrainCrashMultiCharacters, CallFunc_Array_Add_ReturnValue) == 0x000034, "Member 'BP_EnemyManager_C_SelectBrainCrashMultiCharacters::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SelectBrainCrashMultiCharacters, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'BP_EnemyManager_C_SelectBrainCrashMultiCharacters::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SelectBrainCrashMultiCharacters, CallFunc_CalcAnySearchBase_BaseLocation) == 0x00003C, "Member 'BP_EnemyManager_C_SelectBrainCrashMultiCharacters::CallFunc_CalcAnySearchBase_BaseLocation' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SelectBrainCrashMultiCharacters, CallFunc_CalcAnySearchBase_BaseDir) == 0x000048, "Member 'BP_EnemyManager_C_SelectBrainCrashMultiCharacters::CallFunc_CalcAnySearchBase_BaseDir' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SelectBrainCrashMultiCharacters, CallFunc_SelectBrainCrashMultiTarget_ReturnValue) == 0x000058, "Member 'BP_EnemyManager_C_SelectBrainCrashMultiCharacters::CallFunc_SelectBrainCrashMultiTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SelectBrainCrashMultiCharacters, CallFunc_Array_Length_ReturnValue) == 0x000068, "Member 'BP_EnemyManager_C_SelectBrainCrashMultiCharacters::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SelectBrainCrashMultiCharacters, CallFunc_IsValid_ReturnValue_1) == 0x00006C, "Member 'BP_EnemyManager_C_SelectBrainCrashMultiCharacters::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SelectBrainCrashMultiCharacters, CallFunc_Less_IntInt_ReturnValue) == 0x00006D, "Member 'BP_EnemyManager_C_SelectBrainCrashMultiCharacters::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SelectBrainCrashMultiCharacters, K2Node_DynamicCast_AsRSBattle_Character) == 0x000070, "Member 'BP_EnemyManager_C_SelectBrainCrashMultiCharacters::K2Node_DynamicCast_AsRSBattle_Character' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SelectBrainCrashMultiCharacters, K2Node_DynamicCast_bSuccess) == 0x000078, "Member 'BP_EnemyManager_C_SelectBrainCrashMultiCharacters::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SelectBrainCrashMultiCharacters, CallFunc_Array_AddUnique_ReturnValue) == 0x00007C, "Member 'BP_EnemyManager_C_SelectBrainCrashMultiCharacters::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.StartCourtMortBattle
// 0x0010 (0x0010 - 0x0000)
struct BP_EnemyManager_C_StartCourtMortBattle final
{
public:
	class ABP_em1500Base_C*                       K2Node_DynamicCast_AsBP_Em_1500Base;               // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyManager_C_StartCourtMortBattle) == 0x000008, "Wrong alignment on BP_EnemyManager_C_StartCourtMortBattle");
static_assert(sizeof(BP_EnemyManager_C_StartCourtMortBattle) == 0x000010, "Wrong size on BP_EnemyManager_C_StartCourtMortBattle");
static_assert(offsetof(BP_EnemyManager_C_StartCourtMortBattle, K2Node_DynamicCast_AsBP_Em_1500Base) == 0x000000, "Member 'BP_EnemyManager_C_StartCourtMortBattle::K2Node_DynamicCast_AsBP_Em_1500Base' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_StartCourtMortBattle, K2Node_DynamicCast_bSuccess) == 0x000008, "Member 'BP_EnemyManager_C_StartCourtMortBattle::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_StartCourtMortBattle, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'BP_EnemyManager_C_StartCourtMortBattle::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.GetAddedEnemy
// 0x0080 (0x0080 - 0x0000)
struct BP_EnemyManager_C_GetAddedEnemy final
{
public:
	TArray<class ARSBattleCharacter_C*>           LocalSelectCharacters;                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	TArray<class ARSBattleCharacter_C*>           DifferenceCharacters;                              // 0x0010(0x0010)(Parm, OutParm, HasGetValueTypeHash)
	TArray<class ARSBattleCharacter_C*>           LReturn;                                           // 0x0020(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_60E7[0x2];                                     // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_60E8[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_60E9[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_60EA[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattleCharacter_C*                   CallFunc_Array_Get_Item;                           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0073(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyManager_C_GetAddedEnemy) == 0x000008, "Wrong alignment on BP_EnemyManager_C_GetAddedEnemy");
static_assert(sizeof(BP_EnemyManager_C_GetAddedEnemy) == 0x000080, "Wrong size on BP_EnemyManager_C_GetAddedEnemy");
static_assert(offsetof(BP_EnemyManager_C_GetAddedEnemy, LocalSelectCharacters) == 0x000000, "Member 'BP_EnemyManager_C_GetAddedEnemy::LocalSelectCharacters' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_GetAddedEnemy, DifferenceCharacters) == 0x000010, "Member 'BP_EnemyManager_C_GetAddedEnemy::DifferenceCharacters' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_GetAddedEnemy, LReturn) == 0x000020, "Member 'BP_EnemyManager_C_GetAddedEnemy::LReturn' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_GetAddedEnemy, Temp_bool_True_if_break_was_hit_Variable) == 0x000030, "Member 'BP_EnemyManager_C_GetAddedEnemy::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_GetAddedEnemy, CallFunc_Not_PreBool_ReturnValue) == 0x000031, "Member 'BP_EnemyManager_C_GetAddedEnemy::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_GetAddedEnemy, Temp_int_Loop_Counter_Variable) == 0x000034, "Member 'BP_EnemyManager_C_GetAddedEnemy::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_GetAddedEnemy, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'BP_EnemyManager_C_GetAddedEnemy::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_GetAddedEnemy, Temp_int_Array_Index_Variable) == 0x00003C, "Member 'BP_EnemyManager_C_GetAddedEnemy::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_GetAddedEnemy, Temp_int_Loop_Counter_Variable_1) == 0x000040, "Member 'BP_EnemyManager_C_GetAddedEnemy::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_GetAddedEnemy, CallFunc_Array_Length_ReturnValue) == 0x000044, "Member 'BP_EnemyManager_C_GetAddedEnemy::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_GetAddedEnemy, CallFunc_Add_IntInt_ReturnValue_1) == 0x000048, "Member 'BP_EnemyManager_C_GetAddedEnemy::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_GetAddedEnemy, CallFunc_Array_Length_ReturnValue_1) == 0x00004C, "Member 'BP_EnemyManager_C_GetAddedEnemy::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_GetAddedEnemy, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000050, "Member 'BP_EnemyManager_C_GetAddedEnemy::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_GetAddedEnemy, Temp_int_Array_Index_Variable_1) == 0x000054, "Member 'BP_EnemyManager_C_GetAddedEnemy::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_GetAddedEnemy, CallFunc_IsValid_ReturnValue) == 0x000058, "Member 'BP_EnemyManager_C_GetAddedEnemy::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_GetAddedEnemy, Temp_int_Loop_Num_Variable) == 0x00005C, "Member 'BP_EnemyManager_C_GetAddedEnemy::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_GetAddedEnemy, CallFunc_Less_IntInt_ReturnValue) == 0x000060, "Member 'BP_EnemyManager_C_GetAddedEnemy::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_GetAddedEnemy, CallFunc_Array_Get_Item) == 0x000068, "Member 'BP_EnemyManager_C_GetAddedEnemy::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_GetAddedEnemy, CallFunc_BooleanAND_ReturnValue) == 0x000070, "Member 'BP_EnemyManager_C_GetAddedEnemy::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_GetAddedEnemy, CallFunc_Array_RemoveItem_ReturnValue) == 0x000071, "Member 'BP_EnemyManager_C_GetAddedEnemy::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_GetAddedEnemy, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000072, "Member 'BP_EnemyManager_C_GetAddedEnemy::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_GetAddedEnemy, CallFunc_IsValid_ReturnValue_1) == 0x000073, "Member 'BP_EnemyManager_C_GetAddedEnemy::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_GetAddedEnemy, CallFunc_Array_Length_ReturnValue_2) == 0x000074, "Member 'BP_EnemyManager_C_GetAddedEnemy::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_GetAddedEnemy, CallFunc_Less_IntInt_ReturnValue_1) == 0x000078, "Member 'BP_EnemyManager_C_GetAddedEnemy::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.SetNaomiActor
// 0x0008 (0x0008 - 0x0000)
struct BP_EnemyManager_C_SetNaomiActor final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EnemyManager_C_SetNaomiActor) == 0x000008, "Wrong alignment on BP_EnemyManager_C_SetNaomiActor");
static_assert(sizeof(BP_EnemyManager_C_SetNaomiActor) == 0x000008, "Wrong size on BP_EnemyManager_C_SetNaomiActor");
static_assert(offsetof(BP_EnemyManager_C_SetNaomiActor, Actor) == 0x000000, "Member 'BP_EnemyManager_C_SetNaomiActor::Actor' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.NaomiChangePhaseParamSetting
// 0x0020 (0x0020 - 0x0000)
struct BP_EnemyManager_C_NaomiChangePhaseParamSetting final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_60EB[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_EnemyInterface_C> K2Node_DynamicCast_AsBPI_Enemy_Interface;          // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_em1200_ChangePhaseParamSetting_dummy;     // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyManager_C_NaomiChangePhaseParamSetting) == 0x000008, "Wrong alignment on BP_EnemyManager_C_NaomiChangePhaseParamSetting");
static_assert(sizeof(BP_EnemyManager_C_NaomiChangePhaseParamSetting) == 0x000020, "Wrong size on BP_EnemyManager_C_NaomiChangePhaseParamSetting");
static_assert(offsetof(BP_EnemyManager_C_NaomiChangePhaseParamSetting, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_EnemyManager_C_NaomiChangePhaseParamSetting::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_NaomiChangePhaseParamSetting, K2Node_DynamicCast_AsBPI_Enemy_Interface) == 0x000008, "Member 'BP_EnemyManager_C_NaomiChangePhaseParamSetting::K2Node_DynamicCast_AsBPI_Enemy_Interface' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_NaomiChangePhaseParamSetting, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_EnemyManager_C_NaomiChangePhaseParamSetting::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_NaomiChangePhaseParamSetting, CallFunc_em1200_ChangePhaseParamSetting_dummy) == 0x000019, "Member 'BP_EnemyManager_C_NaomiChangePhaseParamSetting::CallFunc_em1200_ChangePhaseParamSetting_dummy' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.RepopEntry
// 0x0090 (0x0090 - 0x0000)
struct BP_EnemyManager_C_RepopEntry final
{
public:
	float                                         Time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Range;                                             // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Probability;                                       // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_60EC[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ClassBpPath;                                       // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                InitPos;                                           // 0x0020(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MoveArea;                                          // 0x002C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   LevelName;                                         // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Group;                                             // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SubGroup;                                          // 0x003C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   UniqueId;                                          // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Level;                                             // 0x0048(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DropId;                                            // 0x0050(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_60ED[0x4];                                     // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       NewParam;                                          // 0x0058(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          TmpCheckList;                                      // 0x0060(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_60EE[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FEnemyRepopGroupInfo>           TmpGroupInfoList;                                  // 0x0068(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<struct FEnemyRepopInfo>                TmpRepopInfo;                                      // 0x0078(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EnemyManager_C_RepopEntry) == 0x000008, "Wrong alignment on BP_EnemyManager_C_RepopEntry");
static_assert(sizeof(BP_EnemyManager_C_RepopEntry) == 0x000090, "Wrong size on BP_EnemyManager_C_RepopEntry");
static_assert(offsetof(BP_EnemyManager_C_RepopEntry, Time) == 0x000000, "Member 'BP_EnemyManager_C_RepopEntry::Time' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_RepopEntry, Range) == 0x000004, "Member 'BP_EnemyManager_C_RepopEntry::Range' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_RepopEntry, Probability) == 0x000008, "Member 'BP_EnemyManager_C_RepopEntry::Probability' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_RepopEntry, ClassBpPath) == 0x000010, "Member 'BP_EnemyManager_C_RepopEntry::ClassBpPath' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_RepopEntry, InitPos) == 0x000020, "Member 'BP_EnemyManager_C_RepopEntry::InitPos' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_RepopEntry, MoveArea) == 0x00002C, "Member 'BP_EnemyManager_C_RepopEntry::MoveArea' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_RepopEntry, LevelName) == 0x000030, "Member 'BP_EnemyManager_C_RepopEntry::LevelName' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_RepopEntry, Group) == 0x000038, "Member 'BP_EnemyManager_C_RepopEntry::Group' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_RepopEntry, SubGroup) == 0x00003C, "Member 'BP_EnemyManager_C_RepopEntry::SubGroup' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_RepopEntry, UniqueId) == 0x000040, "Member 'BP_EnemyManager_C_RepopEntry::UniqueId' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_RepopEntry, Level) == 0x000048, "Member 'BP_EnemyManager_C_RepopEntry::Level' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_RepopEntry, DropId) == 0x000050, "Member 'BP_EnemyManager_C_RepopEntry::DropId' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_RepopEntry, NewParam) == 0x000058, "Member 'BP_EnemyManager_C_RepopEntry::NewParam' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_RepopEntry, TmpCheckList) == 0x000060, "Member 'BP_EnemyManager_C_RepopEntry::TmpCheckList' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_RepopEntry, TmpGroupInfoList) == 0x000068, "Member 'BP_EnemyManager_C_RepopEntry::TmpGroupInfoList' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_RepopEntry, TmpRepopInfo) == 0x000078, "Member 'BP_EnemyManager_C_RepopEntry::TmpRepopInfo' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_RepopEntry, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000088, "Member 'BP_EnemyManager_C_RepopEntry::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.RepopUpdate
// 0x0150 (0x0150 - 0x0000)
struct BP_EnemyManager_C_RepopUpdate final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsInScene;                                         // 0x0004(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsNowPlayerLocation;                               // 0x0005(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_60EF[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 NowLocationName;                                   // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          TmpEnbaleRepop;                                    // 0x0018(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          TmpChangeList;                                     // 0x0019(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_60F0[0x6];                                     // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FEnemyRepopGroupInfo>           TmpRepopGroupInfo;                                 // 0x0020(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	class FName                                   TmpNowPlayerLevel;                                 // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FEnemyRepopInfo>                TmpRepopInfo;                                      // 0x0038(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	float                                         TmpTime;                                           // 0x0048(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x004C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_60F1[0x4];                                     // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ARSCharacterBase*>               CallFunc_GetEnemyList_ReturnValue;                 // 0x0058(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_RepopUpdateNative_ReturnValue;            // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_60F2[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_Array_Get_Item;                           // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_60F3[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattleEnemy_C*                       K2Node_DynamicCast_AsRSBattle_Enemy;               // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_60F4[0x3];                                     // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetLocationAreaID_LocationID;             // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetLocationAreaID_AreaID;                 // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_60F5[0x4];                                     // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SceneManager_C*                     CallFunc_GetSceneManager_SceneManager;             // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsStatusInScene_IsInScene;                // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_60F6[0x2];                                     // 0x00A2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetCurrentLocationAndArea_LocationID;     // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCurrentLocationAndArea_AreaID;         // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_60F7[0x4];                                     // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TMap<class FName, struct FEnemyRepopLevelInfo> CallFunc_GetEnemyRepopLevelInfoList_ReturnValue;   // 0x00D0(0x0050)()
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0120(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Map_Length_ReturnValue;                   // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_60F8[0x4];                                     // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0138(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0149(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_1;            // 0x014A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_2;            // 0x014B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_3;            // 0x014C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyManager_C_RepopUpdate) == 0x000008, "Wrong alignment on BP_EnemyManager_C_RepopUpdate");
static_assert(sizeof(BP_EnemyManager_C_RepopUpdate) == 0x000150, "Wrong size on BP_EnemyManager_C_RepopUpdate");
static_assert(offsetof(BP_EnemyManager_C_RepopUpdate, DeltaSeconds) == 0x000000, "Member 'BP_EnemyManager_C_RepopUpdate::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_RepopUpdate, IsInScene) == 0x000004, "Member 'BP_EnemyManager_C_RepopUpdate::IsInScene' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_RepopUpdate, IsNowPlayerLocation) == 0x000005, "Member 'BP_EnemyManager_C_RepopUpdate::IsNowPlayerLocation' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_RepopUpdate, NowLocationName) == 0x000008, "Member 'BP_EnemyManager_C_RepopUpdate::NowLocationName' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_RepopUpdate, TmpEnbaleRepop) == 0x000018, "Member 'BP_EnemyManager_C_RepopUpdate::TmpEnbaleRepop' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_RepopUpdate, TmpChangeList) == 0x000019, "Member 'BP_EnemyManager_C_RepopUpdate::TmpChangeList' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_RepopUpdate, TmpRepopGroupInfo) == 0x000020, "Member 'BP_EnemyManager_C_RepopUpdate::TmpRepopGroupInfo' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_RepopUpdate, TmpNowPlayerLevel) == 0x000030, "Member 'BP_EnemyManager_C_RepopUpdate::TmpNowPlayerLevel' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_RepopUpdate, TmpRepopInfo) == 0x000038, "Member 'BP_EnemyManager_C_RepopUpdate::TmpRepopInfo' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_RepopUpdate, TmpTime) == 0x000048, "Member 'BP_EnemyManager_C_RepopUpdate::TmpTime' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_RepopUpdate, CallFunc_Conv_StringToName_ReturnValue) == 0x00004C, "Member 'BP_EnemyManager_C_RepopUpdate::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_RepopUpdate, CallFunc_GetEnemyList_ReturnValue) == 0x000058, "Member 'BP_EnemyManager_C_RepopUpdate::CallFunc_GetEnemyList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_RepopUpdate, CallFunc_RepopUpdateNative_ReturnValue) == 0x000068, "Member 'BP_EnemyManager_C_RepopUpdate::CallFunc_RepopUpdateNative_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_RepopUpdate, CallFunc_Array_Get_Item) == 0x000070, "Member 'BP_EnemyManager_C_RepopUpdate::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_RepopUpdate, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000078, "Member 'BP_EnemyManager_C_RepopUpdate::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_RepopUpdate, K2Node_DynamicCast_AsRSBattle_Enemy) == 0x000080, "Member 'BP_EnemyManager_C_RepopUpdate::K2Node_DynamicCast_AsRSBattle_Enemy' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_RepopUpdate, K2Node_DynamicCast_bSuccess) == 0x000088, "Member 'BP_EnemyManager_C_RepopUpdate::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_RepopUpdate, CallFunc_GetLocationAreaID_LocationID) == 0x00008C, "Member 'BP_EnemyManager_C_RepopUpdate::CallFunc_GetLocationAreaID_LocationID' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_RepopUpdate, CallFunc_GetLocationAreaID_AreaID) == 0x000090, "Member 'BP_EnemyManager_C_RepopUpdate::CallFunc_GetLocationAreaID_AreaID' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_RepopUpdate, CallFunc_GetSceneManager_SceneManager) == 0x000098, "Member 'BP_EnemyManager_C_RepopUpdate::CallFunc_GetSceneManager_SceneManager' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_RepopUpdate, CallFunc_IsValid_ReturnValue) == 0x0000A0, "Member 'BP_EnemyManager_C_RepopUpdate::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_RepopUpdate, CallFunc_IsStatusInScene_IsInScene) == 0x0000A1, "Member 'BP_EnemyManager_C_RepopUpdate::CallFunc_IsStatusInScene_IsInScene' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_RepopUpdate, CallFunc_GetCurrentLocationAndArea_LocationID) == 0x0000A4, "Member 'BP_EnemyManager_C_RepopUpdate::CallFunc_GetCurrentLocationAndArea_LocationID' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_RepopUpdate, CallFunc_GetCurrentLocationAndArea_AreaID) == 0x0000A8, "Member 'BP_EnemyManager_C_RepopUpdate::CallFunc_GetCurrentLocationAndArea_AreaID' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_RepopUpdate, CallFunc_Conv_IntToString_ReturnValue) == 0x0000B0, "Member 'BP_EnemyManager_C_RepopUpdate::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_RepopUpdate, CallFunc_Conv_IntToString_ReturnValue_1) == 0x0000C0, "Member 'BP_EnemyManager_C_RepopUpdate::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_RepopUpdate, CallFunc_GetEnemyRepopLevelInfoList_ReturnValue) == 0x0000D0, "Member 'BP_EnemyManager_C_RepopUpdate::CallFunc_GetEnemyRepopLevelInfoList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_RepopUpdate, CallFunc_Concat_StrStr_ReturnValue) == 0x000120, "Member 'BP_EnemyManager_C_RepopUpdate::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_RepopUpdate, CallFunc_Map_Length_ReturnValue) == 0x000130, "Member 'BP_EnemyManager_C_RepopUpdate::CallFunc_Map_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_RepopUpdate, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000138, "Member 'BP_EnemyManager_C_RepopUpdate::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_RepopUpdate, CallFunc_Greater_IntInt_ReturnValue) == 0x000148, "Member 'BP_EnemyManager_C_RepopUpdate::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_RepopUpdate, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000149, "Member 'BP_EnemyManager_C_RepopUpdate::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_RepopUpdate, CallFunc_NotEqual_IntInt_ReturnValue_1) == 0x00014A, "Member 'BP_EnemyManager_C_RepopUpdate::CallFunc_NotEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_RepopUpdate, CallFunc_NotEqual_IntInt_ReturnValue_2) == 0x00014B, "Member 'BP_EnemyManager_C_RepopUpdate::CallFunc_NotEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_RepopUpdate, CallFunc_NotEqual_IntInt_ReturnValue_3) == 0x00014C, "Member 'BP_EnemyManager_C_RepopUpdate::CallFunc_NotEqual_IntInt_ReturnValue_3' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.CheckEventBrainCrash
// 0x0030 (0x0030 - 0x0000)
struct BP_EnemyManager_C_CheckEventBrainCrash final
{
public:
	bool                                          IsEvent;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bIsEvent;                                          // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_60F9[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_GetBrainCrashTargetChara_TargetChara;     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetBrainCrashEvent_Event;                 // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_60FA[0x6];                                     // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattleCharacter_C*                   K2Node_DynamicCast_AsRSBattle_Character;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLastBrainCrash_IsLast;                  // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyManager_C_CheckEventBrainCrash) == 0x000008, "Wrong alignment on BP_EnemyManager_C_CheckEventBrainCrash");
static_assert(sizeof(BP_EnemyManager_C_CheckEventBrainCrash) == 0x000030, "Wrong size on BP_EnemyManager_C_CheckEventBrainCrash");
static_assert(offsetof(BP_EnemyManager_C_CheckEventBrainCrash, IsEvent) == 0x000000, "Member 'BP_EnemyManager_C_CheckEventBrainCrash::IsEvent' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_CheckEventBrainCrash, bIsEvent) == 0x000001, "Member 'BP_EnemyManager_C_CheckEventBrainCrash::bIsEvent' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_CheckEventBrainCrash, CallFunc_GetBrainCrashTargetChara_TargetChara) == 0x000008, "Member 'BP_EnemyManager_C_CheckEventBrainCrash::CallFunc_GetBrainCrashTargetChara_TargetChara' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_CheckEventBrainCrash, CallFunc_GetBrainCrashEvent_Event) == 0x000010, "Member 'BP_EnemyManager_C_CheckEventBrainCrash::CallFunc_GetBrainCrashEvent_Event' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_CheckEventBrainCrash, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_EnemyManager_C_CheckEventBrainCrash::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_CheckEventBrainCrash, CallFunc_IsValidClass_ReturnValue) == 0x000019, "Member 'BP_EnemyManager_C_CheckEventBrainCrash::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_CheckEventBrainCrash, K2Node_DynamicCast_AsRSBattle_Character) == 0x000020, "Member 'BP_EnemyManager_C_CheckEventBrainCrash::K2Node_DynamicCast_AsRSBattle_Character' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_CheckEventBrainCrash, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_EnemyManager_C_CheckEventBrainCrash::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_CheckEventBrainCrash, CallFunc_IsLastBrainCrash_IsLast) == 0x000029, "Member 'BP_EnemyManager_C_CheckEventBrainCrash::CallFunc_IsLastBrainCrash_IsLast' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.GetBrainCrashEvent
// 0x0030 (0x0030 - 0x0000)
struct BP_EnemyManager_C_GetBrainCrashEvent final
{
public:
	class UClass*                                 Event;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 LEvent;                                            // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSCharacterBase*                       CallFunc_GetBrainCrashTargetChara_TargetChara;     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_60FB[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattleCharacter_C*                   K2Node_DynamicCast_AsRSBattle_Character;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyManager_C_GetBrainCrashEvent) == 0x000008, "Wrong alignment on BP_EnemyManager_C_GetBrainCrashEvent");
static_assert(sizeof(BP_EnemyManager_C_GetBrainCrashEvent) == 0x000030, "Wrong size on BP_EnemyManager_C_GetBrainCrashEvent");
static_assert(offsetof(BP_EnemyManager_C_GetBrainCrashEvent, Event) == 0x000000, "Member 'BP_EnemyManager_C_GetBrainCrashEvent::Event' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_GetBrainCrashEvent, LEvent) == 0x000008, "Member 'BP_EnemyManager_C_GetBrainCrashEvent::LEvent' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_GetBrainCrashEvent, CallFunc_GetBrainCrashTargetChara_TargetChara) == 0x000010, "Member 'BP_EnemyManager_C_GetBrainCrashEvent::CallFunc_GetBrainCrashTargetChara_TargetChara' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_GetBrainCrashEvent, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_EnemyManager_C_GetBrainCrashEvent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_GetBrainCrashEvent, K2Node_DynamicCast_AsRSBattle_Character) == 0x000020, "Member 'BP_EnemyManager_C_GetBrainCrashEvent::K2Node_DynamicCast_AsRSBattle_Character' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_GetBrainCrashEvent, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_EnemyManager_C_GetBrainCrashEvent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_GetBrainCrashEvent, CallFunc_IsValidClass_ReturnValue) == 0x000029, "Member 'BP_EnemyManager_C_GetBrainCrashEvent::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.GetBrainCrashTargetChara
// 0x0020 (0x0020 - 0x0000)
struct BP_EnemyManager_C_GetBrainCrashTargetChara final
{
public:
	class ARSCharacterBase*                       TargetChara;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSCharacterBase*                       LTarget;                                           // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSCharacterBase*                       CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyManager_C_GetBrainCrashTargetChara) == 0x000008, "Wrong alignment on BP_EnemyManager_C_GetBrainCrashTargetChara");
static_assert(sizeof(BP_EnemyManager_C_GetBrainCrashTargetChara) == 0x000020, "Wrong size on BP_EnemyManager_C_GetBrainCrashTargetChara");
static_assert(offsetof(BP_EnemyManager_C_GetBrainCrashTargetChara, TargetChara) == 0x000000, "Member 'BP_EnemyManager_C_GetBrainCrashTargetChara::TargetChara' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_GetBrainCrashTargetChara, LTarget) == 0x000008, "Member 'BP_EnemyManager_C_GetBrainCrashTargetChara::LTarget' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_GetBrainCrashTargetChara, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_EnemyManager_C_GetBrainCrashTargetChara::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_GetBrainCrashTargetChara, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_EnemyManager_C_GetBrainCrashTargetChara::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_GetBrainCrashTargetChara, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000019, "Member 'BP_EnemyManager_C_GetBrainCrashTargetChara::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.RepopClear
// 0x0010 (0x0010 - 0x0000)
struct BP_EnemyManager_C_RepopClear final
{
public:
	class USaveLoadParamClassManager*             CallFunc_GetSaveLoadParamClassManager_SaveLoadParamClassManager; // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLoadExecution_ReturnValue;              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyManager_C_RepopClear) == 0x000008, "Wrong alignment on BP_EnemyManager_C_RepopClear");
static_assert(sizeof(BP_EnemyManager_C_RepopClear) == 0x000010, "Wrong size on BP_EnemyManager_C_RepopClear");
static_assert(offsetof(BP_EnemyManager_C_RepopClear, CallFunc_GetSaveLoadParamClassManager_SaveLoadParamClassManager) == 0x000000, "Member 'BP_EnemyManager_C_RepopClear::CallFunc_GetSaveLoadParamClassManager_SaveLoadParamClassManager' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_RepopClear, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_EnemyManager_C_RepopClear::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_RepopClear, CallFunc_IsLoadExecution_ReturnValue) == 0x000009, "Member 'BP_EnemyManager_C_RepopClear::CallFunc_IsLoadExecution_ReturnValue' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.RepopCheckInsideCamera
// 0x0058 (0x0058 - 0x0000)
struct BP_EnemyManager_C_RepopCheckInsideCamera final
{
public:
	struct FVector                                MyPos;                                             // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsInside;                                          // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_60FC[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCameraLocation_ReturnValue;            // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTargetAngle_TargeDegreetAngle;         // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyManager_C_RepopCheckInsideCamera) == 0x000008, "Wrong alignment on BP_EnemyManager_C_RepopCheckInsideCamera");
static_assert(sizeof(BP_EnemyManager_C_RepopCheckInsideCamera) == 0x000058, "Wrong size on BP_EnemyManager_C_RepopCheckInsideCamera");
static_assert(offsetof(BP_EnemyManager_C_RepopCheckInsideCamera, MyPos) == 0x000000, "Member 'BP_EnemyManager_C_RepopCheckInsideCamera::MyPos' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_RepopCheckInsideCamera, IsInside) == 0x00000C, "Member 'BP_EnemyManager_C_RepopCheckInsideCamera::IsInside' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_RepopCheckInsideCamera, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000010, "Member 'BP_EnemyManager_C_RepopCheckInsideCamera::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_RepopCheckInsideCamera, CallFunc_GetCameraLocation_ReturnValue) == 0x000018, "Member 'BP_EnemyManager_C_RepopCheckInsideCamera::CallFunc_GetCameraLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_RepopCheckInsideCamera, CallFunc_GetActorForwardVector_ReturnValue) == 0x000024, "Member 'BP_EnemyManager_C_RepopCheckInsideCamera::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_RepopCheckInsideCamera, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000030, "Member 'BP_EnemyManager_C_RepopCheckInsideCamera::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_RepopCheckInsideCamera, CallFunc_Normal_ReturnValue) == 0x00003C, "Member 'BP_EnemyManager_C_RepopCheckInsideCamera::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_RepopCheckInsideCamera, CallFunc_GetTargetAngle_TargeDegreetAngle) == 0x000048, "Member 'BP_EnemyManager_C_RepopCheckInsideCamera::CallFunc_GetTargetAngle_TargeDegreetAngle' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_RepopCheckInsideCamera, CallFunc_Abs_ReturnValue) == 0x00004C, "Member 'BP_EnemyManager_C_RepopCheckInsideCamera::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_RepopCheckInsideCamera, CallFunc_Less_FloatFloat_ReturnValue) == 0x000050, "Member 'BP_EnemyManager_C_RepopCheckInsideCamera::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.EntryAreaCheck
// 0x0010 (0x0010 - 0x0000)
struct BP_EnemyManager_C_EntryAreaCheck final
{
public:
	class ARSBattleEnemy_C*                       Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_60FD[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EnemyManager_C_EntryAreaCheck) == 0x000008, "Wrong alignment on BP_EnemyManager_C_EntryAreaCheck");
static_assert(sizeof(BP_EnemyManager_C_EntryAreaCheck) == 0x000010, "Wrong size on BP_EnemyManager_C_EntryAreaCheck");
static_assert(offsetof(BP_EnemyManager_C_EntryAreaCheck, Target) == 0x000000, "Member 'BP_EnemyManager_C_EntryAreaCheck::Target' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_EntryAreaCheck, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_EnemyManager_C_EntryAreaCheck::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_EntryAreaCheck, CallFunc_Array_Add_ReturnValue) == 0x00000C, "Member 'BP_EnemyManager_C_EntryAreaCheck::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.UpdateAreaCheck
// 0x0030 (0x0030 - 0x0000)
struct BP_EnemyManager_C_UpdateAreaCheck final
{
public:
	float                                         DeltaSec;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_60FE[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattleEnemy_C*                       TmpCheckEnemy;                                     // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOver_ReturnValue;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnable_ReturnValue;                     // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_60FF[0x2];                                     // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattleEnemy_C*                       CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6100[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_PreAreaCheck_ReturnValue;                 // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPathAreaOut_AreaOut;                    // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyManager_C_UpdateAreaCheck) == 0x000008, "Wrong alignment on BP_EnemyManager_C_UpdateAreaCheck");
static_assert(sizeof(BP_EnemyManager_C_UpdateAreaCheck) == 0x000030, "Wrong size on BP_EnemyManager_C_UpdateAreaCheck");
static_assert(offsetof(BP_EnemyManager_C_UpdateAreaCheck, DeltaSec) == 0x000000, "Member 'BP_EnemyManager_C_UpdateAreaCheck::DeltaSec' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_UpdateAreaCheck, TmpCheckEnemy) == 0x000008, "Member 'BP_EnemyManager_C_UpdateAreaCheck::TmpCheckEnemy' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_UpdateAreaCheck, CallFunc_IsOver_ReturnValue) == 0x000010, "Member 'BP_EnemyManager_C_UpdateAreaCheck::CallFunc_IsOver_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_UpdateAreaCheck, CallFunc_IsEnable_ReturnValue) == 0x000011, "Member 'BP_EnemyManager_C_UpdateAreaCheck::CallFunc_IsEnable_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_UpdateAreaCheck, CallFunc_Array_Add_ReturnValue) == 0x000014, "Member 'BP_EnemyManager_C_UpdateAreaCheck::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_UpdateAreaCheck, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_EnemyManager_C_UpdateAreaCheck::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_UpdateAreaCheck, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_EnemyManager_C_UpdateAreaCheck::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_UpdateAreaCheck, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'BP_EnemyManager_C_UpdateAreaCheck::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_UpdateAreaCheck, CallFunc_Greater_IntInt_ReturnValue) == 0x000028, "Member 'BP_EnemyManager_C_UpdateAreaCheck::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_UpdateAreaCheck, CallFunc_PreAreaCheck_ReturnValue) == 0x000029, "Member 'BP_EnemyManager_C_UpdateAreaCheck::CallFunc_PreAreaCheck_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_UpdateAreaCheck, CallFunc_IsPathAreaOut_AreaOut) == 0x00002A, "Member 'BP_EnemyManager_C_UpdateAreaCheck::CallFunc_IsPathAreaOut_AreaOut' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.EndAreaCheck
// 0x0010 (0x0010 - 0x0000)
struct BP_EnemyManager_C_EndAreaCheck final
{
public:
	class ARSBattleEnemy_C*                       Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyManager_C_EndAreaCheck) == 0x000008, "Wrong alignment on BP_EnemyManager_C_EndAreaCheck");
static_assert(sizeof(BP_EnemyManager_C_EndAreaCheck) == 0x000010, "Wrong size on BP_EnemyManager_C_EndAreaCheck");
static_assert(offsetof(BP_EnemyManager_C_EndAreaCheck, Target) == 0x000000, "Member 'BP_EnemyManager_C_EndAreaCheck::Target' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_EndAreaCheck, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_EnemyManager_C_EndAreaCheck::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_EndAreaCheck, CallFunc_Array_RemoveItem_ReturnValue) == 0x000009, "Member 'BP_EnemyManager_C_EndAreaCheck::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.SetBrainCrashEventFlag
// 0x0020 (0x0020 - 0x0000)
struct BP_EnemyManager_C_SetBrainCrashEventFlag final
{
public:
	class ARSCharacterBase*                       CallFunc_GetBrainCrashTargetChara_TargetChara;     // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6101[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattleCharacter_C*                   K2Node_DynamicCast_AsRSBattle_Character;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyManager_C_SetBrainCrashEventFlag) == 0x000008, "Wrong alignment on BP_EnemyManager_C_SetBrainCrashEventFlag");
static_assert(sizeof(BP_EnemyManager_C_SetBrainCrashEventFlag) == 0x000020, "Wrong size on BP_EnemyManager_C_SetBrainCrashEventFlag");
static_assert(offsetof(BP_EnemyManager_C_SetBrainCrashEventFlag, CallFunc_GetBrainCrashTargetChara_TargetChara) == 0x000000, "Member 'BP_EnemyManager_C_SetBrainCrashEventFlag::CallFunc_GetBrainCrashTargetChara_TargetChara' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetBrainCrashEventFlag, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_EnemyManager_C_SetBrainCrashEventFlag::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetBrainCrashEventFlag, K2Node_DynamicCast_AsRSBattle_Character) == 0x000010, "Member 'BP_EnemyManager_C_SetBrainCrashEventFlag::K2Node_DynamicCast_AsRSBattle_Character' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetBrainCrashEventFlag, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_EnemyManager_C_SetBrainCrashEventFlag::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.SetEnableOutOfBattleField
// 0x0108 (0x0108 - 0x0000)
struct BP_EnemyManager_C_SetEnableOutOfBattleField final
{
public:
	bool                                          SetEnable;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6102[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         GroupID;                                           // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          beforeIsBoss;                                      // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsBossInBattleField;                               // 0x0009(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6103[0x6];                                     // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattleEnemy_C*                       LEnemy;                                            // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_Value;                           // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Map_Find_Value_1;                         // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x001F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Map_Remove_ReturnValue;                   // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsBossBattlefield_InBoss;                 // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_PreCheckSetEnableOutOfBattlefield_NewParam; // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6104[0x1];                                     // 0x0023(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6105[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BrainFieldManager_C*                CallFunc_GetBrainFieldManager_Manager;             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInvokeBrainField_InvokeBrainField;      // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6106[0x6];                                     // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BattlefieldManager_C*               CallFunc_GetBattlefieldManager_BP_BattlefieldManager; // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBattlefieldInfo                       CallFunc_GetBattlefieldInfo_BFInfo;                // 0x0048(0x0088)()
	bool                                          CallFunc_GetBattlefieldInfo_IsExist;               // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6107[0x7];                                     // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ARSCharacterBase*>               CallFunc_GetEnemyList_ReturnValue;                 // 0x00D8(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class ARSCharacterBase*                       CallFunc_Array_Get_Item;                           // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6108[0x4];                                     // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattleEnemy_C*                       K2Node_DynamicCast_AsRSBattle_Enemy;               // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyManager_C_SetEnableOutOfBattleField) == 0x000008, "Wrong alignment on BP_EnemyManager_C_SetEnableOutOfBattleField");
static_assert(sizeof(BP_EnemyManager_C_SetEnableOutOfBattleField) == 0x000108, "Wrong size on BP_EnemyManager_C_SetEnableOutOfBattleField");
static_assert(offsetof(BP_EnemyManager_C_SetEnableOutOfBattleField, SetEnable) == 0x000000, "Member 'BP_EnemyManager_C_SetEnableOutOfBattleField::SetEnable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetEnableOutOfBattleField, GroupID) == 0x000004, "Member 'BP_EnemyManager_C_SetEnableOutOfBattleField::GroupID' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetEnableOutOfBattleField, beforeIsBoss) == 0x000008, "Member 'BP_EnemyManager_C_SetEnableOutOfBattleField::beforeIsBoss' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetEnableOutOfBattleField, IsBossInBattleField) == 0x000009, "Member 'BP_EnemyManager_C_SetEnableOutOfBattleField::IsBossInBattleField' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetEnableOutOfBattleField, LEnemy) == 0x000010, "Member 'BP_EnemyManager_C_SetEnableOutOfBattleField::LEnemy' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetEnableOutOfBattleField, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BP_EnemyManager_C_SetEnableOutOfBattleField::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetEnableOutOfBattleField, CallFunc_Map_Find_Value) == 0x00001C, "Member 'BP_EnemyManager_C_SetEnableOutOfBattleField::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetEnableOutOfBattleField, CallFunc_Map_Find_ReturnValue) == 0x00001D, "Member 'BP_EnemyManager_C_SetEnableOutOfBattleField::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetEnableOutOfBattleField, CallFunc_Map_Find_Value_1) == 0x00001E, "Member 'BP_EnemyManager_C_SetEnableOutOfBattleField::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetEnableOutOfBattleField, CallFunc_Map_Find_ReturnValue_1) == 0x00001F, "Member 'BP_EnemyManager_C_SetEnableOutOfBattleField::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetEnableOutOfBattleField, CallFunc_Map_Remove_ReturnValue) == 0x000020, "Member 'BP_EnemyManager_C_SetEnableOutOfBattleField::CallFunc_Map_Remove_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetEnableOutOfBattleField, CallFunc_IsBossBattlefield_InBoss) == 0x000021, "Member 'BP_EnemyManager_C_SetEnableOutOfBattleField::CallFunc_IsBossBattlefield_InBoss' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetEnableOutOfBattleField, CallFunc_PreCheckSetEnableOutOfBattlefield_NewParam) == 0x000022, "Member 'BP_EnemyManager_C_SetEnableOutOfBattleField::CallFunc_PreCheckSetEnableOutOfBattlefield_NewParam' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetEnableOutOfBattleField, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'BP_EnemyManager_C_SetEnableOutOfBattleField::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetEnableOutOfBattleField, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BP_EnemyManager_C_SetEnableOutOfBattleField::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetEnableOutOfBattleField, CallFunc_IsValid_ReturnValue) == 0x00002C, "Member 'BP_EnemyManager_C_SetEnableOutOfBattleField::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetEnableOutOfBattleField, CallFunc_GetBrainFieldManager_Manager) == 0x000030, "Member 'BP_EnemyManager_C_SetEnableOutOfBattleField::CallFunc_GetBrainFieldManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetEnableOutOfBattleField, CallFunc_IsValid_ReturnValue_1) == 0x000038, "Member 'BP_EnemyManager_C_SetEnableOutOfBattleField::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetEnableOutOfBattleField, CallFunc_IsInvokeBrainField_InvokeBrainField) == 0x000039, "Member 'BP_EnemyManager_C_SetEnableOutOfBattleField::CallFunc_IsInvokeBrainField_InvokeBrainField' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetEnableOutOfBattleField, CallFunc_GetBattlefieldManager_BP_BattlefieldManager) == 0x000040, "Member 'BP_EnemyManager_C_SetEnableOutOfBattleField::CallFunc_GetBattlefieldManager_BP_BattlefieldManager' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetEnableOutOfBattleField, CallFunc_GetBattlefieldInfo_BFInfo) == 0x000048, "Member 'BP_EnemyManager_C_SetEnableOutOfBattleField::CallFunc_GetBattlefieldInfo_BFInfo' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetEnableOutOfBattleField, CallFunc_GetBattlefieldInfo_IsExist) == 0x0000D0, "Member 'BP_EnemyManager_C_SetEnableOutOfBattleField::CallFunc_GetBattlefieldInfo_IsExist' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetEnableOutOfBattleField, CallFunc_GetEnemyList_ReturnValue) == 0x0000D8, "Member 'BP_EnemyManager_C_SetEnableOutOfBattleField::CallFunc_GetEnemyList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetEnableOutOfBattleField, CallFunc_Array_Get_Item) == 0x0000E8, "Member 'BP_EnemyManager_C_SetEnableOutOfBattleField::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetEnableOutOfBattleField, CallFunc_Array_Length_ReturnValue) == 0x0000F0, "Member 'BP_EnemyManager_C_SetEnableOutOfBattleField::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetEnableOutOfBattleField, K2Node_DynamicCast_AsRSBattle_Enemy) == 0x0000F8, "Member 'BP_EnemyManager_C_SetEnableOutOfBattleField::K2Node_DynamicCast_AsRSBattle_Enemy' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetEnableOutOfBattleField, K2Node_DynamicCast_bSuccess) == 0x000100, "Member 'BP_EnemyManager_C_SetEnableOutOfBattleField::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetEnableOutOfBattleField, CallFunc_Less_IntInt_ReturnValue) == 0x000101, "Member 'BP_EnemyManager_C_SetEnableOutOfBattleField::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.InitDropItem
// 0x0070 (0x0070 - 0x0000)
struct BP_EnemyManager_C_InitDropItem final
{
public:
	bool                                          Dummy;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6109[0xF];                                     // 0x0001(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0010(0x0030)(IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_610A[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_DropItem_Common_C*                  CallFunc_FinishSpawningActor_ReturnValue;          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_610B[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ADropItemManager*                       CallFunc_GetDropItemManager_Drop_Item_Manager;     // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_610C[0x2];                                     // 0x006A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EnemyManager_C_InitDropItem) == 0x000010, "Wrong alignment on BP_EnemyManager_C_InitDropItem");
static_assert(sizeof(BP_EnemyManager_C_InitDropItem) == 0x000070, "Wrong size on BP_EnemyManager_C_InitDropItem");
static_assert(offsetof(BP_EnemyManager_C_InitDropItem, Dummy) == 0x000000, "Member 'BP_EnemyManager_C_InitDropItem::Dummy' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_InitDropItem, CallFunc_MakeTransform_ReturnValue) == 0x000010, "Member 'BP_EnemyManager_C_InitDropItem::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_InitDropItem, CallFunc_MakeLiteralByte_ReturnValue) == 0x000040, "Member 'BP_EnemyManager_C_InitDropItem::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_InitDropItem, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000048, "Member 'BP_EnemyManager_C_InitDropItem::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_InitDropItem, CallFunc_FinishSpawningActor_ReturnValue) == 0x000050, "Member 'BP_EnemyManager_C_InitDropItem::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_InitDropItem, Temp_int_Variable) == 0x000058, "Member 'BP_EnemyManager_C_InitDropItem::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_InitDropItem, CallFunc_GetDropItemManager_Drop_Item_Manager) == 0x000060, "Member 'BP_EnemyManager_C_InitDropItem::CallFunc_GetDropItemManager_Drop_Item_Manager' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_InitDropItem, CallFunc_IsValid_ReturnValue) == 0x000068, "Member 'BP_EnemyManager_C_InitDropItem::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_InitDropItem, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000069, "Member 'BP_EnemyManager_C_InitDropItem::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_InitDropItem, CallFunc_Add_IntInt_ReturnValue) == 0x00006C, "Member 'BP_EnemyManager_C_InitDropItem::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.OnReturnFromPartyMenu
// 0x0030 (0x0030 - 0x0000)
struct BP_EnemyManager_C_OnReturnFromPartyMenu final
{
public:
	bool                                          Dummy;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_610D[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_610E[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattleCharacter_C*                   K2Node_DynamicCast_AsRSBattle_Character;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetBrainCrashHUDTarget_Dummy;             // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_610F[0x2];                                     // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6110[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EnemyManager_C_OnReturnFromPartyMenu) == 0x000008, "Wrong alignment on BP_EnemyManager_C_OnReturnFromPartyMenu");
static_assert(sizeof(BP_EnemyManager_C_OnReturnFromPartyMenu) == 0x000030, "Wrong size on BP_EnemyManager_C_OnReturnFromPartyMenu");
static_assert(offsetof(BP_EnemyManager_C_OnReturnFromPartyMenu, Dummy) == 0x000000, "Member 'BP_EnemyManager_C_OnReturnFromPartyMenu::Dummy' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_OnReturnFromPartyMenu, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_EnemyManager_C_OnReturnFromPartyMenu::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_OnReturnFromPartyMenu, Temp_int_Loop_Num_Variable) == 0x000008, "Member 'BP_EnemyManager_C_OnReturnFromPartyMenu::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_OnReturnFromPartyMenu, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'BP_EnemyManager_C_OnReturnFromPartyMenu::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_OnReturnFromPartyMenu, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_EnemyManager_C_OnReturnFromPartyMenu::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_OnReturnFromPartyMenu, K2Node_DynamicCast_AsRSBattle_Character) == 0x000018, "Member 'BP_EnemyManager_C_OnReturnFromPartyMenu::K2Node_DynamicCast_AsRSBattle_Character' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_OnReturnFromPartyMenu, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_EnemyManager_C_OnReturnFromPartyMenu::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_OnReturnFromPartyMenu, CallFunc_SetBrainCrashHUDTarget_Dummy) == 0x000021, "Member 'BP_EnemyManager_C_OnReturnFromPartyMenu::CallFunc_SetBrainCrashHUDTarget_Dummy' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_OnReturnFromPartyMenu, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'BP_EnemyManager_C_OnReturnFromPartyMenu::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_OnReturnFromPartyMenu, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'BP_EnemyManager_C_OnReturnFromPartyMenu::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_OnReturnFromPartyMenu, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'BP_EnemyManager_C_OnReturnFromPartyMenu::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.BackupCharacterParameterToTagName
// 0x02D8 (0x02D8 - 0x0000)
struct BP_EnemyManager_C_BackupCharacterParameterToTagName final
{
public:
	class FName                                   TagName;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6111[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6112[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6113[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6114[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ARSCharacterBase*>               CallFunc_GetEnemyList_ReturnValue;                 // 0x0028(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6115[0x2];                                     // 0x003E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattleCharacter_C*                   K2Node_DynamicCast_AsRSBattle_Character;           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ActorHasTag_ReturnValue;                  // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6116[0x6];                                     // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCopyCharacterParameterStruct          CallFunc_BackupCharacterParameter_BackupData;      // 0x0050(0x0280)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x02D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EnemyManager_C_BackupCharacterParameterToTagName) == 0x000008, "Wrong alignment on BP_EnemyManager_C_BackupCharacterParameterToTagName");
static_assert(sizeof(BP_EnemyManager_C_BackupCharacterParameterToTagName) == 0x0002D8, "Wrong size on BP_EnemyManager_C_BackupCharacterParameterToTagName");
static_assert(offsetof(BP_EnemyManager_C_BackupCharacterParameterToTagName, TagName) == 0x000000, "Member 'BP_EnemyManager_C_BackupCharacterParameterToTagName::TagName' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_BackupCharacterParameterToTagName, Temp_bool_True_if_break_was_hit_Variable) == 0x000008, "Member 'BP_EnemyManager_C_BackupCharacterParameterToTagName::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_BackupCharacterParameterToTagName, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'BP_EnemyManager_C_BackupCharacterParameterToTagName::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_BackupCharacterParameterToTagName, CallFunc_Not_PreBool_ReturnValue) == 0x000010, "Member 'BP_EnemyManager_C_BackupCharacterParameterToTagName::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_BackupCharacterParameterToTagName, Temp_int_Loop_Num_Variable) == 0x000014, "Member 'BP_EnemyManager_C_BackupCharacterParameterToTagName::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_BackupCharacterParameterToTagName, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'BP_EnemyManager_C_BackupCharacterParameterToTagName::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_BackupCharacterParameterToTagName, CallFunc_Less_IntInt_ReturnValue) == 0x00001C, "Member 'BP_EnemyManager_C_BackupCharacterParameterToTagName::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_BackupCharacterParameterToTagName, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BP_EnemyManager_C_BackupCharacterParameterToTagName::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_BackupCharacterParameterToTagName, CallFunc_BooleanAND_ReturnValue) == 0x000024, "Member 'BP_EnemyManager_C_BackupCharacterParameterToTagName::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_BackupCharacterParameterToTagName, CallFunc_GetEnemyList_ReturnValue) == 0x000028, "Member 'BP_EnemyManager_C_BackupCharacterParameterToTagName::CallFunc_GetEnemyList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_BackupCharacterParameterToTagName, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'BP_EnemyManager_C_BackupCharacterParameterToTagName::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_BackupCharacterParameterToTagName, CallFunc_Greater_IntInt_ReturnValue) == 0x00003C, "Member 'BP_EnemyManager_C_BackupCharacterParameterToTagName::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_BackupCharacterParameterToTagName, CallFunc_IsValid_ReturnValue) == 0x00003D, "Member 'BP_EnemyManager_C_BackupCharacterParameterToTagName::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_BackupCharacterParameterToTagName, K2Node_DynamicCast_AsRSBattle_Character) == 0x000040, "Member 'BP_EnemyManager_C_BackupCharacterParameterToTagName::K2Node_DynamicCast_AsRSBattle_Character' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_BackupCharacterParameterToTagName, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'BP_EnemyManager_C_BackupCharacterParameterToTagName::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_BackupCharacterParameterToTagName, CallFunc_ActorHasTag_ReturnValue) == 0x000049, "Member 'BP_EnemyManager_C_BackupCharacterParameterToTagName::CallFunc_ActorHasTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_BackupCharacterParameterToTagName, CallFunc_BackupCharacterParameter_BackupData) == 0x000050, "Member 'BP_EnemyManager_C_BackupCharacterParameterToTagName::CallFunc_BackupCharacterParameter_BackupData' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_BackupCharacterParameterToTagName, CallFunc_Array_Length_ReturnValue_1) == 0x0002D0, "Member 'BP_EnemyManager_C_BackupCharacterParameterToTagName::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.RestoreCharacterParameterToTagName
// 0x02D8 (0x02D8 - 0x0000)
struct BP_EnemyManager_C_RestoreCharacterParameterToTagName final
{
public:
	class FName                                   TagName;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6117[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6118[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Remove_ReturnValue;                   // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6119[0x2];                                     // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_611A[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ARSCharacterBase*>               CallFunc_GetEnemyList_ReturnValue;                 // 0x0028(0x0010)(ReferenceParm, HasGetValueTypeHash)
	struct FCopyCharacterParameterStruct          CallFunc_Map_Find_Value;                           // 0x0038(0x0280)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x02B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x02B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_611B[0x6];                                     // 0x02BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattleCharacter_C*                   K2Node_DynamicCast_AsRSBattle_Character;           // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_RestoreCharacterParameter_bDummy;         // 0x02C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ActorHasTag_ReturnValue;                  // 0x02CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_611C[0x1];                                     // 0x02CB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x02CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x02D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x02D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyManager_C_RestoreCharacterParameterToTagName) == 0x000008, "Wrong alignment on BP_EnemyManager_C_RestoreCharacterParameterToTagName");
static_assert(sizeof(BP_EnemyManager_C_RestoreCharacterParameterToTagName) == 0x0002D8, "Wrong size on BP_EnemyManager_C_RestoreCharacterParameterToTagName");
static_assert(offsetof(BP_EnemyManager_C_RestoreCharacterParameterToTagName, TagName) == 0x000000, "Member 'BP_EnemyManager_C_RestoreCharacterParameterToTagName::TagName' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_RestoreCharacterParameterToTagName, Temp_bool_True_if_break_was_hit_Variable) == 0x000008, "Member 'BP_EnemyManager_C_RestoreCharacterParameterToTagName::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_RestoreCharacterParameterToTagName, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'BP_EnemyManager_C_RestoreCharacterParameterToTagName::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_RestoreCharacterParameterToTagName, CallFunc_Not_PreBool_ReturnValue) == 0x000010, "Member 'BP_EnemyManager_C_RestoreCharacterParameterToTagName::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_RestoreCharacterParameterToTagName, Temp_int_Loop_Num_Variable) == 0x000014, "Member 'BP_EnemyManager_C_RestoreCharacterParameterToTagName::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_RestoreCharacterParameterToTagName, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'BP_EnemyManager_C_RestoreCharacterParameterToTagName::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_RestoreCharacterParameterToTagName, CallFunc_Map_Remove_ReturnValue) == 0x00001C, "Member 'BP_EnemyManager_C_RestoreCharacterParameterToTagName::CallFunc_Map_Remove_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_RestoreCharacterParameterToTagName, CallFunc_Less_IntInt_ReturnValue) == 0x00001D, "Member 'BP_EnemyManager_C_RestoreCharacterParameterToTagName::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_RestoreCharacterParameterToTagName, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BP_EnemyManager_C_RestoreCharacterParameterToTagName::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_RestoreCharacterParameterToTagName, CallFunc_BooleanAND_ReturnValue) == 0x000024, "Member 'BP_EnemyManager_C_RestoreCharacterParameterToTagName::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_RestoreCharacterParameterToTagName, CallFunc_GetEnemyList_ReturnValue) == 0x000028, "Member 'BP_EnemyManager_C_RestoreCharacterParameterToTagName::CallFunc_GetEnemyList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_RestoreCharacterParameterToTagName, CallFunc_Map_Find_Value) == 0x000038, "Member 'BP_EnemyManager_C_RestoreCharacterParameterToTagName::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_RestoreCharacterParameterToTagName, CallFunc_Map_Find_ReturnValue) == 0x0002B8, "Member 'BP_EnemyManager_C_RestoreCharacterParameterToTagName::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_RestoreCharacterParameterToTagName, CallFunc_IsValid_ReturnValue) == 0x0002B9, "Member 'BP_EnemyManager_C_RestoreCharacterParameterToTagName::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_RestoreCharacterParameterToTagName, K2Node_DynamicCast_AsRSBattle_Character) == 0x0002C0, "Member 'BP_EnemyManager_C_RestoreCharacterParameterToTagName::K2Node_DynamicCast_AsRSBattle_Character' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_RestoreCharacterParameterToTagName, K2Node_DynamicCast_bSuccess) == 0x0002C8, "Member 'BP_EnemyManager_C_RestoreCharacterParameterToTagName::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_RestoreCharacterParameterToTagName, CallFunc_RestoreCharacterParameter_bDummy) == 0x0002C9, "Member 'BP_EnemyManager_C_RestoreCharacterParameterToTagName::CallFunc_RestoreCharacterParameter_bDummy' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_RestoreCharacterParameterToTagName, CallFunc_ActorHasTag_ReturnValue) == 0x0002CA, "Member 'BP_EnemyManager_C_RestoreCharacterParameterToTagName::CallFunc_ActorHasTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_RestoreCharacterParameterToTagName, CallFunc_Array_Length_ReturnValue) == 0x0002CC, "Member 'BP_EnemyManager_C_RestoreCharacterParameterToTagName::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_RestoreCharacterParameterToTagName, CallFunc_Array_Length_ReturnValue_1) == 0x0002D0, "Member 'BP_EnemyManager_C_RestoreCharacterParameterToTagName::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_RestoreCharacterParameterToTagName, CallFunc_Greater_IntInt_ReturnValue) == 0x0002D4, "Member 'BP_EnemyManager_C_RestoreCharacterParameterToTagName::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.SetBrainCrashHUDTarget_Window
// 0x0020 (0x0020 - 0x0000)
struct BP_EnemyManager_C_SetBrainCrashHUDTarget_Window final
{
public:
	class ARSCharacterBase*                       TargetChara;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          EnablePlayer;                                      // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ReturnValue;                                       // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetBrainCrashHUDTarget_Dummy;             // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_611D[0x5];                                     // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattleCharacter_C*                   K2Node_DynamicCast_AsRSBattle_Character;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetBrainCrashHUDTarget_Dummy_1;           // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyManager_C_SetBrainCrashHUDTarget_Window) == 0x000008, "Wrong alignment on BP_EnemyManager_C_SetBrainCrashHUDTarget_Window");
static_assert(sizeof(BP_EnemyManager_C_SetBrainCrashHUDTarget_Window) == 0x000020, "Wrong size on BP_EnemyManager_C_SetBrainCrashHUDTarget_Window");
static_assert(offsetof(BP_EnemyManager_C_SetBrainCrashHUDTarget_Window, TargetChara) == 0x000000, "Member 'BP_EnemyManager_C_SetBrainCrashHUDTarget_Window::TargetChara' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetBrainCrashHUDTarget_Window, EnablePlayer) == 0x000008, "Member 'BP_EnemyManager_C_SetBrainCrashHUDTarget_Window::EnablePlayer' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetBrainCrashHUDTarget_Window, ReturnValue) == 0x000009, "Member 'BP_EnemyManager_C_SetBrainCrashHUDTarget_Window::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetBrainCrashHUDTarget_Window, CallFunc_SetBrainCrashHUDTarget_Dummy) == 0x00000A, "Member 'BP_EnemyManager_C_SetBrainCrashHUDTarget_Window::CallFunc_SetBrainCrashHUDTarget_Dummy' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetBrainCrashHUDTarget_Window, K2Node_DynamicCast_AsRSBattle_Character) == 0x000010, "Member 'BP_EnemyManager_C_SetBrainCrashHUDTarget_Window::K2Node_DynamicCast_AsRSBattle_Character' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetBrainCrashHUDTarget_Window, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_EnemyManager_C_SetBrainCrashHUDTarget_Window::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetBrainCrashHUDTarget_Window, CallFunc_SetBrainCrashHUDTarget_Dummy_1) == 0x000019, "Member 'BP_EnemyManager_C_SetBrainCrashHUDTarget_Window::CallFunc_SetBrainCrashHUDTarget_Dummy_1' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.DestroyEnemyWithTagName
// 0x0078 (0x0078 - 0x0000)
struct BP_EnemyManager_C_DestroyEnemyWithTagName final
{
public:
	class FName                                   TagName;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ARSCharacterBase*>               LDestroyList;                                      // 0x0008(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_611E[0x2];                                     // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_611F[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6120[0x2];                                     // 0x003E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6121[0x3];                                     // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ARSCharacterBase*>               CallFunc_GetEnemyList_ReturnValue;                 // 0x0050(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6122[0x2];                                     // 0x0066(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ActorHasTag_ReturnValue;                  // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6123[0x3];                                     // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EnemyManager_C_DestroyEnemyWithTagName) == 0x000008, "Wrong alignment on BP_EnemyManager_C_DestroyEnemyWithTagName");
static_assert(sizeof(BP_EnemyManager_C_DestroyEnemyWithTagName) == 0x000078, "Wrong size on BP_EnemyManager_C_DestroyEnemyWithTagName");
static_assert(offsetof(BP_EnemyManager_C_DestroyEnemyWithTagName, TagName) == 0x000000, "Member 'BP_EnemyManager_C_DestroyEnemyWithTagName::TagName' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DestroyEnemyWithTagName, LDestroyList) == 0x000008, "Member 'BP_EnemyManager_C_DestroyEnemyWithTagName::LDestroyList' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DestroyEnemyWithTagName, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'BP_EnemyManager_C_DestroyEnemyWithTagName::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DestroyEnemyWithTagName, Temp_int_Loop_Counter_Variable_1) == 0x00001C, "Member 'BP_EnemyManager_C_DestroyEnemyWithTagName::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DestroyEnemyWithTagName, CallFunc_Subtract_IntInt_ReturnValue) == 0x000020, "Member 'BP_EnemyManager_C_DestroyEnemyWithTagName::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DestroyEnemyWithTagName, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'BP_EnemyManager_C_DestroyEnemyWithTagName::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DestroyEnemyWithTagName, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000028, "Member 'BP_EnemyManager_C_DestroyEnemyWithTagName::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DestroyEnemyWithTagName, Temp_bool_True_if_break_was_hit_Variable) == 0x000029, "Member 'BP_EnemyManager_C_DestroyEnemyWithTagName::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DestroyEnemyWithTagName, Temp_int_Array_Index_Variable) == 0x00002C, "Member 'BP_EnemyManager_C_DestroyEnemyWithTagName::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DestroyEnemyWithTagName, CallFunc_Not_PreBool_ReturnValue) == 0x000030, "Member 'BP_EnemyManager_C_DestroyEnemyWithTagName::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DestroyEnemyWithTagName, Temp_int_Loop_Num_Variable) == 0x000034, "Member 'BP_EnemyManager_C_DestroyEnemyWithTagName::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DestroyEnemyWithTagName, Temp_int_Array_Index_Variable_1) == 0x000038, "Member 'BP_EnemyManager_C_DestroyEnemyWithTagName::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DestroyEnemyWithTagName, CallFunc_Less_IntInt_ReturnValue) == 0x00003C, "Member 'BP_EnemyManager_C_DestroyEnemyWithTagName::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DestroyEnemyWithTagName, CallFunc_BooleanAND_ReturnValue) == 0x00003D, "Member 'BP_EnemyManager_C_DestroyEnemyWithTagName::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DestroyEnemyWithTagName, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'BP_EnemyManager_C_DestroyEnemyWithTagName::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DestroyEnemyWithTagName, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000044, "Member 'BP_EnemyManager_C_DestroyEnemyWithTagName::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DestroyEnemyWithTagName, CallFunc_Max_ReturnValue) == 0x000048, "Member 'BP_EnemyManager_C_DestroyEnemyWithTagName::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DestroyEnemyWithTagName, CallFunc_IsValid_ReturnValue) == 0x00004C, "Member 'BP_EnemyManager_C_DestroyEnemyWithTagName::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DestroyEnemyWithTagName, CallFunc_GetEnemyList_ReturnValue) == 0x000050, "Member 'BP_EnemyManager_C_DestroyEnemyWithTagName::CallFunc_GetEnemyList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DestroyEnemyWithTagName, CallFunc_Array_Length_ReturnValue_1) == 0x000060, "Member 'BP_EnemyManager_C_DestroyEnemyWithTagName::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DestroyEnemyWithTagName, CallFunc_Greater_IntInt_ReturnValue) == 0x000064, "Member 'BP_EnemyManager_C_DestroyEnemyWithTagName::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DestroyEnemyWithTagName, CallFunc_IsValid_ReturnValue_1) == 0x000065, "Member 'BP_EnemyManager_C_DestroyEnemyWithTagName::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DestroyEnemyWithTagName, CallFunc_Array_AddUnique_ReturnValue) == 0x000068, "Member 'BP_EnemyManager_C_DestroyEnemyWithTagName::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DestroyEnemyWithTagName, CallFunc_ActorHasTag_ReturnValue) == 0x00006C, "Member 'BP_EnemyManager_C_DestroyEnemyWithTagName::CallFunc_ActorHasTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DestroyEnemyWithTagName, CallFunc_Array_Length_ReturnValue_2) == 0x000070, "Member 'BP_EnemyManager_C_DestroyEnemyWithTagName::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.CheckRepopCharaInList
// 0x000C (0x000C - 0x0000)
struct BP_EnemyManager_C_CheckRepopCharaInList final
{
public:
	class FName                                   CharaUniqueId;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Inlist;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          LInList;                                           // 0x0009(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckRepopCharaInListNative_ReturnValue;  // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyManager_C_CheckRepopCharaInList) == 0x000004, "Wrong alignment on BP_EnemyManager_C_CheckRepopCharaInList");
static_assert(sizeof(BP_EnemyManager_C_CheckRepopCharaInList) == 0x00000C, "Wrong size on BP_EnemyManager_C_CheckRepopCharaInList");
static_assert(offsetof(BP_EnemyManager_C_CheckRepopCharaInList, CharaUniqueId) == 0x000000, "Member 'BP_EnemyManager_C_CheckRepopCharaInList::CharaUniqueId' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_CheckRepopCharaInList, Inlist) == 0x000008, "Member 'BP_EnemyManager_C_CheckRepopCharaInList::Inlist' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_CheckRepopCharaInList, LInList) == 0x000009, "Member 'BP_EnemyManager_C_CheckRepopCharaInList::LInList' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_CheckRepopCharaInList, CallFunc_CheckRepopCharaInListNative_ReturnValue) == 0x00000A, "Member 'BP_EnemyManager_C_CheckRepopCharaInList::CallFunc_CheckRepopCharaInListNative_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_CheckRepopCharaInList, CallFunc_EqualEqual_NameName_ReturnValue) == 0x00000B, "Member 'BP_EnemyManager_C_CheckRepopCharaInList::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.SetRepopOwner
// 0x0090 (0x0090 - 0x0000)
struct BP_EnemyManager_C_SetRepopOwner final
{
public:
	class ARSBattleEnemy_C*                       Param_Owner;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6124[0x8];                                     // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             NewLocalVar_2;                                     // 0x0010(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	bool                                          LInList;                                           // 0x0040(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6125[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6126[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_FinishSpawningActor_ReturnValue;          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6127[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetLocationAreaID_LocationID;             // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetLocationAreaID_AreaID;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6128[0x4];                                     // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SceneManager_C*                     CallFunc_GetSceneManager_SceneManager;             // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6129[0x3];                                     // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetCurrentLocationAndArea_LocationID;     // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCurrentLocationAndArea_AreaID;         // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_1;            // 0x0085(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0086(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyManager_C_SetRepopOwner) == 0x000010, "Wrong alignment on BP_EnemyManager_C_SetRepopOwner");
static_assert(sizeof(BP_EnemyManager_C_SetRepopOwner) == 0x000090, "Wrong size on BP_EnemyManager_C_SetRepopOwner");
static_assert(offsetof(BP_EnemyManager_C_SetRepopOwner, Param_Owner) == 0x000000, "Member 'BP_EnemyManager_C_SetRepopOwner::Param_Owner' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetRepopOwner, NewLocalVar_2) == 0x000010, "Member 'BP_EnemyManager_C_SetRepopOwner::NewLocalVar_2' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetRepopOwner, LInList) == 0x000040, "Member 'BP_EnemyManager_C_SetRepopOwner::LInList' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetRepopOwner, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000048, "Member 'BP_EnemyManager_C_SetRepopOwner::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetRepopOwner, CallFunc_IsValid_ReturnValue) == 0x000050, "Member 'BP_EnemyManager_C_SetRepopOwner::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetRepopOwner, CallFunc_FinishSpawningActor_ReturnValue) == 0x000058, "Member 'BP_EnemyManager_C_SetRepopOwner::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetRepopOwner, CallFunc_IsValid_ReturnValue_1) == 0x000060, "Member 'BP_EnemyManager_C_SetRepopOwner::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetRepopOwner, CallFunc_GetLocationAreaID_LocationID) == 0x000064, "Member 'BP_EnemyManager_C_SetRepopOwner::CallFunc_GetLocationAreaID_LocationID' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetRepopOwner, CallFunc_GetLocationAreaID_AreaID) == 0x000068, "Member 'BP_EnemyManager_C_SetRepopOwner::CallFunc_GetLocationAreaID_AreaID' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetRepopOwner, CallFunc_GetSceneManager_SceneManager) == 0x000070, "Member 'BP_EnemyManager_C_SetRepopOwner::CallFunc_GetSceneManager_SceneManager' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetRepopOwner, CallFunc_IsValid_ReturnValue_2) == 0x000078, "Member 'BP_EnemyManager_C_SetRepopOwner::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetRepopOwner, CallFunc_GetCurrentLocationAndArea_LocationID) == 0x00007C, "Member 'BP_EnemyManager_C_SetRepopOwner::CallFunc_GetCurrentLocationAndArea_LocationID' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetRepopOwner, CallFunc_GetCurrentLocationAndArea_AreaID) == 0x000080, "Member 'BP_EnemyManager_C_SetRepopOwner::CallFunc_GetCurrentLocationAndArea_AreaID' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetRepopOwner, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000084, "Member 'BP_EnemyManager_C_SetRepopOwner::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetRepopOwner, CallFunc_NotEqual_IntInt_ReturnValue_1) == 0x000085, "Member 'BP_EnemyManager_C_SetRepopOwner::CallFunc_NotEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetRepopOwner, CallFunc_BooleanOR_ReturnValue) == 0x000086, "Member 'BP_EnemyManager_C_SetRepopOwner::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.RepopSpawn_FromNative
// 0x0120 (0x0120 - 0x0000)
struct BP_EnemyManager_C_RepopSpawn_FromNative final
{
public:
	struct FEnemyRepopInfo                        EnemyRepopInfo;                                    // 0x0000(0x0070)(BlueprintVisible, BlueprintReadOnly, Parm)
	int32                                         Group;                                             // 0x0070(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SubGroup;                                          // 0x0074(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0078(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_612A[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattleEnemy_C*                       TmpBattleEnemy;                                    // 0x0080(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RepopSpawn_FromNative_ReturnValue;        // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_612B[0x7];                                     // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0090(0x0030)(IsPlainOldData, NoDestructor)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetEnemyClass_ReturnValue;                // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsRSBattle_Enemy;          // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_1;            // 0x00E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00E3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_612C[0x4];                                     // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattleEnemy_C*                       CallFunc_FinishSpawningActor_ReturnValue;          // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_612D[0x6];                                     // 0x00FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_EnemyInterface_C> CallFunc_SpawnStart_self_CastInput;                // 0x0100(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SpawnStart_Return;                        // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyManager_C_RepopSpawn_FromNative) == 0x000010, "Wrong alignment on BP_EnemyManager_C_RepopSpawn_FromNative");
static_assert(sizeof(BP_EnemyManager_C_RepopSpawn_FromNative) == 0x000120, "Wrong size on BP_EnemyManager_C_RepopSpawn_FromNative");
static_assert(offsetof(BP_EnemyManager_C_RepopSpawn_FromNative, EnemyRepopInfo) == 0x000000, "Member 'BP_EnemyManager_C_RepopSpawn_FromNative::EnemyRepopInfo' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_RepopSpawn_FromNative, Group) == 0x000070, "Member 'BP_EnemyManager_C_RepopSpawn_FromNative::Group' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_RepopSpawn_FromNative, SubGroup) == 0x000074, "Member 'BP_EnemyManager_C_RepopSpawn_FromNative::SubGroup' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_RepopSpawn_FromNative, ReturnValue) == 0x000078, "Member 'BP_EnemyManager_C_RepopSpawn_FromNative::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_RepopSpawn_FromNative, TmpBattleEnemy) == 0x000080, "Member 'BP_EnemyManager_C_RepopSpawn_FromNative::TmpBattleEnemy' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_RepopSpawn_FromNative, CallFunc_RepopSpawn_FromNative_ReturnValue) == 0x000088, "Member 'BP_EnemyManager_C_RepopSpawn_FromNative::CallFunc_RepopSpawn_FromNative_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_RepopSpawn_FromNative, CallFunc_MakeTransform_ReturnValue) == 0x000090, "Member 'BP_EnemyManager_C_RepopSpawn_FromNative::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_RepopSpawn_FromNative, CallFunc_Concat_StrStr_ReturnValue) == 0x0000C0, "Member 'BP_EnemyManager_C_RepopSpawn_FromNative::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_RepopSpawn_FromNative, CallFunc_GetEnemyClass_ReturnValue) == 0x0000D0, "Member 'BP_EnemyManager_C_RepopSpawn_FromNative::CallFunc_GetEnemyClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_RepopSpawn_FromNative, K2Node_ClassDynamicCast_AsRSBattle_Enemy) == 0x0000D8, "Member 'BP_EnemyManager_C_RepopSpawn_FromNative::K2Node_ClassDynamicCast_AsRSBattle_Enemy' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_RepopSpawn_FromNative, K2Node_ClassDynamicCast_bSuccess) == 0x0000E0, "Member 'BP_EnemyManager_C_RepopSpawn_FromNative::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_RepopSpawn_FromNative, CallFunc_NotEqual_IntInt_ReturnValue) == 0x0000E1, "Member 'BP_EnemyManager_C_RepopSpawn_FromNative::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_RepopSpawn_FromNative, CallFunc_NotEqual_IntInt_ReturnValue_1) == 0x0000E2, "Member 'BP_EnemyManager_C_RepopSpawn_FromNative::CallFunc_NotEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_RepopSpawn_FromNative, CallFunc_BooleanAND_ReturnValue) == 0x0000E3, "Member 'BP_EnemyManager_C_RepopSpawn_FromNative::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_RepopSpawn_FromNative, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0000E8, "Member 'BP_EnemyManager_C_RepopSpawn_FromNative::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_RepopSpawn_FromNative, CallFunc_FinishSpawningActor_ReturnValue) == 0x0000F0, "Member 'BP_EnemyManager_C_RepopSpawn_FromNative::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_RepopSpawn_FromNative, CallFunc_IsValid_ReturnValue) == 0x0000F8, "Member 'BP_EnemyManager_C_RepopSpawn_FromNative::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_RepopSpawn_FromNative, CallFunc_IsValid_ReturnValue_1) == 0x0000F9, "Member 'BP_EnemyManager_C_RepopSpawn_FromNative::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_RepopSpawn_FromNative, CallFunc_SpawnStart_self_CastInput) == 0x000100, "Member 'BP_EnemyManager_C_RepopSpawn_FromNative::CallFunc_SpawnStart_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_RepopSpawn_FromNative, CallFunc_SpawnStart_Return) == 0x000110, "Member 'BP_EnemyManager_C_RepopSpawn_FromNative::CallFunc_SpawnStart_Return' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.OnChangeArea
// 0x0003 (0x0003 - 0x0000)
struct BP_EnemyManager_C_OnChangeArea final
{
public:
	EChangeAreaStatus                             ChangeState;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsChange;                                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyManager_C_OnChangeArea) == 0x000001, "Wrong alignment on BP_EnemyManager_C_OnChangeArea");
static_assert(sizeof(BP_EnemyManager_C_OnChangeArea) == 0x000003, "Wrong size on BP_EnemyManager_C_OnChangeArea");
static_assert(offsetof(BP_EnemyManager_C_OnChangeArea, ChangeState) == 0x000000, "Member 'BP_EnemyManager_C_OnChangeArea::ChangeState' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_OnChangeArea, IsChange) == 0x000001, "Member 'BP_EnemyManager_C_OnChangeArea::IsChange' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_OnChangeArea, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000002, "Member 'BP_EnemyManager_C_OnChangeArea::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.GetBattleBossEnemyUniqueName
// 0x0068 (0x0068 - 0x0000)
struct BP_EnemyManager_C_GetBattleBossEnemyUniqueName final
{
public:
	bool                                          bExist;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_612E[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   UniqueName;                                        // 0x0004(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_612F[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         LBossList;                                         // 0x0010(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6130[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6131[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattleCharacter_C*                   K2Node_DynamicCast_AsRSBattle_Character;           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsBattling_bBatting;                      // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6132[0x2];                                     // 0x0042(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetName_ReturnValue;                      // 0x0044(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6133[0x3];                                     // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6134[0x3];                                     // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetEnemyBossList_ReturnValue;             // 0x0058(0x0010)(ReferenceParm, HasGetValueTypeHash)
};
static_assert(alignof(BP_EnemyManager_C_GetBattleBossEnemyUniqueName) == 0x000008, "Wrong alignment on BP_EnemyManager_C_GetBattleBossEnemyUniqueName");
static_assert(sizeof(BP_EnemyManager_C_GetBattleBossEnemyUniqueName) == 0x000068, "Wrong size on BP_EnemyManager_C_GetBattleBossEnemyUniqueName");
static_assert(offsetof(BP_EnemyManager_C_GetBattleBossEnemyUniqueName, bExist) == 0x000000, "Member 'BP_EnemyManager_C_GetBattleBossEnemyUniqueName::bExist' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_GetBattleBossEnemyUniqueName, UniqueName) == 0x000004, "Member 'BP_EnemyManager_C_GetBattleBossEnemyUniqueName::UniqueName' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_GetBattleBossEnemyUniqueName, LBossList) == 0x000010, "Member 'BP_EnemyManager_C_GetBattleBossEnemyUniqueName::LBossList' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_GetBattleBossEnemyUniqueName, Temp_bool_True_if_break_was_hit_Variable) == 0x000020, "Member 'BP_EnemyManager_C_GetBattleBossEnemyUniqueName::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_GetBattleBossEnemyUniqueName, Temp_int_Array_Index_Variable) == 0x000024, "Member 'BP_EnemyManager_C_GetBattleBossEnemyUniqueName::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_GetBattleBossEnemyUniqueName, CallFunc_Not_PreBool_ReturnValue) == 0x000028, "Member 'BP_EnemyManager_C_GetBattleBossEnemyUniqueName::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_GetBattleBossEnemyUniqueName, Temp_int_Loop_Num_Variable) == 0x00002C, "Member 'BP_EnemyManager_C_GetBattleBossEnemyUniqueName::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_GetBattleBossEnemyUniqueName, Temp_int_Loop_Counter_Variable) == 0x000030, "Member 'BP_EnemyManager_C_GetBattleBossEnemyUniqueName::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_GetBattleBossEnemyUniqueName, CallFunc_Array_Length_ReturnValue) == 0x000034, "Member 'BP_EnemyManager_C_GetBattleBossEnemyUniqueName::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_GetBattleBossEnemyUniqueName, K2Node_DynamicCast_AsRSBattle_Character) == 0x000038, "Member 'BP_EnemyManager_C_GetBattleBossEnemyUniqueName::K2Node_DynamicCast_AsRSBattle_Character' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_GetBattleBossEnemyUniqueName, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_EnemyManager_C_GetBattleBossEnemyUniqueName::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_GetBattleBossEnemyUniqueName, CallFunc_IsBattling_bBatting) == 0x000041, "Member 'BP_EnemyManager_C_GetBattleBossEnemyUniqueName::CallFunc_IsBattling_bBatting' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_GetBattleBossEnemyUniqueName, CallFunc_GetName_ReturnValue) == 0x000044, "Member 'BP_EnemyManager_C_GetBattleBossEnemyUniqueName::CallFunc_GetName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_GetBattleBossEnemyUniqueName, CallFunc_Less_IntInt_ReturnValue) == 0x00004C, "Member 'BP_EnemyManager_C_GetBattleBossEnemyUniqueName::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_GetBattleBossEnemyUniqueName, CallFunc_Add_IntInt_ReturnValue) == 0x000050, "Member 'BP_EnemyManager_C_GetBattleBossEnemyUniqueName::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_GetBattleBossEnemyUniqueName, CallFunc_BooleanAND_ReturnValue) == 0x000054, "Member 'BP_EnemyManager_C_GetBattleBossEnemyUniqueName::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_GetBattleBossEnemyUniqueName, CallFunc_GetEnemyBossList_ReturnValue) == 0x000058, "Member 'BP_EnemyManager_C_GetBattleBossEnemyUniqueName::CallFunc_GetEnemyBossList_ReturnValue' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.EntryGroundCheck
// 0x0010 (0x0010 - 0x0000)
struct BP_EnemyManager_C_EntryGroundCheck final
{
public:
	class ARSBattleEnemy_C*                       Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6135[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EnemyManager_C_EntryGroundCheck) == 0x000008, "Wrong alignment on BP_EnemyManager_C_EntryGroundCheck");
static_assert(sizeof(BP_EnemyManager_C_EntryGroundCheck) == 0x000010, "Wrong size on BP_EnemyManager_C_EntryGroundCheck");
static_assert(offsetof(BP_EnemyManager_C_EntryGroundCheck, Target) == 0x000000, "Member 'BP_EnemyManager_C_EntryGroundCheck::Target' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_EntryGroundCheck, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_EnemyManager_C_EntryGroundCheck::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_EntryGroundCheck, CallFunc_Array_Add_ReturnValue) == 0x00000C, "Member 'BP_EnemyManager_C_EntryGroundCheck::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.UpdateGroundCheck
// 0x0028 (0x0028 - 0x0000)
struct BP_EnemyManager_C_UpdateGroundCheck final
{
public:
	float                                         DeltaSec;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6136[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattleEnemy_C*                       TmpCheckEnemy;                                     // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattleEnemy_C*                       CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6137[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6138[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EnemyManager_C_UpdateGroundCheck) == 0x000008, "Wrong alignment on BP_EnemyManager_C_UpdateGroundCheck");
static_assert(sizeof(BP_EnemyManager_C_UpdateGroundCheck) == 0x000028, "Wrong size on BP_EnemyManager_C_UpdateGroundCheck");
static_assert(offsetof(BP_EnemyManager_C_UpdateGroundCheck, DeltaSec) == 0x000000, "Member 'BP_EnemyManager_C_UpdateGroundCheck::DeltaSec' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_UpdateGroundCheck, TmpCheckEnemy) == 0x000008, "Member 'BP_EnemyManager_C_UpdateGroundCheck::TmpCheckEnemy' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_UpdateGroundCheck, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_EnemyManager_C_UpdateGroundCheck::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_UpdateGroundCheck, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_EnemyManager_C_UpdateGroundCheck::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_UpdateGroundCheck, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'BP_EnemyManager_C_UpdateGroundCheck::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_UpdateGroundCheck, CallFunc_Greater_IntInt_ReturnValue) == 0x000020, "Member 'BP_EnemyManager_C_UpdateGroundCheck::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_UpdateGroundCheck, CallFunc_Array_Add_ReturnValue) == 0x000024, "Member 'BP_EnemyManager_C_UpdateGroundCheck::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.EndGroundCheck
// 0x0010 (0x0010 - 0x0000)
struct BP_EnemyManager_C_EndGroundCheck final
{
public:
	class ARSBattleEnemy_C*                       Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyManager_C_EndGroundCheck) == 0x000008, "Wrong alignment on BP_EnemyManager_C_EndGroundCheck");
static_assert(sizeof(BP_EnemyManager_C_EndGroundCheck) == 0x000010, "Wrong size on BP_EnemyManager_C_EndGroundCheck");
static_assert(offsetof(BP_EnemyManager_C_EndGroundCheck, Target) == 0x000000, "Member 'BP_EnemyManager_C_EndGroundCheck::Target' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_EndGroundCheck, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_EnemyManager_C_EndGroundCheck::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_EndGroundCheck, CallFunc_Array_RemoveItem_ReturnValue) == 0x000009, "Member 'BP_EnemyManager_C_EndGroundCheck::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.RegisterEndVisionFogComp
// 0x0010 (0x0010 - 0x0000)
struct BP_EnemyManager_C_RegisterEndVisionFogComp final
{
public:
	class UBP_EnemyVisionFogComponent_C*          InVisionFogComp;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6139[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EnemyManager_C_RegisterEndVisionFogComp) == 0x000008, "Wrong alignment on BP_EnemyManager_C_RegisterEndVisionFogComp");
static_assert(sizeof(BP_EnemyManager_C_RegisterEndVisionFogComp) == 0x000010, "Wrong size on BP_EnemyManager_C_RegisterEndVisionFogComp");
static_assert(offsetof(BP_EnemyManager_C_RegisterEndVisionFogComp, InVisionFogComp) == 0x000000, "Member 'BP_EnemyManager_C_RegisterEndVisionFogComp::InVisionFogComp' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_RegisterEndVisionFogComp, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_EnemyManager_C_RegisterEndVisionFogComp::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_RegisterEndVisionFogComp, CallFunc_Array_AddUnique_ReturnValue) == 0x00000C, "Member 'BP_EnemyManager_C_RegisterEndVisionFogComp::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.UpdateEndVisionFogComp
// 0x0030 (0x0030 - 0x0000)
struct BP_EnemyManager_C_UpdateEndVisionFogComp final
{
public:
	float                                         DeltaSec;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_613A[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_EnemyVisionFogComponent_C*          LEndVisionFogComp;                                 // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisionFog_IsVisionFog;                  // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsComponentTickEnabled_ReturnValue;       // 0x001F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_613B[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EnemyManager_C_UpdateEndVisionFogComp) == 0x000008, "Wrong alignment on BP_EnemyManager_C_UpdateEndVisionFogComp");
static_assert(sizeof(BP_EnemyManager_C_UpdateEndVisionFogComp) == 0x000030, "Wrong size on BP_EnemyManager_C_UpdateEndVisionFogComp");
static_assert(offsetof(BP_EnemyManager_C_UpdateEndVisionFogComp, DeltaSec) == 0x000000, "Member 'BP_EnemyManager_C_UpdateEndVisionFogComp::DeltaSec' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_UpdateEndVisionFogComp, LEndVisionFogComp) == 0x000008, "Member 'BP_EnemyManager_C_UpdateEndVisionFogComp::LEndVisionFogComp' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_UpdateEndVisionFogComp, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_EnemyManager_C_UpdateEndVisionFogComp::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_UpdateEndVisionFogComp, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'BP_EnemyManager_C_UpdateEndVisionFogComp::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_UpdateEndVisionFogComp, CallFunc_Subtract_IntInt_ReturnValue) == 0x000018, "Member 'BP_EnemyManager_C_UpdateEndVisionFogComp::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_UpdateEndVisionFogComp, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00001C, "Member 'BP_EnemyManager_C_UpdateEndVisionFogComp::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_UpdateEndVisionFogComp, CallFunc_Array_RemoveItem_ReturnValue) == 0x00001D, "Member 'BP_EnemyManager_C_UpdateEndVisionFogComp::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_UpdateEndVisionFogComp, CallFunc_IsVisionFog_IsVisionFog) == 0x00001E, "Member 'BP_EnemyManager_C_UpdateEndVisionFogComp::CallFunc_IsVisionFog_IsVisionFog' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_UpdateEndVisionFogComp, CallFunc_IsComponentTickEnabled_ReturnValue) == 0x00001F, "Member 'BP_EnemyManager_C_UpdateEndVisionFogComp::CallFunc_IsComponentTickEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_UpdateEndVisionFogComp, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_EnemyManager_C_UpdateEndVisionFogComp::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_UpdateEndVisionFogComp, CallFunc_IsValid_ReturnValue) == 0x000024, "Member 'BP_EnemyManager_C_UpdateEndVisionFogComp::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_UpdateEndVisionFogComp, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000028, "Member 'BP_EnemyManager_C_UpdateEndVisionFogComp::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_UpdateEndVisionFogComp, CallFunc_Max_ReturnValue) == 0x00002C, "Member 'BP_EnemyManager_C_UpdateEndVisionFogComp::CallFunc_Max_ReturnValue' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.PreCheckSetEnableOutOfBattlefield
// 0x0090 (0x0090 - 0x0000)
struct BP_EnemyManager_C_PreCheckSetEnableOutOfBattlefield final
{
public:
	int32                                         GroupID;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NewParam;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          HitGroupId;                                        // 0x0005(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable_1;        // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_613C[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_613D[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetEnemyBossList_ReturnValue;             // 0x0028(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattleCharacter_C*                   K2Node_DynamicCast_AsRSBattle_Character;           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_613E[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0053(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_613F[0x4];                                     // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ARSCharacterBase*>               CallFunc_GetEnemyListRef_ReturnValue;              // 0x0058(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6140[0x4];                                     // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_Array_Get_Item_1;                         // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6141[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattleCharacter_C*                   K2Node_DynamicCast_AsRSBattle_Character_1;         // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x008B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyManager_C_PreCheckSetEnableOutOfBattlefield) == 0x000008, "Wrong alignment on BP_EnemyManager_C_PreCheckSetEnableOutOfBattlefield");
static_assert(sizeof(BP_EnemyManager_C_PreCheckSetEnableOutOfBattlefield) == 0x000090, "Wrong size on BP_EnemyManager_C_PreCheckSetEnableOutOfBattlefield");
static_assert(offsetof(BP_EnemyManager_C_PreCheckSetEnableOutOfBattlefield, GroupID) == 0x000000, "Member 'BP_EnemyManager_C_PreCheckSetEnableOutOfBattlefield::GroupID' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_PreCheckSetEnableOutOfBattlefield, NewParam) == 0x000004, "Member 'BP_EnemyManager_C_PreCheckSetEnableOutOfBattlefield::NewParam' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_PreCheckSetEnableOutOfBattlefield, HitGroupId) == 0x000005, "Member 'BP_EnemyManager_C_PreCheckSetEnableOutOfBattlefield::HitGroupId' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_PreCheckSetEnableOutOfBattlefield, Temp_bool_True_if_break_was_hit_Variable) == 0x000006, "Member 'BP_EnemyManager_C_PreCheckSetEnableOutOfBattlefield::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_PreCheckSetEnableOutOfBattlefield, CallFunc_Not_PreBool_ReturnValue) == 0x000007, "Member 'BP_EnemyManager_C_PreCheckSetEnableOutOfBattlefield::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_PreCheckSetEnableOutOfBattlefield, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_EnemyManager_C_PreCheckSetEnableOutOfBattlefield::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_PreCheckSetEnableOutOfBattlefield, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_EnemyManager_C_PreCheckSetEnableOutOfBattlefield::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_PreCheckSetEnableOutOfBattlefield, Temp_bool_True_if_break_was_hit_Variable_1) == 0x000010, "Member 'BP_EnemyManager_C_PreCheckSetEnableOutOfBattlefield::Temp_bool_True_if_break_was_hit_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_PreCheckSetEnableOutOfBattlefield, Temp_int_Array_Index_Variable) == 0x000014, "Member 'BP_EnemyManager_C_PreCheckSetEnableOutOfBattlefield::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_PreCheckSetEnableOutOfBattlefield, CallFunc_Not_PreBool_ReturnValue_1) == 0x000018, "Member 'BP_EnemyManager_C_PreCheckSetEnableOutOfBattlefield::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_PreCheckSetEnableOutOfBattlefield, Temp_int_Array_Index_Variable_1) == 0x00001C, "Member 'BP_EnemyManager_C_PreCheckSetEnableOutOfBattlefield::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_PreCheckSetEnableOutOfBattlefield, Temp_int_Loop_Counter_Variable_1) == 0x000020, "Member 'BP_EnemyManager_C_PreCheckSetEnableOutOfBattlefield::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_PreCheckSetEnableOutOfBattlefield, CallFunc_Add_IntInt_ReturnValue_1) == 0x000024, "Member 'BP_EnemyManager_C_PreCheckSetEnableOutOfBattlefield::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_PreCheckSetEnableOutOfBattlefield, CallFunc_GetEnemyBossList_ReturnValue) == 0x000028, "Member 'BP_EnemyManager_C_PreCheckSetEnableOutOfBattlefield::CallFunc_GetEnemyBossList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_PreCheckSetEnableOutOfBattlefield, CallFunc_Array_Get_Item) == 0x000038, "Member 'BP_EnemyManager_C_PreCheckSetEnableOutOfBattlefield::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_PreCheckSetEnableOutOfBattlefield, K2Node_DynamicCast_AsRSBattle_Character) == 0x000040, "Member 'BP_EnemyManager_C_PreCheckSetEnableOutOfBattlefield::K2Node_DynamicCast_AsRSBattle_Character' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_PreCheckSetEnableOutOfBattlefield, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'BP_EnemyManager_C_PreCheckSetEnableOutOfBattlefield::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_PreCheckSetEnableOutOfBattlefield, CallFunc_Array_Length_ReturnValue) == 0x00004C, "Member 'BP_EnemyManager_C_PreCheckSetEnableOutOfBattlefield::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_PreCheckSetEnableOutOfBattlefield, CallFunc_IsValid_ReturnValue) == 0x000050, "Member 'BP_EnemyManager_C_PreCheckSetEnableOutOfBattlefield::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_PreCheckSetEnableOutOfBattlefield, CallFunc_Less_IntInt_ReturnValue) == 0x000051, "Member 'BP_EnemyManager_C_PreCheckSetEnableOutOfBattlefield::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_PreCheckSetEnableOutOfBattlefield, CallFunc_BooleanAND_ReturnValue) == 0x000052, "Member 'BP_EnemyManager_C_PreCheckSetEnableOutOfBattlefield::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_PreCheckSetEnableOutOfBattlefield, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000053, "Member 'BP_EnemyManager_C_PreCheckSetEnableOutOfBattlefield::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_PreCheckSetEnableOutOfBattlefield, CallFunc_GetEnemyListRef_ReturnValue) == 0x000058, "Member 'BP_EnemyManager_C_PreCheckSetEnableOutOfBattlefield::CallFunc_GetEnemyListRef_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_PreCheckSetEnableOutOfBattlefield, CallFunc_Array_Length_ReturnValue_1) == 0x000068, "Member 'BP_EnemyManager_C_PreCheckSetEnableOutOfBattlefield::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_PreCheckSetEnableOutOfBattlefield, CallFunc_Array_Get_Item_1) == 0x000070, "Member 'BP_EnemyManager_C_PreCheckSetEnableOutOfBattlefield::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_PreCheckSetEnableOutOfBattlefield, CallFunc_Less_IntInt_ReturnValue_1) == 0x000078, "Member 'BP_EnemyManager_C_PreCheckSetEnableOutOfBattlefield::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_PreCheckSetEnableOutOfBattlefield, K2Node_DynamicCast_AsRSBattle_Character_1) == 0x000080, "Member 'BP_EnemyManager_C_PreCheckSetEnableOutOfBattlefield::K2Node_DynamicCast_AsRSBattle_Character_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_PreCheckSetEnableOutOfBattlefield, K2Node_DynamicCast_bSuccess_1) == 0x000088, "Member 'BP_EnemyManager_C_PreCheckSetEnableOutOfBattlefield::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_PreCheckSetEnableOutOfBattlefield, CallFunc_BooleanAND_ReturnValue_1) == 0x000089, "Member 'BP_EnemyManager_C_PreCheckSetEnableOutOfBattlefield::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_PreCheckSetEnableOutOfBattlefield, CallFunc_IsValid_ReturnValue_1) == 0x00008A, "Member 'BP_EnemyManager_C_PreCheckSetEnableOutOfBattlefield::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_PreCheckSetEnableOutOfBattlefield, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x00008B, "Member 'BP_EnemyManager_C_PreCheckSetEnableOutOfBattlefield::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.SetStartBattleEm8300
// 0x0002 (0x0002 - 0x0000)
struct BP_EnemyManager_C_SetStartBattleEm8300 final
{
public:
	bool                                          bStart;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bDummy;                                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyManager_C_SetStartBattleEm8300) == 0x000001, "Wrong alignment on BP_EnemyManager_C_SetStartBattleEm8300");
static_assert(sizeof(BP_EnemyManager_C_SetStartBattleEm8300) == 0x000002, "Wrong size on BP_EnemyManager_C_SetStartBattleEm8300");
static_assert(offsetof(BP_EnemyManager_C_SetStartBattleEm8300, bStart) == 0x000000, "Member 'BP_EnemyManager_C_SetStartBattleEm8300::bStart' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetStartBattleEm8300, bDummy) == 0x000001, "Member 'BP_EnemyManager_C_SetStartBattleEm8300::bDummy' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.ClearCourtMortBattle
// 0x0010 (0x0010 - 0x0000)
struct BP_EnemyManager_C_ClearCourtMortBattle final
{
public:
	class ABP_em1500Base_C*                       K2Node_DynamicCast_AsBP_Em_1500Base;               // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyManager_C_ClearCourtMortBattle) == 0x000008, "Wrong alignment on BP_EnemyManager_C_ClearCourtMortBattle");
static_assert(sizeof(BP_EnemyManager_C_ClearCourtMortBattle) == 0x000010, "Wrong size on BP_EnemyManager_C_ClearCourtMortBattle");
static_assert(offsetof(BP_EnemyManager_C_ClearCourtMortBattle, K2Node_DynamicCast_AsBP_Em_1500Base) == 0x000000, "Member 'BP_EnemyManager_C_ClearCourtMortBattle::K2Node_DynamicCast_AsBP_Em_1500Base' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_ClearCourtMortBattle, K2Node_DynamicCast_bSuccess) == 0x000008, "Member 'BP_EnemyManager_C_ClearCourtMortBattle::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_ClearCourtMortBattle, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'BP_EnemyManager_C_ClearCourtMortBattle::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.DebugDispDamageLog
// 0x0048 (0x0048 - 0x0000)
struct BP_EnemyManager_C_DebugDispDamageLog final
{
public:
	class AHUDMainGame_C*                         CallFunc_GetHUDMainGame_HUDMainGame;               // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_GetDebuggingManager_Manager;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6142[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDamageCalcLog_ReturnValue;             // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0028(0x0018)()
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyManager_C_DebugDispDamageLog) == 0x000008, "Wrong alignment on BP_EnemyManager_C_DebugDispDamageLog");
static_assert(sizeof(BP_EnemyManager_C_DebugDispDamageLog) == 0x000048, "Wrong size on BP_EnemyManager_C_DebugDispDamageLog");
static_assert(offsetof(BP_EnemyManager_C_DebugDispDamageLog, CallFunc_GetHUDMainGame_HUDMainGame) == 0x000000, "Member 'BP_EnemyManager_C_DebugDispDamageLog::CallFunc_GetHUDMainGame_HUDMainGame' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispDamageLog, CallFunc_GetDebuggingManager_Manager) == 0x000008, "Member 'BP_EnemyManager_C_DebugDispDamageLog::CallFunc_GetDebuggingManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispDamageLog, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_EnemyManager_C_DebugDispDamageLog::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispDamageLog, CallFunc_GetDamageCalcLog_ReturnValue) == 0x000018, "Member 'BP_EnemyManager_C_DebugDispDamageLog::CallFunc_GetDamageCalcLog_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispDamageLog, CallFunc_Conv_StringToText_ReturnValue) == 0x000028, "Member 'BP_EnemyManager_C_DebugDispDamageLog::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispDamageLog, CallFunc_BooleanOR_ReturnValue) == 0x000040, "Member 'BP_EnemyManager_C_DebugDispDamageLog::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.Check Create Avatar
// 0x0070 (0x0070 - 0x0000)
struct BP_EnemyManager_C_Check_Create_Avatar final
{
public:
	class AActor*                                 NewParam1;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NewParam;                                          // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6143[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         NowCreateNum;                                      // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Ret;                                               // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6144[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         NowAvatarNum;                                      // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSCharacterBase*                       TmpChara;                                          // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattleEnemy_C*                       K2Node_DynamicCast_AsRSBattle_Enemy;               // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAvatar_IsAvatar;                        // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6145[0x1];                                     // 0x003B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ARSCharacterBase*>               CallFunc_GetEnemyList_ReturnValue;                 // 0x0040(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class ARSCharacterBase*                       CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6146[0x3];                                     // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6147[0x3];                                     // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EnemyManager_C_Check_Create_Avatar) == 0x000008, "Wrong alignment on BP_EnemyManager_C_Check_Create_Avatar");
static_assert(sizeof(BP_EnemyManager_C_Check_Create_Avatar) == 0x000070, "Wrong size on BP_EnemyManager_C_Check_Create_Avatar");
static_assert(offsetof(BP_EnemyManager_C_Check_Create_Avatar, NewParam1) == 0x000000, "Member 'BP_EnemyManager_C_Check_Create_Avatar::NewParam1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_Check_Create_Avatar, NewParam) == 0x000008, "Member 'BP_EnemyManager_C_Check_Create_Avatar::NewParam' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_Check_Create_Avatar, NowCreateNum) == 0x00000C, "Member 'BP_EnemyManager_C_Check_Create_Avatar::NowCreateNum' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_Check_Create_Avatar, Ret) == 0x000010, "Member 'BP_EnemyManager_C_Check_Create_Avatar::Ret' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_Check_Create_Avatar, NowAvatarNum) == 0x000014, "Member 'BP_EnemyManager_C_Check_Create_Avatar::NowAvatarNum' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_Check_Create_Avatar, TmpChara) == 0x000018, "Member 'BP_EnemyManager_C_Check_Create_Avatar::TmpChara' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_Check_Create_Avatar, Temp_int_Array_Index_Variable) == 0x000020, "Member 'BP_EnemyManager_C_Check_Create_Avatar::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_Check_Create_Avatar, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'BP_EnemyManager_C_Check_Create_Avatar::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_Check_Create_Avatar, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BP_EnemyManager_C_Check_Create_Avatar::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_Check_Create_Avatar, Temp_int_Variable) == 0x00002C, "Member 'BP_EnemyManager_C_Check_Create_Avatar::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_Check_Create_Avatar, K2Node_DynamicCast_AsRSBattle_Enemy) == 0x000030, "Member 'BP_EnemyManager_C_Check_Create_Avatar::K2Node_DynamicCast_AsRSBattle_Enemy' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_Check_Create_Avatar, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_EnemyManager_C_Check_Create_Avatar::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_Check_Create_Avatar, CallFunc_IsAvatar_IsAvatar) == 0x000039, "Member 'BP_EnemyManager_C_Check_Create_Avatar::CallFunc_IsAvatar_IsAvatar' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_Check_Create_Avatar, CallFunc_Less_IntInt_ReturnValue) == 0x00003A, "Member 'BP_EnemyManager_C_Check_Create_Avatar::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_Check_Create_Avatar, CallFunc_Add_IntInt_ReturnValue_1) == 0x00003C, "Member 'BP_EnemyManager_C_Check_Create_Avatar::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_Check_Create_Avatar, CallFunc_GetEnemyList_ReturnValue) == 0x000040, "Member 'BP_EnemyManager_C_Check_Create_Avatar::CallFunc_GetEnemyList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_Check_Create_Avatar, CallFunc_Array_Get_Item) == 0x000050, "Member 'BP_EnemyManager_C_Check_Create_Avatar::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_Check_Create_Avatar, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'BP_EnemyManager_C_Check_Create_Avatar::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_Check_Create_Avatar, CallFunc_Less_IntInt_ReturnValue_1) == 0x00005C, "Member 'BP_EnemyManager_C_Check_Create_Avatar::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_Check_Create_Avatar, CallFunc_Array_Length_ReturnValue_1) == 0x000060, "Member 'BP_EnemyManager_C_Check_Create_Avatar::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_Check_Create_Avatar, CallFunc_Less_IntInt_ReturnValue_2) == 0x000064, "Member 'BP_EnemyManager_C_Check_Create_Avatar::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_Check_Create_Avatar, CallFunc_Multiply_IntInt_ReturnValue) == 0x000068, "Member 'BP_EnemyManager_C_Check_Create_Avatar::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_Check_Create_Avatar, CallFunc_Add_IntInt_ReturnValue_2) == 0x00006C, "Member 'BP_EnemyManager_C_Check_Create_Avatar::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.EntryCreateAvatar
// 0x0020 (0x0020 - 0x0000)
struct BP_EnemyManager_C_EntryCreateAvatar final
{
public:
	class AActor*                                 NewParam;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NewLocalVar_4;                                     // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6148[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         NewLocalVar_0;                                     // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSCharacterBase*                       NewLocalVar_3;                                     // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EnemyManager_C_EntryCreateAvatar) == 0x000008, "Wrong alignment on BP_EnemyManager_C_EntryCreateAvatar");
static_assert(sizeof(BP_EnemyManager_C_EntryCreateAvatar) == 0x000020, "Wrong size on BP_EnemyManager_C_EntryCreateAvatar");
static_assert(offsetof(BP_EnemyManager_C_EntryCreateAvatar, NewParam) == 0x000000, "Member 'BP_EnemyManager_C_EntryCreateAvatar::NewParam' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_EntryCreateAvatar, NewLocalVar_4) == 0x000008, "Member 'BP_EnemyManager_C_EntryCreateAvatar::NewLocalVar_4' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_EntryCreateAvatar, NewLocalVar_0) == 0x00000C, "Member 'BP_EnemyManager_C_EntryCreateAvatar::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_EntryCreateAvatar, NewLocalVar_3) == 0x000010, "Member 'BP_EnemyManager_C_EntryCreateAvatar::NewLocalVar_3' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_EntryCreateAvatar, CallFunc_Array_AddUnique_ReturnValue) == 0x000018, "Member 'BP_EnemyManager_C_EntryCreateAvatar::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.RemoveCreateAvatar
// 0x0020 (0x0020 - 0x0000)
struct BP_EnemyManager_C_RemoveCreateAvatar final
{
public:
	class AActor*                                 NewParam;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NewLocalVar_4;                                     // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6149[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         NewLocalVar_0;                                     // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSCharacterBase*                       NewLocalVar_3;                                     // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyManager_C_RemoveCreateAvatar) == 0x000008, "Wrong alignment on BP_EnemyManager_C_RemoveCreateAvatar");
static_assert(sizeof(BP_EnemyManager_C_RemoveCreateAvatar) == 0x000020, "Wrong size on BP_EnemyManager_C_RemoveCreateAvatar");
static_assert(offsetof(BP_EnemyManager_C_RemoveCreateAvatar, NewParam) == 0x000000, "Member 'BP_EnemyManager_C_RemoveCreateAvatar::NewParam' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_RemoveCreateAvatar, NewLocalVar_4) == 0x000008, "Member 'BP_EnemyManager_C_RemoveCreateAvatar::NewLocalVar_4' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_RemoveCreateAvatar, NewLocalVar_0) == 0x00000C, "Member 'BP_EnemyManager_C_RemoveCreateAvatar::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_RemoveCreateAvatar, NewLocalVar_3) == 0x000010, "Member 'BP_EnemyManager_C_RemoveCreateAvatar::NewLocalVar_3' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_RemoveCreateAvatar, CallFunc_Array_RemoveItem_ReturnValue) == 0x000018, "Member 'BP_EnemyManager_C_RemoveCreateAvatar::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.ChangeEnpcUniqueThinkTable
// 0x0060 (0x0060 - 0x0000)
struct BP_EnemyManager_C_ChangeEnpcUniqueThinkTable final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_614A[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ARSCharacterBase*>               CallFunc_GetEnemyList_ReturnValue;                 // 0x0010(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_614B[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_614C[0x6];                                     // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattlePlayer_C*                      K2Node_DynamicCast_AsRSBattle_Player;              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_614D[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerInterface_C> CallFunc_IsEnemyPlayer_self_CastInput;             // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnemyPlayer_bEnemyPlayer;               // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyManager_C_ChangeEnpcUniqueThinkTable) == 0x000008, "Wrong alignment on BP_EnemyManager_C_ChangeEnpcUniqueThinkTable");
static_assert(sizeof(BP_EnemyManager_C_ChangeEnpcUniqueThinkTable) == 0x000060, "Wrong size on BP_EnemyManager_C_ChangeEnpcUniqueThinkTable");
static_assert(offsetof(BP_EnemyManager_C_ChangeEnpcUniqueThinkTable, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_EnemyManager_C_ChangeEnpcUniqueThinkTable::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_ChangeEnpcUniqueThinkTable, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_EnemyManager_C_ChangeEnpcUniqueThinkTable::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_ChangeEnpcUniqueThinkTable, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_EnemyManager_C_ChangeEnpcUniqueThinkTable::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_ChangeEnpcUniqueThinkTable, CallFunc_GetEnemyList_ReturnValue) == 0x000010, "Member 'BP_EnemyManager_C_ChangeEnpcUniqueThinkTable::CallFunc_GetEnemyList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_ChangeEnpcUniqueThinkTable, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_EnemyManager_C_ChangeEnpcUniqueThinkTable::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_ChangeEnpcUniqueThinkTable, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_EnemyManager_C_ChangeEnpcUniqueThinkTable::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_ChangeEnpcUniqueThinkTable, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'BP_EnemyManager_C_ChangeEnpcUniqueThinkTable::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_ChangeEnpcUniqueThinkTable, CallFunc_IsValid_ReturnValue) == 0x000031, "Member 'BP_EnemyManager_C_ChangeEnpcUniqueThinkTable::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_ChangeEnpcUniqueThinkTable, K2Node_DynamicCast_AsRSBattle_Player) == 0x000038, "Member 'BP_EnemyManager_C_ChangeEnpcUniqueThinkTable::K2Node_DynamicCast_AsRSBattle_Player' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_ChangeEnpcUniqueThinkTable, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_EnemyManager_C_ChangeEnpcUniqueThinkTable::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_ChangeEnpcUniqueThinkTable, CallFunc_IsEnemyPlayer_self_CastInput) == 0x000048, "Member 'BP_EnemyManager_C_ChangeEnpcUniqueThinkTable::CallFunc_IsEnemyPlayer_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_ChangeEnpcUniqueThinkTable, CallFunc_IsEnemyPlayer_bEnemyPlayer) == 0x000058, "Member 'BP_EnemyManager_C_ChangeEnpcUniqueThinkTable::CallFunc_IsEnemyPlayer_bEnemyPlayer' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.IsBossBattlefield
// 0x0070 (0x0070 - 0x0000)
struct BP_EnemyManager_C_IsBossBattlefield final
{
public:
	int32                                         GroupID;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InBoss;                                            // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          HitGroupId;                                        // 0x0005(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_614E[0x1];                                     // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_614F[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ARSCharacterBase*>               CallFunc_GetEnemyListRef_ReturnValue;              // 0x0010(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6150[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattleCharacter_C*                   K2Node_DynamicCast_AsRSBattle_Character;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6151[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6152[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattlePlayer_C*                      K2Node_DynamicCast_AsRSBattle_Player;              // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6153[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattleEnemy_C*                       K2Node_DynamicCast_AsRSBattle_Enemy;               // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6154[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyManager_C_IsBossBattlefield) == 0x000008, "Wrong alignment on BP_EnemyManager_C_IsBossBattlefield");
static_assert(sizeof(BP_EnemyManager_C_IsBossBattlefield) == 0x000070, "Wrong size on BP_EnemyManager_C_IsBossBattlefield");
static_assert(offsetof(BP_EnemyManager_C_IsBossBattlefield, GroupID) == 0x000000, "Member 'BP_EnemyManager_C_IsBossBattlefield::GroupID' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_IsBossBattlefield, InBoss) == 0x000004, "Member 'BP_EnemyManager_C_IsBossBattlefield::InBoss' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_IsBossBattlefield, HitGroupId) == 0x000005, "Member 'BP_EnemyManager_C_IsBossBattlefield::HitGroupId' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_IsBossBattlefield, Temp_bool_True_if_break_was_hit_Variable) == 0x000006, "Member 'BP_EnemyManager_C_IsBossBattlefield::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_IsBossBattlefield, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_EnemyManager_C_IsBossBattlefield::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_IsBossBattlefield, CallFunc_Not_PreBool_ReturnValue) == 0x00000C, "Member 'BP_EnemyManager_C_IsBossBattlefield::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_IsBossBattlefield, CallFunc_GetEnemyListRef_ReturnValue) == 0x000010, "Member 'BP_EnemyManager_C_IsBossBattlefield::CallFunc_GetEnemyListRef_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_IsBossBattlefield, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'BP_EnemyManager_C_IsBossBattlefield::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_IsBossBattlefield, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_EnemyManager_C_IsBossBattlefield::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_IsBossBattlefield, K2Node_DynamicCast_AsRSBattle_Character) == 0x000030, "Member 'BP_EnemyManager_C_IsBossBattlefield::K2Node_DynamicCast_AsRSBattle_Character' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_IsBossBattlefield, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_EnemyManager_C_IsBossBattlefield::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_IsBossBattlefield, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'BP_EnemyManager_C_IsBossBattlefield::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_IsBossBattlefield, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'BP_EnemyManager_C_IsBossBattlefield::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_IsBossBattlefield, K2Node_DynamicCast_AsRSBattle_Player) == 0x000048, "Member 'BP_EnemyManager_C_IsBossBattlefield::K2Node_DynamicCast_AsRSBattle_Player' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_IsBossBattlefield, K2Node_DynamicCast_bSuccess_1) == 0x000050, "Member 'BP_EnemyManager_C_IsBossBattlefield::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_IsBossBattlefield, K2Node_DynamicCast_AsRSBattle_Enemy) == 0x000058, "Member 'BP_EnemyManager_C_IsBossBattlefield::K2Node_DynamicCast_AsRSBattle_Enemy' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_IsBossBattlefield, K2Node_DynamicCast_bSuccess_2) == 0x000060, "Member 'BP_EnemyManager_C_IsBossBattlefield::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_IsBossBattlefield, CallFunc_Array_Length_ReturnValue) == 0x000064, "Member 'BP_EnemyManager_C_IsBossBattlefield::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_IsBossBattlefield, CallFunc_Less_IntInt_ReturnValue) == 0x000068, "Member 'BP_EnemyManager_C_IsBossBattlefield::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_IsBossBattlefield, CallFunc_BooleanAND_ReturnValue) == 0x000069, "Member 'BP_EnemyManager_C_IsBossBattlefield::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_IsBossBattlefield, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00006A, "Member 'BP_EnemyManager_C_IsBossBattlefield::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.GetCanPlayCutSceneFromNative
// 0x0002 (0x0002 - 0x0000)
struct BP_EnemyManager_C_GetCanPlayCutSceneFromNative final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanPlayCutScene_OK;                       // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyManager_C_GetCanPlayCutSceneFromNative) == 0x000001, "Wrong alignment on BP_EnemyManager_C_GetCanPlayCutSceneFromNative");
static_assert(sizeof(BP_EnemyManager_C_GetCanPlayCutSceneFromNative) == 0x000002, "Wrong size on BP_EnemyManager_C_GetCanPlayCutSceneFromNative");
static_assert(offsetof(BP_EnemyManager_C_GetCanPlayCutSceneFromNative, ReturnValue) == 0x000000, "Member 'BP_EnemyManager_C_GetCanPlayCutSceneFromNative::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_GetCanPlayCutSceneFromNative, CallFunc_CanPlayCutScene_OK) == 0x000001, "Member 'BP_EnemyManager_C_GetCanPlayCutSceneFromNative::CallFunc_CanPlayCutScene_OK' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.IsNeedFrameWait
// 0x0001 (0x0001 - 0x0000)
struct BP_EnemyManager_C_IsNeedFrameWait final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyManager_C_IsNeedFrameWait) == 0x000001, "Wrong alignment on BP_EnemyManager_C_IsNeedFrameWait");
static_assert(sizeof(BP_EnemyManager_C_IsNeedFrameWait) == 0x000001, "Wrong size on BP_EnemyManager_C_IsNeedFrameWait");
static_assert(offsetof(BP_EnemyManager_C_IsNeedFrameWait, ReturnValue) == 0x000000, "Member 'BP_EnemyManager_C_IsNeedFrameWait::ReturnValue' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.DebugDispTIckControl
// 0x00B8 (0x00B8 - 0x0000)
struct BP_EnemyManager_C_DebugDispTIckControl final
{
public:
	int32                                         TmpEnableCount;                                    // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6155[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       NewLocalVar_1;                                     // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActorTickEnabled_ReturnValue;           // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6156[0x2];                                     // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6157[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6158[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ARSCharacterBase*>               CallFunc_GetEnemyList_ReturnValue;                 // 0x0060(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class ARSCharacterBase*                       CallFunc_Array_Get_Item;                           // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6159[0x3];                                     // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_615A[0x4];                                     // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_GetDebuggingManager_Manager;              // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyManager_C_DebugDispTIckControl) == 0x000008, "Wrong alignment on BP_EnemyManager_C_DebugDispTIckControl");
static_assert(sizeof(BP_EnemyManager_C_DebugDispTIckControl) == 0x0000B8, "Wrong size on BP_EnemyManager_C_DebugDispTIckControl");
static_assert(offsetof(BP_EnemyManager_C_DebugDispTIckControl, TmpEnableCount) == 0x000000, "Member 'BP_EnemyManager_C_DebugDispTIckControl::TmpEnableCount' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispTIckControl, NewLocalVar_1) == 0x000008, "Member 'BP_EnemyManager_C_DebugDispTIckControl::NewLocalVar_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispTIckControl, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_EnemyManager_C_DebugDispTIckControl::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispTIckControl, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'BP_EnemyManager_C_DebugDispTIckControl::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispTIckControl, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_EnemyManager_C_DebugDispTIckControl::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispTIckControl, CallFunc_IsValid_ReturnValue) == 0x00001C, "Member 'BP_EnemyManager_C_DebugDispTIckControl::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispTIckControl, CallFunc_IsActorTickEnabled_ReturnValue) == 0x00001D, "Member 'BP_EnemyManager_C_DebugDispTIckControl::CallFunc_IsActorTickEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispTIckControl, Temp_int_Variable) == 0x000020, "Member 'BP_EnemyManager_C_DebugDispTIckControl::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispTIckControl, CallFunc_Conv_IntToString_ReturnValue) == 0x000028, "Member 'BP_EnemyManager_C_DebugDispTIckControl::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispTIckControl, CallFunc_Concat_StrStr_ReturnValue) == 0x000038, "Member 'BP_EnemyManager_C_DebugDispTIckControl::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispTIckControl, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000048, "Member 'BP_EnemyManager_C_DebugDispTIckControl::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispTIckControl, CallFunc_Add_IntInt_ReturnValue_1) == 0x000058, "Member 'BP_EnemyManager_C_DebugDispTIckControl::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispTIckControl, CallFunc_GetEnemyList_ReturnValue) == 0x000060, "Member 'BP_EnemyManager_C_DebugDispTIckControl::CallFunc_GetEnemyList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispTIckControl, CallFunc_Array_Get_Item) == 0x000070, "Member 'BP_EnemyManager_C_DebugDispTIckControl::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispTIckControl, CallFunc_Array_Length_ReturnValue) == 0x000078, "Member 'BP_EnemyManager_C_DebugDispTIckControl::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispTIckControl, CallFunc_Less_IntInt_ReturnValue) == 0x00007C, "Member 'BP_EnemyManager_C_DebugDispTIckControl::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispTIckControl, CallFunc_Array_Length_ReturnValue_1) == 0x000080, "Member 'BP_EnemyManager_C_DebugDispTIckControl::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispTIckControl, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000088, "Member 'BP_EnemyManager_C_DebugDispTIckControl::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispTIckControl, CallFunc_GetDebuggingManager_Manager) == 0x000098, "Member 'BP_EnemyManager_C_DebugDispTIckControl::CallFunc_GetDebuggingManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispTIckControl, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0000A0, "Member 'BP_EnemyManager_C_DebugDispTIckControl::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispTIckControl, CallFunc_IsValid_ReturnValue_1) == 0x0000B0, "Member 'BP_EnemyManager_C_DebugDispTIckControl::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.DebugDispSettingInfo
// 0x0240 (0x0240 - 0x0000)
struct BP_EnemyManager_C_DebugDispSettingInfo final
{
public:
	class FString                                 TmpDIspInfo;                                       // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	int32                                         TmpEnableCount;                                    // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_615B[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       NewLocalVar_1;                                     // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEnemyIgnoreDamage_ReturnValue;          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_615C[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue;            // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEnemyIgnoreDamage_ReturnValue_1;        // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnemyIgnoreDamage_ReturnValue_2;        // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_615D[0x6];                                     // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue_1;          // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue_2;          // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEnemyIgnoreDamage_ReturnValue_3;        // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnemyIgnoreDamage_ReturnValue_4;        // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_615E[0x6];                                     // 0x0062(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue_3;          // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue_4;          // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEnemyIgnoreDamage_ReturnValue_5;        // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnemyIgnoreDamage_ReturnValue_6;        // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_615F[0x6];                                     // 0x008A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue_5;          // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue_6;          // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEnemyIgnoreDamage_ReturnValue_7;        // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnemyIgnoreDamage_ReturnValue_8;        // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6160[0x6];                                     // 0x00B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue_7;          // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue_8;          // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEnemyIgnoreDamage_ReturnValue_9;        // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6161[0x7];                                     // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_GetDebuggingManager_Manager;              // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue_9;          // 0x00F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6162[0x7];                                     // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0110(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0120(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0130(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x0140(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x0150(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_6;              // 0x0160(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_7;              // 0x0170(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_8;              // 0x0180(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_9;              // 0x0190(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_10;             // 0x01A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_11;             // 0x01B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_12;             // 0x01C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_13;             // 0x01D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_14;             // 0x01E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_15;             // 0x01F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_16;             // 0x0200(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_17;             // 0x0210(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_18;             // 0x0220(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_19;             // 0x0230(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EnemyManager_C_DebugDispSettingInfo) == 0x000008, "Wrong alignment on BP_EnemyManager_C_DebugDispSettingInfo");
static_assert(sizeof(BP_EnemyManager_C_DebugDispSettingInfo) == 0x000240, "Wrong size on BP_EnemyManager_C_DebugDispSettingInfo");
static_assert(offsetof(BP_EnemyManager_C_DebugDispSettingInfo, TmpDIspInfo) == 0x000000, "Member 'BP_EnemyManager_C_DebugDispSettingInfo::TmpDIspInfo' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispSettingInfo, TmpEnableCount) == 0x000010, "Member 'BP_EnemyManager_C_DebugDispSettingInfo::TmpEnableCount' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispSettingInfo, NewLocalVar_1) == 0x000018, "Member 'BP_EnemyManager_C_DebugDispSettingInfo::NewLocalVar_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispSettingInfo, CallFunc_IsEnemyIgnoreDamage_ReturnValue) == 0x000020, "Member 'BP_EnemyManager_C_DebugDispSettingInfo::CallFunc_IsEnemyIgnoreDamage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispSettingInfo, CallFunc_Conv_BoolToString_ReturnValue) == 0x000028, "Member 'BP_EnemyManager_C_DebugDispSettingInfo::CallFunc_Conv_BoolToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispSettingInfo, CallFunc_IsEnemyIgnoreDamage_ReturnValue_1) == 0x000038, "Member 'BP_EnemyManager_C_DebugDispSettingInfo::CallFunc_IsEnemyIgnoreDamage_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispSettingInfo, CallFunc_IsEnemyIgnoreDamage_ReturnValue_2) == 0x000039, "Member 'BP_EnemyManager_C_DebugDispSettingInfo::CallFunc_IsEnemyIgnoreDamage_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispSettingInfo, CallFunc_Conv_BoolToString_ReturnValue_1) == 0x000040, "Member 'BP_EnemyManager_C_DebugDispSettingInfo::CallFunc_Conv_BoolToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispSettingInfo, CallFunc_Conv_BoolToString_ReturnValue_2) == 0x000050, "Member 'BP_EnemyManager_C_DebugDispSettingInfo::CallFunc_Conv_BoolToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispSettingInfo, CallFunc_IsEnemyIgnoreDamage_ReturnValue_3) == 0x000060, "Member 'BP_EnemyManager_C_DebugDispSettingInfo::CallFunc_IsEnemyIgnoreDamage_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispSettingInfo, CallFunc_IsEnemyIgnoreDamage_ReturnValue_4) == 0x000061, "Member 'BP_EnemyManager_C_DebugDispSettingInfo::CallFunc_IsEnemyIgnoreDamage_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispSettingInfo, CallFunc_Conv_BoolToString_ReturnValue_3) == 0x000068, "Member 'BP_EnemyManager_C_DebugDispSettingInfo::CallFunc_Conv_BoolToString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispSettingInfo, CallFunc_Conv_BoolToString_ReturnValue_4) == 0x000078, "Member 'BP_EnemyManager_C_DebugDispSettingInfo::CallFunc_Conv_BoolToString_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispSettingInfo, CallFunc_IsEnemyIgnoreDamage_ReturnValue_5) == 0x000088, "Member 'BP_EnemyManager_C_DebugDispSettingInfo::CallFunc_IsEnemyIgnoreDamage_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispSettingInfo, CallFunc_IsEnemyIgnoreDamage_ReturnValue_6) == 0x000089, "Member 'BP_EnemyManager_C_DebugDispSettingInfo::CallFunc_IsEnemyIgnoreDamage_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispSettingInfo, CallFunc_Conv_BoolToString_ReturnValue_5) == 0x000090, "Member 'BP_EnemyManager_C_DebugDispSettingInfo::CallFunc_Conv_BoolToString_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispSettingInfo, CallFunc_Conv_BoolToString_ReturnValue_6) == 0x0000A0, "Member 'BP_EnemyManager_C_DebugDispSettingInfo::CallFunc_Conv_BoolToString_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispSettingInfo, CallFunc_IsEnemyIgnoreDamage_ReturnValue_7) == 0x0000B0, "Member 'BP_EnemyManager_C_DebugDispSettingInfo::CallFunc_IsEnemyIgnoreDamage_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispSettingInfo, CallFunc_IsEnemyIgnoreDamage_ReturnValue_8) == 0x0000B1, "Member 'BP_EnemyManager_C_DebugDispSettingInfo::CallFunc_IsEnemyIgnoreDamage_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispSettingInfo, CallFunc_Conv_BoolToString_ReturnValue_7) == 0x0000B8, "Member 'BP_EnemyManager_C_DebugDispSettingInfo::CallFunc_Conv_BoolToString_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispSettingInfo, CallFunc_Conv_BoolToString_ReturnValue_8) == 0x0000C8, "Member 'BP_EnemyManager_C_DebugDispSettingInfo::CallFunc_Conv_BoolToString_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispSettingInfo, CallFunc_Concat_StrStr_ReturnValue) == 0x0000D8, "Member 'BP_EnemyManager_C_DebugDispSettingInfo::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispSettingInfo, CallFunc_IsEnemyIgnoreDamage_ReturnValue_9) == 0x0000E8, "Member 'BP_EnemyManager_C_DebugDispSettingInfo::CallFunc_IsEnemyIgnoreDamage_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispSettingInfo, CallFunc_GetDebuggingManager_Manager) == 0x0000F0, "Member 'BP_EnemyManager_C_DebugDispSettingInfo::CallFunc_GetDebuggingManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispSettingInfo, CallFunc_Conv_BoolToString_ReturnValue_9) == 0x0000F8, "Member 'BP_EnemyManager_C_DebugDispSettingInfo::CallFunc_Conv_BoolToString_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispSettingInfo, CallFunc_IsValid_ReturnValue) == 0x000108, "Member 'BP_EnemyManager_C_DebugDispSettingInfo::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispSettingInfo, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000110, "Member 'BP_EnemyManager_C_DebugDispSettingInfo::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispSettingInfo, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000120, "Member 'BP_EnemyManager_C_DebugDispSettingInfo::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispSettingInfo, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000130, "Member 'BP_EnemyManager_C_DebugDispSettingInfo::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispSettingInfo, CallFunc_Concat_StrStr_ReturnValue_4) == 0x000140, "Member 'BP_EnemyManager_C_DebugDispSettingInfo::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispSettingInfo, CallFunc_Concat_StrStr_ReturnValue_5) == 0x000150, "Member 'BP_EnemyManager_C_DebugDispSettingInfo::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispSettingInfo, CallFunc_Concat_StrStr_ReturnValue_6) == 0x000160, "Member 'BP_EnemyManager_C_DebugDispSettingInfo::CallFunc_Concat_StrStr_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispSettingInfo, CallFunc_Concat_StrStr_ReturnValue_7) == 0x000170, "Member 'BP_EnemyManager_C_DebugDispSettingInfo::CallFunc_Concat_StrStr_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispSettingInfo, CallFunc_Concat_StrStr_ReturnValue_8) == 0x000180, "Member 'BP_EnemyManager_C_DebugDispSettingInfo::CallFunc_Concat_StrStr_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispSettingInfo, CallFunc_Concat_StrStr_ReturnValue_9) == 0x000190, "Member 'BP_EnemyManager_C_DebugDispSettingInfo::CallFunc_Concat_StrStr_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispSettingInfo, CallFunc_Concat_StrStr_ReturnValue_10) == 0x0001A0, "Member 'BP_EnemyManager_C_DebugDispSettingInfo::CallFunc_Concat_StrStr_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispSettingInfo, CallFunc_Concat_StrStr_ReturnValue_11) == 0x0001B0, "Member 'BP_EnemyManager_C_DebugDispSettingInfo::CallFunc_Concat_StrStr_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispSettingInfo, CallFunc_Concat_StrStr_ReturnValue_12) == 0x0001C0, "Member 'BP_EnemyManager_C_DebugDispSettingInfo::CallFunc_Concat_StrStr_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispSettingInfo, CallFunc_Concat_StrStr_ReturnValue_13) == 0x0001D0, "Member 'BP_EnemyManager_C_DebugDispSettingInfo::CallFunc_Concat_StrStr_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispSettingInfo, CallFunc_Concat_StrStr_ReturnValue_14) == 0x0001E0, "Member 'BP_EnemyManager_C_DebugDispSettingInfo::CallFunc_Concat_StrStr_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispSettingInfo, CallFunc_Concat_StrStr_ReturnValue_15) == 0x0001F0, "Member 'BP_EnemyManager_C_DebugDispSettingInfo::CallFunc_Concat_StrStr_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispSettingInfo, CallFunc_Concat_StrStr_ReturnValue_16) == 0x000200, "Member 'BP_EnemyManager_C_DebugDispSettingInfo::CallFunc_Concat_StrStr_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispSettingInfo, CallFunc_Concat_StrStr_ReturnValue_17) == 0x000210, "Member 'BP_EnemyManager_C_DebugDispSettingInfo::CallFunc_Concat_StrStr_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispSettingInfo, CallFunc_Concat_StrStr_ReturnValue_18) == 0x000220, "Member 'BP_EnemyManager_C_DebugDispSettingInfo::CallFunc_Concat_StrStr_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispSettingInfo, CallFunc_Concat_StrStr_ReturnValue_19) == 0x000230, "Member 'BP_EnemyManager_C_DebugDispSettingInfo::CallFunc_Concat_StrStr_ReturnValue_19' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.SetRepopExtendInList_FromNative
// 0x0058 (0x0058 - 0x0000)
struct BP_EnemyManager_C_SetRepopExtendInList_FromNative final
{
public:
	struct FEnemyRepopExtendInfo                  EnemyRepopExtendInfo;                              // 0x0000(0x0024)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	uint8                                         Pad_6163[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       RepopTarget;                                       // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6164[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattleEnemy_C*                       NewLocalVar_5;                                     // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6165[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattleEnemy_C*                       K2Node_DynamicCast_AsRSBattle_Enemy;               // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyManager_C_SetRepopExtendInList_FromNative) == 0x000008, "Wrong alignment on BP_EnemyManager_C_SetRepopExtendInList_FromNative");
static_assert(sizeof(BP_EnemyManager_C_SetRepopExtendInList_FromNative) == 0x000058, "Wrong size on BP_EnemyManager_C_SetRepopExtendInList_FromNative");
static_assert(offsetof(BP_EnemyManager_C_SetRepopExtendInList_FromNative, EnemyRepopExtendInfo) == 0x000000, "Member 'BP_EnemyManager_C_SetRepopExtendInList_FromNative::EnemyRepopExtendInfo' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetRepopExtendInList_FromNative, RepopTarget) == 0x000028, "Member 'BP_EnemyManager_C_SetRepopExtendInList_FromNative::RepopTarget' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetRepopExtendInList_FromNative, ReturnValue) == 0x000030, "Member 'BP_EnemyManager_C_SetRepopExtendInList_FromNative::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetRepopExtendInList_FromNative, NewLocalVar_5) == 0x000038, "Member 'BP_EnemyManager_C_SetRepopExtendInList_FromNative::NewLocalVar_5' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetRepopExtendInList_FromNative, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'BP_EnemyManager_C_SetRepopExtendInList_FromNative::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetRepopExtendInList_FromNative, K2Node_DynamicCast_AsRSBattle_Enemy) == 0x000048, "Member 'BP_EnemyManager_C_SetRepopExtendInList_FromNative::K2Node_DynamicCast_AsRSBattle_Enemy' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SetRepopExtendInList_FromNative, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'BP_EnemyManager_C_SetRepopExtendInList_FromNative::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.DebugDispGroupInfo
// 0x0260 (0x0260 - 0x0000)
struct BP_EnemyManager_C_DebugDispGroupInfo final
{
public:
	TMap<int32, int32>                            NewLocalVar_0;                                     // 0x0000(0x0050)(Edit, BlueprintVisible)
	class ABP_BattlefieldManager_C*               TmpBattleFieidManager;                             // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 TmpDIspInfo;                                       // 0x0058(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	int32                                         TmpEnableCount;                                    // 0x0068(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6166[0x4];                                     // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       NewLocalVar_1;                                     // 0x0070(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0078(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6167[0x4];                                     // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_Map_Values_Values;                        // 0x0098(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<int32>                                 CallFunc_Map_Keys_Keys;                            // 0x00A8(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6168[0x4];                                     // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FBattlefieldInfo                       CallFunc_GetBattlefieldInfo_BFInfo;                // 0x00D0(0x0088)()
	bool                                          CallFunc_GetBattlefieldInfo_IsExist;               // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6169[0x7];                                     // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0160(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_616A[0x4];                                     // 0x0174(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0178(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_616B[0x7];                                     // 0x0189(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0190(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_616C[0x4];                                     // 0x01A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ARSCharacterBase*>               CallFunc_GetEnemyList_ReturnValue;                 // 0x01A8(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class ABP_BattlefieldManager_C*               CallFunc_GetBattlefieldManager_BP_BattlefieldManager; // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSCharacterBase*                       CallFunc_Array_Get_Item_1;                         // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x01C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_616D[0x6];                                     // 0x01CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattleEnemy_C*                       K2Node_DynamicCast_AsRSBattle_Enemy;               // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_616E[0x3];                                     // 0x01D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_616F[0x3];                                     // 0x01E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Map_Find_Value;                           // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6170[0x3];                                     // 0x01E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x01F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0200(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_GetDebuggingManager_Manager;              // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0218(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6171[0x7];                                     // 0x0229(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x0230(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x0240(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_6;              // 0x0250(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EnemyManager_C_DebugDispGroupInfo) == 0x000008, "Wrong alignment on BP_EnemyManager_C_DebugDispGroupInfo");
static_assert(sizeof(BP_EnemyManager_C_DebugDispGroupInfo) == 0x000260, "Wrong size on BP_EnemyManager_C_DebugDispGroupInfo");
static_assert(offsetof(BP_EnemyManager_C_DebugDispGroupInfo, NewLocalVar_0) == 0x000000, "Member 'BP_EnemyManager_C_DebugDispGroupInfo::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispGroupInfo, TmpBattleFieidManager) == 0x000050, "Member 'BP_EnemyManager_C_DebugDispGroupInfo::TmpBattleFieidManager' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispGroupInfo, TmpDIspInfo) == 0x000058, "Member 'BP_EnemyManager_C_DebugDispGroupInfo::TmpDIspInfo' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispGroupInfo, TmpEnableCount) == 0x000068, "Member 'BP_EnemyManager_C_DebugDispGroupInfo::TmpEnableCount' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispGroupInfo, NewLocalVar_1) == 0x000070, "Member 'BP_EnemyManager_C_DebugDispGroupInfo::NewLocalVar_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispGroupInfo, Temp_int_Variable) == 0x000078, "Member 'BP_EnemyManager_C_DebugDispGroupInfo::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispGroupInfo, Temp_int_Loop_Counter_Variable) == 0x00007C, "Member 'BP_EnemyManager_C_DebugDispGroupInfo::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispGroupInfo, CallFunc_Add_IntInt_ReturnValue) == 0x000080, "Member 'BP_EnemyManager_C_DebugDispGroupInfo::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispGroupInfo, Temp_int_Array_Index_Variable) == 0x000084, "Member 'BP_EnemyManager_C_DebugDispGroupInfo::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispGroupInfo, Temp_int_Loop_Counter_Variable_1) == 0x000088, "Member 'BP_EnemyManager_C_DebugDispGroupInfo::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispGroupInfo, CallFunc_Add_IntInt_ReturnValue_1) == 0x00008C, "Member 'BP_EnemyManager_C_DebugDispGroupInfo::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispGroupInfo, Temp_int_Array_Index_Variable_1) == 0x000090, "Member 'BP_EnemyManager_C_DebugDispGroupInfo::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispGroupInfo, CallFunc_Map_Values_Values) == 0x000098, "Member 'BP_EnemyManager_C_DebugDispGroupInfo::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispGroupInfo, CallFunc_Map_Keys_Keys) == 0x0000A8, "Member 'BP_EnemyManager_C_DebugDispGroupInfo::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispGroupInfo, CallFunc_Array_Get_Item) == 0x0000B8, "Member 'BP_EnemyManager_C_DebugDispGroupInfo::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispGroupInfo, CallFunc_Conv_IntToString_ReturnValue) == 0x0000C0, "Member 'BP_EnemyManager_C_DebugDispGroupInfo::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispGroupInfo, CallFunc_GetBattlefieldInfo_BFInfo) == 0x0000D0, "Member 'BP_EnemyManager_C_DebugDispGroupInfo::CallFunc_GetBattlefieldInfo_BFInfo' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispGroupInfo, CallFunc_GetBattlefieldInfo_IsExist) == 0x000158, "Member 'BP_EnemyManager_C_DebugDispGroupInfo::CallFunc_GetBattlefieldInfo_IsExist' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispGroupInfo, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000160, "Member 'BP_EnemyManager_C_DebugDispGroupInfo::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispGroupInfo, CallFunc_Array_Length_ReturnValue) == 0x000170, "Member 'BP_EnemyManager_C_DebugDispGroupInfo::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispGroupInfo, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000178, "Member 'BP_EnemyManager_C_DebugDispGroupInfo::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispGroupInfo, CallFunc_Less_IntInt_ReturnValue) == 0x000188, "Member 'BP_EnemyManager_C_DebugDispGroupInfo::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispGroupInfo, CallFunc_Concat_StrStr_ReturnValue) == 0x000190, "Member 'BP_EnemyManager_C_DebugDispGroupInfo::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispGroupInfo, Temp_int_Variable_1) == 0x0001A0, "Member 'BP_EnemyManager_C_DebugDispGroupInfo::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispGroupInfo, CallFunc_GetEnemyList_ReturnValue) == 0x0001A8, "Member 'BP_EnemyManager_C_DebugDispGroupInfo::CallFunc_GetEnemyList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispGroupInfo, CallFunc_GetBattlefieldManager_BP_BattlefieldManager) == 0x0001B8, "Member 'BP_EnemyManager_C_DebugDispGroupInfo::CallFunc_GetBattlefieldManager_BP_BattlefieldManager' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispGroupInfo, CallFunc_Array_Get_Item_1) == 0x0001C0, "Member 'BP_EnemyManager_C_DebugDispGroupInfo::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispGroupInfo, CallFunc_IsValid_ReturnValue) == 0x0001C8, "Member 'BP_EnemyManager_C_DebugDispGroupInfo::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispGroupInfo, CallFunc_IsValid_ReturnValue_1) == 0x0001C9, "Member 'BP_EnemyManager_C_DebugDispGroupInfo::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispGroupInfo, K2Node_DynamicCast_AsRSBattle_Enemy) == 0x0001D0, "Member 'BP_EnemyManager_C_DebugDispGroupInfo::K2Node_DynamicCast_AsRSBattle_Enemy' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispGroupInfo, K2Node_DynamicCast_bSuccess) == 0x0001D8, "Member 'BP_EnemyManager_C_DebugDispGroupInfo::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispGroupInfo, CallFunc_Array_Length_ReturnValue_1) == 0x0001DC, "Member 'BP_EnemyManager_C_DebugDispGroupInfo::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispGroupInfo, CallFunc_Less_IntInt_ReturnValue_1) == 0x0001E0, "Member 'BP_EnemyManager_C_DebugDispGroupInfo::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispGroupInfo, CallFunc_Map_Find_Value) == 0x0001E4, "Member 'BP_EnemyManager_C_DebugDispGroupInfo::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispGroupInfo, CallFunc_Map_Find_ReturnValue) == 0x0001E8, "Member 'BP_EnemyManager_C_DebugDispGroupInfo::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispGroupInfo, CallFunc_Add_IntInt_ReturnValue_2) == 0x0001EC, "Member 'BP_EnemyManager_C_DebugDispGroupInfo::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispGroupInfo, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0001F0, "Member 'BP_EnemyManager_C_DebugDispGroupInfo::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispGroupInfo, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000200, "Member 'BP_EnemyManager_C_DebugDispGroupInfo::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispGroupInfo, CallFunc_GetDebuggingManager_Manager) == 0x000210, "Member 'BP_EnemyManager_C_DebugDispGroupInfo::CallFunc_GetDebuggingManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispGroupInfo, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000218, "Member 'BP_EnemyManager_C_DebugDispGroupInfo::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispGroupInfo, CallFunc_IsValid_ReturnValue_2) == 0x000228, "Member 'BP_EnemyManager_C_DebugDispGroupInfo::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispGroupInfo, CallFunc_Concat_StrStr_ReturnValue_4) == 0x000230, "Member 'BP_EnemyManager_C_DebugDispGroupInfo::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispGroupInfo, CallFunc_Concat_StrStr_ReturnValue_5) == 0x000240, "Member 'BP_EnemyManager_C_DebugDispGroupInfo::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispGroupInfo, CallFunc_Concat_StrStr_ReturnValue_6) == 0x000250, "Member 'BP_EnemyManager_C_DebugDispGroupInfo::CallFunc_Concat_StrStr_ReturnValue_6' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.UpdateTriggerEffect
// 0x0050 (0x0050 - 0x0000)
struct BP_EnemyManager_C_UpdateTriggerEffect final
{
public:
	class ABP_TriggerEffectManager_C*             L_trgEffMgr;                                       // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsTriggerInputStatus_ReturnValue;         // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsTriggerInputStatus_ReturnValue_1;       // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6172[0x6];                                     // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSCharacterBase*                       CallFunc_GetPlayer_ReturnValue;                    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_TriggerEffectManager_C*             CallFunc_GetTriggerEffectManager_BP_TriggerEffectManager; // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattlePlayer_C*                      K2Node_DynamicCast_AsRSBattle_Player;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActionStatus_Result;                    // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6173[0x5];                                     // 0x0033(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IPlayerInterface>      CallFunc_IsOnReadySAS_self_CastInput;              // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsOnReadySAS_ReturnValue;                 // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsOnReadyCombinationVision_ReturnValue;   // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDisableAction_bEnable;                  // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActionStatus_Result_1;                  // 0x004B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsBrainCrashAccessEnable_Return;          // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyManager_C_UpdateTriggerEffect) == 0x000008, "Wrong alignment on BP_EnemyManager_C_UpdateTriggerEffect");
static_assert(sizeof(BP_EnemyManager_C_UpdateTriggerEffect) == 0x000050, "Wrong size on BP_EnemyManager_C_UpdateTriggerEffect");
static_assert(offsetof(BP_EnemyManager_C_UpdateTriggerEffect, L_trgEffMgr) == 0x000000, "Member 'BP_EnemyManager_C_UpdateTriggerEffect::L_trgEffMgr' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_UpdateTriggerEffect, CallFunc_IsTriggerInputStatus_ReturnValue) == 0x000008, "Member 'BP_EnemyManager_C_UpdateTriggerEffect::CallFunc_IsTriggerInputStatus_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_UpdateTriggerEffect, CallFunc_IsTriggerInputStatus_ReturnValue_1) == 0x000009, "Member 'BP_EnemyManager_C_UpdateTriggerEffect::CallFunc_IsTriggerInputStatus_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_UpdateTriggerEffect, CallFunc_GetPlayerManager_PlayerManager) == 0x000010, "Member 'BP_EnemyManager_C_UpdateTriggerEffect::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_UpdateTriggerEffect, CallFunc_GetPlayer_ReturnValue) == 0x000018, "Member 'BP_EnemyManager_C_UpdateTriggerEffect::CallFunc_GetPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_UpdateTriggerEffect, CallFunc_GetTriggerEffectManager_BP_TriggerEffectManager) == 0x000020, "Member 'BP_EnemyManager_C_UpdateTriggerEffect::CallFunc_GetTriggerEffectManager_BP_TriggerEffectManager' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_UpdateTriggerEffect, K2Node_DynamicCast_AsRSBattle_Player) == 0x000028, "Member 'BP_EnemyManager_C_UpdateTriggerEffect::K2Node_DynamicCast_AsRSBattle_Player' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_UpdateTriggerEffect, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_EnemyManager_C_UpdateTriggerEffect::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_UpdateTriggerEffect, CallFunc_IsValid_ReturnValue) == 0x000031, "Member 'BP_EnemyManager_C_UpdateTriggerEffect::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_UpdateTriggerEffect, CallFunc_IsActionStatus_Result) == 0x000032, "Member 'BP_EnemyManager_C_UpdateTriggerEffect::CallFunc_IsActionStatus_Result' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_UpdateTriggerEffect, CallFunc_IsOnReadySAS_self_CastInput) == 0x000038, "Member 'BP_EnemyManager_C_UpdateTriggerEffect::CallFunc_IsOnReadySAS_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_UpdateTriggerEffect, CallFunc_IsOnReadySAS_ReturnValue) == 0x000048, "Member 'BP_EnemyManager_C_UpdateTriggerEffect::CallFunc_IsOnReadySAS_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_UpdateTriggerEffect, CallFunc_IsOnReadyCombinationVision_ReturnValue) == 0x000049, "Member 'BP_EnemyManager_C_UpdateTriggerEffect::CallFunc_IsOnReadyCombinationVision_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_UpdateTriggerEffect, CallFunc_IsDisableAction_bEnable) == 0x00004A, "Member 'BP_EnemyManager_C_UpdateTriggerEffect::CallFunc_IsDisableAction_bEnable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_UpdateTriggerEffect, CallFunc_IsActionStatus_Result_1) == 0x00004B, "Member 'BP_EnemyManager_C_UpdateTriggerEffect::CallFunc_IsActionStatus_Result_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_UpdateTriggerEffect, CallFunc_BooleanOR_ReturnValue) == 0x00004C, "Member 'BP_EnemyManager_C_UpdateTriggerEffect::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_UpdateTriggerEffect, CallFunc_IsBrainCrashAccessEnable_Return) == 0x00004D, "Member 'BP_EnemyManager_C_UpdateTriggerEffect::CallFunc_IsBrainCrashAccessEnable_Return' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.EnableUniqueBrainCrashPlayedListFromActor
// 0x0018 (0x0018 - 0x0000)
struct BP_EnemyManager_C_EnableUniqueBrainCrashPlayedListFromActor final
{
public:
	class ARSCharacterBase*                       CrashEnemy;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_CreateUniqueBrainCrashPlayedListKeyName_KeyName; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EnableUniqueBrainCrashPlayedList_ReturnValue; // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyManager_C_EnableUniqueBrainCrashPlayedListFromActor) == 0x000008, "Wrong alignment on BP_EnemyManager_C_EnableUniqueBrainCrashPlayedListFromActor");
static_assert(sizeof(BP_EnemyManager_C_EnableUniqueBrainCrashPlayedListFromActor) == 0x000018, "Wrong size on BP_EnemyManager_C_EnableUniqueBrainCrashPlayedListFromActor");
static_assert(offsetof(BP_EnemyManager_C_EnableUniqueBrainCrashPlayedListFromActor, CrashEnemy) == 0x000000, "Member 'BP_EnemyManager_C_EnableUniqueBrainCrashPlayedListFromActor::CrashEnemy' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_EnableUniqueBrainCrashPlayedListFromActor, CallFunc_CreateUniqueBrainCrashPlayedListKeyName_KeyName) == 0x000008, "Member 'BP_EnemyManager_C_EnableUniqueBrainCrashPlayedListFromActor::CallFunc_CreateUniqueBrainCrashPlayedListKeyName_KeyName' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_EnableUniqueBrainCrashPlayedListFromActor, CallFunc_EnableUniqueBrainCrashPlayedList_ReturnValue) == 0x000010, "Member 'BP_EnemyManager_C_EnableUniqueBrainCrashPlayedListFromActor::CallFunc_EnableUniqueBrainCrashPlayedList_ReturnValue' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.UpdatePauseBrainCrash
// 0x0068 (0x0068 - 0x0000)
struct BP_EnemyManager_C_UpdatePauseBrainCrash final
{
public:
	class ARSBattlePlayer_C*                      LPlayer;                                           // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActionStatus_Result;                    // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActionStatus_Result_1;                  // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6174[0x2];                                     // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerManager*                         CallFunc_GetPlayerManager_PlayerManager;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6175[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_GetPlayer_ReturnValue;                    // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattlePlayer_C*                      K2Node_DynamicCast_AsRSBattle_Player;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6176[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6177[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattleCharacter_C*                   K2Node_DynamicCast_AsRSBattle_Character;           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsBrainCrashAccessEnable_Return;          // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6178[0x1];                                     // 0x005B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyManager_C_UpdatePauseBrainCrash) == 0x000008, "Wrong alignment on BP_EnemyManager_C_UpdatePauseBrainCrash");
static_assert(sizeof(BP_EnemyManager_C_UpdatePauseBrainCrash) == 0x000068, "Wrong size on BP_EnemyManager_C_UpdatePauseBrainCrash");
static_assert(offsetof(BP_EnemyManager_C_UpdatePauseBrainCrash, LPlayer) == 0x000000, "Member 'BP_EnemyManager_C_UpdatePauseBrainCrash::LPlayer' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_UpdatePauseBrainCrash, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_EnemyManager_C_UpdatePauseBrainCrash::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_UpdatePauseBrainCrash, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BP_EnemyManager_C_UpdatePauseBrainCrash::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_UpdatePauseBrainCrash, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_EnemyManager_C_UpdatePauseBrainCrash::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_UpdatePauseBrainCrash, CallFunc_IsActionStatus_Result) == 0x000014, "Member 'BP_EnemyManager_C_UpdatePauseBrainCrash::CallFunc_IsActionStatus_Result' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_UpdatePauseBrainCrash, CallFunc_IsActionStatus_Result_1) == 0x000015, "Member 'BP_EnemyManager_C_UpdatePauseBrainCrash::CallFunc_IsActionStatus_Result_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_UpdatePauseBrainCrash, CallFunc_GetPlayerManager_PlayerManager) == 0x000018, "Member 'BP_EnemyManager_C_UpdatePauseBrainCrash::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_UpdatePauseBrainCrash, CallFunc_BooleanOR_ReturnValue) == 0x000020, "Member 'BP_EnemyManager_C_UpdatePauseBrainCrash::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_UpdatePauseBrainCrash, CallFunc_GetPlayer_ReturnValue) == 0x000028, "Member 'BP_EnemyManager_C_UpdatePauseBrainCrash::CallFunc_GetPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_UpdatePauseBrainCrash, K2Node_DynamicCast_AsRSBattle_Player) == 0x000030, "Member 'BP_EnemyManager_C_UpdatePauseBrainCrash::K2Node_DynamicCast_AsRSBattle_Player' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_UpdatePauseBrainCrash, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_EnemyManager_C_UpdatePauseBrainCrash::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_UpdatePauseBrainCrash, CallFunc_Array_Get_Item) == 0x000040, "Member 'BP_EnemyManager_C_UpdatePauseBrainCrash::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_UpdatePauseBrainCrash, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'BP_EnemyManager_C_UpdatePauseBrainCrash::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_UpdatePauseBrainCrash, K2Node_DynamicCast_AsRSBattle_Character) == 0x000050, "Member 'BP_EnemyManager_C_UpdatePauseBrainCrash::K2Node_DynamicCast_AsRSBattle_Character' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_UpdatePauseBrainCrash, K2Node_DynamicCast_bSuccess_1) == 0x000058, "Member 'BP_EnemyManager_C_UpdatePauseBrainCrash::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_UpdatePauseBrainCrash, CallFunc_Less_IntInt_ReturnValue) == 0x000059, "Member 'BP_EnemyManager_C_UpdatePauseBrainCrash::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_UpdatePauseBrainCrash, CallFunc_IsBrainCrashAccessEnable_Return) == 0x00005A, "Member 'BP_EnemyManager_C_UpdatePauseBrainCrash::CallFunc_IsBrainCrashAccessEnable_Return' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_UpdatePauseBrainCrash, CallFunc_Array_Length_ReturnValue_1) == 0x00005C, "Member 'BP_EnemyManager_C_UpdatePauseBrainCrash::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_UpdatePauseBrainCrash, CallFunc_Greater_IntInt_ReturnValue) == 0x000060, "Member 'BP_EnemyManager_C_UpdatePauseBrainCrash::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.CheckPauseBrainCrash
// 0x0040 (0x0040 - 0x0000)
struct BP_EnemyManager_C_CheckPauseBrainCrash final
{
public:
	class AActor*                                 PauseActor;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattleCharacter_C*                   K2Node_DynamicCast_AsRSBattle_Character;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6179[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerManager*                         CallFunc_GetPlayerManager_PlayerManager;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSCharacterBase*                       CallFunc_GetPlayer_ReturnValue;                    // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattlePlayer_C*                      K2Node_DynamicCast_AsRSBattle_Player;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActionStatus_Result;                    // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_617A[0x2];                                     // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActionStatus_Result_1;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyManager_C_CheckPauseBrainCrash) == 0x000008, "Wrong alignment on BP_EnemyManager_C_CheckPauseBrainCrash");
static_assert(sizeof(BP_EnemyManager_C_CheckPauseBrainCrash) == 0x000040, "Wrong size on BP_EnemyManager_C_CheckPauseBrainCrash");
static_assert(offsetof(BP_EnemyManager_C_CheckPauseBrainCrash, PauseActor) == 0x000000, "Member 'BP_EnemyManager_C_CheckPauseBrainCrash::PauseActor' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_CheckPauseBrainCrash, K2Node_DynamicCast_AsRSBattle_Character) == 0x000008, "Member 'BP_EnemyManager_C_CheckPauseBrainCrash::K2Node_DynamicCast_AsRSBattle_Character' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_CheckPauseBrainCrash, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_EnemyManager_C_CheckPauseBrainCrash::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_CheckPauseBrainCrash, CallFunc_GetPlayerManager_PlayerManager) == 0x000018, "Member 'BP_EnemyManager_C_CheckPauseBrainCrash::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_CheckPauseBrainCrash, CallFunc_GetPlayer_ReturnValue) == 0x000020, "Member 'BP_EnemyManager_C_CheckPauseBrainCrash::CallFunc_GetPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_CheckPauseBrainCrash, K2Node_DynamicCast_AsRSBattle_Player) == 0x000028, "Member 'BP_EnemyManager_C_CheckPauseBrainCrash::K2Node_DynamicCast_AsRSBattle_Player' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_CheckPauseBrainCrash, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'BP_EnemyManager_C_CheckPauseBrainCrash::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_CheckPauseBrainCrash, CallFunc_IsActionStatus_Result) == 0x000031, "Member 'BP_EnemyManager_C_CheckPauseBrainCrash::CallFunc_IsActionStatus_Result' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_CheckPauseBrainCrash, CallFunc_Array_AddUnique_ReturnValue) == 0x000034, "Member 'BP_EnemyManager_C_CheckPauseBrainCrash::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_CheckPauseBrainCrash, CallFunc_IsActionStatus_Result_1) == 0x000038, "Member 'BP_EnemyManager_C_CheckPauseBrainCrash::CallFunc_IsActionStatus_Result_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_CheckPauseBrainCrash, CallFunc_BooleanOR_ReturnValue) == 0x000039, "Member 'BP_EnemyManager_C_CheckPauseBrainCrash::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.IsAbleCountSpawnCondition
// 0x0040 (0x0040 - 0x0000)
struct BP_EnemyManager_C_IsAbleCountSpawnCondition final
{
public:
	class ARSBattleCharacter_C*                   EnemyActor;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsConditionCheckNow;                               // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsCountOK;                                         // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_617B[0x6];                                     // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_EnemyInterface_C> K2Node_DynamicCast_AsBPI_Enemy_Interface;          // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetEnemySpawnConditionCheck_IsSpawnOK;    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_617C[0x6];                                     // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_EnemyInterface_C> K2Node_DynamicCast_AsBPI_Enemy_Interface_1;        // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetEnemySpawn_return;                     // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyManager_C_IsAbleCountSpawnCondition) == 0x000008, "Wrong alignment on BP_EnemyManager_C_IsAbleCountSpawnCondition");
static_assert(sizeof(BP_EnemyManager_C_IsAbleCountSpawnCondition) == 0x000040, "Wrong size on BP_EnemyManager_C_IsAbleCountSpawnCondition");
static_assert(offsetof(BP_EnemyManager_C_IsAbleCountSpawnCondition, EnemyActor) == 0x000000, "Member 'BP_EnemyManager_C_IsAbleCountSpawnCondition::EnemyActor' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_IsAbleCountSpawnCondition, IsConditionCheckNow) == 0x000008, "Member 'BP_EnemyManager_C_IsAbleCountSpawnCondition::IsConditionCheckNow' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_IsAbleCountSpawnCondition, IsCountOK) == 0x000009, "Member 'BP_EnemyManager_C_IsAbleCountSpawnCondition::IsCountOK' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_IsAbleCountSpawnCondition, K2Node_DynamicCast_AsBPI_Enemy_Interface) == 0x000010, "Member 'BP_EnemyManager_C_IsAbleCountSpawnCondition::K2Node_DynamicCast_AsBPI_Enemy_Interface' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_IsAbleCountSpawnCondition, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_EnemyManager_C_IsAbleCountSpawnCondition::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_IsAbleCountSpawnCondition, CallFunc_GetEnemySpawnConditionCheck_IsSpawnOK) == 0x000021, "Member 'BP_EnemyManager_C_IsAbleCountSpawnCondition::CallFunc_GetEnemySpawnConditionCheck_IsSpawnOK' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_IsAbleCountSpawnCondition, K2Node_DynamicCast_AsBPI_Enemy_Interface_1) == 0x000028, "Member 'BP_EnemyManager_C_IsAbleCountSpawnCondition::K2Node_DynamicCast_AsBPI_Enemy_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_IsAbleCountSpawnCondition, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'BP_EnemyManager_C_IsAbleCountSpawnCondition::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_IsAbleCountSpawnCondition, CallFunc_GetEnemySpawn_return) == 0x000039, "Member 'BP_EnemyManager_C_IsAbleCountSpawnCondition::CallFunc_GetEnemySpawn_return' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.DebugDispRareSpawnCondisionInfo
// 0x0408 (0x0408 - 0x0000)
struct BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo final
{
public:
	class ARSBattleEnemy_C*                       EnableSpawnEnemy;                                  // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 LString;                                           // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          LIsValidRareEnemy;                                 // 0x0018(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_617D[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUDMainGame_C*                         LHUDMainGame;                                      // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LState;                                            // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LValue2;                                           // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LValue1;                                           // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_617E[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABattleSimulatorManager*                LBattleSimulator;                                  // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ARSCharacterBase*>               LEnemyList;                                        // 0x0040(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable;                              // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMissionActive_ReturnValue;              // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_617F[0x3];                                     // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6180[0x4];                                     // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUDMainGame_C*                         CallFunc_GetHUDMainGame_HUDMainGame;               // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ARSCharacterBase*>               CallFunc_GetEnemyList_ReturnValue;                 // 0x0090(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6181[0x7];                                     // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x00D8(0x0018)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x00F0(0x0018)()
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue;           // 0x0108(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_GetActorAndHpRateEnemyHpRate_HpRate;      // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6182[0x4];                                     // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetActorAndHpRateEnemyHpRate_ReturnValue; // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0128(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6183[0x7];                                     // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x0140(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x0150(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ARSBattleCharacter_C*                   K2Node_DynamicCast_AsRSBattle_Character;           // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0169(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6184[0x6];                                     // 0x016A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CharacterParamater_C> K2Node_DynamicCast_AsBPI_Character_Paramater;      // 0x0170(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6185[0x3];                                     // 0x0181(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetHPPercent_Percent;                     // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6186[0x7];                                     // 0x0189(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue_1;         // 0x0190(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1; // 0x01A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6187[0x7];                                     // 0x01B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_6;              // 0x01B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_7;              // 0x01C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_GetActorAndHpRateEnemyHpRate_HpRate_1;    // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6188[0x4];                                     // 0x01DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetActorAndHpRateEnemyHpRate_ReturnValue_1; // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x01E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6189[0x6];                                     // 0x01EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattleCharacter_C*                   K2Node_DynamicCast_AsRSBattle_Character_1;         // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_618A[0x7];                                     // 0x01F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CharacterParamater_C> K2Node_DynamicCast_AsBPI_Character_Paramater_1;    // 0x0200(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_618B[0x7];                                     // 0x0211(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_2;          // 0x0218(0x0018)()
	float                                         CallFunc_GetHPPercent_Percent_1;                   // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0234(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x0235(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x0236(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_618C[0x1];                                     // 0x0237(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable_1;                            // 0x0238(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue_2;         // 0x0248(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetHitUniqueObjectNum_ReturnValue;        // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_618D[0x4];                                     // 0x025C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_8;              // 0x0260(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_618E[0x4];                                     // 0x0274(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_9;              // 0x0278(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_10;             // 0x0288(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetEnemyBadStatusNum_ReturnValue;         // 0x0298(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x029C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetKillUniqueObjectNum_ReturnValue;       // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_2;            // 0x02A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetKillCombinationVisionNum_ReturnValue;  // 0x02A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_3;            // 0x02AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetKillDriveNum_ReturnValue;              // 0x02B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_4;            // 0x02B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPlayerBadStatusNum_ReturnValue;        // 0x02B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_5;            // 0x02BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetItemNum_ReturnValue;                   // 0x02C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_6;            // 0x02C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetBattleTime_ReturnValue;                // 0x02C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetBrainCrashNum_ReturnValue;             // 0x02CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_7;            // 0x02D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPlayerDamageSum_ReturnValue;           // 0x02D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_8;            // 0x02D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetEnemyDamageSum_ReturnValue;            // 0x02DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_2;                            // 0x02E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_9;            // 0x02F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_618F[0x4];                                     // 0x02F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select_Default;                             // 0x02F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_11;             // 0x0308(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue_3;         // 0x0318(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_12;             // 0x0328(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_13;             // 0x0338(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_14;             // 0x0348(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_15;             // 0x0358(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetHitUniqueObjectNum_ReturnValue_1;      // 0x0368(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetEnemyBadStatusNum_ReturnValue_1;       // 0x036C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_10;           // 0x0370(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_11;           // 0x0374(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetKillUniqueObjectNum_ReturnValue_1;     // 0x0378(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetKillCombinationVisionNum_ReturnValue_1; // 0x037C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_12;           // 0x0380(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_13;           // 0x0384(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetKillDriveNum_ReturnValue_1;            // 0x0388(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPlayerBadStatusNum_ReturnValue_1;      // 0x038C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_14;           // 0x0390(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_15;           // 0x0394(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetItemNum_ReturnValue_1;                 // 0x0398(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetBattleTime_ReturnValue_1;              // 0x039C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_16;           // 0x03A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetBrainCrashNum_ReturnValue_1;           // 0x03A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPlayerDamageSum_ReturnValue_1;         // 0x03A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_17;           // 0x03AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_18;           // 0x03B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetEnemyDamageSum_ReturnValue_1;          // 0x03B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABattleSimulatorManager*                CallFunc_GetBattleSimulatorManager_BattleSimulatorManager; // 0x03B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_19;           // 0x03C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x03C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6190[0x3];                                     // 0x03C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_GetDebuggingManager_Manager;              // 0x03C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSCharacterBase*                       CallFunc_Array_Get_Item;                           // 0x03D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_9;                    // 0x03D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_10;                   // 0x03D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6191[0x6];                                     // 0x03DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattleEnemy_C*                       K2Node_DynamicCast_AsRSBattle_Enemy;               // 0x03E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x03E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6192[0x7];                                     // 0x03E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x03F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0400(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0404(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo) == 0x000008, "Wrong alignment on BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo");
static_assert(sizeof(BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo) == 0x000408, "Wrong size on BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo");
static_assert(offsetof(BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo, EnableSpawnEnemy) == 0x000000, "Member 'BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo::EnableSpawnEnemy' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo, LString) == 0x000008, "Member 'BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo::LString' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo, LIsValidRareEnemy) == 0x000018, "Member 'BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo::LIsValidRareEnemy' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo, LHUDMainGame) == 0x000020, "Member 'BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo::LHUDMainGame' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo, LState) == 0x000028, "Member 'BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo::LState' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo, LValue2) == 0x00002C, "Member 'BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo::LValue2' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo, LValue1) == 0x000030, "Member 'BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo::LValue1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo, LBattleSimulator) == 0x000038, "Member 'BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo::LBattleSimulator' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo, LEnemyList) == 0x000040, "Member 'BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo::LEnemyList' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo, CallFunc_Concat_StrStr_ReturnValue) == 0x000050, "Member 'BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo, Temp_string_Variable) == 0x000060, "Member 'BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo, CallFunc_IsMissionActive_ReturnValue) == 0x000070, "Member 'BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo::CallFunc_IsMissionActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo, Temp_int_Variable) == 0x000074, "Member 'BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo, Temp_int_Loop_Counter_Variable) == 0x000078, "Member 'BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo, CallFunc_Add_IntInt_ReturnValue) == 0x00007C, "Member 'BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo, Temp_int_Array_Index_Variable) == 0x000080, "Member 'BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo, CallFunc_GetHUDMainGame_HUDMainGame) == 0x000088, "Member 'BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo::CallFunc_GetHUDMainGame_HUDMainGame' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo, CallFunc_GetEnemyList_ReturnValue) == 0x000090, "Member 'BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo::CallFunc_GetEnemyList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo, CallFunc_IsValid_ReturnValue) == 0x0000A0, "Member 'BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0000A8, "Member 'BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0000B8, "Member 'BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo, CallFunc_Concat_StrStr_ReturnValue_3) == 0x0000C8, "Member 'BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo, CallFunc_Conv_StringToText_ReturnValue) == 0x0000D8, "Member 'BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo, CallFunc_Conv_StringToText_ReturnValue_1) == 0x0000F0, "Member 'BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo, CallFunc_Conv_FloatToString_ReturnValue) == 0x000108, "Member 'BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo::CallFunc_Conv_FloatToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo, CallFunc_GetActorAndHpRateEnemyHpRate_HpRate) == 0x000118, "Member 'BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo::CallFunc_GetActorAndHpRateEnemyHpRate_HpRate' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo, CallFunc_GetActorAndHpRateEnemyHpRate_ReturnValue) == 0x000120, "Member 'BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo::CallFunc_GetActorAndHpRateEnemyHpRate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000128, "Member 'BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo, CallFunc_IsValid_ReturnValue_1) == 0x000138, "Member 'BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo, CallFunc_Concat_StrStr_ReturnValue_4) == 0x000140, "Member 'BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo, CallFunc_Concat_StrStr_ReturnValue_5) == 0x000150, "Member 'BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo, K2Node_DynamicCast_AsRSBattle_Character) == 0x000160, "Member 'BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo::K2Node_DynamicCast_AsRSBattle_Character' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo, K2Node_DynamicCast_bSuccess) == 0x000168, "Member 'BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo, K2Node_SwitchEnum_CmpSuccess) == 0x000169, "Member 'BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo, K2Node_DynamicCast_AsBPI_Character_Paramater) == 0x000170, "Member 'BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo::K2Node_DynamicCast_AsBPI_Character_Paramater' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo, K2Node_DynamicCast_bSuccess_1) == 0x000180, "Member 'BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo, CallFunc_GetHPPercent_Percent) == 0x000184, "Member 'BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo::CallFunc_GetHPPercent_Percent' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo, CallFunc_IsValid_ReturnValue_2) == 0x000188, "Member 'BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo, CallFunc_Conv_FloatToString_ReturnValue_1) == 0x000190, "Member 'BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo::CallFunc_Conv_FloatToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1) == 0x0001A0, "Member 'BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo, K2Node_SwitchEnum_CmpSuccess_1) == 0x0001B0, "Member 'BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo, CallFunc_Concat_StrStr_ReturnValue_6) == 0x0001B8, "Member 'BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo::CallFunc_Concat_StrStr_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo, CallFunc_Concat_StrStr_ReturnValue_7) == 0x0001C8, "Member 'BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo::CallFunc_Concat_StrStr_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo, CallFunc_GetActorAndHpRateEnemyHpRate_HpRate_1) == 0x0001D8, "Member 'BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo::CallFunc_GetActorAndHpRateEnemyHpRate_HpRate_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo, CallFunc_GetActorAndHpRateEnemyHpRate_ReturnValue_1) == 0x0001E0, "Member 'BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo::CallFunc_GetActorAndHpRateEnemyHpRate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo, CallFunc_IsValid_ReturnValue_3) == 0x0001E8, "Member 'BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo, CallFunc_IsValid_ReturnValue_4) == 0x0001E9, "Member 'BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo, K2Node_DynamicCast_AsRSBattle_Character_1) == 0x0001F0, "Member 'BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo::K2Node_DynamicCast_AsRSBattle_Character_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo, K2Node_DynamicCast_bSuccess_2) == 0x0001F8, "Member 'BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo, K2Node_DynamicCast_AsBPI_Character_Paramater_1) == 0x000200, "Member 'BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo::K2Node_DynamicCast_AsBPI_Character_Paramater_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo, K2Node_DynamicCast_bSuccess_3) == 0x000210, "Member 'BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo, CallFunc_Conv_StringToText_ReturnValue_2) == 0x000218, "Member 'BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo::CallFunc_Conv_StringToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo, CallFunc_GetHPPercent_Percent_1) == 0x000230, "Member 'BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo::CallFunc_GetHPPercent_Percent_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo, CallFunc_IsValid_ReturnValue_5) == 0x000234, "Member 'BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo, CallFunc_IsValid_ReturnValue_6) == 0x000235, "Member 'BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo, CallFunc_IsValid_ReturnValue_7) == 0x000236, "Member 'BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo, Temp_string_Variable_1) == 0x000238, "Member 'BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo::Temp_string_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo, CallFunc_Conv_FloatToString_ReturnValue_2) == 0x000248, "Member 'BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo::CallFunc_Conv_FloatToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo, CallFunc_GetHitUniqueObjectNum_ReturnValue) == 0x000258, "Member 'BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo::CallFunc_GetHitUniqueObjectNum_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo, CallFunc_Concat_StrStr_ReturnValue_8) == 0x000260, "Member 'BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo::CallFunc_Concat_StrStr_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000270, "Member 'BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo, CallFunc_Concat_StrStr_ReturnValue_9) == 0x000278, "Member 'BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo::CallFunc_Concat_StrStr_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo, CallFunc_Concat_StrStr_ReturnValue_10) == 0x000288, "Member 'BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo::CallFunc_Concat_StrStr_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo, CallFunc_GetEnemyBadStatusNum_ReturnValue) == 0x000298, "Member 'BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo::CallFunc_GetEnemyBadStatusNum_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x00029C, "Member 'BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo, CallFunc_GetKillUniqueObjectNum_ReturnValue) == 0x0002A0, "Member 'BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo::CallFunc_GetKillUniqueObjectNum_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo, CallFunc_Conv_IntToFloat_ReturnValue_2) == 0x0002A4, "Member 'BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo::CallFunc_Conv_IntToFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo, CallFunc_GetKillCombinationVisionNum_ReturnValue) == 0x0002A8, "Member 'BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo::CallFunc_GetKillCombinationVisionNum_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo, CallFunc_Conv_IntToFloat_ReturnValue_3) == 0x0002AC, "Member 'BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo::CallFunc_Conv_IntToFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo, CallFunc_GetKillDriveNum_ReturnValue) == 0x0002B0, "Member 'BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo::CallFunc_GetKillDriveNum_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo, CallFunc_Conv_IntToFloat_ReturnValue_4) == 0x0002B4, "Member 'BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo::CallFunc_Conv_IntToFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo, CallFunc_GetPlayerBadStatusNum_ReturnValue) == 0x0002B8, "Member 'BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo::CallFunc_GetPlayerBadStatusNum_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo, CallFunc_Conv_IntToFloat_ReturnValue_5) == 0x0002BC, "Member 'BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo::CallFunc_Conv_IntToFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo, CallFunc_GetItemNum_ReturnValue) == 0x0002C0, "Member 'BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo::CallFunc_GetItemNum_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo, CallFunc_Conv_IntToFloat_ReturnValue_6) == 0x0002C4, "Member 'BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo::CallFunc_Conv_IntToFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo, CallFunc_GetBattleTime_ReturnValue) == 0x0002C8, "Member 'BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo::CallFunc_GetBattleTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo, CallFunc_GetBrainCrashNum_ReturnValue) == 0x0002CC, "Member 'BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo::CallFunc_GetBrainCrashNum_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo, CallFunc_Conv_IntToFloat_ReturnValue_7) == 0x0002D0, "Member 'BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo::CallFunc_Conv_IntToFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo, CallFunc_GetPlayerDamageSum_ReturnValue) == 0x0002D4, "Member 'BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo::CallFunc_GetPlayerDamageSum_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo, CallFunc_Conv_IntToFloat_ReturnValue_8) == 0x0002D8, "Member 'BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo::CallFunc_Conv_IntToFloat_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo, CallFunc_GetEnemyDamageSum_ReturnValue) == 0x0002DC, "Member 'BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo::CallFunc_GetEnemyDamageSum_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo, Temp_string_Variable_2) == 0x0002E0, "Member 'BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo::Temp_string_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo, CallFunc_Conv_IntToFloat_ReturnValue_9) == 0x0002F0, "Member 'BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo::CallFunc_Conv_IntToFloat_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo, K2Node_Select_Default) == 0x0002F8, "Member 'BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo, CallFunc_Concat_StrStr_ReturnValue_11) == 0x000308, "Member 'BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo::CallFunc_Concat_StrStr_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo, CallFunc_Conv_FloatToString_ReturnValue_3) == 0x000318, "Member 'BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo::CallFunc_Conv_FloatToString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo, CallFunc_Concat_StrStr_ReturnValue_12) == 0x000328, "Member 'BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo::CallFunc_Concat_StrStr_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo, CallFunc_Concat_StrStr_ReturnValue_13) == 0x000338, "Member 'BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo::CallFunc_Concat_StrStr_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo, CallFunc_Concat_StrStr_ReturnValue_14) == 0x000348, "Member 'BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo::CallFunc_Concat_StrStr_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo, CallFunc_Concat_StrStr_ReturnValue_15) == 0x000358, "Member 'BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo::CallFunc_Concat_StrStr_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo, CallFunc_GetHitUniqueObjectNum_ReturnValue_1) == 0x000368, "Member 'BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo::CallFunc_GetHitUniqueObjectNum_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo, CallFunc_GetEnemyBadStatusNum_ReturnValue_1) == 0x00036C, "Member 'BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo::CallFunc_GetEnemyBadStatusNum_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo, CallFunc_Conv_IntToFloat_ReturnValue_10) == 0x000370, "Member 'BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo::CallFunc_Conv_IntToFloat_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo, CallFunc_Conv_IntToFloat_ReturnValue_11) == 0x000374, "Member 'BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo::CallFunc_Conv_IntToFloat_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo, CallFunc_GetKillUniqueObjectNum_ReturnValue_1) == 0x000378, "Member 'BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo::CallFunc_GetKillUniqueObjectNum_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo, CallFunc_GetKillCombinationVisionNum_ReturnValue_1) == 0x00037C, "Member 'BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo::CallFunc_GetKillCombinationVisionNum_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo, CallFunc_Conv_IntToFloat_ReturnValue_12) == 0x000380, "Member 'BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo::CallFunc_Conv_IntToFloat_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo, CallFunc_Conv_IntToFloat_ReturnValue_13) == 0x000384, "Member 'BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo::CallFunc_Conv_IntToFloat_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo, CallFunc_GetKillDriveNum_ReturnValue_1) == 0x000388, "Member 'BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo::CallFunc_GetKillDriveNum_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo, CallFunc_GetPlayerBadStatusNum_ReturnValue_1) == 0x00038C, "Member 'BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo::CallFunc_GetPlayerBadStatusNum_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo, CallFunc_Conv_IntToFloat_ReturnValue_14) == 0x000390, "Member 'BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo::CallFunc_Conv_IntToFloat_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo, CallFunc_Conv_IntToFloat_ReturnValue_15) == 0x000394, "Member 'BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo::CallFunc_Conv_IntToFloat_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo, CallFunc_GetItemNum_ReturnValue_1) == 0x000398, "Member 'BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo::CallFunc_GetItemNum_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo, CallFunc_GetBattleTime_ReturnValue_1) == 0x00039C, "Member 'BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo::CallFunc_GetBattleTime_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo, CallFunc_Conv_IntToFloat_ReturnValue_16) == 0x0003A0, "Member 'BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo::CallFunc_Conv_IntToFloat_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo, CallFunc_GetBrainCrashNum_ReturnValue_1) == 0x0003A4, "Member 'BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo::CallFunc_GetBrainCrashNum_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo, CallFunc_GetPlayerDamageSum_ReturnValue_1) == 0x0003A8, "Member 'BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo::CallFunc_GetPlayerDamageSum_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo, CallFunc_Conv_IntToFloat_ReturnValue_17) == 0x0003AC, "Member 'BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo::CallFunc_Conv_IntToFloat_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo, CallFunc_Conv_IntToFloat_ReturnValue_18) == 0x0003B0, "Member 'BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo::CallFunc_Conv_IntToFloat_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo, CallFunc_GetEnemyDamageSum_ReturnValue_1) == 0x0003B4, "Member 'BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo::CallFunc_GetEnemyDamageSum_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo, CallFunc_GetBattleSimulatorManager_BattleSimulatorManager) == 0x0003B8, "Member 'BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo::CallFunc_GetBattleSimulatorManager_BattleSimulatorManager' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo, CallFunc_Conv_IntToFloat_ReturnValue_19) == 0x0003C0, "Member 'BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo::CallFunc_Conv_IntToFloat_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo, CallFunc_IsValid_ReturnValue_8) == 0x0003C4, "Member 'BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo, CallFunc_GetDebuggingManager_Manager) == 0x0003C8, "Member 'BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo::CallFunc_GetDebuggingManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo, CallFunc_Array_Get_Item) == 0x0003D0, "Member 'BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo, CallFunc_IsValid_ReturnValue_9) == 0x0003D8, "Member 'BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo::CallFunc_IsValid_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo, CallFunc_IsValid_ReturnValue_10) == 0x0003D9, "Member 'BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo::CallFunc_IsValid_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo, K2Node_DynamicCast_AsRSBattle_Enemy) == 0x0003E0, "Member 'BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo::K2Node_DynamicCast_AsRSBattle_Enemy' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo, K2Node_DynamicCast_bSuccess_4) == 0x0003E8, "Member 'BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo, CallFunc_GetDisplayName_ReturnValue) == 0x0003F0, "Member 'BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo, CallFunc_Array_Length_ReturnValue) == 0x000400, "Member 'BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo, CallFunc_Less_IntInt_ReturnValue) == 0x000404, "Member 'BP_EnemyManager_C_DebugDispRareSpawnCondisionInfo::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.Start Crash Vision Hit Effect
// 0x0058 (0x0058 - 0x0000)
struct BP_EnemyManager_C_Start_Crash_Vision_Hit_Effect final
{
public:
	TArray<class AActor*>                         ActorList;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	class AActor*                                 LActor;                                            // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         LActorList;                                        // 0x0018(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	TScriptInterface<class IBPI_EnemyInterface_C> K2Node_DynamicCast_AsBPI_Enemy_Interface;          // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_StartEnemyCrashVisionHitEffect_NewParam;  // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6193[0x1];                                     // 0x003B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyManager_C_Start_Crash_Vision_Hit_Effect) == 0x000008, "Wrong alignment on BP_EnemyManager_C_Start_Crash_Vision_Hit_Effect");
static_assert(sizeof(BP_EnemyManager_C_Start_Crash_Vision_Hit_Effect) == 0x000058, "Wrong size on BP_EnemyManager_C_Start_Crash_Vision_Hit_Effect");
static_assert(offsetof(BP_EnemyManager_C_Start_Crash_Vision_Hit_Effect, ActorList) == 0x000000, "Member 'BP_EnemyManager_C_Start_Crash_Vision_Hit_Effect::ActorList' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_Start_Crash_Vision_Hit_Effect, LActor) == 0x000010, "Member 'BP_EnemyManager_C_Start_Crash_Vision_Hit_Effect::LActor' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_Start_Crash_Vision_Hit_Effect, LActorList) == 0x000018, "Member 'BP_EnemyManager_C_Start_Crash_Vision_Hit_Effect::LActorList' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_Start_Crash_Vision_Hit_Effect, K2Node_DynamicCast_AsBPI_Enemy_Interface) == 0x000028, "Member 'BP_EnemyManager_C_Start_Crash_Vision_Hit_Effect::K2Node_DynamicCast_AsBPI_Enemy_Interface' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_Start_Crash_Vision_Hit_Effect, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_EnemyManager_C_Start_Crash_Vision_Hit_Effect::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_Start_Crash_Vision_Hit_Effect, CallFunc_IsValid_ReturnValue) == 0x000039, "Member 'BP_EnemyManager_C_Start_Crash_Vision_Hit_Effect::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_Start_Crash_Vision_Hit_Effect, CallFunc_StartEnemyCrashVisionHitEffect_NewParam) == 0x00003A, "Member 'BP_EnemyManager_C_Start_Crash_Vision_Hit_Effect::CallFunc_StartEnemyCrashVisionHitEffect_NewParam' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_Start_Crash_Vision_Hit_Effect, Temp_int_Loop_Counter_Variable) == 0x00003C, "Member 'BP_EnemyManager_C_Start_Crash_Vision_Hit_Effect::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_Start_Crash_Vision_Hit_Effect, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'BP_EnemyManager_C_Start_Crash_Vision_Hit_Effect::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_Start_Crash_Vision_Hit_Effect, CallFunc_Add_IntInt_ReturnValue) == 0x000044, "Member 'BP_EnemyManager_C_Start_Crash_Vision_Hit_Effect::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_Start_Crash_Vision_Hit_Effect, Temp_int_Array_Index_Variable) == 0x000048, "Member 'BP_EnemyManager_C_Start_Crash_Vision_Hit_Effect::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_Start_Crash_Vision_Hit_Effect, Temp_int_Loop_Num_Variable) == 0x00004C, "Member 'BP_EnemyManager_C_Start_Crash_Vision_Hit_Effect::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_Start_Crash_Vision_Hit_Effect, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'BP_EnemyManager_C_Start_Crash_Vision_Hit_Effect::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.Start Crash Vision Hit UniqueEffect
// 0x0058 (0x0058 - 0x0000)
struct BP_EnemyManager_C_Start_Crash_Vision_Hit_UniqueEffect final
{
public:
	TArray<class AActor*>                         ActorList;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	class AActor*                                 LActor;                                            // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         LActorList;                                        // 0x0018(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	TScriptInterface<class IBPI_EnemyInterface_C> K2Node_DynamicCast_AsBPI_Enemy_Interface;          // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_StartEnemyCrashVisionHitUniqueEffect_NewParam; // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6194[0x1];                                     // 0x003B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyManager_C_Start_Crash_Vision_Hit_UniqueEffect) == 0x000008, "Wrong alignment on BP_EnemyManager_C_Start_Crash_Vision_Hit_UniqueEffect");
static_assert(sizeof(BP_EnemyManager_C_Start_Crash_Vision_Hit_UniqueEffect) == 0x000058, "Wrong size on BP_EnemyManager_C_Start_Crash_Vision_Hit_UniqueEffect");
static_assert(offsetof(BP_EnemyManager_C_Start_Crash_Vision_Hit_UniqueEffect, ActorList) == 0x000000, "Member 'BP_EnemyManager_C_Start_Crash_Vision_Hit_UniqueEffect::ActorList' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_Start_Crash_Vision_Hit_UniqueEffect, LActor) == 0x000010, "Member 'BP_EnemyManager_C_Start_Crash_Vision_Hit_UniqueEffect::LActor' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_Start_Crash_Vision_Hit_UniqueEffect, LActorList) == 0x000018, "Member 'BP_EnemyManager_C_Start_Crash_Vision_Hit_UniqueEffect::LActorList' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_Start_Crash_Vision_Hit_UniqueEffect, K2Node_DynamicCast_AsBPI_Enemy_Interface) == 0x000028, "Member 'BP_EnemyManager_C_Start_Crash_Vision_Hit_UniqueEffect::K2Node_DynamicCast_AsBPI_Enemy_Interface' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_Start_Crash_Vision_Hit_UniqueEffect, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_EnemyManager_C_Start_Crash_Vision_Hit_UniqueEffect::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_Start_Crash_Vision_Hit_UniqueEffect, CallFunc_IsValid_ReturnValue) == 0x000039, "Member 'BP_EnemyManager_C_Start_Crash_Vision_Hit_UniqueEffect::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_Start_Crash_Vision_Hit_UniqueEffect, CallFunc_StartEnemyCrashVisionHitUniqueEffect_NewParam) == 0x00003A, "Member 'BP_EnemyManager_C_Start_Crash_Vision_Hit_UniqueEffect::CallFunc_StartEnemyCrashVisionHitUniqueEffect_NewParam' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_Start_Crash_Vision_Hit_UniqueEffect, Temp_int_Loop_Counter_Variable) == 0x00003C, "Member 'BP_EnemyManager_C_Start_Crash_Vision_Hit_UniqueEffect::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_Start_Crash_Vision_Hit_UniqueEffect, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'BP_EnemyManager_C_Start_Crash_Vision_Hit_UniqueEffect::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_Start_Crash_Vision_Hit_UniqueEffect, CallFunc_Add_IntInt_ReturnValue) == 0x000044, "Member 'BP_EnemyManager_C_Start_Crash_Vision_Hit_UniqueEffect::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_Start_Crash_Vision_Hit_UniqueEffect, Temp_int_Array_Index_Variable) == 0x000048, "Member 'BP_EnemyManager_C_Start_Crash_Vision_Hit_UniqueEffect::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_Start_Crash_Vision_Hit_UniqueEffect, Temp_int_Loop_Num_Variable) == 0x00004C, "Member 'BP_EnemyManager_C_Start_Crash_Vision_Hit_UniqueEffect::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_Start_Crash_Vision_Hit_UniqueEffect, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'BP_EnemyManager_C_Start_Crash_Vision_Hit_UniqueEffect::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.StartCrashVisionDead
// 0x0058 (0x0058 - 0x0000)
struct BP_EnemyManager_C_StartCrashVisionDead final
{
public:
	TArray<class AActor*>                         ActorList;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	class AActor*                                 LActor;                                            // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         LActorList;                                        // 0x0018(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	TScriptInterface<class IBattleEnemyInterface> K2Node_DynamicCast_AsBattle_Enemy_Interface;       // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OnCrashVisionDead_ReturnValue;            // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6195[0x1];                                     // 0x003B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyManager_C_StartCrashVisionDead) == 0x000008, "Wrong alignment on BP_EnemyManager_C_StartCrashVisionDead");
static_assert(sizeof(BP_EnemyManager_C_StartCrashVisionDead) == 0x000058, "Wrong size on BP_EnemyManager_C_StartCrashVisionDead");
static_assert(offsetof(BP_EnemyManager_C_StartCrashVisionDead, ActorList) == 0x000000, "Member 'BP_EnemyManager_C_StartCrashVisionDead::ActorList' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_StartCrashVisionDead, LActor) == 0x000010, "Member 'BP_EnemyManager_C_StartCrashVisionDead::LActor' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_StartCrashVisionDead, LActorList) == 0x000018, "Member 'BP_EnemyManager_C_StartCrashVisionDead::LActorList' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_StartCrashVisionDead, K2Node_DynamicCast_AsBattle_Enemy_Interface) == 0x000028, "Member 'BP_EnemyManager_C_StartCrashVisionDead::K2Node_DynamicCast_AsBattle_Enemy_Interface' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_StartCrashVisionDead, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_EnemyManager_C_StartCrashVisionDead::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_StartCrashVisionDead, CallFunc_IsValid_ReturnValue) == 0x000039, "Member 'BP_EnemyManager_C_StartCrashVisionDead::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_StartCrashVisionDead, CallFunc_OnCrashVisionDead_ReturnValue) == 0x00003A, "Member 'BP_EnemyManager_C_StartCrashVisionDead::CallFunc_OnCrashVisionDead_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_StartCrashVisionDead, Temp_int_Loop_Counter_Variable) == 0x00003C, "Member 'BP_EnemyManager_C_StartCrashVisionDead::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_StartCrashVisionDead, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'BP_EnemyManager_C_StartCrashVisionDead::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_StartCrashVisionDead, CallFunc_Add_IntInt_ReturnValue) == 0x000044, "Member 'BP_EnemyManager_C_StartCrashVisionDead::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_StartCrashVisionDead, Temp_int_Array_Index_Variable) == 0x000048, "Member 'BP_EnemyManager_C_StartCrashVisionDead::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_StartCrashVisionDead, Temp_int_Loop_Num_Variable) == 0x00004C, "Member 'BP_EnemyManager_C_StartCrashVisionDead::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_StartCrashVisionDead, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'BP_EnemyManager_C_StartCrashVisionDead::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.DebugCallEnemyRarePopLocationSpawn
// 0x03B0 (0x03B0 - 0x0000)
struct BP_EnemyManager_C_DebugCallEnemyRarePopLocationSpawn final
{
public:
	class ARSBattleEnemy_C*                       LSpawnEnemyActor;                                  // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LLocationIndex;                                    // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6196[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattleEnemy_C*                       LRareEnemyActor;                                   // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                LDebugManager;                                     // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCharactersParameterBasic              CallFunc_GetParameterBasic_ReturnValue;            // 0x0020(0x0068)()
	bool                                          CallFunc_CopyParamToAvatar_Dummy;                  // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6197[0x3];                                     // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6198[0x6];                                     // 0x009A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCharactersParameterTable              CallFunc_GetParameterInitTable_ReturnValue;        // 0x00A0(0x01F8)()
	struct FCharactersParameterBasic              CallFunc_GetParameterBasic_ReturnValue_1;          // 0x0298(0x0068)()
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0300(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0308(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x030C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0310(0x0030)(IsPlainOldData, NoDestructor)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x0340(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6199[0x4];                                     // 0x0344(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0348(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattleEnemy_C*                       CallFunc_FinishSpawningActor_ReturnValue;          // 0x0350(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0358(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_619A[0x7];                                     // 0x0359(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattleEnemy_C*                       K2Node_DynamicCast_AsRSBattle_Enemy;               // 0x0360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0368(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0369(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x036A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_619B[0x5];                                     // 0x036B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_GetDebuggingManager_Manager;              // 0x0370(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0378(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_619C[0x7];                                     // 0x0379(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ARSCharacterBase*>               CallFunc_GetEnemyListRef_ReturnValue;              // 0x0380(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class ARSCharacterBase*                       CallFunc_Array_Get_Item;                           // 0x0390(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0398(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_619D[0x4];                                     // 0x039C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattleEnemy_C*                       K2Node_DynamicCast_AsRSBattle_Enemy_1;             // 0x03A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x03A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x03A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x03AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyManager_C_DebugCallEnemyRarePopLocationSpawn) == 0x000010, "Wrong alignment on BP_EnemyManager_C_DebugCallEnemyRarePopLocationSpawn");
static_assert(sizeof(BP_EnemyManager_C_DebugCallEnemyRarePopLocationSpawn) == 0x0003B0, "Wrong size on BP_EnemyManager_C_DebugCallEnemyRarePopLocationSpawn");
static_assert(offsetof(BP_EnemyManager_C_DebugCallEnemyRarePopLocationSpawn, LSpawnEnemyActor) == 0x000000, "Member 'BP_EnemyManager_C_DebugCallEnemyRarePopLocationSpawn::LSpawnEnemyActor' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugCallEnemyRarePopLocationSpawn, LLocationIndex) == 0x000008, "Member 'BP_EnemyManager_C_DebugCallEnemyRarePopLocationSpawn::LLocationIndex' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugCallEnemyRarePopLocationSpawn, LRareEnemyActor) == 0x000010, "Member 'BP_EnemyManager_C_DebugCallEnemyRarePopLocationSpawn::LRareEnemyActor' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugCallEnemyRarePopLocationSpawn, LDebugManager) == 0x000018, "Member 'BP_EnemyManager_C_DebugCallEnemyRarePopLocationSpawn::LDebugManager' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugCallEnemyRarePopLocationSpawn, CallFunc_GetParameterBasic_ReturnValue) == 0x000020, "Member 'BP_EnemyManager_C_DebugCallEnemyRarePopLocationSpawn::CallFunc_GetParameterBasic_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugCallEnemyRarePopLocationSpawn, CallFunc_CopyParamToAvatar_Dummy) == 0x000088, "Member 'BP_EnemyManager_C_DebugCallEnemyRarePopLocationSpawn::CallFunc_CopyParamToAvatar_Dummy' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugCallEnemyRarePopLocationSpawn, Temp_int_Loop_Counter_Variable) == 0x00008C, "Member 'BP_EnemyManager_C_DebugCallEnemyRarePopLocationSpawn::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugCallEnemyRarePopLocationSpawn, CallFunc_Add_IntInt_ReturnValue) == 0x000090, "Member 'BP_EnemyManager_C_DebugCallEnemyRarePopLocationSpawn::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugCallEnemyRarePopLocationSpawn, Temp_int_Array_Index_Variable) == 0x000094, "Member 'BP_EnemyManager_C_DebugCallEnemyRarePopLocationSpawn::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugCallEnemyRarePopLocationSpawn, Temp_bool_True_if_break_was_hit_Variable) == 0x000098, "Member 'BP_EnemyManager_C_DebugCallEnemyRarePopLocationSpawn::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugCallEnemyRarePopLocationSpawn, CallFunc_Not_PreBool_ReturnValue) == 0x000099, "Member 'BP_EnemyManager_C_DebugCallEnemyRarePopLocationSpawn::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugCallEnemyRarePopLocationSpawn, CallFunc_GetParameterInitTable_ReturnValue) == 0x0000A0, "Member 'BP_EnemyManager_C_DebugCallEnemyRarePopLocationSpawn::CallFunc_GetParameterInitTable_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugCallEnemyRarePopLocationSpawn, CallFunc_GetParameterBasic_ReturnValue_1) == 0x000298, "Member 'BP_EnemyManager_C_DebugCallEnemyRarePopLocationSpawn::CallFunc_GetParameterBasic_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugCallEnemyRarePopLocationSpawn, CallFunc_GetObjectClass_ReturnValue) == 0x000300, "Member 'BP_EnemyManager_C_DebugCallEnemyRarePopLocationSpawn::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugCallEnemyRarePopLocationSpawn, CallFunc_Array_Length_ReturnValue) == 0x000308, "Member 'BP_EnemyManager_C_DebugCallEnemyRarePopLocationSpawn::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugCallEnemyRarePopLocationSpawn, CallFunc_Subtract_IntInt_ReturnValue) == 0x00030C, "Member 'BP_EnemyManager_C_DebugCallEnemyRarePopLocationSpawn::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugCallEnemyRarePopLocationSpawn, CallFunc_MakeTransform_ReturnValue) == 0x000310, "Member 'BP_EnemyManager_C_DebugCallEnemyRarePopLocationSpawn::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugCallEnemyRarePopLocationSpawn, CallFunc_RandomIntegerInRange_ReturnValue) == 0x000340, "Member 'BP_EnemyManager_C_DebugCallEnemyRarePopLocationSpawn::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugCallEnemyRarePopLocationSpawn, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000348, "Member 'BP_EnemyManager_C_DebugCallEnemyRarePopLocationSpawn::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugCallEnemyRarePopLocationSpawn, CallFunc_FinishSpawningActor_ReturnValue) == 0x000350, "Member 'BP_EnemyManager_C_DebugCallEnemyRarePopLocationSpawn::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugCallEnemyRarePopLocationSpawn, CallFunc_Greater_IntInt_ReturnValue) == 0x000358, "Member 'BP_EnemyManager_C_DebugCallEnemyRarePopLocationSpawn::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugCallEnemyRarePopLocationSpawn, K2Node_DynamicCast_AsRSBattle_Enemy) == 0x000360, "Member 'BP_EnemyManager_C_DebugCallEnemyRarePopLocationSpawn::K2Node_DynamicCast_AsRSBattle_Enemy' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugCallEnemyRarePopLocationSpawn, K2Node_DynamicCast_bSuccess) == 0x000368, "Member 'BP_EnemyManager_C_DebugCallEnemyRarePopLocationSpawn::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugCallEnemyRarePopLocationSpawn, CallFunc_IsValid_ReturnValue) == 0x000369, "Member 'BP_EnemyManager_C_DebugCallEnemyRarePopLocationSpawn::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugCallEnemyRarePopLocationSpawn, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00036A, "Member 'BP_EnemyManager_C_DebugCallEnemyRarePopLocationSpawn::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugCallEnemyRarePopLocationSpawn, CallFunc_GetDebuggingManager_Manager) == 0x000370, "Member 'BP_EnemyManager_C_DebugCallEnemyRarePopLocationSpawn::CallFunc_GetDebuggingManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugCallEnemyRarePopLocationSpawn, CallFunc_IsValid_ReturnValue_1) == 0x000378, "Member 'BP_EnemyManager_C_DebugCallEnemyRarePopLocationSpawn::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugCallEnemyRarePopLocationSpawn, CallFunc_GetEnemyListRef_ReturnValue) == 0x000380, "Member 'BP_EnemyManager_C_DebugCallEnemyRarePopLocationSpawn::CallFunc_GetEnemyListRef_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugCallEnemyRarePopLocationSpawn, CallFunc_Array_Get_Item) == 0x000390, "Member 'BP_EnemyManager_C_DebugCallEnemyRarePopLocationSpawn::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugCallEnemyRarePopLocationSpawn, CallFunc_Array_Length_ReturnValue_1) == 0x000398, "Member 'BP_EnemyManager_C_DebugCallEnemyRarePopLocationSpawn::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugCallEnemyRarePopLocationSpawn, K2Node_DynamicCast_AsRSBattle_Enemy_1) == 0x0003A0, "Member 'BP_EnemyManager_C_DebugCallEnemyRarePopLocationSpawn::K2Node_DynamicCast_AsRSBattle_Enemy_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugCallEnemyRarePopLocationSpawn, K2Node_DynamicCast_bSuccess_1) == 0x0003A8, "Member 'BP_EnemyManager_C_DebugCallEnemyRarePopLocationSpawn::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugCallEnemyRarePopLocationSpawn, CallFunc_Less_IntInt_ReturnValue) == 0x0003A9, "Member 'BP_EnemyManager_C_DebugCallEnemyRarePopLocationSpawn::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugCallEnemyRarePopLocationSpawn, CallFunc_BooleanAND_ReturnValue) == 0x0003AA, "Member 'BP_EnemyManager_C_DebugCallEnemyRarePopLocationSpawn::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.SimulatorStartOpen
// 0x0048 (0x0048 - 0x0000)
struct BP_EnemyManager_C_SimulatorStartOpen final
{
public:
	class ARSCharacterBase*                       LEnemy;                                            // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_619E[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ARSCharacterBase*>               CallFunc_GetEnemyListRef_ReturnValue;              // 0x0010(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class ARSCharacterBase*                       CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_619F[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattleCharacter_C*                   K2Node_DynamicCast_AsRSBattle_Character;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61A0[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61A1[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EnemyManager_C_SimulatorStartOpen) == 0x000008, "Wrong alignment on BP_EnemyManager_C_SimulatorStartOpen");
static_assert(sizeof(BP_EnemyManager_C_SimulatorStartOpen) == 0x000048, "Wrong size on BP_EnemyManager_C_SimulatorStartOpen");
static_assert(offsetof(BP_EnemyManager_C_SimulatorStartOpen, LEnemy) == 0x000000, "Member 'BP_EnemyManager_C_SimulatorStartOpen::LEnemy' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SimulatorStartOpen, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_EnemyManager_C_SimulatorStartOpen::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SimulatorStartOpen, CallFunc_GetEnemyListRef_ReturnValue) == 0x000010, "Member 'BP_EnemyManager_C_SimulatorStartOpen::CallFunc_GetEnemyListRef_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SimulatorStartOpen, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_EnemyManager_C_SimulatorStartOpen::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SimulatorStartOpen, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_EnemyManager_C_SimulatorStartOpen::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SimulatorStartOpen, K2Node_DynamicCast_AsRSBattle_Character) == 0x000030, "Member 'BP_EnemyManager_C_SimulatorStartOpen::K2Node_DynamicCast_AsRSBattle_Character' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SimulatorStartOpen, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_EnemyManager_C_SimulatorStartOpen::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SimulatorStartOpen, Temp_int_Loop_Counter_Variable) == 0x00003C, "Member 'BP_EnemyManager_C_SimulatorStartOpen::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SimulatorStartOpen, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'BP_EnemyManager_C_SimulatorStartOpen::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SimulatorStartOpen, CallFunc_Add_IntInt_ReturnValue) == 0x000044, "Member 'BP_EnemyManager_C_SimulatorStartOpen::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.SimulatorStartClose
// 0x0050 (0x0050 - 0x0000)
struct BP_EnemyManager_C_SimulatorStartClose final
{
public:
	class ARSCharacterBase*                       LEnemy;                                            // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61A2[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ARSCharacterBase*>               CallFunc_GetEnemyListRef_ReturnValue;              // 0x0018(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61A3[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61A4[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattleCharacter_C*                   K2Node_DynamicCast_AsRSBattle_Character;           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyManager_C_SimulatorStartClose) == 0x000008, "Wrong alignment on BP_EnemyManager_C_SimulatorStartClose");
static_assert(sizeof(BP_EnemyManager_C_SimulatorStartClose) == 0x000050, "Wrong size on BP_EnemyManager_C_SimulatorStartClose");
static_assert(offsetof(BP_EnemyManager_C_SimulatorStartClose, LEnemy) == 0x000000, "Member 'BP_EnemyManager_C_SimulatorStartClose::LEnemy' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SimulatorStartClose, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_EnemyManager_C_SimulatorStartClose::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SimulatorStartClose, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BP_EnemyManager_C_SimulatorStartClose::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SimulatorStartClose, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_EnemyManager_C_SimulatorStartClose::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SimulatorStartClose, CallFunc_GetEnemyListRef_ReturnValue) == 0x000018, "Member 'BP_EnemyManager_C_SimulatorStartClose::CallFunc_GetEnemyListRef_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SimulatorStartClose, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_EnemyManager_C_SimulatorStartClose::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SimulatorStartClose, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_EnemyManager_C_SimulatorStartClose::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SimulatorStartClose, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'BP_EnemyManager_C_SimulatorStartClose::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SimulatorStartClose, K2Node_DynamicCast_AsRSBattle_Character) == 0x000040, "Member 'BP_EnemyManager_C_SimulatorStartClose::K2Node_DynamicCast_AsRSBattle_Character' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SimulatorStartClose, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'BP_EnemyManager_C_SimulatorStartClose::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.CallHiddenBossCutScene
// 0x0058 (0x0058 - 0x0000)
struct BP_EnemyManager_C_CallHiddenBossCutScene final
{
public:
	bool                                          Hidden;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61A5[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ARSCharacterBase*>               LEnemyList;                                        // 0x0008(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61A6[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61A7[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattleCharacter_C*                   K2Node_DynamicCast_AsRSBattle_Character;           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61A8[0x6];                                     // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ARSCharacterBase*>               CallFunc_GetEnemyListRef_ReturnValue;              // 0x0048(0x0010)(ReferenceParm, HasGetValueTypeHash)
};
static_assert(alignof(BP_EnemyManager_C_CallHiddenBossCutScene) == 0x000008, "Wrong alignment on BP_EnemyManager_C_CallHiddenBossCutScene");
static_assert(sizeof(BP_EnemyManager_C_CallHiddenBossCutScene) == 0x000058, "Wrong size on BP_EnemyManager_C_CallHiddenBossCutScene");
static_assert(offsetof(BP_EnemyManager_C_CallHiddenBossCutScene, Hidden) == 0x000000, "Member 'BP_EnemyManager_C_CallHiddenBossCutScene::Hidden' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_CallHiddenBossCutScene, LEnemyList) == 0x000008, "Member 'BP_EnemyManager_C_CallHiddenBossCutScene::LEnemyList' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_CallHiddenBossCutScene, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BP_EnemyManager_C_CallHiddenBossCutScene::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_CallHiddenBossCutScene, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'BP_EnemyManager_C_CallHiddenBossCutScene::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_CallHiddenBossCutScene, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BP_EnemyManager_C_CallHiddenBossCutScene::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_CallHiddenBossCutScene, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_EnemyManager_C_CallHiddenBossCutScene::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_CallHiddenBossCutScene, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BP_EnemyManager_C_CallHiddenBossCutScene::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_CallHiddenBossCutScene, K2Node_DynamicCast_AsRSBattle_Character) == 0x000038, "Member 'BP_EnemyManager_C_CallHiddenBossCutScene::K2Node_DynamicCast_AsRSBattle_Character' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_CallHiddenBossCutScene, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_EnemyManager_C_CallHiddenBossCutScene::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_CallHiddenBossCutScene, CallFunc_Less_IntInt_ReturnValue) == 0x000041, "Member 'BP_EnemyManager_C_CallHiddenBossCutScene::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_CallHiddenBossCutScene, CallFunc_GetEnemyListRef_ReturnValue) == 0x000048, "Member 'BP_EnemyManager_C_CallHiddenBossCutScene::CallFunc_GetEnemyListRef_ReturnValue' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.SimulatorCancelMission
// 0x0070 (0x0070 - 0x0000)
struct BP_EnemyManager_C_SimulatorCancelMission final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61A9[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       LEnemy;                                            // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ARSCharacterBase*>               LEnemyList;                                        // 0x0010(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61AA[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattleCharacter_C*                   K2Node_DynamicCast_AsRSBattle_Character;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61AB[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61AC[0x3];                                     // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ARSCharacterBase*>               CallFunc_GetEnemyListRef_ReturnValue;              // 0x0058(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_SimulatorCancelMission_ReturnValue;       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyManager_C_SimulatorCancelMission) == 0x000008, "Wrong alignment on BP_EnemyManager_C_SimulatorCancelMission");
static_assert(sizeof(BP_EnemyManager_C_SimulatorCancelMission) == 0x000070, "Wrong size on BP_EnemyManager_C_SimulatorCancelMission");
static_assert(offsetof(BP_EnemyManager_C_SimulatorCancelMission, ReturnValue) == 0x000000, "Member 'BP_EnemyManager_C_SimulatorCancelMission::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SimulatorCancelMission, LEnemy) == 0x000008, "Member 'BP_EnemyManager_C_SimulatorCancelMission::LEnemy' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SimulatorCancelMission, LEnemyList) == 0x000010, "Member 'BP_EnemyManager_C_SimulatorCancelMission::LEnemyList' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SimulatorCancelMission, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'BP_EnemyManager_C_SimulatorCancelMission::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SimulatorCancelMission, CallFunc_Subtract_IntInt_ReturnValue) == 0x000024, "Member 'BP_EnemyManager_C_SimulatorCancelMission::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SimulatorCancelMission, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000028, "Member 'BP_EnemyManager_C_SimulatorCancelMission::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SimulatorCancelMission, Temp_int_Array_Index_Variable) == 0x00002C, "Member 'BP_EnemyManager_C_SimulatorCancelMission::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SimulatorCancelMission, K2Node_DynamicCast_AsRSBattle_Character) == 0x000030, "Member 'BP_EnemyManager_C_SimulatorCancelMission::K2Node_DynamicCast_AsRSBattle_Character' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SimulatorCancelMission, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_EnemyManager_C_SimulatorCancelMission::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SimulatorCancelMission, CallFunc_Array_Get_Item) == 0x000040, "Member 'BP_EnemyManager_C_SimulatorCancelMission::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SimulatorCancelMission, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'BP_EnemyManager_C_SimulatorCancelMission::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SimulatorCancelMission, CallFunc_IsValid_ReturnValue) == 0x00004C, "Member 'BP_EnemyManager_C_SimulatorCancelMission::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SimulatorCancelMission, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000050, "Member 'BP_EnemyManager_C_SimulatorCancelMission::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SimulatorCancelMission, CallFunc_Max_ReturnValue) == 0x000054, "Member 'BP_EnemyManager_C_SimulatorCancelMission::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SimulatorCancelMission, CallFunc_GetEnemyListRef_ReturnValue) == 0x000058, "Member 'BP_EnemyManager_C_SimulatorCancelMission::CallFunc_GetEnemyListRef_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_SimulatorCancelMission, CallFunc_SimulatorCancelMission_ReturnValue) == 0x000068, "Member 'BP_EnemyManager_C_SimulatorCancelMission::CallFunc_SimulatorCancelMission_ReturnValue' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.IsBattleCourtMortNative
// 0x0002 (0x0002 - 0x0000)
struct BP_EnemyManager_C_IsBattleCourtMortNative final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsBattleCourtMort_IsCourtMort;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyManager_C_IsBattleCourtMortNative) == 0x000001, "Wrong alignment on BP_EnemyManager_C_IsBattleCourtMortNative");
static_assert(sizeof(BP_EnemyManager_C_IsBattleCourtMortNative) == 0x000002, "Wrong size on BP_EnemyManager_C_IsBattleCourtMortNative");
static_assert(offsetof(BP_EnemyManager_C_IsBattleCourtMortNative, ReturnValue) == 0x000000, "Member 'BP_EnemyManager_C_IsBattleCourtMortNative::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_IsBattleCourtMortNative, CallFunc_IsBattleCourtMort_IsCourtMort) == 0x000001, "Member 'BP_EnemyManager_C_IsBattleCourtMortNative::CallFunc_IsBattleCourtMort_IsCourtMort' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.SetPlayingEnpcSequence
// 0x0001 (0x0001 - 0x0000)
struct BP_EnemyManager_C_SetPlayingEnpcSequence final
{
public:
	bool                                          Playing;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyManager_C_SetPlayingEnpcSequence) == 0x000001, "Wrong alignment on BP_EnemyManager_C_SetPlayingEnpcSequence");
static_assert(sizeof(BP_EnemyManager_C_SetPlayingEnpcSequence) == 0x000001, "Wrong size on BP_EnemyManager_C_SetPlayingEnpcSequence");
static_assert(offsetof(BP_EnemyManager_C_SetPlayingEnpcSequence, Playing) == 0x000000, "Member 'BP_EnemyManager_C_SetPlayingEnpcSequence::Playing' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.IsPlayingEnpcSequence
// 0x0001 (0x0001 - 0x0000)
struct BP_EnemyManager_C_IsPlayingEnpcSequence final
{
public:
	bool                                          bPlaying;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyManager_C_IsPlayingEnpcSequence) == 0x000001, "Wrong alignment on BP_EnemyManager_C_IsPlayingEnpcSequence");
static_assert(sizeof(BP_EnemyManager_C_IsPlayingEnpcSequence) == 0x000001, "Wrong size on BP_EnemyManager_C_IsPlayingEnpcSequence");
static_assert(offsetof(BP_EnemyManager_C_IsPlayingEnpcSequence, bPlaying) == 0x000000, "Member 'BP_EnemyManager_C_IsPlayingEnpcSequence::bPlaying' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.GetBrainCrashDamageLocation
// 0x000C (0x000C - 0x0000)
struct BP_EnemyManager_C_GetBrainCrashDamageLocation final
{
public:
	struct FVector                                WorldLocation;                                     // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EnemyManager_C_GetBrainCrashDamageLocation) == 0x000004, "Wrong alignment on BP_EnemyManager_C_GetBrainCrashDamageLocation");
static_assert(sizeof(BP_EnemyManager_C_GetBrainCrashDamageLocation) == 0x00000C, "Wrong size on BP_EnemyManager_C_GetBrainCrashDamageLocation");
static_assert(offsetof(BP_EnemyManager_C_GetBrainCrashDamageLocation, WorldLocation) == 0x000000, "Member 'BP_EnemyManager_C_GetBrainCrashDamageLocation::WorldLocation' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.EventManagerStart
// 0x0060 (0x0060 - 0x0000)
struct BP_EnemyManager_C_EventManagerStart final
{
public:
	bool                                          EnableTick;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Visibility;                                        // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ReturnValue;                                       // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61AD[0x5];                                     // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         EnemyArray;                                        // 0x0008(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IEventManagerInterface> K2Node_DynamicCast_AsEvent_Manager_Interface;      // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61AE[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EventManagerStart_ReturnValue;            // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61AF[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61B0[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ARSCharacterBase*>               CallFunc_GetEnemyList_ReturnValue;                 // 0x0050(0x0010)(ReferenceParm, HasGetValueTypeHash)
};
static_assert(alignof(BP_EnemyManager_C_EventManagerStart) == 0x000008, "Wrong alignment on BP_EnemyManager_C_EventManagerStart");
static_assert(sizeof(BP_EnemyManager_C_EventManagerStart) == 0x000060, "Wrong size on BP_EnemyManager_C_EventManagerStart");
static_assert(offsetof(BP_EnemyManager_C_EventManagerStart, EnableTick) == 0x000000, "Member 'BP_EnemyManager_C_EventManagerStart::EnableTick' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_EventManagerStart, Visibility) == 0x000001, "Member 'BP_EnemyManager_C_EventManagerStart::Visibility' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_EventManagerStart, ReturnValue) == 0x000002, "Member 'BP_EnemyManager_C_EventManagerStart::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_EventManagerStart, EnemyArray) == 0x000008, "Member 'BP_EnemyManager_C_EventManagerStart::EnemyArray' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_EventManagerStart, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BP_EnemyManager_C_EventManagerStart::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_EventManagerStart, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'BP_EnemyManager_C_EventManagerStart::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_EventManagerStart, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_EnemyManager_C_EventManagerStart::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_EventManagerStart, K2Node_DynamicCast_AsEvent_Manager_Interface) == 0x000028, "Member 'BP_EnemyManager_C_EventManagerStart::K2Node_DynamicCast_AsEvent_Manager_Interface' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_EventManagerStart, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_EnemyManager_C_EventManagerStart::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_EventManagerStart, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'BP_EnemyManager_C_EventManagerStart::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_EventManagerStart, CallFunc_EventManagerStart_ReturnValue) == 0x000040, "Member 'BP_EnemyManager_C_EventManagerStart::CallFunc_EventManagerStart_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_EventManagerStart, CallFunc_Array_Length_ReturnValue) == 0x000044, "Member 'BP_EnemyManager_C_EventManagerStart::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_EventManagerStart, CallFunc_Less_IntInt_ReturnValue) == 0x000048, "Member 'BP_EnemyManager_C_EventManagerStart::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_EventManagerStart, CallFunc_GetEnemyList_ReturnValue) == 0x000050, "Member 'BP_EnemyManager_C_EventManagerStart::CallFunc_GetEnemyList_ReturnValue' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.EventManagerEnd
// 0x0060 (0x0060 - 0x0000)
struct BP_EnemyManager_C_EventManagerEnd final
{
public:
	bool                                          RestoreEnableTick;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          RestoreVisibility;                                 // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ReturnValue;                                       // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61B1[0x5];                                     // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         EnemyArray;                                        // 0x0008(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61B2[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ARSCharacterBase*>               CallFunc_GetEnemyListRef_ReturnValue;              // 0x0020(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61B3[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IEventManagerInterface> K2Node_DynamicCast_AsEvent_Manager_Interface;      // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EventManagerEnd_ReturnValue;              // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61B4[0x2];                                     // 0x0052(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61B5[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EnemyManager_C_EventManagerEnd) == 0x000008, "Wrong alignment on BP_EnemyManager_C_EventManagerEnd");
static_assert(sizeof(BP_EnemyManager_C_EventManagerEnd) == 0x000060, "Wrong size on BP_EnemyManager_C_EventManagerEnd");
static_assert(offsetof(BP_EnemyManager_C_EventManagerEnd, RestoreEnableTick) == 0x000000, "Member 'BP_EnemyManager_C_EventManagerEnd::RestoreEnableTick' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_EventManagerEnd, RestoreVisibility) == 0x000001, "Member 'BP_EnemyManager_C_EventManagerEnd::RestoreVisibility' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_EventManagerEnd, ReturnValue) == 0x000002, "Member 'BP_EnemyManager_C_EventManagerEnd::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_EventManagerEnd, EnemyArray) == 0x000008, "Member 'BP_EnemyManager_C_EventManagerEnd::EnemyArray' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_EventManagerEnd, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BP_EnemyManager_C_EventManagerEnd::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_EventManagerEnd, CallFunc_GetEnemyListRef_ReturnValue) == 0x000020, "Member 'BP_EnemyManager_C_EventManagerEnd::CallFunc_GetEnemyListRef_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_EventManagerEnd, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_EnemyManager_C_EventManagerEnd::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_EventManagerEnd, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'BP_EnemyManager_C_EventManagerEnd::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_EventManagerEnd, K2Node_DynamicCast_AsEvent_Manager_Interface) == 0x000040, "Member 'BP_EnemyManager_C_EventManagerEnd::K2Node_DynamicCast_AsEvent_Manager_Interface' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_EventManagerEnd, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'BP_EnemyManager_C_EventManagerEnd::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_EventManagerEnd, CallFunc_EventManagerEnd_ReturnValue) == 0x000051, "Member 'BP_EnemyManager_C_EventManagerEnd::CallFunc_EventManagerEnd_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_EventManagerEnd, Temp_int_Loop_Counter_Variable) == 0x000054, "Member 'BP_EnemyManager_C_EventManagerEnd::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_EventManagerEnd, CallFunc_Less_IntInt_ReturnValue) == 0x000058, "Member 'BP_EnemyManager_C_EventManagerEnd::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_EventManagerEnd, CallFunc_Add_IntInt_ReturnValue) == 0x00005C, "Member 'BP_EnemyManager_C_EventManagerEnd::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.IsBrainCrashAccessEnable
// 0x0018 (0x0018 - 0x0000)
struct BP_EnemyManager_C_IsBrainCrashAccessEnable final
{
public:
	bool                                          Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61B6[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_Array_Get_Item;                           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyManager_C_IsBrainCrashAccessEnable) == 0x000008, "Wrong alignment on BP_EnemyManager_C_IsBrainCrashAccessEnable");
static_assert(sizeof(BP_EnemyManager_C_IsBrainCrashAccessEnable) == 0x000018, "Wrong size on BP_EnemyManager_C_IsBrainCrashAccessEnable");
static_assert(offsetof(BP_EnemyManager_C_IsBrainCrashAccessEnable, Return) == 0x000000, "Member 'BP_EnemyManager_C_IsBrainCrashAccessEnable::Return' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_IsBrainCrashAccessEnable, CallFunc_Array_Get_Item) == 0x000008, "Member 'BP_EnemyManager_C_IsBrainCrashAccessEnable::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_IsBrainCrashAccessEnable, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000010, "Member 'BP_EnemyManager_C_IsBrainCrashAccessEnable::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_IsBrainCrashAccessEnable, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'BP_EnemyManager_C_IsBrainCrashAccessEnable::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.GetBrainCrashTarget
// 0x0010 (0x0010 - 0x0000)
struct BP_EnemyManager_C_GetBrainCrashTarget final
{
public:
	TArray<class ARSCharacterBase*>               TargetsList;                                       // 0x0000(0x0010)(Parm, OutParm, HasGetValueTypeHash)
};
static_assert(alignof(BP_EnemyManager_C_GetBrainCrashTarget) == 0x000008, "Wrong alignment on BP_EnemyManager_C_GetBrainCrashTarget");
static_assert(sizeof(BP_EnemyManager_C_GetBrainCrashTarget) == 0x000010, "Wrong size on BP_EnemyManager_C_GetBrainCrashTarget");
static_assert(offsetof(BP_EnemyManager_C_GetBrainCrashTarget, TargetsList) == 0x000000, "Member 'BP_EnemyManager_C_GetBrainCrashTarget::TargetsList' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.DebugDrawInfomation
// 0x0018 (0x0018 - 0x0000)
struct BP_EnemyManager_C_DebugDrawInfomation final
{
public:
	bool                                          Dummy;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          L_bDrawEnableText;                                 // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61B7[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 L_EnablelText;                                     // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EnemyManager_C_DebugDrawInfomation) == 0x000008, "Wrong alignment on BP_EnemyManager_C_DebugDrawInfomation");
static_assert(sizeof(BP_EnemyManager_C_DebugDrawInfomation) == 0x000018, "Wrong size on BP_EnemyManager_C_DebugDrawInfomation");
static_assert(offsetof(BP_EnemyManager_C_DebugDrawInfomation, Dummy) == 0x000000, "Member 'BP_EnemyManager_C_DebugDrawInfomation::Dummy' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDrawInfomation, L_bDrawEnableText) == 0x000001, "Member 'BP_EnemyManager_C_DebugDrawInfomation::L_bDrawEnableText' has a wrong offset!");
static_assert(offsetof(BP_EnemyManager_C_DebugDrawInfomation, L_EnablelText) == 0x000008, "Member 'BP_EnemyManager_C_DebugDrawInfomation::L_EnablelText' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.GetEm8300Manager
// 0x0008 (0x0008 - 0x0000)
struct BP_EnemyManager_C_GetEm8300Manager final
{
public:
	class AActor*                                 Manager;                                           // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EnemyManager_C_GetEm8300Manager) == 0x000008, "Wrong alignment on BP_EnemyManager_C_GetEm8300Manager");
static_assert(sizeof(BP_EnemyManager_C_GetEm8300Manager) == 0x000008, "Wrong size on BP_EnemyManager_C_GetEm8300Manager");
static_assert(offsetof(BP_EnemyManager_C_GetEm8300Manager, Manager) == 0x000000, "Member 'BP_EnemyManager_C_GetEm8300Manager::Manager' has a wrong offset!");

// Function BP_EnemyManager.BP_EnemyManager_C.IsStartBattleEm8300
// 0x0001 (0x0001 - 0x0000)
struct BP_EnemyManager_C_IsStartBattleEm8300 final
{
public:
	bool                                          bStart;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyManager_C_IsStartBattleEm8300) == 0x000001, "Wrong alignment on BP_EnemyManager_C_IsStartBattleEm8300");
static_assert(sizeof(BP_EnemyManager_C_IsStartBattleEm8300) == 0x000001, "Wrong size on BP_EnemyManager_C_IsStartBattleEm8300");
static_assert(offsetof(BP_EnemyManager_C_IsStartBattleEm8300, bStart) == 0x000000, "Member 'BP_EnemyManager_C_IsStartBattleEm8300::bStart' has a wrong offset!");

}

