#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_EnemyAvatar

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_EnemyAvatar.BP_EnemyAvatar_C.ExecuteUbergraph_BP_EnemyAvatar
// 0x0008 (0x0008 - 0x0000)
struct BP_EnemyAvatar_C_ExecuteUbergraph_BP_EnemyAvatar final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EnemyAvatar_C_ExecuteUbergraph_BP_EnemyAvatar) == 0x000004, "Wrong alignment on BP_EnemyAvatar_C_ExecuteUbergraph_BP_EnemyAvatar");
static_assert(sizeof(BP_EnemyAvatar_C_ExecuteUbergraph_BP_EnemyAvatar) == 0x000008, "Wrong size on BP_EnemyAvatar_C_ExecuteUbergraph_BP_EnemyAvatar");
static_assert(offsetof(BP_EnemyAvatar_C_ExecuteUbergraph_BP_EnemyAvatar, EntryPoint) == 0x000000, "Member 'BP_EnemyAvatar_C_ExecuteUbergraph_BP_EnemyAvatar::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_EnemyAvatar_C_ExecuteUbergraph_BP_EnemyAvatar, K2Node_Event_DeltaSeconds) == 0x000004, "Member 'BP_EnemyAvatar_C_ExecuteUbergraph_BP_EnemyAvatar::K2Node_Event_DeltaSeconds' has a wrong offset!");

// Function BP_EnemyAvatar.BP_EnemyAvatar_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_EnemyAvatar_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EnemyAvatar_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_EnemyAvatar_C_ReceiveTick");
static_assert(sizeof(BP_EnemyAvatar_C_ReceiveTick) == 0x000004, "Wrong size on BP_EnemyAvatar_C_ReceiveTick");
static_assert(offsetof(BP_EnemyAvatar_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_EnemyAvatar_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_EnemyAvatar.BP_EnemyAvatar_C.AddAvatar
// 0x0040 (0x0040 - 0x0000)
struct BP_EnemyAvatar_C_AddAvatar final
{
public:
	class AActor*                                 Avatar;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6224[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ICrashVisionInterface> K2Node_DynamicCast_AsCrash_Vision_Interface;       // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetDisableCrashVision_ReturnValue;        // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6225[0x6];                                     // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleCharacterInterface_C> K2Node_DynamicCast_AsBPI_Battle_Character_Interface; // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetIgnoreVisionSimulatorScore_bDummy;     // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6226[0x2];                                     // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EnemyAvatar_C_AddAvatar) == 0x000008, "Wrong alignment on BP_EnemyAvatar_C_AddAvatar");
static_assert(sizeof(BP_EnemyAvatar_C_AddAvatar) == 0x000040, "Wrong size on BP_EnemyAvatar_C_AddAvatar");
static_assert(offsetof(BP_EnemyAvatar_C_AddAvatar, Avatar) == 0x000000, "Member 'BP_EnemyAvatar_C_AddAvatar::Avatar' has a wrong offset!");
static_assert(offsetof(BP_EnemyAvatar_C_AddAvatar, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_EnemyAvatar_C_AddAvatar::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyAvatar_C_AddAvatar, K2Node_DynamicCast_AsCrash_Vision_Interface) == 0x000010, "Member 'BP_EnemyAvatar_C_AddAvatar::K2Node_DynamicCast_AsCrash_Vision_Interface' has a wrong offset!");
static_assert(offsetof(BP_EnemyAvatar_C_AddAvatar, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_EnemyAvatar_C_AddAvatar::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EnemyAvatar_C_AddAvatar, CallFunc_SetDisableCrashVision_ReturnValue) == 0x000021, "Member 'BP_EnemyAvatar_C_AddAvatar::CallFunc_SetDisableCrashVision_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyAvatar_C_AddAvatar, K2Node_DynamicCast_AsBPI_Battle_Character_Interface) == 0x000028, "Member 'BP_EnemyAvatar_C_AddAvatar::K2Node_DynamicCast_AsBPI_Battle_Character_Interface' has a wrong offset!");
static_assert(offsetof(BP_EnemyAvatar_C_AddAvatar, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'BP_EnemyAvatar_C_AddAvatar::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyAvatar_C_AddAvatar, CallFunc_SetIgnoreVisionSimulatorScore_bDummy) == 0x000039, "Member 'BP_EnemyAvatar_C_AddAvatar::CallFunc_SetIgnoreVisionSimulatorScore_bDummy' has a wrong offset!");
static_assert(offsetof(BP_EnemyAvatar_C_AddAvatar, CallFunc_Array_Add_ReturnValue) == 0x00003C, "Member 'BP_EnemyAvatar_C_AddAvatar::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_EnemyAvatar.BP_EnemyAvatar_C.DeadAvatar
// 0x0018 (0x0018 - 0x0000)
struct BP_EnemyAvatar_C_DeadAvatar final
{
public:
	class ARSBattleEnemy_C*                       TargetActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         VanishSeconds;                                     // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyAvatar_C_DeadAvatar) == 0x000008, "Wrong alignment on BP_EnemyAvatar_C_DeadAvatar");
static_assert(sizeof(BP_EnemyAvatar_C_DeadAvatar) == 0x000018, "Wrong size on BP_EnemyAvatar_C_DeadAvatar");
static_assert(offsetof(BP_EnemyAvatar_C_DeadAvatar, TargetActor) == 0x000000, "Member 'BP_EnemyAvatar_C_DeadAvatar::TargetActor' has a wrong offset!");
static_assert(offsetof(BP_EnemyAvatar_C_DeadAvatar, VanishSeconds) == 0x000008, "Member 'BP_EnemyAvatar_C_DeadAvatar::VanishSeconds' has a wrong offset!");
static_assert(offsetof(BP_EnemyAvatar_C_DeadAvatar, CallFunc_Array_AddUnique_ReturnValue) == 0x00000C, "Member 'BP_EnemyAvatar_C_DeadAvatar::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyAvatar_C_DeadAvatar, CallFunc_Array_RemoveItem_ReturnValue) == 0x000010, "Member 'BP_EnemyAvatar_C_DeadAvatar::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");

// Function BP_EnemyAvatar.BP_EnemyAvatar_C.AvatarDeadUpdate
// 0x0070 (0x0070 - 0x0000)
struct BP_EnemyAvatar_C_AvatarDeadUpdate final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6227[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattleEnemy_C*                       L_DeadActor;                                       // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ARSBattleEnemy_C*>               L_RemoveList;                                      // 0x0010(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6228[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Num_Variable_1;                      // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6229[0x2];                                     // 0x0046(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Update_Dummy;                             // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_622A[0x2];                                     // 0x004E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_622B[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Array_Get_Item;                           // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyAvatar_C_AvatarDeadUpdate) == 0x000008, "Wrong alignment on BP_EnemyAvatar_C_AvatarDeadUpdate");
static_assert(sizeof(BP_EnemyAvatar_C_AvatarDeadUpdate) == 0x000070, "Wrong size on BP_EnemyAvatar_C_AvatarDeadUpdate");
static_assert(offsetof(BP_EnemyAvatar_C_AvatarDeadUpdate, DeltaSeconds) == 0x000000, "Member 'BP_EnemyAvatar_C_AvatarDeadUpdate::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_EnemyAvatar_C_AvatarDeadUpdate, L_DeadActor) == 0x000008, "Member 'BP_EnemyAvatar_C_AvatarDeadUpdate::L_DeadActor' has a wrong offset!");
static_assert(offsetof(BP_EnemyAvatar_C_AvatarDeadUpdate, L_RemoveList) == 0x000010, "Member 'BP_EnemyAvatar_C_AvatarDeadUpdate::L_RemoveList' has a wrong offset!");
static_assert(offsetof(BP_EnemyAvatar_C_AvatarDeadUpdate, Temp_int_Array_Index_Variable) == 0x000020, "Member 'BP_EnemyAvatar_C_AvatarDeadUpdate::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyAvatar_C_AvatarDeadUpdate, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'BP_EnemyAvatar_C_AvatarDeadUpdate::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyAvatar_C_AvatarDeadUpdate, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BP_EnemyAvatar_C_AvatarDeadUpdate::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyAvatar_C_AvatarDeadUpdate, Temp_int_Array_Index_Variable_1) == 0x00002C, "Member 'BP_EnemyAvatar_C_AvatarDeadUpdate::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyAvatar_C_AvatarDeadUpdate, Temp_int_Loop_Num_Variable) == 0x000030, "Member 'BP_EnemyAvatar_C_AvatarDeadUpdate::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyAvatar_C_AvatarDeadUpdate, CallFunc_Less_IntInt_ReturnValue) == 0x000034, "Member 'BP_EnemyAvatar_C_AvatarDeadUpdate::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyAvatar_C_AvatarDeadUpdate, Temp_int_Loop_Num_Variable_1) == 0x000038, "Member 'BP_EnemyAvatar_C_AvatarDeadUpdate::Temp_int_Loop_Num_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyAvatar_C_AvatarDeadUpdate, CallFunc_MakeLiteralInt_ReturnValue) == 0x00003C, "Member 'BP_EnemyAvatar_C_AvatarDeadUpdate::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyAvatar_C_AvatarDeadUpdate, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'BP_EnemyAvatar_C_AvatarDeadUpdate::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyAvatar_C_AvatarDeadUpdate, CallFunc_Array_RemoveItem_ReturnValue) == 0x000044, "Member 'BP_EnemyAvatar_C_AvatarDeadUpdate::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyAvatar_C_AvatarDeadUpdate, CallFunc_IsValid_ReturnValue) == 0x000045, "Member 'BP_EnemyAvatar_C_AvatarDeadUpdate::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyAvatar_C_AvatarDeadUpdate, CallFunc_Array_Length_ReturnValue_1) == 0x000048, "Member 'BP_EnemyAvatar_C_AvatarDeadUpdate::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyAvatar_C_AvatarDeadUpdate, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00004C, "Member 'BP_EnemyAvatar_C_AvatarDeadUpdate::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyAvatar_C_AvatarDeadUpdate, CallFunc_Update_Dummy) == 0x00004D, "Member 'BP_EnemyAvatar_C_AvatarDeadUpdate::CallFunc_Update_Dummy' has a wrong offset!");
static_assert(offsetof(BP_EnemyAvatar_C_AvatarDeadUpdate, Temp_int_Loop_Counter_Variable_1) == 0x000050, "Member 'BP_EnemyAvatar_C_AvatarDeadUpdate::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyAvatar_C_AvatarDeadUpdate, CallFunc_Array_AddUnique_ReturnValue) == 0x000054, "Member 'BP_EnemyAvatar_C_AvatarDeadUpdate::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyAvatar_C_AvatarDeadUpdate, CallFunc_Less_IntInt_ReturnValue_1) == 0x000058, "Member 'BP_EnemyAvatar_C_AvatarDeadUpdate::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyAvatar_C_AvatarDeadUpdate, CallFunc_Add_IntInt_ReturnValue_1) == 0x00005C, "Member 'BP_EnemyAvatar_C_AvatarDeadUpdate::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyAvatar_C_AvatarDeadUpdate, CallFunc_Array_Length_ReturnValue_2) == 0x000060, "Member 'BP_EnemyAvatar_C_AvatarDeadUpdate::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EnemyAvatar_C_AvatarDeadUpdate, CallFunc_Array_Get_Item) == 0x000064, "Member 'BP_EnemyAvatar_C_AvatarDeadUpdate::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EnemyAvatar_C_AvatarDeadUpdate, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000068, "Member 'BP_EnemyAvatar_C_AvatarDeadUpdate::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyAvatar_C_AvatarDeadUpdate, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x00006C, "Member 'BP_EnemyAvatar_C_AvatarDeadUpdate::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_EnemyAvatar.BP_EnemyAvatar_C.SetAvatarOwner
// 0x0008 (0x0008 - 0x0000)
struct BP_EnemyAvatar_C_SetAvatarOwner final
{
public:
	class AActor*                                 OwnerActor;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EnemyAvatar_C_SetAvatarOwner) == 0x000008, "Wrong alignment on BP_EnemyAvatar_C_SetAvatarOwner");
static_assert(sizeof(BP_EnemyAvatar_C_SetAvatarOwner) == 0x000008, "Wrong size on BP_EnemyAvatar_C_SetAvatarOwner");
static_assert(offsetof(BP_EnemyAvatar_C_SetAvatarOwner, OwnerActor) == 0x000000, "Member 'BP_EnemyAvatar_C_SetAvatarOwner::OwnerActor' has a wrong offset!");

// Function BP_EnemyAvatar.BP_EnemyAvatar_C.IncCreateAvaarCount
// 0x000C (0x000C - 0x0000)
struct BP_EnemyAvatar_C_IncCreateAvaarCount final
{
public:
	bool                                          CallFunc_IsOriginal_IsOriginal;                    // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_622C[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EnemyAvatar_C_IncCreateAvaarCount) == 0x000004, "Wrong alignment on BP_EnemyAvatar_C_IncCreateAvaarCount");
static_assert(sizeof(BP_EnemyAvatar_C_IncCreateAvaarCount) == 0x00000C, "Wrong size on BP_EnemyAvatar_C_IncCreateAvaarCount");
static_assert(offsetof(BP_EnemyAvatar_C_IncCreateAvaarCount, CallFunc_IsOriginal_IsOriginal) == 0x000000, "Member 'BP_EnemyAvatar_C_IncCreateAvaarCount::CallFunc_IsOriginal_IsOriginal' has a wrong offset!");
static_assert(offsetof(BP_EnemyAvatar_C_IncCreateAvaarCount, Temp_int_Variable) == 0x000004, "Member 'BP_EnemyAvatar_C_IncCreateAvaarCount::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyAvatar_C_IncCreateAvaarCount, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_EnemyAvatar_C_IncCreateAvaarCount::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_EnemyAvatar.BP_EnemyAvatar_C.IsOriginal
// 0x0003 (0x0003 - 0x0000)
struct BP_EnemyAvatar_C_IsOriginal final
{
public:
	bool                                          Param_IsOriginal;                                  // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAvatar_IsAvatar;                        // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyAvatar_C_IsOriginal) == 0x000001, "Wrong alignment on BP_EnemyAvatar_C_IsOriginal");
static_assert(sizeof(BP_EnemyAvatar_C_IsOriginal) == 0x000003, "Wrong size on BP_EnemyAvatar_C_IsOriginal");
static_assert(offsetof(BP_EnemyAvatar_C_IsOriginal, Param_IsOriginal) == 0x000000, "Member 'BP_EnemyAvatar_C_IsOriginal::Param_IsOriginal' has a wrong offset!");
static_assert(offsetof(BP_EnemyAvatar_C_IsOriginal, CallFunc_IsAvatar_IsAvatar) == 0x000001, "Member 'BP_EnemyAvatar_C_IsOriginal::CallFunc_IsAvatar_IsAvatar' has a wrong offset!");
static_assert(offsetof(BP_EnemyAvatar_C_IsOriginal, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'BP_EnemyAvatar_C_IsOriginal::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_EnemyAvatar.BP_EnemyAvatar_C.IsCanAvatar
// 0x0058 (0x0058 - 0x0000)
struct BP_EnemyAvatar_C_IsCanAvatar final
{
public:
	bool                                          Param_IsAvatar;                                    // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          LIsCanAvatar;                                      // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_622D[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_622E[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_EnemyManager_C*                     CallFunc_GetEnemyManager_Manager;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Check_Create_Avatar_NewParam;             // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_622F[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSCharacterBase*                       CallFunc_GetPlayer_ReturnValue;                    // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_PlayerInterface_C> K2Node_DynamicCast_AsBPI_Player_Interface;         // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsOpenBrainField_bOpen;                   // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6230[0x2];                                     // 0x004A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyAvatar_C_IsCanAvatar) == 0x000008, "Wrong alignment on BP_EnemyAvatar_C_IsCanAvatar");
static_assert(sizeof(BP_EnemyAvatar_C_IsCanAvatar) == 0x000058, "Wrong size on BP_EnemyAvatar_C_IsCanAvatar");
static_assert(offsetof(BP_EnemyAvatar_C_IsCanAvatar, Param_IsAvatar) == 0x000000, "Member 'BP_EnemyAvatar_C_IsCanAvatar::Param_IsAvatar' has a wrong offset!");
static_assert(offsetof(BP_EnemyAvatar_C_IsCanAvatar, LIsCanAvatar) == 0x000001, "Member 'BP_EnemyAvatar_C_IsCanAvatar::LIsCanAvatar' has a wrong offset!");
static_assert(offsetof(BP_EnemyAvatar_C_IsCanAvatar, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_EnemyAvatar_C_IsCanAvatar::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyAvatar_C_IsCanAvatar, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000010, "Member 'BP_EnemyAvatar_C_IsCanAvatar::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyAvatar_C_IsCanAvatar, CallFunc_GetEnemyManager_Manager) == 0x000018, "Member 'BP_EnemyAvatar_C_IsCanAvatar::CallFunc_GetEnemyManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_EnemyAvatar_C_IsCanAvatar, CallFunc_Check_Create_Avatar_NewParam) == 0x000020, "Member 'BP_EnemyAvatar_C_IsCanAvatar::CallFunc_Check_Create_Avatar_NewParam' has a wrong offset!");
static_assert(offsetof(BP_EnemyAvatar_C_IsCanAvatar, CallFunc_GetPlayerManager_PlayerManager) == 0x000028, "Member 'BP_EnemyAvatar_C_IsCanAvatar::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_EnemyAvatar_C_IsCanAvatar, CallFunc_GetPlayer_ReturnValue) == 0x000030, "Member 'BP_EnemyAvatar_C_IsCanAvatar::CallFunc_GetPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyAvatar_C_IsCanAvatar, K2Node_DynamicCast_AsBPI_Player_Interface) == 0x000038, "Member 'BP_EnemyAvatar_C_IsCanAvatar::K2Node_DynamicCast_AsBPI_Player_Interface' has a wrong offset!");
static_assert(offsetof(BP_EnemyAvatar_C_IsCanAvatar, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'BP_EnemyAvatar_C_IsCanAvatar::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EnemyAvatar_C_IsCanAvatar, CallFunc_IsOpenBrainField_bOpen) == 0x000049, "Member 'BP_EnemyAvatar_C_IsCanAvatar::CallFunc_IsOpenBrainField_bOpen' has a wrong offset!");
static_assert(offsetof(BP_EnemyAvatar_C_IsCanAvatar, CallFunc_Array_Length_ReturnValue) == 0x00004C, "Member 'BP_EnemyAvatar_C_IsCanAvatar::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyAvatar_C_IsCanAvatar, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000050, "Member 'BP_EnemyAvatar_C_IsCanAvatar::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyAvatar_C_IsCanAvatar, CallFunc_Not_PreBool_ReturnValue) == 0x000051, "Member 'BP_EnemyAvatar_C_IsCanAvatar::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_EnemyAvatar.BP_EnemyAvatar_C.IsAvatar
// 0x0002 (0x0002 - 0x0000)
struct BP_EnemyAvatar_C_IsAvatar final
{
public:
	bool                                          Param_IsAvatar;                                    // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyAvatar_C_IsAvatar) == 0x000001, "Wrong alignment on BP_EnemyAvatar_C_IsAvatar");
static_assert(sizeof(BP_EnemyAvatar_C_IsAvatar) == 0x000002, "Wrong size on BP_EnemyAvatar_C_IsAvatar");
static_assert(offsetof(BP_EnemyAvatar_C_IsAvatar, Param_IsAvatar) == 0x000000, "Member 'BP_EnemyAvatar_C_IsAvatar::Param_IsAvatar' has a wrong offset!");
static_assert(offsetof(BP_EnemyAvatar_C_IsAvatar, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'BP_EnemyAvatar_C_IsAvatar::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_EnemyAvatar.BP_EnemyAvatar_C.GetAvatarOwner
// 0x0008 (0x0008 - 0x0000)
struct BP_EnemyAvatar_C_GetAvatarOwner final
{
public:
	class AActor*                                 Param_AvatarOwner;                                 // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EnemyAvatar_C_GetAvatarOwner) == 0x000008, "Wrong alignment on BP_EnemyAvatar_C_GetAvatarOwner");
static_assert(sizeof(BP_EnemyAvatar_C_GetAvatarOwner) == 0x000008, "Wrong size on BP_EnemyAvatar_C_GetAvatarOwner");
static_assert(offsetof(BP_EnemyAvatar_C_GetAvatarOwner, Param_AvatarOwner) == 0x000000, "Member 'BP_EnemyAvatar_C_GetAvatarOwner::Param_AvatarOwner' has a wrong offset!");

// Function BP_EnemyAvatar.BP_EnemyAvatar_C.IsEnableAvatar
// 0x000C (0x000C - 0x0000)
struct BP_EnemyAvatar_C_IsEnableAvatar final
{
public:
	bool                                          bEnable;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          L_enable;                                          // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6231[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOriginal_IsOriginal;                    // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyAvatar_C_IsEnableAvatar) == 0x000004, "Wrong alignment on BP_EnemyAvatar_C_IsEnableAvatar");
static_assert(sizeof(BP_EnemyAvatar_C_IsEnableAvatar) == 0x00000C, "Wrong size on BP_EnemyAvatar_C_IsEnableAvatar");
static_assert(offsetof(BP_EnemyAvatar_C_IsEnableAvatar, bEnable) == 0x000000, "Member 'BP_EnemyAvatar_C_IsEnableAvatar::bEnable' has a wrong offset!");
static_assert(offsetof(BP_EnemyAvatar_C_IsEnableAvatar, L_enable) == 0x000001, "Member 'BP_EnemyAvatar_C_IsEnableAvatar::L_enable' has a wrong offset!");
static_assert(offsetof(BP_EnemyAvatar_C_IsEnableAvatar, CallFunc_Array_Length_ReturnValue) == 0x000004, "Member 'BP_EnemyAvatar_C_IsEnableAvatar::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyAvatar_C_IsEnableAvatar, CallFunc_IsOriginal_IsOriginal) == 0x000008, "Member 'BP_EnemyAvatar_C_IsEnableAvatar::CallFunc_IsOriginal_IsOriginal' has a wrong offset!");
static_assert(offsetof(BP_EnemyAvatar_C_IsEnableAvatar, CallFunc_Greater_IntInt_ReturnValue) == 0x000009, "Member 'BP_EnemyAvatar_C_IsEnableAvatar::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

}

