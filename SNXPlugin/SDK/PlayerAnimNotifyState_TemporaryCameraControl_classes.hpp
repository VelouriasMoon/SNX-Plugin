#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PlayerAnimNotifyState_TemporaryCameraControl

#include "Basic.hpp"

#include "BattlePrototype_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass PlayerAnimNotifyState_TemporaryCameraControl.PlayerAnimNotifyState_TemporaryCameraControl_C
// 0x0040 (0x0070 - 0x0030)
class UPlayerAnimNotifyState_TemporaryCameraControl_C final : public UAnimNotifyState
{
public:
	float                                         BeginLerpTime;                                     // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EndLerpTime;                                       // 0x0034(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bControlRootOffset;                                // 0x0038(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5E72[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                RootOffset;                                        // 0x003C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bControlDistance;                                  // 0x0048(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5E73[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DistanceOffset;                                    // 0x004C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bControlFov;                                       // 0x0050(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5E74[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         FOV;                                               // 0x0054(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEasingFunc                                   BeginEaseFunc;                                     // 0x0058(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5E75[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         BeginEaseBlendExp;                                 // 0x005C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEasingFunc                                   EndEaseFunc;                                       // 0x0060(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5E76[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         EndEaseBlendExp;                                   // 0x0064(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerCameraActionPriority                   Priority;                                          // 0x0068(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bEnemy;                                            // 0x0069(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bHologram;                                         // 0x006A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)

public:
	bool Received_NotifyEnd(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation) const;
	bool Received_NotifyBegin(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation, float TotalDuration) const;
	void GetCameraComponent(class AActor* OwnerActor, class UBP_PlayerCameraComponent_C** Camera) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"PlayerAnimNotifyState_TemporaryCameraControl_C">();
	}
	static class UPlayerAnimNotifyState_TemporaryCameraControl_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayerAnimNotifyState_TemporaryCameraControl_C>();
	}
};
static_assert(alignof(UPlayerAnimNotifyState_TemporaryCameraControl_C) == 0x000008, "Wrong alignment on UPlayerAnimNotifyState_TemporaryCameraControl_C");
static_assert(sizeof(UPlayerAnimNotifyState_TemporaryCameraControl_C) == 0x000070, "Wrong size on UPlayerAnimNotifyState_TemporaryCameraControl_C");
static_assert(offsetof(UPlayerAnimNotifyState_TemporaryCameraControl_C, BeginLerpTime) == 0x000030, "Member 'UPlayerAnimNotifyState_TemporaryCameraControl_C::BeginLerpTime' has a wrong offset!");
static_assert(offsetof(UPlayerAnimNotifyState_TemporaryCameraControl_C, EndLerpTime) == 0x000034, "Member 'UPlayerAnimNotifyState_TemporaryCameraControl_C::EndLerpTime' has a wrong offset!");
static_assert(offsetof(UPlayerAnimNotifyState_TemporaryCameraControl_C, bControlRootOffset) == 0x000038, "Member 'UPlayerAnimNotifyState_TemporaryCameraControl_C::bControlRootOffset' has a wrong offset!");
static_assert(offsetof(UPlayerAnimNotifyState_TemporaryCameraControl_C, RootOffset) == 0x00003C, "Member 'UPlayerAnimNotifyState_TemporaryCameraControl_C::RootOffset' has a wrong offset!");
static_assert(offsetof(UPlayerAnimNotifyState_TemporaryCameraControl_C, bControlDistance) == 0x000048, "Member 'UPlayerAnimNotifyState_TemporaryCameraControl_C::bControlDistance' has a wrong offset!");
static_assert(offsetof(UPlayerAnimNotifyState_TemporaryCameraControl_C, DistanceOffset) == 0x00004C, "Member 'UPlayerAnimNotifyState_TemporaryCameraControl_C::DistanceOffset' has a wrong offset!");
static_assert(offsetof(UPlayerAnimNotifyState_TemporaryCameraControl_C, bControlFov) == 0x000050, "Member 'UPlayerAnimNotifyState_TemporaryCameraControl_C::bControlFov' has a wrong offset!");
static_assert(offsetof(UPlayerAnimNotifyState_TemporaryCameraControl_C, FOV) == 0x000054, "Member 'UPlayerAnimNotifyState_TemporaryCameraControl_C::FOV' has a wrong offset!");
static_assert(offsetof(UPlayerAnimNotifyState_TemporaryCameraControl_C, BeginEaseFunc) == 0x000058, "Member 'UPlayerAnimNotifyState_TemporaryCameraControl_C::BeginEaseFunc' has a wrong offset!");
static_assert(offsetof(UPlayerAnimNotifyState_TemporaryCameraControl_C, BeginEaseBlendExp) == 0x00005C, "Member 'UPlayerAnimNotifyState_TemporaryCameraControl_C::BeginEaseBlendExp' has a wrong offset!");
static_assert(offsetof(UPlayerAnimNotifyState_TemporaryCameraControl_C, EndEaseFunc) == 0x000060, "Member 'UPlayerAnimNotifyState_TemporaryCameraControl_C::EndEaseFunc' has a wrong offset!");
static_assert(offsetof(UPlayerAnimNotifyState_TemporaryCameraControl_C, EndEaseBlendExp) == 0x000064, "Member 'UPlayerAnimNotifyState_TemporaryCameraControl_C::EndEaseBlendExp' has a wrong offset!");
static_assert(offsetof(UPlayerAnimNotifyState_TemporaryCameraControl_C, Priority) == 0x000068, "Member 'UPlayerAnimNotifyState_TemporaryCameraControl_C::Priority' has a wrong offset!");
static_assert(offsetof(UPlayerAnimNotifyState_TemporaryCameraControl_C, bEnemy) == 0x000069, "Member 'UPlayerAnimNotifyState_TemporaryCameraControl_C::bEnemy' has a wrong offset!");
static_assert(offsetof(UPlayerAnimNotifyState_TemporaryCameraControl_C, bHologram) == 0x00006A, "Member 'UPlayerAnimNotifyState_TemporaryCameraControl_C::bHologram' has a wrong offset!");

}

