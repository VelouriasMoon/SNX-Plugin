#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PlayerActionStateDamage

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "BattlePrototype_structs.hpp"


namespace SDK::Params
{

// Function BP_PlayerActionStateDamage.BP_PlayerActionStateDamage_C.Enter
// 0x0198 (0x0198 - 0x0000)
struct BP_PlayerActionStateDamage_C_Enter final
{
public:
	int32                                         Param;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9867[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Enter_ReturnValue;                        // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_3;                              // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_4;                              // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_5;                              // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_6;                              // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_7;                              // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_8;                              // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_9;                              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_10;                             // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_11;                             // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_12;                             // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_13;                             // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_14;                             // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_15;                             // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_16;                             // 0x001F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_17;                             // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9868[0x6];                                     // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CharacterParamater_C> CallFunc_IsBadStatusElectric_self_CastInput;       // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsBadStatusElectric_bBadStatus;           // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9869[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CharacterParamater_C> CallFunc_IsBadStatusElectric_self_CastInput_1;     // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsBadStatusElectric_bBadStatus_1;         // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerDownType                               CallFunc_GetDownType_DownType;                     // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_986A[0x6];                                     // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UClearGetterManager*                    CallFunc_GetClearGetterManager_ClearGetterManager; // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_18;                             // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_986B[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_ch0200_C>         K2Node_DynamicCast_AsBPI_Ch_0200;                  // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_986C[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GameSystemManager_C*                CallFunc_GetGameSystemManager_Manager;             // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DamageInterruptWeaponAnim_bDummy;         // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_19;                             // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_986D[0x6];                                     // 0x008A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerInterface_C> CallFunc_IsEnemyPlayer_self_CastInput;             // 0x0090(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnemyPlayer_bEnemyPlayer;               // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_20;                             // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_21;                             // 0x00A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_22;                             // 0x00A3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_1;            // 0x00A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_2;            // 0x00A6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_23;                             // 0x00A7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsTransitionDown_bTransition;             // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_24;                             // 0x00AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_25;                             // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDeadReaction_bDead;                     // 0x00AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_26;                             // 0x00AE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00AF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_27;                             // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x00B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_986E[0x2];                                     // 0x00B6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BattleManager_C*                    CallFunc_GetBattleManager_BattleManager;           // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerHitStopType                            CallFunc_GetPlayerDamageType_HitStopType;          // 0x00C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x00C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerDamageKind                             Temp_byte_Variable;                                // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_986F[0x3];                                     // 0x00C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerInterface_C> K2Node_DynamicCast_AsBPI_Player_Interface;         // 0x00C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9870[0x7];                                     // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerInterface_C> K2Node_DynamicCast_AsBPI_Player_Interface_1;       // 0x00E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9871[0x7];                                     // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_ENpcComponent_C*                    CallFunc_GetEnpcComp_ReturnComp;                   // 0x00F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEnemyPlayer_bEnemyPlayer_1;             // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnable_ReturnValue;                     // 0x0102(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9872[0x1];                                     // 0x0103(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetElapsedTime_ReturnValue;               // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default;                             // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetInvalidDamage_Dummy;                   // 0x010A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x010B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetFootIKEnable_Dummy;                    // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_RequestHologramAnim_bHologram;            // 0x010D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9873[0x2];                                     // 0x010E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0110(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x011C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0134(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0140(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromX_ReturnValue;                 // 0x014C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9874[0x3];                                     // 0x0159(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerDamageKind                             CallFunc_GetDamageReaction_ReactionType;           // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DamageReaction_Dummy;                     // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9875[0x2];                                     // 0x0162(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CopyPlayerOff_bDummy;                     // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x0169(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetBattleReady_bDummy;                    // 0x016A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9876[0x5];                                     // 0x016B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ARsBattleHero_C*                        K2Node_DynamicCast_AsRs_Battle_Hero;               // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9877[0x7];                                     // 0x0179(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_LookAtInterface_C> CallFunc_SetLookAtEnable_self_CastInput;           // 0x0180(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetLookAtEnable_bResult;                  // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerActionStateDamage_C_Enter) == 0x000008, "Wrong alignment on BP_PlayerActionStateDamage_C_Enter");
static_assert(sizeof(BP_PlayerActionStateDamage_C_Enter) == 0x000198, "Wrong size on BP_PlayerActionStateDamage_C_Enter");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Enter, Param) == 0x000000, "Member 'BP_PlayerActionStateDamage_C_Enter::Param' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Enter, ReturnValue) == 0x000004, "Member 'BP_PlayerActionStateDamage_C_Enter::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Enter, Temp_bool_Variable) == 0x000008, "Member 'BP_PlayerActionStateDamage_C_Enter::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Enter, CallFunc_Enter_ReturnValue) == 0x00000C, "Member 'BP_PlayerActionStateDamage_C_Enter::CallFunc_Enter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Enter, Temp_bool_Variable_1) == 0x000010, "Member 'BP_PlayerActionStateDamage_C_Enter::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Enter, Temp_bool_Variable_2) == 0x000011, "Member 'BP_PlayerActionStateDamage_C_Enter::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Enter, Temp_bool_Variable_3) == 0x000012, "Member 'BP_PlayerActionStateDamage_C_Enter::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Enter, Temp_bool_Variable_4) == 0x000013, "Member 'BP_PlayerActionStateDamage_C_Enter::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Enter, Temp_bool_Variable_5) == 0x000014, "Member 'BP_PlayerActionStateDamage_C_Enter::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Enter, Temp_bool_Variable_6) == 0x000015, "Member 'BP_PlayerActionStateDamage_C_Enter::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Enter, Temp_bool_Variable_7) == 0x000016, "Member 'BP_PlayerActionStateDamage_C_Enter::Temp_bool_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Enter, Temp_bool_Variable_8) == 0x000017, "Member 'BP_PlayerActionStateDamage_C_Enter::Temp_bool_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Enter, Temp_bool_Variable_9) == 0x000018, "Member 'BP_PlayerActionStateDamage_C_Enter::Temp_bool_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Enter, Temp_bool_Variable_10) == 0x000019, "Member 'BP_PlayerActionStateDamage_C_Enter::Temp_bool_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Enter, Temp_bool_Variable_11) == 0x00001A, "Member 'BP_PlayerActionStateDamage_C_Enter::Temp_bool_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Enter, Temp_bool_Variable_12) == 0x00001B, "Member 'BP_PlayerActionStateDamage_C_Enter::Temp_bool_Variable_12' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Enter, Temp_bool_Variable_13) == 0x00001C, "Member 'BP_PlayerActionStateDamage_C_Enter::Temp_bool_Variable_13' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Enter, Temp_bool_Variable_14) == 0x00001D, "Member 'BP_PlayerActionStateDamage_C_Enter::Temp_bool_Variable_14' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Enter, Temp_bool_Variable_15) == 0x00001E, "Member 'BP_PlayerActionStateDamage_C_Enter::Temp_bool_Variable_15' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Enter, Temp_bool_Variable_16) == 0x00001F, "Member 'BP_PlayerActionStateDamage_C_Enter::Temp_bool_Variable_16' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Enter, Temp_bool_Variable_17) == 0x000020, "Member 'BP_PlayerActionStateDamage_C_Enter::Temp_bool_Variable_17' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Enter, K2Node_SwitchEnum_CmpSuccess) == 0x000021, "Member 'BP_PlayerActionStateDamage_C_Enter::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Enter, CallFunc_IsBadStatusElectric_self_CastInput) == 0x000028, "Member 'BP_PlayerActionStateDamage_C_Enter::CallFunc_IsBadStatusElectric_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Enter, CallFunc_IsBadStatusElectric_bBadStatus) == 0x000038, "Member 'BP_PlayerActionStateDamage_C_Enter::CallFunc_IsBadStatusElectric_bBadStatus' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Enter, CallFunc_IsBadStatusElectric_self_CastInput_1) == 0x000040, "Member 'BP_PlayerActionStateDamage_C_Enter::CallFunc_IsBadStatusElectric_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Enter, CallFunc_IsBadStatusElectric_bBadStatus_1) == 0x000050, "Member 'BP_PlayerActionStateDamage_C_Enter::CallFunc_IsBadStatusElectric_bBadStatus_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Enter, CallFunc_GetDownType_DownType) == 0x000051, "Member 'BP_PlayerActionStateDamage_C_Enter::CallFunc_GetDownType_DownType' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Enter, CallFunc_GetClearGetterManager_ClearGetterManager) == 0x000058, "Member 'BP_PlayerActionStateDamage_C_Enter::CallFunc_GetClearGetterManager_ClearGetterManager' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Enter, Temp_bool_Variable_18) == 0x000060, "Member 'BP_PlayerActionStateDamage_C_Enter::Temp_bool_Variable_18' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Enter, K2Node_DynamicCast_AsBPI_Ch_0200) == 0x000068, "Member 'BP_PlayerActionStateDamage_C_Enter::K2Node_DynamicCast_AsBPI_Ch_0200' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Enter, K2Node_DynamicCast_bSuccess) == 0x000078, "Member 'BP_PlayerActionStateDamage_C_Enter::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Enter, CallFunc_GetGameSystemManager_Manager) == 0x000080, "Member 'BP_PlayerActionStateDamage_C_Enter::CallFunc_GetGameSystemManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Enter, CallFunc_DamageInterruptWeaponAnim_bDummy) == 0x000088, "Member 'BP_PlayerActionStateDamage_C_Enter::CallFunc_DamageInterruptWeaponAnim_bDummy' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Enter, Temp_bool_Variable_19) == 0x000089, "Member 'BP_PlayerActionStateDamage_C_Enter::Temp_bool_Variable_19' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Enter, CallFunc_IsEnemyPlayer_self_CastInput) == 0x000090, "Member 'BP_PlayerActionStateDamage_C_Enter::CallFunc_IsEnemyPlayer_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Enter, CallFunc_IsEnemyPlayer_bEnemyPlayer) == 0x0000A0, "Member 'BP_PlayerActionStateDamage_C_Enter::CallFunc_IsEnemyPlayer_bEnemyPlayer' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Enter, Temp_bool_Variable_20) == 0x0000A1, "Member 'BP_PlayerActionStateDamage_C_Enter::Temp_bool_Variable_20' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Enter, Temp_bool_Variable_21) == 0x0000A2, "Member 'BP_PlayerActionStateDamage_C_Enter::Temp_bool_Variable_21' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Enter, Temp_bool_Variable_22) == 0x0000A3, "Member 'BP_PlayerActionStateDamage_C_Enter::Temp_bool_Variable_22' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Enter, CallFunc_NotEqual_IntInt_ReturnValue) == 0x0000A4, "Member 'BP_PlayerActionStateDamage_C_Enter::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Enter, CallFunc_NotEqual_IntInt_ReturnValue_1) == 0x0000A5, "Member 'BP_PlayerActionStateDamage_C_Enter::CallFunc_NotEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Enter, CallFunc_NotEqual_IntInt_ReturnValue_2) == 0x0000A6, "Member 'BP_PlayerActionStateDamage_C_Enter::CallFunc_NotEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Enter, Temp_bool_Variable_23) == 0x0000A7, "Member 'BP_PlayerActionStateDamage_C_Enter::Temp_bool_Variable_23' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Enter, CallFunc_IsValid_ReturnValue) == 0x0000A8, "Member 'BP_PlayerActionStateDamage_C_Enter::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Enter, K2Node_SwitchEnum_CmpSuccess_1) == 0x0000A9, "Member 'BP_PlayerActionStateDamage_C_Enter::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Enter, CallFunc_IsTransitionDown_bTransition) == 0x0000AA, "Member 'BP_PlayerActionStateDamage_C_Enter::CallFunc_IsTransitionDown_bTransition' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Enter, Temp_bool_Variable_24) == 0x0000AB, "Member 'BP_PlayerActionStateDamage_C_Enter::Temp_bool_Variable_24' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Enter, Temp_bool_Variable_25) == 0x0000AC, "Member 'BP_PlayerActionStateDamage_C_Enter::Temp_bool_Variable_25' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Enter, CallFunc_IsDeadReaction_bDead) == 0x0000AD, "Member 'BP_PlayerActionStateDamage_C_Enter::CallFunc_IsDeadReaction_bDead' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Enter, Temp_bool_Variable_26) == 0x0000AE, "Member 'BP_PlayerActionStateDamage_C_Enter::Temp_bool_Variable_26' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Enter, CallFunc_IsValid_ReturnValue_1) == 0x0000AF, "Member 'BP_PlayerActionStateDamage_C_Enter::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Enter, Temp_bool_Variable_27) == 0x0000B0, "Member 'BP_PlayerActionStateDamage_C_Enter::Temp_bool_Variable_27' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Enter, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000B1, "Member 'BP_PlayerActionStateDamage_C_Enter::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Enter, CallFunc_IsValid_ReturnValue_2) == 0x0000B2, "Member 'BP_PlayerActionStateDamage_C_Enter::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Enter, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0000B3, "Member 'BP_PlayerActionStateDamage_C_Enter::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Enter, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x0000B4, "Member 'BP_PlayerActionStateDamage_C_Enter::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Enter, CallFunc_BooleanOR_ReturnValue) == 0x0000B5, "Member 'BP_PlayerActionStateDamage_C_Enter::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Enter, CallFunc_GetBattleManager_BattleManager) == 0x0000B8, "Member 'BP_PlayerActionStateDamage_C_Enter::CallFunc_GetBattleManager_BattleManager' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Enter, CallFunc_BooleanOR_ReturnValue_1) == 0x0000C0, "Member 'BP_PlayerActionStateDamage_C_Enter::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Enter, CallFunc_IsValid_ReturnValue_3) == 0x0000C1, "Member 'BP_PlayerActionStateDamage_C_Enter::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Enter, CallFunc_GetPlayerDamageType_HitStopType) == 0x0000C2, "Member 'BP_PlayerActionStateDamage_C_Enter::CallFunc_GetPlayerDamageType_HitStopType' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Enter, CallFunc_IsValid_ReturnValue_4) == 0x0000C3, "Member 'BP_PlayerActionStateDamage_C_Enter::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Enter, Temp_byte_Variable) == 0x0000C4, "Member 'BP_PlayerActionStateDamage_C_Enter::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Enter, K2Node_DynamicCast_AsBPI_Player_Interface) == 0x0000C8, "Member 'BP_PlayerActionStateDamage_C_Enter::K2Node_DynamicCast_AsBPI_Player_Interface' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Enter, K2Node_DynamicCast_bSuccess_1) == 0x0000D8, "Member 'BP_PlayerActionStateDamage_C_Enter::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Enter, K2Node_DynamicCast_AsBPI_Player_Interface_1) == 0x0000E0, "Member 'BP_PlayerActionStateDamage_C_Enter::K2Node_DynamicCast_AsBPI_Player_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Enter, K2Node_DynamicCast_bSuccess_2) == 0x0000F0, "Member 'BP_PlayerActionStateDamage_C_Enter::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Enter, CallFunc_GetEnpcComp_ReturnComp) == 0x0000F8, "Member 'BP_PlayerActionStateDamage_C_Enter::CallFunc_GetEnpcComp_ReturnComp' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Enter, CallFunc_IsEnemyPlayer_bEnemyPlayer_1) == 0x000100, "Member 'BP_PlayerActionStateDamage_C_Enter::CallFunc_IsEnemyPlayer_bEnemyPlayer_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Enter, CallFunc_IsValid_ReturnValue_5) == 0x000101, "Member 'BP_PlayerActionStateDamage_C_Enter::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Enter, CallFunc_IsEnable_ReturnValue) == 0x000102, "Member 'BP_PlayerActionStateDamage_C_Enter::CallFunc_IsEnable_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Enter, CallFunc_GetElapsedTime_ReturnValue) == 0x000104, "Member 'BP_PlayerActionStateDamage_C_Enter::CallFunc_GetElapsedTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Enter, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000108, "Member 'BP_PlayerActionStateDamage_C_Enter::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Enter, K2Node_Select_Default) == 0x000109, "Member 'BP_PlayerActionStateDamage_C_Enter::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Enter, CallFunc_SetInvalidDamage_Dummy) == 0x00010A, "Member 'BP_PlayerActionStateDamage_C_Enter::CallFunc_SetInvalidDamage_Dummy' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Enter, CallFunc_Not_PreBool_ReturnValue) == 0x00010B, "Member 'BP_PlayerActionStateDamage_C_Enter::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Enter, CallFunc_SetFootIKEnable_Dummy) == 0x00010C, "Member 'BP_PlayerActionStateDamage_C_Enter::CallFunc_SetFootIKEnable_Dummy' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Enter, CallFunc_RequestHologramAnim_bHologram) == 0x00010D, "Member 'BP_PlayerActionStateDamage_C_Enter::CallFunc_RequestHologramAnim_bHologram' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Enter, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000110, "Member 'BP_PlayerActionStateDamage_C_Enter::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Enter, CallFunc_Subtract_VectorVector_ReturnValue) == 0x00011C, "Member 'BP_PlayerActionStateDamage_C_Enter::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Enter, CallFunc_BreakVector_X) == 0x000128, "Member 'BP_PlayerActionStateDamage_C_Enter::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Enter, CallFunc_BreakVector_Y) == 0x00012C, "Member 'BP_PlayerActionStateDamage_C_Enter::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Enter, CallFunc_BreakVector_Z) == 0x000130, "Member 'BP_PlayerActionStateDamage_C_Enter::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Enter, CallFunc_MakeVector_ReturnValue) == 0x000134, "Member 'BP_PlayerActionStateDamage_C_Enter::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Enter, CallFunc_Normal_ReturnValue) == 0x000140, "Member 'BP_PlayerActionStateDamage_C_Enter::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Enter, CallFunc_MakeRotFromX_ReturnValue) == 0x00014C, "Member 'BP_PlayerActionStateDamage_C_Enter::CallFunc_MakeRotFromX_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Enter, CallFunc_K2_SetActorRotation_ReturnValue) == 0x000158, "Member 'BP_PlayerActionStateDamage_C_Enter::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Enter, CallFunc_Conv_ByteToInt_ReturnValue) == 0x00015C, "Member 'BP_PlayerActionStateDamage_C_Enter::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Enter, CallFunc_GetDamageReaction_ReactionType) == 0x000160, "Member 'BP_PlayerActionStateDamage_C_Enter::CallFunc_GetDamageReaction_ReactionType' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Enter, CallFunc_DamageReaction_Dummy) == 0x000161, "Member 'BP_PlayerActionStateDamage_C_Enter::CallFunc_DamageReaction_Dummy' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Enter, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000164, "Member 'BP_PlayerActionStateDamage_C_Enter::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Enter, CallFunc_CopyPlayerOff_bDummy) == 0x000168, "Member 'BP_PlayerActionStateDamage_C_Enter::CallFunc_CopyPlayerOff_bDummy' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Enter, K2Node_SwitchEnum_CmpSuccess_2) == 0x000169, "Member 'BP_PlayerActionStateDamage_C_Enter::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Enter, CallFunc_SetBattleReady_bDummy) == 0x00016A, "Member 'BP_PlayerActionStateDamage_C_Enter::CallFunc_SetBattleReady_bDummy' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Enter, K2Node_DynamicCast_AsRs_Battle_Hero) == 0x000170, "Member 'BP_PlayerActionStateDamage_C_Enter::K2Node_DynamicCast_AsRs_Battle_Hero' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Enter, K2Node_DynamicCast_bSuccess_3) == 0x000178, "Member 'BP_PlayerActionStateDamage_C_Enter::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Enter, CallFunc_SetLookAtEnable_self_CastInput) == 0x000180, "Member 'BP_PlayerActionStateDamage_C_Enter::CallFunc_SetLookAtEnable_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Enter, CallFunc_SetLookAtEnable_bResult) == 0x000190, "Member 'BP_PlayerActionStateDamage_C_Enter::CallFunc_SetLookAtEnable_bResult' has a wrong offset!");

// Function BP_PlayerActionStateDamage.BP_PlayerActionStateDamage_C.Update
// 0x000C (0x000C - 0x0000)
struct BP_PlayerActionStateDamage_C_Update final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsExistAnimRequest_ReturnValue;           // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsASAnimPlayEnd_ReturnValue;              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9878[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Update_ReturnValue;                       // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerActionStateDamage_C_Update) == 0x000004, "Wrong alignment on BP_PlayerActionStateDamage_C_Update");
static_assert(sizeof(BP_PlayerActionStateDamage_C_Update) == 0x00000C, "Wrong size on BP_PlayerActionStateDamage_C_Update");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Update, ReturnValue) == 0x000000, "Member 'BP_PlayerActionStateDamage_C_Update::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Update, CallFunc_IsExistAnimRequest_ReturnValue) == 0x000004, "Member 'BP_PlayerActionStateDamage_C_Update::CallFunc_IsExistAnimRequest_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Update, CallFunc_IsASAnimPlayEnd_ReturnValue) == 0x000005, "Member 'BP_PlayerActionStateDamage_C_Update::CallFunc_IsASAnimPlayEnd_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Update, CallFunc_Update_ReturnValue) == 0x000008, "Member 'BP_PlayerActionStateDamage_C_Update::CallFunc_Update_ReturnValue' has a wrong offset!");

// Function BP_PlayerActionStateDamage.BP_PlayerActionStateDamage_C.Transition
// 0x0060 (0x0060 - 0x0000)
struct BP_PlayerActionStateDamage_C_Transition final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          LTransition;                                       // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerDownType                               Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_1;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9879[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerDamageKind                             Temp_byte_Variable_1;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_987A[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_1;             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerDownType                               Temp_byte_Variable_2;                              // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerDownType                               Temp_byte_Variable_3;                              // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerDownType                               Temp_byte_Variable_4;                              // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerDownType                               Temp_byte_Variable_5;                              // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerDownType                               Temp_byte_Variable_6;                              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerDownType                               Temp_byte_Variable_7;                              // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerDownType                               Temp_byte_Variable_8;                              // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerDownType                               Temp_byte_Variable_9;                              // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerDownType                               Temp_byte_Variable_10;                             // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerDownType                               Temp_byte_Variable_11;                             // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerDownType                               Temp_byte_Variable_12;                             // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerDownType                               Temp_byte_Variable_13;                             // 0x001F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerDownType                               Temp_byte_Variable_14;                             // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerDownType                               Temp_byte_Variable_15;                             // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerDownType                               Temp_byte_Variable_16;                             // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerDownType                               Temp_byte_Variable_17;                             // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerDownType                               Temp_byte_Variable_18;                             // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerDownType                               Temp_byte_Variable_19;                             // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerDownType                               Temp_byte_Variable_20;                             // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerDownType                               Temp_byte_Variable_21;                             // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerDownType                               Temp_byte_Variable_22;                             // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerDownType                               Temp_byte_Variable_23;                             // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerDownType                               Temp_byte_Variable_24;                             // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerDownType                               Temp_byte_Variable_25;                             // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerDownType                               Temp_byte_Variable_26;                             // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerDownType                               Temp_byte_Variable_27;                             // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerDownType                               Temp_byte_Variable_28;                             // 0x002F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerDownType                               Temp_byte_Variable_29;                             // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerDownType                               Temp_byte_Variable_30;                             // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_987B[0x6];                                     // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CharacterParamater_C> CallFunc_IsBadStatusElectric_self_CastInput;       // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsBadStatusElectric_bBadStatus;           // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerDownType                               K2Node_Select_Default;                             // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActionStatus_Result;                    // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerBrainFieldState                        CallFunc_GetBrainFieldState_ReturnValue;           // 0x004B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x004E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerDownType                               K2Node_Select_Default_1;                           // 0x004F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsTransitionDown_bTransition;             // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Transition_ReturnValue;                   // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerDownType                               K2Node_Select_Default_2;                           // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_987C[0x1];                                     // 0x0053(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_2;             // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActionStatus_Result_1;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerActionStateDamage_C_Transition) == 0x000008, "Wrong alignment on BP_PlayerActionStateDamage_C_Transition");
static_assert(sizeof(BP_PlayerActionStateDamage_C_Transition) == 0x000060, "Wrong size on BP_PlayerActionStateDamage_C_Transition");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Transition, ReturnValue) == 0x000000, "Member 'BP_PlayerActionStateDamage_C_Transition::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Transition, LTransition) == 0x000001, "Member 'BP_PlayerActionStateDamage_C_Transition::LTransition' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Transition, Temp_byte_Variable) == 0x000002, "Member 'BP_PlayerActionStateDamage_C_Transition::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Transition, CallFunc_MakeLiteralByte_ReturnValue) == 0x000003, "Member 'BP_PlayerActionStateDamage_C_Transition::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Transition, CallFunc_MakeLiteralByte_ReturnValue_1) == 0x000004, "Member 'BP_PlayerActionStateDamage_C_Transition::CallFunc_MakeLiteralByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Transition, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000008, "Member 'BP_PlayerActionStateDamage_C_Transition::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Transition, Temp_byte_Variable_1) == 0x00000C, "Member 'BP_PlayerActionStateDamage_C_Transition::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Transition, CallFunc_Conv_ByteToInt_ReturnValue_1) == 0x000010, "Member 'BP_PlayerActionStateDamage_C_Transition::CallFunc_Conv_ByteToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Transition, Temp_byte_Variable_2) == 0x000014, "Member 'BP_PlayerActionStateDamage_C_Transition::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Transition, Temp_byte_Variable_3) == 0x000015, "Member 'BP_PlayerActionStateDamage_C_Transition::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Transition, Temp_byte_Variable_4) == 0x000016, "Member 'BP_PlayerActionStateDamage_C_Transition::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Transition, Temp_byte_Variable_5) == 0x000017, "Member 'BP_PlayerActionStateDamage_C_Transition::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Transition, Temp_byte_Variable_6) == 0x000018, "Member 'BP_PlayerActionStateDamage_C_Transition::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Transition, Temp_byte_Variable_7) == 0x000019, "Member 'BP_PlayerActionStateDamage_C_Transition::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Transition, Temp_byte_Variable_8) == 0x00001A, "Member 'BP_PlayerActionStateDamage_C_Transition::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Transition, Temp_byte_Variable_9) == 0x00001B, "Member 'BP_PlayerActionStateDamage_C_Transition::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Transition, Temp_byte_Variable_10) == 0x00001C, "Member 'BP_PlayerActionStateDamage_C_Transition::Temp_byte_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Transition, Temp_byte_Variable_11) == 0x00001D, "Member 'BP_PlayerActionStateDamage_C_Transition::Temp_byte_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Transition, Temp_byte_Variable_12) == 0x00001E, "Member 'BP_PlayerActionStateDamage_C_Transition::Temp_byte_Variable_12' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Transition, Temp_byte_Variable_13) == 0x00001F, "Member 'BP_PlayerActionStateDamage_C_Transition::Temp_byte_Variable_13' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Transition, Temp_byte_Variable_14) == 0x000020, "Member 'BP_PlayerActionStateDamage_C_Transition::Temp_byte_Variable_14' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Transition, Temp_byte_Variable_15) == 0x000021, "Member 'BP_PlayerActionStateDamage_C_Transition::Temp_byte_Variable_15' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Transition, Temp_byte_Variable_16) == 0x000022, "Member 'BP_PlayerActionStateDamage_C_Transition::Temp_byte_Variable_16' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Transition, Temp_byte_Variable_17) == 0x000023, "Member 'BP_PlayerActionStateDamage_C_Transition::Temp_byte_Variable_17' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Transition, Temp_byte_Variable_18) == 0x000024, "Member 'BP_PlayerActionStateDamage_C_Transition::Temp_byte_Variable_18' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Transition, Temp_byte_Variable_19) == 0x000025, "Member 'BP_PlayerActionStateDamage_C_Transition::Temp_byte_Variable_19' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Transition, Temp_byte_Variable_20) == 0x000026, "Member 'BP_PlayerActionStateDamage_C_Transition::Temp_byte_Variable_20' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Transition, Temp_byte_Variable_21) == 0x000027, "Member 'BP_PlayerActionStateDamage_C_Transition::Temp_byte_Variable_21' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Transition, Temp_byte_Variable_22) == 0x000028, "Member 'BP_PlayerActionStateDamage_C_Transition::Temp_byte_Variable_22' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Transition, Temp_byte_Variable_23) == 0x000029, "Member 'BP_PlayerActionStateDamage_C_Transition::Temp_byte_Variable_23' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Transition, Temp_byte_Variable_24) == 0x00002A, "Member 'BP_PlayerActionStateDamage_C_Transition::Temp_byte_Variable_24' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Transition, Temp_byte_Variable_25) == 0x00002B, "Member 'BP_PlayerActionStateDamage_C_Transition::Temp_byte_Variable_25' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Transition, Temp_byte_Variable_26) == 0x00002C, "Member 'BP_PlayerActionStateDamage_C_Transition::Temp_byte_Variable_26' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Transition, Temp_byte_Variable_27) == 0x00002D, "Member 'BP_PlayerActionStateDamage_C_Transition::Temp_byte_Variable_27' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Transition, Temp_bool_Variable) == 0x00002E, "Member 'BP_PlayerActionStateDamage_C_Transition::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Transition, Temp_byte_Variable_28) == 0x00002F, "Member 'BP_PlayerActionStateDamage_C_Transition::Temp_byte_Variable_28' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Transition, Temp_byte_Variable_29) == 0x000030, "Member 'BP_PlayerActionStateDamage_C_Transition::Temp_byte_Variable_29' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Transition, Temp_byte_Variable_30) == 0x000031, "Member 'BP_PlayerActionStateDamage_C_Transition::Temp_byte_Variable_30' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Transition, CallFunc_IsBadStatusElectric_self_CastInput) == 0x000038, "Member 'BP_PlayerActionStateDamage_C_Transition::CallFunc_IsBadStatusElectric_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Transition, CallFunc_IsBadStatusElectric_bBadStatus) == 0x000048, "Member 'BP_PlayerActionStateDamage_C_Transition::CallFunc_IsBadStatusElectric_bBadStatus' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Transition, K2Node_Select_Default) == 0x000049, "Member 'BP_PlayerActionStateDamage_C_Transition::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Transition, CallFunc_IsActionStatus_Result) == 0x00004A, "Member 'BP_PlayerActionStateDamage_C_Transition::CallFunc_IsActionStatus_Result' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Transition, CallFunc_GetBrainFieldState_ReturnValue) == 0x00004B, "Member 'BP_PlayerActionStateDamage_C_Transition::CallFunc_GetBrainFieldState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Transition, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00004C, "Member 'BP_PlayerActionStateDamage_C_Transition::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Transition, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00004D, "Member 'BP_PlayerActionStateDamage_C_Transition::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Transition, Temp_bool_Variable_1) == 0x00004E, "Member 'BP_PlayerActionStateDamage_C_Transition::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Transition, K2Node_Select_Default_1) == 0x00004F, "Member 'BP_PlayerActionStateDamage_C_Transition::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Transition, CallFunc_IsTransitionDown_bTransition) == 0x000050, "Member 'BP_PlayerActionStateDamage_C_Transition::CallFunc_IsTransitionDown_bTransition' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Transition, CallFunc_Transition_ReturnValue) == 0x000051, "Member 'BP_PlayerActionStateDamage_C_Transition::CallFunc_Transition_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Transition, K2Node_Select_Default_2) == 0x000052, "Member 'BP_PlayerActionStateDamage_C_Transition::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Transition, CallFunc_Conv_ByteToInt_ReturnValue_2) == 0x000054, "Member 'BP_PlayerActionStateDamage_C_Transition::CallFunc_Conv_ByteToInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Transition, CallFunc_IsActionStatus_Result_1) == 0x000058, "Member 'BP_PlayerActionStateDamage_C_Transition::CallFunc_IsActionStatus_Result_1' has a wrong offset!");

// Function BP_PlayerActionStateDamage.BP_PlayerActionStateDamage_C.Exit
// 0x0048 (0x0048 - 0x0000)
struct BP_PlayerActionStateDamage_C_Exit final
{
public:
	int32                                         NextStateIndex;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Exit_ReturnValue;                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_987D[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IPlayerInterface>      CallFunc_IsActiveSAS_Copy_self_CastInput;          // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActiveSAS_Copy_ReturnValue;             // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_987E[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CopyPlayerOn_bDummy;                      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckAutoStealth_bSuccess;                // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetFootIKEnable_Dummy;                    // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetInvalidDamage_Dummy;                   // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x002F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_LookAtInterface_C> CallFunc_SetLookAtEnable_self_CastInput;           // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetLookAtEnable_bResult;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerActionStateDamage_C_Exit) == 0x000008, "Wrong alignment on BP_PlayerActionStateDamage_C_Exit");
static_assert(sizeof(BP_PlayerActionStateDamage_C_Exit) == 0x000048, "Wrong size on BP_PlayerActionStateDamage_C_Exit");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Exit, NextStateIndex) == 0x000000, "Member 'BP_PlayerActionStateDamage_C_Exit::NextStateIndex' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Exit, ReturnValue) == 0x000004, "Member 'BP_PlayerActionStateDamage_C_Exit::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Exit, CallFunc_Exit_ReturnValue) == 0x000008, "Member 'BP_PlayerActionStateDamage_C_Exit::CallFunc_Exit_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Exit, CallFunc_IsActiveSAS_Copy_self_CastInput) == 0x000010, "Member 'BP_PlayerActionStateDamage_C_Exit::CallFunc_IsActiveSAS_Copy_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Exit, CallFunc_IsActiveSAS_Copy_ReturnValue) == 0x000020, "Member 'BP_PlayerActionStateDamage_C_Exit::CallFunc_IsActiveSAS_Copy_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Exit, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000024, "Member 'BP_PlayerActionStateDamage_C_Exit::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Exit, K2Node_SwitchEnum_CmpSuccess) == 0x000028, "Member 'BP_PlayerActionStateDamage_C_Exit::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Exit, CallFunc_CopyPlayerOn_bDummy) == 0x000029, "Member 'BP_PlayerActionStateDamage_C_Exit::CallFunc_CopyPlayerOn_bDummy' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Exit, CallFunc_CheckAutoStealth_bSuccess) == 0x00002A, "Member 'BP_PlayerActionStateDamage_C_Exit::CallFunc_CheckAutoStealth_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Exit, CallFunc_SetFootIKEnable_Dummy) == 0x00002B, "Member 'BP_PlayerActionStateDamage_C_Exit::CallFunc_SetFootIKEnable_Dummy' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Exit, CallFunc_SetInvalidDamage_Dummy) == 0x00002C, "Member 'BP_PlayerActionStateDamage_C_Exit::CallFunc_SetInvalidDamage_Dummy' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Exit, CallFunc_Conv_IntToByte_ReturnValue) == 0x00002D, "Member 'BP_PlayerActionStateDamage_C_Exit::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Exit, CallFunc_GetValidValue_ReturnValue) == 0x00002E, "Member 'BP_PlayerActionStateDamage_C_Exit::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Exit, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x00002F, "Member 'BP_PlayerActionStateDamage_C_Exit::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Exit, CallFunc_SetLookAtEnable_self_CastInput) == 0x000030, "Member 'BP_PlayerActionStateDamage_C_Exit::CallFunc_SetLookAtEnable_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Exit, CallFunc_SetLookAtEnable_bResult) == 0x000040, "Member 'BP_PlayerActionStateDamage_C_Exit::CallFunc_SetLookAtEnable_bResult' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_Exit, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x000041, "Member 'BP_PlayerActionStateDamage_C_Exit::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");

// Function BP_PlayerActionStateDamage.BP_PlayerActionStateDamage_C.RequestHologramAnim
// 0x0318 (0x0318 - 0x0000)
struct BP_PlayerActionStateDamage_C_RequestHologramAnim final
{
public:
	bool                                          bHologram;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_987F[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHCHitResult                           LHitResult;                                        // 0x0008(0x01C0)(Edit, BlueprintVisible, ContainsInstancedReference)
	class ARSBattlePlayer_C*                      LCoverPlayer;                                      // 0x01C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LbHologram;                                        // 0x01D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayerInAerial_ReturnValue;             // 0x01D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9880[0x2];                                     // 0x01D2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x01D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EHCSkillExtraType>                     K2Node_MakeArray_Array;                            // 0x01E0(0x0010)(ReferenceParm, HasGetValueTypeHash)
	struct FHCSkillCommonInfo                     K2Node_MakeStruct_HCSkillCommonInfo;               // 0x01F0(0x00F0)()
	bool                                          Temp_bool_Variable;                                // 0x02E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x02E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerHologramAnimKind                       Temp_byte_Variable;                                // 0x02E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9881[0x5];                                     // 0x02E3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x02E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerID                                     CallFunc_GetBattleMemberPlayerID_ReturnValue;      // 0x02F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x02F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x02F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9882[0x5];                                     // 0x02F3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattlePlayer_C*                      CallFunc_GetRightPlayer_Player;                    // 0x02F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattlePlayer_C*                      CallFunc_GetLeftPlayer_Player;                     // 0x0300(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerID                                     CallFunc_GetBattleMemberPlayerID_ReturnValue_1;    // 0x0308(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0309(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerHologramAnimKind                       Temp_byte_Variable_1;                              // 0x030A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x030B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerHologramAnimKind                       K2Node_Select_Default;                             // 0x030C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x030D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9883[0x2];                                     // 0x030E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager_1;         // 0x0310(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerActionStateDamage_C_RequestHologramAnim) == 0x000008, "Wrong alignment on BP_PlayerActionStateDamage_C_RequestHologramAnim");
static_assert(sizeof(BP_PlayerActionStateDamage_C_RequestHologramAnim) == 0x000318, "Wrong size on BP_PlayerActionStateDamage_C_RequestHologramAnim");
static_assert(offsetof(BP_PlayerActionStateDamage_C_RequestHologramAnim, bHologram) == 0x000000, "Member 'BP_PlayerActionStateDamage_C_RequestHologramAnim::bHologram' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_RequestHologramAnim, LHitResult) == 0x000008, "Member 'BP_PlayerActionStateDamage_C_RequestHologramAnim::LHitResult' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_RequestHologramAnim, LCoverPlayer) == 0x0001C8, "Member 'BP_PlayerActionStateDamage_C_RequestHologramAnim::LCoverPlayer' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_RequestHologramAnim, LbHologram) == 0x0001D0, "Member 'BP_PlayerActionStateDamage_C_RequestHologramAnim::LbHologram' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_RequestHologramAnim, CallFunc_IsPlayerInAerial_ReturnValue) == 0x0001D1, "Member 'BP_PlayerActionStateDamage_C_RequestHologramAnim::CallFunc_IsPlayerInAerial_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_RequestHologramAnim, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0001D4, "Member 'BP_PlayerActionStateDamage_C_RequestHologramAnim::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_RequestHologramAnim, K2Node_MakeArray_Array) == 0x0001E0, "Member 'BP_PlayerActionStateDamage_C_RequestHologramAnim::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_RequestHologramAnim, K2Node_MakeStruct_HCSkillCommonInfo) == 0x0001F0, "Member 'BP_PlayerActionStateDamage_C_RequestHologramAnim::K2Node_MakeStruct_HCSkillCommonInfo' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_RequestHologramAnim, Temp_bool_Variable) == 0x0002E0, "Member 'BP_PlayerActionStateDamage_C_RequestHologramAnim::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_RequestHologramAnim, CallFunc_IsValid_ReturnValue) == 0x0002E1, "Member 'BP_PlayerActionStateDamage_C_RequestHologramAnim::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_RequestHologramAnim, Temp_byte_Variable) == 0x0002E2, "Member 'BP_PlayerActionStateDamage_C_RequestHologramAnim::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_RequestHologramAnim, CallFunc_GetPlayerManager_PlayerManager) == 0x0002E8, "Member 'BP_PlayerActionStateDamage_C_RequestHologramAnim::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_RequestHologramAnim, CallFunc_GetBattleMemberPlayerID_ReturnValue) == 0x0002F0, "Member 'BP_PlayerActionStateDamage_C_RequestHologramAnim::CallFunc_GetBattleMemberPlayerID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_RequestHologramAnim, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0002F1, "Member 'BP_PlayerActionStateDamage_C_RequestHologramAnim::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_RequestHologramAnim, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x0002F2, "Member 'BP_PlayerActionStateDamage_C_RequestHologramAnim::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_RequestHologramAnim, CallFunc_GetRightPlayer_Player) == 0x0002F8, "Member 'BP_PlayerActionStateDamage_C_RequestHologramAnim::CallFunc_GetRightPlayer_Player' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_RequestHologramAnim, CallFunc_GetLeftPlayer_Player) == 0x000300, "Member 'BP_PlayerActionStateDamage_C_RequestHologramAnim::CallFunc_GetLeftPlayer_Player' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_RequestHologramAnim, CallFunc_GetBattleMemberPlayerID_ReturnValue_1) == 0x000308, "Member 'BP_PlayerActionStateDamage_C_RequestHologramAnim::CallFunc_GetBattleMemberPlayerID_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_RequestHologramAnim, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000309, "Member 'BP_PlayerActionStateDamage_C_RequestHologramAnim::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_RequestHologramAnim, Temp_byte_Variable_1) == 0x00030A, "Member 'BP_PlayerActionStateDamage_C_RequestHologramAnim::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_RequestHologramAnim, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x00030B, "Member 'BP_PlayerActionStateDamage_C_RequestHologramAnim::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_RequestHologramAnim, K2Node_Select_Default) == 0x00030C, "Member 'BP_PlayerActionStateDamage_C_RequestHologramAnim::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_RequestHologramAnim, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x00030D, "Member 'BP_PlayerActionStateDamage_C_RequestHologramAnim::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_RequestHologramAnim, CallFunc_GetPlayerManager_PlayerManager_1) == 0x000310, "Member 'BP_PlayerActionStateDamage_C_RequestHologramAnim::CallFunc_GetPlayerManager_PlayerManager_1' has a wrong offset!");

// Function BP_PlayerActionStateDamage.BP_PlayerActionStateDamage_C.IsDeadReaction
// 0x001F (0x001F - 0x0000)
struct BP_PlayerActionStateDamage_C_IsDeadReaction final
{
public:
	bool                                          bDead;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerDamageKind                             Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_3;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_4;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_5;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_6;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_7;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_8;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_9;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_10;                             // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_11;                             // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_12;                             // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_13;                             // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_14;                             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_15;                             // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_16;                             // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_17;                             // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_18;                             // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_19;                             // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_20;                             // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_21;                             // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_22;                             // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_23;                             // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_24;                             // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_25;                             // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_26;                             // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_27;                             // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default;                             // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerActionStateDamage_C_IsDeadReaction) == 0x000001, "Wrong alignment on BP_PlayerActionStateDamage_C_IsDeadReaction");
static_assert(sizeof(BP_PlayerActionStateDamage_C_IsDeadReaction) == 0x00001F, "Wrong size on BP_PlayerActionStateDamage_C_IsDeadReaction");
static_assert(offsetof(BP_PlayerActionStateDamage_C_IsDeadReaction, bDead) == 0x000000, "Member 'BP_PlayerActionStateDamage_C_IsDeadReaction::bDead' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_IsDeadReaction, Temp_byte_Variable) == 0x000001, "Member 'BP_PlayerActionStateDamage_C_IsDeadReaction::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_IsDeadReaction, Temp_bool_Variable) == 0x000002, "Member 'BP_PlayerActionStateDamage_C_IsDeadReaction::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_IsDeadReaction, Temp_bool_Variable_1) == 0x000003, "Member 'BP_PlayerActionStateDamage_C_IsDeadReaction::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_IsDeadReaction, Temp_bool_Variable_2) == 0x000004, "Member 'BP_PlayerActionStateDamage_C_IsDeadReaction::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_IsDeadReaction, Temp_bool_Variable_3) == 0x000005, "Member 'BP_PlayerActionStateDamage_C_IsDeadReaction::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_IsDeadReaction, Temp_bool_Variable_4) == 0x000006, "Member 'BP_PlayerActionStateDamage_C_IsDeadReaction::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_IsDeadReaction, Temp_bool_Variable_5) == 0x000007, "Member 'BP_PlayerActionStateDamage_C_IsDeadReaction::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_IsDeadReaction, Temp_bool_Variable_6) == 0x000008, "Member 'BP_PlayerActionStateDamage_C_IsDeadReaction::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_IsDeadReaction, Temp_bool_Variable_7) == 0x000009, "Member 'BP_PlayerActionStateDamage_C_IsDeadReaction::Temp_bool_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_IsDeadReaction, Temp_bool_Variable_8) == 0x00000A, "Member 'BP_PlayerActionStateDamage_C_IsDeadReaction::Temp_bool_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_IsDeadReaction, Temp_bool_Variable_9) == 0x00000B, "Member 'BP_PlayerActionStateDamage_C_IsDeadReaction::Temp_bool_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_IsDeadReaction, Temp_bool_Variable_10) == 0x00000C, "Member 'BP_PlayerActionStateDamage_C_IsDeadReaction::Temp_bool_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_IsDeadReaction, Temp_bool_Variable_11) == 0x00000D, "Member 'BP_PlayerActionStateDamage_C_IsDeadReaction::Temp_bool_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_IsDeadReaction, Temp_bool_Variable_12) == 0x00000E, "Member 'BP_PlayerActionStateDamage_C_IsDeadReaction::Temp_bool_Variable_12' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_IsDeadReaction, Temp_bool_Variable_13) == 0x00000F, "Member 'BP_PlayerActionStateDamage_C_IsDeadReaction::Temp_bool_Variable_13' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_IsDeadReaction, Temp_bool_Variable_14) == 0x000010, "Member 'BP_PlayerActionStateDamage_C_IsDeadReaction::Temp_bool_Variable_14' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_IsDeadReaction, Temp_bool_Variable_15) == 0x000011, "Member 'BP_PlayerActionStateDamage_C_IsDeadReaction::Temp_bool_Variable_15' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_IsDeadReaction, Temp_bool_Variable_16) == 0x000012, "Member 'BP_PlayerActionStateDamage_C_IsDeadReaction::Temp_bool_Variable_16' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_IsDeadReaction, Temp_bool_Variable_17) == 0x000013, "Member 'BP_PlayerActionStateDamage_C_IsDeadReaction::Temp_bool_Variable_17' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_IsDeadReaction, Temp_bool_Variable_18) == 0x000014, "Member 'BP_PlayerActionStateDamage_C_IsDeadReaction::Temp_bool_Variable_18' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_IsDeadReaction, Temp_bool_Variable_19) == 0x000015, "Member 'BP_PlayerActionStateDamage_C_IsDeadReaction::Temp_bool_Variable_19' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_IsDeadReaction, Temp_bool_Variable_20) == 0x000016, "Member 'BP_PlayerActionStateDamage_C_IsDeadReaction::Temp_bool_Variable_20' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_IsDeadReaction, Temp_bool_Variable_21) == 0x000017, "Member 'BP_PlayerActionStateDamage_C_IsDeadReaction::Temp_bool_Variable_21' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_IsDeadReaction, Temp_bool_Variable_22) == 0x000018, "Member 'BP_PlayerActionStateDamage_C_IsDeadReaction::Temp_bool_Variable_22' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_IsDeadReaction, Temp_bool_Variable_23) == 0x000019, "Member 'BP_PlayerActionStateDamage_C_IsDeadReaction::Temp_bool_Variable_23' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_IsDeadReaction, Temp_bool_Variable_24) == 0x00001A, "Member 'BP_PlayerActionStateDamage_C_IsDeadReaction::Temp_bool_Variable_24' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_IsDeadReaction, Temp_bool_Variable_25) == 0x00001B, "Member 'BP_PlayerActionStateDamage_C_IsDeadReaction::Temp_bool_Variable_25' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_IsDeadReaction, Temp_bool_Variable_26) == 0x00001C, "Member 'BP_PlayerActionStateDamage_C_IsDeadReaction::Temp_bool_Variable_26' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_IsDeadReaction, Temp_bool_Variable_27) == 0x00001D, "Member 'BP_PlayerActionStateDamage_C_IsDeadReaction::Temp_bool_Variable_27' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_IsDeadReaction, K2Node_Select_Default) == 0x00001E, "Member 'BP_PlayerActionStateDamage_C_IsDeadReaction::K2Node_Select_Default' has a wrong offset!");

// Function BP_PlayerActionStateDamage.BP_PlayerActionStateDamage_C.CheckHologramAttack
// 0x0038 (0x0038 - 0x0000)
struct BP_PlayerActionStateDamage_C_CheckHologramAttack final
{
public:
	EPlayerDamageKind                             Kind;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9884[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9885[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager_1;         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_PlayerInterface_C> CallFunc_IsEnemyPlayer_self_CastInput;             // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnemyPlayer_bEnemyPlayer;               // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerActionStateDamage_C_CheckHologramAttack) == 0x000008, "Wrong alignment on BP_PlayerActionStateDamage_C_CheckHologramAttack");
static_assert(sizeof(BP_PlayerActionStateDamage_C_CheckHologramAttack) == 0x000038, "Wrong size on BP_PlayerActionStateDamage_C_CheckHologramAttack");
static_assert(offsetof(BP_PlayerActionStateDamage_C_CheckHologramAttack, Kind) == 0x000000, "Member 'BP_PlayerActionStateDamage_C_CheckHologramAttack::Kind' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_CheckHologramAttack, CallFunc_GetPlayerManager_PlayerManager) == 0x000008, "Member 'BP_PlayerActionStateDamage_C_CheckHologramAttack::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_CheckHologramAttack, K2Node_SwitchEnum_CmpSuccess) == 0x000010, "Member 'BP_PlayerActionStateDamage_C_CheckHologramAttack::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_CheckHologramAttack, CallFunc_GetPlayerManager_PlayerManager_1) == 0x000018, "Member 'BP_PlayerActionStateDamage_C_CheckHologramAttack::CallFunc_GetPlayerManager_PlayerManager_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_CheckHologramAttack, CallFunc_IsEnemyPlayer_self_CastInput) == 0x000020, "Member 'BP_PlayerActionStateDamage_C_CheckHologramAttack::CallFunc_IsEnemyPlayer_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_CheckHologramAttack, CallFunc_IsEnemyPlayer_bEnemyPlayer) == 0x000030, "Member 'BP_PlayerActionStateDamage_C_CheckHologramAttack::CallFunc_IsEnemyPlayer_bEnemyPlayer' has a wrong offset!");

// Function BP_PlayerActionStateDamage.BP_PlayerActionStateDamage_C.VibrationUI
// 0x0028 (0x0028 - 0x0000)
struct BP_PlayerActionStateDamage_C_VibrationUI final
{
public:
	EPlayerDamageKind                             Kind;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9886[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUDMainGame_C*                         CallFunc_GetHUDMainGame_HUDMainGame;               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_PlayDamageEffect_ReturnValue;             // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsControlAI_bAI;                          // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9887[0x5];                                     // 0x0013(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUDMainGame_C*                         CallFunc_GetHUDMainGame_HUDMainGame_1;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_PlayDamageEffect_ReturnValue_1;           // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerActionStateDamage_C_VibrationUI) == 0x000008, "Wrong alignment on BP_PlayerActionStateDamage_C_VibrationUI");
static_assert(sizeof(BP_PlayerActionStateDamage_C_VibrationUI) == 0x000028, "Wrong size on BP_PlayerActionStateDamage_C_VibrationUI");
static_assert(offsetof(BP_PlayerActionStateDamage_C_VibrationUI, Kind) == 0x000000, "Member 'BP_PlayerActionStateDamage_C_VibrationUI::Kind' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_VibrationUI, CallFunc_GetHUDMainGame_HUDMainGame) == 0x000008, "Member 'BP_PlayerActionStateDamage_C_VibrationUI::CallFunc_GetHUDMainGame_HUDMainGame' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_VibrationUI, K2Node_SwitchEnum_CmpSuccess) == 0x000010, "Member 'BP_PlayerActionStateDamage_C_VibrationUI::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_VibrationUI, CallFunc_PlayDamageEffect_ReturnValue) == 0x000011, "Member 'BP_PlayerActionStateDamage_C_VibrationUI::CallFunc_PlayDamageEffect_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_VibrationUI, CallFunc_IsControlAI_bAI) == 0x000012, "Member 'BP_PlayerActionStateDamage_C_VibrationUI::CallFunc_IsControlAI_bAI' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_VibrationUI, CallFunc_GetHUDMainGame_HUDMainGame_1) == 0x000018, "Member 'BP_PlayerActionStateDamage_C_VibrationUI::CallFunc_GetHUDMainGame_HUDMainGame_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_VibrationUI, CallFunc_PlayDamageEffect_ReturnValue_1) == 0x000020, "Member 'BP_PlayerActionStateDamage_C_VibrationUI::CallFunc_PlayDamageEffect_ReturnValue_1' has a wrong offset!");

// Function BP_PlayerActionStateDamage.BP_PlayerActionStateDamage_C.GetDownType
// 0x0040 (0x0040 - 0x0000)
struct BP_PlayerActionStateDamage_C_GetDownType final
{
public:
	EPlayerDownType                               DownType;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerDownType                               Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerDownType                               Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerDownType                               Temp_byte_Variable_2;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerDownType                               Temp_byte_Variable_3;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerDamageKind                             Temp_byte_Variable_4;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerDownType                               Temp_byte_Variable_5;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerDownType                               Temp_byte_Variable_6;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerDownType                               Temp_byte_Variable_7;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerDownType                               Temp_byte_Variable_8;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerDownType                               Temp_byte_Variable_9;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerDownType                               Temp_byte_Variable_10;                             // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerDownType                               Temp_byte_Variable_11;                             // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerDownType                               Temp_byte_Variable_12;                             // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerDownType                               Temp_byte_Variable_13;                             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerDownType                               Temp_byte_Variable_14;                             // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerDownType                               Temp_byte_Variable_15;                             // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerDownType                               Temp_byte_Variable_16;                             // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerDownType                               Temp_byte_Variable_17;                             // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerDownType                               Temp_byte_Variable_18;                             // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerDownType                               Temp_byte_Variable_19;                             // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerDownType                               Temp_byte_Variable_20;                             // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerDownType                               Temp_byte_Variable_21;                             // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerDownType                               Temp_byte_Variable_22;                             // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerDownType                               Temp_byte_Variable_23;                             // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerDownType                               Temp_byte_Variable_24;                             // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerDownType                               Temp_byte_Variable_25;                             // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerDownType                               Temp_byte_Variable_26;                             // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerDownType                               Temp_byte_Variable_27;                             // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerDownType                               Temp_byte_Variable_28;                             // 0x001F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerDownType                               Temp_byte_Variable_29;                             // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerDownType                               Temp_byte_Variable_30;                             // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9888[0x6];                                     // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CharacterParamater_C> CallFunc_IsBadStatusElectric_self_CastInput;       // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsBadStatusElectric_bBadStatus;           // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerDownType                               K2Node_Select_Default;                             // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerDownType                               K2Node_Select_Default_1;                           // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerDownType                               K2Node_Select_Default_2;                           // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerActionStateDamage_C_GetDownType) == 0x000008, "Wrong alignment on BP_PlayerActionStateDamage_C_GetDownType");
static_assert(sizeof(BP_PlayerActionStateDamage_C_GetDownType) == 0x000040, "Wrong size on BP_PlayerActionStateDamage_C_GetDownType");
static_assert(offsetof(BP_PlayerActionStateDamage_C_GetDownType, DownType) == 0x000000, "Member 'BP_PlayerActionStateDamage_C_GetDownType::DownType' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_GetDownType, Temp_bool_Variable) == 0x000001, "Member 'BP_PlayerActionStateDamage_C_GetDownType::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_GetDownType, Temp_byte_Variable) == 0x000002, "Member 'BP_PlayerActionStateDamage_C_GetDownType::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_GetDownType, Temp_byte_Variable_1) == 0x000003, "Member 'BP_PlayerActionStateDamage_C_GetDownType::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_GetDownType, Temp_bool_Variable_1) == 0x000004, "Member 'BP_PlayerActionStateDamage_C_GetDownType::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_GetDownType, Temp_byte_Variable_2) == 0x000005, "Member 'BP_PlayerActionStateDamage_C_GetDownType::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_GetDownType, Temp_byte_Variable_3) == 0x000006, "Member 'BP_PlayerActionStateDamage_C_GetDownType::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_GetDownType, Temp_byte_Variable_4) == 0x000007, "Member 'BP_PlayerActionStateDamage_C_GetDownType::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_GetDownType, Temp_byte_Variable_5) == 0x000008, "Member 'BP_PlayerActionStateDamage_C_GetDownType::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_GetDownType, Temp_byte_Variable_6) == 0x000009, "Member 'BP_PlayerActionStateDamage_C_GetDownType::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_GetDownType, Temp_byte_Variable_7) == 0x00000A, "Member 'BP_PlayerActionStateDamage_C_GetDownType::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_GetDownType, Temp_byte_Variable_8) == 0x00000B, "Member 'BP_PlayerActionStateDamage_C_GetDownType::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_GetDownType, Temp_byte_Variable_9) == 0x00000C, "Member 'BP_PlayerActionStateDamage_C_GetDownType::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_GetDownType, Temp_byte_Variable_10) == 0x00000D, "Member 'BP_PlayerActionStateDamage_C_GetDownType::Temp_byte_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_GetDownType, Temp_byte_Variable_11) == 0x00000E, "Member 'BP_PlayerActionStateDamage_C_GetDownType::Temp_byte_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_GetDownType, Temp_byte_Variable_12) == 0x00000F, "Member 'BP_PlayerActionStateDamage_C_GetDownType::Temp_byte_Variable_12' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_GetDownType, Temp_byte_Variable_13) == 0x000010, "Member 'BP_PlayerActionStateDamage_C_GetDownType::Temp_byte_Variable_13' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_GetDownType, Temp_byte_Variable_14) == 0x000011, "Member 'BP_PlayerActionStateDamage_C_GetDownType::Temp_byte_Variable_14' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_GetDownType, Temp_byte_Variable_15) == 0x000012, "Member 'BP_PlayerActionStateDamage_C_GetDownType::Temp_byte_Variable_15' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_GetDownType, Temp_byte_Variable_16) == 0x000013, "Member 'BP_PlayerActionStateDamage_C_GetDownType::Temp_byte_Variable_16' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_GetDownType, Temp_byte_Variable_17) == 0x000014, "Member 'BP_PlayerActionStateDamage_C_GetDownType::Temp_byte_Variable_17' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_GetDownType, Temp_byte_Variable_18) == 0x000015, "Member 'BP_PlayerActionStateDamage_C_GetDownType::Temp_byte_Variable_18' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_GetDownType, Temp_byte_Variable_19) == 0x000016, "Member 'BP_PlayerActionStateDamage_C_GetDownType::Temp_byte_Variable_19' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_GetDownType, Temp_byte_Variable_20) == 0x000017, "Member 'BP_PlayerActionStateDamage_C_GetDownType::Temp_byte_Variable_20' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_GetDownType, Temp_byte_Variable_21) == 0x000018, "Member 'BP_PlayerActionStateDamage_C_GetDownType::Temp_byte_Variable_21' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_GetDownType, Temp_byte_Variable_22) == 0x000019, "Member 'BP_PlayerActionStateDamage_C_GetDownType::Temp_byte_Variable_22' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_GetDownType, Temp_byte_Variable_23) == 0x00001A, "Member 'BP_PlayerActionStateDamage_C_GetDownType::Temp_byte_Variable_23' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_GetDownType, Temp_byte_Variable_24) == 0x00001B, "Member 'BP_PlayerActionStateDamage_C_GetDownType::Temp_byte_Variable_24' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_GetDownType, Temp_byte_Variable_25) == 0x00001C, "Member 'BP_PlayerActionStateDamage_C_GetDownType::Temp_byte_Variable_25' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_GetDownType, Temp_byte_Variable_26) == 0x00001D, "Member 'BP_PlayerActionStateDamage_C_GetDownType::Temp_byte_Variable_26' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_GetDownType, Temp_byte_Variable_27) == 0x00001E, "Member 'BP_PlayerActionStateDamage_C_GetDownType::Temp_byte_Variable_27' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_GetDownType, Temp_byte_Variable_28) == 0x00001F, "Member 'BP_PlayerActionStateDamage_C_GetDownType::Temp_byte_Variable_28' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_GetDownType, Temp_byte_Variable_29) == 0x000020, "Member 'BP_PlayerActionStateDamage_C_GetDownType::Temp_byte_Variable_29' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_GetDownType, Temp_byte_Variable_30) == 0x000021, "Member 'BP_PlayerActionStateDamage_C_GetDownType::Temp_byte_Variable_30' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_GetDownType, CallFunc_IsBadStatusElectric_self_CastInput) == 0x000028, "Member 'BP_PlayerActionStateDamage_C_GetDownType::CallFunc_IsBadStatusElectric_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_GetDownType, CallFunc_IsBadStatusElectric_bBadStatus) == 0x000038, "Member 'BP_PlayerActionStateDamage_C_GetDownType::CallFunc_IsBadStatusElectric_bBadStatus' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_GetDownType, K2Node_Select_Default) == 0x000039, "Member 'BP_PlayerActionStateDamage_C_GetDownType::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_GetDownType, K2Node_Select_Default_1) == 0x00003A, "Member 'BP_PlayerActionStateDamage_C_GetDownType::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_GetDownType, K2Node_Select_Default_2) == 0x00003B, "Member 'BP_PlayerActionStateDamage_C_GetDownType::K2Node_Select_Default_2' has a wrong offset!");

// Function BP_PlayerActionStateDamage.BP_PlayerActionStateDamage_C.IsTransitionDown
// 0x0023 (0x0023 - 0x0000)
struct BP_PlayerActionStateDamage_C_IsTransitionDown final
{
public:
	EPlayerDamageKind                             Kind;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bTransition;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerDamageKind                             Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_3;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_4;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_5;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_6;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_7;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_8;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_9;                              // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_10;                             // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_11;                             // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_12;                             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_13;                             // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_14;                             // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_15;                             // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_16;                             // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_17;                             // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_18;                             // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_19;                             // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_20;                             // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_21;                             // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_22;                             // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_23;                             // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_24;                             // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_25;                             // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_26;                             // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_27;                             // 0x001F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default;                             // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerBrainFieldState                        CallFunc_GetBrainFieldState_ReturnValue;           // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerActionStateDamage_C_IsTransitionDown) == 0x000001, "Wrong alignment on BP_PlayerActionStateDamage_C_IsTransitionDown");
static_assert(sizeof(BP_PlayerActionStateDamage_C_IsTransitionDown) == 0x000023, "Wrong size on BP_PlayerActionStateDamage_C_IsTransitionDown");
static_assert(offsetof(BP_PlayerActionStateDamage_C_IsTransitionDown, Kind) == 0x000000, "Member 'BP_PlayerActionStateDamage_C_IsTransitionDown::Kind' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_IsTransitionDown, bTransition) == 0x000001, "Member 'BP_PlayerActionStateDamage_C_IsTransitionDown::bTransition' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_IsTransitionDown, Temp_byte_Variable) == 0x000002, "Member 'BP_PlayerActionStateDamage_C_IsTransitionDown::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_IsTransitionDown, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000003, "Member 'BP_PlayerActionStateDamage_C_IsTransitionDown::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_IsTransitionDown, Temp_bool_Variable) == 0x000004, "Member 'BP_PlayerActionStateDamage_C_IsTransitionDown::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_IsTransitionDown, Temp_bool_Variable_1) == 0x000005, "Member 'BP_PlayerActionStateDamage_C_IsTransitionDown::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_IsTransitionDown, Temp_bool_Variable_2) == 0x000006, "Member 'BP_PlayerActionStateDamage_C_IsTransitionDown::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_IsTransitionDown, Temp_bool_Variable_3) == 0x000007, "Member 'BP_PlayerActionStateDamage_C_IsTransitionDown::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_IsTransitionDown, Temp_bool_Variable_4) == 0x000008, "Member 'BP_PlayerActionStateDamage_C_IsTransitionDown::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_IsTransitionDown, Temp_bool_Variable_5) == 0x000009, "Member 'BP_PlayerActionStateDamage_C_IsTransitionDown::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_IsTransitionDown, Temp_bool_Variable_6) == 0x00000A, "Member 'BP_PlayerActionStateDamage_C_IsTransitionDown::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_IsTransitionDown, Temp_bool_Variable_7) == 0x00000B, "Member 'BP_PlayerActionStateDamage_C_IsTransitionDown::Temp_bool_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_IsTransitionDown, Temp_bool_Variable_8) == 0x00000C, "Member 'BP_PlayerActionStateDamage_C_IsTransitionDown::Temp_bool_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_IsTransitionDown, Temp_bool_Variable_9) == 0x00000D, "Member 'BP_PlayerActionStateDamage_C_IsTransitionDown::Temp_bool_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_IsTransitionDown, Temp_bool_Variable_10) == 0x00000E, "Member 'BP_PlayerActionStateDamage_C_IsTransitionDown::Temp_bool_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_IsTransitionDown, Temp_bool_Variable_11) == 0x00000F, "Member 'BP_PlayerActionStateDamage_C_IsTransitionDown::Temp_bool_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_IsTransitionDown, Temp_bool_Variable_12) == 0x000010, "Member 'BP_PlayerActionStateDamage_C_IsTransitionDown::Temp_bool_Variable_12' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_IsTransitionDown, Temp_bool_Variable_13) == 0x000011, "Member 'BP_PlayerActionStateDamage_C_IsTransitionDown::Temp_bool_Variable_13' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_IsTransitionDown, Temp_bool_Variable_14) == 0x000012, "Member 'BP_PlayerActionStateDamage_C_IsTransitionDown::Temp_bool_Variable_14' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_IsTransitionDown, Temp_bool_Variable_15) == 0x000013, "Member 'BP_PlayerActionStateDamage_C_IsTransitionDown::Temp_bool_Variable_15' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_IsTransitionDown, Temp_bool_Variable_16) == 0x000014, "Member 'BP_PlayerActionStateDamage_C_IsTransitionDown::Temp_bool_Variable_16' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_IsTransitionDown, Temp_bool_Variable_17) == 0x000015, "Member 'BP_PlayerActionStateDamage_C_IsTransitionDown::Temp_bool_Variable_17' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_IsTransitionDown, Temp_bool_Variable_18) == 0x000016, "Member 'BP_PlayerActionStateDamage_C_IsTransitionDown::Temp_bool_Variable_18' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_IsTransitionDown, Temp_bool_Variable_19) == 0x000017, "Member 'BP_PlayerActionStateDamage_C_IsTransitionDown::Temp_bool_Variable_19' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_IsTransitionDown, Temp_bool_Variable_20) == 0x000018, "Member 'BP_PlayerActionStateDamage_C_IsTransitionDown::Temp_bool_Variable_20' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_IsTransitionDown, Temp_bool_Variable_21) == 0x000019, "Member 'BP_PlayerActionStateDamage_C_IsTransitionDown::Temp_bool_Variable_21' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_IsTransitionDown, Temp_bool_Variable_22) == 0x00001A, "Member 'BP_PlayerActionStateDamage_C_IsTransitionDown::Temp_bool_Variable_22' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_IsTransitionDown, Temp_bool_Variable_23) == 0x00001B, "Member 'BP_PlayerActionStateDamage_C_IsTransitionDown::Temp_bool_Variable_23' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_IsTransitionDown, Temp_bool_Variable_24) == 0x00001C, "Member 'BP_PlayerActionStateDamage_C_IsTransitionDown::Temp_bool_Variable_24' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_IsTransitionDown, Temp_bool_Variable_25) == 0x00001D, "Member 'BP_PlayerActionStateDamage_C_IsTransitionDown::Temp_bool_Variable_25' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_IsTransitionDown, Temp_bool_Variable_26) == 0x00001E, "Member 'BP_PlayerActionStateDamage_C_IsTransitionDown::Temp_bool_Variable_26' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_IsTransitionDown, Temp_bool_Variable_27) == 0x00001F, "Member 'BP_PlayerActionStateDamage_C_IsTransitionDown::Temp_bool_Variable_27' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_IsTransitionDown, K2Node_Select_Default) == 0x000020, "Member 'BP_PlayerActionStateDamage_C_IsTransitionDown::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_IsTransitionDown, CallFunc_GetBrainFieldState_ReturnValue) == 0x000021, "Member 'BP_PlayerActionStateDamage_C_IsTransitionDown::CallFunc_GetBrainFieldState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateDamage_C_IsTransitionDown, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000022, "Member 'BP_PlayerActionStateDamage_C_IsTransitionDown::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");

}

