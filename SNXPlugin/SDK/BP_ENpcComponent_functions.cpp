#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ENpcComponent

#include "Basic.hpp"

#include "BP_ENpcComponent_classes.hpp"
#include "BP_ENpcComponent_parameters.hpp"


namespace SDK
{

// Function BP_ENpcComponent.BP_ENpcComponent_C.EventDispatcherSASStart__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPlayerID                               SAS_PlayerID                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ENpcComponent_C::EventDispatcherSASStart__DelegateSignature(EPlayerID SAS_PlayerID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "EventDispatcherSASStart__DelegateSignature");

	Params::BP_ENpcComponent_C_EventDispatcherSASStart__DelegateSignature Parms{};

	Parms.SAS_PlayerID = SAS_PlayerID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.ExecuteUbergraph_BP_ENpcComponent
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ENpcComponent_C::ExecuteUbergraph_BP_ENpcComponent(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "ExecuteUbergraph_BP_ENpcComponent");

	Params::BP_ENpcComponent_C_ExecuteUbergraph_BP_ENpcComponent Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.CheckBattleStartBT
// (BlueprintCallable, BlueprintEvent)

void UBP_ENpcComponent_C::CheckBattleStartBT()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "CheckBattleStartBT");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.OnSetEnemyBrainFieldEnd
// (BlueprintCallable, BlueprintEvent)

void UBP_ENpcComponent_C::OnSetEnemyBrainFieldEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "OnSetEnemyBrainFieldEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.OnSetEnemyBrainFieldStart
// (BlueprintCallable, BlueprintEvent)

void UBP_ENpcComponent_C::OnSetEnemyBrainFieldStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "OnSetEnemyBrainFieldStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.OnInterceptableThrow
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Psy_obj_actor_in                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Target_actor_in                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ENpcComponent_C::OnInterceptableThrow(class AActor* Psy_obj_actor_in, class AActor* Target_actor_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "OnInterceptableThrow");

	Params::BP_ENpcComponent_C_OnInterceptableThrow Parms{};

	Parms.Psy_obj_actor_in = Psy_obj_actor_in;
	Parms.Target_actor_in = Target_actor_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.UnBindInterceptableThrow
// (BlueprintCallable, BlueprintEvent)

void UBP_ENpcComponent_C::UnBindInterceptableThrow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "UnBindInterceptableThrow");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.BindInterceptableThrow
// (BlueprintCallable, BlueprintEvent)

void UBP_ENpcComponent_C::BindInterceptableThrow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "BindInterceptableThrow");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.UnbindEnpcSASTick
// (BlueprintCallable, BlueprintEvent)

void UBP_ENpcComponent_C::UnbindEnpcSASTick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "UnbindEnpcSASTick");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.BindEnpcSASTick
// (BlueprintCallable, BlueprintEvent)

void UBP_ENpcComponent_C::BindEnpcSASTick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "BindEnpcSASTick");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.ReceiveEndPlay
// (Event, Public, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ENpcComponent_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "ReceiveEndPlay");

	Params::BP_ENpcComponent_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ENpcComponent_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "ReceiveTick");

	Params::BP_ENpcComponent_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UBP_ENpcComponent_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.SetEnemyBrainCrashPerformance
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bReturn                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_ENpcComponent_C::SetEnemyBrainCrashPerformance(bool* bReturn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "SetEnemyBrainCrashPerformance");

	Params::BP_ENpcComponent_C_SetEnemyBrainCrashPerformance Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bReturn != nullptr)
		*bReturn = Parms.bReturn;
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.SetEnemyBrainFieldStart
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_ENpcComponent_C::SetEnemyBrainFieldStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "SetEnemyBrainFieldStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.SetEnemyBrainFieldEnd
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bMoveBrainField                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_ENpcComponent_C::SetEnemyBrainFieldEnd(bool bMoveBrainField, bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "SetEnemyBrainFieldEnd");

	Params::BP_ENpcComponent_C_SetEnemyBrainFieldEnd Parms{};

	Parms.bMoveBrainField = bMoveBrainField;

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.OnSwitchVisibleBrainFieldLevel
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bVisible                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_ENpcComponent_C::OnSwitchVisibleBrainFieldLevel(bool bVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "OnSwitchVisibleBrainFieldLevel");

	Params::BP_ENpcComponent_C_OnSwitchVisibleBrainFieldLevel Parms{};

	Parms.bVisible = bVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.SetEnemyWait
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_ENpcComponent_C::SetEnemyWait()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "SetEnemyWait");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.ResetEnemyWait
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_ENpcComponent_C::ResetEnemyWait()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "ResetEnemyWait");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.SetEnemyStealthSeeEnable
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bON                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bReturn                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_ENpcComponent_C::SetEnemyStealthSeeEnable(bool bON, bool* bReturn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "SetEnemyStealthSeeEnable");

	Params::BP_ENpcComponent_C_SetEnemyStealthSeeEnable Parms{};

	Parms.bON = bON;

	UObject::ProcessEvent(Func, &Parms);

	if (bReturn != nullptr)
		*bReturn = Parms.bReturn;
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.SetBoss
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_bBoss                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_ENpcComponent_C::SetBoss(bool Param_bBoss)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "SetBoss");

	Params::BP_ENpcComponent_C_SetBoss Parms{};

	Parms.Param_bBoss = Param_bBoss;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.SetTickEnable
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bEnable                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class FName                             ClaimantName                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ENpcComponent_C::SetTickEnable(bool bEnable, class FName ClaimantName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "SetTickEnable");

	Params::BP_ENpcComponent_C_SetTickEnable Parms{};

	Parms.bEnable = bEnable;
	Parms.ClaimantName = ClaimantName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.On Owner Destroy
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_ENpcComponent_C::On_Owner_Destroy()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "On Owner Destroy");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.NotifyStartBattle
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bBrainFieldEnable                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_ENpcComponent_C::NotifyStartBattle(bool bBrainFieldEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "NotifyStartBattle");

	Params::BP_ENpcComponent_C_NotifyStartBattle Parms{};

	Parms.bBrainFieldEnable = bBrainFieldEnable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.NotifyEndBattle
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_ENpcComponent_C::NotifyEndBattle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "NotifyEndBattle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.Notify Dead
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_ENpcComponent_C::Notify_Dead()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "Notify Dead");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.UpdatePsychicObject
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_ENpcComponent_C::UpdatePsychicObject()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "UpdatePsychicObject");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.AddPsychicObject
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_PsychicObjectBasic_C*         AddObj                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ENpcComponent_C::AddPsychicObject(class ABP_PsychicObjectBasic_C* AddObj)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "AddPsychicObject");

	Params::BP_ENpcComponent_C_AddPsychicObject Parms{};

	Parms.AddObj = AddObj;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.AddHitPsychicObject
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_PsychicObjectBasic_C*         HitPsychicObj                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsAdd                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_ENpcComponent_C::AddHitPsychicObject(class ABP_PsychicObjectBasic_C* HitPsychicObj, bool* IsAdd)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "AddHitPsychicObject");

	Params::BP_ENpcComponent_C_AddHitPsychicObject Parms{};

	Parms.HitPsychicObj = HitPsychicObj;

	UObject::ProcessEvent(Func, &Parms);

	if (IsAdd != nullptr)
		*IsAdd = Parms.IsAdd;
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.UpdateBrainField
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSec                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ENpcComponent_C::UpdateBrainField(float DeltaSec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "UpdateBrainField");

	Params::BP_ENpcComponent_C_UpdateBrainField Parms{};

	Parms.DeltaSec = DeltaSec;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.HitPsychicObjAddImpulse
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_PsychicObjectBasic_C*         HitPsychicObj                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ENpcComponent_C::HitPsychicObjAddImpulse(class ABP_PsychicObjectBasic_C* HitPsychicObj)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "HitPsychicObjAddImpulse");

	Params::BP_ENpcComponent_C_HitPsychicObjAddImpulse Parms{};

	Parms.HitPsychicObj = HitPsychicObj;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.UpdateHpDisplay
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSec                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ENpcComponent_C::UpdateHpDisplay(float DeltaSec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "UpdateHpDisplay");

	Params::BP_ENpcComponent_C_UpdateHpDisplay Parms{};

	Parms.DeltaSec = DeltaSec;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.IsPossibleDodgeNormalAttack
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bPossible                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bForceDodge                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_ENpcComponent_C::IsPossibleDodgeNormalAttack(bool* bPossible, bool* bForceDodge)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "IsPossibleDodgeNormalAttack");

	Params::BP_ENpcComponent_C_IsPossibleDodgeNormalAttack Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bPossible != nullptr)
		*bPossible = Parms.bPossible;

	if (bForceDodge != nullptr)
		*bForceDodge = Parms.bForceDodge;
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.IsReactionChance
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Param_bReactionChance                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_ENpcComponent_C::IsReactionChance(bool* Param_bReactionChance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "IsReactionChance");

	Params::BP_ENpcComponent_C_IsReactionChance Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_bReactionChance != nullptr)
		*Param_bReactionChance = Parms.Param_bReactionChance;
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.UpdateReactionChance
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_ENpcComponent_C::UpdateReactionChance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "UpdateReactionChance");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.StartReactionChance
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_ENpcComponent_C::StartReactionChance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "StartReactionChance");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.EndReactionChance
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bDown                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bForce                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_ENpcComponent_C::EndReactionChance(bool bDown, bool bForce)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "EndReactionChance");

	Params::BP_ENpcComponent_C_EndReactionChance Parms{};

	Parms.bDown = bDown;
	Parms.bForce = bForce;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.UpdateDodge
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_ENpcComponent_C::UpdateDodge()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "UpdateDodge");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.SetChanceEndAction
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_ENpcComponent_C::SetChanceEndAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "SetChanceEndAction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.IsIntence
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Param_bIntence                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_ENpcComponent_C::IsIntence(bool* Param_bIntence)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "IsIntence");

	Params::BP_ENpcComponent_C_IsIntence Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_bIntence != nullptr)
		*Param_bIntence = Parms.Param_bIntence;
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.SetIntence
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_bIntence                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_ENpcComponent_C::SetIntence(bool Param_bIntence)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "SetIntence");

	Params::BP_ENpcComponent_C_SetIntence Parms{};

	Parms.Param_bIntence = Param_bIntence;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.StartSeeThrough
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_ENpcComponent_C::StartSeeThrough()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "StartSeeThrough");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.EndSeeThrough
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_ENpcComponent_C::EndSeeThrough()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "EndSeeThrough");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.UpdateSeeThrough
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_ENpcComponent_C::UpdateSeeThrough()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "UpdateSeeThrough");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.SetEnpcKind
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ENpcKind                                NewKind                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ENpcComponent_C::SetEnpcKind(ENpcKind NewKind)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "SetEnpcKind");

	Params::BP_ENpcComponent_C_SetEnpcKind Parms{};

	Parms.NewKind = NewKind;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.GetENpcKind
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// ENpcKind                                Param_ENpcKind                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ENpcComponent_C::GetENpcKind(ENpcKind* Param_ENpcKind)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "GetENpcKind");

	Params::BP_ENpcComponent_C_GetENpcKind Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_ENpcKind != nullptr)
		*Param_ENpcKind = Parms.Param_ENpcKind;
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.ResetEnpcKind
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_ENpcComponent_C::ResetEnpcKind()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "ResetEnpcKind");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.SetHitSpTrigger
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bHit                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_ENpcComponent_C::SetHitSpTrigger(bool bHit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "SetHitSpTrigger");

	Params::BP_ENpcComponent_C_SetHitSpTrigger Parms{};

	Parms.bHit = bHit;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.GetHitSpTrigger
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Param_bHitSpTrigger                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_ENpcComponent_C::GetHitSpTrigger(bool* Param_bHitSpTrigger)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "GetHitSpTrigger");

	Params::BP_ENpcComponent_C_GetHitSpTrigger Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_bHitSpTrigger != nullptr)
		*Param_bHitSpTrigger = Parms.Param_bHitSpTrigger;
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.GetSpActiveHpRate
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   ActiveHpRate                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ENpcComponent_C::GetSpActiveHpRate(float* ActiveHpRate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "GetSpActiveHpRate");

	Params::BP_ENpcComponent_C_GetSpActiveHpRate Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ActiveHpRate != nullptr)
		*ActiveHpRate = Parms.ActiveHpRate;
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.GetActiveSpTrigger
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Param_bActiveSpTrigger                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_ENpcComponent_C::GetActiveSpTrigger(bool* Param_bActiveSpTrigger)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "GetActiveSpTrigger");

	Params::BP_ENpcComponent_C_GetActiveSpTrigger Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_bActiveSpTrigger != nullptr)
		*Param_bActiveSpTrigger = Parms.Param_bActiveSpTrigger;
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.SetActiveSpTrigger
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Active                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_ENpcComponent_C::SetActiveSpTrigger(bool Active)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "SetActiveSpTrigger");

	Params::BP_ENpcComponent_C_SetActiveSpTrigger Parms{};

	Parms.Active = Active;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.CanSpTrigger
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    bCanSpTrigger                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_ENpcComponent_C::CanSpTrigger(bool* bCanSpTrigger)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "CanSpTrigger");

	Params::BP_ENpcComponent_C_CanSpTrigger Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bCanSpTrigger != nullptr)
		*bCanSpTrigger = Parms.bCanSpTrigger;
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.Check Brain Field Start Hp
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_ENpcComponent_C::Check_Brain_Field_Start_Hp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "Check Brain Field Start Hp");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.IsSpStart
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Param_bSpStart                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_ENpcComponent_C::IsSpStart(bool* Param_bSpStart)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "IsSpStart");

	Params::BP_ENpcComponent_C_IsSpStart Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_bSpStart != nullptr)
		*Param_bSpStart = Parms.Param_bSpStart;
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.SetSpStart
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_bSpStart                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_ENpcComponent_C::SetSpStart(bool Param_bSpStart)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "SetSpStart");

	Params::BP_ENpcComponent_C_SetSpStart Parms{};

	Parms.Param_bSpStart = Param_bSpStart;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.UpdateEnpcSp
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_ENpcComponent_C::UpdateEnpcSp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "UpdateEnpcSp");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.StartEnpcSp
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Attacker                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Enemy                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ENpcComponent_C::StartEnpcSp(class AActor* Attacker, class AActor* Enemy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "StartEnpcSp");

	Params::BP_ENpcComponent_C_StartEnpcSp Parms{};

	Parms.Attacker = Attacker;
	Parms.Enemy = Enemy;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.EndEnpcSp
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_ENpcComponent_C::EndEnpcSp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "EndEnpcSp");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.CheckDriveStartHp
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_ENpcComponent_C::CheckDriveStartHp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "CheckDriveStartHp");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.RegisterEnpcSAS
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_SASKind                               Kind                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ENpcComponent_C::RegisterEnpcSAS(E_SASKind Kind)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "RegisterEnpcSAS");

	Params::BP_ENpcComponent_C_RegisterEnpcSAS Parms{};

	Parms.Kind = Kind;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.UnregisterSAS
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_SASKind                               Kind                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bNoEffect                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_ENpcComponent_C::UnregisterSAS(E_SASKind Kind, bool bNoEffect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "UnregisterSAS");

	Params::BP_ENpcComponent_C_UnregisterSAS Parms{};

	Parms.Kind = Kind;
	Parms.bNoEffect = bNoEffect;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.ForceEndEnpcSAS
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_ENpcComponent_C::ForceEndEnpcSAS()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "ForceEndEnpcSAS");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.UpdateSAS
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ENpcComponent_C::UpdateSAS(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "UpdateSAS");

	Params::BP_ENpcComponent_C_UpdateSAS Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.SetTimerPause
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bPause                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_ENpcComponent_C::SetTimerPause(bool bPause)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "SetTimerPause");

	Params::BP_ENpcComponent_C_SetTimerPause Parms{};

	Parms.bPause = bPause;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.ActiveEnpcSAS
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_SASKind                               Kind                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ENpcComponent_C::ActiveEnpcSAS(E_SASKind Kind)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "ActiveEnpcSAS");

	Params::BP_ENpcComponent_C_ActiveEnpcSAS Parms{};

	Parms.Kind = Kind;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.AddHardenDamage
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ENpcComponent_C::AddHardenDamage(float Damage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "AddHardenDamage");

	Params::BP_ENpcComponent_C_AddHardenDamage Parms{};

	Parms.Damage = Damage;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.SetHardenHP
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_ENpcComponent_C::SetHardenHP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "SetHardenHP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.EndEnpcSAS
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_SASKind                               Kind                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ENpcComponent_C::EndEnpcSAS(E_SASKind Kind)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "EndEnpcSAS");

	Params::BP_ENpcComponent_C_EndEnpcSAS Parms{};

	Parms.Kind = Kind;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.IsUseBrainField
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Param_bUseBrainField                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_ENpcComponent_C::IsUseBrainField(bool* Param_bUseBrainField)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "IsUseBrainField");

	Params::BP_ENpcComponent_C_IsUseBrainField Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_bUseBrainField != nullptr)
		*Param_bUseBrainField = Parms.Param_bUseBrainField;
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.Update Execute SAS
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSec                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ENpcComponent_C::Update_Execute_SAS(float DeltaSec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "Update Execute SAS");

	Params::BP_ENpcComponent_C_Update_Execute_SAS Parms{};

	Parms.DeltaSec = DeltaSec;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.SetSASStartingFlag
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_SASKind                               SasKind                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Flag                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_ENpcComponent_C::SetSASStartingFlag(E_SASKind SasKind, bool Flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "SetSASStartingFlag");

	Params::BP_ENpcComponent_C_SetSASStartingFlag Parms{};

	Parms.SasKind = SasKind;
	Parms.Flag = Flag;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.GetSASStartingFlag
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_SASKind                               SasKind                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Flag                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_ENpcComponent_C::GetSASStartingFlag(E_SASKind SasKind, bool* Flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "GetSASStartingFlag");

	Params::BP_ENpcComponent_C_GetSASStartingFlag Parms{};

	Parms.SasKind = SasKind;

	UObject::ProcessEvent(Func, &Parms);

	if (Flag != nullptr)
		*Flag = Parms.Flag;
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.SetInterceptCheckObj
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           InObj                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ENpcComponent_C::SetInterceptCheckObj(class AActor* InObj)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "SetInterceptCheckObj");

	Params::BP_ENpcComponent_C_SetInterceptCheckObj Parms{};

	Parms.InObj = InObj;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.GetInterceptCheckObj
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AActor*                           OutObj                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ENpcComponent_C::GetInterceptCheckObj(class AActor** OutObj)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "GetInterceptCheckObj");

	Params::BP_ENpcComponent_C_GetInterceptCheckObj Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutObj != nullptr)
		*OutObj = Parms.OutObj;
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.ClearInterceptCheckObj
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_ENpcComponent_C::ClearInterceptCheckObj()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "ClearInterceptCheckObj");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.StartInterceptAction
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           InObj                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           InTarget                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ENpcComponent_C::StartInterceptAction(class AActor* InObj, class AActor* InTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "StartInterceptAction");

	Params::BP_ENpcComponent_C_StartInterceptAction Parms{};

	Parms.InObj = InObj;
	Parms.InTarget = InTarget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.EndInterceptAction
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_ENpcComponent_C::EndInterceptAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "EndInterceptAction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.UpdateInterceptInterval
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSec                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ENpcComponent_C::UpdateInterceptInterval(float DeltaSec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "UpdateInterceptInterval");

	Params::BP_ENpcComponent_C_UpdateInterceptInterval Parms{};

	Parms.DeltaSec = DeltaSec;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.IsDispStealthEffect
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    bOutDisp                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_ENpcComponent_C::IsDispStealthEffect(bool* bOutDisp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "IsDispStealthEffect");

	Params::BP_ENpcComponent_C_IsDispStealthEffect Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bOutDisp != nullptr)
		*bOutDisp = Parms.bOutDisp;
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.IsActiveEnpcSASAll
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Active                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_ENpcComponent_C::IsActiveEnpcSASAll(bool* Active)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "IsActiveEnpcSASAll");

	Params::BP_ENpcComponent_C_IsActiveEnpcSASAll Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Active != nullptr)
		*Active = Parms.Active;
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.ResetForceSASRegist
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_ENpcComponent_C::ResetForceSASRegist()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "ResetForceSASRegist");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.SetHitTrigger
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_IsHitTrigger                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_ENpcComponent_C::SetHitTrigger(bool Param_IsHitTrigger)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "SetHitTrigger");

	Params::BP_ENpcComponent_C_SetHitTrigger Parms{};

	Parms.Param_IsHitTrigger = Param_IsHitTrigger;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.UpdateSASStartingTimer
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_SASKind                               SasKind                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   DeltaSec                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsReset                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_ENpcComponent_C::UpdateSASStartingTimer(E_SASKind SasKind, float DeltaSec, bool* IsReset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "UpdateSASStartingTimer");

	Params::BP_ENpcComponent_C_UpdateSASStartingTimer Parms{};

	Parms.SasKind = SasKind;
	Parms.DeltaSec = DeltaSec;

	UObject::ProcessEvent(Func, &Parms);

	if (IsReset != nullptr)
		*IsReset = Parms.IsReset;
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.CheckDriveStartBrainField
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsReady                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_ENpcComponent_C::CheckDriveStartBrainField(bool IsReady)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "CheckDriveStartBrainField");

	Params::BP_ENpcComponent_C_CheckDriveStartBrainField Parms{};

	Parms.IsReady = IsReady;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.SetDuelPoleType
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bDuelType                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bCheckState                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bIsCompleted                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_ENpcComponent_C::SetDuelPoleType(bool bDuelType, bool bCheckState, bool* bIsCompleted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "SetDuelPoleType");

	Params::BP_ENpcComponent_C_SetDuelPoleType Parms{};

	Parms.bDuelType = bDuelType;
	Parms.bCheckState = bCheckState;

	UObject::ProcessEvent(Func, &Parms);

	if (bIsCompleted != nullptr)
		*bIsCompleted = Parms.bIsCompleted;
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.CheckDuelPoleStartHp
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_ENpcComponent_C::CheckDuelPoleStartHp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "CheckDuelPoleStartHp");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.UpdateStartInitDuelPole
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_ENpcComponent_C::UpdateStartInitDuelPole()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "UpdateStartInitDuelPole");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.ChangeDuelPoleType
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bDuelType                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bDuelPoleCheckState                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_ENpcComponent_C::ChangeDuelPoleType(bool bDuelType, bool bDuelPoleCheckState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "ChangeDuelPoleType");

	Params::BP_ENpcComponent_C_ChangeDuelPoleType Parms{};

	Parms.bDuelType = bDuelType;
	Parms.bDuelPoleCheckState = bDuelPoleCheckState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.SetRandomDuelPole
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_ENpcComponent_C::SetRandomDuelPole()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "SetRandomDuelPole");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.StartStealthCriticalHitSlow
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FHCHitResult                     HitResult                                              (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)

void UBP_ENpcComponent_C::StartStealthCriticalHitSlow(const struct FHCHitResult& HitResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "StartStealthCriticalHitSlow");

	Params::BP_ENpcComponent_C_StartStealthCriticalHitSlow Parms{};

	Parms.HitResult = std::move(HitResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.IsSpTriggerAll
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    IsSpTrigger                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_ENpcComponent_C::IsSpTriggerAll(bool* IsSpTrigger)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "IsSpTriggerAll");

	Params::BP_ENpcComponent_C_IsSpTriggerAll Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsSpTrigger != nullptr)
		*IsSpTrigger = Parms.IsSpTrigger;
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.SetSpTriggerAll
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bSpTriggerAll                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_ENpcComponent_C::SetSpTriggerAll(bool bSpTriggerAll)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "SetSpTriggerAll");

	Params::BP_ENpcComponent_C_SetSpTriggerAll Parms{};

	Parms.bSpTriggerAll = bSpTriggerAll;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.ShowUnDiscoverIcon
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsForceDispIcon                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_ENpcComponent_C::ShowUnDiscoverIcon(bool IsForceDispIcon, bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "ShowUnDiscoverIcon");

	Params::BP_ENpcComponent_C_ShowUnDiscoverIcon Parms{};

	Parms.IsForceDispIcon = IsForceDispIcon;

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.ShowDiscoverIcon
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_ENpcComponent_C::ShowDiscoverIcon(bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "ShowDiscoverIcon");

	Params::BP_ENpcComponent_C_ShowDiscoverIcon Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.UpdateDiscoverIcon
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_ENpcComponent_C::UpdateDiscoverIcon(float DeltaSeconds, bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "UpdateDiscoverIcon");

	Params::BP_ENpcComponent_C_UpdateDiscoverIcon Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.GetDiscoverComponent
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_Discover_Component_C*         DiscoverComponent                                      (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ENpcComponent_C::GetDiscoverComponent(class UBP_Discover_Component_C** DiscoverComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "GetDiscoverComponent");

	Params::BP_ENpcComponent_C_GetDiscoverComponent Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (DiscoverComponent != nullptr)
		*DiscoverComponent = Parms.DiscoverComponent;
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.Exec Drive
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bForceExec                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_ENpcComponent_C::Exec_Drive(bool bForceExec, bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "Exec Drive");

	Params::BP_ENpcComponent_C_Exec_Drive Parms{};

	Parms.bForceExec = bForceExec;

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.EnableTriggerSequencerReception
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enable                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_ENpcComponent_C::EnableTriggerSequencerReception(bool Enable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "EnableTriggerSequencerReception");

	Params::BP_ENpcComponent_C_EnableTriggerSequencerReception Parms{};

	Parms.Enable = Enable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.IsEnableTriggerSequencerReception
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Enable                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_ENpcComponent_C::IsEnableTriggerSequencerReception(bool* Enable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "IsEnableTriggerSequencerReception");

	Params::BP_ENpcComponent_C_IsEnableTriggerSequencerReception Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Enable != nullptr)
		*Enable = Parms.Enable;
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.SetENPCOutline
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enable                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_ENpcComponent_C::SetENPCOutline(bool Enable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "SetENPCOutline");

	Params::BP_ENpcComponent_C_SetENPCOutline Parms{};

	Parms.Enable = Enable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.SetENPCOutlineColor
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enable                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_ENpcComponent_C::SetENPCOutlineColor(bool Enable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "SetENPCOutlineColor");

	Params::BP_ENpcComponent_C_SetENPCOutlineColor Parms{};

	Parms.Enable = Enable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.IsActiveEnpcSASAcceleTelepo
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_IsActive                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_ENpcComponent_C::IsActiveEnpcSASAcceleTelepo(bool* Param_IsActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "IsActiveEnpcSASAcceleTelepo");

	Params::BP_ENpcComponent_C_IsActiveEnpcSASAcceleTelepo Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_IsActive != nullptr)
		*Param_IsActive = Parms.Param_IsActive;
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.GetDyingHpRate
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   DyingHpRate                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ENpcComponent_C::GetDyingHpRate(float* DyingHpRate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "GetDyingHpRate");

	Params::BP_ENpcComponent_C_GetDyingHpRate Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (DyingHpRate != nullptr)
		*DyingHpRate = Parms.DyingHpRate;
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.GetENPCBrainFieldTime
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   Param_ENPCBrainFieldTime                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ENpcComponent_C::GetENPCBrainFieldTime(float* Param_ENPCBrainFieldTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "GetENPCBrainFieldTime");

	Params::BP_ENpcComponent_C_GetENPCBrainFieldTime Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_ENPCBrainFieldTime != nullptr)
		*Param_ENPCBrainFieldTime = Parms.Param_ENPCBrainFieldTime;
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.SetHitTrigger_CallFromCPP
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bIsHitTrigger                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_ENpcComponent_C::SetHitTrigger_CallFromCPP(bool bIsHitTrigger)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "SetHitTrigger_CallFromCPP");

	Params::BP_ENpcComponent_C_SetHitTrigger_CallFromCPP Parms{};

	Parms.bIsHitTrigger = bIsHitTrigger;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.StartReactionChance_CallFromCPP
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_ENpcComponent_C::StartReactionChance_CallFromCPP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "StartReactionChance_CallFromCPP");

	Params::BP_ENpcComponent_C_StartReactionChance_CallFromCPP Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.IsStartBattleTimer
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsEffective                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_ENpcComponent_C::IsStartBattleTimer(bool* IsEffective)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "IsStartBattleTimer");

	Params::BP_ENpcComponent_C_IsStartBattleTimer Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsEffective != nullptr)
		*IsEffective = Parms.IsEffective;
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.UpdateStartBattleTimer
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSec                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ENpcComponent_C::UpdateStartBattleTimer(float DeltaSec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "UpdateStartBattleTimer");

	Params::BP_ENpcComponent_C_UpdateStartBattleTimer Parms{};

	Parms.DeltaSec = DeltaSec;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.FinishStartBattleTimer
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_ENpcComponent_C::FinishStartBattleTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "FinishStartBattleTimer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.CancelDrive
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_ENpcComponent_C::CancelDrive(bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "CancelDrive");

	Params::BP_ENpcComponent_C_CancelDrive Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.SetReadyDrive
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bReady                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_ENpcComponent_C::SetReadyDrive(bool bReady, bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "SetReadyDrive");

	Params::BP_ENpcComponent_C_SetReadyDrive Parms{};

	Parms.bReady = bReady;

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.UpdateTriggerHit
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSec                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ENpcComponent_C::UpdateTriggerHit(float DeltaSec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "UpdateTriggerHit");

	Params::BP_ENpcComponent_C_UpdateTriggerHit Parms{};

	Parms.DeltaSec = DeltaSec;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.EnableUpdateTriggerHit
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bEnable                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_ENpcComponent_C::EnableUpdateTriggerHit(bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "EnableUpdateTriggerHit");

	Params::BP_ENpcComponent_C_EnableUpdateTriggerHit Parms{};

	Parms.bEnable = bEnable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.IsDriveAttacked
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsAttacked                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_ENpcComponent_C::IsDriveAttacked(bool* IsAttacked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "IsDriveAttacked");

	Params::BP_ENpcComponent_C_IsDriveAttacked Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsAttacked != nullptr)
		*IsAttacked = Parms.IsAttacked;
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.SetDriveAttack
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_ENpcComponent_C::SetDriveAttack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "SetDriveAttack");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.IsReadyDriveWithCancel
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsReadyDrive                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_ENpcComponent_C::IsReadyDriveWithCancel(bool* IsReadyDrive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "IsReadyDriveWithCancel");

	Params::BP_ENpcComponent_C_IsReadyDriveWithCancel Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsReadyDrive != nullptr)
		*IsReadyDrive = Parms.IsReadyDrive;
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.StartDriveDirect
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_ENpcComponent_C::StartDriveDirect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "StartDriveDirect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.IsForceWait
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_bIsForceWait                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_ENpcComponent_C::IsForceWait(bool* Param_bIsForceWait)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "IsForceWait");

	Params::BP_ENpcComponent_C_IsForceWait Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_bIsForceWait != nullptr)
		*Param_bIsForceWait = Parms.Param_bIsForceWait;
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.SetForceWait
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_ENpcComponent_C::SetForceWait()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "SetForceWait");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.GetEnpcPsychicObjectThrowParameter
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsApply                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   Param_DirectshotThrowSpeed                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Param_DirectshotHomingSpeed                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Param_ComboThrowSpeed                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Param_ComboHomingSpeed                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Param_BrainfieldThrowSpeed                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Param_BrainfieldHomingSpeed                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Param_InterceptThrowSpeed                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Param_InterceptHomingSpeed                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ENpcComponent_C::GetEnpcPsychicObjectThrowParameter(bool* IsApply, float* Param_DirectshotThrowSpeed, float* Param_DirectshotHomingSpeed, float* Param_ComboThrowSpeed, float* Param_ComboHomingSpeed, float* Param_BrainfieldThrowSpeed, float* Param_BrainfieldHomingSpeed, float* Param_InterceptThrowSpeed, float* Param_InterceptHomingSpeed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "GetEnpcPsychicObjectThrowParameter");

	Params::BP_ENpcComponent_C_GetEnpcPsychicObjectThrowParameter Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsApply != nullptr)
		*IsApply = Parms.IsApply;

	if (Param_DirectshotThrowSpeed != nullptr)
		*Param_DirectshotThrowSpeed = Parms.Param_DirectshotThrowSpeed;

	if (Param_DirectshotHomingSpeed != nullptr)
		*Param_DirectshotHomingSpeed = Parms.Param_DirectshotHomingSpeed;

	if (Param_ComboThrowSpeed != nullptr)
		*Param_ComboThrowSpeed = Parms.Param_ComboThrowSpeed;

	if (Param_ComboHomingSpeed != nullptr)
		*Param_ComboHomingSpeed = Parms.Param_ComboHomingSpeed;

	if (Param_BrainfieldThrowSpeed != nullptr)
		*Param_BrainfieldThrowSpeed = Parms.Param_BrainfieldThrowSpeed;

	if (Param_BrainfieldHomingSpeed != nullptr)
		*Param_BrainfieldHomingSpeed = Parms.Param_BrainfieldHomingSpeed;

	if (Param_InterceptThrowSpeed != nullptr)
		*Param_InterceptThrowSpeed = Parms.Param_InterceptThrowSpeed;

	if (Param_InterceptHomingSpeed != nullptr)
		*Param_InterceptHomingSpeed = Parms.Param_InterceptHomingSpeed;
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.IsResetBattleThink
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsReset                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_ENpcComponent_C::IsResetBattleThink(bool* IsReset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "IsResetBattleThink");

	Params::BP_ENpcComponent_C_IsResetBattleThink Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsReset != nullptr)
		*IsReset = Parms.IsReset;
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.UpdateSpawn
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSec                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ENpcComponent_C::UpdateSpawn(float DeltaSec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "UpdateSpawn");

	Params::BP_ENpcComponent_C_UpdateSpawn Parms{};

	Parms.DeltaSec = DeltaSec;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.InitSpawn
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_ENpcComponent_C::InitSpawn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "InitSpawn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.EnemyBrainFieldMoveNormalFieldOther
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_ENpcComponent_C::EnemyBrainFieldMoveNormalFieldOther()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "EnemyBrainFieldMoveNormalFieldOther");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.SetDeadBeforeHitResult
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FHCHitResult                     HitResult                                              (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)

void UBP_ENpcComponent_C::SetDeadBeforeHitResult(const struct FHCHitResult& HitResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "SetDeadBeforeHitResult");

	Params::BP_ENpcComponent_C_SetDeadBeforeHitResult Parms{};

	Parms.HitResult = std::move(HitResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.GetDeadBeforeHitResult
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FHCHitResult                     HitResult                                              (Parm, OutParm, ContainsInstancedReference)

void UBP_ENpcComponent_C::GetDeadBeforeHitResult(struct FHCHitResult* HitResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "GetDeadBeforeHitResult");

	Params::BP_ENpcComponent_C_GetDeadBeforeHitResult Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (HitResult != nullptr)
		*HitResult = std::move(Parms.HitResult);
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.CheckHitUniqueObject
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FHCHitResult                     HitResult                                              (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)

void UBP_ENpcComponent_C::CheckHitUniqueObject(const struct FHCHitResult& HitResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "CheckHitUniqueObject");

	Params::BP_ENpcComponent_C_CheckHitUniqueObject Parms{};

	Parms.HitResult = std::move(HitResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.UpdateHitUniqueObject
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_ENpcComponent_C::UpdateHitUniqueObject()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "UpdateHitUniqueObject");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.Update Dead Staging
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSec                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ENpcComponent_C::Update_Dead_Staging(float DeltaSec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "Update Dead Staging");

	Params::BP_ENpcComponent_C_Update_Dead_Staging Parms{};

	Parms.DeltaSec = DeltaSec;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.StartDeadStaging
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_ENpcComponent_C::StartDeadStaging()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "StartDeadStaging");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.IsCloseBrainField
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    bCloseBrainField                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_ENpcComponent_C::IsCloseBrainField(bool* bCloseBrainField)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "IsCloseBrainField");

	Params::BP_ENpcComponent_C_IsCloseBrainField Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bCloseBrainField != nullptr)
		*bCloseBrainField = Parms.bCloseBrainField;
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.UpdateOwnerDestroy
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_ENpcComponent_C::UpdateOwnerDestroy()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "UpdateOwnerDestroy");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.PlayBattleStartBT
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_ENpcComponent_C::PlayBattleStartBT()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "PlayBattleStartBT");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.SetSimulatorWait
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewWait                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_ENpcComponent_C::SetSimulatorWait(bool NewWait)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "SetSimulatorWait");

	Params::BP_ENpcComponent_C_SetSimulatorWait Parms{};

	Parms.NewWait = NewWait;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.IsAcceptBrainField
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    bAccept                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_ENpcComponent_C::IsAcceptBrainField(bool* bAccept)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "IsAcceptBrainField");

	Params::BP_ENpcComponent_C_IsAcceptBrainField Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bAccept != nullptr)
		*bAccept = Parms.bAccept;
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.IsEnableStartBattle
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    bBattleSimulator                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bEnableStartBattle                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_ENpcComponent_C::IsEnableStartBattle(bool* bBattleSimulator, bool* bEnableStartBattle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "IsEnableStartBattle");

	Params::BP_ENpcComponent_C_IsEnableStartBattle Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bBattleSimulator != nullptr)
		*bBattleSimulator = Parms.bBattleSimulator;

	if (bEnableStartBattle != nullptr)
		*bEnableStartBattle = Parms.bEnableStartBattle;
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.LoadEnpcBrainFieldAsset
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_ENpcComponent_C::LoadEnpcBrainFieldAsset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "LoadEnpcBrainFieldAsset");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.GetEnemyInterfaceSound
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// Enum_EnemySound                         Sound                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ENpcComponent_C::GetEnemyInterfaceSound(Enum_EnemySound* Sound) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "GetEnemyInterfaceSound");

	Params::BP_ENpcComponent_C_GetEnemyInterfaceSound Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Sound != nullptr)
		*Sound = Parms.Sound;
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.IsEnemyInterfaceBrainAccess
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    bResult                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_ENpcComponent_C::IsEnemyInterfaceBrainAccess(bool* bResult) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "IsEnemyInterfaceBrainAccess");

	Params::BP_ENpcComponent_C_IsEnemyInterfaceBrainAccess Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bResult != nullptr)
		*bResult = Parms.bResult;
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.IsEnemyBossActive
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    bResult                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_ENpcComponent_C::IsEnemyBossActive(bool* bResult) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "IsEnemyBossActive");

	Params::BP_ENpcComponent_C_IsEnemyBossActive Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bResult != nullptr)
		*bResult = Parms.bResult;
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.IsEnemyActive
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    bResult                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_ENpcComponent_C::IsEnemyActive(bool* bResult) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "IsEnemyActive");

	Params::BP_ENpcComponent_C_IsEnemyActive Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bResult != nullptr)
		*bResult = Parms.bResult;
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.IsEnemyStateAttack
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    bReturn                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_ENpcComponent_C::IsEnemyStateAttack(bool* bReturn) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "IsEnemyStateAttack");

	Params::BP_ENpcComponent_C_IsEnemyStateAttack Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bReturn != nullptr)
		*bReturn = Parms.bReturn;
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.IsEnemyStateDamage
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    bReturn                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_ENpcComponent_C::IsEnemyStateDamage(bool* bReturn) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "IsEnemyStateDamage");

	Params::BP_ENpcComponent_C_IsEnemyStateDamage Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bReturn != nullptr)
		*bReturn = Parms.bReturn;
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.IsEnemyStateDamageDown
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    bReturn                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_ENpcComponent_C::IsEnemyStateDamageDown(bool* bReturn) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "IsEnemyStateDamageDown");

	Params::BP_ENpcComponent_C_IsEnemyStateDamageDown Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bReturn != nullptr)
		*bReturn = Parms.bReturn;
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.GetEnemyGroundTransform
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FTransform                       Transform                                              (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FTransform                       Return                                                 (Parm, OutParm, IsPlainOldData, NoDestructor)

void UBP_ENpcComponent_C::GetEnemyGroundTransform(const struct FTransform& Transform, struct FTransform* Return) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "GetEnemyGroundTransform");

	Params::BP_ENpcComponent_C_GetEnemyGroundTransform Parms{};

	Parms.Transform = std::move(Transform);

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = std::move(Parms.Return);
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.IsBossEnemy
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    Param_bBoss                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_ENpcComponent_C::IsBossEnemy(bool* Param_bBoss) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "IsBossEnemy");

	Params::BP_ENpcComponent_C_IsBossEnemy Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_bBoss != nullptr)
		*Param_bBoss = Parms.Param_bBoss;
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.IsEnableEnemyMoveRange
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    bReturn                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_ENpcComponent_C::IsEnableEnemyMoveRange(bool* bReturn) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "IsEnableEnemyMoveRange");

	Params::BP_ENpcComponent_C_IsEnableEnemyMoveRange Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bReturn != nullptr)
		*bReturn = Parms.bReturn;
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.GetDistanceToPlayer
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// float                                   Distance                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ENpcComponent_C::GetDistanceToPlayer(float* Distance) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "GetDistanceToPlayer");

	Params::BP_ENpcComponent_C_GetDistanceToPlayer Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Distance != nullptr)
		*Distance = Parms.Distance;
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.IsInvisibleHPGauge
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    bInvisible                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_ENpcComponent_C::IsInvisibleHPGauge(bool* bInvisible) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "IsInvisibleHPGauge");

	Params::BP_ENpcComponent_C_IsInvisibleHPGauge Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bInvisible != nullptr)
		*bInvisible = Parms.bInvisible;
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.IsActiveEnpcSAS
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// E_SASKind                               Kind                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bActive                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_ENpcComponent_C::IsActiveEnpcSAS(E_SASKind Kind, bool* bActive) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "IsActiveEnpcSAS");

	Params::BP_ENpcComponent_C_IsActiveEnpcSAS Parms{};

	Parms.Kind = Kind;

	UObject::ProcessEvent(Func, &Parms);

	if (bActive != nullptr)
		*bActive = Parms.bActive;
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.GetSASMaxTime
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// E_SASKind                               Kind                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Time                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ENpcComponent_C::GetSASMaxTime(E_SASKind Kind, float* Time) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "GetSASMaxTime");

	Params::BP_ENpcComponent_C_GetSASMaxTime Parms{};

	Parms.Kind = Kind;

	UObject::ProcessEvent(Func, &Parms);

	if (Time != nullptr)
		*Time = Parms.Time;
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.IsEnableDodgeRangeAttack
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// bool                                    bEnable                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_ENpcComponent_C::IsEnableDodgeRangeAttack(bool* bEnable) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "IsEnableDodgeRangeAttack");

	Params::BP_ENpcComponent_C_IsEnableDodgeRangeAttack Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bEnable != nullptr)
		*bEnable = Parms.bEnable;
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.IsReadyDrive
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// bool                                    bReady                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_ENpcComponent_C::IsReadyDrive(bool* bReady) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "IsReadyDrive");

	Params::BP_ENpcComponent_C_IsReadyDrive Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bReady != nullptr)
		*bReady = Parms.bReady;
}


// Function BP_ENpcComponent.BP_ENpcComponent_C.GetSimulatorWait
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_ENpcComponent_C::GetSimulatorWait(bool* Result) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENpcComponent_C", "GetSimulatorWait");

	Params::BP_ENpcComponent_C_GetSimulatorWait Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}

}

