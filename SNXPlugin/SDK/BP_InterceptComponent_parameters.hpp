#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_InterceptComponent

#include "Basic.hpp"

#include "BattlePrototype_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_InterceptComponent.BP_InterceptComponent_C.ExecuteUbergraph_BP_InterceptComponent
// 0x0048 (0x0048 - 0x0000)
struct BP_InterceptComponent_C_ExecuteUbergraph_BP_InterceptComponent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_50E3[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_PlayerFixParamater_C*               CallFunc_GetPlayerFixParam_Param;                  // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARsBattleHero_C*                        K2Node_DynamicCast_AsRs_Battle_Hero;               // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_50E4[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_50E5[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_Intercept_C>      K2Node_DynamicCast_AsBPI_Intercept;                // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInterceptFail_bFail;                    // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_InterceptComponent_C_ExecuteUbergraph_BP_InterceptComponent) == 0x000008, "Wrong alignment on BP_InterceptComponent_C_ExecuteUbergraph_BP_InterceptComponent");
static_assert(sizeof(BP_InterceptComponent_C_ExecuteUbergraph_BP_InterceptComponent) == 0x000048, "Wrong size on BP_InterceptComponent_C_ExecuteUbergraph_BP_InterceptComponent");
static_assert(offsetof(BP_InterceptComponent_C_ExecuteUbergraph_BP_InterceptComponent, EntryPoint) == 0x000000, "Member 'BP_InterceptComponent_C_ExecuteUbergraph_BP_InterceptComponent::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_InterceptComponent_C_ExecuteUbergraph_BP_InterceptComponent, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_InterceptComponent_C_ExecuteUbergraph_BP_InterceptComponent::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InterceptComponent_C_ExecuteUbergraph_BP_InterceptComponent, CallFunc_GetPlayerFixParam_Param) == 0x000010, "Member 'BP_InterceptComponent_C_ExecuteUbergraph_BP_InterceptComponent::CallFunc_GetPlayerFixParam_Param' has a wrong offset!");
static_assert(offsetof(BP_InterceptComponent_C_ExecuteUbergraph_BP_InterceptComponent, K2Node_DynamicCast_AsRs_Battle_Hero) == 0x000018, "Member 'BP_InterceptComponent_C_ExecuteUbergraph_BP_InterceptComponent::K2Node_DynamicCast_AsRs_Battle_Hero' has a wrong offset!");
static_assert(offsetof(BP_InterceptComponent_C_ExecuteUbergraph_BP_InterceptComponent, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_InterceptComponent_C_ExecuteUbergraph_BP_InterceptComponent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_InterceptComponent_C_ExecuteUbergraph_BP_InterceptComponent, K2Node_Event_DeltaSeconds) == 0x000024, "Member 'BP_InterceptComponent_C_ExecuteUbergraph_BP_InterceptComponent::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_InterceptComponent_C_ExecuteUbergraph_BP_InterceptComponent, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BP_InterceptComponent_C_ExecuteUbergraph_BP_InterceptComponent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InterceptComponent_C_ExecuteUbergraph_BP_InterceptComponent, K2Node_DynamicCast_AsBPI_Intercept) == 0x000030, "Member 'BP_InterceptComponent_C_ExecuteUbergraph_BP_InterceptComponent::K2Node_DynamicCast_AsBPI_Intercept' has a wrong offset!");
static_assert(offsetof(BP_InterceptComponent_C_ExecuteUbergraph_BP_InterceptComponent, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'BP_InterceptComponent_C_ExecuteUbergraph_BP_InterceptComponent::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_InterceptComponent_C_ExecuteUbergraph_BP_InterceptComponent, CallFunc_IsInterceptFail_bFail) == 0x000041, "Member 'BP_InterceptComponent_C_ExecuteUbergraph_BP_InterceptComponent::CallFunc_IsInterceptFail_bFail' has a wrong offset!");

// Function BP_InterceptComponent.BP_InterceptComponent_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_InterceptComponent_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InterceptComponent_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_InterceptComponent_C_ReceiveTick");
static_assert(sizeof(BP_InterceptComponent_C_ReceiveTick) == 0x000004, "Wrong size on BP_InterceptComponent_C_ReceiveTick");
static_assert(offsetof(BP_InterceptComponent_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_InterceptComponent_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_InterceptComponent.BP_InterceptComponent_C.CheckIntercept
// 0x0118 (0x0118 - 0x0000)
struct BP_InterceptComponent_C_CheckIntercept final
{
public:
	bool                                          bExistObject;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_50E6[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 LInterceptObject;                                  // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LbPsychicObject;                                   // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_50E7[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         LLengthSq;                                         // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LLnegthSqTemp;                                     // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LPlayerLocation;                                   // 0x001C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 LAttackObject;                                     // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 LAttackOwner;                                      // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETeamKind                                     LPlayerTeam;                                       // 0x0038(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_50E8[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UHitCheckComponent*                     LHitCheck;                                         // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LIndex;                                            // 0x0048(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LLoopLastIndex;                                    // 0x004C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_50E9[0x3];                                     // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEnableJustDodgePsychic_bOK;             // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnableIntercept_bOK;                    // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x005E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x005F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_50EA[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APsychicObjectManager_C*                CallFunc_GetPsychicObjectManager_PsyObjManager;    // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APsychicObjectManager_C*                CallFunc_GetPsychicObjectManager_PsyObjManager_1;  // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_50EB[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUDMainGame_C*                         CallFunc_GetHUDMainGame_HUDMainGame;               // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHitManager_C*                          CallFunc_GetHitManager_Manager;                    // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_50EC[0x3];                                     // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x009C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x00A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSizeSquared_ReturnValue;                 // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x00B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_50ED[0x3];                                     // 0x00C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetFixedCollisionAttackSource_ReturnValue; // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleCharacterInterface_C> K2Node_DynamicCast_AsBPI_Battle_Character_Interface; // 0x00D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ETeamKind                                     CallFunc_GetTeam_Team;                             // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x00E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_50EE[0x5];                                     // 0x00E3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleCharacterInterface_C> CallFunc_GetTeam_self_CastInput;                   // 0x00E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ETeamKind                                     CallFunc_GetTeam_Team_1;                           // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_50EF[0x6];                                     // 0x00FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetFixedCollisionAttacker_ReturnValue;    // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetFixedCollisionNum_ReturnValue;         // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFixedCollisionInterceptAble_ReturnValue; // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_50F0[0x3];                                     // 0x010D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0115(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_InterceptComponent_C_CheckIntercept) == 0x000008, "Wrong alignment on BP_InterceptComponent_C_CheckIntercept");
static_assert(sizeof(BP_InterceptComponent_C_CheckIntercept) == 0x000118, "Wrong size on BP_InterceptComponent_C_CheckIntercept");
static_assert(offsetof(BP_InterceptComponent_C_CheckIntercept, bExistObject) == 0x000000, "Member 'BP_InterceptComponent_C_CheckIntercept::bExistObject' has a wrong offset!");
static_assert(offsetof(BP_InterceptComponent_C_CheckIntercept, LInterceptObject) == 0x000008, "Member 'BP_InterceptComponent_C_CheckIntercept::LInterceptObject' has a wrong offset!");
static_assert(offsetof(BP_InterceptComponent_C_CheckIntercept, LbPsychicObject) == 0x000010, "Member 'BP_InterceptComponent_C_CheckIntercept::LbPsychicObject' has a wrong offset!");
static_assert(offsetof(BP_InterceptComponent_C_CheckIntercept, LLengthSq) == 0x000014, "Member 'BP_InterceptComponent_C_CheckIntercept::LLengthSq' has a wrong offset!");
static_assert(offsetof(BP_InterceptComponent_C_CheckIntercept, LLnegthSqTemp) == 0x000018, "Member 'BP_InterceptComponent_C_CheckIntercept::LLnegthSqTemp' has a wrong offset!");
static_assert(offsetof(BP_InterceptComponent_C_CheckIntercept, LPlayerLocation) == 0x00001C, "Member 'BP_InterceptComponent_C_CheckIntercept::LPlayerLocation' has a wrong offset!");
static_assert(offsetof(BP_InterceptComponent_C_CheckIntercept, LAttackObject) == 0x000028, "Member 'BP_InterceptComponent_C_CheckIntercept::LAttackObject' has a wrong offset!");
static_assert(offsetof(BP_InterceptComponent_C_CheckIntercept, LAttackOwner) == 0x000030, "Member 'BP_InterceptComponent_C_CheckIntercept::LAttackOwner' has a wrong offset!");
static_assert(offsetof(BP_InterceptComponent_C_CheckIntercept, LPlayerTeam) == 0x000038, "Member 'BP_InterceptComponent_C_CheckIntercept::LPlayerTeam' has a wrong offset!");
static_assert(offsetof(BP_InterceptComponent_C_CheckIntercept, LHitCheck) == 0x000040, "Member 'BP_InterceptComponent_C_CheckIntercept::LHitCheck' has a wrong offset!");
static_assert(offsetof(BP_InterceptComponent_C_CheckIntercept, LIndex) == 0x000048, "Member 'BP_InterceptComponent_C_CheckIntercept::LIndex' has a wrong offset!");
static_assert(offsetof(BP_InterceptComponent_C_CheckIntercept, LLoopLastIndex) == 0x00004C, "Member 'BP_InterceptComponent_C_CheckIntercept::LLoopLastIndex' has a wrong offset!");
static_assert(offsetof(BP_InterceptComponent_C_CheckIntercept, Temp_int_Variable) == 0x000050, "Member 'BP_InterceptComponent_C_CheckIntercept::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_InterceptComponent_C_CheckIntercept, CallFunc_IsValid_ReturnValue) == 0x000054, "Member 'BP_InterceptComponent_C_CheckIntercept::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InterceptComponent_C_CheckIntercept, CallFunc_Add_IntInt_ReturnValue) == 0x000058, "Member 'BP_InterceptComponent_C_CheckIntercept::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InterceptComponent_C_CheckIntercept, CallFunc_IsEnableJustDodgePsychic_bOK) == 0x00005C, "Member 'BP_InterceptComponent_C_CheckIntercept::CallFunc_IsEnableJustDodgePsychic_bOK' has a wrong offset!");
static_assert(offsetof(BP_InterceptComponent_C_CheckIntercept, CallFunc_IsEnableIntercept_bOK) == 0x00005D, "Member 'BP_InterceptComponent_C_CheckIntercept::CallFunc_IsEnableIntercept_bOK' has a wrong offset!");
static_assert(offsetof(BP_InterceptComponent_C_CheckIntercept, CallFunc_IsValid_ReturnValue_1) == 0x00005E, "Member 'BP_InterceptComponent_C_CheckIntercept::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_InterceptComponent_C_CheckIntercept, CallFunc_IsValid_ReturnValue_2) == 0x00005F, "Member 'BP_InterceptComponent_C_CheckIntercept::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_InterceptComponent_C_CheckIntercept, CallFunc_IsValid_ReturnValue_3) == 0x000060, "Member 'BP_InterceptComponent_C_CheckIntercept::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_InterceptComponent_C_CheckIntercept, CallFunc_GetPsychicObjectManager_PsyObjManager) == 0x000068, "Member 'BP_InterceptComponent_C_CheckIntercept::CallFunc_GetPsychicObjectManager_PsyObjManager' has a wrong offset!");
static_assert(offsetof(BP_InterceptComponent_C_CheckIntercept, CallFunc_GetPsychicObjectManager_PsyObjManager_1) == 0x000070, "Member 'BP_InterceptComponent_C_CheckIntercept::CallFunc_GetPsychicObjectManager_PsyObjManager_1' has a wrong offset!");
static_assert(offsetof(BP_InterceptComponent_C_CheckIntercept, CallFunc_IsValid_ReturnValue_4) == 0x000078, "Member 'BP_InterceptComponent_C_CheckIntercept::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_InterceptComponent_C_CheckIntercept, CallFunc_GetHUDMainGame_HUDMainGame) == 0x000080, "Member 'BP_InterceptComponent_C_CheckIntercept::CallFunc_GetHUDMainGame_HUDMainGame' has a wrong offset!");
static_assert(offsetof(BP_InterceptComponent_C_CheckIntercept, CallFunc_GetHitManager_Manager) == 0x000088, "Member 'BP_InterceptComponent_C_CheckIntercept::CallFunc_GetHitManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_InterceptComponent_C_CheckIntercept, CallFunc_IsValid_ReturnValue_5) == 0x000090, "Member 'BP_InterceptComponent_C_CheckIntercept::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_InterceptComponent_C_CheckIntercept, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000094, "Member 'BP_InterceptComponent_C_CheckIntercept::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InterceptComponent_C_CheckIntercept, CallFunc_Add_FloatFloat_ReturnValue) == 0x000098, "Member 'BP_InterceptComponent_C_CheckIntercept::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InterceptComponent_C_CheckIntercept, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00009C, "Member 'BP_InterceptComponent_C_CheckIntercept::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InterceptComponent_C_CheckIntercept, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0000A8, "Member 'BP_InterceptComponent_C_CheckIntercept::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InterceptComponent_C_CheckIntercept, CallFunc_VSizeSquared_ReturnValue) == 0x0000B4, "Member 'BP_InterceptComponent_C_CheckIntercept::CallFunc_VSizeSquared_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InterceptComponent_C_CheckIntercept, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x0000B8, "Member 'BP_InterceptComponent_C_CheckIntercept::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_InterceptComponent_C_CheckIntercept, CallFunc_IsValid_ReturnValue_6) == 0x0000C4, "Member 'BP_InterceptComponent_C_CheckIntercept::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_InterceptComponent_C_CheckIntercept, CallFunc_GetFixedCollisionAttackSource_ReturnValue) == 0x0000C8, "Member 'BP_InterceptComponent_C_CheckIntercept::CallFunc_GetFixedCollisionAttackSource_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InterceptComponent_C_CheckIntercept, K2Node_DynamicCast_AsBPI_Battle_Character_Interface) == 0x0000D0, "Member 'BP_InterceptComponent_C_CheckIntercept::K2Node_DynamicCast_AsBPI_Battle_Character_Interface' has a wrong offset!");
static_assert(offsetof(BP_InterceptComponent_C_CheckIntercept, K2Node_DynamicCast_bSuccess) == 0x0000E0, "Member 'BP_InterceptComponent_C_CheckIntercept::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_InterceptComponent_C_CheckIntercept, CallFunc_GetTeam_Team) == 0x0000E1, "Member 'BP_InterceptComponent_C_CheckIntercept::CallFunc_GetTeam_Team' has a wrong offset!");
static_assert(offsetof(BP_InterceptComponent_C_CheckIntercept, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x0000E2, "Member 'BP_InterceptComponent_C_CheckIntercept::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InterceptComponent_C_CheckIntercept, CallFunc_GetTeam_self_CastInput) == 0x0000E8, "Member 'BP_InterceptComponent_C_CheckIntercept::CallFunc_GetTeam_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_InterceptComponent_C_CheckIntercept, CallFunc_GetTeam_Team_1) == 0x0000F8, "Member 'BP_InterceptComponent_C_CheckIntercept::CallFunc_GetTeam_Team_1' has a wrong offset!");
static_assert(offsetof(BP_InterceptComponent_C_CheckIntercept, CallFunc_IsValid_ReturnValue_7) == 0x0000F9, "Member 'BP_InterceptComponent_C_CheckIntercept::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_InterceptComponent_C_CheckIntercept, CallFunc_GetFixedCollisionAttacker_ReturnValue) == 0x000100, "Member 'BP_InterceptComponent_C_CheckIntercept::CallFunc_GetFixedCollisionAttacker_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InterceptComponent_C_CheckIntercept, CallFunc_GetFixedCollisionNum_ReturnValue) == 0x000108, "Member 'BP_InterceptComponent_C_CheckIntercept::CallFunc_GetFixedCollisionNum_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InterceptComponent_C_CheckIntercept, CallFunc_IsFixedCollisionInterceptAble_ReturnValue) == 0x00010C, "Member 'BP_InterceptComponent_C_CheckIntercept::CallFunc_IsFixedCollisionInterceptAble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InterceptComponent_C_CheckIntercept, CallFunc_Subtract_IntInt_ReturnValue) == 0x000110, "Member 'BP_InterceptComponent_C_CheckIntercept::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InterceptComponent_C_CheckIntercept, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000114, "Member 'BP_InterceptComponent_C_CheckIntercept::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InterceptComponent_C_CheckIntercept, CallFunc_Less_FloatFloat_ReturnValue) == 0x000115, "Member 'BP_InterceptComponent_C_CheckIntercept::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_InterceptComponent.BP_InterceptComponent_C.ExecIntercept
// 0x0058 (0x0058 - 0x0000)
struct BP_InterceptComponent_C_ExecIntercept final
{
public:
	class ARSBattleCharacter_C*                   LNewTarget;                                        // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_Intercept_C>      K2Node_DynamicCast_AsBPI_Intercept;                // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsControlAI_bAI;                          // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_InterceptCancel_bDummy;                   // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_50F1[0x5];                                     // 0x001B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GameSystemManager_C*                CallFunc_GetGameSystemManager_Manager;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APsychicObjectManager_C*                CallFunc_GetPsychicObjectManager_PsyObjManager;    // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_50F2[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetCurrentTargetActor_TargetActor;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_50F3[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattleCharacter_C*                   K2Node_DynamicCast_AsRSBattle_Character;           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_InterceptComponent_C_ExecIntercept) == 0x000008, "Wrong alignment on BP_InterceptComponent_C_ExecIntercept");
static_assert(sizeof(BP_InterceptComponent_C_ExecIntercept) == 0x000058, "Wrong size on BP_InterceptComponent_C_ExecIntercept");
static_assert(offsetof(BP_InterceptComponent_C_ExecIntercept, LNewTarget) == 0x000000, "Member 'BP_InterceptComponent_C_ExecIntercept::LNewTarget' has a wrong offset!");
static_assert(offsetof(BP_InterceptComponent_C_ExecIntercept, K2Node_DynamicCast_AsBPI_Intercept) == 0x000008, "Member 'BP_InterceptComponent_C_ExecIntercept::K2Node_DynamicCast_AsBPI_Intercept' has a wrong offset!");
static_assert(offsetof(BP_InterceptComponent_C_ExecIntercept, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_InterceptComponent_C_ExecIntercept::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_InterceptComponent_C_ExecIntercept, CallFunc_IsControlAI_bAI) == 0x000019, "Member 'BP_InterceptComponent_C_ExecIntercept::CallFunc_IsControlAI_bAI' has a wrong offset!");
static_assert(offsetof(BP_InterceptComponent_C_ExecIntercept, CallFunc_InterceptCancel_bDummy) == 0x00001A, "Member 'BP_InterceptComponent_C_ExecIntercept::CallFunc_InterceptCancel_bDummy' has a wrong offset!");
static_assert(offsetof(BP_InterceptComponent_C_ExecIntercept, CallFunc_GetGameSystemManager_Manager) == 0x000020, "Member 'BP_InterceptComponent_C_ExecIntercept::CallFunc_GetGameSystemManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_InterceptComponent_C_ExecIntercept, CallFunc_GetPsychicObjectManager_PsyObjManager) == 0x000028, "Member 'BP_InterceptComponent_C_ExecIntercept::CallFunc_GetPsychicObjectManager_PsyObjManager' has a wrong offset!");
static_assert(offsetof(BP_InterceptComponent_C_ExecIntercept, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BP_InterceptComponent_C_ExecIntercept::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InterceptComponent_C_ExecIntercept, CallFunc_GetCurrentTargetActor_TargetActor) == 0x000038, "Member 'BP_InterceptComponent_C_ExecIntercept::CallFunc_GetCurrentTargetActor_TargetActor' has a wrong offset!");
static_assert(offsetof(BP_InterceptComponent_C_ExecIntercept, CallFunc_IsValid_ReturnValue_1) == 0x000040, "Member 'BP_InterceptComponent_C_ExecIntercept::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_InterceptComponent_C_ExecIntercept, K2Node_DynamicCast_AsRSBattle_Character) == 0x000048, "Member 'BP_InterceptComponent_C_ExecIntercept::K2Node_DynamicCast_AsRSBattle_Character' has a wrong offset!");
static_assert(offsetof(BP_InterceptComponent_C_ExecIntercept, K2Node_DynamicCast_bSuccess_1) == 0x000050, "Member 'BP_InterceptComponent_C_ExecIntercept::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function BP_InterceptComponent.BP_InterceptComponent_C.ResetIntercept
// 0x0008 (0x0008 - 0x0000)
struct BP_InterceptComponent_C_ResetIntercept final
{
public:
	class AHUDMainGame_C*                         CallFunc_GetHUDMainGame_HUDMainGame;               // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InterceptComponent_C_ResetIntercept) == 0x000008, "Wrong alignment on BP_InterceptComponent_C_ResetIntercept");
static_assert(sizeof(BP_InterceptComponent_C_ResetIntercept) == 0x000008, "Wrong size on BP_InterceptComponent_C_ResetIntercept");
static_assert(offsetof(BP_InterceptComponent_C_ResetIntercept, CallFunc_GetHUDMainGame_HUDMainGame) == 0x000000, "Member 'BP_InterceptComponent_C_ResetIntercept::CallFunc_GetHUDMainGame_HUDMainGame' has a wrong offset!");

// Function BP_InterceptComponent.BP_InterceptComponent_C.CancelIntercept
// 0x0020 (0x0020 - 0x0000)
struct BP_InterceptComponent_C_CancelIntercept final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_50F4[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_Intercept_C>      K2Node_DynamicCast_AsBPI_Intercept;                // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_InterceptCancel_bDummy;                   // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_InterceptComponent_C_CancelIntercept) == 0x000008, "Wrong alignment on BP_InterceptComponent_C_CancelIntercept");
static_assert(sizeof(BP_InterceptComponent_C_CancelIntercept) == 0x000020, "Wrong size on BP_InterceptComponent_C_CancelIntercept");
static_assert(offsetof(BP_InterceptComponent_C_CancelIntercept, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_InterceptComponent_C_CancelIntercept::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InterceptComponent_C_CancelIntercept, K2Node_DynamicCast_AsBPI_Intercept) == 0x000008, "Member 'BP_InterceptComponent_C_CancelIntercept::K2Node_DynamicCast_AsBPI_Intercept' has a wrong offset!");
static_assert(offsetof(BP_InterceptComponent_C_CancelIntercept, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_InterceptComponent_C_CancelIntercept::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_InterceptComponent_C_CancelIntercept, CallFunc_InterceptCancel_bDummy) == 0x000019, "Member 'BP_InterceptComponent_C_CancelIntercept::CallFunc_InterceptCancel_bDummy' has a wrong offset!");

// Function BP_InterceptComponent.BP_InterceptComponent_C.ReserveIntercept
// 0x0020 (0x0020 - 0x0000)
struct BP_InterceptComponent_C_ReserveIntercept final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_50F5[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_Intercept_C>      K2Node_DynamicCast_AsBPI_Intercept;                // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_InterceptReserve_bDummy;                  // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_InterceptComponent_C_ReserveIntercept) == 0x000008, "Wrong alignment on BP_InterceptComponent_C_ReserveIntercept");
static_assert(sizeof(BP_InterceptComponent_C_ReserveIntercept) == 0x000020, "Wrong size on BP_InterceptComponent_C_ReserveIntercept");
static_assert(offsetof(BP_InterceptComponent_C_ReserveIntercept, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_InterceptComponent_C_ReserveIntercept::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InterceptComponent_C_ReserveIntercept, K2Node_DynamicCast_AsBPI_Intercept) == 0x000008, "Member 'BP_InterceptComponent_C_ReserveIntercept::K2Node_DynamicCast_AsBPI_Intercept' has a wrong offset!");
static_assert(offsetof(BP_InterceptComponent_C_ReserveIntercept, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_InterceptComponent_C_ReserveIntercept::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_InterceptComponent_C_ReserveIntercept, CallFunc_InterceptReserve_bDummy) == 0x000019, "Member 'BP_InterceptComponent_C_ReserveIntercept::CallFunc_InterceptReserve_bDummy' has a wrong offset!");

// Function BP_InterceptComponent.BP_InterceptComponent_C.CatchInterceptObject
// 0x0001 (0x0001 - 0x0000)
struct BP_InterceptComponent_C_CatchInterceptObject final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_InterceptComponent_C_CatchInterceptObject) == 0x000001, "Wrong alignment on BP_InterceptComponent_C_CatchInterceptObject");
static_assert(sizeof(BP_InterceptComponent_C_CatchInterceptObject) == 0x000001, "Wrong size on BP_InterceptComponent_C_CatchInterceptObject");
static_assert(offsetof(BP_InterceptComponent_C_CatchInterceptObject, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_InterceptComponent_C_CatchInterceptObject::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_InterceptComponent.BP_InterceptComponent_C.IsInterceptAble
// 0x0018 (0x0018 - 0x0000)
struct BP_InterceptComponent_C_IsInterceptAble final
{
public:
	bool                                          bAble;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          LbAble;                                            // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_50F6[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetCurrentTargetActor_TargetActor;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_InterceptComponent_C_IsInterceptAble) == 0x000008, "Wrong alignment on BP_InterceptComponent_C_IsInterceptAble");
static_assert(sizeof(BP_InterceptComponent_C_IsInterceptAble) == 0x000018, "Wrong size on BP_InterceptComponent_C_IsInterceptAble");
static_assert(offsetof(BP_InterceptComponent_C_IsInterceptAble, bAble) == 0x000000, "Member 'BP_InterceptComponent_C_IsInterceptAble::bAble' has a wrong offset!");
static_assert(offsetof(BP_InterceptComponent_C_IsInterceptAble, LbAble) == 0x000001, "Member 'BP_InterceptComponent_C_IsInterceptAble::LbAble' has a wrong offset!");
static_assert(offsetof(BP_InterceptComponent_C_IsInterceptAble, CallFunc_GetCurrentTargetActor_TargetActor) == 0x000008, "Member 'BP_InterceptComponent_C_IsInterceptAble::CallFunc_GetCurrentTargetActor_TargetActor' has a wrong offset!");
static_assert(offsetof(BP_InterceptComponent_C_IsInterceptAble, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_InterceptComponent_C_IsInterceptAble::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InterceptComponent_C_IsInterceptAble, CallFunc_IsValid_ReturnValue_1) == 0x000011, "Member 'BP_InterceptComponent_C_IsInterceptAble::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_InterceptComponent.BP_InterceptComponent_C.IsExistInterceptObject
// 0x0002 (0x0002 - 0x0000)
struct BP_InterceptComponent_C_IsExistInterceptObject final
{
public:
	bool                                          bExist;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_InterceptComponent_C_IsExistInterceptObject) == 0x000001, "Wrong alignment on BP_InterceptComponent_C_IsExistInterceptObject");
static_assert(sizeof(BP_InterceptComponent_C_IsExistInterceptObject) == 0x000002, "Wrong size on BP_InterceptComponent_C_IsExistInterceptObject");
static_assert(offsetof(BP_InterceptComponent_C_IsExistInterceptObject, bExist) == 0x000000, "Member 'BP_InterceptComponent_C_IsExistInterceptObject::bExist' has a wrong offset!");
static_assert(offsetof(BP_InterceptComponent_C_IsExistInterceptObject, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'BP_InterceptComponent_C_IsExistInterceptObject::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_InterceptComponent.BP_InterceptComponent_C.IsNoEnemyAttackIntercept
// 0x0001 (0x0001 - 0x0000)
struct BP_InterceptComponent_C_IsNoEnemyAttackIntercept final
{
public:
	bool                                          bNoEnemyAttack;                                    // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_InterceptComponent_C_IsNoEnemyAttackIntercept) == 0x000001, "Wrong alignment on BP_InterceptComponent_C_IsNoEnemyAttackIntercept");
static_assert(sizeof(BP_InterceptComponent_C_IsNoEnemyAttackIntercept) == 0x000001, "Wrong size on BP_InterceptComponent_C_IsNoEnemyAttackIntercept");
static_assert(offsetof(BP_InterceptComponent_C_IsNoEnemyAttackIntercept, bNoEnemyAttack) == 0x000000, "Member 'BP_InterceptComponent_C_IsNoEnemyAttackIntercept::bNoEnemyAttack' has a wrong offset!");

// Function BP_InterceptComponent.BP_InterceptComponent_C.IsReserveIntercept
// 0x0001 (0x0001 - 0x0000)
struct BP_InterceptComponent_C_IsReserveIntercept final
{
public:
	bool                                          bReserve;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_InterceptComponent_C_IsReserveIntercept) == 0x000001, "Wrong alignment on BP_InterceptComponent_C_IsReserveIntercept");
static_assert(sizeof(BP_InterceptComponent_C_IsReserveIntercept) == 0x000001, "Wrong size on BP_InterceptComponent_C_IsReserveIntercept");
static_assert(offsetof(BP_InterceptComponent_C_IsReserveIntercept, bReserve) == 0x000000, "Member 'BP_InterceptComponent_C_IsReserveIntercept::bReserve' has a wrong offset!");

}

