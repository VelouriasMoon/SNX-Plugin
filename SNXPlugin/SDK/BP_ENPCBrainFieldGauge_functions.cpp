#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ENPCBrainFieldGauge

#include "Basic.hpp"

#include "BP_ENPCBrainFieldGauge_classes.hpp"
#include "BP_ENPCBrainFieldGauge_parameters.hpp"


namespace SDK
{

// Function BP_ENPCBrainFieldGauge.BP_ENPCBrainFieldGauge_C.ExecuteUbergraph_BP_ENPCBrainFieldGauge
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ENPCBrainFieldGauge_C::ExecuteUbergraph_BP_ENPCBrainFieldGauge(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENPCBrainFieldGauge_C", "ExecuteUbergraph_BP_ENPCBrainFieldGauge");

	Params::BP_ENPCBrainFieldGauge_C_ExecuteUbergraph_BP_ENPCBrainFieldGauge Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ENPCBrainFieldGauge.BP_ENPCBrainFieldGauge_C.OnChangedBrainFieldEnd
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EBrainFieldEndType                      EndType                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ENPCBrainFieldGauge_C::OnChangedBrainFieldEnd(EBrainFieldEndType EndType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENPCBrainFieldGauge_C", "OnChangedBrainFieldEnd");

	Params::BP_ENPCBrainFieldGauge_C_OnChangedBrainFieldEnd Parms{};

	Parms.EndType = EndType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ENPCBrainFieldGauge.BP_ENPCBrainFieldGauge_C.OnChangedBrainFieldStart
// (BlueprintCallable, BlueprintEvent)

void UBP_ENPCBrainFieldGauge_C::OnChangedBrainFieldStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENPCBrainFieldGauge_C", "OnChangedBrainFieldStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ENPCBrainFieldGauge.BP_ENPCBrainFieldGauge_C.OnChangedBrainFieldBG
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsBrainField                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_ENPCBrainFieldGauge_C::OnChangedBrainFieldBG(bool IsBrainField)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENPCBrainFieldGauge_C", "OnChangedBrainFieldBG");

	Params::BP_ENPCBrainFieldGauge_C_OnChangedBrainFieldBG Parms{};

	Parms.IsBrainField = IsBrainField;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ENPCBrainFieldGauge.BP_ENPCBrainFieldGauge_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UBP_ENPCBrainFieldGauge_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENPCBrainFieldGauge_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ENPCBrainFieldGauge.BP_ENPCBrainFieldGauge_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ENPCBrainFieldGauge_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENPCBrainFieldGauge_C", "ReceiveTick");

	Params::BP_ENPCBrainFieldGauge_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ENPCBrainFieldGauge.BP_ENPCBrainFieldGauge_C.AddGaugeByAttack
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Attacker                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ENPCBrainFieldGauge_C::AddGaugeByAttack(class AActor* Attacker)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENPCBrainFieldGauge_C", "AddGaugeByAttack");

	Params::BP_ENPCBrainFieldGauge_C_AddGaugeByAttack Parms{};

	Parms.Attacker = Attacker;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ENPCBrainFieldGauge.BP_ENPCBrainFieldGauge_C.Set Enable Gauge
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bEnable                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bForce                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class AActor*                           BrainFieldUser                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ENPCBrainFieldGauge_C::Set_Enable_Gauge(bool bEnable, bool bForce, class AActor* BrainFieldUser)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENPCBrainFieldGauge_C", "Set Enable Gauge");

	Params::BP_ENPCBrainFieldGauge_C_Set_Enable_Gauge Parms{};

	Parms.bEnable = bEnable;
	Parms.bForce = bForce;
	Parms.BrainFieldUser = BrainFieldUser;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ENPCBrainFieldGauge.BP_ENPCBrainFieldGauge_C.setMode
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bInBrainField                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class AActor*                           BFUser                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ENPCBrainFieldGauge_C::SetMode(bool bInBrainField, class AActor* BFUser)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENPCBrainFieldGauge_C", "setMode");

	Params::BP_ENPCBrainFieldGauge_C_SetMode Parms{};

	Parms.bInBrainField = bInBrainField;
	Parms.BFUser = BFUser;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ENPCBrainFieldGauge.BP_ENPCBrainFieldGauge_C.TickBrainField
// (Private, BlueprintCallable, BlueprintEvent)

void UBP_ENPCBrainFieldGauge_C::TickBrainField()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENPCBrainFieldGauge_C", "TickBrainField");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ENPCBrainFieldGauge.BP_ENPCBrainFieldGauge_C.TickNormalField
// (Private, BlueprintCallable, BlueprintEvent)

void UBP_ENPCBrainFieldGauge_C::TickNormalField()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENPCBrainFieldGauge_C", "TickNormalField");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ENPCBrainFieldGauge.BP_ENPCBrainFieldGauge_C.ResetGauge
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_ENPCBrainFieldGauge_C::ResetGauge()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENPCBrainFieldGauge_C", "ResetGauge");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ENPCBrainFieldGauge.BP_ENPCBrainFieldGauge_C.AddGaugeByDefense
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Attacker                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ENPCBrainFieldGauge_C::AddGaugeByDefense(class AActor* Attacker)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENPCBrainFieldGauge_C", "AddGaugeByDefense");

	Params::BP_ENPCBrainFieldGauge_C_AddGaugeByDefense Parms{};

	Parms.Attacker = Attacker;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ENPCBrainFieldGauge.BP_ENPCBrainFieldGauge_C.SetVisibleGauge
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bVisible                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bFromEnpc                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_ENPCBrainFieldGauge_C::SetVisibleGauge(bool bVisible, bool bFromEnpc)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENPCBrainFieldGauge_C", "SetVisibleGauge");

	Params::BP_ENPCBrainFieldGauge_C_SetVisibleGauge Parms{};

	Parms.bVisible = bVisible;
	Parms.bFromEnpc = bFromEnpc;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ENPCBrainFieldGauge.BP_ENPCBrainFieldGauge_C.SetUpdateGauge
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bUpdate                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class FName                             ClaimantName                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ENPCBrainFieldGauge_C::SetUpdateGauge(bool bUpdate, class FName ClaimantName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENPCBrainFieldGauge_C", "SetUpdateGauge");

	Params::BP_ENPCBrainFieldGauge_C_SetUpdateGauge Parms{};

	Parms.bUpdate = bUpdate;
	Parms.ClaimantName = ClaimantName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ENPCBrainFieldGauge.BP_ENPCBrainFieldGauge_C.SetFullGauge
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_ENPCBrainFieldGauge_C::SetFullGauge()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENPCBrainFieldGauge_C", "SetFullGauge");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ENPCBrainFieldGauge.BP_ENPCBrainFieldGauge_C.GetGaugeRate
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// float                                   Rate                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ENPCBrainFieldGauge_C::GetGaugeRate(float* Rate) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENPCBrainFieldGauge_C", "GetGaugeRate");

	Params::BP_ENPCBrainFieldGauge_C_GetGaugeRate Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Rate != nullptr)
		*Rate = Parms.Rate;
}


// Function BP_ENPCBrainFieldGauge.BP_ENPCBrainFieldGauge_C.IsEnableGauge
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    Param_bEnableGauge                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_ENPCBrainFieldGauge_C::IsEnableGauge(bool* Param_bEnableGauge) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ENPCBrainFieldGauge_C", "IsEnableGauge");

	Params::BP_ENPCBrainFieldGauge_C_IsEnableGauge Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_bEnableGauge != nullptr)
		*Param_bEnableGauge = Parms.Param_bEnableGauge;
}

}

