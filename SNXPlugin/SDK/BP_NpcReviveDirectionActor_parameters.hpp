#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_NpcReviveDirectionActor

#include "Basic.hpp"

#include "BattlePrototype_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_NpcReviveDirectionActor.BP_NpcReviveDirectionActor_C.ExecuteUbergraph_BP_NpcReviveDirectionActor
// 0x0088 (0x0088 - 0x0000)
struct BP_NpcReviveDirectionActor_C_ExecuteUbergraph_BP_NpcReviveDirectionActor final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PostProcessManager_C*               CallFunc_GetPostProcessManager_Manager;            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IPlayerInterface>      CallFunc_GetPartyPlayerKind_self_CastInput;        // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ERSPartyPlayerKind                            CallFunc_GetPartyPlayerKind_ReturnValue;           // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RevivePlayer_bSuccess;                    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_92CE[0x2];                                     // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_92CF[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_GetAnimMontageFromSet_Montage;            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PlayAnimMontage_ReturnValue;              // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_92D0[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GameSystemManager_C*                CallFunc_GetGameSystemManager_Manager;             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_CableBase_C*>                CallFunc_GetResurrectCableList_ResurrectCableList; // 0x0048(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_92D1[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_92D2[0x3];                                     // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x0074(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NpcReviveDirectionActor_C_ExecuteUbergraph_BP_NpcReviveDirectionActor) == 0x000008, "Wrong alignment on BP_NpcReviveDirectionActor_C_ExecuteUbergraph_BP_NpcReviveDirectionActor");
static_assert(sizeof(BP_NpcReviveDirectionActor_C_ExecuteUbergraph_BP_NpcReviveDirectionActor) == 0x000088, "Wrong size on BP_NpcReviveDirectionActor_C_ExecuteUbergraph_BP_NpcReviveDirectionActor");
static_assert(offsetof(BP_NpcReviveDirectionActor_C_ExecuteUbergraph_BP_NpcReviveDirectionActor, EntryPoint) == 0x000000, "Member 'BP_NpcReviveDirectionActor_C_ExecuteUbergraph_BP_NpcReviveDirectionActor::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_NpcReviveDirectionActor_C_ExecuteUbergraph_BP_NpcReviveDirectionActor, Temp_int_Loop_Num_Variable) == 0x000004, "Member 'BP_NpcReviveDirectionActor_C_ExecuteUbergraph_BP_NpcReviveDirectionActor::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_NpcReviveDirectionActor_C_ExecuteUbergraph_BP_NpcReviveDirectionActor, CallFunc_GetPostProcessManager_Manager) == 0x000008, "Member 'BP_NpcReviveDirectionActor_C_ExecuteUbergraph_BP_NpcReviveDirectionActor::CallFunc_GetPostProcessManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_NpcReviveDirectionActor_C_ExecuteUbergraph_BP_NpcReviveDirectionActor, CallFunc_GetPartyPlayerKind_self_CastInput) == 0x000010, "Member 'BP_NpcReviveDirectionActor_C_ExecuteUbergraph_BP_NpcReviveDirectionActor::CallFunc_GetPartyPlayerKind_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_NpcReviveDirectionActor_C_ExecuteUbergraph_BP_NpcReviveDirectionActor, CallFunc_GetPartyPlayerKind_ReturnValue) == 0x000020, "Member 'BP_NpcReviveDirectionActor_C_ExecuteUbergraph_BP_NpcReviveDirectionActor::CallFunc_GetPartyPlayerKind_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NpcReviveDirectionActor_C_ExecuteUbergraph_BP_NpcReviveDirectionActor, CallFunc_RevivePlayer_bSuccess) == 0x000021, "Member 'BP_NpcReviveDirectionActor_C_ExecuteUbergraph_BP_NpcReviveDirectionActor::CallFunc_RevivePlayer_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_NpcReviveDirectionActor_C_ExecuteUbergraph_BP_NpcReviveDirectionActor, Temp_int_Array_Index_Variable) == 0x000024, "Member 'BP_NpcReviveDirectionActor_C_ExecuteUbergraph_BP_NpcReviveDirectionActor::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_NpcReviveDirectionActor_C_ExecuteUbergraph_BP_NpcReviveDirectionActor, CallFunc_Not_PreBool_ReturnValue) == 0x000028, "Member 'BP_NpcReviveDirectionActor_C_ExecuteUbergraph_BP_NpcReviveDirectionActor::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NpcReviveDirectionActor_C_ExecuteUbergraph_BP_NpcReviveDirectionActor, CallFunc_GetAnimMontageFromSet_Montage) == 0x000030, "Member 'BP_NpcReviveDirectionActor_C_ExecuteUbergraph_BP_NpcReviveDirectionActor::CallFunc_GetAnimMontageFromSet_Montage' has a wrong offset!");
static_assert(offsetof(BP_NpcReviveDirectionActor_C_ExecuteUbergraph_BP_NpcReviveDirectionActor, CallFunc_PlayAnimMontage_ReturnValue) == 0x000038, "Member 'BP_NpcReviveDirectionActor_C_ExecuteUbergraph_BP_NpcReviveDirectionActor::CallFunc_PlayAnimMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NpcReviveDirectionActor_C_ExecuteUbergraph_BP_NpcReviveDirectionActor, CallFunc_GetGameSystemManager_Manager) == 0x000040, "Member 'BP_NpcReviveDirectionActor_C_ExecuteUbergraph_BP_NpcReviveDirectionActor::CallFunc_GetGameSystemManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_NpcReviveDirectionActor_C_ExecuteUbergraph_BP_NpcReviveDirectionActor, CallFunc_GetResurrectCableList_ResurrectCableList) == 0x000048, "Member 'BP_NpcReviveDirectionActor_C_ExecuteUbergraph_BP_NpcReviveDirectionActor::CallFunc_GetResurrectCableList_ResurrectCableList' has a wrong offset!");
static_assert(offsetof(BP_NpcReviveDirectionActor_C_ExecuteUbergraph_BP_NpcReviveDirectionActor, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'BP_NpcReviveDirectionActor_C_ExecuteUbergraph_BP_NpcReviveDirectionActor::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NpcReviveDirectionActor_C_ExecuteUbergraph_BP_NpcReviveDirectionActor, CallFunc_GetPlayerController_ReturnValue) == 0x000060, "Member 'BP_NpcReviveDirectionActor_C_ExecuteUbergraph_BP_NpcReviveDirectionActor::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NpcReviveDirectionActor_C_ExecuteUbergraph_BP_NpcReviveDirectionActor, Temp_int_Loop_Counter_Variable) == 0x000068, "Member 'BP_NpcReviveDirectionActor_C_ExecuteUbergraph_BP_NpcReviveDirectionActor::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_NpcReviveDirectionActor_C_ExecuteUbergraph_BP_NpcReviveDirectionActor, CallFunc_Less_IntInt_ReturnValue) == 0x00006C, "Member 'BP_NpcReviveDirectionActor_C_ExecuteUbergraph_BP_NpcReviveDirectionActor::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NpcReviveDirectionActor_C_ExecuteUbergraph_BP_NpcReviveDirectionActor, CallFunc_Add_IntInt_ReturnValue) == 0x000070, "Member 'BP_NpcReviveDirectionActor_C_ExecuteUbergraph_BP_NpcReviveDirectionActor::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NpcReviveDirectionActor_C_ExecuteUbergraph_BP_NpcReviveDirectionActor, CallFunc_SelectVector_ReturnValue) == 0x000074, "Member 'BP_NpcReviveDirectionActor_C_ExecuteUbergraph_BP_NpcReviveDirectionActor::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NpcReviveDirectionActor_C_ExecuteUbergraph_BP_NpcReviveDirectionActor, K2Node_Event_DeltaSeconds) == 0x000080, "Member 'BP_NpcReviveDirectionActor_C_ExecuteUbergraph_BP_NpcReviveDirectionActor::K2Node_Event_DeltaSeconds' has a wrong offset!");

// Function BP_NpcReviveDirectionActor.BP_NpcReviveDirectionActor_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_NpcReviveDirectionActor_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NpcReviveDirectionActor_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_NpcReviveDirectionActor_C_ReceiveTick");
static_assert(sizeof(BP_NpcReviveDirectionActor_C_ReceiveTick) == 0x000004, "Wrong size on BP_NpcReviveDirectionActor_C_ReceiveTick");
static_assert(offsetof(BP_NpcReviveDirectionActor_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_NpcReviveDirectionActor_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_NpcReviveDirectionActor.BP_NpcReviveDirectionActor_C.BeginDirection
// 0x0028 (0x0028 - 0x0000)
struct BP_NpcReviveDirectionActor_C_BeginDirection final
{
public:
	class ARSBattlePlayer_C*                      InRevivePlayer;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInFromNpc;                                        // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_92D3[0x6];                                     // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CharacterParamater_C> CallFunc_IsDead_self_CastInput;                    // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDead_bDead;                             // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_NpcReviveDirectionActor_C_BeginDirection) == 0x000008, "Wrong alignment on BP_NpcReviveDirectionActor_C_BeginDirection");
static_assert(sizeof(BP_NpcReviveDirectionActor_C_BeginDirection) == 0x000028, "Wrong size on BP_NpcReviveDirectionActor_C_BeginDirection");
static_assert(offsetof(BP_NpcReviveDirectionActor_C_BeginDirection, InRevivePlayer) == 0x000000, "Member 'BP_NpcReviveDirectionActor_C_BeginDirection::InRevivePlayer' has a wrong offset!");
static_assert(offsetof(BP_NpcReviveDirectionActor_C_BeginDirection, bInFromNpc) == 0x000008, "Member 'BP_NpcReviveDirectionActor_C_BeginDirection::bInFromNpc' has a wrong offset!");
static_assert(offsetof(BP_NpcReviveDirectionActor_C_BeginDirection, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'BP_NpcReviveDirectionActor_C_BeginDirection::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NpcReviveDirectionActor_C_BeginDirection, CallFunc_IsDead_self_CastInput) == 0x000010, "Member 'BP_NpcReviveDirectionActor_C_BeginDirection::CallFunc_IsDead_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_NpcReviveDirectionActor_C_BeginDirection, CallFunc_IsDead_bDead) == 0x000020, "Member 'BP_NpcReviveDirectionActor_C_BeginDirection::CallFunc_IsDead_bDead' has a wrong offset!");

// Function BP_NpcReviveDirectionActor.BP_NpcReviveDirectionActor_C.FinishRevive
// 0x0030 (0x0030 - 0x0000)
struct BP_NpcReviveDirectionActor_C_FinishRevive final
{
public:
	bool                                          bCableOff;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_92D4[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_CableBase_C*>                CallFunc_GetResurrectCableList_ResurrectCableList; // 0x0010(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_92D5[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NpcReviveDirectionActor_C_FinishRevive) == 0x000008, "Wrong alignment on BP_NpcReviveDirectionActor_C_FinishRevive");
static_assert(sizeof(BP_NpcReviveDirectionActor_C_FinishRevive) == 0x000030, "Wrong size on BP_NpcReviveDirectionActor_C_FinishRevive");
static_assert(offsetof(BP_NpcReviveDirectionActor_C_FinishRevive, bCableOff) == 0x000000, "Member 'BP_NpcReviveDirectionActor_C_FinishRevive::bCableOff' has a wrong offset!");
static_assert(offsetof(BP_NpcReviveDirectionActor_C_FinishRevive, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_NpcReviveDirectionActor_C_FinishRevive::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_NpcReviveDirectionActor_C_FinishRevive, Temp_int_Loop_Num_Variable) == 0x000008, "Member 'BP_NpcReviveDirectionActor_C_FinishRevive::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_NpcReviveDirectionActor_C_FinishRevive, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BP_NpcReviveDirectionActor_C_FinishRevive::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_NpcReviveDirectionActor_C_FinishRevive, CallFunc_GetResurrectCableList_ResurrectCableList) == 0x000010, "Member 'BP_NpcReviveDirectionActor_C_FinishRevive::CallFunc_GetResurrectCableList_ResurrectCableList' has a wrong offset!");
static_assert(offsetof(BP_NpcReviveDirectionActor_C_FinishRevive, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'BP_NpcReviveDirectionActor_C_FinishRevive::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NpcReviveDirectionActor_C_FinishRevive, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'BP_NpcReviveDirectionActor_C_FinishRevive::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NpcReviveDirectionActor_C_FinishRevive, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BP_NpcReviveDirectionActor_C_FinishRevive::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_NpcReviveDirectionActor.BP_NpcReviveDirectionActor_C.ExecCableEvent
// 0x0068 (0x0068 - 0x0000)
struct BP_NpcReviveDirectionActor_C_ExecCableEvent final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_92D6[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetReviveCableSocketName_SocketName;      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_92D7[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_CableBase_C*>                CallFunc_GetResurrectCableList_ResurrectCableList; // 0x0028(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_1;                      // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_92D8[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_CableBase_C*>                CallFunc_GetResurrectCableList_ResurrectCableList_1; // 0x0048(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_92D9[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_NpcReviveDirectionActor_C_ExecCableEvent) == 0x000008, "Wrong alignment on BP_NpcReviveDirectionActor_C_ExecCableEvent");
static_assert(sizeof(BP_NpcReviveDirectionActor_C_ExecCableEvent) == 0x000068, "Wrong size on BP_NpcReviveDirectionActor_C_ExecCableEvent");
static_assert(offsetof(BP_NpcReviveDirectionActor_C_ExecCableEvent, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_NpcReviveDirectionActor_C_ExecCableEvent::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_NpcReviveDirectionActor_C_ExecCableEvent, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_NpcReviveDirectionActor_C_ExecCableEvent::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_NpcReviveDirectionActor_C_ExecCableEvent, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_NpcReviveDirectionActor_C_ExecCableEvent::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NpcReviveDirectionActor_C_ExecCableEvent, Temp_int_Array_Index_Variable_1) == 0x00000C, "Member 'BP_NpcReviveDirectionActor_C_ExecCableEvent::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_NpcReviveDirectionActor_C_ExecCableEvent, Temp_int_Loop_Num_Variable) == 0x000010, "Member 'BP_NpcReviveDirectionActor_C_ExecCableEvent::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_NpcReviveDirectionActor_C_ExecCableEvent, CallFunc_Less_IntInt_ReturnValue) == 0x000014, "Member 'BP_NpcReviveDirectionActor_C_ExecCableEvent::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NpcReviveDirectionActor_C_ExecCableEvent, CallFunc_GetReviveCableSocketName_SocketName) == 0x000018, "Member 'BP_NpcReviveDirectionActor_C_ExecCableEvent::CallFunc_GetReviveCableSocketName_SocketName' has a wrong offset!");
static_assert(offsetof(BP_NpcReviveDirectionActor_C_ExecCableEvent, Temp_int_Loop_Counter_Variable_1) == 0x000020, "Member 'BP_NpcReviveDirectionActor_C_ExecCableEvent::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_NpcReviveDirectionActor_C_ExecCableEvent, CallFunc_GetResurrectCableList_ResurrectCableList) == 0x000028, "Member 'BP_NpcReviveDirectionActor_C_ExecCableEvent::CallFunc_GetResurrectCableList_ResurrectCableList' has a wrong offset!");
static_assert(offsetof(BP_NpcReviveDirectionActor_C_ExecCableEvent, CallFunc_Add_IntInt_ReturnValue_1) == 0x000038, "Member 'BP_NpcReviveDirectionActor_C_ExecCableEvent::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NpcReviveDirectionActor_C_ExecCableEvent, CallFunc_Array_Length_ReturnValue) == 0x00003C, "Member 'BP_NpcReviveDirectionActor_C_ExecCableEvent::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NpcReviveDirectionActor_C_ExecCableEvent, Temp_int_Loop_Num_Variable_1) == 0x000040, "Member 'BP_NpcReviveDirectionActor_C_ExecCableEvent::Temp_int_Loop_Num_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_NpcReviveDirectionActor_C_ExecCableEvent, CallFunc_GetResurrectCableList_ResurrectCableList_1) == 0x000048, "Member 'BP_NpcReviveDirectionActor_C_ExecCableEvent::CallFunc_GetResurrectCableList_ResurrectCableList_1' has a wrong offset!");
static_assert(offsetof(BP_NpcReviveDirectionActor_C_ExecCableEvent, CallFunc_Less_IntInt_ReturnValue_1) == 0x000058, "Member 'BP_NpcReviveDirectionActor_C_ExecCableEvent::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NpcReviveDirectionActor_C_ExecCableEvent, CallFunc_Array_Length_ReturnValue_1) == 0x00005C, "Member 'BP_NpcReviveDirectionActor_C_ExecCableEvent::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NpcReviveDirectionActor_C_ExecCableEvent, K2Node_SwitchEnum_CmpSuccess) == 0x000060, "Member 'BP_NpcReviveDirectionActor_C_ExecCableEvent::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_NpcReviveDirectionActor.BP_NpcReviveDirectionActor_C.UpdateTimeDilation
// 0x0008 (0x0008 - 0x0000)
struct BP_NpcReviveDirectionActor_C_UpdateTimeDilation final
{
public:
	class ARSCharacterBase*                       CallFunc_GetPlayer_ReturnValue;                    // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NpcReviveDirectionActor_C_UpdateTimeDilation) == 0x000008, "Wrong alignment on BP_NpcReviveDirectionActor_C_UpdateTimeDilation");
static_assert(sizeof(BP_NpcReviveDirectionActor_C_UpdateTimeDilation) == 0x000008, "Wrong size on BP_NpcReviveDirectionActor_C_UpdateTimeDilation");
static_assert(offsetof(BP_NpcReviveDirectionActor_C_UpdateTimeDilation, CallFunc_GetPlayer_ReturnValue) == 0x000000, "Member 'BP_NpcReviveDirectionActor_C_UpdateTimeDilation::CallFunc_GetPlayer_ReturnValue' has a wrong offset!");

// Function BP_NpcReviveDirectionActor.BP_NpcReviveDirectionActor_C.BeginCameraDirection
// 0x0028 (0x0028 - 0x0000)
struct BP_NpcReviveDirectionActor_C_BeginCameraDirection final
{
public:
	class ARSBattlePlayer_C*                      LMainPlayer;                                       // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattlePlayer_C*                      CallFunc_GetMainPlayer_Player;                     // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NpcReviveDirectionActor_C_BeginCameraDirection) == 0x000008, "Wrong alignment on BP_NpcReviveDirectionActor_C_BeginCameraDirection");
static_assert(sizeof(BP_NpcReviveDirectionActor_C_BeginCameraDirection) == 0x000028, "Wrong size on BP_NpcReviveDirectionActor_C_BeginCameraDirection");
static_assert(offsetof(BP_NpcReviveDirectionActor_C_BeginCameraDirection, LMainPlayer) == 0x000000, "Member 'BP_NpcReviveDirectionActor_C_BeginCameraDirection::LMainPlayer' has a wrong offset!");
static_assert(offsetof(BP_NpcReviveDirectionActor_C_BeginCameraDirection, CallFunc_MakeVector_ReturnValue) == 0x000008, "Member 'BP_NpcReviveDirectionActor_C_BeginCameraDirection::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NpcReviveDirectionActor_C_BeginCameraDirection, CallFunc_Add_VectorVector_ReturnValue) == 0x000014, "Member 'BP_NpcReviveDirectionActor_C_BeginCameraDirection::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NpcReviveDirectionActor_C_BeginCameraDirection, CallFunc_GetMainPlayer_Player) == 0x000020, "Member 'BP_NpcReviveDirectionActor_C_BeginCameraDirection::CallFunc_GetMainPlayer_Player' has a wrong offset!");

// Function BP_NpcReviveDirectionActor.BP_NpcReviveDirectionActor_C.EndCameraDirection
// 0x0008 (0x0008 - 0x0000)
struct BP_NpcReviveDirectionActor_C_EndCameraDirection final
{
public:
	class ARSBattlePlayer_C*                      CallFunc_GetMainPlayer_Player;                     // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NpcReviveDirectionActor_C_EndCameraDirection) == 0x000008, "Wrong alignment on BP_NpcReviveDirectionActor_C_EndCameraDirection");
static_assert(sizeof(BP_NpcReviveDirectionActor_C_EndCameraDirection) == 0x000008, "Wrong size on BP_NpcReviveDirectionActor_C_EndCameraDirection");
static_assert(offsetof(BP_NpcReviveDirectionActor_C_EndCameraDirection, CallFunc_GetMainPlayer_Player) == 0x000000, "Member 'BP_NpcReviveDirectionActor_C_EndCameraDirection::CallFunc_GetMainPlayer_Player' has a wrong offset!");

// Function BP_NpcReviveDirectionActor.BP_NpcReviveDirectionActor_C.SetSlow
// 0x0038 (0x0038 - 0x0000)
struct BP_NpcReviveDirectionActor_C_SetSlow final
{
public:
	bool                                          bInSlow;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_92DA[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_MakeLiteralString_ReturnValue;            // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ABP_GameSystemManager_C*                CallFunc_GetGameSystemManager_Manager;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameSystemManager_C*                CallFunc_GetGameSystemManager_Manager_1;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveGlobalCustomTimeDilation_Success;   // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_92DB[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetGlobalCustomTimeDilation_CurrentCustomTimeDilation; // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_NpcReviveDirectionActor_C_SetSlow) == 0x000008, "Wrong alignment on BP_NpcReviveDirectionActor_C_SetSlow");
static_assert(sizeof(BP_NpcReviveDirectionActor_C_SetSlow) == 0x000038, "Wrong size on BP_NpcReviveDirectionActor_C_SetSlow");
static_assert(offsetof(BP_NpcReviveDirectionActor_C_SetSlow, bInSlow) == 0x000000, "Member 'BP_NpcReviveDirectionActor_C_SetSlow::bInSlow' has a wrong offset!");
static_assert(offsetof(BP_NpcReviveDirectionActor_C_SetSlow, CallFunc_MakeLiteralString_ReturnValue) == 0x000008, "Member 'BP_NpcReviveDirectionActor_C_SetSlow::CallFunc_MakeLiteralString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NpcReviveDirectionActor_C_SetSlow, CallFunc_GetGameSystemManager_Manager) == 0x000018, "Member 'BP_NpcReviveDirectionActor_C_SetSlow::CallFunc_GetGameSystemManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_NpcReviveDirectionActor_C_SetSlow, CallFunc_GetGameSystemManager_Manager_1) == 0x000020, "Member 'BP_NpcReviveDirectionActor_C_SetSlow::CallFunc_GetGameSystemManager_Manager_1' has a wrong offset!");
static_assert(offsetof(BP_NpcReviveDirectionActor_C_SetSlow, CallFunc_RemoveGlobalCustomTimeDilation_Success) == 0x000028, "Member 'BP_NpcReviveDirectionActor_C_SetSlow::CallFunc_RemoveGlobalCustomTimeDilation_Success' has a wrong offset!");
static_assert(offsetof(BP_NpcReviveDirectionActor_C_SetSlow, CallFunc_SetGlobalCustomTimeDilation_CurrentCustomTimeDilation) == 0x00002C, "Member 'BP_NpcReviveDirectionActor_C_SetSlow::CallFunc_SetGlobalCustomTimeDilation_CurrentCustomTimeDilation' has a wrong offset!");
static_assert(offsetof(BP_NpcReviveDirectionActor_C_SetSlow, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000030, "Member 'BP_NpcReviveDirectionActor_C_SetSlow::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function BP_NpcReviveDirectionActor.BP_NpcReviveDirectionActor_C.BeginReviveCamera
// 0x0038 (0x0038 - 0x0000)
struct BP_NpcReviveDirectionActor_C_BeginReviveCamera final
{
public:
	class ARSBattlePlayer_C*                      Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattlePlayer_C*                      TargetPlayer;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_CalcRootOffset_Offset;                    // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NpcReviveDirectionActor_C_BeginReviveCamera) == 0x000008, "Wrong alignment on BP_NpcReviveDirectionActor_C_BeginReviveCamera");
static_assert(sizeof(BP_NpcReviveDirectionActor_C_BeginReviveCamera) == 0x000038, "Wrong size on BP_NpcReviveDirectionActor_C_BeginReviveCamera");
static_assert(offsetof(BP_NpcReviveDirectionActor_C_BeginReviveCamera, Player) == 0x000000, "Member 'BP_NpcReviveDirectionActor_C_BeginReviveCamera::Player' has a wrong offset!");
static_assert(offsetof(BP_NpcReviveDirectionActor_C_BeginReviveCamera, TargetPlayer) == 0x000008, "Member 'BP_NpcReviveDirectionActor_C_BeginReviveCamera::TargetPlayer' has a wrong offset!");
static_assert(offsetof(BP_NpcReviveDirectionActor_C_BeginReviveCamera, CallFunc_CalcRootOffset_Offset) == 0x000010, "Member 'BP_NpcReviveDirectionActor_C_BeginReviveCamera::CallFunc_CalcRootOffset_Offset' has a wrong offset!");
static_assert(offsetof(BP_NpcReviveDirectionActor_C_BeginReviveCamera, CallFunc_MakeVector_ReturnValue) == 0x00001C, "Member 'BP_NpcReviveDirectionActor_C_BeginReviveCamera::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NpcReviveDirectionActor_C_BeginReviveCamera, CallFunc_Add_VectorVector_ReturnValue) == 0x000028, "Member 'BP_NpcReviveDirectionActor_C_BeginReviveCamera::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");

// Function BP_NpcReviveDirectionActor.BP_NpcReviveDirectionActor_C.EndReviveCamera
// 0x0010 (0x0010 - 0x0000)
struct BP_NpcReviveDirectionActor_C_EndReviveCamera final
{
public:
	class ARSBattlePlayer_C*                      Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_NpcReviveDirectionActor_C_EndReviveCamera) == 0x000008, "Wrong alignment on BP_NpcReviveDirectionActor_C_EndReviveCamera");
static_assert(sizeof(BP_NpcReviveDirectionActor_C_EndReviveCamera) == 0x000010, "Wrong size on BP_NpcReviveDirectionActor_C_EndReviveCamera");
static_assert(offsetof(BP_NpcReviveDirectionActor_C_EndReviveCamera, Player) == 0x000000, "Member 'BP_NpcReviveDirectionActor_C_EndReviveCamera::Player' has a wrong offset!");
static_assert(offsetof(BP_NpcReviveDirectionActor_C_EndReviveCamera, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_NpcReviveDirectionActor_C_EndReviveCamera::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_NpcReviveDirectionActor.BP_NpcReviveDirectionActor_C.SpawnParticle
// 0x0070 (0x0070 - 0x0000)
struct BP_NpcReviveDirectionActor_C_SpawnParticle final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_92DC[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_92DD[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SASManager_C*                       CallFunc_GetSASManager_SAS_Manager;                // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UParticleSystem*>                CallFunc_GetSASCodeEmitterTemplates_EmitterTemplates; // 0x0020(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<struct FTransform>                     CallFunc_GetSASCodeEmitterTemplates_Transforms;    // 0x0030(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URSParticleSystemComponentBase*         CallFunc_SpawnEmitterAttached_ReturnValue;         // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NpcReviveDirectionActor_C_SpawnParticle) == 0x000008, "Wrong alignment on BP_NpcReviveDirectionActor_C_SpawnParticle");
static_assert(sizeof(BP_NpcReviveDirectionActor_C_SpawnParticle) == 0x000070, "Wrong size on BP_NpcReviveDirectionActor_C_SpawnParticle");
static_assert(offsetof(BP_NpcReviveDirectionActor_C_SpawnParticle, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_NpcReviveDirectionActor_C_SpawnParticle::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_NpcReviveDirectionActor_C_SpawnParticle, Temp_int_Loop_Num_Variable) == 0x000004, "Member 'BP_NpcReviveDirectionActor_C_SpawnParticle::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_NpcReviveDirectionActor_C_SpawnParticle, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_NpcReviveDirectionActor_C_SpawnParticle::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_NpcReviveDirectionActor_C_SpawnParticle, CallFunc_Less_IntInt_ReturnValue) == 0x00000C, "Member 'BP_NpcReviveDirectionActor_C_SpawnParticle::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NpcReviveDirectionActor_C_SpawnParticle, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_NpcReviveDirectionActor_C_SpawnParticle::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NpcReviveDirectionActor_C_SpawnParticle, CallFunc_GetSASManager_SAS_Manager) == 0x000018, "Member 'BP_NpcReviveDirectionActor_C_SpawnParticle::CallFunc_GetSASManager_SAS_Manager' has a wrong offset!");
static_assert(offsetof(BP_NpcReviveDirectionActor_C_SpawnParticle, CallFunc_GetSASCodeEmitterTemplates_EmitterTemplates) == 0x000020, "Member 'BP_NpcReviveDirectionActor_C_SpawnParticle::CallFunc_GetSASCodeEmitterTemplates_EmitterTemplates' has a wrong offset!");
static_assert(offsetof(BP_NpcReviveDirectionActor_C_SpawnParticle, CallFunc_GetSASCodeEmitterTemplates_Transforms) == 0x000030, "Member 'BP_NpcReviveDirectionActor_C_SpawnParticle::CallFunc_GetSASCodeEmitterTemplates_Transforms' has a wrong offset!");
static_assert(offsetof(BP_NpcReviveDirectionActor_C_SpawnParticle, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'BP_NpcReviveDirectionActor_C_SpawnParticle::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NpcReviveDirectionActor_C_SpawnParticle, CallFunc_BreakTransform_Location) == 0x000044, "Member 'BP_NpcReviveDirectionActor_C_SpawnParticle::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_NpcReviveDirectionActor_C_SpawnParticle, CallFunc_BreakTransform_Rotation) == 0x000050, "Member 'BP_NpcReviveDirectionActor_C_SpawnParticle::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_NpcReviveDirectionActor_C_SpawnParticle, CallFunc_BreakTransform_Scale) == 0x00005C, "Member 'BP_NpcReviveDirectionActor_C_SpawnParticle::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_NpcReviveDirectionActor_C_SpawnParticle, CallFunc_SpawnEmitterAttached_ReturnValue) == 0x000068, "Member 'BP_NpcReviveDirectionActor_C_SpawnParticle::CallFunc_SpawnEmitterAttached_ReturnValue' has a wrong offset!");

// Function BP_NpcReviveDirectionActor.BP_NpcReviveDirectionActor_C.SpawnReticleParticle
// 0x0048 (0x0048 - 0x0000)
struct BP_NpcReviveDirectionActor_C_SpawnReticleParticle final
{
public:
	class ARSBattlePlayer_C*                      InRevivePlayer;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_92DE[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_92DF[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetReviveCableSocketName_SocketName;      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URSParticleSystemComponentBase*         CallFunc_SpawnEmitterAttached_ReturnValue;         // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_CableBase_C*>                CallFunc_GetResurrectCableList_ResurrectCableList; // 0x0030(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NpcReviveDirectionActor_C_SpawnReticleParticle) == 0x000008, "Wrong alignment on BP_NpcReviveDirectionActor_C_SpawnReticleParticle");
static_assert(sizeof(BP_NpcReviveDirectionActor_C_SpawnReticleParticle) == 0x000048, "Wrong size on BP_NpcReviveDirectionActor_C_SpawnReticleParticle");
static_assert(offsetof(BP_NpcReviveDirectionActor_C_SpawnReticleParticle, InRevivePlayer) == 0x000000, "Member 'BP_NpcReviveDirectionActor_C_SpawnReticleParticle::InRevivePlayer' has a wrong offset!");
static_assert(offsetof(BP_NpcReviveDirectionActor_C_SpawnReticleParticle, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_NpcReviveDirectionActor_C_SpawnReticleParticle::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NpcReviveDirectionActor_C_SpawnReticleParticle, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'BP_NpcReviveDirectionActor_C_SpawnReticleParticle::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_NpcReviveDirectionActor_C_SpawnReticleParticle, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'BP_NpcReviveDirectionActor_C_SpawnReticleParticle::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_NpcReviveDirectionActor_C_SpawnReticleParticle, Temp_int_Loop_Num_Variable) == 0x000014, "Member 'BP_NpcReviveDirectionActor_C_SpawnReticleParticle::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_NpcReviveDirectionActor_C_SpawnReticleParticle, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'BP_NpcReviveDirectionActor_C_SpawnReticleParticle::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NpcReviveDirectionActor_C_SpawnReticleParticle, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'BP_NpcReviveDirectionActor_C_SpawnReticleParticle::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NpcReviveDirectionActor_C_SpawnReticleParticle, CallFunc_GetReviveCableSocketName_SocketName) == 0x000020, "Member 'BP_NpcReviveDirectionActor_C_SpawnReticleParticle::CallFunc_GetReviveCableSocketName_SocketName' has a wrong offset!");
static_assert(offsetof(BP_NpcReviveDirectionActor_C_SpawnReticleParticle, CallFunc_SpawnEmitterAttached_ReturnValue) == 0x000028, "Member 'BP_NpcReviveDirectionActor_C_SpawnReticleParticle::CallFunc_SpawnEmitterAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NpcReviveDirectionActor_C_SpawnReticleParticle, CallFunc_GetResurrectCableList_ResurrectCableList) == 0x000030, "Member 'BP_NpcReviveDirectionActor_C_SpawnReticleParticle::CallFunc_GetResurrectCableList_ResurrectCableList' has a wrong offset!");
static_assert(offsetof(BP_NpcReviveDirectionActor_C_SpawnReticleParticle, CallFunc_Array_Add_ReturnValue) == 0x000040, "Member 'BP_NpcReviveDirectionActor_C_SpawnReticleParticle::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NpcReviveDirectionActor_C_SpawnReticleParticle, CallFunc_Array_Length_ReturnValue) == 0x000044, "Member 'BP_NpcReviveDirectionActor_C_SpawnReticleParticle::CallFunc_Array_Length_ReturnValue' has a wrong offset!");

// Function BP_NpcReviveDirectionActor.BP_NpcReviveDirectionActor_C.EndReticleParticle
// 0x0018 (0x0018 - 0x0000)
struct BP_NpcReviveDirectionActor_C_EndReticleParticle final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_92E0[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NpcReviveDirectionActor_C_EndReticleParticle) == 0x000004, "Wrong alignment on BP_NpcReviveDirectionActor_C_EndReticleParticle");
static_assert(sizeof(BP_NpcReviveDirectionActor_C_EndReticleParticle) == 0x000018, "Wrong size on BP_NpcReviveDirectionActor_C_EndReticleParticle");
static_assert(offsetof(BP_NpcReviveDirectionActor_C_EndReticleParticle, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_NpcReviveDirectionActor_C_EndReticleParticle::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_NpcReviveDirectionActor_C_EndReticleParticle, Temp_int_Loop_Num_Variable) == 0x000004, "Member 'BP_NpcReviveDirectionActor_C_EndReticleParticle::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_NpcReviveDirectionActor_C_EndReticleParticle, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_NpcReviveDirectionActor_C_EndReticleParticle::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_NpcReviveDirectionActor_C_EndReticleParticle, CallFunc_Less_IntInt_ReturnValue) == 0x00000C, "Member 'BP_NpcReviveDirectionActor_C_EndReticleParticle::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NpcReviveDirectionActor_C_EndReticleParticle, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_NpcReviveDirectionActor_C_EndReticleParticle::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NpcReviveDirectionActor_C_EndReticleParticle, CallFunc_Array_Length_ReturnValue) == 0x000014, "Member 'BP_NpcReviveDirectionActor_C_EndReticleParticle::CallFunc_Array_Length_ReturnValue' has a wrong offset!");

// Function BP_NpcReviveDirectionActor.BP_NpcReviveDirectionActor_C.SetCableEnergy
// 0x0070 (0x0070 - 0x0000)
struct BP_NpcReviveDirectionActor_C_SetCableEnergy final
{
public:
	struct FVector                                Energy;                                            // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_92E1[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_CableBase_C*                        CableBase;                                         // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_92E2[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CableEnergy_C>    K2Node_DynamicCast_AsBPI_Cable_Energy;             // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_92E3[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X;                            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_92E4[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_CableBase_C*>                CallFunc_GetResurrectCableList_ResurrectCableList; // 0x0058(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NpcReviveDirectionActor_C_SetCableEnergy) == 0x000008, "Wrong alignment on BP_NpcReviveDirectionActor_C_SetCableEnergy");
static_assert(sizeof(BP_NpcReviveDirectionActor_C_SetCableEnergy) == 0x000070, "Wrong size on BP_NpcReviveDirectionActor_C_SetCableEnergy");
static_assert(offsetof(BP_NpcReviveDirectionActor_C_SetCableEnergy, Energy) == 0x000000, "Member 'BP_NpcReviveDirectionActor_C_SetCableEnergy::Energy' has a wrong offset!");
static_assert(offsetof(BP_NpcReviveDirectionActor_C_SetCableEnergy, CableBase) == 0x000010, "Member 'BP_NpcReviveDirectionActor_C_SetCableEnergy::CableBase' has a wrong offset!");
static_assert(offsetof(BP_NpcReviveDirectionActor_C_SetCableEnergy, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'BP_NpcReviveDirectionActor_C_SetCableEnergy::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_NpcReviveDirectionActor_C_SetCableEnergy, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'BP_NpcReviveDirectionActor_C_SetCableEnergy::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NpcReviveDirectionActor_C_SetCableEnergy, Temp_int_Array_Index_Variable) == 0x000020, "Member 'BP_NpcReviveDirectionActor_C_SetCableEnergy::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_NpcReviveDirectionActor_C_SetCableEnergy, Temp_int_Loop_Num_Variable) == 0x000024, "Member 'BP_NpcReviveDirectionActor_C_SetCableEnergy::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_NpcReviveDirectionActor_C_SetCableEnergy, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'BP_NpcReviveDirectionActor_C_SetCableEnergy::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NpcReviveDirectionActor_C_SetCableEnergy, K2Node_DynamicCast_AsBPI_Cable_Energy) == 0x000030, "Member 'BP_NpcReviveDirectionActor_C_SetCableEnergy::K2Node_DynamicCast_AsBPI_Cable_Energy' has a wrong offset!");
static_assert(offsetof(BP_NpcReviveDirectionActor_C_SetCableEnergy, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_NpcReviveDirectionActor_C_SetCableEnergy::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_NpcReviveDirectionActor_C_SetCableEnergy, CallFunc_BreakVector_X) == 0x000044, "Member 'BP_NpcReviveDirectionActor_C_SetCableEnergy::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_NpcReviveDirectionActor_C_SetCableEnergy, CallFunc_BreakVector_Y) == 0x000048, "Member 'BP_NpcReviveDirectionActor_C_SetCableEnergy::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_NpcReviveDirectionActor_C_SetCableEnergy, CallFunc_BreakVector_Z) == 0x00004C, "Member 'BP_NpcReviveDirectionActor_C_SetCableEnergy::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_NpcReviveDirectionActor_C_SetCableEnergy, CallFunc_IsValid_ReturnValue) == 0x000050, "Member 'BP_NpcReviveDirectionActor_C_SetCableEnergy::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NpcReviveDirectionActor_C_SetCableEnergy, CallFunc_GetResurrectCableList_ResurrectCableList) == 0x000058, "Member 'BP_NpcReviveDirectionActor_C_SetCableEnergy::CallFunc_GetResurrectCableList_ResurrectCableList' has a wrong offset!");
static_assert(offsetof(BP_NpcReviveDirectionActor_C_SetCableEnergy, CallFunc_Array_Length_ReturnValue) == 0x000068, "Member 'BP_NpcReviveDirectionActor_C_SetCableEnergy::CallFunc_Array_Length_ReturnValue' has a wrong offset!");

// Function BP_NpcReviveDirectionActor.BP_NpcReviveDirectionActor_C.IsFinishRevive
// 0x0002 (0x0002 - 0x0000)
struct BP_NpcReviveDirectionActor_C_IsFinishRevive final
{
public:
	bool                                          bFinish;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_NpcReviveDirectionActor_C_IsFinishRevive) == 0x000001, "Wrong alignment on BP_NpcReviveDirectionActor_C_IsFinishRevive");
static_assert(sizeof(BP_NpcReviveDirectionActor_C_IsFinishRevive) == 0x000002, "Wrong size on BP_NpcReviveDirectionActor_C_IsFinishRevive");
static_assert(offsetof(BP_NpcReviveDirectionActor_C_IsFinishRevive, bFinish) == 0x000000, "Member 'BP_NpcReviveDirectionActor_C_IsFinishRevive::bFinish' has a wrong offset!");
static_assert(offsetof(BP_NpcReviveDirectionActor_C_IsFinishRevive, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'BP_NpcReviveDirectionActor_C_IsFinishRevive::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_NpcReviveDirectionActor.BP_NpcReviveDirectionActor_C.CalcRootOffset
// 0x0040 (0x0040 - 0x0000)
struct BP_NpcReviveDirectionActor_C_CalcRootOffset final
{
public:
	class ARSBattlePlayer_C*                      InHelpPlayer;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattlePlayer_C*                      InRevivePlayer;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Offset;                                            // 0x0010(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_MathExpression_ReturnValue;                 // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NpcReviveDirectionActor_C_CalcRootOffset) == 0x000008, "Wrong alignment on BP_NpcReviveDirectionActor_C_CalcRootOffset");
static_assert(sizeof(BP_NpcReviveDirectionActor_C_CalcRootOffset) == 0x000040, "Wrong size on BP_NpcReviveDirectionActor_C_CalcRootOffset");
static_assert(offsetof(BP_NpcReviveDirectionActor_C_CalcRootOffset, InHelpPlayer) == 0x000000, "Member 'BP_NpcReviveDirectionActor_C_CalcRootOffset::InHelpPlayer' has a wrong offset!");
static_assert(offsetof(BP_NpcReviveDirectionActor_C_CalcRootOffset, InRevivePlayer) == 0x000008, "Member 'BP_NpcReviveDirectionActor_C_CalcRootOffset::InRevivePlayer' has a wrong offset!");
static_assert(offsetof(BP_NpcReviveDirectionActor_C_CalcRootOffset, Offset) == 0x000010, "Member 'BP_NpcReviveDirectionActor_C_CalcRootOffset::Offset' has a wrong offset!");
static_assert(offsetof(BP_NpcReviveDirectionActor_C_CalcRootOffset, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00001C, "Member 'BP_NpcReviveDirectionActor_C_CalcRootOffset::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NpcReviveDirectionActor_C_CalcRootOffset, CallFunc_GetSocketLocation_ReturnValue) == 0x000028, "Member 'BP_NpcReviveDirectionActor_C_CalcRootOffset::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NpcReviveDirectionActor_C_CalcRootOffset, K2Node_MathExpression_ReturnValue) == 0x000034, "Member 'BP_NpcReviveDirectionActor_C_CalcRootOffset::K2Node_MathExpression_ReturnValue' has a wrong offset!");

// Function BP_NpcReviveDirectionActor.BP_NpcReviveDirectionActor_C.GetReticleParticleDelay
// 0x0004 (0x0004 - 0x0000)
struct BP_NpcReviveDirectionActor_C_GetReticleParticleDelay final
{
public:
	float                                         DelayTime;                                         // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NpcReviveDirectionActor_C_GetReticleParticleDelay) == 0x000004, "Wrong alignment on BP_NpcReviveDirectionActor_C_GetReticleParticleDelay");
static_assert(sizeof(BP_NpcReviveDirectionActor_C_GetReticleParticleDelay) == 0x000004, "Wrong size on BP_NpcReviveDirectionActor_C_GetReticleParticleDelay");
static_assert(offsetof(BP_NpcReviveDirectionActor_C_GetReticleParticleDelay, DelayTime) == 0x000000, "Member 'BP_NpcReviveDirectionActor_C_GetReticleParticleDelay::DelayTime' has a wrong offset!");

// Function BP_NpcReviveDirectionActor.BP_NpcReviveDirectionActor_C.IsExecRevive
// 0x0001 (0x0001 - 0x0000)
struct BP_NpcReviveDirectionActor_C_IsExecRevive final
{
public:
	bool                                          bExec;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_NpcReviveDirectionActor_C_IsExecRevive) == 0x000001, "Wrong alignment on BP_NpcReviveDirectionActor_C_IsExecRevive");
static_assert(sizeof(BP_NpcReviveDirectionActor_C_IsExecRevive) == 0x000001, "Wrong size on BP_NpcReviveDirectionActor_C_IsExecRevive");
static_assert(offsetof(BP_NpcReviveDirectionActor_C_IsExecRevive, bExec) == 0x000000, "Member 'BP_NpcReviveDirectionActor_C_IsExecRevive::bExec' has a wrong offset!");

}

