#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_TriggerBoxBase

#include "Basic.hpp"

#include "BP_TriggerBoxBase_classes.hpp"
#include "BP_TriggerBoxBase_parameters.hpp"


namespace SDK
{

// Function BP_TriggerBoxBase.BP_TriggerBoxBase_C.ExecuteUbergraph_BP_TriggerBoxBase
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TriggerBoxBase_C::ExecuteUbergraph_BP_TriggerBoxBase(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TriggerBoxBase_C", "ExecuteUbergraph_BP_TriggerBoxBase");

	Params::BP_TriggerBoxBase_C_ExecuteUbergraph_BP_TriggerBoxBase Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TriggerBoxBase.BP_TriggerBoxBase_C.ReceiveActorBeginOverlap
// (Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TriggerBoxBase_C::ReceiveActorBeginOverlap(class AActor* OtherActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TriggerBoxBase_C", "ReceiveActorBeginOverlap");

	Params::BP_TriggerBoxBase_C_ReceiveActorBeginOverlap Parms{};

	Parms.OtherActor = OtherActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TriggerBoxBase.BP_TriggerBoxBase_C.OnEvent
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Played                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_TriggerBoxBase_C::OnEvent(class AActor* OtherActor, bool* Played)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TriggerBoxBase_C", "OnEvent");

	Params::BP_TriggerBoxBase_C_OnEvent Parms{};

	Parms.OtherActor = OtherActor;

	UObject::ProcessEvent(Func, &Parms);

	if (Played != nullptr)
		*Played = Parms.Played;
}


// Function BP_TriggerBoxBase.BP_TriggerBoxBase_C.IsValidEvent
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_TriggerBoxBase_C::IsValidEvent(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TriggerBoxBase_C", "IsValidEvent");

	Params::BP_TriggerBoxBase_C_IsValidEvent Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;
}


// Function BP_TriggerBoxBase.BP_TriggerBoxBase_C.SetReturnMovePlayer
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TriggerBoxBase_C::SetReturnMovePlayer(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TriggerBoxBase_C", "SetReturnMovePlayer");

	Params::BP_TriggerBoxBase_C_SetReturnMovePlayer Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TriggerBoxBase.BP_TriggerBoxBase_C.CheckEnableEventBase
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_TriggerBoxBase_C::CheckEnableEventBase(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TriggerBoxBase_C", "CheckEnableEventBase");

	Params::BP_TriggerBoxBase_C_CheckEnableEventBase Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}

}

