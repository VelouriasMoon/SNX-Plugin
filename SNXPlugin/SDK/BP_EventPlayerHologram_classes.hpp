#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_EventPlayerHologram

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "FHologramRestoreMeshesAndMaterials_structs.hpp"
#include "BattlePrototype_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_EventPlayerHologram.BP_EventPlayerHologram_C
// 0x0128 (0x0358 - 0x0230)
class ABP_EventPlayerHologram_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0230(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         StartRate;                                         // 0x0240(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	float                                         NoiseScale;                                        // 0x0244(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	class UCurveVector*                           CurveStart;                                        // 0x0248(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveVector*                           CurveStartColor;                                   // 0x0250(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveVector*                           CurveLoop;                                         // 0x0258(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 MultiAttachActor;                                  // 0x0260(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 MultiAttachActor2;                                 // 0x0268(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	bool                                          IsInitializedParent;                               // 0x0270(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsInitializedAttach;                               // 0x0271(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsInitializedAttach2;                              // 0x0272(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_46FE[0x5];                                     // 0x0273(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMeshComponent*>                 RestoreMeshes;                                     // 0x0278(0x0010)(Edit, BlueprintVisible, Transient, DisableEditOnInstance, ContainsInstancedReference, HasGetValueTypeHash)
	TArray<class UMeshComponent*>                 HologramMeshes;                                    // 0x0288(0x0010)(Edit, BlueprintVisible, Transient, DisableEditOnInstance, ContainsInstancedReference, HasGetValueTypeHash)
	float                                         LoopTime;                                          // 0x0298(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SASMetal;                                          // 0x029C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	float                                         SASStealth;                                        // 0x02A0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           SASColor;                                          // 0x02A4(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	float                                         SASColorRate;                                      // 0x02B4(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	bool                                          UseSASMetal;                                       // 0x02B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          UseSASStealth;                                     // 0x02B9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          UseSASColor;                                       // 0x02BA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_46FF[0x1];                                     // 0x02BB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           SASColorDefault;                                   // 0x02BC(0x0010)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4700[0x4];                                     // 0x02CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMaterialSwitchCache                   SASStealthSwitch;                                  // 0x02D0(0x0010)(Edit, BlueprintVisible, Transient, DisableEditOnInstance)
	bool                                          SASStealthChanged;                                 // 0x02E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          CheckOptimizer;                                    // 0x02E1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4701[0x6];                                     // 0x02E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBPC_OptimizeSwitchMaterial_C*          PlayerOptimizerComp;                               // 0x02E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseVisibleRate;                                    // 0x02F0(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4702[0x7];                                     // 0x02F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 RestoreCustomStencilValue;                         // 0x02F8(0x0010)(Edit, BlueprintVisible, Transient, DisableEditOnInstance, HasGetValueTypeHash)
	TArray<bool>                                  RestoreCustomStencil;                              // 0x0308(0x0010)(Edit, BlueprintVisible, Transient, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                          OverrideCustomStencil;                             // 0x0318(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          HideAttachment;                                    // 0x0319(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4703[0x6];                                     // 0x031A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMeshComponent*>                 HiddenAttachmentMeshes;                            // 0x0320(0x0010)(Edit, BlueprintVisible, Transient, DisableEditOnInstance, ContainsInstancedReference, HasGetValueTypeHash)
	float                                         OuterStartRateOffset;                              // 0x0330(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          OuterIsHologram;                                   // 0x0334(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4704[0x3];                                     // 0x0335(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         OuterNoiseScaleOffset;                             // 0x0338(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4705[0x4];                                     // 0x033C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFHologramRestoreMeshesAndMaterials> RestoreMaterialAndMaterials;                       // 0x0340(0x0010)(Edit, BlueprintVisible, Transient, DisableEditOnInstance, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          IsInvalidOptimizerPopDisable;                      // 0x0350(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, Interp, NoDestructor)

public:
	void ExecuteUbergraph_BP_EventPlayerHologram(int32 EntryPoint);
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void ReceiveTick(float DeltaSeconds);
	void ReceiveBeginPlay();
	void Initialize(class ARSBattlePlayer_C* BattlePlayer, class ABP_MenuPlayerBase_C* MenuPlayer, class ABP_EventCopyPlayer_C* CopyPlayer, class USkeletalMeshComponent* SkelMeshComp, bool SkelMeshWapon, bool* Initialized);
	void UpdateMaterials(float DeltaSeconds);
	void UpdateMaterialSAS(float DeltaSeconds);
	void EndPlayRestore();
	void InitializeOptimizer();
	void AddRestoreCustomDepth(class UMeshComponent* SkelMeshComp);
	void SetOuterStartRateOffset(float Rate);
	void SetOuterIsHologram(bool IsHologram, bool IsWeapon);
	void SetOuterNoiseScaleOffset(float Rate);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_EventPlayerHologram_C">();
	}
	static class ABP_EventPlayerHologram_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_EventPlayerHologram_C>();
	}
};
static_assert(alignof(ABP_EventPlayerHologram_C) == 0x000008, "Wrong alignment on ABP_EventPlayerHologram_C");
static_assert(sizeof(ABP_EventPlayerHologram_C) == 0x000358, "Wrong size on ABP_EventPlayerHologram_C");
static_assert(offsetof(ABP_EventPlayerHologram_C, UberGraphFrame) == 0x000230, "Member 'ABP_EventPlayerHologram_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_EventPlayerHologram_C, DefaultSceneRoot) == 0x000238, "Member 'ABP_EventPlayerHologram_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_EventPlayerHologram_C, StartRate) == 0x000240, "Member 'ABP_EventPlayerHologram_C::StartRate' has a wrong offset!");
static_assert(offsetof(ABP_EventPlayerHologram_C, NoiseScale) == 0x000244, "Member 'ABP_EventPlayerHologram_C::NoiseScale' has a wrong offset!");
static_assert(offsetof(ABP_EventPlayerHologram_C, CurveStart) == 0x000248, "Member 'ABP_EventPlayerHologram_C::CurveStart' has a wrong offset!");
static_assert(offsetof(ABP_EventPlayerHologram_C, CurveStartColor) == 0x000250, "Member 'ABP_EventPlayerHologram_C::CurveStartColor' has a wrong offset!");
static_assert(offsetof(ABP_EventPlayerHologram_C, CurveLoop) == 0x000258, "Member 'ABP_EventPlayerHologram_C::CurveLoop' has a wrong offset!");
static_assert(offsetof(ABP_EventPlayerHologram_C, MultiAttachActor) == 0x000260, "Member 'ABP_EventPlayerHologram_C::MultiAttachActor' has a wrong offset!");
static_assert(offsetof(ABP_EventPlayerHologram_C, MultiAttachActor2) == 0x000268, "Member 'ABP_EventPlayerHologram_C::MultiAttachActor2' has a wrong offset!");
static_assert(offsetof(ABP_EventPlayerHologram_C, IsInitializedParent) == 0x000270, "Member 'ABP_EventPlayerHologram_C::IsInitializedParent' has a wrong offset!");
static_assert(offsetof(ABP_EventPlayerHologram_C, IsInitializedAttach) == 0x000271, "Member 'ABP_EventPlayerHologram_C::IsInitializedAttach' has a wrong offset!");
static_assert(offsetof(ABP_EventPlayerHologram_C, IsInitializedAttach2) == 0x000272, "Member 'ABP_EventPlayerHologram_C::IsInitializedAttach2' has a wrong offset!");
static_assert(offsetof(ABP_EventPlayerHologram_C, RestoreMeshes) == 0x000278, "Member 'ABP_EventPlayerHologram_C::RestoreMeshes' has a wrong offset!");
static_assert(offsetof(ABP_EventPlayerHologram_C, HologramMeshes) == 0x000288, "Member 'ABP_EventPlayerHologram_C::HologramMeshes' has a wrong offset!");
static_assert(offsetof(ABP_EventPlayerHologram_C, LoopTime) == 0x000298, "Member 'ABP_EventPlayerHologram_C::LoopTime' has a wrong offset!");
static_assert(offsetof(ABP_EventPlayerHologram_C, SASMetal) == 0x00029C, "Member 'ABP_EventPlayerHologram_C::SASMetal' has a wrong offset!");
static_assert(offsetof(ABP_EventPlayerHologram_C, SASStealth) == 0x0002A0, "Member 'ABP_EventPlayerHologram_C::SASStealth' has a wrong offset!");
static_assert(offsetof(ABP_EventPlayerHologram_C, SASColor) == 0x0002A4, "Member 'ABP_EventPlayerHologram_C::SASColor' has a wrong offset!");
static_assert(offsetof(ABP_EventPlayerHologram_C, SASColorRate) == 0x0002B4, "Member 'ABP_EventPlayerHologram_C::SASColorRate' has a wrong offset!");
static_assert(offsetof(ABP_EventPlayerHologram_C, UseSASMetal) == 0x0002B8, "Member 'ABP_EventPlayerHologram_C::UseSASMetal' has a wrong offset!");
static_assert(offsetof(ABP_EventPlayerHologram_C, UseSASStealth) == 0x0002B9, "Member 'ABP_EventPlayerHologram_C::UseSASStealth' has a wrong offset!");
static_assert(offsetof(ABP_EventPlayerHologram_C, UseSASColor) == 0x0002BA, "Member 'ABP_EventPlayerHologram_C::UseSASColor' has a wrong offset!");
static_assert(offsetof(ABP_EventPlayerHologram_C, SASColorDefault) == 0x0002BC, "Member 'ABP_EventPlayerHologram_C::SASColorDefault' has a wrong offset!");
static_assert(offsetof(ABP_EventPlayerHologram_C, SASStealthSwitch) == 0x0002D0, "Member 'ABP_EventPlayerHologram_C::SASStealthSwitch' has a wrong offset!");
static_assert(offsetof(ABP_EventPlayerHologram_C, SASStealthChanged) == 0x0002E0, "Member 'ABP_EventPlayerHologram_C::SASStealthChanged' has a wrong offset!");
static_assert(offsetof(ABP_EventPlayerHologram_C, CheckOptimizer) == 0x0002E1, "Member 'ABP_EventPlayerHologram_C::CheckOptimizer' has a wrong offset!");
static_assert(offsetof(ABP_EventPlayerHologram_C, PlayerOptimizerComp) == 0x0002E8, "Member 'ABP_EventPlayerHologram_C::PlayerOptimizerComp' has a wrong offset!");
static_assert(offsetof(ABP_EventPlayerHologram_C, UseVisibleRate) == 0x0002F0, "Member 'ABP_EventPlayerHologram_C::UseVisibleRate' has a wrong offset!");
static_assert(offsetof(ABP_EventPlayerHologram_C, RestoreCustomStencilValue) == 0x0002F8, "Member 'ABP_EventPlayerHologram_C::RestoreCustomStencilValue' has a wrong offset!");
static_assert(offsetof(ABP_EventPlayerHologram_C, RestoreCustomStencil) == 0x000308, "Member 'ABP_EventPlayerHologram_C::RestoreCustomStencil' has a wrong offset!");
static_assert(offsetof(ABP_EventPlayerHologram_C, OverrideCustomStencil) == 0x000318, "Member 'ABP_EventPlayerHologram_C::OverrideCustomStencil' has a wrong offset!");
static_assert(offsetof(ABP_EventPlayerHologram_C, HideAttachment) == 0x000319, "Member 'ABP_EventPlayerHologram_C::HideAttachment' has a wrong offset!");
static_assert(offsetof(ABP_EventPlayerHologram_C, HiddenAttachmentMeshes) == 0x000320, "Member 'ABP_EventPlayerHologram_C::HiddenAttachmentMeshes' has a wrong offset!");
static_assert(offsetof(ABP_EventPlayerHologram_C, OuterStartRateOffset) == 0x000330, "Member 'ABP_EventPlayerHologram_C::OuterStartRateOffset' has a wrong offset!");
static_assert(offsetof(ABP_EventPlayerHologram_C, OuterIsHologram) == 0x000334, "Member 'ABP_EventPlayerHologram_C::OuterIsHologram' has a wrong offset!");
static_assert(offsetof(ABP_EventPlayerHologram_C, OuterNoiseScaleOffset) == 0x000338, "Member 'ABP_EventPlayerHologram_C::OuterNoiseScaleOffset' has a wrong offset!");
static_assert(offsetof(ABP_EventPlayerHologram_C, RestoreMaterialAndMaterials) == 0x000340, "Member 'ABP_EventPlayerHologram_C::RestoreMaterialAndMaterials' has a wrong offset!");
static_assert(offsetof(ABP_EventPlayerHologram_C, IsInvalidOptimizerPopDisable) == 0x000350, "Member 'ABP_EventPlayerHologram_C::IsInvalidOptimizerPopDisable' has a wrong offset!");

}

