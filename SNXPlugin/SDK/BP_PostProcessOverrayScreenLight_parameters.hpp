#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PostProcessOverrayScreenLight

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_PostProcessOverrayScreenLight.BP_PostProcessOverrayScreenLight_C.ExecuteUbergraph_BP_PostProcessOverrayScreenLight
// 0x0004 (0x0004 - 0x0000)
struct BP_PostProcessOverrayScreenLight_C_ExecuteUbergraph_BP_PostProcessOverrayScreenLight final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PostProcessOverrayScreenLight_C_ExecuteUbergraph_BP_PostProcessOverrayScreenLight) == 0x000004, "Wrong alignment on BP_PostProcessOverrayScreenLight_C_ExecuteUbergraph_BP_PostProcessOverrayScreenLight");
static_assert(sizeof(BP_PostProcessOverrayScreenLight_C_ExecuteUbergraph_BP_PostProcessOverrayScreenLight) == 0x000004, "Wrong size on BP_PostProcessOverrayScreenLight_C_ExecuteUbergraph_BP_PostProcessOverrayScreenLight");
static_assert(offsetof(BP_PostProcessOverrayScreenLight_C_ExecuteUbergraph_BP_PostProcessOverrayScreenLight, EntryPoint) == 0x000000, "Member 'BP_PostProcessOverrayScreenLight_C_ExecuteUbergraph_BP_PostProcessOverrayScreenLight::EntryPoint' has a wrong offset!");

// Function BP_PostProcessOverrayScreenLight.BP_PostProcessOverrayScreenLight_C.UserConstructionScript
// 0x0004 (0x0004 - 0x0000)
struct BP_PostProcessOverrayScreenLight_C_UserConstructionScript final
{
public:
	struct FColor                                 CallFunc_Conv_LinearColorToColor_ReturnValue;      // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PostProcessOverrayScreenLight_C_UserConstructionScript) == 0x000004, "Wrong alignment on BP_PostProcessOverrayScreenLight_C_UserConstructionScript");
static_assert(sizeof(BP_PostProcessOverrayScreenLight_C_UserConstructionScript) == 0x000004, "Wrong size on BP_PostProcessOverrayScreenLight_C_UserConstructionScript");
static_assert(offsetof(BP_PostProcessOverrayScreenLight_C_UserConstructionScript, CallFunc_Conv_LinearColorToColor_ReturnValue) == 0x000000, "Member 'BP_PostProcessOverrayScreenLight_C_UserConstructionScript::CallFunc_Conv_LinearColorToColor_ReturnValue' has a wrong offset!");

// Function BP_PostProcessOverrayScreenLight.BP_PostProcessOverrayScreenLight_C.CalcRate
// 0x0038 (0x0038 - 0x0000)
struct BP_PostProcessOverrayScreenLight_C_CalcRate final
{
public:
	struct FVector                                CameraVector;                                      // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CameraRotation;                                    // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         Rate;                                              // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CacheInt;                                          // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CalcRotationRate_Rate;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6645[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_MathExpression_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CalcLengthRate_Rate;                      // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PostProcessOverrayScreenLight_C_CalcRate) == 0x000004, "Wrong alignment on BP_PostProcessOverrayScreenLight_C_CalcRate");
static_assert(sizeof(BP_PostProcessOverrayScreenLight_C_CalcRate) == 0x000038, "Wrong size on BP_PostProcessOverrayScreenLight_C_CalcRate");
static_assert(offsetof(BP_PostProcessOverrayScreenLight_C_CalcRate, CameraVector) == 0x000000, "Member 'BP_PostProcessOverrayScreenLight_C_CalcRate::CameraVector' has a wrong offset!");
static_assert(offsetof(BP_PostProcessOverrayScreenLight_C_CalcRate, CameraRotation) == 0x00000C, "Member 'BP_PostProcessOverrayScreenLight_C_CalcRate::CameraRotation' has a wrong offset!");
static_assert(offsetof(BP_PostProcessOverrayScreenLight_C_CalcRate, Rate) == 0x000018, "Member 'BP_PostProcessOverrayScreenLight_C_CalcRate::Rate' has a wrong offset!");
static_assert(offsetof(BP_PostProcessOverrayScreenLight_C_CalcRate, CacheInt) == 0x00001C, "Member 'BP_PostProcessOverrayScreenLight_C_CalcRate::CacheInt' has a wrong offset!");
static_assert(offsetof(BP_PostProcessOverrayScreenLight_C_CalcRate, CallFunc_CalcRotationRate_Rate) == 0x000020, "Member 'BP_PostProcessOverrayScreenLight_C_CalcRate::CallFunc_CalcRotationRate_Rate' has a wrong offset!");
static_assert(offsetof(BP_PostProcessOverrayScreenLight_C_CalcRate, CallFunc_Greater_IntInt_ReturnValue) == 0x000024, "Member 'BP_PostProcessOverrayScreenLight_C_CalcRate::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessOverrayScreenLight_C_CalcRate, K2Node_MathExpression_ReturnValue) == 0x000028, "Member 'BP_PostProcessOverrayScreenLight_C_CalcRate::K2Node_MathExpression_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessOverrayScreenLight_C_CalcRate, CallFunc_CalcLengthRate_Rate) == 0x00002C, "Member 'BP_PostProcessOverrayScreenLight_C_CalcRate::CallFunc_CalcLengthRate_Rate' has a wrong offset!");
static_assert(offsetof(BP_PostProcessOverrayScreenLight_C_CalcRate, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000030, "Member 'BP_PostProcessOverrayScreenLight_C_CalcRate::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessOverrayScreenLight_C_CalcRate, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000034, "Member 'BP_PostProcessOverrayScreenLight_C_CalcRate::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");

}

