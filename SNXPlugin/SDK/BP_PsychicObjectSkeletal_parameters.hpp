#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PsychicObjectSkeletal

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "BattlePrototype_structs.hpp"
#include "CascadeExtensionPlugin_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_PsychicObjectSkeletal.BP_PsychicObjectSkeletal_C.ExecuteUbergraph_BP_PsychicObjectSkeletal
// 0x00B8 (0x00B8 - 0x0000)
struct BP_PsychicObjectSkeletal_C_ExecuteUbergraph_BP_PsychicObjectSkeletal final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_576A[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_HitComponent;           // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_ComponentBoundEvent_NormalImpulse;          // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_ComponentBoundEvent_Hit;                    // 0x002C(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_PsychicObjectSkeletal_C_ExecuteUbergraph_BP_PsychicObjectSkeletal) == 0x000008, "Wrong alignment on BP_PsychicObjectSkeletal_C_ExecuteUbergraph_BP_PsychicObjectSkeletal");
static_assert(sizeof(BP_PsychicObjectSkeletal_C_ExecuteUbergraph_BP_PsychicObjectSkeletal) == 0x0000B8, "Wrong size on BP_PsychicObjectSkeletal_C_ExecuteUbergraph_BP_PsychicObjectSkeletal");
static_assert(offsetof(BP_PsychicObjectSkeletal_C_ExecuteUbergraph_BP_PsychicObjectSkeletal, EntryPoint) == 0x000000, "Member 'BP_PsychicObjectSkeletal_C_ExecuteUbergraph_BP_PsychicObjectSkeletal::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectSkeletal_C_ExecuteUbergraph_BP_PsychicObjectSkeletal, K2Node_ComponentBoundEvent_HitComponent) == 0x000008, "Member 'BP_PsychicObjectSkeletal_C_ExecuteUbergraph_BP_PsychicObjectSkeletal::K2Node_ComponentBoundEvent_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectSkeletal_C_ExecuteUbergraph_BP_PsychicObjectSkeletal, K2Node_ComponentBoundEvent_OtherActor) == 0x000010, "Member 'BP_PsychicObjectSkeletal_C_ExecuteUbergraph_BP_PsychicObjectSkeletal::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectSkeletal_C_ExecuteUbergraph_BP_PsychicObjectSkeletal, K2Node_ComponentBoundEvent_OtherComp) == 0x000018, "Member 'BP_PsychicObjectSkeletal_C_ExecuteUbergraph_BP_PsychicObjectSkeletal::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectSkeletal_C_ExecuteUbergraph_BP_PsychicObjectSkeletal, K2Node_ComponentBoundEvent_NormalImpulse) == 0x000020, "Member 'BP_PsychicObjectSkeletal_C_ExecuteUbergraph_BP_PsychicObjectSkeletal::K2Node_ComponentBoundEvent_NormalImpulse' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectSkeletal_C_ExecuteUbergraph_BP_PsychicObjectSkeletal, K2Node_ComponentBoundEvent_Hit) == 0x00002C, "Member 'BP_PsychicObjectSkeletal_C_ExecuteUbergraph_BP_PsychicObjectSkeletal::K2Node_ComponentBoundEvent_Hit' has a wrong offset!");

// Function BP_PsychicObjectSkeletal.BP_PsychicObjectSkeletal_C.BndEvt__SkeletalMesh_K2Node_ComponentBoundEvent_2_ComponentHitSignature__DelegateSignature
// 0x00B0 (0x00B0 - 0x0000)
struct BP_PsychicObjectSkeletal_C_BndEvt__SkeletalMesh_K2Node_ComponentBoundEvent_2_ComponentHitSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    HitComponent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalImpulse;                                     // 0x0018(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0024(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_PsychicObjectSkeletal_C_BndEvt__SkeletalMesh_K2Node_ComponentBoundEvent_2_ComponentHitSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_PsychicObjectSkeletal_C_BndEvt__SkeletalMesh_K2Node_ComponentBoundEvent_2_ComponentHitSignature__DelegateSignature");
static_assert(sizeof(BP_PsychicObjectSkeletal_C_BndEvt__SkeletalMesh_K2Node_ComponentBoundEvent_2_ComponentHitSignature__DelegateSignature) == 0x0000B0, "Wrong size on BP_PsychicObjectSkeletal_C_BndEvt__SkeletalMesh_K2Node_ComponentBoundEvent_2_ComponentHitSignature__DelegateSignature");
static_assert(offsetof(BP_PsychicObjectSkeletal_C_BndEvt__SkeletalMesh_K2Node_ComponentBoundEvent_2_ComponentHitSignature__DelegateSignature, HitComponent) == 0x000000, "Member 'BP_PsychicObjectSkeletal_C_BndEvt__SkeletalMesh_K2Node_ComponentBoundEvent_2_ComponentHitSignature__DelegateSignature::HitComponent' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectSkeletal_C_BndEvt__SkeletalMesh_K2Node_ComponentBoundEvent_2_ComponentHitSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_PsychicObjectSkeletal_C_BndEvt__SkeletalMesh_K2Node_ComponentBoundEvent_2_ComponentHitSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectSkeletal_C_BndEvt__SkeletalMesh_K2Node_ComponentBoundEvent_2_ComponentHitSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_PsychicObjectSkeletal_C_BndEvt__SkeletalMesh_K2Node_ComponentBoundEvent_2_ComponentHitSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectSkeletal_C_BndEvt__SkeletalMesh_K2Node_ComponentBoundEvent_2_ComponentHitSignature__DelegateSignature, NormalImpulse) == 0x000018, "Member 'BP_PsychicObjectSkeletal_C_BndEvt__SkeletalMesh_K2Node_ComponentBoundEvent_2_ComponentHitSignature__DelegateSignature::NormalImpulse' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectSkeletal_C_BndEvt__SkeletalMesh_K2Node_ComponentBoundEvent_2_ComponentHitSignature__DelegateSignature, Hit) == 0x000024, "Member 'BP_PsychicObjectSkeletal_C_BndEvt__SkeletalMesh_K2Node_ComponentBoundEvent_2_ComponentHitSignature__DelegateSignature::Hit' has a wrong offset!");

// Function BP_PsychicObjectSkeletal.BP_PsychicObjectSkeletal_C.UserConstructionScript
// 0x0030 (0x0030 - 0x0000)
struct BP_PsychicObjectSkeletal_C_UserConstructionScript final
{
public:
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0000(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectSkeletal_C_UserConstructionScript) == 0x000010, "Wrong alignment on BP_PsychicObjectSkeletal_C_UserConstructionScript");
static_assert(sizeof(BP_PsychicObjectSkeletal_C_UserConstructionScript) == 0x000030, "Wrong size on BP_PsychicObjectSkeletal_C_UserConstructionScript");
static_assert(offsetof(BP_PsychicObjectSkeletal_C_UserConstructionScript, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000000, "Member 'BP_PsychicObjectSkeletal_C_UserConstructionScript::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectSkeletal.BP_PsychicObjectSkeletal_C.Initialize
// 0x0038 (0x0038 - 0x0000)
struct BP_PsychicObjectSkeletal_C_Initialize final
{
public:
	bool                                          Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          L_return;                                          // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_576B[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_576C[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInterface*>             CallFunc_GetMaterials_ReturnValue;                 // 0x0010(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Initialize_return;                        // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_576D[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_576E[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PsychicObjectSkeletal_C_Initialize) == 0x000008, "Wrong alignment on BP_PsychicObjectSkeletal_C_Initialize");
static_assert(sizeof(BP_PsychicObjectSkeletal_C_Initialize) == 0x000038, "Wrong size on BP_PsychicObjectSkeletal_C_Initialize");
static_assert(offsetof(BP_PsychicObjectSkeletal_C_Initialize, Return) == 0x000000, "Member 'BP_PsychicObjectSkeletal_C_Initialize::Return' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectSkeletal_C_Initialize, L_return) == 0x000001, "Member 'BP_PsychicObjectSkeletal_C_Initialize::L_return' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectSkeletal_C_Initialize, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_PsychicObjectSkeletal_C_Initialize::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectSkeletal_C_Initialize, Temp_int_Loop_Num_Variable) == 0x000008, "Member 'BP_PsychicObjectSkeletal_C_Initialize::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectSkeletal_C_Initialize, CallFunc_GetMaterials_ReturnValue) == 0x000010, "Member 'BP_PsychicObjectSkeletal_C_Initialize::CallFunc_GetMaterials_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectSkeletal_C_Initialize, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_PsychicObjectSkeletal_C_Initialize::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectSkeletal_C_Initialize, CallFunc_Initialize_return) == 0x000024, "Member 'BP_PsychicObjectSkeletal_C_Initialize::CallFunc_Initialize_return' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectSkeletal_C_Initialize, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'BP_PsychicObjectSkeletal_C_Initialize::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectSkeletal_C_Initialize, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'BP_PsychicObjectSkeletal_C_Initialize::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectSkeletal_C_Initialize, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'BP_PsychicObjectSkeletal_C_Initialize::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectSkeletal.BP_PsychicObjectSkeletal_C.GetDebrisEffect
// 0x0030 (0x0030 - 0x0000)
struct BP_PsychicObjectSkeletal_C_GetDebrisEffect final
{
public:
	EEffectObjectDebrisType                       Type;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_576F[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     OverrideMaterial;                                  // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5770[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        CallFunc_GetDebrisEffectBase_Particle;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     CallFunc_GetDebrisEffectBase_OverrideMaterial;     // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDebrisEffectBase_ReturnValue;          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectSkeletal_C_GetDebrisEffect) == 0x000008, "Wrong alignment on BP_PsychicObjectSkeletal_C_GetDebrisEffect");
static_assert(sizeof(BP_PsychicObjectSkeletal_C_GetDebrisEffect) == 0x000030, "Wrong size on BP_PsychicObjectSkeletal_C_GetDebrisEffect");
static_assert(offsetof(BP_PsychicObjectSkeletal_C_GetDebrisEffect, Type) == 0x000000, "Member 'BP_PsychicObjectSkeletal_C_GetDebrisEffect::Type' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectSkeletal_C_GetDebrisEffect, OverrideMaterial) == 0x000008, "Member 'BP_PsychicObjectSkeletal_C_GetDebrisEffect::OverrideMaterial' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectSkeletal_C_GetDebrisEffect, ReturnValue) == 0x000010, "Member 'BP_PsychicObjectSkeletal_C_GetDebrisEffect::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectSkeletal_C_GetDebrisEffect, CallFunc_GetDebrisEffectBase_Particle) == 0x000018, "Member 'BP_PsychicObjectSkeletal_C_GetDebrisEffect::CallFunc_GetDebrisEffectBase_Particle' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectSkeletal_C_GetDebrisEffect, CallFunc_GetDebrisEffectBase_OverrideMaterial) == 0x000020, "Member 'BP_PsychicObjectSkeletal_C_GetDebrisEffect::CallFunc_GetDebrisEffectBase_OverrideMaterial' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectSkeletal_C_GetDebrisEffect, CallFunc_GetDebrisEffectBase_ReturnValue) == 0x000028, "Member 'BP_PsychicObjectSkeletal_C_GetDebrisEffect::CallFunc_GetDebrisEffectBase_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectSkeletal.BP_PsychicObjectSkeletal_C.GetDebrisEffectData
// 0x0030 (0x0030 - 0x0000)
struct BP_PsychicObjectSkeletal_C_GetDebrisEffectData final
{
public:
	class UParticleSystem*                        ParticleTemplate;                                  // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     OverrideMaterial;                                  // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5771[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        CallFunc_GetDebrisEffectBase_Particle;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     CallFunc_GetDebrisEffectBase_OverrideMaterial;     // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDebrisEffectBase_ReturnValue;          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PsychicObjectSkeletal_C_GetDebrisEffectData) == 0x000008, "Wrong alignment on BP_PsychicObjectSkeletal_C_GetDebrisEffectData");
static_assert(sizeof(BP_PsychicObjectSkeletal_C_GetDebrisEffectData) == 0x000030, "Wrong size on BP_PsychicObjectSkeletal_C_GetDebrisEffectData");
static_assert(offsetof(BP_PsychicObjectSkeletal_C_GetDebrisEffectData, ParticleTemplate) == 0x000000, "Member 'BP_PsychicObjectSkeletal_C_GetDebrisEffectData::ParticleTemplate' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectSkeletal_C_GetDebrisEffectData, OverrideMaterial) == 0x000008, "Member 'BP_PsychicObjectSkeletal_C_GetDebrisEffectData::OverrideMaterial' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectSkeletal_C_GetDebrisEffectData, ReturnValue) == 0x000010, "Member 'BP_PsychicObjectSkeletal_C_GetDebrisEffectData::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectSkeletal_C_GetDebrisEffectData, CallFunc_GetDebrisEffectBase_Particle) == 0x000018, "Member 'BP_PsychicObjectSkeletal_C_GetDebrisEffectData::CallFunc_GetDebrisEffectBase_Particle' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectSkeletal_C_GetDebrisEffectData, CallFunc_GetDebrisEffectBase_OverrideMaterial) == 0x000020, "Member 'BP_PsychicObjectSkeletal_C_GetDebrisEffectData::CallFunc_GetDebrisEffectBase_OverrideMaterial' has a wrong offset!");
static_assert(offsetof(BP_PsychicObjectSkeletal_C_GetDebrisEffectData, CallFunc_GetDebrisEffectBase_ReturnValue) == 0x000028, "Member 'BP_PsychicObjectSkeletal_C_GetDebrisEffectData::CallFunc_GetDebrisEffectBase_ReturnValue' has a wrong offset!");

// Function BP_PsychicObjectSkeletal.BP_PsychicObjectSkeletal_C.GetTriangleData
// 0x0020 (0x0020 - 0x0000)
struct BP_PsychicObjectSkeletal_C_GetTriangleData final
{
public:
	struct FMeshTriangleData                      Triangle_data;                                     // 0x0000(0x0020)(Parm, OutParm)
};
static_assert(alignof(BP_PsychicObjectSkeletal_C_GetTriangleData) == 0x000008, "Wrong alignment on BP_PsychicObjectSkeletal_C_GetTriangleData");
static_assert(sizeof(BP_PsychicObjectSkeletal_C_GetTriangleData) == 0x000020, "Wrong size on BP_PsychicObjectSkeletal_C_GetTriangleData");
static_assert(offsetof(BP_PsychicObjectSkeletal_C_GetTriangleData, Triangle_data) == 0x000000, "Member 'BP_PsychicObjectSkeletal_C_GetTriangleData::Triangle_data' has a wrong offset!");

}

