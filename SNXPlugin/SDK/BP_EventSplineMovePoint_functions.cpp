#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_EventSplineMovePoint

#include "Basic.hpp"

#include "BP_EventSplineMovePoint_classes.hpp"
#include "BP_EventSplineMovePoint_parameters.hpp"


namespace SDK
{

// Function BP_EventSplineMovePoint.BP_EventSplineMovePoint_C.GetSplineTransformPoints
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FTransform>               ReturnTransformPoint                                   (Parm, OutParm, HasGetValueTypeHash)

void ABP_EventSplineMovePoint_C::GetSplineTransformPoints(TArray<struct FTransform>* ReturnTransformPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EventSplineMovePoint_C", "GetSplineTransformPoints");

	Params::BP_EventSplineMovePoint_C_GetSplineTransformPoints Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ReturnTransformPoint != nullptr)
		*ReturnTransformPoint = std::move(Parms.ReturnTransformPoint);
}


// Function BP_EventSplineMovePoint.BP_EventSplineMovePoint_C.GetCurrentLocation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Length                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Loop                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector                          Location                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_EventSplineMovePoint_C::GetCurrentLocation(float Length, bool Loop, struct FVector* Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EventSplineMovePoint_C", "GetCurrentLocation");

	Params::BP_EventSplineMovePoint_C_GetCurrentLocation Parms{};

	Parms.Length = Length;
	Parms.Loop = Loop;

	UObject::ProcessEvent(Func, &Parms);

	if (Location != nullptr)
		*Location = std::move(Parms.Location);
}


// Function BP_EventSplineMovePoint.BP_EventSplineMovePoint_C.GetSplineLength
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Length                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_EventSplineMovePoint_C::GetSplineLength(float* Length)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EventSplineMovePoint_C", "GetSplineLength");

	Params::BP_EventSplineMovePoint_C_GetSplineLength Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Length != nullptr)
		*Length = Parms.Length;
}


// Function BP_EventSplineMovePoint.BP_EventSplineMovePoint_C.IsArrived
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Length                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Param_IsArrived                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_EventSplineMovePoint_C::IsArrived(float Length, bool* Param_IsArrived)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EventSplineMovePoint_C", "IsArrived");

	Params::BP_EventSplineMovePoint_C_IsArrived Parms{};

	Parms.Length = Length;

	UObject::ProcessEvent(Func, &Parms);

	if (Param_IsArrived != nullptr)
		*Param_IsArrived = Parms.Param_IsArrived;
}

}

