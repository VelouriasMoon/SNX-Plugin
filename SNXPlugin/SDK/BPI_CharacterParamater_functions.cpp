#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_CharacterParamater

#include "Basic.hpp"

#include "BPI_CharacterParamater_classes.hpp"
#include "BPI_CharacterParamater_parameters.hpp"


namespace SDK
{

// Function BPI_CharacterParamater.BPI_CharacterParamater_C.IsBadStatusAny
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bBadStatus                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_CharacterParamater_C::IsBadStatusAny(bool* bBadStatus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_CharacterParamater_C", "IsBadStatusAny");

	Params::BPI_CharacterParamater_C_IsBadStatusAny Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bBadStatus != nullptr)
		*bBadStatus = Parms.bBadStatus;
}


// Function BPI_CharacterParamater.BPI_CharacterParamater_C.SetHp
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   HP                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_CharacterParamater_C::SetHp(int32 HP, bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_CharacterParamater_C", "SetHp");

	Params::BPI_CharacterParamater_C_SetHp Parms{};

	Parms.HP = HP;

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function BPI_CharacterParamater.BPI_CharacterParamater_C.IsDead
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// bool                                    bDead                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_CharacterParamater_C::IsDead(bool* bDead) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_CharacterParamater_C", "IsDead");

	Params::BPI_CharacterParamater_C_IsDead Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bDead != nullptr)
		*bDead = Parms.bDead;
}


// Function BPI_CharacterParamater.BPI_CharacterParamater_C.IsBadStatusFrame
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// bool                                    bBadStatus                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_CharacterParamater_C::IsBadStatusFrame(bool* bBadStatus) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_CharacterParamater_C", "IsBadStatusFrame");

	Params::BPI_CharacterParamater_C_IsBadStatusFrame Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bBadStatus != nullptr)
		*bBadStatus = Parms.bBadStatus;
}


// Function BPI_CharacterParamater.BPI_CharacterParamater_C.IsBadStatusElectric
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// bool                                    bBadStatus                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_CharacterParamater_C::IsBadStatusElectric(bool* bBadStatus) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_CharacterParamater_C", "IsBadStatusElectric");

	Params::BPI_CharacterParamater_C_IsBadStatusElectric Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bBadStatus != nullptr)
		*bBadStatus = Parms.bBadStatus;
}


// Function BPI_CharacterParamater.BPI_CharacterParamater_C.IsBadStatusFlooded
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// bool                                    bBadStatus                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_CharacterParamater_C::IsBadStatusFlooded(bool* bBadStatus) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_CharacterParamater_C", "IsBadStatusFlooded");

	Params::BPI_CharacterParamater_C_IsBadStatusFlooded Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bBadStatus != nullptr)
		*bBadStatus = Parms.bBadStatus;
}


// Function BPI_CharacterParamater.BPI_CharacterParamater_C.IsBadStatusOil
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// bool                                    bBadStatus                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_CharacterParamater_C::IsBadStatusOil(bool* bBadStatus) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_CharacterParamater_C", "IsBadStatusOil");

	Params::BPI_CharacterParamater_C_IsBadStatusOil Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bBadStatus != nullptr)
		*bBadStatus = Parms.bBadStatus;
}


// Function BPI_CharacterParamater.BPI_CharacterParamater_C.IsBadStatusConfusion
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// bool                                    bBadStatus                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_CharacterParamater_C::IsBadStatusConfusion(bool* bBadStatus) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_CharacterParamater_C", "IsBadStatusConfusion");

	Params::BPI_CharacterParamater_C_IsBadStatusConfusion Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bBadStatus != nullptr)
		*bBadStatus = Parms.bBadStatus;
}


// Function BPI_CharacterParamater.BPI_CharacterParamater_C.GetHp
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// int32                                   HP                                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_CharacterParamater_C::GetHp(int32* HP) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_CharacterParamater_C", "GetHp");

	Params::BPI_CharacterParamater_C_GetHp Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (HP != nullptr)
		*HP = Parms.HP;
}


// Function BPI_CharacterParamater.BPI_CharacterParamater_C.GetMaxHp
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// int32                                   MaxHp                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_CharacterParamater_C::GetMaxHp(int32* MaxHp) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_CharacterParamater_C", "GetMaxHp");

	Params::BPI_CharacterParamater_C_GetMaxHp Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (MaxHp != nullptr)
		*MaxHp = Parms.MaxHp;
}


// Function BPI_CharacterParamater.BPI_CharacterParamater_C.GetHPPercent
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// float                                   Percent                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_CharacterParamater_C::GetHPPercent(float* Percent) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_CharacterParamater_C", "GetHPPercent");

	Params::BPI_CharacterParamater_C_GetHPPercent Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Percent != nullptr)
		*Percent = Parms.Percent;
}

}

