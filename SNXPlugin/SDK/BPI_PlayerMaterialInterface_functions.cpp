#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_PlayerMaterialInterface

#include "Basic.hpp"

#include "BPI_PlayerMaterialInterface_classes.hpp"
#include "BPI_PlayerMaterialInterface_parameters.hpp"


namespace SDK
{

// Function BPI_PlayerMaterialInterface.BPI_PlayerMaterialInterface_C.SetWeaponMaterialColor_PsychicEmission
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   R                                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   G                                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   B                                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             ClaimantName                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_PlayerMaterialInterface_C::SetWeaponMaterialColor_PsychicEmission(float R, float G, float B, class FName ClaimantName, bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_PlayerMaterialInterface_C", "SetWeaponMaterialColor_PsychicEmission");

	Params::BPI_PlayerMaterialInterface_C_SetWeaponMaterialColor_PsychicEmission Parms{};

	Parms.R = R;
	Parms.G = G;
	Parms.B = B;
	Parms.ClaimantName = ClaimantName;

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function BPI_PlayerMaterialInterface.BPI_PlayerMaterialInterface_C.SetWeaponMaterialAlpha_PsychicEmission
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Alpha                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             ClaimantName                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_PlayerMaterialInterface_C::SetWeaponMaterialAlpha_PsychicEmission(float Alpha, class FName ClaimantName, bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_PlayerMaterialInterface_C", "SetWeaponMaterialAlpha_PsychicEmission");

	Params::BPI_PlayerMaterialInterface_C_SetWeaponMaterialAlpha_PsychicEmission Parms{};

	Parms.Alpha = Alpha;
	Parms.ClaimantName = ClaimantName;

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function BPI_PlayerMaterialInterface.BPI_PlayerMaterialInterface_C.ResetWeaponMaterialAlpha_PsychicEmission
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             ClaimantName                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_PlayerMaterialInterface_C::ResetWeaponMaterialAlpha_PsychicEmission(class FName ClaimantName, bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_PlayerMaterialInterface_C", "ResetWeaponMaterialAlpha_PsychicEmission");

	Params::BPI_PlayerMaterialInterface_C_ResetWeaponMaterialAlpha_PsychicEmission Parms{};

	Parms.ClaimantName = ClaimantName;

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function BPI_PlayerMaterialInterface.BPI_PlayerMaterialInterface_C.ResetWeaponMaterialColor_PsychicEmission
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             ClaimantName                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_PlayerMaterialInterface_C::ResetWeaponMaterialColor_PsychicEmission(class FName ClaimantName, bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_PlayerMaterialInterface_C", "ResetWeaponMaterialColor_PsychicEmission");

	Params::BPI_PlayerMaterialInterface_C_ResetWeaponMaterialColor_PsychicEmission Parms{};

	Parms.ClaimantName = ClaimantName;

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function BPI_PlayerMaterialInterface.BPI_PlayerMaterialInterface_C.SetWeaponEmissive
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Emissive                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_PlayerMaterialInterface_C::SetWeaponEmissive(float Emissive, bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_PlayerMaterialInterface_C", "SetWeaponEmissive");

	Params::BPI_PlayerMaterialInterface_C_SetWeaponEmissive Parms{};

	Parms.Emissive = Emissive;

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function BPI_PlayerMaterialInterface.BPI_PlayerMaterialInterface_C.SetWeaponEmissiveColor
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_SASKind                               SasKind                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_PlayerMaterialInterface_C::SetWeaponEmissiveColor(E_SASKind SasKind, bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_PlayerMaterialInterface_C", "SetWeaponEmissiveColor");

	Params::BPI_PlayerMaterialInterface_C_SetWeaponEmissiveColor Parms{};

	Parms.SasKind = SasKind;

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function BPI_PlayerMaterialInterface.BPI_PlayerMaterialInterface_C.ResetWeaponEmissiveColor
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_SASKind                               SasKind                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_PlayerMaterialInterface_C::ResetWeaponEmissiveColor(E_SASKind SasKind, bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_PlayerMaterialInterface_C", "ResetWeaponEmissiveColor");

	Params::BPI_PlayerMaterialInterface_C_ResetWeaponEmissiveColor Parms{};

	Parms.SasKind = SasKind;

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}

}

