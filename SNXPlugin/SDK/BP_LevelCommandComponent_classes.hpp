#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_LevelCommandComponent

#include "Basic.hpp"

#include "E_LevelLoadStatus_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_LevelCommandComponent.BP_LevelCommandComponent_C
// 0x0018 (0x00D8 - 0x00C0)
class UBP_LevelCommandComponent_C final : public UActorComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class ABP_LevelManager_C*                     LevelManager;                                      // 0x00C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_LoadCommandComponent_C*             LoadCommandComponent;                              // 0x00D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_LevelCommandComponent(int32 EntryPoint);
	void ReceiveBeginPlay();
	void CommandLoadAreaAsync(const struct FS_LevelManagerCommand& Command);
	void CommandSetAreaVisible(const struct FS_LevelManagerCommand& Command, bool Async);
	void FullPathToLevelName(class FName FullPath, class FName* LevelName);
	void __CommandSetAreaOnlyVisible(const struct FS_LevelManagerCommand& Command, bool Async);
	void CommandUnloadAreaAsync(const struct FS_LevelManagerCommand& Command);
	void CommandWaitLoadAreaWait(const struct FS_LevelManagerCommand& Command);
	void _CommandWaitUnloadAreaWait(const struct FS_LevelManagerCommand& Command);
	void CommandChangeArea(const struct FS_LevelManagerCommand& Command);
	void IsAreaLevelLoaded(class FName Area, bool* IsLoaded, bool* IsError);
	void LoadLevel(class FName Param_Name);
	void _CommandWaitLoadAreaAsync(const struct FS_LevelManagerCommand& Command);
	void _CommandWaitUnloadAreaAsync(const struct FS_LevelManagerCommand& Command);
	void CommandWaitAreaVisible(const struct FS_LevelManagerCommand& Command);
	void CommandWaitAreaUnvisible(const struct FS_LevelManagerCommand& Command);
	void _CommandCancelLoadAreaAsync(const struct FS_LevelManagerCommand& Command);
	void CommandLoadAssetPackAsync(const struct FS_LevelManagerCommand& Command);
	void CommandLoadAssetAsync(const struct FS_LevelManagerCommand& Command);
	void CommandSetLevelVisible(const struct FS_LevelManagerCommand& Command);
	void CommandWaitLevelVisible(const struct FS_LevelManagerCommand& Command);
	void CommandLoadLevelAsync(const struct FS_LevelManagerCommand& Command);
	void CommandUnloadLevelAsync(const struct FS_LevelManagerCommand& Command);
	void CommandWaitLoadLevel(const struct FS_LevelManagerCommand& Command);
	void CommandWaitUnloadLevel(const struct FS_LevelManagerCommand& Command);
	void CommandSetLevelUnvisible(const struct FS_LevelManagerCommand& Command);
	void _CommandWaitAreaPreloadVisible(const struct FS_LevelManagerCommand& Command);
	void CommandUnloadAssetAsync(const struct FS_LevelManagerCommand& Command);
	void CommandWaitLevelUnvisible(const struct FS_LevelManagerCommand& Command);
	void DestroyLevelSpawnedNpc(const TSoftObjectPtr<class UObject>& Level);
	void SetVisibleCars(const TSoftObjectPtr<class UObject>& Level, bool Visible);
	void CommandWaitUnloadAllLevel(const struct FS_LevelManagerCommand& Command);
	void CommandWaitAnyLoadEnd(const struct FS_LevelManagerCommand& Command);
	void CommandLoadAreaLBPortalAsync(const struct FS_LevelManagerCommand& Command);
	void CommandWaitLoadAreaLBPortalWait(const struct FS_LevelManagerCommand& Command);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_LevelCommandComponent_C">();
	}
	static class UBP_LevelCommandComponent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_LevelCommandComponent_C>();
	}
};
static_assert(alignof(UBP_LevelCommandComponent_C) == 0x000008, "Wrong alignment on UBP_LevelCommandComponent_C");
static_assert(sizeof(UBP_LevelCommandComponent_C) == 0x0000D8, "Wrong size on UBP_LevelCommandComponent_C");
static_assert(offsetof(UBP_LevelCommandComponent_C, UberGraphFrame) == 0x0000C0, "Member 'UBP_LevelCommandComponent_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_LevelCommandComponent_C, LevelManager) == 0x0000C8, "Member 'UBP_LevelCommandComponent_C::LevelManager' has a wrong offset!");
static_assert(offsetof(UBP_LevelCommandComponent_C, LoadCommandComponent) == 0x0000D0, "Member 'UBP_LevelCommandComponent_C::LoadCommandComponent' has a wrong offset!");

}

