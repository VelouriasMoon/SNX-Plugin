#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_HologramCh0100

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function ABP_HologramCh0100.ABP_HologramCh0100_C.ExecuteUbergraph_ABP_HologramCh0100
// 0x0070 (0x0070 - 0x0000)
struct ABP_HologramCh0100_C_ExecuteUbergraph_ABP_HologramCh0100 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_683D[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Temp_struct_Variable;                              // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Temp_struct_Variable_1;                            // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bDisp;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_683E[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Select_Default;                             // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaTimeX;                           // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_683F[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwningActor_ReturnValue;               // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue;                // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6840[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerHologramInterface_C> K2Node_DynamicCast_AsBPI_Player_Hologram_Interface; // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6841[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMesh*                          K2Node_Event_SheathMesh;                           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bDisableStringWeapon;                 // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HologramWeaponEmissive_bDummy;            // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ABP_HologramCh0100_C_ExecuteUbergraph_ABP_HologramCh0100) == 0x000008, "Wrong alignment on ABP_HologramCh0100_C_ExecuteUbergraph_ABP_HologramCh0100");
static_assert(sizeof(ABP_HologramCh0100_C_ExecuteUbergraph_ABP_HologramCh0100) == 0x000070, "Wrong size on ABP_HologramCh0100_C_ExecuteUbergraph_ABP_HologramCh0100");
static_assert(offsetof(ABP_HologramCh0100_C_ExecuteUbergraph_ABP_HologramCh0100, EntryPoint) == 0x000000, "Member 'ABP_HologramCh0100_C_ExecuteUbergraph_ABP_HologramCh0100::EntryPoint' has a wrong offset!");
static_assert(offsetof(ABP_HologramCh0100_C_ExecuteUbergraph_ABP_HologramCh0100, Temp_bool_Variable) == 0x000004, "Member 'ABP_HologramCh0100_C_ExecuteUbergraph_ABP_HologramCh0100::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ABP_HologramCh0100_C_ExecuteUbergraph_ABP_HologramCh0100, CallFunc_Not_PreBool_ReturnValue) == 0x000005, "Member 'ABP_HologramCh0100_C_ExecuteUbergraph_ABP_HologramCh0100::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_HologramCh0100_C_ExecuteUbergraph_ABP_HologramCh0100, Temp_struct_Variable) == 0x000008, "Member 'ABP_HologramCh0100_C_ExecuteUbergraph_ABP_HologramCh0100::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(ABP_HologramCh0100_C_ExecuteUbergraph_ABP_HologramCh0100, Temp_struct_Variable_1) == 0x000014, "Member 'ABP_HologramCh0100_C_ExecuteUbergraph_ABP_HologramCh0100::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(ABP_HologramCh0100_C_ExecuteUbergraph_ABP_HologramCh0100, K2Node_Event_bDisp) == 0x000020, "Member 'ABP_HologramCh0100_C_ExecuteUbergraph_ABP_HologramCh0100::K2Node_Event_bDisp' has a wrong offset!");
static_assert(offsetof(ABP_HologramCh0100_C_ExecuteUbergraph_ABP_HologramCh0100, K2Node_Select_Default) == 0x000024, "Member 'ABP_HologramCh0100_C_ExecuteUbergraph_ABP_HologramCh0100::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ABP_HologramCh0100_C_ExecuteUbergraph_ABP_HologramCh0100, K2Node_Event_DeltaTimeX) == 0x000030, "Member 'ABP_HologramCh0100_C_ExecuteUbergraph_ABP_HologramCh0100::K2Node_Event_DeltaTimeX' has a wrong offset!");
static_assert(offsetof(ABP_HologramCh0100_C_ExecuteUbergraph_ABP_HologramCh0100, CallFunc_GetOwningActor_ReturnValue) == 0x000038, "Member 'ABP_HologramCh0100_C_ExecuteUbergraph_ABP_HologramCh0100::CallFunc_GetOwningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_HologramCh0100_C_ExecuteUbergraph_ABP_HologramCh0100, CallFunc_GetCurveValue_ReturnValue) == 0x000040, "Member 'ABP_HologramCh0100_C_ExecuteUbergraph_ABP_HologramCh0100::CallFunc_GetCurveValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_HologramCh0100_C_ExecuteUbergraph_ABP_HologramCh0100, K2Node_DynamicCast_AsBPI_Player_Hologram_Interface) == 0x000048, "Member 'ABP_HologramCh0100_C_ExecuteUbergraph_ABP_HologramCh0100::K2Node_DynamicCast_AsBPI_Player_Hologram_Interface' has a wrong offset!");
static_assert(offsetof(ABP_HologramCh0100_C_ExecuteUbergraph_ABP_HologramCh0100, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'ABP_HologramCh0100_C_ExecuteUbergraph_ABP_HologramCh0100::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ABP_HologramCh0100_C_ExecuteUbergraph_ABP_HologramCh0100, K2Node_Event_SheathMesh) == 0x000060, "Member 'ABP_HologramCh0100_C_ExecuteUbergraph_ABP_HologramCh0100::K2Node_Event_SheathMesh' has a wrong offset!");
static_assert(offsetof(ABP_HologramCh0100_C_ExecuteUbergraph_ABP_HologramCh0100, K2Node_Event_bDisableStringWeapon) == 0x000068, "Member 'ABP_HologramCh0100_C_ExecuteUbergraph_ABP_HologramCh0100::K2Node_Event_bDisableStringWeapon' has a wrong offset!");
static_assert(offsetof(ABP_HologramCh0100_C_ExecuteUbergraph_ABP_HologramCh0100, CallFunc_HologramWeaponEmissive_bDummy) == 0x000069, "Member 'ABP_HologramCh0100_C_ExecuteUbergraph_ABP_HologramCh0100::CallFunc_HologramWeaponEmissive_bDummy' has a wrong offset!");
static_assert(offsetof(ABP_HologramCh0100_C_ExecuteUbergraph_ABP_HologramCh0100, CallFunc_IsValid_ReturnValue) == 0x00006A, "Member 'ABP_HologramCh0100_C_ExecuteUbergraph_ABP_HologramCh0100::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function ABP_HologramCh0100.ABP_HologramCh0100_C.CheckSheathMesh
// 0x0010 (0x0010 - 0x0000)
struct ABP_HologramCh0100_C_CheckSheathMesh final
{
public:
	class USkeletalMesh*                          SheathMesh;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Param_bDisableStringWeapon;                        // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ABP_HologramCh0100_C_CheckSheathMesh) == 0x000008, "Wrong alignment on ABP_HologramCh0100_C_CheckSheathMesh");
static_assert(sizeof(ABP_HologramCh0100_C_CheckSheathMesh) == 0x000010, "Wrong size on ABP_HologramCh0100_C_CheckSheathMesh");
static_assert(offsetof(ABP_HologramCh0100_C_CheckSheathMesh, SheathMesh) == 0x000000, "Member 'ABP_HologramCh0100_C_CheckSheathMesh::SheathMesh' has a wrong offset!");
static_assert(offsetof(ABP_HologramCh0100_C_CheckSheathMesh, Param_bDisableStringWeapon) == 0x000008, "Member 'ABP_HologramCh0100_C_CheckSheathMesh::Param_bDisableStringWeapon' has a wrong offset!");

// Function ABP_HologramCh0100.ABP_HologramCh0100_C.BlueprintUpdateAnimation
// 0x0004 (0x0004 - 0x0000)
struct ABP_HologramCh0100_C_BlueprintUpdateAnimation final
{
public:
	float                                         DeltaTimeX;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_HologramCh0100_C_BlueprintUpdateAnimation) == 0x000004, "Wrong alignment on ABP_HologramCh0100_C_BlueprintUpdateAnimation");
static_assert(sizeof(ABP_HologramCh0100_C_BlueprintUpdateAnimation) == 0x000004, "Wrong size on ABP_HologramCh0100_C_BlueprintUpdateAnimation");
static_assert(offsetof(ABP_HologramCh0100_C_BlueprintUpdateAnimation, DeltaTimeX) == 0x000000, "Member 'ABP_HologramCh0100_C_BlueprintUpdateAnimation::DeltaTimeX' has a wrong offset!");

// Function ABP_HologramCh0100.ABP_HologramCh0100_C.DispWeaponString
// 0x0001 (0x0001 - 0x0000)
struct ABP_HologramCh0100_C_DispWeaponString final
{
public:
	bool                                          bDisp;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ABP_HologramCh0100_C_DispWeaponString) == 0x000001, "Wrong alignment on ABP_HologramCh0100_C_DispWeaponString");
static_assert(sizeof(ABP_HologramCh0100_C_DispWeaponString) == 0x000001, "Wrong size on ABP_HologramCh0100_C_DispWeaponString");
static_assert(offsetof(ABP_HologramCh0100_C_DispWeaponString, bDisp) == 0x000000, "Member 'ABP_HologramCh0100_C_DispWeaponString::bDisp' has a wrong offset!");

// Function ABP_HologramCh0100.ABP_HologramCh0100_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct ABP_HologramCh0100_C_AnimGraph final
{
public:
	struct FPoseLink                              Param_AnimGraph;                                   // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABP_HologramCh0100_C_AnimGraph) == 0x000008, "Wrong alignment on ABP_HologramCh0100_C_AnimGraph");
static_assert(sizeof(ABP_HologramCh0100_C_AnimGraph) == 0x000010, "Wrong size on ABP_HologramCh0100_C_AnimGraph");
static_assert(offsetof(ABP_HologramCh0100_C_AnimGraph, Param_AnimGraph) == 0x000000, "Member 'ABP_HologramCh0100_C_AnimGraph::Param_AnimGraph' has a wrong offset!");

}

