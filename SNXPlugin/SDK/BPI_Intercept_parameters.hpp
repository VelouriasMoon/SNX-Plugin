#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_Intercept

#include "Basic.hpp"


namespace SDK::Params
{

// Function BPI_Intercept.BPI_Intercept_C.InterceptAttack
// 0x0018 (0x0018 - 0x0000)
struct BPI_Intercept_C_InterceptAttack final
{
public:
	class ARSBattleCharacter_C*                   Intercepter;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattleCharacter_C*                   NewTarget;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDummy;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_Intercept_C_InterceptAttack) == 0x000008, "Wrong alignment on BPI_Intercept_C_InterceptAttack");
static_assert(sizeof(BPI_Intercept_C_InterceptAttack) == 0x000018, "Wrong size on BPI_Intercept_C_InterceptAttack");
static_assert(offsetof(BPI_Intercept_C_InterceptAttack, Intercepter) == 0x000000, "Member 'BPI_Intercept_C_InterceptAttack::Intercepter' has a wrong offset!");
static_assert(offsetof(BPI_Intercept_C_InterceptAttack, NewTarget) == 0x000008, "Member 'BPI_Intercept_C_InterceptAttack::NewTarget' has a wrong offset!");
static_assert(offsetof(BPI_Intercept_C_InterceptAttack, bDummy) == 0x000010, "Member 'BPI_Intercept_C_InterceptAttack::bDummy' has a wrong offset!");

// Function BPI_Intercept.BPI_Intercept_C.InterceptReserve
// 0x0001 (0x0001 - 0x0000)
struct BPI_Intercept_C_InterceptReserve final
{
public:
	bool                                          bDummy;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_Intercept_C_InterceptReserve) == 0x000001, "Wrong alignment on BPI_Intercept_C_InterceptReserve");
static_assert(sizeof(BPI_Intercept_C_InterceptReserve) == 0x000001, "Wrong size on BPI_Intercept_C_InterceptReserve");
static_assert(offsetof(BPI_Intercept_C_InterceptReserve, bDummy) == 0x000000, "Member 'BPI_Intercept_C_InterceptReserve::bDummy' has a wrong offset!");

// Function BPI_Intercept.BPI_Intercept_C.InterceptCancel
// 0x0001 (0x0001 - 0x0000)
struct BPI_Intercept_C_InterceptCancel final
{
public:
	bool                                          bDummy;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_Intercept_C_InterceptCancel) == 0x000001, "Wrong alignment on BPI_Intercept_C_InterceptCancel");
static_assert(sizeof(BPI_Intercept_C_InterceptCancel) == 0x000001, "Wrong size on BPI_Intercept_C_InterceptCancel");
static_assert(offsetof(BPI_Intercept_C_InterceptCancel, bDummy) == 0x000000, "Member 'BPI_Intercept_C_InterceptCancel::bDummy' has a wrong offset!");

// Function BPI_Intercept.BPI_Intercept_C.IsInterceptFail
// 0x0001 (0x0001 - 0x0000)
struct BPI_Intercept_C_IsInterceptFail final
{
public:
	bool                                          bFail;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_Intercept_C_IsInterceptFail) == 0x000001, "Wrong alignment on BPI_Intercept_C_IsInterceptFail");
static_assert(sizeof(BPI_Intercept_C_IsInterceptFail) == 0x000001, "Wrong size on BPI_Intercept_C_IsInterceptFail");
static_assert(offsetof(BPI_Intercept_C_IsInterceptFail, bFail) == 0x000000, "Member 'BPI_Intercept_C_IsInterceptFail::bFail' has a wrong offset!");

}

