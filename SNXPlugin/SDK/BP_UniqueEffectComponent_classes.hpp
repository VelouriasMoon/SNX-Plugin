#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_UniqueEffectComponent

#include "Basic.hpp"

#include "E_SASKind_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "SPsychicCaptureMaterial_structs.hpp"
#include "BattlePrototype_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "PsychicObjectSizeParameter_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_UniqueEffectComponent.BP_UniqueEffectComponent_C
// 0x0490 (0x0550 - 0x00C0)
class UBP_UniqueEffectComponent_C final : public UActorComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	TArray<class URSParticleSystemComponentBase*> ParticleChildCapture;                              // 0x00C8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, HasGetValueTypeHash)
	class UMeshComponent*                         MeshComp;                                          // 0x00D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMeshComponent*>                 CaptureMeshList;                                   // 0x00E0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          bMaterialCaptureStart;                             // 0x00F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_407A[0x7];                                     // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSPsychicCaptureMaterial               MaterialParamNormal;                               // 0x00F8(0x00A0)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	struct FSPsychicCaptureMaterial               MaterialParamFire;                                 // 0x0198(0x00A0)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	struct FSPsychicCaptureMaterial               MaterialParamThunder;                              // 0x0238(0x00A0)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	struct FSPsychicCaptureMaterial               MaterialCaptureStartParam;                         // 0x02D8(0x00A0)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	float                                         MaterialCaptureStartTimer;                         // 0x0378(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_407B[0x4];                                     // 0x037C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveVector*                           MaterialCaptureStartCurve;                         // 0x0380(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveVector*                           MaterialCurveNormal;                               // 0x0388(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPsychicObjectSizeParameter            SizeParameter;                                     // 0x0390(0x0138)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bAura;                                             // 0x04C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bAuraOn;                                           // 0x04C9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_407C[0x2];                                     // 0x04CA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         AuraGrowTime;                                      // 0x04CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AuraRate;                                          // 0x04D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDbDispAura;                                       // 0x04D4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_407D[0x3];                                     // 0x04D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ParticleRateCaptureAura;                           // 0x04D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ParticleSizeCaptureAura;                           // 0x04DC(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMeshComponent*                         AuraComp;                                          // 0x04E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CaptureMaterialRate;                               // 0x04F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bStencilOn;                                        // 0x04F4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_407E[0x3];                                     // 0x04F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         StencilValue;                                      // 0x04F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PsychicDeltaSecond;                                // 0x04FC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPsychicObjectProcedure                       ProcedurePhase;                                    // 0x0500(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_407F[0x7];                                     // 0x0501(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class URSParticleSystemComponentBase*> EffectCompList;                                    // 0x0508(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, HasGetValueTypeHash)
	float                                         PsychicDeltaRate;                                  // 0x0518(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bEffectAttack;                                     // 0x051C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4080[0x3];                                     // 0x051D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class URSParticleSystemComponentBase*> EffectAttack;                                      // 0x0520(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          bRequestAsyncCommon;                               // 0x0530(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bRequestAsyncAttack;                               // 0x0531(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bRequestAsyncAttackUnique;                         // 0x0532(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bAsync;                                            // 0x0533(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bAsyncCommon;                                      // 0x0534(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bAsyncAttack;                                      // 0x0535(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bAsyncAttackUnique;                                // 0x0536(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bNewCommon;                                        // 0x0537(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UPsychicSasParticleComponent_C*         PsychicSASEffectComp;                              // 0x0538(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATriggerEffectManager*                  TrgEffMgr;                                         // 0x0540(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsNoParticle;                                      // 0x0548(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BP_UniqueEffectComponent(int32 EntryPoint);
	void ReceiveTick(float DeltaSeconds);
	void ReceiveBeginPlay();
	void SetEffectCapture(bool FlagIn);
	void SetMaterialCaptureStart(bool FlagIn);
	void GetEffectCaptureParam(E_SASKind* SAS_Kind, bool* Capture, float* Rate, struct FVector* Size, float* RateAura, struct FVector* SizeAura);
	void SpawnEffect(E_SASKind SasKind, bool Force, bool Capture, float Rate, const struct FVector& Size, float RateAura, const struct FVector& SizeAura);
	void SpawnMeshEffect(class UMeshComponent* Mesh_in, E_SASKind Sas_kind_in, bool Capture_in, float Rate_in, const struct FVector& Size_in, float RateAura_in, const struct FVector& SizeAura_in, class URSParticleSystemComponentBase** Particle_system);
	void DeactivateEffect(E_SASKind SasKind, bool Capture);
	void SetAsyncCommon(class FName RefNameIn, bool FlagIn);
	void GetMateralCaptureStartParam(E_SASKind SasKindIn, struct FSPsychicCaptureMaterial* MaterialParam);
	void GetMaterialCaptureStartCurve(E_SASKind Sas_kind_in, class UCurveVector** Material_curve);
	void InitMaterialCaptureStartParam();
	void LoadMaterialCaptureStartCurve(const struct FSPsychicCaptureMaterial& SPsychicCaptureMaterial, class UCurveVector** AsCurve_Vector);
	void InitializeParameter();
	void Initialize_Component(class UMeshComponent* Mesh_comp_in, class USceneComponent* Arrow_comp_in, class USphereComponent* Attack_sphere_in, class UCapsuleComponent* Attack_capsule_in, class UPsychicSasParticleComponent_C* PsychicSasParticleComp);
	void AddCaptureMesh(class UMeshComponent* Mesh);
	void UpdatePsyComp();
	void UpdateCapture();
	void PrevAsync();
	void UpdateAsync();
	void UpdateCheckTimeDilation();
	void UpdatePsychicObjectEffect();
	void UpdateMaterialCaptureStart();
	void GetDeltaSecond(float* DeltaSecond);
	void SetPhaseCapture(bool Flag_in, bool Combo_in, bool Capture_success_in, bool Air_in);
	void SetEffectAura(bool Flag_in, bool Instance_on_in);
	void SetPsychicObjectCapture(bool Flag_in, class ARsBattleHero_C* Capture_owner_in, bool Capture_success_in, bool Combo_in, bool Air_in, bool* Return);
	void SetPsychicObjectAttack(class AActor* Target_actor_in, bool Direct_drop_in, bool Unique_in, bool Combo_in, bool Air_combo_in, bool brain_field_in, int32 Combo_level_in, int32 Combo_index_in, float Attract_time_in, class UAnimSequence* Anim_seq_in, EPsychicObjectBrainFieldAttackType Attack_type_in, bool Flag_in, bool* Return);
	void SetEffectAuraGrow(bool Flag_in, bool Force_off, bool Instance_on);
	void SetMIParameterAura(float Value_in);
	void SetOutline(bool Flag_in);
	void SetMIParameterEmission(float Value_in);
	void UpdateEffectAura();
	void UpdateEffect();
	void UpdatePsyCompOld();
	void UpdateAttackThrow();
	void UpdateAsyncAttackThrow();
	void UpdateDestroy();
	void SetEffectDestroy(bool Flag_in);
	void UpdateEffectDestroy();
	void SetParameterEffectFade(float Rate_in);
	void SetParameterCopy(float Rate_in);
	void UpdatePsyMain(float Delta_second);
	void UpdateMain();
	void UpdatePsychicDelta(float Delta_second);
	void UpdatePsychicComponent();
	void CalcDeltaSecond(float Delta_second, float* Calc_delta_second);
	void GetPsychicDeltaSecond(bool bPsychicSpeed, bool bGetRate, float* Delta_second, float* Rate);
	void SetEffectAttack(bool Flag_in, E_SASKind Sas_kind_in);
	void SetEffectAttackThrow();
	void SetAttackThrow(bool Flag_in, float Throw_speed_in, float Homing_speed_in);
	void SetAttackUnique();
	void SetPhaseAttack(bool Flag_in);
	void SetPhaseDestroy(bool Flag_in, float Delay_time_in);
	void UpdateAsyncCapture();
	void UpdateAsyncCommon();
	void LoadEffectParameter();
	void Set_Capture_Effect_Off();
	void SetAttackEffectOff();

	void GetEmitterTemplate(E_SASKind SasKind, bool IsCapture, bool IsSkeletalMesh, class UParticleSystem** Template) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_UniqueEffectComponent_C">();
	}
	static class UBP_UniqueEffectComponent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_UniqueEffectComponent_C>();
	}
};
static_assert(alignof(UBP_UniqueEffectComponent_C) == 0x000008, "Wrong alignment on UBP_UniqueEffectComponent_C");
static_assert(sizeof(UBP_UniqueEffectComponent_C) == 0x000550, "Wrong size on UBP_UniqueEffectComponent_C");
static_assert(offsetof(UBP_UniqueEffectComponent_C, UberGraphFrame) == 0x0000C0, "Member 'UBP_UniqueEffectComponent_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_UniqueEffectComponent_C, ParticleChildCapture) == 0x0000C8, "Member 'UBP_UniqueEffectComponent_C::ParticleChildCapture' has a wrong offset!");
static_assert(offsetof(UBP_UniqueEffectComponent_C, MeshComp) == 0x0000D8, "Member 'UBP_UniqueEffectComponent_C::MeshComp' has a wrong offset!");
static_assert(offsetof(UBP_UniqueEffectComponent_C, CaptureMeshList) == 0x0000E0, "Member 'UBP_UniqueEffectComponent_C::CaptureMeshList' has a wrong offset!");
static_assert(offsetof(UBP_UniqueEffectComponent_C, bMaterialCaptureStart) == 0x0000F0, "Member 'UBP_UniqueEffectComponent_C::bMaterialCaptureStart' has a wrong offset!");
static_assert(offsetof(UBP_UniqueEffectComponent_C, MaterialParamNormal) == 0x0000F8, "Member 'UBP_UniqueEffectComponent_C::MaterialParamNormal' has a wrong offset!");
static_assert(offsetof(UBP_UniqueEffectComponent_C, MaterialParamFire) == 0x000198, "Member 'UBP_UniqueEffectComponent_C::MaterialParamFire' has a wrong offset!");
static_assert(offsetof(UBP_UniqueEffectComponent_C, MaterialParamThunder) == 0x000238, "Member 'UBP_UniqueEffectComponent_C::MaterialParamThunder' has a wrong offset!");
static_assert(offsetof(UBP_UniqueEffectComponent_C, MaterialCaptureStartParam) == 0x0002D8, "Member 'UBP_UniqueEffectComponent_C::MaterialCaptureStartParam' has a wrong offset!");
static_assert(offsetof(UBP_UniqueEffectComponent_C, MaterialCaptureStartTimer) == 0x000378, "Member 'UBP_UniqueEffectComponent_C::MaterialCaptureStartTimer' has a wrong offset!");
static_assert(offsetof(UBP_UniqueEffectComponent_C, MaterialCaptureStartCurve) == 0x000380, "Member 'UBP_UniqueEffectComponent_C::MaterialCaptureStartCurve' has a wrong offset!");
static_assert(offsetof(UBP_UniqueEffectComponent_C, MaterialCurveNormal) == 0x000388, "Member 'UBP_UniqueEffectComponent_C::MaterialCurveNormal' has a wrong offset!");
static_assert(offsetof(UBP_UniqueEffectComponent_C, SizeParameter) == 0x000390, "Member 'UBP_UniqueEffectComponent_C::SizeParameter' has a wrong offset!");
static_assert(offsetof(UBP_UniqueEffectComponent_C, bAura) == 0x0004C8, "Member 'UBP_UniqueEffectComponent_C::bAura' has a wrong offset!");
static_assert(offsetof(UBP_UniqueEffectComponent_C, bAuraOn) == 0x0004C9, "Member 'UBP_UniqueEffectComponent_C::bAuraOn' has a wrong offset!");
static_assert(offsetof(UBP_UniqueEffectComponent_C, AuraGrowTime) == 0x0004CC, "Member 'UBP_UniqueEffectComponent_C::AuraGrowTime' has a wrong offset!");
static_assert(offsetof(UBP_UniqueEffectComponent_C, AuraRate) == 0x0004D0, "Member 'UBP_UniqueEffectComponent_C::AuraRate' has a wrong offset!");
static_assert(offsetof(UBP_UniqueEffectComponent_C, bDbDispAura) == 0x0004D4, "Member 'UBP_UniqueEffectComponent_C::bDbDispAura' has a wrong offset!");
static_assert(offsetof(UBP_UniqueEffectComponent_C, ParticleRateCaptureAura) == 0x0004D8, "Member 'UBP_UniqueEffectComponent_C::ParticleRateCaptureAura' has a wrong offset!");
static_assert(offsetof(UBP_UniqueEffectComponent_C, ParticleSizeCaptureAura) == 0x0004DC, "Member 'UBP_UniqueEffectComponent_C::ParticleSizeCaptureAura' has a wrong offset!");
static_assert(offsetof(UBP_UniqueEffectComponent_C, AuraComp) == 0x0004E8, "Member 'UBP_UniqueEffectComponent_C::AuraComp' has a wrong offset!");
static_assert(offsetof(UBP_UniqueEffectComponent_C, CaptureMaterialRate) == 0x0004F0, "Member 'UBP_UniqueEffectComponent_C::CaptureMaterialRate' has a wrong offset!");
static_assert(offsetof(UBP_UniqueEffectComponent_C, bStencilOn) == 0x0004F4, "Member 'UBP_UniqueEffectComponent_C::bStencilOn' has a wrong offset!");
static_assert(offsetof(UBP_UniqueEffectComponent_C, StencilValue) == 0x0004F8, "Member 'UBP_UniqueEffectComponent_C::StencilValue' has a wrong offset!");
static_assert(offsetof(UBP_UniqueEffectComponent_C, PsychicDeltaSecond) == 0x0004FC, "Member 'UBP_UniqueEffectComponent_C::PsychicDeltaSecond' has a wrong offset!");
static_assert(offsetof(UBP_UniqueEffectComponent_C, ProcedurePhase) == 0x000500, "Member 'UBP_UniqueEffectComponent_C::ProcedurePhase' has a wrong offset!");
static_assert(offsetof(UBP_UniqueEffectComponent_C, EffectCompList) == 0x000508, "Member 'UBP_UniqueEffectComponent_C::EffectCompList' has a wrong offset!");
static_assert(offsetof(UBP_UniqueEffectComponent_C, PsychicDeltaRate) == 0x000518, "Member 'UBP_UniqueEffectComponent_C::PsychicDeltaRate' has a wrong offset!");
static_assert(offsetof(UBP_UniqueEffectComponent_C, bEffectAttack) == 0x00051C, "Member 'UBP_UniqueEffectComponent_C::bEffectAttack' has a wrong offset!");
static_assert(offsetof(UBP_UniqueEffectComponent_C, EffectAttack) == 0x000520, "Member 'UBP_UniqueEffectComponent_C::EffectAttack' has a wrong offset!");
static_assert(offsetof(UBP_UniqueEffectComponent_C, bRequestAsyncCommon) == 0x000530, "Member 'UBP_UniqueEffectComponent_C::bRequestAsyncCommon' has a wrong offset!");
static_assert(offsetof(UBP_UniqueEffectComponent_C, bRequestAsyncAttack) == 0x000531, "Member 'UBP_UniqueEffectComponent_C::bRequestAsyncAttack' has a wrong offset!");
static_assert(offsetof(UBP_UniqueEffectComponent_C, bRequestAsyncAttackUnique) == 0x000532, "Member 'UBP_UniqueEffectComponent_C::bRequestAsyncAttackUnique' has a wrong offset!");
static_assert(offsetof(UBP_UniqueEffectComponent_C, bAsync) == 0x000533, "Member 'UBP_UniqueEffectComponent_C::bAsync' has a wrong offset!");
static_assert(offsetof(UBP_UniqueEffectComponent_C, bAsyncCommon) == 0x000534, "Member 'UBP_UniqueEffectComponent_C::bAsyncCommon' has a wrong offset!");
static_assert(offsetof(UBP_UniqueEffectComponent_C, bAsyncAttack) == 0x000535, "Member 'UBP_UniqueEffectComponent_C::bAsyncAttack' has a wrong offset!");
static_assert(offsetof(UBP_UniqueEffectComponent_C, bAsyncAttackUnique) == 0x000536, "Member 'UBP_UniqueEffectComponent_C::bAsyncAttackUnique' has a wrong offset!");
static_assert(offsetof(UBP_UniqueEffectComponent_C, bNewCommon) == 0x000537, "Member 'UBP_UniqueEffectComponent_C::bNewCommon' has a wrong offset!");
static_assert(offsetof(UBP_UniqueEffectComponent_C, PsychicSASEffectComp) == 0x000538, "Member 'UBP_UniqueEffectComponent_C::PsychicSASEffectComp' has a wrong offset!");
static_assert(offsetof(UBP_UniqueEffectComponent_C, TrgEffMgr) == 0x000540, "Member 'UBP_UniqueEffectComponent_C::TrgEffMgr' has a wrong offset!");
static_assert(offsetof(UBP_UniqueEffectComponent_C, IsNoParticle) == 0x000548, "Member 'UBP_UniqueEffectComponent_C::IsNoParticle' has a wrong offset!");

}

