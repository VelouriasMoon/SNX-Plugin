#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_ui_Equip

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Struct_ui_equip_item_list_structs.hpp"
#include "BattlePrototype_structs.hpp"
#include "BattlePrototype_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WB_ui_Equip.WB_ui_Equip_C
// 0x03D0 (0x0780 - 0x03B0)
class UWB_ui_Equip_C final : public UUIEquip
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x03B0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Info_window_out;                                   // 0x03B8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Info_window_in;                                    // 0x03C0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Info_window;                                       // 0x03C8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Chanege_default;                                   // 0x03D0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Change_view;                                       // 0x03D8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Default_view;                                      // 0x03E0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Out;                                               // 0x03E8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       In;                                                // 0x03F0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Default_none;                                      // 0x03F8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Default;                                           // 0x0400(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanel*                           CanvasPanel_1;                                     // 0x0408(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Chara_Set;                                         // 0x0410(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Chara_Set_Base_1;                                  // 0x0418(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Chara_Set_Frame_1;                                 // 0x0420(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Line_1;                                            // 0x0428(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               PG_All_Set;                                        // 0x0430(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 PG_Cover_Black;                                    // 0x0438(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               PG_Overlay_2;                                      // 0x0440(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UREDRetainerBox*                        REDRetainerBox_Menu;                               // 0x0448(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 RT_1;                                              // 0x0450(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               SubContents_Set;                                   // 0x0458(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUniformGridPanel*                      UniformGridPanel_0;                                // 0x0460(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_ui_Equip_Parts_5_C*                 WB_ui_Equipages_Parts_5;                           // 0x0468(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_ui_Equip_Parts_6_C*                 WB_ui_Equipages_Parts_6;                           // 0x0470(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_ui_Equip_Parts_7_C*                 WB_ui_Equipages_Parts_7;                           // 0x0478(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_ui_Equip_Parts_1_C*                 WB_ui_Equipages_Parts_1_1;                         // 0x0480(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_ui_Equip_Parts_1_C*                 WB_ui_Equipages_Parts_1_2;                         // 0x0488(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_ui_Equip_Parts_1_C*                 WB_ui_Equipages_Parts_1_3;                         // 0x0490(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_ui_Equip_Parts_1_C*                 WB_ui_Equipages_Parts_1_4;                         // 0x0498(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_ui_Equip_Parts_1_C*                 WB_ui_Equipages_Parts_1_5;                         // 0x04A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_ui_Equip_Parts_1_C*                 WB_ui_Equipages_Parts_1_6;                         // 0x04A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_ui_Equip_Parts_1_C*                 WB_ui_Equipages_Parts_1_7;                         // 0x04B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_ui_Equip_Parts_1_C*                 WB_ui_Equipages_Parts_1_8;                         // 0x04B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_ui_Equip_Parts_1_C*                 WB_ui_Equipages_Parts_1_9;                         // 0x04C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_ui_Equip_Parts_1_C*                 WB_ui_Equipages_Parts_1_10;                        // 0x04C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_ui_Equip_Parts_3_C*                 WB_ui_Equipages_Parts_3_1;                         // 0x04D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_ui_Equip_Parts_3_C*                 WB_ui_Equipages_Parts_3_2;                         // 0x04D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_ui_MainChoice_Parts_1_C*            WB_ui_MainChoice_Parts_1;                          // 0x04E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_ui_MainContents_Parts_4_C*          WB_ui_MainContents_Parts_4;                        // 0x04E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_ui_MainContents_Parts_5_C*          WB_ui_MainContents_Parts_5;                        // 0x04F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_ui_MainContents_Parts_6_C*          WB_ui_MainContents_Parts_6_1;                      // 0x04F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_ui_MainContents_Parts_6_C*          WB_ui_MainContents_Parts_6_2;                      // 0x0500(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_ui_Party_CharaInfo_Parts_1_C*       WB_ui_Party_CharaInfo_Parts_1;                     // 0x0508(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          IsContentsChange;                                  // 0x0510(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsEnd;                                             // 0x0511(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9732[0x6];                                     // 0x0512(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWB_ui_Equip_Parts_1_C*>         CharaList;                                         // 0x0518(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         ModeState;                                         // 0x0528(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CursorTab;                                         // 0x052C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CursorChara;                                       // 0x0530(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CursorCategory;                                    // 0x0534(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CursorItem;                                        // 0x0538(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9733[0x4];                                     // 0x053C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FStruct_ui_equip_item_list>     CheckItemList;                                     // 0x0540(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TArray<struct FPlayerInfo>                    PlayerList;                                        // 0x0550(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             SetCharaID;                                        // 0x0560(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             SetScene;                                          // 0x0570(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             SetSelectEquip;                                    // 0x0580(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             HideScene;                                         // 0x0590(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class UTextBlock*                             TextWidgetHelp;                                    // 0x05A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWB_ui_Guide_C*                         GuideWidget;                                       // 0x05A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UWB_ui_MainContents_Parts_6_C*>  TabList;                                           // 0x05B0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          IsChangeTab;                                       // 0x05C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9734[0x3];                                     // 0x05C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         BackupModeState;                                   // 0x05C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ViewerState;                                       // 0x05C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9735[0x4];                                     // 0x05CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             StartViewMode;                                     // 0x05D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             EndViewMode;                                       // 0x05E0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             SetCharaMoveMode;                                  // 0x05F0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          IsMouseInit;                                       // 0x0600(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9736[0x3];                                     // 0x0601(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPlayerInfo                            CurrentPlayerInfoBefore;                           // 0x0604(0x00D0)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	uint8                                         Pad_9737[0x4];                                     // 0x06D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             ChangeSelectListCursor;                            // 0x06D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             SetupEquipAllRequest;                              // 0x06E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          IsChangeEquip;                                     // 0x06F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsChangeChara;                                     // 0x06F9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9738[0x2];                                     // 0x06FA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         SortIndex;                                         // 0x06FC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         FilterIndex;                                       // 0x0700(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsCompare;                                         // 0x0704(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9739[0x3];                                     // 0x0705(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             SetPopupMode;                                      // 0x0708(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	int32                                         WarningState;                                      // 0x0718(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   GraphicUpdateID;                                   // 0x071C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_973A[0x4];                                     // 0x0724(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 SortBackupList;                                    // 0x0728(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TArray<int32>                                 EquipParameter;                                    // 0x0738(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TArray<int32>                                 EquipParameter2;                                   // 0x0748(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TArray<int32>                                 FilterParameter;                                   // 0x0758(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             ChangeSelectListCursorAllAttachment;               // 0x0768(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          IsEnableWeaponSkinWork;                            // 0x0778(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          FlagKasane;                                        // 0x0779(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void SetCharaID__DelegateSignature(int32 CharaID, class UImage* Image);
	void SetScene__DelegateSignature(EUIMain3DCharacterSceneID SceneID);
	void SetSelectEquip__DelegateSignature(EUIMain3DEquipSelectID Select, int32 AttachmentIndex);
	void HideScene__DelegateSignature();
	void StartViewMode__DelegateSignature();
	void EndViewMode__DelegateSignature();
	void SetCharaMoveMode__DelegateSignature(bool CharaMoveFlag);
	void ChangeSelectListCursor__DelegateSignature(bool IsCostumeAttachment, int32 Param_CursorCategory, int32 SelectID);
	void SetupEquipAllRequest__DelegateSignature();
	void SetPopupMode__DelegateSignature(bool IsPopup);
	void ChangeSelectListCursorAllAttachment__DelegateSignature(int32 Attachment0, int32 Attachment1, int32 Attachment2, int32 CameraIndex);
	void ExecuteUbergraph_WB_ui_Equip(int32 EntryPoint);
	void OnInitialized();
	void ______x_(const struct FRedMouseArgument& Argument, class UUserWidget* PWidget);
	void ____LR(const struct FRedMouseArgument& Argument, class UUserWidget* PWidget);
	void ____(const struct FRedMouseArgument& Argument, class UUserWidget* PWidget);
	void UpdateState(int32 State, int32 SubState, float DeltaSeconds);
	void Construct();
	void PreConstruct(bool IsDesignTime);
	void StateNone(int32 SubState);
	void StateOpen(int32 SubState);
	void StateLoop(int32 SubState);
	void StateClose(int32 SubState);
	void SetContentsChange(bool IsChange);
	void IsEndMenu(bool* Param_IsEnd);
	void UpdateSelectChara();
	void UpdateSelectEquip();
	void DrawCurrentEquip(bool EnableCursor);
	void GetWeaponName(int32 ID, class FString* Param_Name);
	void GetAccessoryName(int32 ID, class FString* Param_Name);
	void UpdateSelectItem();
	void UpdateStatusCheck();
	void CreateCheckItemList(bool IsAccessory, bool IsWeaponSkin);
	void SetCurrentEquipParam();
	void SetCurrentListParam();
	void GetWeaponID(int32 BaseID, class FName* WeaponId);
	void GetAccessoryID(int32 BaseID, class FName* AccessoryId);
	void Sub_Equip_Item_Count(class FName ID, bool IsEquip, bool IsUseSkin);
	void EquipChangeAddItem(class FName ID);
	void EquipChangeSubItem(class FName ID);
	void SwapCurrentItem();
	void GetIDNumber(class FName BaseID, int32* Number);
	void GetCurrentEquipID(class FName* ID, int32* IDValue);
	void SetCurrentEquipID(class FName ID);
	void UpdateItemList(class FName AddItem, class FName SubItem);
	void InitializeCommonParts(class UTextBlock* TextHelp, class UWB_ui_Guide_C* Guide);
	void StateLoopCostume();
	void SetupTab();
	void ChangeTab();
	void InitSelectEquip(bool UpdateCursor);
	void SelectTab();
	void GetCostumeID(int32 BaseID, class FName* CostumeId);
	void GetAttachmentID(int32 BaseID, class FName* AttachmentId);
	void UpdateViewer();
	void ChangeViewer();
	void SetupPlayerList();
	void ChangePlayerList();
	void SetupCharaIcon();
	void SetCurrentEquipWeapon(class FName ID);
	void SetCurrentEquipCostume(class FName ID);
	void SelectTabUpdate();
	void EquipCharaDecide();
	void EquipCharaMouseSetUp(ESlateVisibility Visible);
	void SetCharaInfo(const struct FPlayerInfo& Info);
	void SetUpdateCharaStatusDetail(class FName ItemId);
	void SetSelectPlayerInfo(const struct FPlayerInfo& PlayerInfo);
	void GetItemInfo(class FName ItemName, struct FItemDataCell* ItemData);
	void GetCalcPlayerParam(class FName NewItemID, class FName EquipItemID, const struct FPlayerInfo& NowPlayerInfo, struct FPlayerInfo* NewPlayerData);
	void SetPlayerInfoComparison(const struct FPlayerInfo& PlayerInfo, const struct FPlayerInfo& NewParam);
	void IsCurrentEquipAttachment(bool* Param_IsAttachment);
	void SetHelpMessage();
	void SetupGuideWidget(bool ViewFlag, bool RemoveFlag, bool DetailFlag, bool SortFlag, bool FilterFlag);
	void GetEquipCategory(int32 Type, int32 ID, EItemCategory* Category);
	void IsSameCategory(EItemCategory Category1, EItemCategory Category2, bool* IsSame);
	void GetEquipID(int32 Type, int32 BaseID, class FName* ID);
	void GetEquipNum(int32 Type, int32 ID, int32* Num);
	void GetEquipNumWeapon(int32 ID, int32* Num);
	void GetEquipNumAccessory(int32 ID, int32* Num);
	void GetEquipNumCostume(int32 ID, int32* Num);
	void GetEquipNumAttachment(int32 ID, int32* Num);
	void InitOpenMenu();
	void InitChangeTab();
	void OpenItemList(bool IsStartSelect);
	void SetupLockSelectCharaList();
	void UpdateLockChara();
	void UpdateCurrentCharaInfo();
	void IsAttachment(EItemCategory CheckId, bool* Param_IsAttachment);
	void IncSortIndex(bool* IsChange);
	void SetupItemList(bool IsOpenItemList);
	void IsAttachmentCategoryAlreadyEquip(struct FPlayerInfo& CharaInfo, int32 SwapIndex, EItemCategory CheckCategory, bool* IsAlreadyEquip);
	void UpdateCheckEquipChange();
	void UpdateChangeEquip();
	void StartCheck(int32 Type);
	void RemoveSameAttachment(class FName& BaseID);
	void StartWarning();
	void IsCurrentEquipPlugin(bool* IsPlugin);
	void RemoveSamePlugin(class FName& BaseID);
	void UpdateWarning();
	void UpdateSortBackupIndex();
	void Get_Sort_Backup_Index(int32* Param_Index);
	void IsEnableAttachmentFilter(EItemCategory CheckCategory, bool* IsEnable);
	void IsOnlyPlayer(class FName ItemId, bool* IsOnly);
	void ChangeAttachment3DModel();
	void IsNPCLeaderUnableItem(class FName ItemId, bool* IsUnable);
	void SetupDefaultParts();
	void UpdateItemListCursor();

	void IsCurrentEquipWeaponSkin(bool* IsWeaponSkin) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WB_ui_Equip_C">();
	}
	static class UWB_ui_Equip_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWB_ui_Equip_C>();
	}
};
static_assert(alignof(UWB_ui_Equip_C) == 0x000008, "Wrong alignment on UWB_ui_Equip_C");
static_assert(sizeof(UWB_ui_Equip_C) == 0x000780, "Wrong size on UWB_ui_Equip_C");
static_assert(offsetof(UWB_ui_Equip_C, UberGraphFrame) == 0x0003B0, "Member 'UWB_ui_Equip_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWB_ui_Equip_C, Info_window_out) == 0x0003B8, "Member 'UWB_ui_Equip_C::Info_window_out' has a wrong offset!");
static_assert(offsetof(UWB_ui_Equip_C, Info_window_in) == 0x0003C0, "Member 'UWB_ui_Equip_C::Info_window_in' has a wrong offset!");
static_assert(offsetof(UWB_ui_Equip_C, Info_window) == 0x0003C8, "Member 'UWB_ui_Equip_C::Info_window' has a wrong offset!");
static_assert(offsetof(UWB_ui_Equip_C, Chanege_default) == 0x0003D0, "Member 'UWB_ui_Equip_C::Chanege_default' has a wrong offset!");
static_assert(offsetof(UWB_ui_Equip_C, Change_view) == 0x0003D8, "Member 'UWB_ui_Equip_C::Change_view' has a wrong offset!");
static_assert(offsetof(UWB_ui_Equip_C, Default_view) == 0x0003E0, "Member 'UWB_ui_Equip_C::Default_view' has a wrong offset!");
static_assert(offsetof(UWB_ui_Equip_C, Out) == 0x0003E8, "Member 'UWB_ui_Equip_C::Out' has a wrong offset!");
static_assert(offsetof(UWB_ui_Equip_C, In) == 0x0003F0, "Member 'UWB_ui_Equip_C::In' has a wrong offset!");
static_assert(offsetof(UWB_ui_Equip_C, Default_none) == 0x0003F8, "Member 'UWB_ui_Equip_C::Default_none' has a wrong offset!");
static_assert(offsetof(UWB_ui_Equip_C, Default) == 0x000400, "Member 'UWB_ui_Equip_C::Default' has a wrong offset!");
static_assert(offsetof(UWB_ui_Equip_C, CanvasPanel_1) == 0x000408, "Member 'UWB_ui_Equip_C::CanvasPanel_1' has a wrong offset!");
static_assert(offsetof(UWB_ui_Equip_C, Chara_Set) == 0x000410, "Member 'UWB_ui_Equip_C::Chara_Set' has a wrong offset!");
static_assert(offsetof(UWB_ui_Equip_C, Chara_Set_Base_1) == 0x000418, "Member 'UWB_ui_Equip_C::Chara_Set_Base_1' has a wrong offset!");
static_assert(offsetof(UWB_ui_Equip_C, Chara_Set_Frame_1) == 0x000420, "Member 'UWB_ui_Equip_C::Chara_Set_Frame_1' has a wrong offset!");
static_assert(offsetof(UWB_ui_Equip_C, Line_1) == 0x000428, "Member 'UWB_ui_Equip_C::Line_1' has a wrong offset!");
static_assert(offsetof(UWB_ui_Equip_C, PG_All_Set) == 0x000430, "Member 'UWB_ui_Equip_C::PG_All_Set' has a wrong offset!");
static_assert(offsetof(UWB_ui_Equip_C, PG_Cover_Black) == 0x000438, "Member 'UWB_ui_Equip_C::PG_Cover_Black' has a wrong offset!");
static_assert(offsetof(UWB_ui_Equip_C, PG_Overlay_2) == 0x000440, "Member 'UWB_ui_Equip_C::PG_Overlay_2' has a wrong offset!");
static_assert(offsetof(UWB_ui_Equip_C, REDRetainerBox_Menu) == 0x000448, "Member 'UWB_ui_Equip_C::REDRetainerBox_Menu' has a wrong offset!");
static_assert(offsetof(UWB_ui_Equip_C, RT_1) == 0x000450, "Member 'UWB_ui_Equip_C::RT_1' has a wrong offset!");
static_assert(offsetof(UWB_ui_Equip_C, SubContents_Set) == 0x000458, "Member 'UWB_ui_Equip_C::SubContents_Set' has a wrong offset!");
static_assert(offsetof(UWB_ui_Equip_C, UniformGridPanel_0) == 0x000460, "Member 'UWB_ui_Equip_C::UniformGridPanel_0' has a wrong offset!");
static_assert(offsetof(UWB_ui_Equip_C, WB_ui_Equipages_Parts_5) == 0x000468, "Member 'UWB_ui_Equip_C::WB_ui_Equipages_Parts_5' has a wrong offset!");
static_assert(offsetof(UWB_ui_Equip_C, WB_ui_Equipages_Parts_6) == 0x000470, "Member 'UWB_ui_Equip_C::WB_ui_Equipages_Parts_6' has a wrong offset!");
static_assert(offsetof(UWB_ui_Equip_C, WB_ui_Equipages_Parts_7) == 0x000478, "Member 'UWB_ui_Equip_C::WB_ui_Equipages_Parts_7' has a wrong offset!");
static_assert(offsetof(UWB_ui_Equip_C, WB_ui_Equipages_Parts_1_1) == 0x000480, "Member 'UWB_ui_Equip_C::WB_ui_Equipages_Parts_1_1' has a wrong offset!");
static_assert(offsetof(UWB_ui_Equip_C, WB_ui_Equipages_Parts_1_2) == 0x000488, "Member 'UWB_ui_Equip_C::WB_ui_Equipages_Parts_1_2' has a wrong offset!");
static_assert(offsetof(UWB_ui_Equip_C, WB_ui_Equipages_Parts_1_3) == 0x000490, "Member 'UWB_ui_Equip_C::WB_ui_Equipages_Parts_1_3' has a wrong offset!");
static_assert(offsetof(UWB_ui_Equip_C, WB_ui_Equipages_Parts_1_4) == 0x000498, "Member 'UWB_ui_Equip_C::WB_ui_Equipages_Parts_1_4' has a wrong offset!");
static_assert(offsetof(UWB_ui_Equip_C, WB_ui_Equipages_Parts_1_5) == 0x0004A0, "Member 'UWB_ui_Equip_C::WB_ui_Equipages_Parts_1_5' has a wrong offset!");
static_assert(offsetof(UWB_ui_Equip_C, WB_ui_Equipages_Parts_1_6) == 0x0004A8, "Member 'UWB_ui_Equip_C::WB_ui_Equipages_Parts_1_6' has a wrong offset!");
static_assert(offsetof(UWB_ui_Equip_C, WB_ui_Equipages_Parts_1_7) == 0x0004B0, "Member 'UWB_ui_Equip_C::WB_ui_Equipages_Parts_1_7' has a wrong offset!");
static_assert(offsetof(UWB_ui_Equip_C, WB_ui_Equipages_Parts_1_8) == 0x0004B8, "Member 'UWB_ui_Equip_C::WB_ui_Equipages_Parts_1_8' has a wrong offset!");
static_assert(offsetof(UWB_ui_Equip_C, WB_ui_Equipages_Parts_1_9) == 0x0004C0, "Member 'UWB_ui_Equip_C::WB_ui_Equipages_Parts_1_9' has a wrong offset!");
static_assert(offsetof(UWB_ui_Equip_C, WB_ui_Equipages_Parts_1_10) == 0x0004C8, "Member 'UWB_ui_Equip_C::WB_ui_Equipages_Parts_1_10' has a wrong offset!");
static_assert(offsetof(UWB_ui_Equip_C, WB_ui_Equipages_Parts_3_1) == 0x0004D0, "Member 'UWB_ui_Equip_C::WB_ui_Equipages_Parts_3_1' has a wrong offset!");
static_assert(offsetof(UWB_ui_Equip_C, WB_ui_Equipages_Parts_3_2) == 0x0004D8, "Member 'UWB_ui_Equip_C::WB_ui_Equipages_Parts_3_2' has a wrong offset!");
static_assert(offsetof(UWB_ui_Equip_C, WB_ui_MainChoice_Parts_1) == 0x0004E0, "Member 'UWB_ui_Equip_C::WB_ui_MainChoice_Parts_1' has a wrong offset!");
static_assert(offsetof(UWB_ui_Equip_C, WB_ui_MainContents_Parts_4) == 0x0004E8, "Member 'UWB_ui_Equip_C::WB_ui_MainContents_Parts_4' has a wrong offset!");
static_assert(offsetof(UWB_ui_Equip_C, WB_ui_MainContents_Parts_5) == 0x0004F0, "Member 'UWB_ui_Equip_C::WB_ui_MainContents_Parts_5' has a wrong offset!");
static_assert(offsetof(UWB_ui_Equip_C, WB_ui_MainContents_Parts_6_1) == 0x0004F8, "Member 'UWB_ui_Equip_C::WB_ui_MainContents_Parts_6_1' has a wrong offset!");
static_assert(offsetof(UWB_ui_Equip_C, WB_ui_MainContents_Parts_6_2) == 0x000500, "Member 'UWB_ui_Equip_C::WB_ui_MainContents_Parts_6_2' has a wrong offset!");
static_assert(offsetof(UWB_ui_Equip_C, WB_ui_Party_CharaInfo_Parts_1) == 0x000508, "Member 'UWB_ui_Equip_C::WB_ui_Party_CharaInfo_Parts_1' has a wrong offset!");
static_assert(offsetof(UWB_ui_Equip_C, IsContentsChange) == 0x000510, "Member 'UWB_ui_Equip_C::IsContentsChange' has a wrong offset!");
static_assert(offsetof(UWB_ui_Equip_C, IsEnd) == 0x000511, "Member 'UWB_ui_Equip_C::IsEnd' has a wrong offset!");
static_assert(offsetof(UWB_ui_Equip_C, CharaList) == 0x000518, "Member 'UWB_ui_Equip_C::CharaList' has a wrong offset!");
static_assert(offsetof(UWB_ui_Equip_C, ModeState) == 0x000528, "Member 'UWB_ui_Equip_C::ModeState' has a wrong offset!");
static_assert(offsetof(UWB_ui_Equip_C, CursorTab) == 0x00052C, "Member 'UWB_ui_Equip_C::CursorTab' has a wrong offset!");
static_assert(offsetof(UWB_ui_Equip_C, CursorChara) == 0x000530, "Member 'UWB_ui_Equip_C::CursorChara' has a wrong offset!");
static_assert(offsetof(UWB_ui_Equip_C, CursorCategory) == 0x000534, "Member 'UWB_ui_Equip_C::CursorCategory' has a wrong offset!");
static_assert(offsetof(UWB_ui_Equip_C, CursorItem) == 0x000538, "Member 'UWB_ui_Equip_C::CursorItem' has a wrong offset!");
static_assert(offsetof(UWB_ui_Equip_C, CheckItemList) == 0x000540, "Member 'UWB_ui_Equip_C::CheckItemList' has a wrong offset!");
static_assert(offsetof(UWB_ui_Equip_C, PlayerList) == 0x000550, "Member 'UWB_ui_Equip_C::PlayerList' has a wrong offset!");
static_assert(offsetof(UWB_ui_Equip_C, SetCharaID) == 0x000560, "Member 'UWB_ui_Equip_C::SetCharaID' has a wrong offset!");
static_assert(offsetof(UWB_ui_Equip_C, SetScene) == 0x000570, "Member 'UWB_ui_Equip_C::SetScene' has a wrong offset!");
static_assert(offsetof(UWB_ui_Equip_C, SetSelectEquip) == 0x000580, "Member 'UWB_ui_Equip_C::SetSelectEquip' has a wrong offset!");
static_assert(offsetof(UWB_ui_Equip_C, HideScene) == 0x000590, "Member 'UWB_ui_Equip_C::HideScene' has a wrong offset!");
static_assert(offsetof(UWB_ui_Equip_C, TextWidgetHelp) == 0x0005A0, "Member 'UWB_ui_Equip_C::TextWidgetHelp' has a wrong offset!");
static_assert(offsetof(UWB_ui_Equip_C, GuideWidget) == 0x0005A8, "Member 'UWB_ui_Equip_C::GuideWidget' has a wrong offset!");
static_assert(offsetof(UWB_ui_Equip_C, TabList) == 0x0005B0, "Member 'UWB_ui_Equip_C::TabList' has a wrong offset!");
static_assert(offsetof(UWB_ui_Equip_C, IsChangeTab) == 0x0005C0, "Member 'UWB_ui_Equip_C::IsChangeTab' has a wrong offset!");
static_assert(offsetof(UWB_ui_Equip_C, BackupModeState) == 0x0005C4, "Member 'UWB_ui_Equip_C::BackupModeState' has a wrong offset!");
static_assert(offsetof(UWB_ui_Equip_C, ViewerState) == 0x0005C8, "Member 'UWB_ui_Equip_C::ViewerState' has a wrong offset!");
static_assert(offsetof(UWB_ui_Equip_C, StartViewMode) == 0x0005D0, "Member 'UWB_ui_Equip_C::StartViewMode' has a wrong offset!");
static_assert(offsetof(UWB_ui_Equip_C, EndViewMode) == 0x0005E0, "Member 'UWB_ui_Equip_C::EndViewMode' has a wrong offset!");
static_assert(offsetof(UWB_ui_Equip_C, SetCharaMoveMode) == 0x0005F0, "Member 'UWB_ui_Equip_C::SetCharaMoveMode' has a wrong offset!");
static_assert(offsetof(UWB_ui_Equip_C, IsMouseInit) == 0x000600, "Member 'UWB_ui_Equip_C::IsMouseInit' has a wrong offset!");
static_assert(offsetof(UWB_ui_Equip_C, CurrentPlayerInfoBefore) == 0x000604, "Member 'UWB_ui_Equip_C::CurrentPlayerInfoBefore' has a wrong offset!");
static_assert(offsetof(UWB_ui_Equip_C, ChangeSelectListCursor) == 0x0006D8, "Member 'UWB_ui_Equip_C::ChangeSelectListCursor' has a wrong offset!");
static_assert(offsetof(UWB_ui_Equip_C, SetupEquipAllRequest) == 0x0006E8, "Member 'UWB_ui_Equip_C::SetupEquipAllRequest' has a wrong offset!");
static_assert(offsetof(UWB_ui_Equip_C, IsChangeEquip) == 0x0006F8, "Member 'UWB_ui_Equip_C::IsChangeEquip' has a wrong offset!");
static_assert(offsetof(UWB_ui_Equip_C, IsChangeChara) == 0x0006F9, "Member 'UWB_ui_Equip_C::IsChangeChara' has a wrong offset!");
static_assert(offsetof(UWB_ui_Equip_C, SortIndex) == 0x0006FC, "Member 'UWB_ui_Equip_C::SortIndex' has a wrong offset!");
static_assert(offsetof(UWB_ui_Equip_C, FilterIndex) == 0x000700, "Member 'UWB_ui_Equip_C::FilterIndex' has a wrong offset!");
static_assert(offsetof(UWB_ui_Equip_C, IsCompare) == 0x000704, "Member 'UWB_ui_Equip_C::IsCompare' has a wrong offset!");
static_assert(offsetof(UWB_ui_Equip_C, SetPopupMode) == 0x000708, "Member 'UWB_ui_Equip_C::SetPopupMode' has a wrong offset!");
static_assert(offsetof(UWB_ui_Equip_C, WarningState) == 0x000718, "Member 'UWB_ui_Equip_C::WarningState' has a wrong offset!");
static_assert(offsetof(UWB_ui_Equip_C, GraphicUpdateID) == 0x00071C, "Member 'UWB_ui_Equip_C::GraphicUpdateID' has a wrong offset!");
static_assert(offsetof(UWB_ui_Equip_C, SortBackupList) == 0x000728, "Member 'UWB_ui_Equip_C::SortBackupList' has a wrong offset!");
static_assert(offsetof(UWB_ui_Equip_C, EquipParameter) == 0x000738, "Member 'UWB_ui_Equip_C::EquipParameter' has a wrong offset!");
static_assert(offsetof(UWB_ui_Equip_C, EquipParameter2) == 0x000748, "Member 'UWB_ui_Equip_C::EquipParameter2' has a wrong offset!");
static_assert(offsetof(UWB_ui_Equip_C, FilterParameter) == 0x000758, "Member 'UWB_ui_Equip_C::FilterParameter' has a wrong offset!");
static_assert(offsetof(UWB_ui_Equip_C, ChangeSelectListCursorAllAttachment) == 0x000768, "Member 'UWB_ui_Equip_C::ChangeSelectListCursorAllAttachment' has a wrong offset!");
static_assert(offsetof(UWB_ui_Equip_C, IsEnableWeaponSkinWork) == 0x000778, "Member 'UWB_ui_Equip_C::IsEnableWeaponSkinWork' has a wrong offset!");
static_assert(offsetof(UWB_ui_Equip_C, FlagKasane) == 0x000779, "Member 'UWB_ui_Equip_C::FlagKasane' has a wrong offset!");

}

