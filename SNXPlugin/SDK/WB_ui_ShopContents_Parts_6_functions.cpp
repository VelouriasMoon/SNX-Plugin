#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_ui_ShopContents_Parts_6

#include "Basic.hpp"

#include "WB_ui_ShopContents_Parts_6_classes.hpp"
#include "WB_ui_ShopContents_Parts_6_parameters.hpp"


namespace SDK
{

// Function WB_ui_ShopContents_Parts_6.WB_ui_ShopContents_Parts_6_C.StateNone
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   SubState                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_ui_ShopContents_Parts_6_C::StateNone(int32 SubState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_ShopContents_Parts_6_C", "StateNone");

	Params::WB_ui_ShopContents_Parts_6_C_StateNone Parms{};

	Parms.SubState = SubState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_ui_ShopContents_Parts_6.WB_ui_ShopContents_Parts_6_C.StateLoop
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   SubState                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_ui_ShopContents_Parts_6_C::StateLoop(int32 SubState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_ShopContents_Parts_6_C", "StateLoop");

	Params::WB_ui_ShopContents_Parts_6_C_StateLoop Parms{};

	Parms.SubState = SubState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_ui_ShopContents_Parts_6.WB_ui_ShopContents_Parts_6_C.UpdateShopFontOutlineMaterial
// (Public, BlueprintCallable, BlueprintEvent)

void UWB_ui_ShopContents_Parts_6_C::UpdateShopFontOutlineMaterial()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_ui_ShopContents_Parts_6_C", "UpdateShopFontOutlineMaterial");

	UObject::ProcessEvent(Func, nullptr);
}

}

